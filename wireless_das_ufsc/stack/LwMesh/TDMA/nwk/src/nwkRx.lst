   1               		.file	"nwkRx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	nwkFramePayloadSize:
  13               	.LFB65:
  14               		.file 1 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
   1:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /**
   2:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \file nwkFrame.h
   3:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   4:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \brief Frame buffers management interface
   5:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   6:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   8:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  10:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  13:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  16:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  20:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  23:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  26:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  38:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  40:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  41:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  42:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  43:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*
  44:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  46:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  48:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  49:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #ifndef _NWK_FRAME_H_
  50:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define _NWK_FRAME_H_
  51:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  52:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Includes ---------------------------------------------------------------*/
  53:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include <stdint.h>
  54:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include "compiler.h"
  55:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  56:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Definitions ------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define NWK_FRAME_MAX_PAYLOAD_SIZE   127
  58:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  59:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Types ------------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_SET(1)
  61:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameHeader_t {
  62:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  63:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  64:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstPanId;
  65:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstAddr;
  66:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  67:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  68:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  69:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t ackRequest : 1;
  70:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t security   : 1;
  71:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t linkLocal  : 1;
  72:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t multicast  : 1;
  73:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t beacon     : 1;
  74:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved   : 3;
  75:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} nwkFcf;
  76:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t nwkSeq;
  77:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkSrcAddr;
  78:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkDstAddr;
  79:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  80:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkSrcEndpoint : 4;
  81:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkDstEndpoint : 4;
  82:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
  83:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameHeader_t;
  84:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  85:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeader_t {
  86:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  87:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  88:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcPanId;
  89:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  90:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
  91:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
  92:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t beaconOrder			: 4;
  93:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t superframeOrder		: 4;
  94:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t finalCAPslot			: 4;
  95:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t BatteryLifeExtension	: 1;
  96:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t Reserved				: 1;
  97:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t PANCoordinator			: 1;
  98:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t AssociationPermit		: 1;
  99:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSFS;
 100:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macGTS;
 101:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macPending;
 102:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeader_t;
 103:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 104:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameMulticastHeader_t {
 105:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nonMemberRadius    : 4;
 106:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxNonMemberRadius : 4;
 107:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t memberRadius       : 4;
 108:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxMemberRadius    : 4;
 109:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameMulticastHeader_t;
 110:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 111:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 112:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeaderLLDN_t {
 113:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/******* MHR *****/
 114:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// struct
 115:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// {
 116:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameType 				: 3;
 117:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SecurityEnabled 	: 1;
 118:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameVersion			: 1;
 119:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t ackRequest				: 1;
 120:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SubFrameType			: 2;
 121:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// } macFcf;
 122:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 123:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 124:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 125:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 126:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 127:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 128:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 129:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 130:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 131:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 132:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/****** MAC Payload *******/
 133:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 134:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 135:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txState 				: 3;
 136:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txDir 					: 1;
 137:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved				: 1;
 138:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t numMgmtTimeslots: 3; // number of managment time slots
 139:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 																 // uplink and downlink must be equal
 140:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  } Flags;
 141:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 142:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t PanId;
 143:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t confSeqNumber;
 144:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t TimeSlotSize;
 145:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 146:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 147:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeaderLLDN_t;
 148:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 149:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameGeneralHeaderLLDN_t {
 150:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 151:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 152:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 153:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 154:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 155:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 156:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 157:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 158:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 159:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 160:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameGeneralHeaderLLDN_t;
 161:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 162:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct NwkFrame_t {
 163:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t state;
 164:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t size;
 165:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 166:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 167:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameHeader_t header;
 168:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeader_t beacon;
 169:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeaderLLDN_t LLbeacon;
 170:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameGeneralHeaderLLDN_t LLgeneral;
 171:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t data[NWK_FRAME_MAX_PAYLOAD_SIZE];
 172:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 173:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 174:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t *payload;
 175:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 176:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 177:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 178:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t lqi;
 179:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			int8_t rssi;
 180:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} rx;
 181:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 182:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 183:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t status;
 184:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint16_t timeout;
 185:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t control;
 186:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			void (*confirm)(struct NwkFrame_t *frame);
 187:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} tx;
 188:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 189:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrame_t;
 190:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_RESET()
 191:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Prototypes -------------------------------------------------------------*/
 192:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameInit(void);
 193:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc(void);
 194:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame);
 195:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameFree(NwkFrame_t *frame);
 196:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);
 197:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameCommandInit(NwkFrame_t *frame);
 198:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 199:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Implementations --------------------------------------------------------*/
 200:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 201:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*************************************************************************//**
 202:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** *****************************************************************************/
 203:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** static inline uint8_t nwkFramePayloadSize(NwkFrame_t *frame)
 204:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** {
  15               		.loc 1 204 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25 0004 00D0      		rcall .
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 6
  28 0006 CDB7      		in r28,__SP_L__
  29 0008 DEB7      		in r29,__SP_H__
  30               	.LCFI3:
  31               		.cfi_def_cfa_register 28
  32               	/* prologue: function */
  33               	/* frame size = 2 */
  34               	/* stack size = 4 */
  35               	.L__stack_usage = 4
  36 000a 9A83      		std Y+2,r25
  37 000c 8983      		std Y+1,r24
 205:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	return frame->size - (frame->payload - frame->data);
  38               		.loc 1 205 0
  39 000e 8981      		ldd r24,Y+1
  40 0010 9A81      		ldd r25,Y+2
  41 0012 FC01      		movw r30,r24
  42 0014 4181      		ldd r20,Z+1
  43 0016 8981      		ldd r24,Y+1
  44 0018 9A81      		ldd r25,Y+2
  45 001a 8F57      		subi r24,127
  46 001c 9F4F      		sbci r25,-1
  47 001e FC01      		movw r30,r24
  48 0020 8081      		ld r24,Z
  49 0022 9181      		ldd r25,Z+1
  50 0024 9C01      		movw r18,r24
  51 0026 8981      		ldd r24,Y+1
  52 0028 9A81      		ldd r25,Y+2
  53 002a 0296      		adiw r24,2
  54 002c B901      		movw r22,r18
  55 002e 681B      		sub r22,r24
  56 0030 790B      		sbc r23,r25
  57 0032 CB01      		movw r24,r22
  58 0034 742F      		mov r23,r20
  59 0036 781B      		sub r23,r24
  60 0038 872F      		mov r24,r23
  61               	/* epilogue start */
 206:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** }
  62               		.loc 1 206 0
  63 003a 0F90      		pop __tmp_reg__
  64 003c 0F90      		pop __tmp_reg__
  65 003e DF91      		pop r29
  66 0040 CF91      		pop r28
  67 0042 0895      		ret
  68               		.cfi_endproc
  69               	.LFE65:
  71               		.section	.bss.nwkRxDuplicateRejectionTable,"aw",@nobits
  74               	nwkRxDuplicateRejectionTable:
  75 0000 0000 0000 		.zero	250
  75      0000 0000 
  75      0000 0000 
  75      0000 0000 
  75      0000 0000 
  76               		.section	.bss.nwkRxAckControl,"aw",@nobits
  79               	nwkRxAckControl:
  80 0000 00        		.zero	1
  81               		.section	.bss.nwkRxDuplicateRejectionTimer,"aw",@nobits
  84               	nwkRxDuplicateRejectionTimer:
  85 0000 0000 0000 		.zero	13
  85      0000 0000 
  85      0000 0000 
  85      00
  86               		.text
  87               	.global	nwkRxInit
  89               	nwkRxInit:
  90               	.LFB66:
  91               		.file 2 "../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \file nwkRx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \brief Receive routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkGroup.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRoute.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkCommand.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkSecurity.h"
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRouteDiscovery.h"
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Definitions ------------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL   100 /* ms */
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define DUPLICATE_REJECTION_TTL	\
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	((NWK_DUPLICATE_REJECTION_TTL /	\
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL) + 1)
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_SERVICE_ENDPOINT_ID    0
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Types ------------------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** enum {
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_RECEIVED = 0x20,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_DECRYPT  = 0x21,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_INDICATE = 0x22,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_ROUTE    = 0x23,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_FINISH   = 0x24,
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_BEACON   = 0x25,
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLBEACON 	= 0x26,
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLCOMMAND 	= 0x27,
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** };
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** typedef struct NwkDuplicateRejectionEntry_t {
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint16_t src;
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t seq;
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t mask;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t ttl;
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** } NwkDuplicateRejectionEntry_t;
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Prototypes -------------------------------------------------------------*/
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer);
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind);
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Variables --------------------------------------------------------------*/
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static NwkDuplicateRejectionEntry_t nwkRxDuplicateRejectionTable[
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DUPLICATE_REJECTION_TABLE_SIZE];
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static uint8_t nwkRxAckControl;
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static SYS_Timer_t nwkRxDuplicateRejectionTimer;
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Implementations --------------------------------------------------------*/
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Initializes the Rx module
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxInit(void)
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
  92               		.loc 2 108 0
  93               		.cfi_startproc
  94 0044 CF93      		push r28
  95               	.LCFI4:
  96               		.cfi_def_cfa_offset 3
  97               		.cfi_offset 28, -2
  98 0046 DF93      		push r29
  99               	.LCFI5:
 100               		.cfi_def_cfa_offset 4
 101               		.cfi_offset 29, -3
 102 0048 1F92      		push __zero_reg__
 103               	.LCFI6:
 104               		.cfi_def_cfa_offset 5
 105 004a CDB7      		in r28,__SP_L__
 106 004c DEB7      		in r29,__SP_H__
 107               	.LCFI7:
 108               		.cfi_def_cfa_register 28
 109               	/* prologue: function */
 110               	/* frame size = 1 */
 111               	/* stack size = 3 */
 112               	.L__stack_usage = 3
 113               	.LBB2:
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 114               		.loc 2 109 0
 115 004e 1982      		std Y+1,__zero_reg__
 116 0050 00C0      		rjmp .L4
 117               	.L5:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxDuplicateRejectionTable[i].ttl = 0;
 118               		.loc 2 110 0 discriminator 3
 119 0052 8981      		ldd r24,Y+1
 120 0054 282F      		mov r18,r24
 121 0056 30E0      		ldi r19,0
 122 0058 C901      		movw r24,r18
 123 005a 880F      		lsl r24
 124 005c 991F      		rol r25
 125 005e 880F      		lsl r24
 126 0060 991F      		rol r25
 127 0062 820F      		add r24,r18
 128 0064 931F      		adc r25,r19
 129 0066 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 130 0068 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 131 006a FC01      		movw r30,r24
 132 006c 1082      		st Z,__zero_reg__
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 133               		.loc 2 109 0 discriminator 3
 134 006e 8981      		ldd r24,Y+1
 135 0070 8F5F      		subi r24,lo8(-(1))
 136 0072 8983      		std Y+1,r24
 137               	.L4:
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 138               		.loc 2 109 0 is_stmt 0 discriminator 1
 139 0074 8981      		ldd r24,Y+1
 140 0076 8233      		cpi r24,lo8(50)
 141 0078 00F0      		brlo .L5
 142               	.LBE2:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.interval
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL;
 143               		.loc 2 114 0 is_stmt 1
 144 007a 84E6      		ldi r24,lo8(100)
 145 007c 90E0      		ldi r25,0
 146 007e A0E0      		ldi r26,0
 147 0080 B0E0      		ldi r27,0
 148 0082 8093 0000 		sts nwkRxDuplicateRejectionTimer+6,r24
 149 0086 9093 0000 		sts nwkRxDuplicateRejectionTimer+6+1,r25
 150 008a A093 0000 		sts nwkRxDuplicateRejectionTimer+6+2,r26
 151 008e B093 0000 		sts nwkRxDuplicateRejectionTimer+6+3,r27
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE;
 152               		.loc 2 115 0
 153 0092 1092 0000 		sts nwkRxDuplicateRejectionTimer+10,__zero_reg__
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.handler
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= nwkRxDuplicateRejectionTimerHandler;
 154               		.loc 2 117 0
 155 0096 80E0      		ldi r24,lo8(gs(nwkRxDuplicateRejectionTimerHandler))
 156 0098 90E0      		ldi r25,hi8(gs(nwkRxDuplicateRejectionTimerHandler))
 157 009a 9093 0000 		sts nwkRxDuplicateRejectionTimer+11+1,r25
 158 009e 8093 0000 		sts nwkRxDuplicateRejectionTimer+11,r24
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_OpenEndpoint(NWK_SERVICE_ENDPOINT_ID, nwkRxSeriveDataInd);
 159               		.loc 2 119 0
 160 00a2 60E0      		ldi r22,lo8(gs(nwkRxSeriveDataInd))
 161 00a4 70E0      		ldi r23,hi8(gs(nwkRxSeriveDataInd))
 162 00a6 80E0      		ldi r24,0
 163 00a8 0E94 0000 		call NWK_OpenEndpoint
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 164               		.loc 2 120 0
 165 00ac 0000      		nop
 166               	/* epilogue start */
 167 00ae 0F90      		pop __tmp_reg__
 168 00b0 DF91      		pop r29
 169 00b2 CF91      		pop r28
 170 00b4 0895      		ret
 171               		.cfi_endproc
 172               	.LFE66:
 174               		.weak	PHY_DataInd
 176               	PHY_DataInd:
 177               	.LFB67:
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void __attribute__((weak)) PHY_DataInd(PHY_DataInd_t *ind)
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 178               		.loc 2 125 0
 179               		.cfi_startproc
 180 00b6 CF93      		push r28
 181               	.LCFI8:
 182               		.cfi_def_cfa_offset 3
 183               		.cfi_offset 28, -2
 184 00b8 DF93      		push r29
 185               	.LCFI9:
 186               		.cfi_def_cfa_offset 4
 187               		.cfi_offset 29, -3
 188 00ba 00D0      		rcall .
 189 00bc 00D0      		rcall .
 190               	.LCFI10:
 191               		.cfi_def_cfa_offset 8
 192 00be CDB7      		in r28,__SP_L__
 193 00c0 DEB7      		in r29,__SP_H__
 194               	.LCFI11:
 195               		.cfi_def_cfa_register 28
 196               	/* prologue: function */
 197               	/* frame size = 4 */
 198               	/* stack size = 6 */
 199               	.L__stack_usage = 6
 200 00c2 9C83      		std Y+4,r25
 201 00c4 8B83      		std Y+3,r24
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame;
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-Beacon frame
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(0x0c == ind->data[0])
 202               		.loc 2 129 0
 203 00c6 8B81      		ldd r24,Y+3
 204 00c8 9C81      		ldd r25,Y+4
 205 00ca FC01      		movw r30,r24
 206 00cc 8081      		ld r24,Z
 207 00ce 9181      		ldd r25,Z+1
 208 00d0 FC01      		movw r30,r24
 209 00d2 8081      		ld r24,Z
 210 00d4 8C30      		cpi r24,lo8(12)
 211 00d6 01F4      		brne .L7
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameBeaconHeaderLLDN_t))
 212               		.loc 2 131 0
 213 00d8 8B81      		ldd r24,Y+3
 214 00da 9C81      		ldd r25,Y+4
 215 00dc FC01      		movw r30,r24
 216 00de 8281      		ldd r24,Z+2
 217 00e0 8730      		cpi r24,lo8(7)
 218 00e2 00F0      		brlo .+2
 219 00e4 00C0      		rjmp .L8
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 220               		.loc 2 133 0
 221 00e6 00C0      		rjmp .L6
 222               	.L7:
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-MAC Command frame
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0xcc == ind->data[0])
 223               		.loc 2 137 0
 224 00e8 8B81      		ldd r24,Y+3
 225 00ea 9C81      		ldd r25,Y+4
 226 00ec FC01      		movw r30,r24
 227 00ee 8081      		ld r24,Z
 228 00f0 9181      		ldd r25,Z+1
 229 00f2 FC01      		movw r30,r24
 230 00f4 8081      		ld r24,Z
 231 00f6 8C3C      		cpi r24,lo8(-52)
 232 00f8 01F4      		brne .L10
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameGeneralHeaderLLDN_t))
 233               		.loc 2 139 0
 234 00fa 8B81      		ldd r24,Y+3
 235 00fc 9C81      		ldd r25,Y+4
 236 00fe FC01      		movw r30,r24
 237 0100 8281      		ldd r24,Z+2
 238 0102 8330      		cpi r24,lo8(3)
 239 0104 00F0      		brlo .+2
 240 0106 00C0      		rjmp .L8
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 241               		.loc 2 141 0
 242 0108 00C0      		rjmp .L6
 243               	.L10:
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x88 == ind->data[1])
 244               		.loc 2 144 0
 245 010a 8B81      		ldd r24,Y+3
 246 010c 9C81      		ldd r25,Y+4
 247 010e FC01      		movw r30,r24
 248 0110 8081      		ld r24,Z
 249 0112 9181      		ldd r25,Z+1
 250 0114 0196      		adiw r24,1
 251 0116 FC01      		movw r30,r24
 252 0118 8081      		ld r24,Z
 253 011a 8838      		cpi r24,lo8(-120)
 254 011c 01F4      		brne .L11
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x61 != ind->data[0] && 0x41 != ind->data[0]) || ind->size < sizeof(NwkFrameHeader_t))
 255               		.loc 2 146 0
 256 011e 8B81      		ldd r24,Y+3
 257 0120 9C81      		ldd r25,Y+4
 258 0122 FC01      		movw r30,r24
 259 0124 8081      		ld r24,Z
 260 0126 9181      		ldd r25,Z+1
 261 0128 FC01      		movw r30,r24
 262 012a 8081      		ld r24,Z
 263 012c 8136      		cpi r24,lo8(97)
 264 012e 01F0      		breq .L12
 265               		.loc 2 146 0 is_stmt 0 discriminator 1
 266 0130 8B81      		ldd r24,Y+3
 267 0132 9C81      		ldd r25,Y+4
 268 0134 FC01      		movw r30,r24
 269 0136 8081      		ld r24,Z
 270 0138 9181      		ldd r25,Z+1
 271 013a FC01      		movw r30,r24
 272 013c 8081      		ld r24,Z
 273 013e 8134      		cpi r24,lo8(65)
 274 0140 01F0      		breq .+2
 275 0142 00C0      		rjmp .L25
 276               	.L12:
 277               		.loc 2 146 0 discriminator 3
 278 0144 8B81      		ldd r24,Y+3
 279 0146 9C81      		ldd r25,Y+4
 280 0148 FC01      		movw r30,r24
 281 014a 8281      		ldd r24,Z+2
 282 014c 8031      		cpi r24,lo8(16)
 283 014e 00F4      		brsh .L8
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 284               		.loc 2 148 0 is_stmt 1
 285 0150 00C0      		rjmp .L25
 286               	.L11:
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x80 == ind->data[1])
 287               		.loc 2 151 0
 288 0152 8B81      		ldd r24,Y+3
 289 0154 9C81      		ldd r25,Y+4
 290 0156 FC01      		movw r30,r24
 291 0158 8081      		ld r24,Z
 292 015a 9181      		ldd r25,Z+1
 293 015c 0196      		adiw r24,1
 294 015e FC01      		movw r30,r24
 295 0160 8081      		ld r24,Z
 296 0162 8038      		cpi r24,lo8(-128)
 297 0164 01F0      		breq .+2
 298 0166 00C0      		rjmp .L26
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x00 != ind->data[0]) || ind->size < (sizeof(NwkFrameBeaconHeader_t)))
 299               		.loc 2 153 0
 300 0168 8B81      		ldd r24,Y+3
 301 016a 9C81      		ldd r25,Y+4
 302 016c FC01      		movw r30,r24
 303 016e 8081      		ld r24,Z
 304 0170 9181      		ldd r25,Z+1
 305 0172 FC01      		movw r30,r24
 306 0174 8081      		ld r24,Z
 307 0176 8823      		tst r24
 308 0178 01F0      		breq .+2
 309 017a 00C0      		rjmp .L27
 310               		.loc 2 153 0 is_stmt 0 discriminator 1
 311 017c 8B81      		ldd r24,Y+3
 312 017e 9C81      		ldd r25,Y+4
 313 0180 FC01      		movw r30,r24
 314 0182 8281      		ldd r24,Z+2
 315 0184 8B30      		cpi r24,lo8(11)
 316 0186 00F4      		brsh .+2
 317 0188 00C0      		rjmp .L27
 318               	.L8:
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(ind->data[1] == 0x88 || ind->data[1] == 0x80)
 319               		.loc 2 163 0 is_stmt 1
 320 018a 8B81      		ldd r24,Y+3
 321 018c 9C81      		ldd r25,Y+4
 322 018e FC01      		movw r30,r24
 323 0190 8081      		ld r24,Z
 324 0192 9181      		ldd r25,Z+1
 325 0194 0196      		adiw r24,1
 326 0196 FC01      		movw r30,r24
 327 0198 8081      		ld r24,Z
 328 019a 8838      		cpi r24,lo8(-120)
 329 019c 01F0      		breq .L16
 330               		.loc 2 163 0 is_stmt 0 discriminator 1
 331 019e 8B81      		ldd r24,Y+3
 332 01a0 9C81      		ldd r25,Y+4
 333 01a2 FC01      		movw r30,r24
 334 01a4 8081      		ld r24,Z
 335 01a6 9181      		ldd r25,Z+1
 336 01a8 0196      		adiw r24,1
 337 01aa FC01      		movw r30,r24
 338 01ac 8081      		ld r24,Z
 339 01ae 8038      		cpi r24,lo8(-128)
 340 01b0 01F4      		brne .L17
 341               	.L16:
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc())) {
 342               		.loc 2 165 0 is_stmt 1
 343 01b2 0E94 0000 		call nwkFrameAlloc
 344 01b6 9A83      		std Y+2,r25
 345 01b8 8983      		std Y+1,r24
 346 01ba 8981      		ldd r24,Y+1
 347 01bc 9A81      		ldd r25,Y+2
 348 01be 892B      		or r24,r25
 349 01c0 01F4      		brne .+2
 350 01c2 00C0      		rjmp .L28
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame received is NwkFrameHeader change state to Receveid
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is a 802.15.4 beacon change state to Beacon
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = ((0x88 == ind->data[1]) ? NWK_RX_STATE_RECEIVED : NWK_RX_STATE_BEACON);
 351               		.loc 2 170 0
 352 01c4 8B81      		ldd r24,Y+3
 353 01c6 9C81      		ldd r25,Y+4
 354 01c8 FC01      		movw r30,r24
 355 01ca 8081      		ld r24,Z
 356 01cc 9181      		ldd r25,Z+1
 357 01ce 0196      		adiw r24,1
 358 01d0 FC01      		movw r30,r24
 359 01d2 8081      		ld r24,Z
 360 01d4 8838      		cpi r24,lo8(-120)
 361 01d6 01F4      		brne .L19
 362               		.loc 2 170 0 is_stmt 0 discriminator 1
 363 01d8 20E2      		ldi r18,lo8(32)
 364 01da 00C0      		rjmp .L20
 365               	.L19:
 366               		.loc 2 170 0 discriminator 2
 367 01dc 25E2      		ldi r18,lo8(37)
 368               	.L20:
 369               		.loc 2 170 0 discriminator 4
 370 01de 8981      		ldd r24,Y+1
 371 01e0 9A81      		ldd r25,Y+2
 372 01e2 FC01      		movw r30,r24
 373 01e4 2083      		st Z,r18
 374 01e6 00C0      		rjmp .L21
 375               	.L17:
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// allocate frame buffer according to received frame
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(ind->data[0] == 0x0c)
 376               		.loc 2 173 0 is_stmt 1
 377 01e8 8B81      		ldd r24,Y+3
 378 01ea 9C81      		ldd r25,Y+4
 379 01ec FC01      		movw r30,r24
 380 01ee 8081      		ld r24,Z
 381 01f0 9181      		ldd r25,Z+1
 382 01f2 FC01      		movw r30,r24
 383 01f4 8081      		ld r24,Z
 384 01f6 8C30      		cpi r24,lo8(12)
 385 01f8 01F4      		brne .L22
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-Beacon frame
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(true))){
 386               		.loc 2 176 0
 387 01fa 81E0      		ldi r24,lo8(1)
 388 01fc 0E94 0000 		call nwkFrameAlloc_LLDN
 389 0200 9A83      		std Y+2,r25
 390 0202 8983      		std Y+1,r24
 391 0204 8981      		ldd r24,Y+1
 392 0206 9A81      		ldd r25,Y+2
 393 0208 892B      		or r24,r25
 394 020a 01F4      		brne .+2
 395 020c 00C0      		rjmp .L29
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-Beacon change state to LLBEACON
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLBEACON;
 396               		.loc 2 180 0
 397 020e 8981      		ldd r24,Y+1
 398 0210 9A81      		ldd r25,Y+2
 399 0212 26E2      		ldi r18,lo8(38)
 400 0214 FC01      		movw r30,r24
 401 0216 2083      		st Z,r18
 402 0218 00C0      		rjmp .L21
 403               	.L22:
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-MAC command or LL-Data frame
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(false))){
 404               		.loc 2 185 0
 405 021a 80E0      		ldi r24,0
 406 021c 0E94 0000 		call nwkFrameAlloc_LLDN
 407 0220 9A83      		std Y+2,r25
 408 0222 8983      		std Y+1,r24
 409 0224 8981      		ldd r24,Y+1
 410 0226 9A81      		ldd r25,Y+2
 411 0228 892B      		or r24,r25
 412 022a 01F0      		breq .L30
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLCOMMAND;
 413               		.loc 2 188 0
 414 022c 8981      		ldd r24,Y+1
 415 022e 9A81      		ldd r25,Y+2
 416 0230 27E2      		ldi r18,lo8(39)
 417 0232 FC01      		movw r30,r24
 418 0234 2083      		st Z,r18
 419               	.L21:
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size = ind->size;
 420               		.loc 2 191 0
 421 0236 8B81      		ldd r24,Y+3
 422 0238 9C81      		ldd r25,Y+4
 423 023a FC01      		movw r30,r24
 424 023c 2281      		ldd r18,Z+2
 425 023e 8981      		ldd r24,Y+1
 426 0240 9A81      		ldd r25,Y+2
 427 0242 FC01      		movw r30,r24
 428 0244 2183      		std Z+1,r18
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.lqi = ind->lqi;
 429               		.loc 2 192 0
 430 0246 8B81      		ldd r24,Y+3
 431 0248 9C81      		ldd r25,Y+4
 432 024a FC01      		movw r30,r24
 433 024c 2381      		ldd r18,Z+3
 434 024e 8981      		ldd r24,Y+1
 435 0250 9A81      		ldd r25,Y+2
 436 0252 8D57      		subi r24,125
 437 0254 9F4F      		sbci r25,-1
 438 0256 FC01      		movw r30,r24
 439 0258 2083      		st Z,r18
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.rssi = ind->rssi;
 440               		.loc 2 193 0
 441 025a 8B81      		ldd r24,Y+3
 442 025c 9C81      		ldd r25,Y+4
 443 025e FC01      		movw r30,r24
 444 0260 2481      		ldd r18,Z+4
 445 0262 8981      		ldd r24,Y+1
 446 0264 9A81      		ldd r25,Y+2
 447 0266 8C57      		subi r24,124
 448 0268 9F4F      		sbci r25,-1
 449 026a FC01      		movw r30,r24
 450 026c 2083      		st Z,r18
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	memcpy(frame->data, ind->data, ind->size);
 451               		.loc 2 194 0
 452 026e 8B81      		ldd r24,Y+3
 453 0270 9C81      		ldd r25,Y+4
 454 0272 FC01      		movw r30,r24
 455 0274 8281      		ldd r24,Z+2
 456 0276 482F      		mov r20,r24
 457 0278 50E0      		ldi r21,0
 458 027a 8B81      		ldd r24,Y+3
 459 027c 9C81      		ldd r25,Y+4
 460 027e FC01      		movw r30,r24
 461 0280 2081      		ld r18,Z
 462 0282 3181      		ldd r19,Z+1
 463 0284 8981      		ldd r24,Y+1
 464 0286 9A81      		ldd r25,Y+2
 465 0288 0296      		adiw r24,2
 466 028a B901      		movw r22,r18
 467 028c 0E94 0000 		call memcpy
 468 0290 00C0      		rjmp .L6
 469               	.L25:
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 470               		.loc 2 148 0
 471 0292 0000      		nop
 472 0294 00C0      		rjmp .L6
 473               	.L26:
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 474               		.loc 2 160 0
 475 0296 0000      		nop
 476 0298 00C0      		rjmp .L6
 477               	.L27:
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 478               		.loc 2 155 0
 479 029a 0000      		nop
 480 029c 00C0      		rjmp .L6
 481               	.L28:
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 482               		.loc 2 166 0
 483 029e 0000      		nop
 484 02a0 00C0      		rjmp .L6
 485               	.L29:
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 486               		.loc 2 177 0
 487 02a2 0000      		nop
 488 02a4 00C0      		rjmp .L6
 489               	.L30:
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 490               		.loc 2 186 0
 491 02a6 0000      		nop
 492               	.L6:
 493               	/* epilogue start */
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 494               		.loc 2 195 0
 495 02a8 0F90      		pop __tmp_reg__
 496 02aa 0F90      		pop __tmp_reg__
 497 02ac 0F90      		pop __tmp_reg__
 498 02ae 0F90      		pop __tmp_reg__
 499 02b0 DF91      		pop r29
 500 02b2 CF91      		pop r28
 501 02b4 0895      		ret
 502               		.cfi_endproc
 503               	.LFE67:
 506               	nwkRxSendAck:
 507               	.LFB68:
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxSendAck(NwkFrame_t *frame)
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 508               		.loc 2 201 0
 509               		.cfi_startproc
 510 02b6 CF93      		push r28
 511               	.LCFI12:
 512               		.cfi_def_cfa_offset 3
 513               		.cfi_offset 28, -2
 514 02b8 DF93      		push r29
 515               	.LCFI13:
 516               		.cfi_def_cfa_offset 4
 517               		.cfi_offset 29, -3
 518 02ba 00D0      		rcall .
 519 02bc 00D0      		rcall .
 520 02be 00D0      		rcall .
 521               	.LCFI14:
 522               		.cfi_def_cfa_offset 10
 523 02c0 CDB7      		in r28,__SP_L__
 524 02c2 DEB7      		in r29,__SP_H__
 525               	.LCFI15:
 526               		.cfi_def_cfa_register 28
 527               	/* prologue: function */
 528               	/* frame size = 6 */
 529               	/* stack size = 8 */
 530               	.L__stack_usage = 8
 531 02c4 9E83      		std Y+6,r25
 532 02c6 8D83      		std Y+5,r24
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *ack;
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkCommandAck_t *command;
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (ack = nwkFrameAlloc())) {
 533               		.loc 2 205 0
 534 02c8 0E94 0000 		call nwkFrameAlloc
 535 02cc 9A83      		std Y+2,r25
 536 02ce 8983      		std Y+1,r24
 537 02d0 8981      		ldd r24,Y+1
 538 02d2 9A81      		ldd r25,Y+2
 539 02d4 892B      		or r24,r25
 540 02d6 01F4      		brne .+2
 541 02d8 00C0      		rjmp .L34
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size += sizeof(NwkFrameHeader_t);
 542               		.loc 2 209 0
 543 02da 8D81      		ldd r24,Y+5
 544 02dc 9E81      		ldd r25,Y+6
 545 02de FC01      		movw r30,r24
 546 02e0 8181      		ldd r24,Z+1
 547 02e2 20E1      		ldi r18,lo8(16)
 548 02e4 280F      		add r18,r24
 549 02e6 8D81      		ldd r24,Y+5
 550 02e8 9E81      		ldd r25,Y+6
 551 02ea FC01      		movw r30,r24
 552 02ec 2183      		std Z+1,r18
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->payload += sizeof(NwkFrameHeader_t);
 553               		.loc 2 210 0
 554 02ee 8D81      		ldd r24,Y+5
 555 02f0 9E81      		ldd r25,Y+6
 556 02f2 8F57      		subi r24,127
 557 02f4 9F4F      		sbci r25,-1
 558 02f6 FC01      		movw r30,r24
 559 02f8 8081      		ld r24,Z
 560 02fa 9181      		ldd r25,Z+1
 561 02fc 9C01      		movw r18,r24
 562 02fe 205F      		subi r18,-16
 563 0300 3F4F      		sbci r19,-1
 564 0302 8D81      		ldd r24,Y+5
 565 0304 9E81      		ldd r25,Y+6
 566 0306 8F57      		subi r24,127
 567 0308 9F4F      		sbci r25,-1
 568 030a FC01      		movw r30,r24
 569 030c 3183      		std Z+1,r19
 570 030e 2083      		st Z,r18
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkFrameCommandInit(ack);
 571               		.loc 2 212 0
 572 0310 8981      		ldd r24,Y+1
 573 0312 9A81      		ldd r25,Y+2
 574 0314 0E94 0000 		call nwkFrameCommandInit
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->size += sizeof(NwkCommandAck_t);
 575               		.loc 2 214 0
 576 0318 8981      		ldd r24,Y+1
 577 031a 9A81      		ldd r25,Y+2
 578 031c FC01      		movw r30,r24
 579 031e 8181      		ldd r24,Z+1
 580 0320 23E0      		ldi r18,lo8(3)
 581 0322 280F      		add r18,r24
 582 0324 8981      		ldd r24,Y+1
 583 0326 9A81      		ldd r25,Y+2
 584 0328 FC01      		movw r30,r24
 585 032a 2183      		std Z+1,r18
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->tx.confirm = NULL;
 586               		.loc 2 215 0
 587 032c 8981      		ldd r24,Y+1
 588 032e 9A81      		ldd r25,Y+2
 589 0330 8957      		subi r24,121
 590 0332 9F4F      		sbci r25,-1
 591 0334 FC01      		movw r30,r24
 592 0336 1182      		std Z+1,__zero_reg__
 593 0338 1082      		st Z,__zero_reg__
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkFcf.security = frame->header.nwkFcf.security;
 594               		.loc 2 217 0
 595 033a 8D81      		ldd r24,Y+5
 596 033c 9E81      		ldd r25,Y+6
 597 033e FC01      		movw r30,r24
 598 0340 8385      		ldd r24,Z+11
 599 0342 81FB      		bst r24,1
 600 0344 2227      		clr r18
 601 0346 20F9      		bld r18,0
 602 0348 8981      		ldd r24,Y+1
 603 034a 9A81      		ldd r25,Y+2
 604 034c 2170      		andi r18,lo8(1)
 605 034e 220F      		lsl r18
 606 0350 FC01      		movw r30,r24
 607 0352 3385      		ldd r19,Z+11
 608 0354 3D7F      		andi r19,lo8(-3)
 609 0356 232B      		or r18,r19
 610 0358 FC01      		movw r30,r24
 611 035a 2387      		std Z+11,r18
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 612               		.loc 2 218 0
 613 035c 8D81      		ldd r24,Y+5
 614 035e 9E81      		ldd r25,Y+6
 615 0360 FC01      		movw r30,r24
 616 0362 2585      		ldd r18,Z+13
 617 0364 3685      		ldd r19,Z+14
 618 0366 8981      		ldd r24,Y+1
 619 0368 9A81      		ldd r25,Y+2
 620 036a FC01      		movw r30,r24
 621 036c 308B      		std Z+16,r19
 622 036e 2787      		std Z+15,r18
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command = (NwkCommandAck_t *)ack->payload;
 623               		.loc 2 220 0
 624 0370 8981      		ldd r24,Y+1
 625 0372 9A81      		ldd r25,Y+2
 626 0374 8F57      		subi r24,127
 627 0376 9F4F      		sbci r25,-1
 628 0378 FC01      		movw r30,r24
 629 037a 8081      		ld r24,Z
 630 037c 9181      		ldd r25,Z+1
 631 037e 9C83      		std Y+4,r25
 632 0380 8B83      		std Y+3,r24
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->id = NWK_COMMAND_ACK;
 633               		.loc 2 221 0
 634 0382 8B81      		ldd r24,Y+3
 635 0384 9C81      		ldd r25,Y+4
 636 0386 FC01      		movw r30,r24
 637 0388 1082      		st Z,__zero_reg__
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->control = nwkRxAckControl;
 638               		.loc 2 222 0
 639 038a 2091 0000 		lds r18,nwkRxAckControl
 640 038e 8B81      		ldd r24,Y+3
 641 0390 9C81      		ldd r25,Y+4
 642 0392 FC01      		movw r30,r24
 643 0394 2283      		std Z+2,r18
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->seq = frame->header.nwkSeq;
 644               		.loc 2 223 0
 645 0396 8D81      		ldd r24,Y+5
 646 0398 9E81      		ldd r25,Y+6
 647 039a FC01      		movw r30,r24
 648 039c 2485      		ldd r18,Z+12
 649 039e 8B81      		ldd r24,Y+3
 650 03a0 9C81      		ldd r25,Y+4
 651 03a2 FC01      		movw r30,r24
 652 03a4 2183      		std Z+1,r18
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkTxFrame(ack);
 653               		.loc 2 225 0
 654 03a6 8981      		ldd r24,Y+1
 655 03a8 9A81      		ldd r25,Y+2
 656 03aa 0E94 0000 		call nwkTxFrame
 657 03ae 00C0      		rjmp .L31
 658               	.L34:
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 659               		.loc 2 206 0
 660 03b0 0000      		nop
 661               	.L31:
 662               	/* epilogue start */
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 663               		.loc 2 226 0
 664 03b2 2696      		adiw r28,6
 665 03b4 0FB6      		in __tmp_reg__,__SREG__
 666 03b6 F894      		cli
 667 03b8 DEBF      		out __SP_H__,r29
 668 03ba 0FBE      		out __SREG__,__tmp_reg__
 669 03bc CDBF      		out __SP_L__,r28
 670 03be DF91      		pop r29
 671 03c0 CF91      		pop r28
 672 03c2 0895      		ret
 673               		.cfi_endproc
 674               	.LFE68:
 676               	.global	NWK_SetAckControl
 678               	NWK_SetAckControl:
 679               	.LFB69:
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void NWK_SetAckControl(uint8_t control)
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 680               		.loc 2 231 0
 681               		.cfi_startproc
 682 03c4 CF93      		push r28
 683               	.LCFI16:
 684               		.cfi_def_cfa_offset 3
 685               		.cfi_offset 28, -2
 686 03c6 DF93      		push r29
 687               	.LCFI17:
 688               		.cfi_def_cfa_offset 4
 689               		.cfi_offset 29, -3
 690 03c8 1F92      		push __zero_reg__
 691               	.LCFI18:
 692               		.cfi_def_cfa_offset 5
 693 03ca CDB7      		in r28,__SP_L__
 694 03cc DEB7      		in r29,__SP_H__
 695               	.LCFI19:
 696               		.cfi_def_cfa_register 28
 697               	/* prologue: function */
 698               	/* frame size = 1 */
 699               	/* stack size = 3 */
 700               	.L__stack_usage = 3
 701 03ce 8983      		std Y+1,r24
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = control;
 702               		.loc 2 232 0
 703 03d0 8981      		ldd r24,Y+1
 704 03d2 8093 0000 		sts nwkRxAckControl,r24
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 705               		.loc 2 233 0
 706 03d6 0000      		nop
 707               	/* epilogue start */
 708 03d8 0F90      		pop __tmp_reg__
 709 03da DF91      		pop r29
 710 03dc CF91      		pop r28
 711 03de 0895      		ret
 712               		.cfi_endproc
 713               	.LFE69:
 716               	nwkRxDuplicateRejectionTimerHandler:
 717               	.LFB70:
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxDecryptConf(NwkFrame_t *frame, bool status)
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (status) {
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_INDICATE;
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else {
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_FINISH;
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer)
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 718               		.loc 2 253 0
 719               		.cfi_startproc
 720 03e0 CF93      		push r28
 721               	.LCFI20:
 722               		.cfi_def_cfa_offset 3
 723               		.cfi_offset 28, -2
 724 03e2 DF93      		push r29
 725               	.LCFI21:
 726               		.cfi_def_cfa_offset 4
 727               		.cfi_offset 29, -3
 728 03e4 00D0      		rcall .
 729 03e6 00D0      		rcall .
 730               	.LCFI22:
 731               		.cfi_def_cfa_offset 8
 732 03e8 CDB7      		in r28,__SP_L__
 733 03ea DEB7      		in r29,__SP_H__
 734               	.LCFI23:
 735               		.cfi_def_cfa_register 28
 736               	/* prologue: function */
 737               	/* frame size = 4 */
 738               	/* stack size = 6 */
 739               	.L__stack_usage = 6
 740 03ec 9C83      		std Y+4,r25
 741 03ee 8B83      		std Y+3,r24
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool restart = false;
 742               		.loc 2 254 0
 743 03f0 1982      		std Y+1,__zero_reg__
 744               	.LBB3:
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 745               		.loc 2 256 0
 746 03f2 1A82      		std Y+2,__zero_reg__
 747 03f4 00C0      		rjmp .L37
 748               	.L39:
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 749               		.loc 2 257 0
 750 03f6 8A81      		ldd r24,Y+2
 751 03f8 282F      		mov r18,r24
 752 03fa 30E0      		ldi r19,0
 753 03fc C901      		movw r24,r18
 754 03fe 880F      		lsl r24
 755 0400 991F      		rol r25
 756 0402 880F      		lsl r24
 757 0404 991F      		rol r25
 758 0406 820F      		add r24,r18
 759 0408 931F      		adc r25,r19
 760 040a 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 761 040c 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 762 040e FC01      		movw r30,r24
 763 0410 8081      		ld r24,Z
 764 0412 8823      		tst r24
 765 0414 01F0      		breq .L38
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxDuplicateRejectionTable[i].ttl--;
 766               		.loc 2 258 0
 767 0416 8A81      		ldd r24,Y+2
 768 0418 282F      		mov r18,r24
 769 041a 30E0      		ldi r19,0
 770 041c C901      		movw r24,r18
 771 041e 880F      		lsl r24
 772 0420 991F      		rol r25
 773 0422 880F      		lsl r24
 774 0424 991F      		rol r25
 775 0426 820F      		add r24,r18
 776 0428 931F      		adc r25,r19
 777 042a 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 778 042c 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 779 042e FC01      		movw r30,r24
 780 0430 8081      		ld r24,Z
 781 0432 4FEF      		ldi r20,lo8(-1)
 782 0434 480F      		add r20,r24
 783 0436 C901      		movw r24,r18
 784 0438 880F      		lsl r24
 785 043a 991F      		rol r25
 786 043c 880F      		lsl r24
 787 043e 991F      		rol r25
 788 0440 820F      		add r24,r18
 789 0442 931F      		adc r25,r19
 790 0444 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 791 0446 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 792 0448 FC01      		movw r30,r24
 793 044a 4083      		st Z,r20
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			restart = true;
 794               		.loc 2 259 0
 795 044c 81E0      		ldi r24,lo8(1)
 796 044e 8983      		std Y+1,r24
 797               	.L38:
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 798               		.loc 2 256 0 discriminator 2
 799 0450 8A81      		ldd r24,Y+2
 800 0452 8F5F      		subi r24,lo8(-(1))
 801 0454 8A83      		std Y+2,r24
 802               	.L37:
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 803               		.loc 2 256 0 is_stmt 0 discriminator 1
 804 0456 8A81      		ldd r24,Y+2
 805 0458 8233      		cpi r24,lo8(50)
 806 045a 00F0      		brlo .L39
 807               	.LBE3:
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (restart) {
 808               		.loc 2 263 0 is_stmt 1
 809 045c 8981      		ldd r24,Y+1
 810 045e 8823      		tst r24
 811 0460 01F0      		breq .L41
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		SYS_TimerStart(timer);
 812               		.loc 2 264 0
 813 0462 8B81      		ldd r24,Y+3
 814 0464 9C81      		ldd r25,Y+4
 815 0466 0E94 0000 		call SYS_TimerStart
 816               	.L41:
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 817               		.loc 2 266 0
 818 046a 0000      		nop
 819               	/* epilogue start */
 820 046c 0F90      		pop __tmp_reg__
 821 046e 0F90      		pop __tmp_reg__
 822 0470 0F90      		pop __tmp_reg__
 823 0472 0F90      		pop __tmp_reg__
 824 0474 DF91      		pop r29
 825 0476 CF91      		pop r28
 826 0478 0895      		ret
 827               		.cfi_endproc
 828               	.LFE70:
 831               	nwkRxRejectDuplicate:
 832               	.LFB71:
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxRejectDuplicate(NwkFrameHeader_t *header)
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 833               		.loc 2 271 0
 834               		.cfi_startproc
 835 047a CF93      		push r28
 836               	.LCFI24:
 837               		.cfi_def_cfa_offset 3
 838               		.cfi_offset 28, -2
 839 047c DF93      		push r29
 840               	.LCFI25:
 841               		.cfi_def_cfa_offset 4
 842               		.cfi_offset 29, -3
 843 047e CDB7      		in r28,__SP_L__
 844 0480 DEB7      		in r29,__SP_H__
 845               	.LCFI26:
 846               		.cfi_def_cfa_register 28
 847 0482 2997      		sbiw r28,9
 848               	.LCFI27:
 849               		.cfi_def_cfa_offset 13
 850 0484 0FB6      		in __tmp_reg__,__SREG__
 851 0486 F894      		cli
 852 0488 DEBF      		out __SP_H__,r29
 853 048a 0FBE      		out __SREG__,__tmp_reg__
 854 048c CDBF      		out __SP_L__,r28
 855               	/* prologue: function */
 856               	/* frame size = 9 */
 857               	/* stack size = 11 */
 858               	.L__stack_usage = 11
 859 048e 9987      		std Y+9,r25
 860 0490 8887      		std Y+8,r24
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *entry;
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *freeEntry = NULL;
 861               		.loc 2 273 0
 862 0492 1A82      		std Y+2,__zero_reg__
 863 0494 1982      		std Y+1,__zero_reg__
 864               	.LBB4:
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 865               		.loc 2 275 0
 866 0496 1B82      		std Y+3,__zero_reg__
 867 0498 00C0      		rjmp .L43
 868               	.L49:
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 869               		.loc 2 276 0
 870 049a 8B81      		ldd r24,Y+3
 871 049c 282F      		mov r18,r24
 872 049e 30E0      		ldi r19,0
 873 04a0 C901      		movw r24,r18
 874 04a2 880F      		lsl r24
 875 04a4 991F      		rol r25
 876 04a6 880F      		lsl r24
 877 04a8 991F      		rol r25
 878 04aa 820F      		add r24,r18
 879 04ac 931F      		adc r25,r19
 880 04ae 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable))
 881 04b0 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable))
 882 04b2 9D83      		std Y+5,r25
 883 04b4 8C83      		std Y+4,r24
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (entry->ttl && header->nwkSrcAddr == entry->src) {
 884               		.loc 2 278 0
 885 04b6 8C81      		ldd r24,Y+4
 886 04b8 9D81      		ldd r25,Y+5
 887 04ba FC01      		movw r30,r24
 888 04bc 8481      		ldd r24,Z+4
 889 04be 8823      		tst r24
 890 04c0 01F4      		brne .+2
 891 04c2 00C0      		rjmp .L44
 892               		.loc 2 278 0 is_stmt 0 discriminator 1
 893 04c4 8885      		ldd r24,Y+8
 894 04c6 9985      		ldd r25,Y+9
 895 04c8 FC01      		movw r30,r24
 896 04ca 2385      		ldd r18,Z+11
 897 04cc 3485      		ldd r19,Z+12
 898 04ce 8C81      		ldd r24,Y+4
 899 04d0 9D81      		ldd r25,Y+5
 900 04d2 FC01      		movw r30,r24
 901 04d4 8081      		ld r24,Z
 902 04d6 9181      		ldd r25,Z+1
 903 04d8 2817      		cp r18,r24
 904 04da 3907      		cpc r19,r25
 905 04dc 01F0      		breq .+2
 906 04de 00C0      		rjmp .L44
 907               	.LBB5:
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			uint8_t diff = (int8_t)entry->seq - header->nwkSeq;
 908               		.loc 2 279 0 is_stmt 1
 909 04e0 8C81      		ldd r24,Y+4
 910 04e2 9D81      		ldd r25,Y+5
 911 04e4 FC01      		movw r30,r24
 912 04e6 2281      		ldd r18,Z+2
 913 04e8 8885      		ldd r24,Y+8
 914 04ea 9985      		ldd r25,Y+9
 915 04ec FC01      		movw r30,r24
 916 04ee 8285      		ldd r24,Z+10
 917 04f0 F22F      		mov r31,r18
 918 04f2 F81B      		sub r31,r24
 919 04f4 8F2F      		mov r24,r31
 920 04f6 8E83      		std Y+6,r24
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (diff < 8) {
 921               		.loc 2 281 0
 922 04f8 8E81      		ldd r24,Y+6
 923 04fa 8830      		cpi r24,lo8(8)
 924 04fc 00F4      		brsh .L45
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				if (entry->mask & (1 << diff)) {
 925               		.loc 2 282 0
 926 04fe 8C81      		ldd r24,Y+4
 927 0500 9D81      		ldd r25,Y+5
 928 0502 FC01      		movw r30,r24
 929 0504 8381      		ldd r24,Z+3
 930 0506 882F      		mov r24,r24
 931 0508 90E0      		ldi r25,0
 932 050a 2E81      		ldd r18,Y+6
 933 050c 222F      		mov r18,r18
 934 050e 30E0      		ldi r19,0
 935 0510 00C0      		rjmp 2f
 936               		1:
 937 0512 9595      		asr r25
 938 0514 8795      		ror r24
 939               		2:
 940 0516 2A95      		dec r18
 941 0518 02F4      		brpl 1b
 942 051a 8170      		andi r24,1
 943 051c 9927      		clr r25
 944 051e 892B      		or r24,r25
 945 0520 01F0      		breq .L46
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#ifdef NWK_ENABLE_ROUTING
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					if (nwkIb.addr == header->macDstAddr) {
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 						nwkRouteRemove(
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkDstAddr,
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkFcf.multicast);
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					}
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#endif
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					return true;
 946               		.loc 2 291 0
 947 0522 81E0      		ldi r24,lo8(1)
 948 0524 00C0      		rjmp .L47
 949               	.L46:
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				}
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask |= (1 << diff);
 950               		.loc 2 294 0
 951 0526 8C81      		ldd r24,Y+4
 952 0528 9D81      		ldd r25,Y+5
 953 052a FC01      		movw r30,r24
 954 052c 8381      		ldd r24,Z+3
 955 052e 482F      		mov r20,r24
 956 0530 8E81      		ldd r24,Y+6
 957 0532 282F      		mov r18,r24
 958 0534 30E0      		ldi r19,0
 959 0536 81E0      		ldi r24,lo8(1)
 960 0538 90E0      		ldi r25,0
 961 053a 00C0      		rjmp 2f
 962               		1:
 963 053c 880F      		lsl r24
 964 053e 991F      		rol r25
 965               		2:
 966 0540 2A95      		dec r18
 967 0542 02F4      		brpl 1b
 968 0544 842B      		or r24,r20
 969 0546 282F      		mov r18,r24
 970 0548 8C81      		ldd r24,Y+4
 971 054a 9D81      		ldd r25,Y+5
 972 054c FC01      		movw r30,r24
 973 054e 2383      		std Z+3,r18
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 974               		.loc 2 295 0
 975 0550 80E0      		ldi r24,0
 976 0552 00C0      		rjmp .L47
 977               	.L45:
 978               	.LBB6:
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				uint8_t shift = -(int8_t)diff;
 979               		.loc 2 297 0
 980 0554 8E81      		ldd r24,Y+6
 981 0556 8195      		neg r24
 982 0558 8F83      		std Y+7,r24
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->seq = header->nwkSeq;
 983               		.loc 2 299 0
 984 055a 8885      		ldd r24,Y+8
 985 055c 9985      		ldd r25,Y+9
 986 055e FC01      		movw r30,r24
 987 0560 2285      		ldd r18,Z+10
 988 0562 8C81      		ldd r24,Y+4
 989 0564 9D81      		ldd r25,Y+5
 990 0566 FC01      		movw r30,r24
 991 0568 2283      		std Z+2,r18
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask = (entry->mask << shift) | 1;
 992               		.loc 2 300 0
 993 056a 8C81      		ldd r24,Y+4
 994 056c 9D81      		ldd r25,Y+5
 995 056e FC01      		movw r30,r24
 996 0570 8381      		ldd r24,Z+3
 997 0572 882F      		mov r24,r24
 998 0574 90E0      		ldi r25,0
 999 0576 2F81      		ldd r18,Y+7
 1000 0578 222F      		mov r18,r18
 1001 057a 30E0      		ldi r19,0
 1002 057c 00C0      		rjmp 2f
 1003               		1:
 1004 057e 880F      		lsl r24
 1005 0580 991F      		rol r25
 1006               		2:
 1007 0582 2A95      		dec r18
 1008 0584 02F4      		brpl 1b
 1009 0586 8160      		ori r24,lo8(1)
 1010 0588 282F      		mov r18,r24
 1011 058a 8C81      		ldd r24,Y+4
 1012 058c 9D81      		ldd r25,Y+5
 1013 058e FC01      		movw r30,r24
 1014 0590 2383      		std Z+3,r18
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->ttl = DUPLICATE_REJECTION_TTL;
 1015               		.loc 2 301 0
 1016 0592 8C81      		ldd r24,Y+4
 1017 0594 9D81      		ldd r25,Y+5
 1018 0596 25E1      		ldi r18,lo8(21)
 1019 0598 FC01      		movw r30,r24
 1020 059a 2483      		std Z+4,r18
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1021               		.loc 2 302 0
 1022 059c 80E0      		ldi r24,0
 1023 059e 00C0      		rjmp .L47
 1024               	.L44:
 1025               	.LBE6:
 1026               	.LBE5:
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (0 == entry->ttl) {
 1027               		.loc 2 306 0
 1028 05a0 8C81      		ldd r24,Y+4
 1029 05a2 9D81      		ldd r25,Y+5
 1030 05a4 FC01      		movw r30,r24
 1031 05a6 8481      		ldd r24,Z+4
 1032 05a8 8823      		tst r24
 1033 05aa 01F4      		brne .L48
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			freeEntry = entry;
 1034               		.loc 2 307 0
 1035 05ac 8C81      		ldd r24,Y+4
 1036 05ae 9D81      		ldd r25,Y+5
 1037 05b0 9A83      		std Y+2,r25
 1038 05b2 8983      		std Y+1,r24
 1039               	.L48:
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1040               		.loc 2 275 0 discriminator 2
 1041 05b4 8B81      		ldd r24,Y+3
 1042 05b6 8F5F      		subi r24,lo8(-(1))
 1043 05b8 8B83      		std Y+3,r24
 1044               	.L43:
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1045               		.loc 2 275 0 is_stmt 0 discriminator 1
 1046 05ba 8B81      		ldd r24,Y+3
 1047 05bc 8233      		cpi r24,lo8(50)
 1048 05be 00F4      		brsh .+2
 1049 05c0 00C0      		rjmp .L49
 1050               	.LBE4:
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == freeEntry) {
 1051               		.loc 2 311 0 is_stmt 1
 1052 05c2 8981      		ldd r24,Y+1
 1053 05c4 9A81      		ldd r25,Y+2
 1054 05c6 892B      		or r24,r25
 1055 05c8 01F4      		brne .L50
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return true;
 1056               		.loc 2 312 0
 1057 05ca 81E0      		ldi r24,lo8(1)
 1058 05cc 00C0      		rjmp .L47
 1059               	.L50:
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->src = header->nwkSrcAddr;
 1060               		.loc 2 315 0
 1061 05ce 8885      		ldd r24,Y+8
 1062 05d0 9985      		ldd r25,Y+9
 1063 05d2 FC01      		movw r30,r24
 1064 05d4 2385      		ldd r18,Z+11
 1065 05d6 3485      		ldd r19,Z+12
 1066 05d8 8981      		ldd r24,Y+1
 1067 05da 9A81      		ldd r25,Y+2
 1068 05dc FC01      		movw r30,r24
 1069 05de 3183      		std Z+1,r19
 1070 05e0 2083      		st Z,r18
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->seq = header->nwkSeq;
 1071               		.loc 2 316 0
 1072 05e2 8885      		ldd r24,Y+8
 1073 05e4 9985      		ldd r25,Y+9
 1074 05e6 FC01      		movw r30,r24
 1075 05e8 2285      		ldd r18,Z+10
 1076 05ea 8981      		ldd r24,Y+1
 1077 05ec 9A81      		ldd r25,Y+2
 1078 05ee FC01      		movw r30,r24
 1079 05f0 2283      		std Z+2,r18
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->mask = 1;
 1080               		.loc 2 317 0
 1081 05f2 8981      		ldd r24,Y+1
 1082 05f4 9A81      		ldd r25,Y+2
 1083 05f6 21E0      		ldi r18,lo8(1)
 1084 05f8 FC01      		movw r30,r24
 1085 05fa 2383      		std Z+3,r18
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->ttl = DUPLICATE_REJECTION_TTL;
 1086               		.loc 2 318 0
 1087 05fc 8981      		ldd r24,Y+1
 1088 05fe 9A81      		ldd r25,Y+2
 1089 0600 25E1      		ldi r18,lo8(21)
 1090 0602 FC01      		movw r30,r24
 1091 0604 2483      		std Z+4,r18
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 1092               		.loc 2 320 0
 1093 0606 80E0      		ldi r24,lo8(nwkRxDuplicateRejectionTimer)
 1094 0608 90E0      		ldi r25,hi8(nwkRxDuplicateRejectionTimer)
 1095 060a 0E94 0000 		call SYS_TimerStart
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1096               		.loc 2 322 0
 1097 060e 80E0      		ldi r24,0
 1098               	.L47:
 1099               	/* epilogue start */
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1100               		.loc 2 323 0
 1101 0610 2996      		adiw r28,9
 1102 0612 0FB6      		in __tmp_reg__,__SREG__
 1103 0614 F894      		cli
 1104 0616 DEBF      		out __SP_H__,r29
 1105 0618 0FBE      		out __SREG__,__tmp_reg__
 1106 061a CDBF      		out __SP_L__,r28
 1107 061c DF91      		pop r29
 1108 061e CF91      		pop r28
 1109 0620 0895      		ret
 1110               		.cfi_endproc
 1111               	.LFE71:
 1114               	nwkRxSeriveDataInd:
 1115               	.LFB72:
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind)
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1116               		.loc 2 328 0
 1117               		.cfi_startproc
 1118 0622 CF93      		push r28
 1119               	.LCFI28:
 1120               		.cfi_def_cfa_offset 3
 1121               		.cfi_offset 28, -2
 1122 0624 DF93      		push r29
 1123               	.LCFI29:
 1124               		.cfi_def_cfa_offset 4
 1125               		.cfi_offset 29, -3
 1126 0626 00D0      		rcall .
 1127               	.LCFI30:
 1128               		.cfi_def_cfa_offset 6
 1129 0628 CDB7      		in r28,__SP_L__
 1130 062a DEB7      		in r29,__SP_H__
 1131               	.LCFI31:
 1132               		.cfi_def_cfa_register 28
 1133               	/* prologue: function */
 1134               	/* frame size = 2 */
 1135               	/* stack size = 4 */
 1136               	.L__stack_usage = 4
 1137 062c 9A83      		std Y+2,r25
 1138 062e 8983      		std Y+1,r24
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == (ind->options & NWK_IND_OPT_SECURED)) {
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ind->size < 1) {
 1139               		.loc 2 336 0
 1140 0630 8981      		ldd r24,Y+1
 1141 0632 9A81      		ldd r25,Y+2
 1142 0634 FC01      		movw r30,r24
 1143 0636 8285      		ldd r24,Z+10
 1144 0638 8823      		tst r24
 1145 063a 01F4      		brne .L52
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1146               		.loc 2 337 0
 1147 063c 80E0      		ldi r24,0
 1148 063e 00C0      		rjmp .L53
 1149               	.L52:
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	switch (ind->data[0]) {
 1150               		.loc 2 340 0
 1151 0640 8981      		ldd r24,Y+1
 1152 0642 9A81      		ldd r25,Y+2
 1153 0644 FC01      		movw r30,r24
 1154 0646 8085      		ldd r24,Z+8
 1155 0648 9185      		ldd r25,Z+9
 1156 064a FC01      		movw r30,r24
 1157 064c 8081      		ld r24,Z
 1158 064e 882F      		mov r24,r24
 1159 0650 90E0      		ldi r25,0
 1160 0652 892B      		or r24,r25
 1161 0654 01F4      		brne .L56
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ACK:
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkTxAckReceived(ind);
 1162               		.loc 2 342 0
 1163 0656 8981      		ldd r24,Y+1
 1164 0658 9A81      		ldd r25,Y+2
 1165 065a 0E94 0000 		call nwkTxAckReceived
 1166 065e 00C0      		rjmp .L53
 1167               	.L56:
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_ERROR:
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteErrorReceived(ind);
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTE_DISCOVERY
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REQUEST:
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryRequestReceived(ind);
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REPLY:
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryReplyReceived(ind);
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	default:
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1168               		.loc 2 360 0
 1169 0660 80E0      		ldi r24,0
 1170               	.L53:
 1171               	/* epilogue start */
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1172               		.loc 2 362 0
 1173 0662 0F90      		pop __tmp_reg__
 1174 0664 0F90      		pop __tmp_reg__
 1175 0666 DF91      		pop r29
 1176 0668 CF91      		pop r28
 1177 066a 0895      		ret
 1178               		.cfi_endproc
 1179               	.LFE72:
 1182               	nwkRxHandleReceivedFrame:
 1183               	.LFB73:
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleReceivedFrame(NwkFrame_t *frame)
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1184               		.loc 2 367 0
 1185               		.cfi_startproc
 1186 066c CF93      		push r28
 1187               	.LCFI32:
 1188               		.cfi_def_cfa_offset 3
 1189               		.cfi_offset 28, -2
 1190 066e DF93      		push r29
 1191               	.LCFI33:
 1192               		.cfi_def_cfa_offset 4
 1193               		.cfi_offset 29, -3
 1194 0670 00D0      		rcall .
 1195 0672 00D0      		rcall .
 1196               	.LCFI34:
 1197               		.cfi_def_cfa_offset 8
 1198 0674 CDB7      		in r28,__SP_L__
 1199 0676 DEB7      		in r29,__SP_H__
 1200               	.LCFI35:
 1201               		.cfi_def_cfa_register 28
 1202               	/* prologue: function */
 1203               	/* frame size = 4 */
 1204               	/* stack size = 6 */
 1205               	.L__stack_usage = 6
 1206 0678 9C83      		std Y+4,r25
 1207 067a 8B83      		std Y+3,r24
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1208               		.loc 2 368 0
 1209 067c 8B81      		ldd r24,Y+3
 1210 067e 9C81      		ldd r25,Y+4
 1211 0680 0296      		adiw r24,2
 1212 0682 9A83      		std Y+2,r25
 1213 0684 8983      		std Y+1,r24
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1214               		.loc 2 370 0
 1215 0686 8B81      		ldd r24,Y+3
 1216 0688 9C81      		ldd r25,Y+4
 1217 068a 24E2      		ldi r18,lo8(36)
 1218 068c FC01      		movw r30,r24
 1219 068e 2083      		st Z,r18
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifndef NWK_ENABLE_SECURITY
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.security) {
 1220               		.loc 2 373 0
 1221 0690 8981      		ldd r24,Y+1
 1222 0692 9A81      		ldd r25,Y+2
 1223 0694 FC01      		movw r30,r24
 1224 0696 8185      		ldd r24,Z+9
 1225 0698 8270      		andi r24,lo8(2)
 1226 069a 8823      		tst r24
 1227 069c 01F0      		breq .+2
 1228 069e 00C0      		rjmp .L69
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast && header->nwkFcf.ackRequest) {
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #else
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 1229               		.loc 2 385 0
 1230 06a0 8981      		ldd r24,Y+1
 1231 06a2 9A81      		ldd r25,Y+2
 1232 06a4 FC01      		movw r30,r24
 1233 06a6 8185      		ldd r24,Z+9
 1234 06a8 8870      		andi r24,lo8(8)
 1235 06aa 8823      		tst r24
 1236 06ac 01F0      		breq .+2
 1237 06ae 00C0      		rjmp .L70
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == header->macDstPanId)
 1238               		.loc 2 391 0
 1239 06b0 8981      		ldd r24,Y+1
 1240 06b2 9A81      		ldd r25,Y+2
 1241 06b4 FC01      		movw r30,r24
 1242 06b6 8381      		ldd r24,Z+3
 1243 06b8 9481      		ldd r25,Z+4
 1244 06ba 0196      		adiw r24,1
 1245 06bc 01F4      		brne .L61
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR == header->nwkDstAddr)
 1246               		.loc 2 393 0
 1247 06be 2091 0000 		lds r18,nwkIb
 1248 06c2 3091 0000 		lds r19,nwkIb+1
 1249 06c6 8981      		ldd r24,Y+1
 1250 06c8 9A81      		ldd r25,Y+2
 1251 06ca FC01      		movw r30,r24
 1252 06cc 8585      		ldd r24,Z+13
 1253 06ce 9685      		ldd r25,Z+14
 1254 06d0 2817      		cp r18,r24
 1255 06d2 3907      		cpc r19,r25
 1256 06d4 01F0      		breq .L62
 1257               		.loc 2 393 0 is_stmt 0 discriminator 1
 1258 06d6 8981      		ldd r24,Y+1
 1259 06d8 9A81      		ldd r25,Y+2
 1260 06da FC01      		movw r30,r24
 1261 06dc 8585      		ldd r24,Z+13
 1262 06de 9685      		ldd r25,Z+14
 1263 06e0 0196      		adiw r24,1
 1264 06e2 01F0      		breq .+2
 1265 06e4 00C0      		rjmp .L71
 1266               	.L62:
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security)
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			{
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1267               		.loc 2 402 0 is_stmt 1
 1268 06e6 8B81      		ldd r24,Y+3
 1269 06e8 9C81      		ldd r25,Y+4
 1270 06ea 22E2      		ldi r18,lo8(34)
 1271 06ec FC01      		movw r30,r24
 1272 06ee 2083      		st Z,r18
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 1273               		.loc 2 405 0
 1274 06f0 00C0      		rjmp .L71
 1275               	.L61:
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ADDRESS_FILTER
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (!NWK_FilterAddress(header->macSrcAddr, &frame->rx.lqi)) {
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == header->nwkDstAddr && header->nwkFcf.ackRequest)
 1276               		.loc 2 415 0
 1277 06f2 8981      		ldd r24,Y+1
 1278 06f4 9A81      		ldd r25,Y+2
 1279 06f6 FC01      		movw r30,r24
 1280 06f8 8585      		ldd r24,Z+13
 1281 06fa 9685      		ldd r25,Z+14
 1282 06fc 0196      		adiw r24,1
 1283 06fe 01F4      		brne .L64
 1284               		.loc 2 415 0 is_stmt 0 discriminator 1
 1285 0700 8981      		ldd r24,Y+1
 1286 0702 9A81      		ldd r25,Y+2
 1287 0704 FC01      		movw r30,r24
 1288 0706 8185      		ldd r24,Z+9
 1289 0708 8170      		andi r24,lo8(1)
 1290 070a 8823      		tst r24
 1291 070c 01F0      		breq .+2
 1292 070e 00C0      		rjmp .L72
 1293               	.L64:
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkIb.addr == header->nwkSrcAddr)
 1294               		.loc 2 420 0 is_stmt 1
 1295 0710 2091 0000 		lds r18,nwkIb
 1296 0714 3091 0000 		lds r19,nwkIb+1
 1297 0718 8981      		ldd r24,Y+1
 1298 071a 9A81      		ldd r25,Y+2
 1299 071c FC01      		movw r30,r24
 1300 071e 8385      		ldd r24,Z+11
 1301 0720 9485      		ldd r25,Z+12
 1302 0722 2817      		cp r18,r24
 1303 0724 3907      		cpc r19,r25
 1304 0726 01F4      		brne .+2
 1305 0728 00C0      		rjmp .L73
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRouteFrameReceived(frame);
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkRxRejectDuplicate(header))
 1306               		.loc 2 429 0
 1307 072a 8981      		ldd r24,Y+1
 1308 072c 9A81      		ldd r25,Y+2
 1309 072e 0E94 0000 		call nwkRxRejectDuplicate
 1310 0732 8823      		tst r24
 1311 0734 01F0      		breq .+2
 1312 0736 00C0      		rjmp .L74
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameMulticastHeader_t *mcHeader
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			= (NwkFrameMulticastHeader_t *)frame->payload;
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool member = NWK_GroupIsMember(header->nwkDstAddr);
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool broadcast = false;
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->memberRadius > 0;
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius--;
 445:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxNonMemberRadius;
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->nonMemberRadius > 0;
 449:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius--;
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius
 451:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxMemberRadius;
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		} else {
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 455:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = true;
 456:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkFcf.linkLocal = 1;
 457:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 458:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_ROUTING
 460:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else {
 461:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_ROUTE;
 462:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 463:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 464:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 465:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 466:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (broadcast) {
 467:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 468:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 469:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 470:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (member) {
 471:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 472:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 473:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 474:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 475:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 476:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 477:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 478:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 479:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 480:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else
 481:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif /* NWK_ENABLE_MULTICAST */
 482:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr && nwkIb.addr !=
 1313               		.loc 2 483 0
 1314 0738 8981      		ldd r24,Y+1
 1315 073a 9A81      		ldd r25,Y+2
 1316 073c FC01      		movw r30,r24
 1317 073e 8581      		ldd r24,Z+5
 1318 0740 9681      		ldd r25,Z+6
 1319 0742 0196      		adiw r24,1
 1320 0744 01F4      		brne .L67
 1321               		.loc 2 483 0 is_stmt 0 discriminator 1
 1322 0746 2091 0000 		lds r18,nwkIb
 1323 074a 3091 0000 		lds r19,nwkIb+1
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1324               		.loc 2 484 0 is_stmt 1 discriminator 1
 1325 074e 8981      		ldd r24,Y+1
 1326 0750 9A81      		ldd r25,Y+2
 1327 0752 FC01      		movw r30,r24
 1328 0754 8585      		ldd r24,Z+13
 1329 0756 9685      		ldd r25,Z+14
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1330               		.loc 2 483 0 discriminator 1
 1331 0758 2817      		cp r18,r24
 1332 075a 3907      		cpc r19,r25
 1333 075c 01F0      		breq .L67
 485:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				0 == header->nwkFcf.linkLocal) {
 1334               		.loc 2 485 0
 1335 075e 8981      		ldd r24,Y+1
 1336 0760 9A81      		ldd r25,Y+2
 1337 0762 FC01      		movw r30,r24
 1338 0764 8185      		ldd r24,Z+9
 1339 0766 8470      		andi r24,lo8(4)
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1340               		.loc 2 484 0
 1341 0768 8823      		tst r24
 1342 076a 01F4      		brne .L67
 486:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1343               		.loc 2 486 0
 1344 076c 8B81      		ldd r24,Y+3
 1345 076e 9C81      		ldd r25,Y+4
 1346 0770 0E94 0000 		call nwkTxBroadcastFrame
 1347               	.L67:
 487:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR ==
 1348               		.loc 2 489 0
 1349 0774 2091 0000 		lds r18,nwkIb
 1350 0778 3091 0000 		lds r19,nwkIb+1
 1351 077c 8981      		ldd r24,Y+1
 1352 077e 9A81      		ldd r25,Y+2
 1353 0780 FC01      		movw r30,r24
 1354 0782 8585      		ldd r24,Z+13
 1355 0784 9685      		ldd r25,Z+14
 1356 0786 2817      		cp r18,r24
 1357 0788 3907      		cpc r19,r25
 1358 078a 01F0      		breq .L68
 490:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1359               		.loc 2 490 0 discriminator 1
 1360 078c 8981      		ldd r24,Y+1
 1361 078e 9A81      		ldd r25,Y+2
 1362 0790 FC01      		movw r30,r24
 1363 0792 8585      		ldd r24,Z+13
 1364 0794 9685      		ldd r25,Z+14
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1365               		.loc 2 489 0 discriminator 1
 1366 0796 0196      		adiw r24,1
 1367 0798 01F4      		brne .L57
 1368               	.L68:
 491:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 492:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 495:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 496:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1369               		.loc 2 496 0
 1370 079a 8B81      		ldd r24,Y+3
 1371 079c 9C81      		ldd r25,Y+4
 1372 079e 22E2      		ldi r18,lo8(34)
 1373 07a0 FC01      		movw r30,r24
 1374 07a2 2083      		st Z,r18
 1375 07a4 00C0      		rjmp .L57
 1376               	.L69:
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1377               		.loc 2 374 0
 1378 07a6 0000      		nop
 1379 07a8 00C0      		rjmp .L57
 1380               	.L70:
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1381               		.loc 2 386 0
 1382 07aa 0000      		nop
 1383 07ac 00C0      		rjmp .L57
 1384               	.L71:
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1385               		.loc 2 405 0
 1386 07ae 0000      		nop
 1387 07b0 00C0      		rjmp .L57
 1388               	.L72:
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1389               		.loc 2 417 0
 1390 07b2 0000      		nop
 1391 07b4 00C0      		rjmp .L57
 1392               	.L73:
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1393               		.loc 2 422 0
 1394 07b6 0000      		nop
 1395 07b8 00C0      		rjmp .L57
 1396               	.L74:
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1397               		.loc 2 431 0
 1398 07ba 0000      		nop
 1399               	.L57:
 1400               	/* epilogue start */
 497:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #ifdef NWK_ENABLE_ROUTING
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if (nwkIb.addr == header->macDstAddr) {
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_ROUTE;
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #endif
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1401               		.loc 2 505 0
 1402 07bc 0F90      		pop __tmp_reg__
 1403 07be 0F90      		pop __tmp_reg__
 1404 07c0 0F90      		pop __tmp_reg__
 1405 07c2 0F90      		pop __tmp_reg__
 1406 07c4 DF91      		pop r29
 1407 07c6 CF91      		pop r28
 1408 07c8 0895      		ret
 1409               		.cfi_endproc
 1410               	.LFE73:
 1413               	nwkRxIndicateDataFrame:
 1414               	.LFB74:
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 507:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 509:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateDataFrame(NwkFrame_t *frame)
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1415               		.loc 2 510 0
 1416               		.cfi_startproc
 1417 07ca CF93      		push r28
 1418               	.LCFI36:
 1419               		.cfi_def_cfa_offset 3
 1420               		.cfi_offset 28, -2
 1421 07cc DF93      		push r29
 1422               	.LCFI37:
 1423               		.cfi_def_cfa_offset 4
 1424               		.cfi_offset 29, -3
 1425 07ce CDB7      		in r28,__SP_L__
 1426 07d0 DEB7      		in r29,__SP_H__
 1427               	.LCFI38:
 1428               		.cfi_def_cfa_register 28
 1429 07d2 6197      		sbiw r28,17
 1430               	.LCFI39:
 1431               		.cfi_def_cfa_offset 21
 1432 07d4 0FB6      		in __tmp_reg__,__SREG__
 1433 07d6 F894      		cli
 1434 07d8 DEBF      		out __SP_H__,r29
 1435 07da 0FBE      		out __SREG__,__tmp_reg__
 1436 07dc CDBF      		out __SP_L__,r28
 1437               	/* prologue: function */
 1438               	/* frame size = 17 */
 1439               	/* stack size = 19 */
 1440               	.L__stack_usage = 19
 1441 07de 998B      		std Y+17,r25
 1442 07e0 888B      		std Y+16,r24
 511:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1443               		.loc 2 511 0
 1444 07e2 8889      		ldd r24,Y+16
 1445 07e4 9989      		ldd r25,Y+17
 1446 07e6 0296      		adiw r24,2
 1447 07e8 9A83      		std Y+2,r25
 1448 07ea 8983      		std Y+1,r24
 512:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 513:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 514:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[header->nwkDstEndpoint]) {
 1449               		.loc 2 514 0
 1450 07ec 8981      		ldd r24,Y+1
 1451 07ee 9A81      		ldd r25,Y+2
 1452 07f0 FC01      		movw r30,r24
 1453 07f2 8785      		ldd r24,Z+15
 1454 07f4 8295      		swap r24
 1455 07f6 8F70      		andi r24,lo8(15)
 1456 07f8 882F      		mov r24,r24
 1457 07fa 90E0      		ldi r25,0
 1458 07fc 0396      		adiw r24,3
 1459 07fe 880F      		lsl r24
 1460 0800 991F      		rol r25
 1461 0802 8050      		subi r24,lo8(-(nwkIb))
 1462 0804 9040      		sbci r25,hi8(-(nwkIb))
 1463 0806 FC01      		movw r30,r24
 1464 0808 8081      		ld r24,Z
 1465 080a 9181      		ldd r25,Z+1
 1466 080c 892B      		or r24,r25
 1467 080e 01F4      		brne .L76
 515:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1468               		.loc 2 515 0
 1469 0810 80E0      		ldi r24,0
 1470 0812 00C0      		rjmp .L91
 1471               	.L76:
 516:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 517:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 518:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = header->nwkSrcAddr;
 1472               		.loc 2 518 0
 1473 0814 8981      		ldd r24,Y+1
 1474 0816 9A81      		ldd r25,Y+2
 1475 0818 FC01      		movw r30,r24
 1476 081a 8385      		ldd r24,Z+11
 1477 081c 9485      		ldd r25,Z+12
 1478 081e 9C83      		std Y+4,r25
 1479 0820 8B83      		std Y+3,r24
 519:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = header->nwkDstAddr;
 1480               		.loc 2 519 0
 1481 0822 8981      		ldd r24,Y+1
 1482 0824 9A81      		ldd r25,Y+2
 1483 0826 FC01      		movw r30,r24
 1484 0828 8585      		ldd r24,Z+13
 1485 082a 9685      		ldd r25,Z+14
 1486 082c 9E83      		std Y+6,r25
 1487 082e 8D83      		std Y+5,r24
 520:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = header->nwkSrcEndpoint;
 1488               		.loc 2 520 0
 1489 0830 8981      		ldd r24,Y+1
 1490 0832 9A81      		ldd r25,Y+2
 1491 0834 FC01      		movw r30,r24
 1492 0836 8785      		ldd r24,Z+15
 1493 0838 8F70      		andi r24,lo8(15)
 1494 083a 8F83      		std Y+7,r24
 521:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = header->nwkDstEndpoint;
 1495               		.loc 2 521 0
 1496 083c 8981      		ldd r24,Y+1
 1497 083e 9A81      		ldd r25,Y+2
 1498 0840 FC01      		movw r30,r24
 1499 0842 8785      		ldd r24,Z+15
 1500 0844 8295      		swap r24
 1501 0846 8F70      		andi r24,lo8(15)
 1502 0848 8887      		std Y+8,r24
 522:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1503               		.loc 2 522 0
 1504 084a 8889      		ldd r24,Y+16
 1505 084c 9989      		ldd r25,Y+17
 1506 084e 8F57      		subi r24,127
 1507 0850 9F4F      		sbci r25,-1
 1508 0852 FC01      		movw r30,r24
 1509 0854 8081      		ld r24,Z
 1510 0856 9181      		ldd r25,Z+1
 1511 0858 9C87      		std Y+12,r25
 1512 085a 8B87      		std Y+11,r24
 523:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1513               		.loc 2 523 0
 1514 085c 8889      		ldd r24,Y+16
 1515 085e 9989      		ldd r25,Y+17
 1516 0860 0E94 0000 		call nwkFramePayloadSize
 1517 0864 8D87      		std Y+13,r24
 524:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1518               		.loc 2 524 0
 1519 0866 8889      		ldd r24,Y+16
 1520 0868 9989      		ldd r25,Y+17
 1521 086a 8D57      		subi r24,125
 1522 086c 9F4F      		sbci r25,-1
 1523 086e FC01      		movw r30,r24
 1524 0870 8081      		ld r24,Z
 1525 0872 8E87      		std Y+14,r24
 525:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1526               		.loc 2 525 0
 1527 0874 8889      		ldd r24,Y+16
 1528 0876 9989      		ldd r25,Y+17
 1529 0878 8C57      		subi r24,124
 1530 087a 9F4F      		sbci r25,-1
 1531 087c FC01      		movw r30,r24
 1532 087e 8081      		ld r24,Z
 1533 0880 8F87      		std Y+15,r24
 526:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 527:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK_REQUESTED : 0;
 1534               		.loc 2 527 0
 1535 0882 8981      		ldd r24,Y+1
 1536 0884 9A81      		ldd r25,Y+2
 1537 0886 FC01      		movw r30,r24
 1538 0888 8185      		ldd r24,Z+9
 1539 088a 982F      		mov r25,r24
 1540 088c 9170      		andi r25,lo8(1)
 1541 088e 81E0      		ldi r24,lo8(1)
 1542 0890 9923      		tst r25
 1543 0892 01F4      		brne .L78
 1544 0894 80E0      		ldi r24,0
 1545               	.L78:
 1546 0896 882F      		mov r24,r24
 1547 0898 90E0      		ldi r25,0
 1548 089a 9A87      		std Y+10,r25
 1549 089c 8987      		std Y+9,r24
 528:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECURED : 0;
 1550               		.loc 2 528 0
 1551 089e 2985      		ldd r18,Y+9
 1552 08a0 3A85      		ldd r19,Y+10
 1553 08a2 8981      		ldd r24,Y+1
 1554 08a4 9A81      		ldd r25,Y+2
 1555 08a6 FC01      		movw r30,r24
 1556 08a8 8185      		ldd r24,Z+9
 1557 08aa 882F      		mov r24,r24
 1558 08ac 90E0      		ldi r25,0
 1559 08ae 8270      		andi r24,2
 1560 08b0 9927      		clr r25
 1561 08b2 822B      		or r24,r18
 1562 08b4 932B      		or r25,r19
 1563 08b6 9A87      		std Y+10,r25
 1564 08b8 8987      		std Y+9,r24
 529:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LINK_LOCAL : 0;
 1565               		.loc 2 529 0
 1566 08ba 2985      		ldd r18,Y+9
 1567 08bc 3A85      		ldd r19,Y+10
 1568 08be 8981      		ldd r24,Y+1
 1569 08c0 9A81      		ldd r25,Y+2
 1570 08c2 FC01      		movw r30,r24
 1571 08c4 8185      		ldd r24,Z+9
 1572 08c6 8470      		andi r24,lo8(4)
 1573 08c8 8823      		tst r24
 1574 08ca 01F0      		breq .L79
 1575               		.loc 2 529 0 is_stmt 0 discriminator 1
 1576 08cc 80E2      		ldi r24,lo8(32)
 1577 08ce 90E0      		ldi r25,0
 1578 08d0 00C0      		rjmp .L80
 1579               	.L79:
 1580               		.loc 2 529 0 discriminator 2
 1581 08d2 80E0      		ldi r24,0
 1582 08d4 90E0      		ldi r25,0
 1583               	.L80:
 1584               		.loc 2 529 0 discriminator 4
 1585 08d6 822B      		or r24,r18
 1586 08d8 932B      		or r25,r19
 1587 08da 9A87      		std Y+10,r25
 1588 08dc 8987      		std Y+9,r24
 530:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MULTICAST : 0;
 1589               		.loc 2 530 0 is_stmt 1 discriminator 4
 1590 08de 2985      		ldd r18,Y+9
 1591 08e0 3A85      		ldd r19,Y+10
 1592 08e2 8981      		ldd r24,Y+1
 1593 08e4 9A81      		ldd r25,Y+2
 1594 08e6 FC01      		movw r30,r24
 1595 08e8 8185      		ldd r24,Z+9
 1596 08ea 8870      		andi r24,lo8(8)
 1597 08ec 8823      		tst r24
 1598 08ee 01F0      		breq .L81
 1599               		.loc 2 530 0 is_stmt 0 discriminator 1
 1600 08f0 80E4      		ldi r24,lo8(64)
 1601 08f2 90E0      		ldi r25,0
 1602 08f4 00C0      		rjmp .L82
 1603               	.L81:
 1604               		.loc 2 530 0 discriminator 2
 1605 08f6 80E0      		ldi r24,0
 1606 08f8 90E0      		ldi r25,0
 1607               	.L82:
 1608               		.loc 2 530 0 discriminator 4
 1609 08fa 822B      		or r24,r18
 1610 08fc 932B      		or r25,r19
 1611 08fe 9A87      		std Y+10,r25
 1612 0900 8987      		std Y+9,r24
 531:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.beacon) ? NWK_IND_OPT_BEACON : 0;
 1613               		.loc 2 531 0 is_stmt 1 discriminator 4
 1614 0902 2985      		ldd r18,Y+9
 1615 0904 3A85      		ldd r19,Y+10
 1616 0906 8981      		ldd r24,Y+1
 1617 0908 9A81      		ldd r25,Y+2
 1618 090a FC01      		movw r30,r24
 1619 090c 8185      		ldd r24,Z+9
 1620 090e 8071      		andi r24,lo8(16)
 1621 0910 8823      		tst r24
 1622 0912 01F0      		breq .L83
 1623               		.loc 2 531 0 is_stmt 0 discriminator 1
 1624 0914 80E8      		ldi r24,lo8(-128)
 1625 0916 90E0      		ldi r25,0
 1626 0918 00C0      		rjmp .L84
 1627               	.L83:
 1628               		.loc 2 531 0 discriminator 2
 1629 091a 80E0      		ldi r24,0
 1630 091c 90E0      		ldi r25,0
 1631               	.L84:
 1632               		.loc 2 531 0 discriminator 4
 1633 091e 822B      		or r24,r18
 1634 0920 932B      		or r25,r19
 1635 0922 9A87      		std Y+10,r25
 1636 0924 8987      		std Y+9,r24
 532:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_ADDR == header->nwkDstAddr) ? NWK_IND_OPT_BROADCAST : 0;
 1637               		.loc 2 532 0 is_stmt 1 discriminator 4
 1638 0926 2985      		ldd r18,Y+9
 1639 0928 3A85      		ldd r19,Y+10
 1640 092a 8981      		ldd r24,Y+1
 1641 092c 9A81      		ldd r25,Y+2
 1642 092e FC01      		movw r30,r24
 1643 0930 8585      		ldd r24,Z+13
 1644 0932 9685      		ldd r25,Z+14
 1645 0934 0196      		adiw r24,1
 1646 0936 01F4      		brne .L85
 1647               		.loc 2 532 0 is_stmt 0 discriminator 1
 1648 0938 84E0      		ldi r24,lo8(4)
 1649 093a 90E0      		ldi r25,0
 1650 093c 00C0      		rjmp .L86
 1651               	.L85:
 1652               		.loc 2 532 0 discriminator 2
 1653 093e 80E0      		ldi r24,0
 1654 0940 90E0      		ldi r25,0
 1655               	.L86:
 1656               		.loc 2 532 0 discriminator 4
 1657 0942 822B      		or r24,r18
 1658 0944 932B      		or r25,r19
 1659 0946 9A87      		std Y+10,r25
 1660 0948 8987      		std Y+9,r24
 533:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (header->nwkSrcAddr == header->macSrcAddr) ? NWK_IND_OPT_LOCAL : 0;
 1661               		.loc 2 533 0 is_stmt 1 discriminator 4
 1662 094a 2985      		ldd r18,Y+9
 1663 094c 3A85      		ldd r19,Y+10
 1664 094e 8981      		ldd r24,Y+1
 1665 0950 9A81      		ldd r25,Y+2
 1666 0952 FC01      		movw r30,r24
 1667 0954 4385      		ldd r20,Z+11
 1668 0956 5485      		ldd r21,Z+12
 1669 0958 8981      		ldd r24,Y+1
 1670 095a 9A81      		ldd r25,Y+2
 1671 095c FC01      		movw r30,r24
 1672 095e 8781      		ldd r24,Z+7
 1673 0960 9085      		ldd r25,Z+8
 1674 0962 4817      		cp r20,r24
 1675 0964 5907      		cpc r21,r25
 1676 0966 01F4      		brne .L87
 1677               		.loc 2 533 0 is_stmt 0 discriminator 1
 1678 0968 88E0      		ldi r24,lo8(8)
 1679 096a 90E0      		ldi r25,0
 1680 096c 00C0      		rjmp .L88
 1681               	.L87:
 1682               		.loc 2 533 0 discriminator 2
 1683 096e 80E0      		ldi r24,0
 1684 0970 90E0      		ldi r25,0
 1685               	.L88:
 1686               		.loc 2 533 0 discriminator 4
 1687 0972 822B      		or r24,r18
 1688 0974 932B      		or r25,r19
 1689 0976 9A87      		std Y+10,r25
 1690 0978 8987      		std Y+9,r24
 534:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_PANID == header->macDstPanId) ? NWK_IND_OPT_BROADCAST_PAN_ID : 0;
 1691               		.loc 2 534 0 is_stmt 1 discriminator 4
 1692 097a 2985      		ldd r18,Y+9
 1693 097c 3A85      		ldd r19,Y+10
 1694 097e 8981      		ldd r24,Y+1
 1695 0980 9A81      		ldd r25,Y+2
 1696 0982 FC01      		movw r30,r24
 1697 0984 8381      		ldd r24,Z+3
 1698 0986 9481      		ldd r25,Z+4
 1699 0988 0196      		adiw r24,1
 1700 098a 01F4      		brne .L89
 1701               		.loc 2 534 0 is_stmt 0 discriminator 1
 1702 098c 80E1      		ldi r24,lo8(16)
 1703 098e 90E0      		ldi r25,0
 1704 0990 00C0      		rjmp .L90
 1705               	.L89:
 1706               		.loc 2 534 0 discriminator 2
 1707 0992 80E0      		ldi r24,0
 1708 0994 90E0      		ldi r25,0
 1709               	.L90:
 1710               		.loc 2 534 0 discriminator 4
 1711 0996 822B      		or r24,r18
 1712 0998 932B      		or r25,r19
 1713 099a 9A87      		std Y+10,r25
 1714 099c 8987      		std Y+9,r24
 535:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 536:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 1715               		.loc 2 536 0 is_stmt 1 discriminator 4
 1716 099e 8981      		ldd r24,Y+1
 1717 09a0 9A81      		ldd r25,Y+2
 1718 09a2 FC01      		movw r30,r24
 1719 09a4 8785      		ldd r24,Z+15
 1720 09a6 8295      		swap r24
 1721 09a8 8F70      		andi r24,lo8(15)
 1722 09aa 882F      		mov r24,r24
 1723 09ac 90E0      		ldi r25,0
 1724 09ae 0396      		adiw r24,3
 1725 09b0 880F      		lsl r24
 1726 09b2 991F      		rol r25
 1727 09b4 8050      		subi r24,lo8(-(nwkIb))
 1728 09b6 9040      		sbci r25,hi8(-(nwkIb))
 1729 09b8 FC01      		movw r30,r24
 1730 09ba 2081      		ld r18,Z
 1731 09bc 3181      		ldd r19,Z+1
 1732 09be CE01      		movw r24,r28
 1733 09c0 0396      		adiw r24,3
 1734 09c2 F901      		movw r30,r18
 1735 09c4 0995      		icall
 1736               	.L91:
 1737               	/* epilogue start */
 537:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1738               		.loc 2 537 0 discriminator 1
 1739 09c6 6196      		adiw r28,17
 1740 09c8 0FB6      		in __tmp_reg__,__SREG__
 1741 09ca F894      		cli
 1742 09cc DEBF      		out __SP_H__,r29
 1743 09ce 0FBE      		out __SREG__,__tmp_reg__
 1744 09d0 CDBF      		out __SP_L__,r28
 1745 09d2 DF91      		pop r29
 1746 09d4 CF91      		pop r28
 1747 09d6 0895      		ret
 1748               		.cfi_endproc
 1749               	.LFE74:
 1752               	nwkRxIndicateBeaconFrame:
 1753               	.LFB75:
 538:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 539:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 540:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 541:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateBeaconFrame(NwkFrame_t *frame)
 542:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1754               		.loc 2 542 0
 1755               		.cfi_startproc
 1756 09d8 CF93      		push r28
 1757               	.LCFI40:
 1758               		.cfi_def_cfa_offset 3
 1759               		.cfi_offset 28, -2
 1760 09da DF93      		push r29
 1761               	.LCFI41:
 1762               		.cfi_def_cfa_offset 4
 1763               		.cfi_offset 29, -3
 1764 09dc CDB7      		in r28,__SP_L__
 1765 09de DEB7      		in r29,__SP_H__
 1766               	.LCFI42:
 1767               		.cfi_def_cfa_register 28
 1768 09e0 6197      		sbiw r28,17
 1769               	.LCFI43:
 1770               		.cfi_def_cfa_offset 21
 1771 09e2 0FB6      		in __tmp_reg__,__SREG__
 1772 09e4 F894      		cli
 1773 09e6 DEBF      		out __SP_H__,r29
 1774 09e8 0FBE      		out __SREG__,__tmp_reg__
 1775 09ea CDBF      		out __SP_L__,r28
 1776               	/* prologue: function */
 1777               	/* frame size = 17 */
 1778               	/* stack size = 19 */
 1779               	.L__stack_usage = 19
 1780 09ec 998B      		std Y+17,r25
 1781 09ee 888B      		std Y+16,r24
 543:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1782               		.loc 2 543 0
 1783 09f0 8889      		ldd r24,Y+16
 1784 09f2 9989      		ldd r25,Y+17
 1785 09f4 0296      		adiw r24,2
 1786 09f6 9A83      		std Y+2,r25
 1787 09f8 8983      		std Y+1,r24
 544:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 545:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 546:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1788               		.loc 2 546 0
 1789 09fa 8889      		ldd r24,Y+16
 1790 09fc 9989      		ldd r25,Y+17
 1791 09fe 24E2      		ldi r18,lo8(36)
 1792 0a00 FC01      		movw r30,r24
 1793 0a02 2083      		st Z,r18
 547:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 548:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[0]) {
 1794               		.loc 2 548 0
 1795 0a04 8091 0000 		lds r24,nwkIb+6
 1796 0a08 9091 0000 		lds r25,nwkIb+6+1
 1797 0a0c 892B      		or r24,r25
 1798 0a0e 01F4      		brne .L93
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1799               		.loc 2 549 0
 1800 0a10 80E0      		ldi r24,0
 1801 0a12 00C0      		rjmp .L95
 1802               	.L93:
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 551:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 552:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = frame->beacon.macSrcAddr;
 1803               		.loc 2 552 0
 1804 0a14 8889      		ldd r24,Y+16
 1805 0a16 9989      		ldd r25,Y+17
 1806 0a18 FC01      		movw r30,r24
 1807 0a1a 8781      		ldd r24,Z+7
 1808 0a1c 9085      		ldd r25,Z+8
 1809 0a1e 9C83      		std Y+4,r25
 1810 0a20 8B83      		std Y+3,r24
 553:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = frame->beacon.macSrcAddr;
 1811               		.loc 2 553 0
 1812 0a22 8889      		ldd r24,Y+16
 1813 0a24 9989      		ldd r25,Y+17
 1814 0a26 FC01      		movw r30,r24
 1815 0a28 8781      		ldd r24,Z+7
 1816 0a2a 9085      		ldd r25,Z+8
 1817 0a2c 9E83      		std Y+6,r25
 1818 0a2e 8D83      		std Y+5,r24
 554:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 1819               		.loc 2 554 0
 1820 0a30 1F82      		std Y+7,__zero_reg__
 555:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 1821               		.loc 2 555 0
 1822 0a32 1886      		std Y+8,__zero_reg__
 556:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1823               		.loc 2 556 0
 1824 0a34 8889      		ldd r24,Y+16
 1825 0a36 9989      		ldd r25,Y+17
 1826 0a38 8F57      		subi r24,127
 1827 0a3a 9F4F      		sbci r25,-1
 1828 0a3c FC01      		movw r30,r24
 1829 0a3e 8081      		ld r24,Z
 1830 0a40 9181      		ldd r25,Z+1
 1831 0a42 9C87      		std Y+12,r25
 1832 0a44 8B87      		std Y+11,r24
 557:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1833               		.loc 2 557 0
 1834 0a46 8889      		ldd r24,Y+16
 1835 0a48 9989      		ldd r25,Y+17
 1836 0a4a 0E94 0000 		call nwkFramePayloadSize
 1837 0a4e 8D87      		std Y+13,r24
 558:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1838               		.loc 2 558 0
 1839 0a50 8889      		ldd r24,Y+16
 1840 0a52 9989      		ldd r25,Y+17
 1841 0a54 8D57      		subi r24,125
 1842 0a56 9F4F      		sbci r25,-1
 1843 0a58 FC01      		movw r30,r24
 1844 0a5a 8081      		ld r24,Z
 1845 0a5c 8E87      		std Y+14,r24
 559:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1846               		.loc 2 559 0
 1847 0a5e 8889      		ldd r24,Y+16
 1848 0a60 9989      		ldd r25,Y+17
 1849 0a62 8C57      		subi r24,124
 1850 0a64 9F4F      		sbci r25,-1
 1851 0a66 FC01      		movw r30,r24
 1852 0a68 8081      		ld r24,Z
 1853 0a6a 8F87      		std Y+15,r24
 560:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 561:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_BEACON;
 1854               		.loc 2 561 0
 1855 0a6c 80E8      		ldi r24,lo8(-128)
 1856 0a6e 90E0      		ldi r25,0
 1857 0a70 9A87      		std Y+10,r25
 1858 0a72 8987      		std Y+9,r24
 562:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 563:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 1859               		.loc 2 563 0
 1860 0a74 8981      		ldd r24,Y+1
 1861 0a76 9A81      		ldd r25,Y+2
 1862 0a78 FC01      		movw r30,r24
 1863 0a7a 8785      		ldd r24,Z+15
 1864 0a7c 8295      		swap r24
 1865 0a7e 8F70      		andi r24,lo8(15)
 1866 0a80 882F      		mov r24,r24
 1867 0a82 90E0      		ldi r25,0
 1868 0a84 0396      		adiw r24,3
 1869 0a86 880F      		lsl r24
 1870 0a88 991F      		rol r25
 1871 0a8a 8050      		subi r24,lo8(-(nwkIb))
 1872 0a8c 9040      		sbci r25,hi8(-(nwkIb))
 1873 0a8e FC01      		movw r30,r24
 1874 0a90 2081      		ld r18,Z
 1875 0a92 3181      		ldd r19,Z+1
 1876 0a94 CE01      		movw r24,r28
 1877 0a96 0396      		adiw r24,3
 1878 0a98 F901      		movw r30,r18
 1879 0a9a 0995      		icall
 1880               	.L95:
 1881               	/* epilogue start */
 564:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1882               		.loc 2 564 0 discriminator 1
 1883 0a9c 6196      		adiw r28,17
 1884 0a9e 0FB6      		in __tmp_reg__,__SREG__
 1885 0aa0 F894      		cli
 1886 0aa2 DEBF      		out __SP_H__,r29
 1887 0aa4 0FBE      		out __SREG__,__tmp_reg__
 1888 0aa6 CDBF      		out __SP_L__,r28
 1889 0aa8 DF91      		pop r29
 1890 0aaa CF91      		pop r28
 1891 0aac 0895      		ret
 1892               		.cfi_endproc
 1893               	.LFE75:
 1896               	nwkRxIndicateLLBeaconFrame:
 1897               	.LFB76:
 565:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 566:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 567:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 568:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLBeaconFrame(NwkFrame_t *frame)
 569:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1898               		.loc 2 569 0
 1899               		.cfi_startproc
 1900 0aae CF93      		push r28
 1901               	.LCFI44:
 1902               		.cfi_def_cfa_offset 3
 1903               		.cfi_offset 28, -2
 1904 0ab0 DF93      		push r29
 1905               	.LCFI45:
 1906               		.cfi_def_cfa_offset 4
 1907               		.cfi_offset 29, -3
 1908 0ab2 CDB7      		in r28,__SP_L__
 1909 0ab4 DEB7      		in r29,__SP_H__
 1910               	.LCFI46:
 1911               		.cfi_def_cfa_register 28
 1912 0ab6 2F97      		sbiw r28,15
 1913               	.LCFI47:
 1914               		.cfi_def_cfa_offset 19
 1915 0ab8 0FB6      		in __tmp_reg__,__SREG__
 1916 0aba F894      		cli
 1917 0abc DEBF      		out __SP_H__,r29
 1918 0abe 0FBE      		out __SREG__,__tmp_reg__
 1919 0ac0 CDBF      		out __SP_L__,r28
 1920               	/* prologue: function */
 1921               	/* frame size = 15 */
 1922               	/* stack size = 17 */
 1923               	.L__stack_usage = 17
 1924 0ac2 9F87      		std Y+15,r25
 1925 0ac4 8E87      		std Y+14,r24
 570:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// NwkFrameBeaconHeaderLLDN_t *header = &frame->LLbeacon;
 571:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 572:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 573:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1926               		.loc 2 573 0
 1927 0ac6 8E85      		ldd r24,Y+14
 1928 0ac8 9F85      		ldd r25,Y+15
 1929 0aca 24E2      		ldi r18,lo8(36)
 1930 0acc FC01      		movw r30,r24
 1931 0ace 2083      		st Z,r18
 574:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 575:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[1]) {
 1932               		.loc 2 575 0
 1933 0ad0 8091 0000 		lds r24,nwkIb+8
 1934 0ad4 9091 0000 		lds r25,nwkIb+8+1
 1935 0ad8 892B      		or r24,r25
 1936 0ada 01F4      		brne .L97
 576:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1937               		.loc 2 576 0
 1938 0adc 80E0      		ldi r24,0
 1939 0ade 00C0      		rjmp .L99
 1940               	.L97:
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 578:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 579:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->LLbeacon;
 1941               		.loc 2 579 0
 1942 0ae0 8E85      		ldd r24,Y+14
 1943 0ae2 9F85      		ldd r25,Y+15
 1944 0ae4 0296      		adiw r24,2
 1945 0ae6 9A87      		std Y+10,r25
 1946 0ae8 8987      		std Y+9,r24
 580:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// ind.size = nwkFramePayloadSize(frame);
 581:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1947               		.loc 2 581 0
 1948 0aea 8E85      		ldd r24,Y+14
 1949 0aec 9F85      		ldd r25,Y+15
 1950 0aee 8D57      		subi r24,125
 1951 0af0 9F4F      		sbci r25,-1
 1952 0af2 FC01      		movw r30,r24
 1953 0af4 8081      		ld r24,Z
 1954 0af6 8C87      		std Y+12,r24
 582:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1955               		.loc 2 582 0
 1956 0af8 8E85      		ldd r24,Y+14
 1957 0afa 9F85      		ldd r25,Y+15
 1958 0afc 8C57      		subi r24,124
 1959 0afe 9F4F      		sbci r25,-1
 1960 0b00 FC01      		movw r30,r24
 1961 0b02 8081      		ld r24,Z
 1962 0b04 8D87      		std Y+13,r24
 583:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 584:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_BEACON;
 1963               		.loc 2 584 0
 1964 0b06 80E0      		ldi r24,0
 1965 0b08 91E0      		ldi r25,lo8(1)
 1966 0b0a 9887      		std Y+8,r25
 1967 0b0c 8F83      		std Y+7,r24
 585:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 586:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 587:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[1](&ind);
 1968               		.loc 2 587 0
 1969 0b0e 2091 0000 		lds r18,nwkIb+8
 1970 0b12 3091 0000 		lds r19,nwkIb+8+1
 1971 0b16 CE01      		movw r24,r28
 1972 0b18 0196      		adiw r24,1
 1973 0b1a F901      		movw r30,r18
 1974 0b1c 0995      		icall
 1975               	.L99:
 1976               	/* epilogue start */
 588:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1977               		.loc 2 588 0 discriminator 1
 1978 0b1e 2F96      		adiw r28,15
 1979 0b20 0FB6      		in __tmp_reg__,__SREG__
 1980 0b22 F894      		cli
 1981 0b24 DEBF      		out __SP_H__,r29
 1982 0b26 0FBE      		out __SREG__,__tmp_reg__
 1983 0b28 CDBF      		out __SP_L__,r28
 1984 0b2a DF91      		pop r29
 1985 0b2c CF91      		pop r28
 1986 0b2e 0895      		ret
 1987               		.cfi_endproc
 1988               	.LFE76:
 1991               	nwkRxIndicateLLCommandFrame:
 1992               	.LFB77:
 589:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 590:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 591:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLCommandFrame(NwkFrame_t *frame)
 592:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1993               		.loc 2 592 0
 1994               		.cfi_startproc
 1995 0b30 CF93      		push r28
 1996               	.LCFI48:
 1997               		.cfi_def_cfa_offset 3
 1998               		.cfi_offset 28, -2
 1999 0b32 DF93      		push r29
 2000               	.LCFI49:
 2001               		.cfi_def_cfa_offset 4
 2002               		.cfi_offset 29, -3
 2003 0b34 CDB7      		in r28,__SP_L__
 2004 0b36 DEB7      		in r29,__SP_H__
 2005               	.LCFI50:
 2006               		.cfi_def_cfa_register 28
 2007 0b38 6197      		sbiw r28,17
 2008               	.LCFI51:
 2009               		.cfi_def_cfa_offset 21
 2010 0b3a 0FB6      		in __tmp_reg__,__SREG__
 2011 0b3c F894      		cli
 2012 0b3e DEBF      		out __SP_H__,r29
 2013 0b40 0FBE      		out __SREG__,__tmp_reg__
 2014 0b42 CDBF      		out __SP_L__,r28
 2015               	/* prologue: function */
 2016               	/* frame size = 17 */
 2017               	/* stack size = 19 */
 2018               	.L__stack_usage = 19
 2019 0b44 998B      		std Y+17,r25
 2020 0b46 888B      		std Y+16,r24
 593:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2021               		.loc 2 593 0
 2022 0b48 8889      		ldd r24,Y+16
 2023 0b4a 9989      		ldd r25,Y+17
 2024 0b4c 0296      		adiw r24,2
 2025 0b4e 9A83      		std Y+2,r25
 2026 0b50 8983      		std Y+1,r24
 594:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 595:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 596:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2027               		.loc 2 596 0
 2028 0b52 8889      		ldd r24,Y+16
 2029 0b54 9989      		ldd r25,Y+17
 2030 0b56 24E2      		ldi r18,lo8(36)
 2031 0b58 FC01      		movw r30,r24
 2032 0b5a 2083      		st Z,r18
 597:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 598:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[2]) {
 2033               		.loc 2 598 0
 2034 0b5c 8091 0000 		lds r24,nwkIb+10
 2035 0b60 9091 0000 		lds r25,nwkIb+10+1
 2036 0b64 892B      		or r24,r25
 2037 0b66 01F4      		brne .L101
 599:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2038               		.loc 2 599 0
 2039 0b68 80E0      		ldi r24,0
 2040 0b6a 00C0      		rjmp .L103
 2041               	.L101:
 600:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 601:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 602:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->data;
 2042               		.loc 2 602 0
 2043 0b6c 8889      		ldd r24,Y+16
 2044 0b6e 9989      		ldd r25,Y+17
 2045 0b70 0296      		adiw r24,2
 2046 0b72 9C87      		std Y+12,r25
 2047 0b74 8B87      		std Y+11,r24
 603:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2048               		.loc 2 603 0
 2049 0b76 8889      		ldd r24,Y+16
 2050 0b78 9989      		ldd r25,Y+17
 2051 0b7a 0E94 0000 		call nwkFramePayloadSize
 2052 0b7e 8D87      		std Y+13,r24
 604:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2053               		.loc 2 604 0
 2054 0b80 8889      		ldd r24,Y+16
 2055 0b82 9989      		ldd r25,Y+17
 2056 0b84 8D57      		subi r24,125
 2057 0b86 9F4F      		sbci r25,-1
 2058 0b88 FC01      		movw r30,r24
 2059 0b8a 8081      		ld r24,Z
 2060 0b8c 8E87      		std Y+14,r24
 605:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2061               		.loc 2 605 0
 2062 0b8e 8889      		ldd r24,Y+16
 2063 0b90 9989      		ldd r25,Y+17
 2064 0b92 8C57      		subi r24,124
 2065 0b94 9F4F      		sbci r25,-1
 2066 0b96 FC01      		movw r30,r24
 2067 0b98 8081      		ld r24,Z
 2068 0b9a 8F87      		std Y+15,r24
 606:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 607:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_MACCOMMAND;
 2069               		.loc 2 607 0
 2070 0b9c 80E0      		ldi r24,0
 2071 0b9e 92E0      		ldi r25,lo8(2)
 2072 0ba0 9A87      		std Y+10,r25
 2073 0ba2 8987      		std Y+9,r24
 608:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 609:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[2](&ind);
 2074               		.loc 2 609 0
 2075 0ba4 2091 0000 		lds r18,nwkIb+10
 2076 0ba8 3091 0000 		lds r19,nwkIb+10+1
 2077 0bac CE01      		movw r24,r28
 2078 0bae 0396      		adiw r24,3
 2079 0bb0 F901      		movw r30,r18
 2080 0bb2 0995      		icall
 2081               	.L103:
 2082               	/* epilogue start */
 610:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2083               		.loc 2 610 0 discriminator 1
 2084 0bb4 6196      		adiw r28,17
 2085 0bb6 0FB6      		in __tmp_reg__,__SREG__
 2086 0bb8 F894      		cli
 2087 0bba DEBF      		out __SP_H__,r29
 2088 0bbc 0FBE      		out __SREG__,__tmp_reg__
 2089 0bbe CDBF      		out __SP_L__,r28
 2090 0bc0 DF91      		pop r29
 2091 0bc2 CF91      		pop r28
 2092 0bc4 0895      		ret
 2093               		.cfi_endproc
 2094               	.LFE77:
 2097               	nwkRxHandleIndication:
 2098               	.LFB78:
 611:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 612:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 613:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 614:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 615:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleIndication(NwkFrame_t *frame)
 616:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2099               		.loc 2 616 0
 2100               		.cfi_startproc
 2101 0bc6 CF93      		push r28
 2102               	.LCFI52:
 2103               		.cfi_def_cfa_offset 3
 2104               		.cfi_offset 28, -2
 2105 0bc8 DF93      		push r29
 2106               	.LCFI53:
 2107               		.cfi_def_cfa_offset 4
 2108               		.cfi_offset 29, -3
 2109 0bca 00D0      		rcall .
 2110 0bcc 1F92      		push __zero_reg__
 2111               	.LCFI54:
 2112               		.cfi_def_cfa_offset 7
 2113 0bce CDB7      		in r28,__SP_L__
 2114 0bd0 DEB7      		in r29,__SP_H__
 2115               	.LCFI55:
 2116               		.cfi_def_cfa_register 28
 2117               	/* prologue: function */
 2118               	/* frame size = 3 */
 2119               	/* stack size = 5 */
 2120               	.L__stack_usage = 5
 2121 0bd2 9B83      		std Y+3,r25
 2122 0bd4 8A83      		std Y+2,r24
 617:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool ack;
 618:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 619:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = 0;
 2123               		.loc 2 619 0
 2124 0bd6 1092 0000 		sts nwkRxAckControl,__zero_reg__
 620:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack = nwkRxIndicateDataFrame(frame);
 2125               		.loc 2 620 0
 2126 0bda 8A81      		ldd r24,Y+2
 2127 0bdc 9B81      		ldd r25,Y+3
 2128 0bde 0E94 0000 		call nwkRxIndicateDataFrame
 2129 0be2 8983      		std Y+1,r24
 621:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 622:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == frame->header.nwkFcf.ackRequest) {
 2130               		.loc 2 622 0
 2131 0be4 8A81      		ldd r24,Y+2
 2132 0be6 9B81      		ldd r25,Y+3
 2133 0be8 FC01      		movw r30,r24
 2134 0bea 8385      		ldd r24,Z+11
 2135 0bec 8170      		andi r24,lo8(1)
 2136 0bee 8823      		tst r24
 2137 0bf0 01F4      		brne .L105
 623:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2138               		.loc 2 623 0
 2139 0bf2 1982      		std Y+1,__zero_reg__
 2140               	.L105:
 624:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 625:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 626:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == frame->header.macDstAddr &&
 2141               		.loc 2 626 0
 2142 0bf4 8A81      		ldd r24,Y+2
 2143 0bf6 9B81      		ldd r25,Y+3
 2144 0bf8 FC01      		movw r30,r24
 2145 0bfa 8781      		ldd r24,Z+7
 2146 0bfc 9085      		ldd r25,Z+8
 2147 0bfe 0196      		adiw r24,1
 2148 0c00 01F4      		brne .L106
 627:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2149               		.loc 2 627 0 discriminator 1
 2150 0c02 2091 0000 		lds r18,nwkIb
 2151 0c06 3091 0000 		lds r19,nwkIb+1
 2152 0c0a 8A81      		ldd r24,Y+2
 2153 0c0c 9B81      		ldd r25,Y+3
 2154 0c0e FC01      		movw r30,r24
 2155 0c10 8785      		ldd r24,Z+15
 2156 0c12 9089      		ldd r25,Z+16
 626:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2157               		.loc 2 626 0 discriminator 1
 2158 0c14 2817      		cp r18,r24
 2159 0c16 3907      		cpc r19,r25
 2160 0c18 01F4      		brne .L106
 628:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			0 == frame->header.nwkFcf.multicast) {
 2161               		.loc 2 628 0
 2162 0c1a 8A81      		ldd r24,Y+2
 2163 0c1c 9B81      		ldd r25,Y+3
 2164 0c1e FC01      		movw r30,r24
 2165 0c20 8385      		ldd r24,Z+11
 2166 0c22 8870      		andi r24,lo8(8)
 627:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2167               		.loc 2 627 0
 2168 0c24 8823      		tst r24
 2169 0c26 01F4      		brne .L106
 629:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = true;
 2170               		.loc 2 629 0
 2171 0c28 81E0      		ldi r24,lo8(1)
 2172 0c2a 8983      		std Y+1,r24
 2173               	.L106:
 630:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 631:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 632:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == frame->header.macDstPanId) {
 2174               		.loc 2 632 0
 2175 0c2c 8A81      		ldd r24,Y+2
 2176 0c2e 9B81      		ldd r25,Y+3
 2177 0c30 FC01      		movw r30,r24
 2178 0c32 8581      		ldd r24,Z+5
 2179 0c34 9681      		ldd r25,Z+6
 2180 0c36 0196      		adiw r24,1
 2181 0c38 01F4      		brne .L107
 633:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2182               		.loc 2 633 0
 2183 0c3a 1982      		std Y+1,__zero_reg__
 2184               	.L107:
 634:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 635:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 636:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == nwkIb.addr) {
 2185               		.loc 2 636 0
 2186 0c3c 8091 0000 		lds r24,nwkIb
 2187 0c40 9091 0000 		lds r25,nwkIb+1
 2188 0c44 0196      		adiw r24,1
 2189 0c46 01F4      		brne .L108
 637:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2190               		.loc 2 637 0
 2191 0c48 1982      		std Y+1,__zero_reg__
 2192               	.L108:
 638:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 639:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ack) {
 2193               		.loc 2 640 0
 2194 0c4a 8981      		ldd r24,Y+1
 2195 0c4c 8823      		tst r24
 2196 0c4e 01F0      		breq .L109
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxSendAck(frame);
 2197               		.loc 2 641 0
 2198 0c50 8A81      		ldd r24,Y+2
 2199 0c52 9B81      		ldd r25,Y+3
 2200 0c54 0E94 0000 		call nwkRxSendAck
 2201               	.L109:
 642:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 643:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 644:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2202               		.loc 2 644 0
 2203 0c58 8A81      		ldd r24,Y+2
 2204 0c5a 9B81      		ldd r25,Y+3
 2205 0c5c 24E2      		ldi r18,lo8(36)
 2206 0c5e FC01      		movw r30,r24
 2207 0c60 2083      		st Z,r18
 645:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2208               		.loc 2 645 0
 2209 0c62 0000      		nop
 2210               	/* epilogue start */
 2211 0c64 0F90      		pop __tmp_reg__
 2212 0c66 0F90      		pop __tmp_reg__
 2213 0c68 0F90      		pop __tmp_reg__
 2214 0c6a DF91      		pop r29
 2215 0c6c CF91      		pop r28
 2216 0c6e 0895      		ret
 2217               		.cfi_endproc
 2218               	.LFE78:
 2220               	.global	nwkRxTaskHandler
 2222               	nwkRxTaskHandler:
 2223               	.LFB79:
 646:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 647:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 648:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Rx Module task handler
 649:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 650:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxTaskHandler(void)
 651:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2224               		.loc 2 651 0
 2225               		.cfi_startproc
 2226 0c70 CF93      		push r28
 2227               	.LCFI56:
 2228               		.cfi_def_cfa_offset 3
 2229               		.cfi_offset 28, -2
 2230 0c72 DF93      		push r29
 2231               	.LCFI57:
 2232               		.cfi_def_cfa_offset 4
 2233               		.cfi_offset 29, -3
 2234 0c74 00D0      		rcall .
 2235               	.LCFI58:
 2236               		.cfi_def_cfa_offset 6
 2237 0c76 CDB7      		in r28,__SP_L__
 2238 0c78 DEB7      		in r29,__SP_H__
 2239               	.LCFI59:
 2240               		.cfi_def_cfa_register 28
 2241               	/* prologue: function */
 2242               	/* frame size = 2 */
 2243               	/* stack size = 4 */
 2244               	.L__stack_usage = 4
 652:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame = NULL;
 2245               		.loc 2 652 0
 2246 0c7a 1A82      		std Y+2,__zero_reg__
 2247 0c7c 1982      		std Y+1,__zero_reg__
 653:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 654:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 2248               		.loc 2 654 0
 2249 0c7e 00C0      		rjmp .L111
 2250               	.L119:
 655:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2251               		.loc 2 655 0
 2252 0c80 8981      		ldd r24,Y+1
 2253 0c82 9A81      		ldd r25,Y+2
 2254 0c84 FC01      		movw r30,r24
 2255 0c86 8081      		ld r24,Z
 2256 0c88 882F      		mov r24,r24
 2257 0c8a 90E0      		ldi r25,0
 2258 0c8c 8432      		cpi r24,36
 2259 0c8e 9105      		cpc r25,__zero_reg__
 2260 0c90 01F0      		breq .L112
 2261 0c92 8532      		cpi r24,37
 2262 0c94 9105      		cpc r25,__zero_reg__
 2263 0c96 04F4      		brge .L113
 2264 0c98 8032      		cpi r24,32
 2265 0c9a 9105      		cpc r25,__zero_reg__
 2266 0c9c 01F0      		breq .L114
 2267 0c9e 8297      		sbiw r24,34
 2268 0ca0 01F0      		breq .L115
 2269 0ca2 00C0      		rjmp .L111
 2270               	.L113:
 2271 0ca4 8632      		cpi r24,38
 2272 0ca6 9105      		cpc r25,__zero_reg__
 2273 0ca8 01F0      		breq .L116
 2274 0caa 8632      		cpi r24,38
 2275 0cac 9105      		cpc r25,__zero_reg__
 2276 0cae 04F0      		brlt .L117
 2277 0cb0 8797      		sbiw r24,39
 2278 0cb2 01F0      		breq .L118
 2279 0cb4 00C0      		rjmp .L111
 2280               	.L114:
 656:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_RECEIVED:
 657:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 658:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleReceivedFrame(frame);
 2281               		.loc 2 658 0
 2282 0cb6 8981      		ldd r24,Y+1
 2283 0cb8 9A81      		ldd r25,Y+2
 2284 0cba 0E94 0000 		call nwkRxHandleReceivedFrame
 659:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 660:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2285               		.loc 2 660 0
 2286 0cbe 00C0      		rjmp .L111
 2287               	.L115:
 661:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 662:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 663:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_DECRYPT:
 664:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 665:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkSecurityProcess(frame, false);
 666:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 667:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 669:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 670:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_INDICATE:
 671:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 672:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleIndication(frame);
 2288               		.loc 2 672 0
 2289 0cc0 8981      		ldd r24,Y+1
 2290 0cc2 9A81      		ldd r25,Y+2
 2291 0cc4 0E94 0000 		call nwkRxHandleIndication
 673:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 674:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2292               		.loc 2 674 0
 2293 0cc8 00C0      		rjmp .L111
 2294               	.L112:
 675:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 676:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 677:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_ROUTE:
 678:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 679:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRouteFrame(frame);
 680:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 681:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 682:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 683:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 684:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_FINISH:
 685:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 686:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkFrameFree(frame);
 2295               		.loc 2 686 0
 2296 0cca 8981      		ldd r24,Y+1
 2297 0ccc 9A81      		ldd r25,Y+2
 2298 0cce 0E94 0000 		call nwkFrameFree
 687:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 688:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2299               		.loc 2 688 0
 2300 0cd2 00C0      		rjmp .L111
 2301               	.L117:
 689:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 690:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_BEACON:
 691:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 692:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateBeaconFrame(frame);
 2302               		.loc 2 692 0
 2303 0cd4 8981      		ldd r24,Y+1
 2304 0cd6 9A81      		ldd r25,Y+2
 2305 0cd8 0E94 0000 		call nwkRxIndicateBeaconFrame
 693:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 694:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2306               		.loc 2 694 0
 2307 0cdc 00C0      		rjmp .L111
 2308               	.L116:
 695:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 696:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 697:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLBEACON:
 698:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 699:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLBeaconFrame(frame);
 2309               		.loc 2 699 0
 2310 0cde 8981      		ldd r24,Y+1
 2311 0ce0 9A81      		ldd r25,Y+2
 2312 0ce2 0E94 0000 		call nwkRxIndicateLLBeaconFrame
 700:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 701:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2313               		.loc 2 701 0
 2314 0ce6 00C0      		rjmp .L111
 2315               	.L118:
 702:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 703:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLCOMMAND:
 704:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 705:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLCommandFrame(frame);
 2316               		.loc 2 705 0
 2317 0ce8 8981      		ldd r24,Y+1
 2318 0cea 9A81      		ldd r25,Y+2
 2319 0cec 0E94 0000 		call nwkRxIndicateLLCommandFrame
 706:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 707:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2320               		.loc 2 707 0
 2321 0cf0 0000      		nop
 2322               	.L111:
 654:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2323               		.loc 2 654 0
 2324 0cf2 8981      		ldd r24,Y+1
 2325 0cf4 9A81      		ldd r25,Y+2
 2326 0cf6 0E94 0000 		call nwkFrameNext
 2327 0cfa 9A83      		std Y+2,r25
 2328 0cfc 8983      		std Y+1,r24
 2329 0cfe 8981      		ldd r24,Y+1
 2330 0d00 9A81      		ldd r25,Y+2
 2331 0d02 892B      		or r24,r25
 2332 0d04 01F0      		breq .+2
 2333 0d06 00C0      		rjmp .L119
 708:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 709:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 710:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2334               		.loc 2 710 0
 2335 0d08 0000      		nop
 2336               	/* epilogue start */
 2337 0d0a 0F90      		pop __tmp_reg__
 2338 0d0c 0F90      		pop __tmp_reg__
 2339 0d0e DF91      		pop r29
 2340 0d10 CF91      		pop r28
 2341 0d12 0895      		ret
 2342               		.cfi_endproc
 2343               	.LFE79:
 2345               	.Letext0:
 2346               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 2347               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 2348               		.file 5 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 2349               		.file 6 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 2350               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 2351               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkRx.c
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:7      *ABS*:00000001 __zero_reg__
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:12     .text:00000000 nwkFramePayloadSize
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:74     .bss.nwkRxDuplicateRejectionTable:00000000 nwkRxDuplicateRejectionTable
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:79     .bss.nwkRxAckControl:00000000 nwkRxAckControl
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:84     .bss.nwkRxDuplicateRejectionTimer:00000000 nwkRxDuplicateRejectionTimer
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:89     .text:00000044 nwkRxInit
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:716    .text:000003e0 nwkRxDuplicateRejectionTimerHandler
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:1114   .text:00000622 nwkRxSeriveDataInd
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:176    .text:000000b6 PHY_DataInd
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:506    .text:000002b6 nwkRxSendAck
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:678    .text:000003c4 NWK_SetAckControl
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:831    .text:0000047a nwkRxRejectDuplicate
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:1182   .text:0000066c nwkRxHandleReceivedFrame
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:1413   .text:000007ca nwkRxIndicateDataFrame
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:1752   .text:000009d8 nwkRxIndicateBeaconFrame
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:1896   .text:00000aae nwkRxIndicateLLBeaconFrame
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:1991   .text:00000b30 nwkRxIndicateLLCommandFrame
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:2097   .text:00000bc6 nwkRxHandleIndication
C:\Users\guilh\AppData\Local\Temp\ccfYVJQJ.s:2222   .text:00000c70 nwkRxTaskHandler

UNDEFINED SYMBOLS
NWK_OpenEndpoint
nwkFrameAlloc
nwkFrameAlloc_LLDN
memcpy
nwkFrameCommandInit
nwkTxFrame
SYS_TimerStart
nwkTxAckReceived
nwkIb
nwkTxBroadcastFrame
nwkFrameFree
nwkFrameNext
__do_clear_bss
