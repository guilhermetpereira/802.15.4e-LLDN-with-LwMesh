   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "sio2host.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .comm n,1,1
  27              	 .section .bss.tTS,"aw",%nobits
  28              	 .align 2
  31              	tTS:
  32 0000 00000000 	 .space 4
  33              	 .section .bss.serial_rx_buf,"aw",%nobits
  34              	 .align 2
  37              	serial_rx_buf:
  38 0000 00000000 	 .space 156
  38      00000000 
  38      00000000 
  38      00000000 
  38      00000000 
  39              	 .section .bss.serial_rx_buf_head,"aw",%nobits
  42              	serial_rx_buf_head:
  43 0000 00       	 .space 1
  44              	 .section .bss.serial_rx_buf_tail,"aw",%nobits
  47              	serial_rx_buf_tail:
  48 0000 00       	 .space 1
  49              	 .section .bss.serial_rx_count,"aw",%nobits
  52              	serial_rx_count:
  53 0000 00       	 .space 1
  54              	 .section .bss.usb_rx_byte_rcvd,"aw",%nobits
  57              	usb_rx_byte_rcvd:
  58 0000 00       	 .space 1
  59              	 .section .bss.main_b_cdc_enable,"aw",%nobits
  62              	main_b_cdc_enable:
  63 0000 00       	 .space 1
  64              	 .text
  65              	 .align 1
  66              	 .global sio2host_init
  67              	 .syntax unified
  68              	 .thumb
  69              	 .thumb_func
  70              	 .fpu softvfp
  72              	sio2host_init:
  73              	.LFB186:
  74              	 .file 1 "../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c"
   1:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** /**
   2:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * \file sio2host.c
   3:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *
   4:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * \brief Event handling Serial I/O  Functionalities
   5:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *
   6:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * Copyright (c) 2013-2014 Atmel Corporation. All rights reserved.
   7:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *
   8:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * \asf_license_start
   9:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *
  10:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * \page License
  11:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *
  12:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *
  15:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *
  18:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *    and/or other materials provided with the distribution.
  21:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *
  22:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *    from this software without specific prior written permission.
  24:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *
  25:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *    Atmel microcontroller product.
  27:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *
  28:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  *
  40:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * \asf_license_stop
  41:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  */
  42:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  43:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** /* === INCLUDES ============================================================ */
  44:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  45:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** #include "conf_sio2host.h"
  46:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** #include "sio2host.h"
  47:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** #include "stdio_usb.h"
  48:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  49:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** /* === TYPES =============================================================== */
  50:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  51:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** /* === MACROS ============================================================== */
  52:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  53:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** /* === PROTOTYPES ========================================================== */
  54:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  55:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** /**
  56:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * Receive buffer
  57:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * The buffer size is defined in sio2host.h
  58:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  */
  59:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** static uint8_t serial_rx_buf[SERIAL_RX_BUF_SIZE_HOST];
  60:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  61:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** /**
  62:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * Receive buffer head
  63:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  */
  64:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** static uint8_t serial_rx_buf_head;
  65:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  66:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** /**
  67:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * Receive buffer tail
  68:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  */
  69:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** static uint8_t serial_rx_buf_tail;
  70:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  71:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** /**
  72:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  * Number of bytes in receive buffer
  73:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c ****  */
  74:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** static uint8_t serial_rx_count;
  75:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  76:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** static volatile bool usb_rx_byte_rcvd = false;
  77:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** static volatile bool main_b_cdc_enable = false;
  78:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  79:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** /* === IMPLEMENTATION ====================================================== */
  80:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  81:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** void sio2host_init(void)
  82:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** {
  75              	 .loc 1 82 0
  76              	 .cfi_startproc
  77              	 
  78              	 
  79 0000 80B5     	 push {r7,lr}
  80              	.LCFI0:
  81              	 .cfi_def_cfa_offset 8
  82              	 .cfi_offset 7,-8
  83              	 .cfi_offset 14,-4
  84 0002 00AF     	 add r7,sp,#0
  85              	.LCFI1:
  86              	 .cfi_def_cfa_register 7
  83:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	stdio_usb_init();
  87              	 .loc 1 83 0
  88 0004 014B     	 ldr r3,.L2
  89 0006 9847     	 blx r3
  90              	.LVL0:
  84:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** }
  91              	 .loc 1 84 0
  92 0008 00BF     	 nop
  93 000a 80BD     	 pop {r7,pc}
  94              	.L3:
  95              	 .align 2
  96              	.L2:
  97 000c 00000000 	 .word stdio_usb_init
  98              	 .cfi_endproc
  99              	.LFE186:
 101              	 .align 1
 102              	 .global sio2host_tx
 103              	 .syntax unified
 104              	 .thumb
 105              	 .thumb_func
 106              	 .fpu softvfp
 108              	sio2host_tx:
 109              	.LFB187:
  85:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  86:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** uint8_t sio2host_tx(uint8_t *data, uint8_t length)
  87:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** {
 110              	 .loc 1 87 0
 111              	 .cfi_startproc
 112              	 
 113              	 
 114 0010 80B5     	 push {r7,lr}
 115              	.LCFI2:
 116              	 .cfi_def_cfa_offset 8
 117              	 .cfi_offset 7,-8
 118              	 .cfi_offset 14,-4
 119 0012 84B0     	 sub sp,sp,#16
 120              	.LCFI3:
 121              	 .cfi_def_cfa_offset 24
 122 0014 00AF     	 add r7,sp,#0
 123              	.LCFI4:
 124              	 .cfi_def_cfa_register 7
 125 0016 7860     	 str r0,[r7,#4]
 126 0018 0B46     	 mov r3,r1
 127 001a FB70     	 strb r3,[r7,#3]
  88:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	uint16_t bytes_transmitted, bytes_remaining;
  89:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	bytes_remaining = udi_cdc_write_buf((const int *)data, length);
 128              	 .loc 1 89 0
 129 001c FB78     	 ldrb r3,[r7,#3]
 130 001e 1946     	 mov r1,r3
 131 0020 7868     	 ldr r0,[r7,#4]
 132 0022 074B     	 ldr r3,.L6
 133 0024 9847     	 blx r3
 134              	.LVL1:
 135 0026 0346     	 mov r3,r0
 136 0028 FB81     	 strh r3,[r7,#14]
  90:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  91:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	bytes_transmitted = length - bytes_remaining;
 137              	 .loc 1 91 0
 138 002a FB78     	 ldrb r3,[r7,#3]
 139 002c 9AB2     	 uxth r2,r3
 140 002e FB89     	 ldrh r3,[r7,#14]
 141 0030 D31A     	 subs r3,r2,r3
 142 0032 BB81     	 strh r3,[r7,#12]
  92:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	return(bytes_transmitted);
 143              	 .loc 1 92 0
 144 0034 BB89     	 ldrh r3,[r7,#12]
 145 0036 DBB2     	 uxtb r3,r3
  93:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** }
 146              	 .loc 1 93 0
 147 0038 1846     	 mov r0,r3
 148 003a 1037     	 adds r7,r7,#16
 149              	.LCFI5:
 150              	 .cfi_def_cfa_offset 8
 151 003c BD46     	 mov sp,r7
 152              	.LCFI6:
 153              	 .cfi_def_cfa_register 13
 154              	 
 155 003e 80BD     	 pop {r7,pc}
 156              	.L7:
 157              	 .align 2
 158              	.L6:
 159 0040 00000000 	 .word udi_cdc_write_buf
 160              	 .cfi_endproc
 161              	.LFE187:
 163              	 .align 1
 164              	 .global sio2host_rx
 165              	 .syntax unified
 166              	 .thumb
 167              	 .thumb_func
 168              	 .fpu softvfp
 170              	sio2host_rx:
 171              	.LFB188:
  94:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
  95:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** uint8_t sio2host_rx(uint8_t *data, uint8_t max_length)
  96:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** {
 172              	 .loc 1 96 0
 173              	 .cfi_startproc
 174              	 
 175              	 
 176              	 
 177 0044 80B4     	 push {r7}
 178              	.LCFI7:
 179              	 .cfi_def_cfa_offset 4
 180              	 .cfi_offset 7,-4
 181 0046 85B0     	 sub sp,sp,#20
 182              	.LCFI8:
 183              	 .cfi_def_cfa_offset 24
 184 0048 00AF     	 add r7,sp,#0
 185              	.LCFI9:
 186              	 .cfi_def_cfa_register 7
 187 004a 7860     	 str r0,[r7,#4]
 188 004c 0B46     	 mov r3,r1
 189 004e FB70     	 strb r3,[r7,#3]
  97:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	uint8_t data_received = 0;
 190              	 .loc 1 97 0
 191 0050 0023     	 movs r3,#0
 192 0052 FB73     	 strb r3,[r7,#15]
  98:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	if (0 == serial_rx_count) {
 193              	 .loc 1 98 0
 194 0054 254B     	 ldr r3,.L16
 195 0056 1B78     	 ldrb r3,[r3]
 196 0058 002B     	 cmp r3,#0
 197 005a 01D1     	 bne .L9
  99:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		return 0;
 198              	 .loc 1 99 0
 199 005c 0023     	 movs r3,#0
 200 005e 3FE0     	 b .L10
 201              	.L9:
 100:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	}
 101:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 102:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	if (SERIAL_RX_BUF_SIZE_HOST <= serial_rx_count) {
 202              	 .loc 1 102 0
 203 0060 224B     	 ldr r3,.L16
 204 0062 1B78     	 ldrb r3,[r3]
 205 0064 9B2B     	 cmp r3,#155
 206 0066 0CD9     	 bls .L11
 103:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		/*
 104:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		 * Bytes between head and tail are overwritten by new data.
 105:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		 * The oldest data in buffer is the one to which the tail is
 106:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		 * pointing. So reading operation should start from the tail.
 107:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		 */
 108:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		serial_rx_buf_head = serial_rx_buf_tail;
 207              	 .loc 1 108 0
 208 0068 214B     	 ldr r3,.L16+4
 209 006a 1A78     	 ldrb r2,[r3]
 210 006c 214B     	 ldr r3,.L16+8
 211 006e 1A70     	 strb r2,[r3]
 109:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 110:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		/*
 111:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		 * This is a buffer overflow case.But still only the number of
 112:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		 * bytes equivalent to
 113:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		 * full buffer size are useful.
 114:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		 */
 115:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		serial_rx_count = SERIAL_RX_BUF_SIZE_HOST;
 212              	 .loc 1 115 0
 213 0070 1E4B     	 ldr r3,.L16
 214 0072 9C22     	 movs r2,#156
 215 0074 1A70     	 strb r2,[r3]
 116:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 117:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		/* Bytes received is more than or equal to buffer. */
 118:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		if (SERIAL_RX_BUF_SIZE_HOST <= max_length) {
 216              	 .loc 1 118 0
 217 0076 FB78     	 ldrb r3,[r7,#3]
 218 0078 9B2B     	 cmp r3,#155
 219 007a 0AD9     	 bls .L13
 119:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			/*
 120:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			 * Requested receive length (max_length) is more than
 121:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			 * the
 122:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			 * max size of receive buffer, but at max the full
 123:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			 * buffer can be read.
 124:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			 */
 125:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			max_length = SERIAL_RX_BUF_SIZE_HOST;
 220              	 .loc 1 125 0
 221 007c 9C23     	 movs r3,#156
 222 007e FB70     	 strb r3,[r7,#3]
 223 0080 07E0     	 b .L13
 224              	.L11:
 126:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		}
 127:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	} else {
 128:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		/* Bytes received is less than receive buffer maximum length. */
 129:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		if (max_length > serial_rx_count) {
 225              	 .loc 1 129 0
 226 0082 1A4B     	 ldr r3,.L16
 227 0084 1B78     	 ldrb r3,[r3]
 228 0086 FA78     	 ldrb r2,[r7,#3]
 229 0088 9A42     	 cmp r2,r3
 230 008a 02D9     	 bls .L13
 130:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			/*
 131:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			 * Requested receive length (max_length) is more than
 132:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			 * the data
 133:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			 * present in receive buffer. Hence only the number of
 134:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			 * bytes
 135:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			 * present in receive buffer are read.
 136:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			 */
 137:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			max_length = serial_rx_count;
 231              	 .loc 1 137 0
 232 008c 174B     	 ldr r3,.L16
 233 008e 1B78     	 ldrb r3,[r3]
 234 0090 FB70     	 strb r3,[r7,#3]
 235              	.L13:
 138:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		}
 139:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	}
 140:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 141:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	data_received = max_length;
 236              	 .loc 1 141 0
 237 0092 FB78     	 ldrb r3,[r7,#3]
 238 0094 FB73     	 strb r3,[r7,#15]
 142:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	while (max_length > 0) {
 239              	 .loc 1 142 0
 240 0096 1FE0     	 b .L14
 241              	.L15:
 143:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		/* Start to copy from head. */
 144:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		*data = serial_rx_buf[serial_rx_buf_head];
 242              	 .loc 1 144 0
 243 0098 164B     	 ldr r3,.L16+8
 244 009a 1B78     	 ldrb r3,[r3]
 245 009c 1A46     	 mov r2,r3
 246 009e 164B     	 ldr r3,.L16+12
 247 00a0 9A5C     	 ldrb r2,[r3,r2]
 248 00a2 7B68     	 ldr r3,[r7,#4]
 249 00a4 1A70     	 strb r2,[r3]
 145:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		serial_rx_buf_head++;
 250              	 .loc 1 145 0
 251 00a6 134B     	 ldr r3,.L16+8
 252 00a8 1B78     	 ldrb r3,[r3]
 253 00aa 0133     	 adds r3,r3,#1
 254 00ac DAB2     	 uxtb r2,r3
 255 00ae 114B     	 ldr r3,.L16+8
 256 00b0 1A70     	 strb r2,[r3]
 146:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		serial_rx_count--;
 257              	 .loc 1 146 0
 258 00b2 0E4B     	 ldr r3,.L16
 259 00b4 1B78     	 ldrb r3,[r3]
 260 00b6 013B     	 subs r3,r3,#1
 261 00b8 DAB2     	 uxtb r2,r3
 262 00ba 0C4B     	 ldr r3,.L16
 263 00bc 1A70     	 strb r2,[r3]
 147:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		data++;
 264              	 .loc 1 147 0
 265 00be 7B68     	 ldr r3,[r7,#4]
 266 00c0 0133     	 adds r3,r3,#1
 267 00c2 7B60     	 str r3,[r7,#4]
 148:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		max_length--;
 268              	 .loc 1 148 0
 269 00c4 FB78     	 ldrb r3,[r7,#3]
 270 00c6 013B     	 subs r3,r3,#1
 271 00c8 FB70     	 strb r3,[r7,#3]
 149:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		if ((SERIAL_RX_BUF_SIZE_HOST) == serial_rx_buf_head) {
 272              	 .loc 1 149 0
 273 00ca 0A4B     	 ldr r3,.L16+8
 274 00cc 1B78     	 ldrb r3,[r3]
 275 00ce 9C2B     	 cmp r3,#156
 276 00d0 02D1     	 bne .L14
 150:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			serial_rx_buf_head = 0;
 277              	 .loc 1 150 0
 278 00d2 084B     	 ldr r3,.L16+8
 279 00d4 0022     	 movs r2,#0
 280 00d6 1A70     	 strb r2,[r3]
 281              	.L14:
 142:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		/* Start to copy from head. */
 282              	 .loc 1 142 0
 283 00d8 FB78     	 ldrb r3,[r7,#3]
 284 00da 002B     	 cmp r3,#0
 285 00dc DCD1     	 bne .L15
 151:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		}
 152:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	}
 153:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	return data_received;
 286              	 .loc 1 153 0
 287 00de FB7B     	 ldrb r3,[r7,#15]
 288              	.L10:
 154:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** }
 289              	 .loc 1 154 0
 290 00e0 1846     	 mov r0,r3
 291 00e2 1437     	 adds r7,r7,#20
 292              	.LCFI10:
 293              	 .cfi_def_cfa_offset 4
 294 00e4 BD46     	 mov sp,r7
 295              	.LCFI11:
 296              	 .cfi_def_cfa_register 13
 297              	 
 298 00e6 80BC     	 pop {r7}
 299              	.LCFI12:
 300              	 .cfi_restore 7
 301              	 .cfi_def_cfa_offset 0
 302 00e8 7047     	 bx lr
 303              	.L17:
 304 00ea 00BF     	 .align 2
 305              	.L16:
 306 00ec 00000000 	 .word serial_rx_count
 307 00f0 00000000 	 .word serial_rx_buf_tail
 308 00f4 00000000 	 .word serial_rx_buf_head
 309 00f8 00000000 	 .word serial_rx_buf
 310              	 .cfi_endproc
 311              	.LFE188:
 313              	 .align 1
 314              	 .global sio2host_getchar
 315              	 .syntax unified
 316              	 .thumb
 317              	 .thumb_func
 318              	 .fpu softvfp
 320              	sio2host_getchar:
 321              	.LFB189:
 155:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 156:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** uint8_t sio2host_getchar(void)
 157:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** {
 322              	 .loc 1 157 0
 323              	 .cfi_startproc
 324              	 
 325              	 
 326 00fc 80B5     	 push {r7,lr}
 327              	.LCFI13:
 328              	 .cfi_def_cfa_offset 8
 329              	 .cfi_offset 7,-8
 330              	 .cfi_offset 14,-4
 331 00fe 82B0     	 sub sp,sp,#8
 332              	.LCFI14:
 333              	 .cfi_def_cfa_offset 16
 334 0100 00AF     	 add r7,sp,#0
 335              	.LCFI15:
 336              	 .cfi_def_cfa_register 7
 158:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	uint8_t c;
 159:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	while (0 == sio2host_rx(&c, 1)) {
 337              	 .loc 1 159 0
 338 0102 00BF     	 nop
 339              	.L19:
 340              	 .loc 1 159 0 is_stmt 0 discriminator 1
 341 0104 FB1D     	 adds r3,r7,#7
 342 0106 0121     	 movs r1,#1
 343 0108 1846     	 mov r0,r3
 344 010a FFF7FEFF 	 bl sio2host_rx
 345 010e 0346     	 mov r3,r0
 346 0110 002B     	 cmp r3,#0
 347 0112 F7D0     	 beq .L19
 160:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	}
 161:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	return c;
 348              	 .loc 1 161 0 is_stmt 1
 349 0114 FB79     	 ldrb r3,[r7,#7]
 162:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** }
 350              	 .loc 1 162 0
 351 0116 1846     	 mov r0,r3
 352 0118 0837     	 adds r7,r7,#8
 353              	.LCFI16:
 354              	 .cfi_def_cfa_offset 8
 355 011a BD46     	 mov sp,r7
 356              	.LCFI17:
 357              	 .cfi_def_cfa_register 13
 358              	 
 359 011c 80BD     	 pop {r7,pc}
 360              	 .cfi_endproc
 361              	.LFE189:
 363              	 .align 1
 364              	 .global sio2host_putchar
 365              	 .syntax unified
 366              	 .thumb
 367              	 .thumb_func
 368              	 .fpu softvfp
 370              	sio2host_putchar:
 371              	.LFB190:
 163:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 164:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** void sio2host_putchar(uint8_t ch)
 165:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** {
 372              	 .loc 1 165 0
 373              	 .cfi_startproc
 374              	 
 375              	 
 376 011e 80B5     	 push {r7,lr}
 377              	.LCFI18:
 378              	 .cfi_def_cfa_offset 8
 379              	 .cfi_offset 7,-8
 380              	 .cfi_offset 14,-4
 381 0120 82B0     	 sub sp,sp,#8
 382              	.LCFI19:
 383              	 .cfi_def_cfa_offset 16
 384 0122 00AF     	 add r7,sp,#0
 385              	.LCFI20:
 386              	 .cfi_def_cfa_register 7
 387 0124 0346     	 mov r3,r0
 388 0126 FB71     	 strb r3,[r7,#7]
 166:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	sio2host_tx(&ch, 1);
 389              	 .loc 1 166 0
 390 0128 FB1D     	 adds r3,r7,#7
 391 012a 0121     	 movs r1,#1
 392 012c 1846     	 mov r0,r3
 393 012e FFF7FEFF 	 bl sio2host_tx
 167:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** }
 394              	 .loc 1 167 0
 395 0132 00BF     	 nop
 396 0134 0837     	 adds r7,r7,#8
 397              	.LCFI21:
 398              	 .cfi_def_cfa_offset 8
 399 0136 BD46     	 mov sp,r7
 400              	.LCFI22:
 401              	 .cfi_def_cfa_register 13
 402              	 
 403 0138 80BD     	 pop {r7,pc}
 404              	 .cfi_endproc
 405              	.LFE190:
 407              	 .align 1
 408              	 .global sio2host_getchar_nowait
 409              	 .syntax unified
 410              	 .thumb
 411              	 .thumb_func
 412              	 .fpu softvfp
 414              	sio2host_getchar_nowait:
 415              	.LFB191:
 168:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 169:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** int sio2host_getchar_nowait(void)
 170:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** {
 416              	 .loc 1 170 0
 417              	 .cfi_startproc
 418              	 
 419              	 
 420 013a 80B5     	 push {r7,lr}
 421              	.LCFI23:
 422              	 .cfi_def_cfa_offset 8
 423              	 .cfi_offset 7,-8
 424              	 .cfi_offset 14,-4
 425 013c 82B0     	 sub sp,sp,#8
 426              	.LCFI24:
 427              	 .cfi_def_cfa_offset 16
 428 013e 00AF     	 add r7,sp,#0
 429              	.LCFI25:
 430              	 .cfi_def_cfa_register 7
 171:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	uint8_t c;
 172:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 173:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	int back = sio2host_rx(&c, 1);
 431              	 .loc 1 173 0
 432 0140 FB1C     	 adds r3,r7,#3
 433 0142 0121     	 movs r1,#1
 434 0144 1846     	 mov r0,r3
 435 0146 FFF7FEFF 	 bl sio2host_rx
 436 014a 0346     	 mov r3,r0
 437 014c 7B60     	 str r3,[r7,#4]
 174:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	if (back >= 1) {
 438              	 .loc 1 174 0
 439 014e 7B68     	 ldr r3,[r7,#4]
 440 0150 002B     	 cmp r3,#0
 441 0152 01DD     	 ble .L23
 175:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		return c;
 442              	 .loc 1 175 0
 443 0154 FB78     	 ldrb r3,[r7,#3]
 444 0156 01E0     	 b .L25
 445              	.L23:
 176:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	} else {
 177:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		return (-1);
 446              	 .loc 1 177 0
 447 0158 4FF0FF33 	 mov r3,#-1
 448              	.L25:
 178:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	}
 179:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** }
 449              	 .loc 1 179 0 discriminator 1
 450 015c 1846     	 mov r0,r3
 451 015e 0837     	 adds r7,r7,#8
 452              	.LCFI26:
 453              	 .cfi_def_cfa_offset 8
 454 0160 BD46     	 mov sp,r7
 455              	.LCFI27:
 456              	 .cfi_def_cfa_register 13
 457              	 
 458 0162 80BD     	 pop {r7,pc}
 459              	 .cfi_endproc
 460              	.LFE191:
 462              	 .align 1
 463              	 .global main_cdc_enable
 464              	 .syntax unified
 465              	 .thumb
 466              	 .thumb_func
 467              	 .fpu softvfp
 469              	main_cdc_enable:
 470              	.LFB192:
 180:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 181:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** bool main_cdc_enable(uint8_t port)
 182:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** {
 471              	 .loc 1 182 0
 472              	 .cfi_startproc
 473              	 
 474              	 
 475              	 
 476 0164 80B4     	 push {r7}
 477              	.LCFI28:
 478              	 .cfi_def_cfa_offset 4
 479              	 .cfi_offset 7,-4
 480 0166 83B0     	 sub sp,sp,#12
 481              	.LCFI29:
 482              	 .cfi_def_cfa_offset 16
 483 0168 00AF     	 add r7,sp,#0
 484              	.LCFI30:
 485              	 .cfi_def_cfa_register 7
 486 016a 0346     	 mov r3,r0
 487 016c FB71     	 strb r3,[r7,#7]
 183:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	/* Indication to application when CDC is enabled successfully */
 184:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 185:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	main_b_cdc_enable = true;
 488              	 .loc 1 185 0
 489 016e 044B     	 ldr r3,.L28
 490 0170 0122     	 movs r2,#1
 491 0172 1A70     	 strb r2,[r3]
 186:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 187:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	/* Keep Compiler happy */
 188:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	port = port;
 189:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 190:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	return true;
 492              	 .loc 1 190 0
 493 0174 0123     	 movs r3,#1
 191:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** }
 494              	 .loc 1 191 0
 495 0176 1846     	 mov r0,r3
 496 0178 0C37     	 adds r7,r7,#12
 497              	.LCFI31:
 498              	 .cfi_def_cfa_offset 4
 499 017a BD46     	 mov sp,r7
 500              	.LCFI32:
 501              	 .cfi_def_cfa_register 13
 502              	 
 503 017c 80BC     	 pop {r7}
 504              	.LCFI33:
 505              	 .cfi_restore 7
 506              	 .cfi_def_cfa_offset 0
 507 017e 7047     	 bx lr
 508              	.L29:
 509              	 .align 2
 510              	.L28:
 511 0180 00000000 	 .word main_b_cdc_enable
 512              	 .cfi_endproc
 513              	.LFE192:
 515              	 .align 1
 516              	 .global main_cdc_disable
 517              	 .syntax unified
 518              	 .thumb
 519              	 .thumb_func
 520              	 .fpu softvfp
 522              	main_cdc_disable:
 523              	.LFB193:
 192:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 193:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** void main_cdc_disable(uint8_t port)
 194:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** {
 524              	 .loc 1 194 0
 525              	 .cfi_startproc
 526              	 
 527              	 
 528              	 
 529 0184 80B4     	 push {r7}
 530              	.LCFI34:
 531              	 .cfi_def_cfa_offset 4
 532              	 .cfi_offset 7,-4
 533 0186 83B0     	 sub sp,sp,#12
 534              	.LCFI35:
 535              	 .cfi_def_cfa_offset 16
 536 0188 00AF     	 add r7,sp,#0
 537              	.LCFI36:
 538              	 .cfi_def_cfa_register 7
 539 018a 0346     	 mov r3,r0
 540 018c FB71     	 strb r3,[r7,#7]
 195:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	main_b_cdc_enable = false;
 541              	 .loc 1 195 0
 542 018e 044B     	 ldr r3,.L31
 543 0190 0022     	 movs r2,#0
 544 0192 1A70     	 strb r2,[r3]
 196:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 197:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	/* Keep Compiler happy */
 198:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	port = port;
 199:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** }
 545              	 .loc 1 199 0
 546 0194 00BF     	 nop
 547 0196 0C37     	 adds r7,r7,#12
 548              	.LCFI37:
 549              	 .cfi_def_cfa_offset 4
 550 0198 BD46     	 mov sp,r7
 551              	.LCFI38:
 552              	 .cfi_def_cfa_register 13
 553              	 
 554 019a 80BC     	 pop {r7}
 555              	.LCFI39:
 556              	 .cfi_restore 7
 557              	 .cfi_def_cfa_offset 0
 558 019c 7047     	 bx lr
 559              	.L32:
 560 019e 00BF     	 .align 2
 561              	.L31:
 562 01a0 00000000 	 .word main_b_cdc_enable
 563              	 .cfi_endproc
 564              	.LFE193:
 566              	 .align 1
 567              	 .global dtr_cb
 568              	 .syntax unified
 569              	 .thumb
 570              	 .thumb_func
 571              	 .fpu softvfp
 573              	dtr_cb:
 574              	.LFB194:
 200:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 201:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** void dtr_cb(bool set)
 202:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** {
 575              	 .loc 1 202 0
 576              	 .cfi_startproc
 577              	 
 578              	 
 579 01a4 80B5     	 push {r7,lr}
 580              	.LCFI40:
 581              	 .cfi_def_cfa_offset 8
 582              	 .cfi_offset 7,-8
 583              	 .cfi_offset 14,-4
 584 01a6 82B0     	 sub sp,sp,#8
 585              	.LCFI41:
 586              	 .cfi_def_cfa_offset 16
 587 01a8 00AF     	 add r7,sp,#0
 588              	.LCFI42:
 589              	 .cfi_def_cfa_register 7
 590 01aa 0346     	 mov r3,r0
 591 01ac FB71     	 strb r3,[r7,#7]
 203:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	if (set) {
 592              	 .loc 1 203 0
 593 01ae FB79     	 ldrb r3,[r7,#7]
 594 01b0 002B     	 cmp r3,#0
 595 01b2 02D0     	 beq .L34
 204:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		stdio_usb_enable();
 596              	 .loc 1 204 0
 597 01b4 044B     	 ldr r3,.L37
 598 01b6 9847     	 blx r3
 599              	.LVL2:
 205:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	} else {
 206:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		stdio_usb_disable();
 207:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	}
 208:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** }
 600              	 .loc 1 208 0
 601 01b8 01E0     	 b .L36
 602              	.L34:
 206:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	}
 603              	 .loc 1 206 0
 604 01ba 044B     	 ldr r3,.L37+4
 605 01bc 9847     	 blx r3
 606              	.LVL3:
 607              	.L36:
 608              	 .loc 1 208 0
 609 01be 00BF     	 nop
 610 01c0 0837     	 adds r7,r7,#8
 611              	.LCFI43:
 612              	 .cfi_def_cfa_offset 8
 613 01c2 BD46     	 mov sp,r7
 614              	.LCFI44:
 615              	 .cfi_def_cfa_register 13
 616              	 
 617 01c4 80BD     	 pop {r7,pc}
 618              	.L38:
 619 01c6 00BF     	 .align 2
 620              	.L37:
 621 01c8 00000000 	 .word stdio_usb_enable
 622 01cc 00000000 	 .word stdio_usb_disable
 623              	 .cfi_endproc
 624              	.LFE194:
 626              	 .align 1
 627              	 .global usb_rx_notify
 628              	 .syntax unified
 629              	 .thumb
 630              	 .thumb_func
 631              	 .fpu softvfp
 633              	usb_rx_notify:
 634              	.LFB195:
 209:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 210:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** void usb_rx_notify(void)
 211:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** {
 635              	 .loc 1 211 0
 636              	 .cfi_startproc
 637              	 
 638              	 
 639 01d0 80B5     	 push {r7,lr}
 640              	.LCFI45:
 641              	 .cfi_def_cfa_offset 8
 642              	 .cfi_offset 7,-8
 643              	 .cfi_offset 14,-4
 644 01d2 82B0     	 sub sp,sp,#8
 645              	.LCFI46:
 646              	 .cfi_def_cfa_offset 16
 647 01d4 00AF     	 add r7,sp,#0
 648              	.LCFI47:
 649              	 .cfi_def_cfa_register 7
 212:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	if (main_b_cdc_enable) {
 650              	 .loc 1 212 0
 651 01d6 1C4B     	 ldr r3,.L46
 652 01d8 1B78     	 ldrb r3,[r3]
 653 01da DBB2     	 uxtb r3,r3
 654 01dc 002B     	 cmp r3,#0
 655 01de 2FD0     	 beq .L45
 213:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		while (udi_cdc_is_rx_ready()) {
 656              	 .loc 1 213 0
 657 01e0 29E0     	 b .L41
 658              	.L44:
 659              	.LBB11:
 214:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			uint8_t temp;
 215:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			temp = udi_cdc_getc();
 660              	 .loc 1 215 0
 661 01e2 1A4B     	 ldr r3,.L46+4
 662 01e4 9847     	 blx r3
 663              	.LVL4:
 664 01e6 0346     	 mov r3,r0
 665 01e8 FB71     	 strb r3,[r7,#7]
 666              	.LBB12:
 667              	.LBB13:
 668              	 .file 2 "../../../platform/thirdparty/CMSIS/include/core_cmFunc.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @file     core_cmFunc.h
   3:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @brief    CMSIS Cortex-M Core Function Access Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @date     19. January 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * within development tools that are supporting such ARM based processors. 
  14:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  24:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #ifndef __CORE_CMFUNC_H
  25:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __CORE_CMFUNC_H
  26:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* ###########################  Core Function Access  ########################### */
  28:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \ingroup  CMSIS_Core_FunctionInterface   
  29:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  30:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   @{
  31:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  32:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  33:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  34:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* ARM armcc specific functions */
  35:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  36:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__ARMCC_VERSION < 400677)
  37:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  38:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
  39:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  40:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* intrinsic void __enable_irq();     */
  41:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* intrinsic void __disable_irq();    */
  42:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  43:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Control Register
  44:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  45:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the Control Register.
  46:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  47:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Control Register value
  48:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  49:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_CONTROL(void)
  50:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  51:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  52:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regControl);
  53:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  54:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  55:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  56:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Control Register
  57:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  58:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function writes the given value to the Control Register.
  59:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  60:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    control  Control Register value to set
  61:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  62:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_CONTROL(uint32_t control)
  63:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  64:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  65:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regControl = control;
  66:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  67:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  68:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  69:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get IPSR Register
  70:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  71:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the IPSR Register.
  72:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  73:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               IPSR Register value
  74:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  75:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_IPSR(void)
  76:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  77:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regIPSR          __ASM("ipsr");
  78:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regIPSR);
  79:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  80:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  81:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  82:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get APSR Register
  83:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  84:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the APSR Register.
  85:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  86:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               APSR Register value
  87:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  88:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_APSR(void)
  89:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  90:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regAPSR          __ASM("apsr");
  91:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regAPSR);
  92:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  93:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  94:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  95:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get xPSR Register
  96:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  97:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the xPSR Register.
  98:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  99:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               xPSR Register value
 100:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 101:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_xPSR(void)
 102:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 103:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regXPSR          __ASM("xpsr");
 104:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regXPSR);
 105:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 106:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 107:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 108:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 109:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 110:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 111:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 112:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               PSP Register value
 113:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 114:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PSP(void)
 115:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 116:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 117:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regProcessStackPointer);
 118:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 119:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 120:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 121:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 122:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 123:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 124:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 125:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 126:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 127:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 128:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 129:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 130:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regProcessStackPointer = topOfProcStack;
 131:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 132:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 133:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 134:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 135:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 136:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 137:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 138:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               MSP Register value
 139:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 140:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_MSP(void)
 141:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 142:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 143:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regMainStackPointer);
 144:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 145:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 146:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 147:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 148:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 149:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 150:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 151:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 152:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 153:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 154:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 155:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 156:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regMainStackPointer = topOfMainStack;
 157:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 158:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 159:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 160:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Priority Mask
 161:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 162:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 163:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 164:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Priority Mask value
 165:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 166:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PRIMASK(void)
 167:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 168:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 169:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regPriMask);
 170:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 171:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 172:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 173:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Priority Mask
 174:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 175:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Priority Mask Register.
 176:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 177:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    priMask  Priority Mask
 178:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 179:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 180:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 181:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 182:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regPriMask = (priMask);
 183:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 184:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 185:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 186:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if       (__CORTEX_M >= 0x03)
 187:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 188:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Enable FIQ
 189:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 190:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function enables FIQ interrupts by clearing the F-bit in the CPSR.
 191:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     Can only be executed in Privileged modes.
 192:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 193:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __enable_fault_irq                __enable_fiq
 194:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 195:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 196:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Disable FIQ
 197:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 198:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function disables FIQ interrupts by setting the F-bit in the CPSR.
 199:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     Can only be executed in Privileged modes.
 200:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 201:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __disable_fault_irq               __disable_fiq
 202:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 203:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Base Priority
 205:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 206:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Base Priority register.
 207:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 208:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Base Priority register value
 209:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 210:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t  __get_BASEPRI(void)
 211:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 212:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 213:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regBasePri);
 214:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 215:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 216:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 217:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Base Priority
 218:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 219:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Base Priority register.
 220:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 221:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    basePri  Base Priority value to set
 222:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 223:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 224:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 225:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 226:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regBasePri = (basePri & 0xff);
 227:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 228:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 229:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 230:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Fault Mask
 231:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 232:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Fault Mask register.
 233:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 234:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Fault Mask register value
 235:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 236:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 237:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 238:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 239:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regFaultMask);
 240:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 241:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 242:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 243:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Fault Mask
 244:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 245:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Fault Mask register.
 246:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 247:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    faultMask  Fault Mask value to set
 248:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 249:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 250:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 251:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 252:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regFaultMask = (faultMask & (uint32_t)1);
 253:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 254:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 255:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif /* (__CORTEX_M >= 0x03) */
 256:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 257:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 258:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if       (__CORTEX_M == 0x04)
 259:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 260:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get FPSCR
 261:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 262:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Floating Point Status/Control register.
 263:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 264:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Floating Point Status/Control register value
 265:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 266:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FPSCR(void)
 267:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 268:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 269:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 270:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regfpscr);
 271:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #else
 272:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****    return(0);
 273:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
 274:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 275:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 276:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 277:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set FPSCR
 278:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 279:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Floating Point Status/Control register.
 280:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 281:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    fpscr  Floating Point Status/Control value to set
 282:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 283:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 284:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 285:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 286:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 287:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regfpscr = (fpscr);
 288:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
 289:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 290:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 291:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif /* (__CORTEX_M == 0x04) */
 292:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 293:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 294:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 295:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* IAR iccarm specific functions */
 296:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 297:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #include <cmsis_iar.h>
 298:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 299:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 300:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 301:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* TI CCS specific functions */
 302:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 303:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #include <cmsis_ccs.h>
 304:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 306:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 307:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* GNU gcc specific functions */
 308:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 309:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Enable IRQ Interrupts
 310:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 311:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   This function enables IRQ interrupts by clearing the I-bit in the CPSR.
 312:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   Can only be executed in Privileged modes.
 313:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 314:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
 315:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 316:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("cpsie i");
 317:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 318:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 319:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 320:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Disable IRQ Interrupts
 321:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 322:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   This function disables IRQ interrupts by setting the I-bit in the CPSR.
 323:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   Can only be executed in Privileged modes.
 324:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 325:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 326:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 327:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("cpsid i");
 669              	 .loc 2 327 0
 670              	 .syntax unified
 671              	
 672 01ea 72B6     	 cpsid i
 673              	
 674              	 .thumb
 675              	 .syntax unified
 676              	.LBE13:
 677              	.LBE12:
 678              	.LBB14:
 679              	.LBB15:
 680              	 .file 3 "../../../platform/thirdparty/CMSIS/include/core_cmInstr.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @date     07. February 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors.
  14:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  24:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  28:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   Access to dedicated instructions
  31:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   @{
  32:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** */
  33:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  34:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* ARM armcc specific functions */
  36:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  37:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #endif
  40:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  41:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  42:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  No Operation
  43:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  44:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  46:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __NOP                             __nop
  47:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  48:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  49:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  51:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     until one of a number of events occurs.
  53:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  54:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __WFI                             __wfi
  55:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  56:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  57:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Event
  58:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  59:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  62:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __WFE                             __wfe
  63:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  64:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  65:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Send Event
  66:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  67:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  69:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __SEV                             __sev
  70:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  71:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  72:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  74:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  75:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  76:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  78:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  80:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  81:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  83:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  84:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  86:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  88:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  89:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  91:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
  92:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  94:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  96:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  97:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  99:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 101:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 103:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 104:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __REV                             __rev
 105:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 106:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 107:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 109:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 111:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 113:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 114:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 115:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 116:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   rev16 r0, r0
 117:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   bx lr
 118:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 119:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 120:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 121:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 123:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 125:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 127:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 128:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 129:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 130:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   revsh r0, r0
 131:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   bx lr
 132:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 133:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 134:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 135:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 136:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 137:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 138:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 139:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 140:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 141:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Rotated value
 142:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 143:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __ROR                             __ror
 144:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 145:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 146:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 147:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 148:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 149:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 150:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 151:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 152:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 153:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 154:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 155:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __RBIT                            __rbit
 156:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 157:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 158:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 159:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 160:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 161:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 162:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 163:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 164:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 165:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 166:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 167:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 168:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 169:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 170:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 171:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 172:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 173:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 174:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 175:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 176:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 177:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 178:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 179:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 180:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 181:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 182:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 183:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 184:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 185:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 186:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 187:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 188:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 189:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 190:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 191:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 192:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 193:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 194:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 195:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 196:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 197:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 198:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 199:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 200:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 201:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 202:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 203:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 205:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 206:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 207:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 208:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 209:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 210:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 211:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 212:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 213:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 214:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 215:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 216:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 217:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 218:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 219:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 220:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 221:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 222:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 223:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 224:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 225:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 226:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 227:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 228:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 229:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CLREX                           __clrex
 230:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 231:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 232:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Signed Saturate
 233:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 234:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function saturates a signed value.
 235:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 236:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 238:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             Saturated value
 239:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 240:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __SSAT                            __ssat
 241:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 242:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 243:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 244:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 245:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function saturates an unsigned value.
 246:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 247:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 248:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 249:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             Saturated value
 250:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 251:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __USAT                            __usat
 252:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 253:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 254:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Count leading zeros
 255:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 256:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 257:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 258:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 259:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             number of leading zeros in value
 260:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 261:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CLZ                             __clz
 262:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 263:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 264:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 265:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 266:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 267:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 268:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* IAR iccarm specific functions */
 269:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 270:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #include <cmsis_iar.h>
 271:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 272:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 273:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 274:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* TI CCS specific functions */
 275:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 276:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #include <cmsis_ccs.h>
 277:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 278:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 279:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 280:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* GNU gcc specific functions */
 281:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 282:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  No Operation
 283:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 284:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 285:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 286:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 287:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 288:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("nop");
 289:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 290:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 291:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 292:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 293:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 294:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 295:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     until one of a number of events occurs.
 296:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 297:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
 298:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 299:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("wfi");
 300:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 301:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 302:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 303:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Event
 304:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 306:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 307:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 308:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFE(void)
 309:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 310:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("wfe");
 311:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 312:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 313:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 314:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Send Event
 315:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 316:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 317:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 318:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __SEV(void)
 319:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 320:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("sev");
 321:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 322:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 323:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 324:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 325:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 326:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 327:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 328:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     memory, after the instruction has been completed.
 329:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 330:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __ISB(void)
 331:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 332:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("isb");
 333:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 334:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 335:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 336:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 337:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 338:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 339:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 340:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 341:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
 342:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 343:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("dsb");
 344:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 345:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 346:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 347:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 348:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 349:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 350:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 351:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 352:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
 353:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 354:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("dmb");
 681              	 .loc 3 354 0
 682              	 .syntax unified
 683              	
 684 01ec BFF35F8F 	 dmb
 685              	
 686              	 .thumb
 687              	 .syntax unified
 688              	.LBE15:
 689              	.LBE14:
 216:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 217:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			/* Introducing critical section to avoid buffer
 218:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			 * corruption. */
 219:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			cpu_irq_disable();
 690              	 .loc 1 219 0
 691 01f0 174B     	 ldr r3,.L46+8
 692 01f2 0022     	 movs r2,#0
 693 01f4 1A70     	 strb r2,[r3]
 220:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 221:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			/* The count of characters present in receive buffer is
 222:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			 * incremented. */
 223:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			serial_rx_count++;
 694              	 .loc 1 223 0
 695 01f6 174B     	 ldr r3,.L46+12
 696 01f8 1B78     	 ldrb r3,[r3]
 697 01fa 0133     	 adds r3,r3,#1
 698 01fc DAB2     	 uxtb r2,r3
 699 01fe 154B     	 ldr r3,.L46+12
 700 0200 1A70     	 strb r2,[r3]
 224:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			serial_rx_buf[serial_rx_buf_tail] = temp;
 701              	 .loc 1 224 0
 702 0202 154B     	 ldr r3,.L46+16
 703 0204 1B78     	 ldrb r3,[r3]
 704 0206 1946     	 mov r1,r3
 705 0208 144A     	 ldr r2,.L46+20
 706 020a FB79     	 ldrb r3,[r7,#7]
 707 020c 5354     	 strb r3,[r2,r1]
 225:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 226:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			if ((SERIAL_RX_BUF_SIZE_HOST - 1) ==
 708              	 .loc 1 226 0
 709 020e 124B     	 ldr r3,.L46+16
 710 0210 1B78     	 ldrb r3,[r3]
 711 0212 9B2B     	 cmp r3,#155
 712 0214 03D1     	 bne .L42
 227:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 					serial_rx_buf_tail) {
 228:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 				/* Reached the end of buffer, revert back to
 229:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 				 * beginning of buffer. */
 230:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 				serial_rx_buf_tail = 0x00;
 713              	 .loc 1 230 0
 714 0216 104B     	 ldr r3,.L46+16
 715 0218 0022     	 movs r2,#0
 716 021a 1A70     	 strb r2,[r3]
 717 021c 05E0     	 b .L43
 718              	.L42:
 231:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			} else {
 232:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 				serial_rx_buf_tail++;
 719              	 .loc 1 232 0
 720 021e 0E4B     	 ldr r3,.L46+16
 721 0220 1B78     	 ldrb r3,[r3]
 722 0222 0133     	 adds r3,r3,#1
 723 0224 DAB2     	 uxtb r2,r3
 724 0226 0C4B     	 ldr r3,.L46+16
 725 0228 1A70     	 strb r2,[r3]
 726              	.L43:
 233:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			}
 234:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 
 235:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			cpu_irq_enable();
 727              	 .loc 1 235 0
 728 022a 094B     	 ldr r3,.L46+8
 729 022c 0122     	 movs r2,#1
 730 022e 1A70     	 strb r2,[r3]
 731              	.LBB16:
 732              	.LBB17:
 733              	 .loc 3 354 0
 734              	 .syntax unified
 735              	
 736 0230 BFF35F8F 	 dmb
 737              	
 738              	 .thumb
 739              	 .syntax unified
 740              	.LBE17:
 741              	.LBE16:
 742              	.LBB18:
 743              	.LBB19:
 316:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 744              	 .loc 2 316 0
 745              	 .syntax unified
 746              	
 747 0234 62B6     	 cpsie i
 748              	
 749              	 .thumb
 750              	 .syntax unified
 751              	.L41:
 752              	.LBE19:
 753              	.LBE18:
 754              	.LBE11:
 213:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 			uint8_t temp;
 755              	 .loc 1 213 0
 756 0236 0A4B     	 ldr r3,.L46+24
 757 0238 9847     	 blx r3
 758              	.LVL5:
 759 023a 0346     	 mov r3,r0
 760 023c 002B     	 cmp r3,#0
 761 023e D0D1     	 bne .L44
 762              	.L45:
 236:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 		}
 237:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** 	}
 238:../../../platform/thirdparty/wireless/addons/sio2host/usb/sio2host.c **** }
 763              	 .loc 1 238 0
 764 0240 00BF     	 nop
 765 0242 0837     	 adds r7,r7,#8
 766              	.LCFI48:
 767              	 .cfi_def_cfa_offset 8
 768 0244 BD46     	 mov sp,r7
 769              	.LCFI49:
 770              	 .cfi_def_cfa_register 13
 771              	 
 772 0246 80BD     	 pop {r7,pc}
 773              	.L47:
 774              	 .align 2
 775              	.L46:
 776 0248 00000000 	 .word main_b_cdc_enable
 777 024c 00000000 	 .word udi_cdc_getc
 778 0250 00000000 	 .word g_interrupt_enabled
 779 0254 00000000 	 .word serial_rx_count
 780 0258 00000000 	 .word serial_rx_buf_tail
 781 025c 00000000 	 .word serial_rx_buf
 782 0260 00000000 	 .word udi_cdc_is_rx_ready
 783              	 .cfi_endproc
 784              	.LFE195:
 786              	.Letext0:
 787              	 .file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 788              	 .file 5 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 789              	 .file 6 "../../../platform/thirdparty/CMSIS/include/core_cm4.h"
 790              	 .file 7 "../../../platform/sam/utils/cmsis/sam4l/source/templates/system_sam4l.h"
 791              	 .file 8 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 792              	 .file 9 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 793              	 .file 10 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 794              	 .file 11 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 795              	 .file 12 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdlib.h"
 796              	 .file 13 "../../../platform/common/utils/interrupt/interrupt_sam_nvic.h"
 797              	 .file 14 "../../../platform/sam/utils/compiler.h"
 798              	 .file 15 "../../../platform/common/services/usb/usb_protocol.h"
 799              	 .file 16 "../../../platform/common/services/usb/udc/udi.h"
 800              	 .file 17 "../../../platform/common/services/usb/udc/udc_desc.h"
 801              	 .file 18 "../../../platform/common/services/usb/udc/udd.h"
 802              	 .file 19 "../../../platform/common/services/usb/class/cdc/device/udi_cdc.h"
 803              	 .file 20 "../../../platform/common/utils/stdio/stdio_usb/stdio_usb.h"
 804              	 .file 21 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 sio2host.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
                            *COM*:00000001 n
    {standard input}:28     .bss.tTS:00000000 $d
    {standard input}:31     .bss.tTS:00000000 tTS
    {standard input}:34     .bss.serial_rx_buf:00000000 $d
    {standard input}:37     .bss.serial_rx_buf:00000000 serial_rx_buf
    {standard input}:42     .bss.serial_rx_buf_head:00000000 serial_rx_buf_head
    {standard input}:43     .bss.serial_rx_buf_head:00000000 $d
    {standard input}:47     .bss.serial_rx_buf_tail:00000000 serial_rx_buf_tail
    {standard input}:48     .bss.serial_rx_buf_tail:00000000 $d
    {standard input}:52     .bss.serial_rx_count:00000000 serial_rx_count
    {standard input}:53     .bss.serial_rx_count:00000000 $d
    {standard input}:57     .bss.usb_rx_byte_rcvd:00000000 usb_rx_byte_rcvd
    {standard input}:58     .bss.usb_rx_byte_rcvd:00000000 $d
    {standard input}:62     .bss.main_b_cdc_enable:00000000 main_b_cdc_enable
    {standard input}:63     .bss.main_b_cdc_enable:00000000 $d
    {standard input}:65     .text:00000000 $t
    {standard input}:72     .text:00000000 sio2host_init
    {standard input}:97     .text:0000000c $d
    {standard input}:101    .text:00000010 $t
    {standard input}:108    .text:00000010 sio2host_tx
    {standard input}:159    .text:00000040 $d
    {standard input}:163    .text:00000044 $t
    {standard input}:170    .text:00000044 sio2host_rx
    {standard input}:306    .text:000000ec $d
    {standard input}:313    .text:000000fc $t
    {standard input}:320    .text:000000fc sio2host_getchar
    {standard input}:370    .text:0000011e sio2host_putchar
    {standard input}:414    .text:0000013a sio2host_getchar_nowait
    {standard input}:469    .text:00000164 main_cdc_enable
    {standard input}:511    .text:00000180 $d
    {standard input}:515    .text:00000184 $t
    {standard input}:522    .text:00000184 main_cdc_disable
    {standard input}:562    .text:000001a0 $d
    {standard input}:566    .text:000001a4 $t
    {standard input}:573    .text:000001a4 dtr_cb
    {standard input}:621    .text:000001c8 $d
    {standard input}:626    .text:000001d0 $t
    {standard input}:633    .text:000001d0 usb_rx_notify
    {standard input}:776    .text:00000248 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
stdio_usb_init
udi_cdc_write_buf
stdio_usb_enable
stdio_usb_disable
udi_cdc_getc
g_interrupt_enabled
udi_cdc_is_rx_ready
