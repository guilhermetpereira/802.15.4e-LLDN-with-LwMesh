   1               		.file	"sio2host.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.progmem.data.baudctrl_1mhz,"a",@progbits
  14               	baudctrl_1mhz:
  15 0000 3300      		.word	51
  16 0002 1900      		.word	25
  17 0004 0C00      		.word	12
  18 0006 0600      		.word	6
  19 0008 0300      		.word	3
  20 000a 0200      		.word	2
  21 000c 0100      		.word	1
  22 000e FF00      		.word	255
  23               		.section	.progmem.data.baudctrl_8mhz,"a",@progbits
  26               	baudctrl_8mhz:
  27 0000 A001      		.word	416
  28 0002 CF00      		.word	207
  29 0004 6700      		.word	103
  30 0006 3300      		.word	51
  31 0008 1900      		.word	25
  32 000a 0C00      		.word	12
  33 000c 0700      		.word	7
  34 000e 0800      		.word	8
  35               		.section	.progmem.data.baudctrl_16mhz,"a",@progbits
  38               	baudctrl_16mhz:
  39 0000 4003      		.word	832
  40 0002 A001      		.word	416
  41 0004 CF00      		.word	207
  42 0006 6700      		.word	103
  43 0008 3300      		.word	51
  44 000a 1900      		.word	25
  45 000c 1000      		.word	16
  46 000e 1000      		.word	16
  47               		.text
  49               	usart_rx_complete_interrupt_enable:
  50               	.LFB80:
  51               		.file 1 "../../../platform/mega_rf/drivers/usart/usart_megarf.h"
   1:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /**
   2:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \file
   3:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
   4:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \brief USART driver for AVR MEGARF.
   5:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
   6:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * This file contains basic functions for the AVR MEGA USART, with support for
   7:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * all modes, settings and clock speeds.
   8:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
   9:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * Copyright (c) 2013-2015 Atmel Corporation. All rights reserved.
  10:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  11:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \asf_license_start
  12:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  13:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \page License
  14:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  15:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * Redistribution and use in source and binary forms, with or without
  16:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * modification, are permitted provided that the following conditions are met:
  17:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  18:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  19:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *    this list of conditions and the following disclaimer.
  20:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  21:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *    this list of conditions and the following disclaimer in the documentation
  23:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *    and/or other materials provided with the distribution.
  24:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  25:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  26:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *    from this software without specific prior written permission.
  27:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  28:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * 4. This software may only be redistributed and used in connection with an
  29:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *    Atmel microcontroller product.
  30:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  31:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  32:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  33:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  34:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  35:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  36:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  37:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  38:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  39:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  40:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  41:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * POSSIBILITY OF SUCH DAMAGE.
  42:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  43:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \asf_license_stop
  44:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  45:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  */
  46:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #ifndef _USART_MEGARF_H_
  47:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define _USART_MEGARF_H_
  48:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
  49:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #ifdef __cplusplus
  50:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** extern "C" {
  51:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #endif
  52:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
  53:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #include "compiler.h"
  54:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #include "status_codes.h"
  55:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
  56:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /**
  57:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \defgroup megarf_usart_group USART module (USART)
  58:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  59:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * See \ref megarf_usart_quickstart.
  60:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  61:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * This is a driver for configuring, enabling, disabling and use of the on-chip
  62:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * USART.
  63:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  64:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \section dependencies Dependencies
  65:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  66:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * The USART module depends on the following modules:
  67:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *  - \ref sysclk_group for peripheral clock control.
  68:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *  - \ref port_driver_group for peripheral io port control.
  69:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
  70:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * @{
  71:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  */
  72:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
  73:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* ! Offset in lookup table for baudrate 1200 */
  74:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_BAUD_1200      0x00
  75:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* ! Offset in lookup table for baudrate 2400 */
  76:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_BAUD_2400      0x01
  77:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* ! Offset in lookup table for baudrate 4800 */
  78:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_BAUD_4800      0x02
  79:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* ! Offset in lookup table for baudrate 9600 */
  80:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_BAUD_9600      0x03
  81:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* ! Offset in lookup table for baudrate 19200 */
  82:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_BAUD_19200     0x04
  83:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* ! Offset in lookup table for baudrate 38400 */
  84:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_BAUD_38400     0x05
  85:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* ! Offset in lookup table for baudrate 57600 */
  86:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_BAUD_57600     0x06
  87:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* ! Offset in lookup table for baudrate 115200 */
  88:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_BAUD_115200    0x07
  89:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* ! Baudrate not in lookup table */
  90:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_BAUD_UNDEFINED 0xFF
  91:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
  92:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** typedef volatile uint8_t register8_t;
  93:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** typedef volatile uint16_t register16_t;
  94:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* Universal Synchronous/Asynchronous Receiver/Transmitter */
  95:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** typedef struct USART_struct {
  96:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	register8_t UCSRnA;  /* Control Register A */
  97:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	register8_t UCSRnB;  /* Control Register B */
  98:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	register8_t UCSRnC;  /* Control Register C */
  99:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	register8_t reserved;
 100:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	register16_t UBRR;  /* Baud Rate Register Value */
 101:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	register8_t UDR;  /* I/O Data Register */
 102:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** } USART_t;
 103:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 104:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USARTA0    (*(USART_t *)0xC0)   /* Universal Asynchronous
 105:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	                                 * Receiver-Transmitter A0 */
 106:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USARTA1    (*(USART_t *)0XC8)   /* Universal Asynchronous
 107:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	                                 * Receiver-Transmitter A1 */
 108:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 109:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* USART.UCSRxA  bit masks and bit positions */
 110:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_RXC_bm  0x80 /* RX complete bit mask.*/
 111:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_RXC_bp  7 /* RX complete bit position.*/
 112:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 113:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_TXC_bm  0x40 /* TX complete bit mask.*/
 114:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_TXC_bp  6 /* TX complete bit position.*/
 115:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 116:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_DRE_bm  0x20 /* DATA Register Empty Bit mask.*/
 117:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_DRE_bp  5 /*  DATA Register Empty bit position.*/
 118:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 119:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_FE_bm   0x10 /* Frame Error bit mask.*/
 120:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_FE_bp   4 /*Frame error bit position.*/
 121:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 122:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_DOR_bm  0x08 /* Data Over Run bit mask.*/
 123:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_DOR_bp  3 /* Data Over Run bit position.*/
 124:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 125:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_UPE_bm  0x04 /* Parity error bit mask.*/
 126:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_UPE_bp  2 /* Parity error bit position.*/
 127:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 128:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_U2X_bm  0x02 /* Double TX speed bit mask.*/
 129:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_U2X_bp  1 /* Double TX speed bit position.*/
 130:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 131:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_MPCM_bm  0x01 /* Multi Processor bit mask.*/
 132:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_MPMC_bp  0 /* Multi processor bit position.*/
 133:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 134:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* USART.UCSRxB  bit masks and bit positions */
 135:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_RXCIE_bm  0x80 /* RX complete interrupt Enable bit mask.*/
 136:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_RXCIE_bp  7 /* RX complete interrupt Enable bit position.*/
 137:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 138:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_TXCIE_bm  0x40 /* TX complete interrupt Enable bit mask.*/
 139:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_TXCIE_bp  6 /* TX complete interrupt Enable bit position.*/
 140:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 141:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_DRIE_bm  0x20 /* Data register empty interrupt Enable bit mask.*/
 142:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_DRIE_bp  5 /* Data register empty interrupt Enable bit position.*/
 143:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 144:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_RXEN_bm  0x10  /* Receiver Enable bit mask. */
 145:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_RXEN_bp  4  /* Receiver Enable bit position. */
 146:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 147:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_TXEN_bm  0x08  /* Transmitter Enable bit mask. */
 148:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_TXEN_bp  3  /* Transmitter Enable bit position. */
 149:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 150:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_CHSIZE2_bm  0x04  /* Character Size bit mask. */
 151:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_CHSIZE2_bp  2 /* Character Size bit position. */
 152:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 153:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_RXB8_bm  0x02  /* Transmit bit 8 bit mask. */
 154:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_RXB8_bp  1  /* Transmit bit 8 bit position. */
 155:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 156:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_TXB8_bm  0x01  /* Transmit bit 8 bit mask. */
 157:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_TXB8_bp  0  /* Transmit bit 8 bit position. */
 158:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 159:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* USART.UCSRxC  bit masks and bit positions */
 160:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_UMSEL01_gm  0xC0 /* USART Mode Select 01 grp mask.*/
 161:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_UMSEL01_gp  6 /* USART Mode Select 01 grp position.*/
 162:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 163:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_UMSEL01_bm  0x80 /* USART Mode Select 01 bit mask.*/
 164:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_UMSEL01_bp  7 /* USART Mode Select 01 bit position.*/
 165:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 166:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_UMSEL00_bm  0x40 /* USART Mode Select 00 bit mask.*/
 167:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_UMSEL00_bp  6 /* USART Mode Select 00 bit position.*/
 168:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 169:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_PMODE_gm  0x30 /* USART Parity Mode Select grp mask.*/
 170:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_PMODE_gp  4 /* USART Parity Mode Select grp position.*/
 171:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 172:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_PMODE01_bm  0x20 /* USART Parity Mode Select 01 bit mask.*/
 173:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_PMODE01_bp  5 /* USART Parity Mode Select 01 bit position.*/
 174:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 175:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_PMODE00_bm  0x10 /* USART Parity Mode Select 00 bit mask.*/
 176:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_PMODE00_bp  4 /* USART Parity Mode Select 00 bit position.*/
 177:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 178:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_STOPB_bm  0x08 /* USART stop bit mask.*/
 179:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_STOPB_bp  3 /* USART stop bit Position.*/
 180:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 181:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_CHSIZE01C_gm  0x06  /* Character Size 10 bit 1 mask. */
 182:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_CHSIZE01C_gp  1 /* Character Size 10 bit position. */
 183:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 184:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_CHSIZE01_bm  0x04  /* Character Size 10 bit 1 mask. */
 185:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_CHSIZE01_bp  2 /* Character Size 10 bit position. */
 186:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 187:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_CHSIZE00_bm  0x02  /* Character Size 00 bit 1 mask. */
 188:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_CHSIZE00_bp  1 /* Character Size bit 00 position. */
 189:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 190:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_UCPOL_bm  0x01  /* Sync mode Pol bit 1 mask. */
 191:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_UCPOL_bp  0 /*Sync mode Pol bit 0 position */
 192:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 193:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_UCPHA_bm 0x02 /* Clock Phase bit mask. */
 194:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_UCPHA_bp 1 /* Clock Phase bit position. */
 195:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 196:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_DORD_bm 0x04 /* Data order bit mask. */
 197:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** #define USART_DORD_bp 2 /* Data order bit position. */
 198:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 199:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* Character Size */
 200:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** typedef enum USART_CHSIZE_enum {
 201:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_CHSIZE_5BIT_gc = (0x00),  /* Character size: 5 bit */
 202:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_CHSIZE_6BIT_gc = (0x01),  /* Character size: 6 bit */
 203:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_CHSIZE_7BIT_gc = (0x02),  /* Character size: 7 bit */
 204:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_CHSIZE_8BIT_gc = (0x03),  /* Character size: 8 bit */
 205:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_CHSIZE_9BIT_gc = (0x07),  /* Character size: 9 bit */
 206:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** } USART_CHSIZE_t;
 207:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 208:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* Communication Mode */
 209:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** typedef enum USART_CMODE_enum {
 210:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_CMODE_ASYNCHRONOUS_gc = (0x00 << USART_UMSEL01_gp),  /*
 211:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	                                                            *
 212:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	                                                            *
 213:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	                                                            *Asynchronous
 214:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	                                                            * Mode */
 215:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_CMODE_SYNCHRONOUS_gc = (0x01 << USART_UMSEL01_gp),  /* Synchronous
 216:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	                                                           * Mode */
 217:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_CMODE_IRDA_gc = (0x02 << USART_UMSEL01_gp),  /* IrDA Mode */
 218:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_CMODE_MSPI_gc = (0x03 << USART_UMSEL01_gp),  /* Master SPI Mode */
 219:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** } USART_CMODE_t;
 220:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 221:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* Parity Mode */
 222:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** typedef enum USART_PMODE_enum {
 223:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_PMODE_DISABLED_gc = (0x00 << USART_PMODE_gp),  /* No Parity */
 224:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_PMODE_EVEN_gc = (0x02 << USART_PMODE_gp),  /* Even Parity */
 225:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_PMODE_ODD_gc = (0x03 << USART_PMODE_gp),  /* Odd Parity */
 226:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** } USART_PMODE_t;
 227:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 228:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* ! Lookup table containing baudctrl values for CPU frequency 1 Mhz */
 229:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** static PROGMEM_DECLARE(uint16_t, baudctrl_1mhz[]) = {
 230:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0033, /* Baud: 1200 */
 231:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0019, /* Baud: 2400 */
 232:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x000C, /* Baud: 4800 */
 233:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0006, /* Baud: 9600 */
 234:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0003, /* Baud: 19200 */
 235:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0002, /* Baud: 38400 */
 236:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0001, /* Baud: 57600 */
 237:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_BAUD_UNDEFINED, /* Baud: 115200 */
 238:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** };
 239:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 240:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* ! Lookup table containing baudctrl values for CPU frequency 8 Mhz */
 241:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** static PROGMEM_DECLARE(uint16_t, baudctrl_8mhz[]) = {
 242:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x01A0, /* Baud: 1200 */
 243:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x00CF, /* Baud: 2400 */
 244:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0067, /* Baud: 4800 */
 245:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0033, /* Baud: 9600 */
 246:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0019, /* Baud: 19200 */
 247:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x000C, /* Baud: 38400 */
 248:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0007, /* Baud: 57600 */
 249:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0008, /* Baud: 115200 */
 250:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** };
 251:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 252:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* ! Lookup table containing baudctrl values for CPU frequency 16 Mhz */
 253:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** static PROGMEM_DECLARE(uint16_t, baudctrl_16mhz[]) = {
 254:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0340, /* Baud: 1200 */
 255:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x01A0, /* Baud: 2400 */
 256:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x00CF, /* Baud: 4800 */
 257:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0067, /* Baud: 9600 */
 258:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0033, /* Baud: 19200 */
 259:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0019, /* Baud: 38400 */
 260:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0010, /* Baud: 57600 */
 261:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	0x0010, /* Baud: 115200 */
 262:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** };
 263:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 264:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 265:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* ! Input parameters when initializing RS232 and similar modes. */
 266:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** typedef struct usart_rs232_options {
 267:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	/* ! Set baud rate of the USART (unused in slave modes). */
 268:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	uint32_t baudrate;
 269:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 270:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	/* ! Number of bits to transmit as a character (5 to 9). */
 271:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_CHSIZE_t charlength;
 272:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 273:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	/* ! Parity type: USART_PMODE_DISABLED_gc, USART_PMODE_EVEN_gc, */
 274:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	/* ! USART_PMODE_ODD_gc. */
 275:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	USART_PMODE_t paritytype;
 276:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 277:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	/* ! Number of stop bits between two characters: */
 278:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	/* ! true: 2 stop bits */
 279:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	/* ! false: 1 stop bit */
 280:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	bool stopbits;
 281:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** } usart_rs232_options_t;
 282:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 283:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /* ! Input parameters when initializing SPI master mode. */
 284:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** typedef struct usart_spi_options {
 285:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	/* ! Set baud rate of the USART in SPI mode. */
 286:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	uint32_t baudrate;
 287:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 288:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	/* ! SPI transmission mode. */
 289:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	uint8_t spimode;
 290:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 291:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	uint8_t data_order;
 292:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** } usart_spi_options_t;
 293:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 294:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 295:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /**
 296:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \brief Enable USART receiver.
 297:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
 298:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \param usart Pointer to the USART module
 299:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  */
 300:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** static inline void usart_rx_enable(USART_t *usart)
 301:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** {
 302:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	(usart)->UCSRnB |= USART_RXEN_bm;
 303:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** }
 304:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 305:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /**
 306:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \brief Disable USART receiver.
 307:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
 308:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \param usart Pointer to the USART module.
 309:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  */
 310:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** static inline void usart_rx_disable(USART_t *usart)
 311:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** {
 312:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	(usart)->UCSRnB &= ~USART_RXEN_bm;
 313:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** }
 314:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 315:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /**
 316:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \brief  Configure the USART frame format.
 317:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
 318:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *  Sets the frame format, Frame Size, parity mode and number of stop bits.
 319:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
 320:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *  \param usart Pointer to the USART module
 321:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *  \param charSize The character size. Use USART_CHSIZE_t type.
 322:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *  \param parityMode The parity Mode. Use USART_PMODE_t type.
 323:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *  \param twoStopBits Enable two stop bit mode. Use bool type.
 324:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  */
 325:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
 326:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 		USART_PMODE_t parityMode, bool twoStopBits)
 327:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** {
 328:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	(usart)->UCSRnC
 329:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 		= ((usart)->UCSRnC &
 330:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 			(~USART_CHSIZE01C_gm)) | ((charSize & 0x03)
 331:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 			<< USART_CHSIZE01C_gp);
 332:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	(usart)->UCSRnB
 333:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 		= ((usart)->UCSRnB &
 334:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 			(~USART_CHSIZE2_bm)) | ((charSize & 0x04)
 335:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 			<< USART_CHSIZE2_bp);
 336:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 337:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	(usart)->UCSRnC = ((usart)->UCSRnC & (~USART_PMODE_gm)) | parityMode;
 338:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 339:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	(usart)->UCSRnC = ((usart)->UCSRnC & (~USART_STOPB_bm)) | (twoStopBits
 340:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 			<< USART_STOPB_bp);
 341:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** }
 342:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 343:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /**
 344:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \brief Enable USART transmitter.
 345:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
 346:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \param usart Pointer to the USART module.
 347:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  */
 348:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** static inline void usart_tx_enable(USART_t *usart)
 349:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** {
 350:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	(usart)->UCSRnB |= USART_TXEN_bm;
 351:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** }
 352:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 353:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /**
 354:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \brief Disable USART transmitter.
 355:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
 356:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \param usart Pointer to the USART module.
 357:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  */
 358:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** static inline void usart_tx_disable(USART_t *usart)
 359:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** {
 360:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	(usart)->UCSRnB &= ~USART_TXEN_bm;
 361:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** }
 362:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 363:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /**
 364:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \brief Enable USART transmit complete interrupt.
 365:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
 366:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \param usart Pointer to the USART module.
 367:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  */
 368:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** static inline void usart_tx_complete_interrupt_enable(USART_t *usart)
 369:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** {
 370:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	(usart)->UCSRnB |= USART_TXC_bm;
 371:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** }
 372:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 
 373:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** /**
 374:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \brief Enable USART receive complete interrupt.
 375:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  *
 376:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  * \param usart Pointer to the USART module.
 377:../../../platform/mega_rf/drivers/usart/usart_megarf.h ****  */
 378:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** static inline void usart_rx_complete_interrupt_enable(USART_t *usart)
 379:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** {
  52               		.loc 1 379 0
  53               		.cfi_startproc
  54 0000 CF93      		push r28
  55               	.LCFI0:
  56               		.cfi_def_cfa_offset 3
  57               		.cfi_offset 28, -2
  58 0002 DF93      		push r29
  59               	.LCFI1:
  60               		.cfi_def_cfa_offset 4
  61               		.cfi_offset 29, -3
  62 0004 00D0      		rcall .
  63               	.LCFI2:
  64               		.cfi_def_cfa_offset 6
  65 0006 CDB7      		in r28,__SP_L__
  66 0008 DEB7      		in r29,__SP_H__
  67               	.LCFI3:
  68               		.cfi_def_cfa_register 28
  69               	/* prologue: function */
  70               	/* frame size = 2 */
  71               	/* stack size = 4 */
  72               	.L__stack_usage = 4
  73 000a 9A83      		std Y+2,r25
  74 000c 8983      		std Y+1,r24
 380:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** 	(usart)->UCSRnB |= USART_RXC_bm;
  75               		.loc 1 380 0
  76 000e 8981      		ldd r24,Y+1
  77 0010 9A81      		ldd r25,Y+2
  78 0012 FC01      		movw r30,r24
  79 0014 8181      		ldd r24,Z+1
  80 0016 282F      		mov r18,r24
  81 0018 2068      		ori r18,lo8(-128)
  82 001a 8981      		ldd r24,Y+1
  83 001c 9A81      		ldd r25,Y+2
  84 001e FC01      		movw r30,r24
  85 0020 2183      		std Z+1,r18
 381:../../../platform/mega_rf/drivers/usart/usart_megarf.h **** }
  86               		.loc 1 381 0
  87 0022 0000      		nop
  88               	/* epilogue start */
  89 0024 0F90      		pop __tmp_reg__
  90 0026 0F90      		pop __tmp_reg__
  91 0028 DF91      		pop r29
  92 002a CF91      		pop r28
  93 002c 0895      		ret
  94               		.cfi_endproc
  95               	.LFE80:
  98               	usart_serial_init:
  99               	.LFB95:
 100               		.file 2 "../../../platform/common/services/serial/megarf_usart/usart_serial.h"
   1:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** /**
   2:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * \file
   3:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
   4:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * \brief This file defines a useful set of functions for the Serial interface on 
   5:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * AVR MEGARF devices.
   6:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
   7:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * Copyright (c) 2013 Atmel Corporation. All rights reserved.
   8:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
   9:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * \asf_license_start
  10:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
  11:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * \page License
  12:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
  13:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * Redistribution and use in source and binary forms, with or without
  14:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * modification, are permitted provided that the following conditions are met:
  15:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
  16:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  17:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *    this list of conditions and the following disclaimer.
  18:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
  19:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  20:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *    this list of conditions and the following disclaimer in the documentation
  21:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *    and/or other materials provided with the distribution.
  22:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
  23:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  24:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *    from this software without specific prior written permission.
  25:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
  26:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * 4. This software may only be redistributed and used in connection with an
  27:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *    Atmel microcontroller product.
  28:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
  29:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  30:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  31:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  32:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  33:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  35:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  36:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  37:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  38:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  39:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * POSSIBILITY OF SUCH DAMAGE.
  40:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
  41:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * \asf_license_stop
  42:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
  43:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  */
  44:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** #ifndef _USART_SERIAL_H_
  45:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** #define _USART_SERIAL_H_
  46:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 
  47:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** #ifdef __cplusplus
  48:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** extern "C" {
  49:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** #endif
  50:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 
  51:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** #include "compiler.h"
  52:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** #include "sysclk.h"
  53:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** #include "status_codes.h"
  54:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** #include "usart_megarf.h"
  55:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 
  56:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** /*! \name Serial Management Configuration
  57:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  */
  58:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** /* ! @{ */
  59:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** #include "conf_usart_serial.h"
  60:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** /* ! @} */
  61:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 
  62:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** typedef usart_rs232_options_t usart_serial_options_t;
  63:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 
  64:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** typedef USART_t *usart_if;
  65:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 
  66:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** /*! \brief Initializes the Usart in master mode.
  67:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
  68:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * \param usart       Base address of the USART instance.
  69:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * \param options     Options needed to set up RS232 communication (see \ref
  70:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * usart_serial_options_t).
  71:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
  72:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * \retval true if the initialization was successful
  73:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * \retval false if initialization failed (error in baud rate calculation)
  74:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  */
  75:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** static inline bool usart_serial_init(usart_if usart, const
  76:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 		usart_serial_options_t *options)
  77:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** {
 101               		.loc 2 77 0
 102               		.cfi_startproc
 103 002e CF93      		push r28
 104               	.LCFI4:
 105               		.cfi_def_cfa_offset 3
 106               		.cfi_offset 28, -2
 107 0030 DF93      		push r29
 108               	.LCFI5:
 109               		.cfi_def_cfa_offset 4
 110               		.cfi_offset 29, -3
 111 0032 CDB7      		in r28,__SP_L__
 112 0034 DEB7      		in r29,__SP_H__
 113               	.LCFI6:
 114               		.cfi_def_cfa_register 28
 115 0036 2B97      		sbiw r28,11
 116               	.LCFI7:
 117               		.cfi_def_cfa_offset 15
 118 0038 0FB6      		in __tmp_reg__,__SREG__
 119 003a F894      		cli
 120 003c DEBF      		out __SP_H__,r29
 121 003e 0FBE      		out __SREG__,__tmp_reg__
 122 0040 CDBF      		out __SP_L__,r28
 123               	/* prologue: function */
 124               	/* frame size = 11 */
 125               	/* stack size = 13 */
 126               	.L__stack_usage = 13
 127 0042 9987      		std Y+9,r25
 128 0044 8887      		std Y+8,r24
 129 0046 7B87      		std Y+11,r23
 130 0048 6A87      		std Y+10,r22
  78:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 	/* USART options. */
  79:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 	usart_rs232_options_t usart_rs232_options;
  80:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 	usart_rs232_options.charlength   = options->charlength;
 131               		.loc 2 80 0
 132 004a 8A85      		ldd r24,Y+10
 133 004c 9B85      		ldd r25,Y+11
 134 004e FC01      		movw r30,r24
 135 0050 8481      		ldd r24,Z+4
 136 0052 8D83      		std Y+5,r24
  81:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 	usart_rs232_options.paritytype   = options->paritytype;
 137               		.loc 2 81 0
 138 0054 8A85      		ldd r24,Y+10
 139 0056 9B85      		ldd r25,Y+11
 140 0058 FC01      		movw r30,r24
 141 005a 8581      		ldd r24,Z+5
 142 005c 8E83      		std Y+6,r24
  82:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 	usart_rs232_options.stopbits     = options->stopbits;
 143               		.loc 2 82 0
 144 005e 8A85      		ldd r24,Y+10
 145 0060 9B85      		ldd r25,Y+11
 146 0062 FC01      		movw r30,r24
 147 0064 8681      		ldd r24,Z+6
 148 0066 8F83      		std Y+7,r24
  83:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 	usart_rs232_options.baudrate     = options->baudrate;
 149               		.loc 2 83 0
 150 0068 8A85      		ldd r24,Y+10
 151 006a 9B85      		ldd r25,Y+11
 152 006c FC01      		movw r30,r24
 153 006e 8081      		ld r24,Z
 154 0070 9181      		ldd r25,Z+1
 155 0072 A281      		ldd r26,Z+2
 156 0074 B381      		ldd r27,Z+3
 157 0076 8983      		std Y+1,r24
 158 0078 9A83      		std Y+2,r25
 159 007a AB83      		std Y+3,r26
 160 007c BC83      		std Y+4,r27
  84:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 
  85:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 	if (usart_init_rs232(usart, &usart_rs232_options)) {
 161               		.loc 2 85 0
 162 007e 8885      		ldd r24,Y+8
 163 0080 9985      		ldd r25,Y+9
 164 0082 9E01      		movw r18,r28
 165 0084 2F5F      		subi r18,-1
 166 0086 3F4F      		sbci r19,-1
 167 0088 B901      		movw r22,r18
 168 008a 0E94 0000 		call usart_init_rs232
 169 008e 8823      		tst r24
 170 0090 01F0      		breq .L3
  86:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 		return true;
 171               		.loc 2 86 0
 172 0092 81E0      		ldi r24,lo8(1)
 173 0094 00C0      		rjmp .L5
 174               	.L3:
  87:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 	} else {
  88:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 		return false;
 175               		.loc 2 88 0
 176 0096 80E0      		ldi r24,0
 177               	.L5:
 178               	/* epilogue start */
  89:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 	}
  90:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** }
 179               		.loc 2 90 0 discriminator 1
 180 0098 2B96      		adiw r28,11
 181 009a 0FB6      		in __tmp_reg__,__SREG__
 182 009c F894      		cli
 183 009e DEBF      		out __SP_H__,r29
 184 00a0 0FBE      		out __SREG__,__tmp_reg__
 185 00a2 CDBF      		out __SP_L__,r28
 186 00a4 DF91      		pop r29
 187 00a6 CF91      		pop r28
 188 00a8 0895      		ret
 189               		.cfi_endproc
 190               	.LFE95:
 193               	usart_serial_putchar:
 194               	.LFB96:
  91:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 
  92:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** /*! \brief Sends a character with the USART.
  93:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
  94:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * \param usart   Base address of the USART instance.
  95:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * \param c       Character to write.
  96:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
  97:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * \return Status code
  98:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  */
  99:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** static inline status_code_t usart_serial_putchar(usart_if usart, uint8_t c)
 100:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** {
 195               		.loc 2 100 0
 196               		.cfi_startproc
 197 00aa CF93      		push r28
 198               	.LCFI8:
 199               		.cfi_def_cfa_offset 3
 200               		.cfi_offset 28, -2
 201 00ac DF93      		push r29
 202               	.LCFI9:
 203               		.cfi_def_cfa_offset 4
 204               		.cfi_offset 29, -3
 205 00ae 00D0      		rcall .
 206 00b0 1F92      		push __zero_reg__
 207               	.LCFI10:
 208               		.cfi_def_cfa_offset 7
 209 00b2 CDB7      		in r28,__SP_L__
 210 00b4 DEB7      		in r29,__SP_H__
 211               	.LCFI11:
 212               		.cfi_def_cfa_register 28
 213               	/* prologue: function */
 214               	/* frame size = 3 */
 215               	/* stack size = 5 */
 216               	.L__stack_usage = 5
 217 00b6 9A83      		std Y+2,r25
 218 00b8 8983      		std Y+1,r24
 219 00ba 6B83      		std Y+3,r22
 101:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 	return usart_putchar(usart, c);
 220               		.loc 2 101 0
 221 00bc 8981      		ldd r24,Y+1
 222 00be 9A81      		ldd r25,Y+2
 223 00c0 6B81      		ldd r22,Y+3
 224 00c2 0E94 0000 		call usart_putchar
 225               	/* epilogue start */
 102:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** }
 226               		.loc 2 102 0
 227 00c6 0F90      		pop __tmp_reg__
 228 00c8 0F90      		pop __tmp_reg__
 229 00ca 0F90      		pop __tmp_reg__
 230 00cc DF91      		pop r29
 231 00ce CF91      		pop r28
 232 00d0 0895      		ret
 233               		.cfi_endproc
 234               	.LFE96:
 237               	usart_serial_getchar:
 238               	.LFB97:
 103:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 
 104:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** /*! \brief Waits until a character is received, and returns it.
 105:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
 106:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * \param usart   Base address of the USART instance.
 107:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  * \param data   Data to read
 108:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  *
 109:../../../platform/common/services/serial/megarf_usart/usart_serial.h ****  */
 110:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** static inline void usart_serial_getchar(usart_if usart, uint8_t *data)
 111:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** {
 239               		.loc 2 111 0
 240               		.cfi_startproc
 241 00d2 CF93      		push r28
 242               	.LCFI12:
 243               		.cfi_def_cfa_offset 3
 244               		.cfi_offset 28, -2
 245 00d4 DF93      		push r29
 246               	.LCFI13:
 247               		.cfi_def_cfa_offset 4
 248               		.cfi_offset 29, -3
 249 00d6 00D0      		rcall .
 250 00d8 00D0      		rcall .
 251               	.LCFI14:
 252               		.cfi_def_cfa_offset 8
 253 00da CDB7      		in r28,__SP_L__
 254 00dc DEB7      		in r29,__SP_H__
 255               	.LCFI15:
 256               		.cfi_def_cfa_register 28
 257               	/* prologue: function */
 258               	/* frame size = 4 */
 259               	/* stack size = 6 */
 260               	.L__stack_usage = 6
 261 00de 9A83      		std Y+2,r25
 262 00e0 8983      		std Y+1,r24
 263 00e2 7C83      		std Y+4,r23
 264 00e4 6B83      		std Y+3,r22
 112:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** 	*data = usart_getchar(usart);
 265               		.loc 2 112 0
 266 00e6 8981      		ldd r24,Y+1
 267 00e8 9A81      		ldd r25,Y+2
 268 00ea 0E94 0000 		call usart_getchar
 269 00ee 282F      		mov r18,r24
 270 00f0 8B81      		ldd r24,Y+3
 271 00f2 9C81      		ldd r25,Y+4
 272 00f4 FC01      		movw r30,r24
 273 00f6 2083      		st Z,r18
 113:../../../platform/common/services/serial/megarf_usart/usart_serial.h **** }
 274               		.loc 2 113 0
 275 00f8 0000      		nop
 276               	/* epilogue start */
 277 00fa 0F90      		pop __tmp_reg__
 278 00fc 0F90      		pop __tmp_reg__
 279 00fe 0F90      		pop __tmp_reg__
 280 0100 0F90      		pop __tmp_reg__
 281 0102 DF91      		pop r29
 282 0104 CF91      		pop r28
 283 0106 0895      		ret
 284               		.cfi_endproc
 285               	.LFE97:
 288               	stdio_serial_init:
 289               	.LFB99:
 290               		.file 3 "../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h"
   1:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** /**
   2:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
   3:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * \file
   4:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
   5:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * \brief Common Standard I/O Serial Management.
   6:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
   7:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * This file defines a useful set of functions for the Stdio Serial interface on AVR
   8:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * and SAM devices.
   9:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  10:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * Copyright (c) 2009-2013 Atmel Corporation. All rights reserved.
  11:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  12:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * \asf_license_start
  13:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  14:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * \page License
  15:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  16:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * Redistribution and use in source and binary forms, with or without
  17:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * modification, are permitted provided that the following conditions are met:
  18:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  19:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  20:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *    this list of conditions and the following disclaimer.
  21:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  22:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  23:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *    this list of conditions and the following disclaimer in the documentation
  24:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *    and/or other materials provided with the distribution.
  25:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  26:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  27:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *    from this software without specific prior written permission.
  28:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  29:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * 4. This software may only be redistributed and used in connection with an
  30:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *    Atmel microcontroller product.
  31:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  32:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  33:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  34:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  35:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  36:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  37:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  38:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  39:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  40:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  41:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  42:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * POSSIBILITY OF SUCH DAMAGE.
  43:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  44:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * \asf_license_stop
  45:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  46:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  ******************************************************************************/
  47:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 
  48:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 
  49:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** #ifndef _STDIO_SERIAL_H_
  50:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** #define _STDIO_SERIAL_H_
  51:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 
  52:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** /**
  53:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * \defgroup group_common_utils_stdio_stdio_serial Standard serial I/O (stdio)
  54:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * \ingroup group_common_utils_stdio
  55:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  56:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * Common standard serial I/O management driver that
  57:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * implements a stdio serial interface on AVR and SAM devices.
  58:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  59:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * \{
  60:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  */
  61:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 
  62:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** #include <stdio.h>
  63:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** #include "compiler.h"
  64:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** #ifndef SAMD20
  65:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** # include "sysclk.h"
  66:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** #endif
  67:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** #include "serial.h"
  68:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 
  69:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** #if (XMEGA || MEGA_RF) && defined(__GNUC__)
  70:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	extern int _write (char c, int *f);
  71:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	extern int _read (int *f);
  72:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** #endif
  73:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 
  74:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 
  75:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** //! Pointer to the base of the USART module instance to use for stdio.
  76:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** extern volatile void *volatile stdio_base;
  77:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** //! Pointer to the external low level write function.
  78:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** extern int (*ptr_put)(void volatile*, char);
  79:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 
  80:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** //! Pointer to the external low level read function.
  81:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** extern void (*ptr_get)(void volatile*, char*);
  82:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 
  83:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** /*! \brief Initializes the stdio in Serial Mode.
  84:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  85:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * \param usart       Base address of the USART instance.
  86:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
  87:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  *
  88:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h ****  */
  89:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
  90:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** {
 291               		.loc 3 90 0
 292               		.cfi_startproc
 293 0108 CF93      		push r28
 294               	.LCFI16:
 295               		.cfi_def_cfa_offset 3
 296               		.cfi_offset 28, -2
 297 010a DF93      		push r29
 298               	.LCFI17:
 299               		.cfi_def_cfa_offset 4
 300               		.cfi_offset 29, -3
 301 010c 00D0      		rcall .
 302 010e 00D0      		rcall .
 303               	.LCFI18:
 304               		.cfi_def_cfa_offset 8
 305 0110 CDB7      		in r28,__SP_L__
 306 0112 DEB7      		in r29,__SP_H__
 307               	.LCFI19:
 308               		.cfi_def_cfa_register 28
 309               	/* prologue: function */
 310               	/* frame size = 4 */
 311               	/* stack size = 6 */
 312               	.L__stack_usage = 6
 313 0114 9A83      		std Y+2,r25
 314 0116 8983      		std Y+1,r24
 315 0118 7C83      		std Y+4,r23
 316 011a 6B83      		std Y+3,r22
  91:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	stdio_base = (void *)usart;
 317               		.loc 3 91 0
 318 011c 8981      		ldd r24,Y+1
 319 011e 9A81      		ldd r25,Y+2
 320 0120 9093 0000 		sts stdio_base+1,r25
 321 0124 8093 0000 		sts stdio_base,r24
  92:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
 322               		.loc 3 92 0
 323 0128 80E0      		ldi r24,lo8(gs(usart_serial_putchar))
 324 012a 90E0      		ldi r25,hi8(gs(usart_serial_putchar))
 325 012c 9093 0000 		sts ptr_put+1,r25
 326 0130 8093 0000 		sts ptr_put,r24
  93:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
 327               		.loc 3 93 0
 328 0134 80E0      		ldi r24,lo8(gs(usart_serial_getchar))
 329 0136 90E0      		ldi r25,hi8(gs(usart_serial_getchar))
 330 0138 9093 0000 		sts ptr_get+1,r25
 331 013c 8093 0000 		sts ptr_get,r24
  94:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** # if (XMEGA || MEGA_RF)
  95:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	usart_serial_init((USART_t *)usart,opt);
 332               		.loc 3 95 0
 333 0140 2B81      		ldd r18,Y+3
 334 0142 3C81      		ldd r19,Y+4
 335 0144 8981      		ldd r24,Y+1
 336 0146 9A81      		ldd r25,Y+2
 337 0148 B901      		movw r22,r18
 338 014a 0E94 0000 		call usart_serial_init
  96:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** # elif UC3
  97:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	usart_serial_init(usart,(usart_serial_options_t *)opt);
  98:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** # elif SAM
  99:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	usart_serial_init((Usart *)usart,(usart_serial_options_t *)opt);
 100:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** # else
 101:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** #  error Unsupported chip type
 102:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** # endif
 103:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 
 104:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** # if defined(__GNUC__)
 105:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** #  if (XMEGA || MEGA_RF)
 106:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	// For AVR GCC libc print redirection uses fdevopen.
 107:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
 339               		.loc 3 107 0
 340 014e 60E0      		ldi r22,lo8(gs(_read))
 341 0150 70E0      		ldi r23,hi8(gs(_read))
 342 0152 80E0      		ldi r24,lo8(gs(_write))
 343 0154 90E0      		ldi r25,hi8(gs(_write))
 344 0156 0E94 0000 		call fdevopen
 108:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** #  endif
 109:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** #  if UC3 || SAM
 110:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	// For AVR32 and SAM GCC
 111:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	// Specify that stdout and stdin should not be buffered.
 112:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	setbuf(stdout, NULL);
 113:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	setbuf(stdin, NULL);
 114:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	// Note: Already the case in IAR's Normal DLIB default configuration
 115:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	// and AVR GCC library:
 116:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	// - printf() emits one character at a time.
 117:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** 	// - getchar() requests only 1 byte to exit.
 118:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** #  endif
 119:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** # endif
 120:../../../platform/common/utils/stdio/stdio_serial/stdio_serial.h **** }
 345               		.loc 3 120 0
 346 015a 0000      		nop
 347               	/* epilogue start */
 348 015c 0F90      		pop __tmp_reg__
 349 015e 0F90      		pop __tmp_reg__
 350 0160 0F90      		pop __tmp_reg__
 351 0162 0F90      		pop __tmp_reg__
 352 0164 DF91      		pop r29
 353 0166 CF91      		pop r28
 354 0168 0895      		ret
 355               		.cfi_endproc
 356               	.LFE99:
 358               		.section	.data.usart_serial_options,"aw",@progbits
 361               	usart_serial_options:
 362 0000 00        		.byte	0
 363 0001 C2        		.byte	-62
 364 0002 01        		.byte	1
 365 0003 00        		.byte	0
 366 0004 03        		.byte	3
 367 0005 00        		.byte	0
 368 0006 00        		.byte	0
 369               		.section	.bss.serial_rx_buf,"aw",@nobits
 372               	serial_rx_buf:
 373 0000 0000 0000 		.zero	156
 373      0000 0000 
 373      0000 0000 
 373      0000 0000 
 373      0000 0000 
 374               		.section	.bss.serial_rx_buf_head,"aw",@nobits
 377               	serial_rx_buf_head:
 378 0000 00        		.zero	1
 379               		.section	.bss.serial_rx_buf_tail,"aw",@nobits
 382               	serial_rx_buf_tail:
 383 0000 00        		.zero	1
 384               		.section	.bss.serial_rx_count,"aw",@nobits
 387               	serial_rx_count:
 388 0000 00        		.zero	1
 389               		.text
 390               	.global	sio2host_init
 392               	sio2host_init:
 393               	.LFB100:
 394               		.file 4 "../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c"
   1:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** /**
   2:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * \file sio2host.c
   3:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *
   4:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * \brief Handles Serial I/O  Functionalities For the Host Device
   5:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *
   6:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * Copyright (c) 2013-2014 Atmel Corporation. All rights reserved.
   7:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *
   8:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * \asf_license_start
   9:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *
  10:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * \page License
  11:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *
  12:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *
  15:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *
  18:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *    and/or other materials provided with the distribution.
  21:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *
  22:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *    from this software without specific prior written permission.
  24:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *
  25:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *    Atmel microcontroller product.
  27:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *
  28:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  *
  40:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * \asf_license_stop
  41:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  */
  42:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
  43:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** /* === INCLUDES ============================================================ */
  44:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
  45:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #include "asf.h"
  46:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #include "sio2host.h"
  47:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #include "conf_sio2host.h"
  48:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
  49:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #pragma GCC diagnostic push
  50:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #pragma GCC diagnostic ignored "-Wundef"
  51:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
  52:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** /* === TYPES =============================================================== */
  53:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
  54:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** /* === MACROS ============================================================== */
  55:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
  56:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** /* === PROTOTYPES ========================================================== */
  57:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
  58:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** /* === GLOBALS ========================================================== */
  59:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #if SAMD || SAMR21
  60:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** static struct usart_module cdc_uart_module;
  61:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #else
  62:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** static usart_serial_options_t usart_serial_options = {
  63:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	.baudrate     = USART_HOST_BAUDRATE,
  64:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	.charlength   = USART_HOST_CHAR_LENGTH,
  65:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	.paritytype   = USART_HOST_PARITY,
  66:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	.stopbits     = USART_HOST_STOP_BITS
  67:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** };
  68:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #endif
  69:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
  70:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** /**
  71:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * Receive buffer
  72:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * The buffer size is defined in sio2host.h
  73:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  */
  74:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** static uint8_t serial_rx_buf[SERIAL_RX_BUF_SIZE_HOST];
  75:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
  76:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** /**
  77:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * Receive buffer head
  78:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  */
  79:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** static uint8_t serial_rx_buf_head;
  80:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
  81:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** /**
  82:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * Receive buffer tail
  83:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  */
  84:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** static uint8_t serial_rx_buf_tail;
  85:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
  86:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** /**
  87:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  * Number of bytes in receive buffer
  88:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c ****  */
  89:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** static uint8_t serial_rx_count;
  90:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
  91:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** /* === IMPLEMENTATION ====================================================== */
  92:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
  93:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** void sio2host_init(void)
  94:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** {
 395               		.loc 4 94 0
 396               		.cfi_startproc
 397 016a CF93      		push r28
 398               	.LCFI20:
 399               		.cfi_def_cfa_offset 3
 400               		.cfi_offset 28, -2
 401 016c DF93      		push r29
 402               	.LCFI21:
 403               		.cfi_def_cfa_offset 4
 404               		.cfi_offset 29, -3
 405 016e CDB7      		in r28,__SP_L__
 406 0170 DEB7      		in r29,__SP_H__
 407               	.LCFI22:
 408               		.cfi_def_cfa_register 28
 409               	/* prologue: function */
 410               	/* frame size = 0 */
 411               	/* stack size = 2 */
 412               	.L__stack_usage = 2
  95:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #if SAMD || SAMR21
  96:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	struct usart_config cdc_uart_config;
  97:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	/* Configure USART for unit test output */
  98:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	usart_get_config_defaults(&cdc_uart_config);
  99:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	cdc_uart_config.mux_setting = EDBG_CDC_SERCOM_MUX_SETTING;
 100:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 101:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	cdc_uart_config.pinmux_pad0 = EDBG_CDC_SERCOM_PINMUX_PAD0;
 102:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	cdc_uart_config.pinmux_pad1 = EDBG_CDC_SERCOM_PINMUX_PAD1;
 103:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	cdc_uart_config.pinmux_pad2 = EDBG_CDC_SERCOM_PINMUX_PAD2;
 104:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	cdc_uart_config.pinmux_pad3 = EDBG_CDC_SERCOM_PINMUX_PAD3;
 105:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	cdc_uart_config.baudrate    = USART_HOST_BAUDRATE;
 106:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	stdio_serial_init(&cdc_uart_module, USART_HOST, &cdc_uart_config);
 107:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	usart_enable(&cdc_uart_module);
 108:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	/* Enable transceivers */
 109:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	usart_enable_transceiver(&cdc_uart_module, USART_TRANSCEIVER_TX);
 110:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	usart_enable_transceiver(&cdc_uart_module, USART_TRANSCEIVER_RX);
 111:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #else
 112:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	stdio_serial_init(USART_HOST, &usart_serial_options);
 413               		.loc 4 112 0
 414 0172 60E0      		ldi r22,lo8(usart_serial_options)
 415 0174 70E0      		ldi r23,hi8(usart_serial_options)
 416 0176 80EC      		ldi r24,lo8(-64)
 417 0178 90E0      		ldi r25,0
 418 017a 0E94 0000 		call stdio_serial_init
 113:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #endif
 114:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	USART_HOST_RX_ISR_ENABLE();
 419               		.loc 4 114 0
 420 017e 80EC      		ldi r24,lo8(-64)
 421 0180 90E0      		ldi r25,0
 422 0182 0E94 0000 		call usart_rx_complete_interrupt_enable
 115:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** }
 423               		.loc 4 115 0
 424 0186 0000      		nop
 425               	/* epilogue start */
 426 0188 DF91      		pop r29
 427 018a CF91      		pop r28
 428 018c 0895      		ret
 429               		.cfi_endproc
 430               	.LFE100:
 432               	.global	sio2host_tx
 434               	sio2host_tx:
 435               	.LFB101:
 116:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 117:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** uint8_t sio2host_tx(uint8_t *data, uint8_t length)
 118:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** {
 436               		.loc 4 118 0
 437               		.cfi_startproc
 438 018e CF93      		push r28
 439               	.LCFI23:
 440               		.cfi_def_cfa_offset 3
 441               		.cfi_offset 28, -2
 442 0190 DF93      		push r29
 443               	.LCFI24:
 444               		.cfi_def_cfa_offset 4
 445               		.cfi_offset 29, -3
 446 0192 00D0      		rcall .
 447 0194 00D0      		rcall .
 448               	.LCFI25:
 449               		.cfi_def_cfa_offset 8
 450 0196 CDB7      		in r28,__SP_L__
 451 0198 DEB7      		in r29,__SP_H__
 452               	.LCFI26:
 453               		.cfi_def_cfa_register 28
 454               	/* prologue: function */
 455               	/* frame size = 4 */
 456               	/* stack size = 6 */
 457               	.L__stack_usage = 6
 458 019a 9B83      		std Y+3,r25
 459 019c 8A83      		std Y+2,r24
 460 019e 6C83      		std Y+4,r22
 461               	.L12:
 119:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #if SAMD || SAMR21
 120:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	status_code_genare_t status;
 121:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #else
 122:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	status_code_t status;
 123:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #endif /* SAMD || SAMR21 */
 124:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 125:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	do {
 126:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #if SAMD || SAMR21
 127:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		status
 128:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			= usart_serial_write_packet(&cdc_uart_module,
 129:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 				(const uint8_t *)data, length);
 130:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #else
 131:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		status = usart_serial_write_packet(USART_HOST,
 462               		.loc 4 131 0 discriminator 1
 463 01a0 8C81      		ldd r24,Y+4
 464 01a2 282F      		mov r18,r24
 465 01a4 30E0      		ldi r19,0
 466 01a6 8A81      		ldd r24,Y+2
 467 01a8 9B81      		ldd r25,Y+3
 468 01aa A901      		movw r20,r18
 469 01ac BC01      		movw r22,r24
 470 01ae 80EC      		ldi r24,lo8(-64)
 471 01b0 90E0      		ldi r25,0
 472 01b2 0E94 0000 		call usart_serial_write_packet
 473 01b6 8983      		std Y+1,r24
 132:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 				(const uint8_t *)data,
 133:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 				length);
 134:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #endif
 135:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	} while (status != STATUS_OK);
 474               		.loc 4 135 0 discriminator 1
 475 01b8 8981      		ldd r24,Y+1
 476 01ba 8823      		tst r24
 477 01bc 01F4      		brne .L12
 136:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	return length;
 478               		.loc 4 136 0
 479 01be 8C81      		ldd r24,Y+4
 480               	/* epilogue start */
 137:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** }
 481               		.loc 4 137 0
 482 01c0 0F90      		pop __tmp_reg__
 483 01c2 0F90      		pop __tmp_reg__
 484 01c4 0F90      		pop __tmp_reg__
 485 01c6 0F90      		pop __tmp_reg__
 486 01c8 DF91      		pop r29
 487 01ca CF91      		pop r28
 488 01cc 0895      		ret
 489               		.cfi_endproc
 490               	.LFE101:
 492               	.global	sio2host_rx
 494               	sio2host_rx:
 495               	.LFB102:
 138:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 139:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** uint8_t sio2host_rx(uint8_t *data, uint8_t max_length)
 140:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** {
 496               		.loc 4 140 0
 497               		.cfi_startproc
 498 01ce CF93      		push r28
 499               	.LCFI27:
 500               		.cfi_def_cfa_offset 3
 501               		.cfi_offset 28, -2
 502 01d0 DF93      		push r29
 503               	.LCFI28:
 504               		.cfi_def_cfa_offset 4
 505               		.cfi_offset 29, -3
 506 01d2 00D0      		rcall .
 507 01d4 00D0      		rcall .
 508               	.LCFI29:
 509               		.cfi_def_cfa_offset 8
 510 01d6 CDB7      		in r28,__SP_L__
 511 01d8 DEB7      		in r29,__SP_H__
 512               	.LCFI30:
 513               		.cfi_def_cfa_register 28
 514               	/* prologue: function */
 515               	/* frame size = 4 */
 516               	/* stack size = 6 */
 517               	.L__stack_usage = 6
 518 01da 9B83      		std Y+3,r25
 519 01dc 8A83      		std Y+2,r24
 520 01de 6C83      		std Y+4,r22
 141:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	uint8_t data_received = 0;
 521               		.loc 4 141 0
 522 01e0 1982      		std Y+1,__zero_reg__
 142:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	if (0 == serial_rx_count) {
 523               		.loc 4 142 0
 524 01e2 8091 0000 		lds r24,serial_rx_count
 525 01e6 8823      		tst r24
 526 01e8 01F4      		brne .L15
 143:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		return 0;
 527               		.loc 4 143 0
 528 01ea 80E0      		ldi r24,0
 529 01ec 00C0      		rjmp .L16
 530               	.L15:
 144:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	}
 145:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 146:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	if (SERIAL_RX_BUF_SIZE_HOST <= serial_rx_count) {
 531               		.loc 4 146 0
 532 01ee 8091 0000 		lds r24,serial_rx_count
 533 01f2 8C39      		cpi r24,lo8(-100)
 534 01f4 00F0      		brlo .L17
 147:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		/*
 148:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		 * Bytes between head and tail are overwritten by new data.
 149:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		 * The oldest data in buffer is the one to which the tail is
 150:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		 * pointing. So reading operation should start from the tail.
 151:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		 */
 152:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		serial_rx_buf_head = serial_rx_buf_tail;
 535               		.loc 4 152 0
 536 01f6 8091 0000 		lds r24,serial_rx_buf_tail
 537 01fa 8093 0000 		sts serial_rx_buf_head,r24
 153:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 154:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		/*
 155:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		 * This is a buffer overflow case. But still only the number of
 156:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		 * bytes equivalent to
 157:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		 * full buffer size are useful.
 158:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		 */
 159:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		serial_rx_count = SERIAL_RX_BUF_SIZE_HOST;
 538               		.loc 4 159 0
 539 01fe 8CE9      		ldi r24,lo8(-100)
 540 0200 8093 0000 		sts serial_rx_count,r24
 160:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 161:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		/* Bytes received is more than or equal to buffer. */
 162:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		if (SERIAL_RX_BUF_SIZE_HOST <= max_length) {
 541               		.loc 4 162 0
 542 0204 8C81      		ldd r24,Y+4
 543 0206 8C39      		cpi r24,lo8(-100)
 544 0208 00F0      		brlo .L19
 163:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			/*
 164:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			 * Requested receive length (max_length) is more than
 165:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			 * the
 166:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			 * max size of receive buffer, but at max the full
 167:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			 * buffer can be read.
 168:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			 */
 169:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			max_length = SERIAL_RX_BUF_SIZE_HOST;
 545               		.loc 4 169 0
 546 020a 8CE9      		ldi r24,lo8(-100)
 547 020c 8C83      		std Y+4,r24
 548 020e 00C0      		rjmp .L19
 549               	.L17:
 170:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		}
 171:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	} else {
 172:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		/* Bytes received is less than receive buffer maximum length. */
 173:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		if (max_length > serial_rx_count) {
 550               		.loc 4 173 0
 551 0210 8091 0000 		lds r24,serial_rx_count
 552 0214 9C81      		ldd r25,Y+4
 553 0216 8917      		cp r24,r25
 554 0218 00F4      		brsh .L19
 174:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			/*
 175:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			 * Requested receive length (max_length) is more than
 176:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			 * the data
 177:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			 * present in receive buffer. Hence only the number of
 178:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			 * bytes
 179:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			 * present in receive buffer are read.
 180:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			 */
 181:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			max_length = serial_rx_count;
 555               		.loc 4 181 0
 556 021a 8091 0000 		lds r24,serial_rx_count
 557 021e 8C83      		std Y+4,r24
 558               	.L19:
 182:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		}
 183:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	}
 184:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 185:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	data_received = max_length;
 559               		.loc 4 185 0
 560 0220 8C81      		ldd r24,Y+4
 561 0222 8983      		std Y+1,r24
 186:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	while (max_length > 0) {
 562               		.loc 4 186 0
 563 0224 00C0      		rjmp .L20
 564               	.L21:
 187:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		/* Start to copy from head. */
 188:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		*data = serial_rx_buf[serial_rx_buf_head];
 565               		.loc 4 188 0
 566 0226 8091 0000 		lds r24,serial_rx_buf_head
 567 022a 882F      		mov r24,r24
 568 022c 90E0      		ldi r25,0
 569 022e 8050      		subi r24,lo8(-(serial_rx_buf))
 570 0230 9040      		sbci r25,hi8(-(serial_rx_buf))
 571 0232 FC01      		movw r30,r24
 572 0234 2081      		ld r18,Z
 573 0236 8A81      		ldd r24,Y+2
 574 0238 9B81      		ldd r25,Y+3
 575 023a FC01      		movw r30,r24
 576 023c 2083      		st Z,r18
 189:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		serial_rx_buf_head++;
 577               		.loc 4 189 0
 578 023e 8091 0000 		lds r24,serial_rx_buf_head
 579 0242 8F5F      		subi r24,lo8(-(1))
 580 0244 8093 0000 		sts serial_rx_buf_head,r24
 190:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		serial_rx_count--;
 581               		.loc 4 190 0
 582 0248 8091 0000 		lds r24,serial_rx_count
 583 024c 8150      		subi r24,lo8(-(-1))
 584 024e 8093 0000 		sts serial_rx_count,r24
 191:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		data++;
 585               		.loc 4 191 0
 586 0252 8A81      		ldd r24,Y+2
 587 0254 9B81      		ldd r25,Y+3
 588 0256 0196      		adiw r24,1
 589 0258 9B83      		std Y+3,r25
 590 025a 8A83      		std Y+2,r24
 192:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		max_length--;
 591               		.loc 4 192 0
 592 025c 8C81      		ldd r24,Y+4
 593 025e 8150      		subi r24,lo8(-(-1))
 594 0260 8C83      		std Y+4,r24
 193:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		if ((SERIAL_RX_BUF_SIZE_HOST) == serial_rx_buf_head) {
 595               		.loc 4 193 0
 596 0262 8091 0000 		lds r24,serial_rx_buf_head
 597 0266 8C39      		cpi r24,lo8(-100)
 598 0268 01F4      		brne .L20
 194:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 			serial_rx_buf_head = 0;
 599               		.loc 4 194 0
 600 026a 1092 0000 		sts serial_rx_buf_head,__zero_reg__
 601               	.L20:
 186:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		/* Start to copy from head. */
 602               		.loc 4 186 0
 603 026e 8C81      		ldd r24,Y+4
 604 0270 8823      		tst r24
 605 0272 01F4      		brne .L21
 195:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		}
 196:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	}
 197:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	return data_received;
 606               		.loc 4 197 0
 607 0274 8981      		ldd r24,Y+1
 608               	.L16:
 609               	/* epilogue start */
 198:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** }
 610               		.loc 4 198 0
 611 0276 0F90      		pop __tmp_reg__
 612 0278 0F90      		pop __tmp_reg__
 613 027a 0F90      		pop __tmp_reg__
 614 027c 0F90      		pop __tmp_reg__
 615 027e DF91      		pop r29
 616 0280 CF91      		pop r28
 617 0282 0895      		ret
 618               		.cfi_endproc
 619               	.LFE102:
 621               	.global	sio2host_getchar
 623               	sio2host_getchar:
 624               	.LFB103:
 199:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 200:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** uint8_t sio2host_getchar(void)
 201:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** {
 625               		.loc 4 201 0
 626               		.cfi_startproc
 627 0284 CF93      		push r28
 628               	.LCFI31:
 629               		.cfi_def_cfa_offset 3
 630               		.cfi_offset 28, -2
 631 0286 DF93      		push r29
 632               	.LCFI32:
 633               		.cfi_def_cfa_offset 4
 634               		.cfi_offset 29, -3
 635 0288 1F92      		push __zero_reg__
 636               	.LCFI33:
 637               		.cfi_def_cfa_offset 5
 638 028a CDB7      		in r28,__SP_L__
 639 028c DEB7      		in r29,__SP_H__
 640               	.LCFI34:
 641               		.cfi_def_cfa_register 28
 642               	/* prologue: function */
 643               	/* frame size = 1 */
 644               	/* stack size = 3 */
 645               	.L__stack_usage = 3
 202:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	uint8_t c;
 203:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	while (0 == sio2host_rx(&c, 1)) {
 646               		.loc 4 203 0
 647 028e 0000      		nop
 648               	.L23:
 649               		.loc 4 203 0 is_stmt 0 discriminator 1
 650 0290 61E0      		ldi r22,lo8(1)
 651 0292 CE01      		movw r24,r28
 652 0294 0196      		adiw r24,1
 653 0296 0E94 0000 		call sio2host_rx
 654 029a 8823      		tst r24
 655 029c 01F0      		breq .L23
 204:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	}
 205:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	return c;
 656               		.loc 4 205 0 is_stmt 1
 657 029e 8981      		ldd r24,Y+1
 658               	/* epilogue start */
 206:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** }
 659               		.loc 4 206 0
 660 02a0 0F90      		pop __tmp_reg__
 661 02a2 DF91      		pop r29
 662 02a4 CF91      		pop r28
 663 02a6 0895      		ret
 664               		.cfi_endproc
 665               	.LFE103:
 667               	.global	sio2host_putchar
 669               	sio2host_putchar:
 670               	.LFB104:
 207:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 208:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** void sio2host_putchar(uint8_t ch)
 209:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** {
 671               		.loc 4 209 0
 672               		.cfi_startproc
 673 02a8 CF93      		push r28
 674               	.LCFI35:
 675               		.cfi_def_cfa_offset 3
 676               		.cfi_offset 28, -2
 677 02aa DF93      		push r29
 678               	.LCFI36:
 679               		.cfi_def_cfa_offset 4
 680               		.cfi_offset 29, -3
 681 02ac 1F92      		push __zero_reg__
 682               	.LCFI37:
 683               		.cfi_def_cfa_offset 5
 684 02ae CDB7      		in r28,__SP_L__
 685 02b0 DEB7      		in r29,__SP_H__
 686               	.LCFI38:
 687               		.cfi_def_cfa_register 28
 688               	/* prologue: function */
 689               	/* frame size = 1 */
 690               	/* stack size = 3 */
 691               	.L__stack_usage = 3
 692 02b2 8983      		std Y+1,r24
 210:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	sio2host_tx(&ch, 1);
 693               		.loc 4 210 0
 694 02b4 61E0      		ldi r22,lo8(1)
 695 02b6 CE01      		movw r24,r28
 696 02b8 0196      		adiw r24,1
 697 02ba 0E94 0000 		call sio2host_tx
 211:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** }
 698               		.loc 4 211 0
 699 02be 0000      		nop
 700               	/* epilogue start */
 701 02c0 0F90      		pop __tmp_reg__
 702 02c2 DF91      		pop r29
 703 02c4 CF91      		pop r28
 704 02c6 0895      		ret
 705               		.cfi_endproc
 706               	.LFE104:
 708               	.global	sio2host_getchar_nowait
 710               	sio2host_getchar_nowait:
 711               	.LFB105:
 212:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 213:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** int sio2host_getchar_nowait(void)
 214:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** {
 712               		.loc 4 214 0
 713               		.cfi_startproc
 714 02c8 CF93      		push r28
 715               	.LCFI39:
 716               		.cfi_def_cfa_offset 3
 717               		.cfi_offset 28, -2
 718 02ca DF93      		push r29
 719               	.LCFI40:
 720               		.cfi_def_cfa_offset 4
 721               		.cfi_offset 29, -3
 722 02cc 00D0      		rcall .
 723 02ce 1F92      		push __zero_reg__
 724               	.LCFI41:
 725               		.cfi_def_cfa_offset 7
 726 02d0 CDB7      		in r28,__SP_L__
 727 02d2 DEB7      		in r29,__SP_H__
 728               	.LCFI42:
 729               		.cfi_def_cfa_register 28
 730               	/* prologue: function */
 731               	/* frame size = 3 */
 732               	/* stack size = 5 */
 733               	.L__stack_usage = 5
 215:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	uint8_t c;
 216:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	int back = sio2host_rx(&c, 1);
 734               		.loc 4 216 0
 735 02d4 CE01      		movw r24,r28
 736 02d6 0396      		adiw r24,3
 737 02d8 61E0      		ldi r22,lo8(1)
 738 02da 0E94 0000 		call sio2host_rx
 739 02de 882F      		mov r24,r24
 740 02e0 90E0      		ldi r25,0
 741 02e2 9A83      		std Y+2,r25
 742 02e4 8983      		std Y+1,r24
 217:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	if (back >= 1) {
 743               		.loc 4 217 0
 744 02e6 8981      		ldd r24,Y+1
 745 02e8 9A81      		ldd r25,Y+2
 746 02ea 1816      		cp __zero_reg__,r24
 747 02ec 1906      		cpc __zero_reg__,r25
 748 02ee 04F4      		brge .L27
 218:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		return c;
 749               		.loc 4 218 0
 750 02f0 8B81      		ldd r24,Y+3
 751 02f2 882F      		mov r24,r24
 752 02f4 90E0      		ldi r25,0
 753 02f6 00C0      		rjmp .L29
 754               	.L27:
 219:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	} else {
 220:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		return (-1);
 755               		.loc 4 220 0
 756 02f8 8FEF      		ldi r24,lo8(-1)
 757 02fa 9FEF      		ldi r25,lo8(-1)
 758               	.L29:
 759               	/* epilogue start */
 221:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	}
 222:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** }
 760               		.loc 4 222 0 discriminator 1
 761 02fc 0F90      		pop __tmp_reg__
 762 02fe 0F90      		pop __tmp_reg__
 763 0300 0F90      		pop __tmp_reg__
 764 0302 DF91      		pop r29
 765 0304 CF91      		pop r28
 766 0306 0895      		ret
 767               		.cfi_endproc
 768               	.LFE105:
 770               	.global	__vector_25
 772               	__vector_25:
 773               	.LFB106:
 223:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 224:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #if SAMD || SAMR21
 225:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** void USART_HOST_ISR_VECT(uint8_t instance)
 226:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #else
 227:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** USART_HOST_ISR_VECT()
 228:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #endif
 229:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** {
 774               		.loc 4 229 0
 775               		.cfi_startproc
 776 0308 1F92      		push r1
 777               	.LCFI43:
 778               		.cfi_def_cfa_offset 3
 779               		.cfi_offset 1, -2
 780 030a 0F92      		push r0
 781               	.LCFI44:
 782               		.cfi_def_cfa_offset 4
 783               		.cfi_offset 0, -3
 784 030c 0090 5F00 		lds r0,95
 785 0310 0F92      		push r0
 786 0312 1124      		clr __zero_reg__
 787 0314 0090 5B00 		lds r0,91
 788 0318 0F92      		push r0
 789 031a 2F93      		push r18
 790               	.LCFI45:
 791               		.cfi_def_cfa_offset 5
 792               		.cfi_offset 18, -4
 793 031c 3F93      		push r19
 794               	.LCFI46:
 795               		.cfi_def_cfa_offset 6
 796               		.cfi_offset 19, -5
 797 031e 4F93      		push r20
 798               	.LCFI47:
 799               		.cfi_def_cfa_offset 7
 800               		.cfi_offset 20, -6
 801 0320 5F93      		push r21
 802               	.LCFI48:
 803               		.cfi_def_cfa_offset 8
 804               		.cfi_offset 21, -7
 805 0322 6F93      		push r22
 806               	.LCFI49:
 807               		.cfi_def_cfa_offset 9
 808               		.cfi_offset 22, -8
 809 0324 7F93      		push r23
 810               	.LCFI50:
 811               		.cfi_def_cfa_offset 10
 812               		.cfi_offset 23, -9
 813 0326 8F93      		push r24
 814               	.LCFI51:
 815               		.cfi_def_cfa_offset 11
 816               		.cfi_offset 24, -10
 817 0328 9F93      		push r25
 818               	.LCFI52:
 819               		.cfi_def_cfa_offset 12
 820               		.cfi_offset 25, -11
 821 032a AF93      		push r26
 822               	.LCFI53:
 823               		.cfi_def_cfa_offset 13
 824               		.cfi_offset 26, -12
 825 032c BF93      		push r27
 826               	.LCFI54:
 827               		.cfi_def_cfa_offset 14
 828               		.cfi_offset 27, -13
 829 032e EF93      		push r30
 830               	.LCFI55:
 831               		.cfi_def_cfa_offset 15
 832               		.cfi_offset 30, -14
 833 0330 FF93      		push r31
 834               	.LCFI56:
 835               		.cfi_def_cfa_offset 16
 836               		.cfi_offset 31, -15
 837 0332 CF93      		push r28
 838               	.LCFI57:
 839               		.cfi_def_cfa_offset 17
 840               		.cfi_offset 28, -16
 841 0334 DF93      		push r29
 842               	.LCFI58:
 843               		.cfi_def_cfa_offset 18
 844               		.cfi_offset 29, -17
 845 0336 1F92      		push __zero_reg__
 846               	.LCFI59:
 847               		.cfi_def_cfa_offset 19
 848 0338 CDB7      		in r28,__SP_L__
 849 033a DEB7      		in r29,__SP_H__
 850               	.LCFI60:
 851               		.cfi_def_cfa_register 28
 852               	/* prologue: Signal */
 853               	/* frame size = 1 */
 854               	/* stack size = 19 */
 855               	.L__stack_usage = 19
 230:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	uint8_t temp;
 231:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #if SAMD || SAMR21
 232:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	usart_serial_read_packet(&cdc_uart_module, &temp, 1);
 233:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #else
 234:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	usart_serial_read_packet(USART_HOST, &temp, 1);
 856               		.loc 4 234 0
 857 033c 41E0      		ldi r20,lo8(1)
 858 033e 50E0      		ldi r21,0
 859 0340 CE01      		movw r24,r28
 860 0342 0196      		adiw r24,1
 861 0344 BC01      		movw r22,r24
 862 0346 80EC      		ldi r24,lo8(-64)
 863 0348 90E0      		ldi r25,0
 864 034a 0E94 0000 		call usart_serial_read_packet
 235:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** #endif
 236:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 237:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	/* Introducing critical section to avoid buffer corruption. */
 238:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	cpu_irq_disable();
 865               		.loc 4 238 0
 866               	/* #APP */
 867               	 ;  238 "../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c" 1
 868 034e F894      		cli
 869               	 ;  0 "" 2
 239:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 240:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	/* The number of data in the receive buffer is incremented and the
 241:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	 * buffer is updated. */
 242:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	serial_rx_count++;
 870               		.loc 4 242 0
 871               	/* #NOAPP */
 872 0350 8091 0000 		lds r24,serial_rx_count
 873 0354 8F5F      		subi r24,lo8(-(1))
 874 0356 8093 0000 		sts serial_rx_count,r24
 243:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 244:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	serial_rx_buf[serial_rx_buf_tail] = temp;
 875               		.loc 4 244 0
 876 035a 8091 0000 		lds r24,serial_rx_buf_tail
 877 035e 882F      		mov r24,r24
 878 0360 90E0      		ldi r25,0
 879 0362 2981      		ldd r18,Y+1
 880 0364 8050      		subi r24,lo8(-(serial_rx_buf))
 881 0366 9040      		sbci r25,hi8(-(serial_rx_buf))
 882 0368 FC01      		movw r30,r24
 883 036a 2083      		st Z,r18
 245:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 246:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	if ((SERIAL_RX_BUF_SIZE_HOST - 1) == serial_rx_buf_tail) {
 884               		.loc 4 246 0
 885 036c 8091 0000 		lds r24,serial_rx_buf_tail
 886 0370 8B39      		cpi r24,lo8(-101)
 887 0372 01F4      		brne .L31
 247:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		/* Reached the end of buffer, revert back to beginning of
 248:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		 * buffer. */
 249:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		serial_rx_buf_tail = 0x00;
 888               		.loc 4 249 0
 889 0374 1092 0000 		sts serial_rx_buf_tail,__zero_reg__
 890 0378 00C0      		rjmp .L32
 891               	.L31:
 250:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	} else {
 251:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 		serial_rx_buf_tail++;
 892               		.loc 4 251 0
 893 037a 8091 0000 		lds r24,serial_rx_buf_tail
 894 037e 8F5F      		subi r24,lo8(-(1))
 895 0380 8093 0000 		sts serial_rx_buf_tail,r24
 896               	.L32:
 252:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	}
 253:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 
 254:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** 	cpu_irq_enable();
 897               		.loc 4 254 0
 898               	/* #APP */
 899               	 ;  254 "../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c" 1
 900 0384 7894      		sei
 901               	 ;  0 "" 2
 255:../../../platform/thirdparty/wireless/addons/sio2host/uart/sio2host.c **** }
 902               		.loc 4 255 0
 903               	/* #NOAPP */
 904 0386 0000      		nop
 905               	/* epilogue start */
 906 0388 0F90      		pop __tmp_reg__
 907 038a DF91      		pop r29
 908 038c CF91      		pop r28
 909 038e FF91      		pop r31
 910 0390 EF91      		pop r30
 911 0392 BF91      		pop r27
 912 0394 AF91      		pop r26
 913 0396 9F91      		pop r25
 914 0398 8F91      		pop r24
 915 039a 7F91      		pop r23
 916 039c 6F91      		pop r22
 917 039e 5F91      		pop r21
 918 03a0 4F91      		pop r20
 919 03a2 3F91      		pop r19
 920 03a4 2F91      		pop r18
 921 03a6 0F90      		pop r0
 922 03a8 0092 5B00 		sts 91,r0
 923 03ac 0F90      		pop r0
 924 03ae 0092 5F00 		sts 95,r0
 925 03b2 0F90      		pop r0
 926 03b4 1F90      		pop r1
 927 03b6 1895      		reti
 928               		.cfi_endproc
 929               	.LFE106:
 931               	.Letext0:
 932               		.file 5 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 933               		.file 6 "../../../platform/mega_rf/utils/status_codes.h"
DEFINED SYMBOLS
                            *ABS*:00000000 sio2host.c
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:14     .progmem.data.baudctrl_1mhz:00000000 baudctrl_1mhz
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:26     .progmem.data.baudctrl_8mhz:00000000 baudctrl_8mhz
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:38     .progmem.data.baudctrl_16mhz:00000000 baudctrl_16mhz
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:49     .text:00000000 usart_rx_complete_interrupt_enable
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:98     .text:0000002e usart_serial_init
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:193    .text:000000aa usart_serial_putchar
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:237    .text:000000d2 usart_serial_getchar
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:288    .text:00000108 stdio_serial_init
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:361    .data.usart_serial_options:00000000 usart_serial_options
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:372    .bss.serial_rx_buf:00000000 serial_rx_buf
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:377    .bss.serial_rx_buf_head:00000000 serial_rx_buf_head
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:382    .bss.serial_rx_buf_tail:00000000 serial_rx_buf_tail
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:387    .bss.serial_rx_count:00000000 serial_rx_count
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:392    .text:0000016a sio2host_init
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:434    .text:0000018e sio2host_tx
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:494    .text:000001ce sio2host_rx
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:623    .text:00000284 sio2host_getchar
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:669    .text:000002a8 sio2host_putchar
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:710    .text:000002c8 sio2host_getchar_nowait
C:\Users\GUILHE~1\AppData\Local\Temp\cc3KoP9k.s:772    .text:00000308 __vector_25

UNDEFINED SYMBOLS
usart_init_rs232
usart_putchar
usart_getchar
stdio_base
ptr_put
ptr_get
_read
_write
fdevopen
usart_serial_write_packet
usart_serial_read_packet
__do_copy_data
__do_clear_bss
