   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "sysclk.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .text
  27              	 .align 1
  28              	 .syntax unified
  29              	 .thumb
  30              	 .thumb_func
  31              	 .fpu softvfp
  33              	cpu_irq_save:
  34              	.LFB112:
  35              	 .file 1 "../../../platform/common/utils/interrupt/interrupt_sam_nvic.h"
   1:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
   2:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \file
   3:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
   4:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Global interrupt management for SAM D20, SAM3 and SAM4 (NVIC based)
   5:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
   6:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Copyright (c) 2012-2013 Atmel Corporation. All rights reserved.
   7:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
   8:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \asf_license_start
   9:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  10:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \page License
  11:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  12:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  15:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  18:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  22:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  25:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  28:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  40:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \asf_license_stop
  41:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  42:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  43:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  44:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #ifndef UTILS_INTERRUPT_INTERRUPT_H
  45:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #define UTILS_INTERRUPT_INTERRUPT_H
  46:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  47:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #include <compiler.h>
  48:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #include <parts.h>
  49:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  50:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  51:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \weakgroup interrupt_group
  52:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  53:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * @{
  54:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  55:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  56:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  57:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \name Interrupt Service Routine definition
  58:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  59:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * @{
  60:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  61:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  62:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  63:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Define service routine
  64:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  65:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \note For NVIC devices the interrupt service routines are predefined to
  66:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *       add to vector table in binary generation, so there is no service
  67:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *       register at run time. The routine collections are in exceptions.h.
  68:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  69:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Usage:
  70:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \code
  71:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * ISR(foo_irq_handler)
  72:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * {
  73:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *      // Function definition
  74:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *      ...
  75:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * }
  76:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \endcode
  77:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  78:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \param func Name for the function.
  79:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  80:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define ISR(func)   \
  81:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	void func (void)
  82:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  83:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  84:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Initialize interrupt vectors
  85:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  86:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * For NVIC the interrupt vectors are put in vector table. So nothing
  87:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * to do to initialize them, except defined the vector function with
  88:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * right name.
  89:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  90:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * This must be called prior to \ref irq_register_handler.
  91:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  92:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define irq_initialize_vectors()   \
  93:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	do {                             \
  94:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	} while(0)
  95:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  96:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  97:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Register handler for interrupt
  98:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  99:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * For NVIC the interrupt vectors are put in vector table. So nothing
 100:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * to do to register them, except defined the vector function with
 101:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * right name.
 102:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
 103:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Usage:
 104:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \code
 105:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * irq_initialize_vectors();
 106:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * irq_register_handler(foo_irq_handler);
 107:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \endcode
 108:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
 109:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \note The function \a func must be defined with the \ref ISR macro.
 110:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \note The functions prototypes can be found in the device exception header
 111:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *       files (exceptions.h).
 112:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
 113:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define irq_register_handler(int_num, int_prio)                      \
 114:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	NVIC_ClearPendingIRQ(    (IRQn_Type)int_num);                      \
 115:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	NVIC_SetPriority(    (IRQn_Type)int_num, int_prio);                \
 116:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	NVIC_EnableIRQ(      (IRQn_Type)int_num);                          \
 117:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 118:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** //@}
 119:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 120:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define cpu_irq_enable()                     \
 121:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	do {                                       \
 122:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		g_interrupt_enabled = true;            \
 123:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__DMB();                               \
 124:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__enable_irq();                        \
 125:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	} while (0)
 126:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define cpu_irq_disable()                    \
 127:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	do {                                       \
 128:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__disable_irq();                       \
 129:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__DMB();                               \
 130:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		g_interrupt_enabled = false;           \
 131:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	} while (0)
 132:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 133:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** typedef uint32_t irqflags_t;
 134:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 135:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #if !defined(__DOXYGEN__)
 136:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** extern volatile bool g_interrupt_enabled;
 137:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #endif
 138:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 139:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #define cpu_irq_is_enabled()    (__get_PRIMASK() == 0)
 140:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 141:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static volatile uint32_t cpu_irq_critical_section_counter;
 142:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static volatile bool     cpu_irq_prev_interrupt_state;
 143:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 144:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static inline irqflags_t cpu_irq_save(void)
 145:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** {
  36              	 .loc 1 145 0
  37              	 .cfi_startproc
  38              	 
  39              	 
  40              	 
  41 0000 80B4     	 push {r7}
  42              	.LCFI0:
  43              	 .cfi_def_cfa_offset 4
  44              	 .cfi_offset 7,-4
  45 0002 83B0     	 sub sp,sp,#12
  46              	.LCFI1:
  47              	 .cfi_def_cfa_offset 16
  48 0004 00AF     	 add r7,sp,#0
  49              	.LCFI2:
  50              	 .cfi_def_cfa_register 7
  51              	.LBB14:
  52              	.LBB15:
  53              	 .file 2 "../../../platform/thirdparty/CMSIS/include/core_cmFunc.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @file     core_cmFunc.h
   3:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @brief    CMSIS Cortex-M Core Function Access Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @date     19. January 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * within development tools that are supporting such ARM based processors. 
  14:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  24:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #ifndef __CORE_CMFUNC_H
  25:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __CORE_CMFUNC_H
  26:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* ###########################  Core Function Access  ########################### */
  28:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \ingroup  CMSIS_Core_FunctionInterface   
  29:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  30:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   @{
  31:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  32:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  33:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  34:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* ARM armcc specific functions */
  35:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  36:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__ARMCC_VERSION < 400677)
  37:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  38:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
  39:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  40:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* intrinsic void __enable_irq();     */
  41:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* intrinsic void __disable_irq();    */
  42:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  43:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Control Register
  44:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  45:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the Control Register.
  46:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  47:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Control Register value
  48:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  49:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_CONTROL(void)
  50:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  51:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  52:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regControl);
  53:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  54:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  55:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  56:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Control Register
  57:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  58:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function writes the given value to the Control Register.
  59:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  60:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    control  Control Register value to set
  61:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  62:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_CONTROL(uint32_t control)
  63:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  64:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  65:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regControl = control;
  66:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  67:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  68:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  69:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get IPSR Register
  70:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  71:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the IPSR Register.
  72:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  73:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               IPSR Register value
  74:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  75:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_IPSR(void)
  76:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  77:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regIPSR          __ASM("ipsr");
  78:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regIPSR);
  79:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  80:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  81:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  82:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get APSR Register
  83:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  84:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the APSR Register.
  85:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  86:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               APSR Register value
  87:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  88:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_APSR(void)
  89:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  90:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regAPSR          __ASM("apsr");
  91:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regAPSR);
  92:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  93:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  94:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  95:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get xPSR Register
  96:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  97:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the xPSR Register.
  98:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  99:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               xPSR Register value
 100:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 101:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_xPSR(void)
 102:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 103:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regXPSR          __ASM("xpsr");
 104:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regXPSR);
 105:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 106:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 107:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 108:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 109:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 110:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 111:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 112:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               PSP Register value
 113:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 114:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PSP(void)
 115:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 116:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 117:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regProcessStackPointer);
 118:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 119:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 120:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 121:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 122:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 123:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 124:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 125:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 126:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 127:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 128:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 129:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 130:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regProcessStackPointer = topOfProcStack;
 131:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 132:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 133:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 134:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 135:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 136:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 137:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 138:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               MSP Register value
 139:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 140:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_MSP(void)
 141:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 142:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 143:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regMainStackPointer);
 144:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 145:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 146:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 147:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 148:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 149:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 150:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 151:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 152:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 153:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 154:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 155:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 156:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regMainStackPointer = topOfMainStack;
 157:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 158:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 159:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 160:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Priority Mask
 161:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 162:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 163:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 164:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Priority Mask value
 165:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 166:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PRIMASK(void)
 167:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 168:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 169:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regPriMask);
 170:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 171:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 172:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 173:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Priority Mask
 174:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 175:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Priority Mask Register.
 176:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 177:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    priMask  Priority Mask
 178:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 179:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 180:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 181:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 182:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regPriMask = (priMask);
 183:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 184:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 185:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 186:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if       (__CORTEX_M >= 0x03)
 187:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 188:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Enable FIQ
 189:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 190:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function enables FIQ interrupts by clearing the F-bit in the CPSR.
 191:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     Can only be executed in Privileged modes.
 192:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 193:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __enable_fault_irq                __enable_fiq
 194:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 195:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 196:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Disable FIQ
 197:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 198:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function disables FIQ interrupts by setting the F-bit in the CPSR.
 199:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     Can only be executed in Privileged modes.
 200:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 201:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __disable_fault_irq               __disable_fiq
 202:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 203:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Base Priority
 205:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 206:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Base Priority register.
 207:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 208:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Base Priority register value
 209:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 210:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t  __get_BASEPRI(void)
 211:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 212:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 213:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regBasePri);
 214:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 215:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 216:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 217:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Base Priority
 218:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 219:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Base Priority register.
 220:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 221:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    basePri  Base Priority value to set
 222:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 223:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 224:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 225:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 226:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regBasePri = (basePri & 0xff);
 227:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 228:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 229:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 230:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Fault Mask
 231:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 232:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Fault Mask register.
 233:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 234:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Fault Mask register value
 235:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 236:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 237:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 238:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 239:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regFaultMask);
 240:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 241:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 242:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 243:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Fault Mask
 244:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 245:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Fault Mask register.
 246:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 247:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    faultMask  Fault Mask value to set
 248:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 249:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 250:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 251:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 252:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regFaultMask = (faultMask & (uint32_t)1);
 253:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 254:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 255:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif /* (__CORTEX_M >= 0x03) */
 256:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 257:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 258:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if       (__CORTEX_M == 0x04)
 259:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 260:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get FPSCR
 261:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 262:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Floating Point Status/Control register.
 263:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 264:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Floating Point Status/Control register value
 265:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 266:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FPSCR(void)
 267:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 268:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 269:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 270:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regfpscr);
 271:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #else
 272:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****    return(0);
 273:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
 274:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 275:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 276:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 277:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set FPSCR
 278:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 279:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Floating Point Status/Control register.
 280:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 281:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    fpscr  Floating Point Status/Control value to set
 282:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 283:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 284:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 285:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 286:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 287:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regfpscr = (fpscr);
 288:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
 289:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 290:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 291:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif /* (__CORTEX_M == 0x04) */
 292:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 293:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 294:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 295:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* IAR iccarm specific functions */
 296:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 297:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #include <cmsis_iar.h>
 298:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 299:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 300:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 301:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* TI CCS specific functions */
 302:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 303:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #include <cmsis_ccs.h>
 304:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 306:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 307:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* GNU gcc specific functions */
 308:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 309:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Enable IRQ Interrupts
 310:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 311:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   This function enables IRQ interrupts by clearing the I-bit in the CPSR.
 312:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   Can only be executed in Privileged modes.
 313:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 314:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
 315:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 316:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("cpsie i");
 317:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 318:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 319:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 320:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Disable IRQ Interrupts
 321:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 322:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   This function disables IRQ interrupts by setting the I-bit in the CPSR.
 323:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   Can only be executed in Privileged modes.
 324:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 325:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 326:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 327:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("cpsid i");
 328:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 329:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 330:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 331:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Control Register
 332:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 333:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the Control Register.
 334:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 335:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Control Register value
 336:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 337:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
 338:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 339:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 340:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 341:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 342:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 343:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 344:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 345:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 346:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Control Register
 347:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 348:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function writes the given value to the Control Register.
 349:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 350:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    control  Control Register value to set
 351:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 352:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 353:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 354:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) );
 355:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 356:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 357:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 358:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get IPSR Register
 359:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 360:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the IPSR Register.
 361:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 362:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               IPSR Register value
 363:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 364:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 365:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 366:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 367:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 368:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 369:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 370:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 371:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 372:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 373:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get APSR Register
 374:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 375:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the APSR Register.
 376:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 377:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               APSR Register value
 378:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 379:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 380:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 381:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 382:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 383:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 384:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 385:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 386:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 387:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 388:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get xPSR Register
 389:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 390:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the xPSR Register.
 391:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 392:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               xPSR Register value
 393:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 394:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 395:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 396:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 397:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 398:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 399:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 400:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 401:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 402:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 403:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 404:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 405:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 406:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 407:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               PSP Register value
 408:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 409:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 410:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 411:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t result;
 412:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 413:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 414:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 415:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 416:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 417:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 418:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 419:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 420:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 421:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 422:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 423:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 424:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 425:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 426:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) );
 427:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 428:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 429:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 430:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 431:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 432:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 433:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 434:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               MSP Register value
 435:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 436:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 437:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 438:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t result;
 439:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 440:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 441:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 442:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 443:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 444:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 445:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 446:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 447:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 448:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 449:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 450:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 451:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 452:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 453:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) );
 454:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 455:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 456:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 457:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Priority Mask
 458:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 459:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 460:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 461:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Priority Mask value
 462:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 463:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 464:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 465:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 466:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 467:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
  54              	 .loc 2 467 0
  55              	 .syntax unified
  56              	
  57 0006 EFF31083 	 MRS r3,primask
  58              	
  59              	 .thumb
  60              	 .syntax unified
  61 000a 3B60     	 str r3,[r7]
 468:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
  62              	 .loc 2 468 0
  63 000c 3B68     	 ldr r3,[r7]
  64              	.LBE15:
  65              	.LBE14:
 146:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	irqflags_t flags = cpu_irq_is_enabled();
  66              	 .loc 1 146 0
  67 000e 002B     	 cmp r3,#0
  68 0010 0CBF     	 ite eq
  69 0012 0123     	 moveq r3,#1
  70 0014 0023     	 movne r3,#0
  71 0016 DBB2     	 uxtb r3,r3
  72 0018 7B60     	 str r3,[r7,#4]
  73              	.LBB16:
  74              	.LBB17:
 327:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  75              	 .loc 2 327 0
  76              	 .syntax unified
  77              	
  78 001a 72B6     	 cpsid i
  79              	
  80              	 .thumb
  81              	 .syntax unified
  82              	.LBE17:
  83              	.LBE16:
  84              	.LBB18:
  85              	.LBB19:
  86              	 .file 3 "../../../platform/thirdparty/CMSIS/include/core_cmInstr.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @date     07. February 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors.
  14:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  24:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  28:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   Access to dedicated instructions
  31:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   @{
  32:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** */
  33:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  34:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* ARM armcc specific functions */
  36:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  37:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #endif
  40:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  41:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  42:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  No Operation
  43:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  44:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  46:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __NOP                             __nop
  47:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  48:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  49:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  51:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     until one of a number of events occurs.
  53:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  54:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __WFI                             __wfi
  55:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  56:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  57:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Event
  58:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  59:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  62:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __WFE                             __wfe
  63:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  64:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  65:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Send Event
  66:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  67:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  69:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __SEV                             __sev
  70:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  71:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  72:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  74:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  75:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  76:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  78:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  80:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  81:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  83:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  84:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  86:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  88:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  89:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  91:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
  92:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  94:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  96:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  97:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  99:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 101:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 103:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 104:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __REV                             __rev
 105:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 106:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 107:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 109:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 111:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 113:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 114:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 115:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 116:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   rev16 r0, r0
 117:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   bx lr
 118:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 119:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 120:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 121:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 123:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 125:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 127:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 128:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 129:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 130:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   revsh r0, r0
 131:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   bx lr
 132:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 133:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 134:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 135:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 136:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 137:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 138:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 139:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 140:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 141:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Rotated value
 142:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 143:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __ROR                             __ror
 144:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 145:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 146:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 147:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 148:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 149:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 150:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 151:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 152:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 153:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 154:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 155:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __RBIT                            __rbit
 156:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 157:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 158:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 159:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 160:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 161:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 162:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 163:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 164:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 165:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 166:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 167:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 168:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 169:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 170:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 171:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 172:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 173:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 174:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 175:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 176:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 177:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 178:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 179:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 180:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 181:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 182:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 183:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 184:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 185:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 186:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 187:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 188:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 189:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 190:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 191:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 192:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 193:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 194:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 195:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 196:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 197:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 198:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 199:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 200:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 201:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 202:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 203:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 205:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 206:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 207:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 208:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 209:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 210:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 211:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 212:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 213:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 214:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 215:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 216:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 217:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 218:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 219:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 220:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 221:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 222:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 223:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 224:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 225:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 226:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 227:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 228:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 229:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CLREX                           __clrex
 230:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 231:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 232:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Signed Saturate
 233:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 234:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function saturates a signed value.
 235:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 236:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 238:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             Saturated value
 239:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 240:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __SSAT                            __ssat
 241:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 242:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 243:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 244:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 245:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function saturates an unsigned value.
 246:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 247:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 248:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 249:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             Saturated value
 250:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 251:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __USAT                            __usat
 252:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 253:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 254:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Count leading zeros
 255:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 256:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 257:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 258:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 259:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             number of leading zeros in value
 260:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 261:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CLZ                             __clz
 262:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 263:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 264:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 265:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 266:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 267:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 268:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* IAR iccarm specific functions */
 269:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 270:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #include <cmsis_iar.h>
 271:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 272:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 273:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 274:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* TI CCS specific functions */
 275:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 276:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #include <cmsis_ccs.h>
 277:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 278:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 279:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 280:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* GNU gcc specific functions */
 281:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 282:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  No Operation
 283:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 284:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 285:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 286:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 287:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 288:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("nop");
 289:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 290:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 291:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 292:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 293:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 294:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 295:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     until one of a number of events occurs.
 296:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 297:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
 298:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 299:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("wfi");
 300:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 301:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 302:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 303:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Event
 304:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 306:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 307:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 308:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFE(void)
 309:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 310:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("wfe");
 311:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 312:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 313:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 314:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Send Event
 315:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 316:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 317:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 318:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __SEV(void)
 319:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 320:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("sev");
 321:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 322:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 323:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 324:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 325:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 326:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 327:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 328:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     memory, after the instruction has been completed.
 329:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 330:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __ISB(void)
 331:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 332:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("isb");
 333:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 334:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 335:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 336:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 337:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 338:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 339:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 340:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 341:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
 342:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 343:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("dsb");
 344:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 345:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 346:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 347:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 348:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 349:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 350:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 351:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 352:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
 353:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 354:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("dmb");
  87              	 .loc 3 354 0
  88              	 .syntax unified
  89              	
  90 001c BFF35F8F 	 dmb
  91              	
  92              	 .thumb
  93              	 .syntax unified
  94              	.LBE19:
  95              	.LBE18:
 147:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	cpu_irq_disable();
  96              	 .loc 1 147 0
  97 0020 044B     	 ldr r3,.L4
  98 0022 0022     	 movs r2,#0
  99 0024 1A70     	 strb r2,[r3]
 148:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	return flags;
 100              	 .loc 1 148 0
 101 0026 7B68     	 ldr r3,[r7,#4]
 149:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** }
 102              	 .loc 1 149 0
 103 0028 1846     	 mov r0,r3
 104 002a 0C37     	 adds r7,r7,#12
 105              	.LCFI3:
 106              	 .cfi_def_cfa_offset 4
 107 002c BD46     	 mov sp,r7
 108              	.LCFI4:
 109              	 .cfi_def_cfa_register 13
 110              	 
 111 002e 80BC     	 pop {r7}
 112              	.LCFI5:
 113              	 .cfi_restore 7
 114              	 .cfi_def_cfa_offset 0
 115 0030 7047     	 bx lr
 116              	.L5:
 117 0032 00BF     	 .align 2
 118              	.L4:
 119 0034 00000000 	 .word g_interrupt_enabled
 120              	 .cfi_endproc
 121              	.LFE112:
 123              	 .align 1
 124              	 .syntax unified
 125              	 .thumb
 126              	 .thumb_func
 127              	 .fpu softvfp
 129              	cpu_irq_is_enabled_flags:
 130              	.LFB113:
 150:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 151:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static inline bool cpu_irq_is_enabled_flags(irqflags_t flags)
 152:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** {
 131              	 .loc 1 152 0
 132              	 .cfi_startproc
 133              	 
 134              	 
 135              	 
 136 0038 80B4     	 push {r7}
 137              	.LCFI6:
 138              	 .cfi_def_cfa_offset 4
 139              	 .cfi_offset 7,-4
 140 003a 83B0     	 sub sp,sp,#12
 141              	.LCFI7:
 142              	 .cfi_def_cfa_offset 16
 143 003c 00AF     	 add r7,sp,#0
 144              	.LCFI8:
 145              	 .cfi_def_cfa_register 7
 146 003e 7860     	 str r0,[r7,#4]
 153:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	return (flags);
 147              	 .loc 1 153 0
 148 0040 7B68     	 ldr r3,[r7,#4]
 149 0042 002B     	 cmp r3,#0
 150 0044 14BF     	 ite ne
 151 0046 0123     	 movne r3,#1
 152 0048 0023     	 moveq r3,#0
 153 004a DBB2     	 uxtb r3,r3
 154:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** }
 154              	 .loc 1 154 0
 155 004c 1846     	 mov r0,r3
 156 004e 0C37     	 adds r7,r7,#12
 157              	.LCFI9:
 158              	 .cfi_def_cfa_offset 4
 159 0050 BD46     	 mov sp,r7
 160              	.LCFI10:
 161              	 .cfi_def_cfa_register 13
 162              	 
 163 0052 80BC     	 pop {r7}
 164              	.LCFI11:
 165              	 .cfi_restore 7
 166              	 .cfi_def_cfa_offset 0
 167 0054 7047     	 bx lr
 168              	 .cfi_endproc
 169              	.LFE113:
 171              	 .align 1
 172              	 .syntax unified
 173              	 .thumb
 174              	 .thumb_func
 175              	 .fpu softvfp
 177              	cpu_irq_restore:
 178              	.LFB114:
 155:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 156:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static inline void cpu_irq_restore(irqflags_t flags)
 157:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** {
 179              	 .loc 1 157 0
 180              	 .cfi_startproc
 181              	 
 182              	 
 183 0056 80B5     	 push {r7,lr}
 184              	.LCFI12:
 185              	 .cfi_def_cfa_offset 8
 186              	 .cfi_offset 7,-8
 187              	 .cfi_offset 14,-4
 188 0058 82B0     	 sub sp,sp,#8
 189              	.LCFI13:
 190              	 .cfi_def_cfa_offset 16
 191 005a 00AF     	 add r7,sp,#0
 192              	.LCFI14:
 193              	 .cfi_def_cfa_register 7
 194 005c 7860     	 str r0,[r7,#4]
 158:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	if (cpu_irq_is_enabled_flags(flags))
 195              	 .loc 1 158 0
 196 005e 7868     	 ldr r0,[r7,#4]
 197 0060 FFF7EAFF 	 bl cpu_irq_is_enabled_flags
 198 0064 0346     	 mov r3,r0
 199 0066 002B     	 cmp r3,#0
 200 0068 05D0     	 beq .L10
 159:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		cpu_irq_enable();
 201              	 .loc 1 159 0
 202 006a 054B     	 ldr r3,.L11
 203 006c 0122     	 movs r2,#1
 204 006e 1A70     	 strb r2,[r3]
 205              	.LBB20:
 206              	.LBB21:
 207              	 .loc 3 354 0
 208              	 .syntax unified
 209              	
 210 0070 BFF35F8F 	 dmb
 211              	
 212              	 .thumb
 213              	 .syntax unified
 214              	.LBE21:
 215              	.LBE20:
 216              	.LBB22:
 217              	.LBB23:
 316:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 218              	 .loc 2 316 0
 219              	 .syntax unified
 220              	
 221 0074 62B6     	 cpsie i
 222              	
 223              	 .thumb
 224              	 .syntax unified
 225              	.L10:
 226              	.LBE23:
 227              	.LBE22:
 160:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** }
 228              	 .loc 1 160 0
 229 0076 00BF     	 nop
 230 0078 0837     	 adds r7,r7,#8
 231              	.LCFI15:
 232              	 .cfi_def_cfa_offset 8
 233 007a BD46     	 mov sp,r7
 234              	.LCFI16:
 235              	 .cfi_def_cfa_register 13
 236              	 
 237 007c 80BD     	 pop {r7,pc}
 238              	.L12:
 239 007e 00BF     	 .align 2
 240              	.L11:
 241 0080 00000000 	 .word g_interrupt_enabled
 242              	 .cfi_endproc
 243              	.LFE114:
 245              	 .comm n,1,1
 246              	 .section .bss.tTS,"aw",%nobits
 247              	 .align 2
 250              	tTS:
 251 0000 00000000 	 .space 4
 252              	 .text
 253              	 .align 1
 254              	 .syntax unified
 255              	 .thumb
 256              	 .thumb_func
 257              	 .fpu softvfp
 259              	osc_enable:
 260              	.LFB126:
 261              	 .file 4 "../../../platform/common/services/clock/sam4l/osc.h"
   1:../../../platform/common/services/clock/sam4l/osc.h **** /**
   2:../../../platform/common/services/clock/sam4l/osc.h ****  * \file
   3:../../../platform/common/services/clock/sam4l/osc.h ****  *
   4:../../../platform/common/services/clock/sam4l/osc.h ****  * \brief Chip-specific oscillator management functions
   5:../../../platform/common/services/clock/sam4l/osc.h ****  *
   6:../../../platform/common/services/clock/sam4l/osc.h ****  * Copyright (c) 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/sam4l/osc.h ****  *
   8:../../../platform/common/services/clock/sam4l/osc.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/sam4l/osc.h ****  *
  10:../../../platform/common/services/clock/sam4l/osc.h ****  * \page License
  11:../../../platform/common/services/clock/sam4l/osc.h ****  *
  12:../../../platform/common/services/clock/sam4l/osc.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/sam4l/osc.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/sam4l/osc.h ****  *
  15:../../../platform/common/services/clock/sam4l/osc.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/sam4l/osc.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/sam4l/osc.h ****  *
  18:../../../platform/common/services/clock/sam4l/osc.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/sam4l/osc.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/sam4l/osc.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/sam4l/osc.h ****  *
  22:../../../platform/common/services/clock/sam4l/osc.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/sam4l/osc.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/sam4l/osc.h ****  *
  25:../../../platform/common/services/clock/sam4l/osc.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/sam4l/osc.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/sam4l/osc.h ****  *
  28:../../../platform/common/services/clock/sam4l/osc.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/sam4l/osc.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/sam4l/osc.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/sam4l/osc.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/sam4l/osc.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/sam4l/osc.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/sam4l/osc.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/sam4l/osc.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/sam4l/osc.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/sam4l/osc.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/sam4l/osc.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/sam4l/osc.h ****  *
  40:../../../platform/common/services/clock/sam4l/osc.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/sam4l/osc.h ****  *
  42:../../../platform/common/services/clock/sam4l/osc.h ****  */
  43:../../../platform/common/services/clock/sam4l/osc.h **** #ifndef CHIP_OSC_H_INCLUDED
  44:../../../platform/common/services/clock/sam4l/osc.h **** #define CHIP_OSC_H_INCLUDED
  45:../../../platform/common/services/clock/sam4l/osc.h **** 
  46:../../../platform/common/services/clock/sam4l/osc.h **** #include <board.h>
  47:../../../platform/common/services/clock/sam4l/osc.h **** 
  48:../../../platform/common/services/clock/sam4l/osc.h **** #ifdef __cplusplus
  49:../../../platform/common/services/clock/sam4l/osc.h **** extern "C" {
  50:../../../platform/common/services/clock/sam4l/osc.h **** #endif
  51:../../../platform/common/services/clock/sam4l/osc.h **** 
  52:../../../platform/common/services/clock/sam4l/osc.h **** 
  53:../../../platform/common/services/clock/sam4l/osc.h **** /**
  54:../../../platform/common/services/clock/sam4l/osc.h ****  * \weakgroup osc_group
  55:../../../platform/common/services/clock/sam4l/osc.h ****  * @{
  56:../../../platform/common/services/clock/sam4l/osc.h ****  */
  57:../../../platform/common/services/clock/sam4l/osc.h **** 
  58:../../../platform/common/services/clock/sam4l/osc.h **** //! \name Oscillator identifiers
  59:../../../platform/common/services/clock/sam4l/osc.h **** //@{
  60:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_ID_OSC0             0       //!< External Oscillator 0
  61:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_ID_OSC32            1       //!< External 32 kHz oscillator
  62:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_ID_RC32K            2       //!< Internal 32 kHz RC oscillator
  63:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_ID_RC80M            3       //!< Internal 80 MHz RC oscillator
  64:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_ID_RCFAST           4       //!< Internal 4-8-12 MHz RCFAST oscillator
  65:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_ID_RC1M             5       //!< Internal 1 MHz RC oscillator
  66:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_ID_RCSYS            6       //!< Internal System RC oscillator
  67:../../../platform/common/services/clock/sam4l/osc.h **** //@}
  68:../../../platform/common/services/clock/sam4l/osc.h **** 
  69:../../../platform/common/services/clock/sam4l/osc.h **** //! \name OSC0 mode values
  70:../../../platform/common/services/clock/sam4l/osc.h **** //@{
  71:../../../platform/common/services/clock/sam4l/osc.h **** //! External clock connected to XIN
  72:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_MODE_EXTERNAL       0
  73:../../../platform/common/services/clock/sam4l/osc.h **** //! Crystal connected to XIN/XOUT
  74:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_MODE_XTAL           SCIF_OSCCTRL0_MODE
  75:../../../platform/common/services/clock/sam4l/osc.h **** //@}
  76:../../../platform/common/services/clock/sam4l/osc.h **** 
  77:../../../platform/common/services/clock/sam4l/osc.h **** //! \name OSC32 mode values
  78:../../../platform/common/services/clock/sam4l/osc.h **** //@{
  79:../../../platform/common/services/clock/sam4l/osc.h **** //! External clock connected to XIN32
  80:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC32_MODE_EXTERNAL     BSCIF_OSCCTRL32_MODE(0)
  81:../../../platform/common/services/clock/sam4l/osc.h **** //! Crystal connected to XIN32/XOUT32
  82:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC32_MODE_XTAL         BSCIF_OSCCTRL32_MODE(1)
  83:../../../platform/common/services/clock/sam4l/osc.h **** //! Crystal connected to XIN32/XOUT32 in high current mode
  84:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC32_MODE_XTAL_HC      BSCIF_OSCCTRL32_MODE(4)
  85:../../../platform/common/services/clock/sam4l/osc.h **** //@}
  86:../../../platform/common/services/clock/sam4l/osc.h **** 
  87:../../../platform/common/services/clock/sam4l/osc.h **** //! \name OSC0 startup values
  88:../../../platform/common/services/clock/sam4l/osc.h **** //@{
  89:../../../platform/common/services/clock/sam4l/osc.h **** //! 0 cycles
  90:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_STARTUP_0           SCIF_OSCCTRL0_STARTUP(0)
  91:../../../platform/common/services/clock/sam4l/osc.h **** //! 64 cycles (560 us)
  92:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_STARTUP_64          SCIF_OSCCTRL0_STARTUP(1)
  93:../../../platform/common/services/clock/sam4l/osc.h **** //! 128 cycles (1.1 ms)
  94:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_STARTUP_128         SCIF_OSCCTRL0_STARTUP(2)
  95:../../../platform/common/services/clock/sam4l/osc.h **** //! 2048 cycles (18 ms)
  96:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_STARTUP_2048        SCIF_OSCCTRL0_STARTUP(3)
  97:../../../platform/common/services/clock/sam4l/osc.h **** //! 4096 cycles (36 ms)
  98:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_STARTUP_4096        SCIF_OSCCTRL0_STARTUP(4)
  99:../../../platform/common/services/clock/sam4l/osc.h **** //! 8192 cycles (71 ms)
 100:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_STARTUP_8192        SCIF_OSCCTRL0_STARTUP(5)
 101:../../../platform/common/services/clock/sam4l/osc.h **** //! 16384 cycles (143 ms)
 102:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_STARTUP_16384       SCIF_OSCCTRL0_STARTUP(6)
 103:../../../platform/common/services/clock/sam4l/osc.h **** //! 32768 cycles (285 ms)
 104:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_STARTUP_32768       SCIF_OSCCTRL0_STARTUP(7)
 105:../../../platform/common/services/clock/sam4l/osc.h **** //@}
 106:../../../platform/common/services/clock/sam4l/osc.h **** 
 107:../../../platform/common/services/clock/sam4l/osc.h **** //! \name OSC32 startup values
 108:../../../platform/common/services/clock/sam4l/osc.h **** //@{
 109:../../../platform/common/services/clock/sam4l/osc.h **** //! 0 cycles
 110:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC32_STARTUP_0         BSCIF_OSCCTRL32_STARTUP(0)
 111:../../../platform/common/services/clock/sam4l/osc.h **** //! 128 cycles (1.1 ms)
 112:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC32_STARTUP_128       BSCIF_OSCCTRL32_STARTUP(1)
 113:../../../platform/common/services/clock/sam4l/osc.h **** //! 8192 cycles (72.3 ms)
 114:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC32_STARTUP_8192      BSCIF_OSCCTRL32_STARTUP(2)
 115:../../../platform/common/services/clock/sam4l/osc.h **** //! 16384 cycles (143 ms)
 116:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC32_STARTUP_16384     BSCIF_OSCCTRL32_STARTUP(3)
 117:../../../platform/common/services/clock/sam4l/osc.h **** //! 65536 cycles (570 ms)
 118:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC32_STARTUP_65536     BSCIF_OSCCTRL32_STARTUP(4)
 119:../../../platform/common/services/clock/sam4l/osc.h **** //! 131072 cycles (1.1 s)
 120:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC32_STARTUP_131072    BSCIF_OSCCTRL32_STARTUP(5)
 121:../../../platform/common/services/clock/sam4l/osc.h **** //! 262144 cycles (2.3 s)
 122:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC32_STARTUP_262144    BSCIF_OSCCTRL32_STARTUP(6)
 123:../../../platform/common/services/clock/sam4l/osc.h **** //! 524288 cycles (4.6 s)
 124:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC32_STARTUP_524288    BSCIF_OSCCTRL32_STARTUP(7)
 125:../../../platform/common/services/clock/sam4l/osc.h **** //@}
 126:../../../platform/common/services/clock/sam4l/osc.h **** 
 127:../../../platform/common/services/clock/sam4l/osc.h **** /**
 128:../../../platform/common/services/clock/sam4l/osc.h ****  * \def OSC0_STARTUP_TIMEOUT
 129:../../../platform/common/services/clock/sam4l/osc.h ****  * \brief Number of slow clock cycles to wait for OSC0 to start
 130:../../../platform/common/services/clock/sam4l/osc.h ****  *
 131:../../../platform/common/services/clock/sam4l/osc.h ****  * This is the number of slow clock cycles corresponding to
 132:../../../platform/common/services/clock/sam4l/osc.h ****  * OSC0_STARTUP_VALUE with an additional 25% safety margin. If the
 133:../../../platform/common/services/clock/sam4l/osc.h ****  * oscillator isn't running when this timeout has expired, it is assumed
 134:../../../platform/common/services/clock/sam4l/osc.h ****  * to have failed to start.
 135:../../../platform/common/services/clock/sam4l/osc.h ****  */
 136:../../../platform/common/services/clock/sam4l/osc.h **** /**
 137:../../../platform/common/services/clock/sam4l/osc.h ****  * \def OSC0_MODE_VALUE
 138:../../../platform/common/services/clock/sam4l/osc.h ****  * \brief Board-dependent value written to the MODE bitfield of
 139:../../../platform/common/services/clock/sam4l/osc.h ****  * PM_OSCCTRL(0)
 140:../../../platform/common/services/clock/sam4l/osc.h ****  */
 141:../../../platform/common/services/clock/sam4l/osc.h **** /**
 142:../../../platform/common/services/clock/sam4l/osc.h ****  * \def OSC0_STARTUP_VALUE
 143:../../../platform/common/services/clock/sam4l/osc.h ****  * \brief Board-dependent value written to the STARTUP bitfield of
 144:../../../platform/common/services/clock/sam4l/osc.h ****  * PM_OSCCTRL(0)
 145:../../../platform/common/services/clock/sam4l/osc.h ****  */
 146:../../../platform/common/services/clock/sam4l/osc.h **** #if defined(BOARD_OSC0_STARTUP_US)
 147:../../../platform/common/services/clock/sam4l/osc.h **** #   if BOARD_OSC0_STARTUP_US == 0
 148:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_VALUE    OSC_STARTUP_0
 149:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_TIMEOUT  8
 150:../../../platform/common/services/clock/sam4l/osc.h **** #   elif BOARD_OSC0_STARTUP_US <= 557
 151:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_VALUE    OSC_STARTUP_64
 152:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_TIMEOUT  80
 153:../../../platform/common/services/clock/sam4l/osc.h **** #   elif BOARD_OSC0_STARTUP_US <= 1100
 154:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_VALUE    OSC_STARTUP_128
 155:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_TIMEOUT  160
 156:../../../platform/common/services/clock/sam4l/osc.h **** #   elif BOARD_OSC0_STARTUP_US <= 18000
 157:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_VALUE    OSC_STARTUP_2048
 158:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_TIMEOUT  2560
 159:../../../platform/common/services/clock/sam4l/osc.h **** #   elif BOARD_OSC0_STARTUP_US <= 36000
 160:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_VALUE    OSC_STARTUP_4096
 161:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_TIMEOUT  5120
 162:../../../platform/common/services/clock/sam4l/osc.h **** #   elif BOARD_OSC0_STARTUP_US <= 71000
 163:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_VALUE    OSC_STARTUP_8192
 164:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_TIMEOUT  10240
 165:../../../platform/common/services/clock/sam4l/osc.h **** #   elif BOARD_OSC0_STARTUP_US <= 143000
 166:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_VALUE    OSC_STARTUP_16384
 167:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_TIMEOUT  20480
 168:../../../platform/common/services/clock/sam4l/osc.h **** #   elif BOARD_OSC0_STARTUP_US <= 285000
 169:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_VALUE    OSC_STARTUP_32768
 170:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_TIMEOUT  40960
 171:../../../platform/common/services/clock/sam4l/osc.h **** #   else
 172:../../../platform/common/services/clock/sam4l/osc.h **** #      error BOARD_OSC0_STARTUP_US is too high
 173:../../../platform/common/services/clock/sam4l/osc.h **** #   endif
 174:../../../platform/common/services/clock/sam4l/osc.h **** #   if BOARD_OSC0_IS_XTAL == true
 175:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_MODE_VALUE       OSC_MODE_XTAL
 176:../../../platform/common/services/clock/sam4l/osc.h **** #      if BOARD_OSC0_HZ < 2000000
 177:../../../platform/common/services/clock/sam4l/osc.h **** #         define OSC0_GAIN_VALUE      SCIF_OSCCTRL0_GAIN(0)
 178:../../../platform/common/services/clock/sam4l/osc.h **** #      elif BOARD_OSC0_HZ < 4000000
 179:../../../platform/common/services/clock/sam4l/osc.h **** #         define OSC0_GAIN_VALUE      SCIF_OSCCTRL0_GAIN(1)
 180:../../../platform/common/services/clock/sam4l/osc.h **** #      elif BOARD_OSC0_HZ < 8000000
 181:../../../platform/common/services/clock/sam4l/osc.h **** #         define OSC0_GAIN_VALUE      SCIF_OSCCTRL0_GAIN(2)
 182:../../../platform/common/services/clock/sam4l/osc.h **** #      elif BOARD_OSC0_HZ < 16000000
 183:../../../platform/common/services/clock/sam4l/osc.h **** #         define OSC0_GAIN_VALUE      SCIF_OSCCTRL0_GAIN(3)
 184:../../../platform/common/services/clock/sam4l/osc.h **** #      else
 185:../../../platform/common/services/clock/sam4l/osc.h **** #         define OSC0_GAIN_VALUE      ((0x1u << 4) | SCIF_OSCCTRL0_GAIN(0))
 186:../../../platform/common/services/clock/sam4l/osc.h **** #      endif
 187:../../../platform/common/services/clock/sam4l/osc.h **** #   else
 188:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_MODE_VALUE       OSC_MODE_EXTERNAL
 189:../../../platform/common/services/clock/sam4l/osc.h **** #   endif
 190:../../../platform/common/services/clock/sam4l/osc.h **** #else
 191:../../../platform/common/services/clock/sam4l/osc.h **** #   if defined(BOARD_OSC0_HZ)
 192:../../../platform/common/services/clock/sam4l/osc.h **** #      error BOARD_OSC0_STARTUP_US must be defined by the board code
 193:../../../platform/common/services/clock/sam4l/osc.h **** #   endif
 194:../../../platform/common/services/clock/sam4l/osc.h **** #   ifdef __DOXYGEN__
 195:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_VALUE     UNDEFINED
 196:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_STARTUP_TIMEOUT   UNDEFINED
 197:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC0_MODE_VALUE        UNDEFINED
 198:../../../platform/common/services/clock/sam4l/osc.h **** #   endif
 199:../../../platform/common/services/clock/sam4l/osc.h **** #endif
 200:../../../platform/common/services/clock/sam4l/osc.h **** 
 201:../../../platform/common/services/clock/sam4l/osc.h **** #if defined(BOARD_OSC32_STARTUP_US)
 202:../../../platform/common/services/clock/sam4l/osc.h **** #   if BOARD_OSC32_STARTUP_US == 0
 203:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC32_STARTUP_VALUE    OSC32_STARTUP_0
 204:../../../platform/common/services/clock/sam4l/osc.h **** #   elif BOARD_OSC32_STARTUP_US   <= 1100
 205:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC32_STARTUP_VALUE    OSC32_STARTUP_128
 206:../../../platform/common/services/clock/sam4l/osc.h **** #   elif BOARD_OSC32_STARTUP_US   <= 72300
 207:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC32_STARTUP_VALUE    OSC32_STARTUP_8192
 208:../../../platform/common/services/clock/sam4l/osc.h **** #   elif BOARD_OSC32_STARTUP_US   <= 143000
 209:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC32_STARTUP_VALUE    OSC32_STARTUP_16384
 210:../../../platform/common/services/clock/sam4l/osc.h **** #   elif BOARD_OSC32_STARTUP_US   <= 570000
 211:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC32_STARTUP_VALUE    OSC32_STARTUP_65536
 212:../../../platform/common/services/clock/sam4l/osc.h **** #   elif BOARD_OSC32_STARTUP_US   <= 1100000
 213:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC32_STARTUP_VALUE    OSC32_STARTUP_131072
 214:../../../platform/common/services/clock/sam4l/osc.h **** #   elif BOARD_OSC32_STARTUP_US   <= 2300000
 215:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC32_STARTUP_VALUE    OSC32_STARTUP_262144
 216:../../../platform/common/services/clock/sam4l/osc.h **** #   elif BOARD_OSC32_STARTUP_US   <= 4600000
 217:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC32_STARTUP_VALUE    OSC32_STARTUP_524288
 218:../../../platform/common/services/clock/sam4l/osc.h **** #   else
 219:../../../platform/common/services/clock/sam4l/osc.h **** #      error BOARD_OSC32_STARTUP_US is too high
 220:../../../platform/common/services/clock/sam4l/osc.h **** #   endif
 221:../../../platform/common/services/clock/sam4l/osc.h **** #   if BOARD_OSC32_IS_XTAL == true
 222:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC32_MODE_VALUE       OSC32_MODE_XTAL
 223:../../../platform/common/services/clock/sam4l/osc.h **** #   else
 224:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC32_MODE_VALUE       OSC32_MODE_EXTERNAL
 225:../../../platform/common/services/clock/sam4l/osc.h **** #   endif
 226:../../../platform/common/services/clock/sam4l/osc.h **** #else
 227:../../../platform/common/services/clock/sam4l/osc.h **** #   if defined(BOARD_OSC32_HZ)
 228:../../../platform/common/services/clock/sam4l/osc.h **** #      error BOARD_OSC32_STARTUP_US must be defined by the board code
 229:../../../platform/common/services/clock/sam4l/osc.h **** #   endif
 230:../../../platform/common/services/clock/sam4l/osc.h **** #   ifdef __DOXYGEN__
 231:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC32_STARTUP_VALUE     UNDEFINED
 232:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC32_STARTUP_TIMEOUT   UNDEFINED
 233:../../../platform/common/services/clock/sam4l/osc.h **** #      define OSC32_MODE_VALUE        UNDEFINED
 234:../../../platform/common/services/clock/sam4l/osc.h **** #   endif
 235:../../../platform/common/services/clock/sam4l/osc.h **** #endif
 236:../../../platform/common/services/clock/sam4l/osc.h **** 
 237:../../../platform/common/services/clock/sam4l/osc.h **** // Use 4 MHz frequency range for RCFAST oscillator if config was empty.
 238:../../../platform/common/services/clock/sam4l/osc.h **** #ifndef CONFIG_RCFAST_FRANGE
 239:../../../platform/common/services/clock/sam4l/osc.h **** #define CONFIG_RCFAST_FRANGE    0
 240:../../../platform/common/services/clock/sam4l/osc.h **** #endif
 241:../../../platform/common/services/clock/sam4l/osc.h **** 
 242:../../../platform/common/services/clock/sam4l/osc.h **** /**
 243:../../../platform/common/services/clock/sam4l/osc.h ****  * \name Board-specific configuration parameters
 244:../../../platform/common/services/clock/sam4l/osc.h ****  * The following definitions must be provided by the board code for all
 245:../../../platform/common/services/clock/sam4l/osc.h ****  * working oscillators on the board.
 246:../../../platform/common/services/clock/sam4l/osc.h ****  */
 247:../../../platform/common/services/clock/sam4l/osc.h **** //@{
 248:../../../platform/common/services/clock/sam4l/osc.h **** /**
 249:../../../platform/common/services/clock/sam4l/osc.h ****  * \def BOARD_OSC0_HZ
 250:../../../platform/common/services/clock/sam4l/osc.h ****  * \brief Clock frequency of OSC0 in Hz
 251:../../../platform/common/services/clock/sam4l/osc.h ****  */
 252:../../../platform/common/services/clock/sam4l/osc.h **** /**
 253:../../../platform/common/services/clock/sam4l/osc.h ****  * \def BOARD_OSC0_STARTUP_US
 254:../../../platform/common/services/clock/sam4l/osc.h ****  * \brief Startup time of OSC0 in microseconds
 255:../../../platform/common/services/clock/sam4l/osc.h ****  */
 256:../../../platform/common/services/clock/sam4l/osc.h **** /**
 257:../../../platform/common/services/clock/sam4l/osc.h ****  * \def BOARD_OSC0_IS_XTAL
 258:../../../platform/common/services/clock/sam4l/osc.h ****  * \brief OSC0 uses a crystal, not an external clock
 259:../../../platform/common/services/clock/sam4l/osc.h ****  */
 260:../../../platform/common/services/clock/sam4l/osc.h **** /**
 261:../../../platform/common/services/clock/sam4l/osc.h ****  * \def BOARD_OSC32_HZ
 262:../../../platform/common/services/clock/sam4l/osc.h ****  * \brief Clock frequency of OSC32 in Hz
 263:../../../platform/common/services/clock/sam4l/osc.h ****  */
 264:../../../platform/common/services/clock/sam4l/osc.h **** /**
 265:../../../platform/common/services/clock/sam4l/osc.h ****  * \def BOARD_OSC32_STARTUP_US
 266:../../../platform/common/services/clock/sam4l/osc.h ****  * \brief Startup time of OSC32 in microseconds
 267:../../../platform/common/services/clock/sam4l/osc.h ****  */
 268:../../../platform/common/services/clock/sam4l/osc.h **** /**
 269:../../../platform/common/services/clock/sam4l/osc.h ****  * \def BOARD_OSC32_IS_XTAL
 270:../../../platform/common/services/clock/sam4l/osc.h ****  * \brief OSC32 uses a crystal, not an external clock
 271:../../../platform/common/services/clock/sam4l/osc.h ****  */
 272:../../../platform/common/services/clock/sam4l/osc.h **** /**
 273:../../../platform/common/services/clock/sam4l/osc.h ****  * \def BOARD_OSC32_SELCURR
 274:../../../platform/common/services/clock/sam4l/osc.h ****  * \brief Crystal current selection for OSC32
 275:../../../platform/common/services/clock/sam4l/osc.h ****  *
 276:../../../platform/common/services/clock/sam4l/osc.h ****  * If not defined, the recommended value (300nA) are used.
 277:../../../platform/common/services/clock/sam4l/osc.h ****  */
 278:../../../platform/common/services/clock/sam4l/osc.h **** #ifndef BOARD_OSC32_SELCURR
 279:../../../platform/common/services/clock/sam4l/osc.h **** #   define BOARD_OSC32_SELCURR     BSCIF_OSCCTRL32_SELCURR(10)
 280:../../../platform/common/services/clock/sam4l/osc.h **** #endif
 281:../../../platform/common/services/clock/sam4l/osc.h **** 
 282:../../../platform/common/services/clock/sam4l/osc.h **** /**
 283:../../../platform/common/services/clock/sam4l/osc.h ****  * \name RC oscillator frequency limits
 284:../../../platform/common/services/clock/sam4l/osc.h ****  * The frequency of the internal RC oscillators may drift a bit as a
 285:../../../platform/common/services/clock/sam4l/osc.h ****  * result of temperature changes. These definitions provide upper and
 286:../../../platform/common/services/clock/sam4l/osc.h ****  * lower limits which may be used to calculate upper and lower limits of
 287:../../../platform/common/services/clock/sam4l/osc.h ****  * timeouts, derived clock frequencies, etc.
 288:../../../platform/common/services/clock/sam4l/osc.h ****  */
 289:../../../platform/common/services/clock/sam4l/osc.h **** //@{
 290:../../../platform/common/services/clock/sam4l/osc.h **** //! Nominal frequency of RCSYS in Hz
 291:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_RCSYS_NOMINAL_HZ    115000
 292:../../../platform/common/services/clock/sam4l/osc.h **** //! Minimum frequency of RCSYS in Hz
 293:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_RCSYS_MIN_HZ        100000
 294:../../../platform/common/services/clock/sam4l/osc.h **** //! Maximum frequency of RCSYS in Hz
 295:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_RCSYS_MAX_HZ        120000
 296:../../../platform/common/services/clock/sam4l/osc.h **** 
 297:../../../platform/common/services/clock/sam4l/osc.h **** //! Nominal frequency of RC32K in Hz
 298:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_RC32K_NOMINAL_HZ    32768
 299:../../../platform/common/services/clock/sam4l/osc.h **** //! Minimum frequency of RC32K in Hz
 300:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_RC32K_MIN_HZ        20000
 301:../../../platform/common/services/clock/sam4l/osc.h **** //! Maximum frequency of RC32K in Hz
 302:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_RC32K_MAX_HZ        44000
 303:../../../platform/common/services/clock/sam4l/osc.h **** 
 304:../../../platform/common/services/clock/sam4l/osc.h **** //! Nominal frequency of RC80M in Hz
 305:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_RC80M_NOMINAL_HZ    80000000
 306:../../../platform/common/services/clock/sam4l/osc.h **** 
 307:../../../platform/common/services/clock/sam4l/osc.h **** //! Nominal frequency of RCFAST4M in Hz
 308:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_RCFAST4M_NOMINAL_HZ 4000000
 309:../../../platform/common/services/clock/sam4l/osc.h **** 
 310:../../../platform/common/services/clock/sam4l/osc.h **** //! Nominal frequency of RCFAST8M in Hz
 311:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_RCFAST8M_NOMINAL_HZ 8000000
 312:../../../platform/common/services/clock/sam4l/osc.h **** 
 313:../../../platform/common/services/clock/sam4l/osc.h **** //! Nominal frequency of RCFAST12M in Hz
 314:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_RCFAST12M_NOMINAL_HZ 12000000
 315:../../../platform/common/services/clock/sam4l/osc.h **** 
 316:../../../platform/common/services/clock/sam4l/osc.h **** //! Nominal frequency of RC1M in Hz
 317:../../../platform/common/services/clock/sam4l/osc.h **** #define OSC_RC1M_NOMINAL_HZ     1000000
 318:../../../platform/common/services/clock/sam4l/osc.h **** //@}
 319:../../../platform/common/services/clock/sam4l/osc.h **** 
 320:../../../platform/common/services/clock/sam4l/osc.h **** #ifndef __ASSEMBLY__
 321:../../../platform/common/services/clock/sam4l/osc.h **** 
 322:../../../platform/common/services/clock/sam4l/osc.h **** #include <compiler.h>
 323:../../../platform/common/services/clock/sam4l/osc.h **** 
 324:../../../platform/common/services/clock/sam4l/osc.h **** extern void osc_priv_enable_osc0(void);
 325:../../../platform/common/services/clock/sam4l/osc.h **** extern void osc_priv_disable_osc0(void);
 326:../../../platform/common/services/clock/sam4l/osc.h **** extern void osc_priv_enable_osc32(void);
 327:../../../platform/common/services/clock/sam4l/osc.h **** extern void osc_priv_disable_osc32(void);
 328:../../../platform/common/services/clock/sam4l/osc.h **** extern void osc_priv_enable_rc32k(void);
 329:../../../platform/common/services/clock/sam4l/osc.h **** extern void osc_priv_disable_rc32k(void);
 330:../../../platform/common/services/clock/sam4l/osc.h **** extern void osc_priv_enable_rc80m(void);
 331:../../../platform/common/services/clock/sam4l/osc.h **** extern void osc_priv_disable_rc80m(void);
 332:../../../platform/common/services/clock/sam4l/osc.h **** extern void osc_priv_enable_rcfast(void);
 333:../../../platform/common/services/clock/sam4l/osc.h **** extern void osc_priv_disable_rcfast(void);
 334:../../../platform/common/services/clock/sam4l/osc.h **** extern void osc_priv_enable_rc1m(void);
 335:../../../platform/common/services/clock/sam4l/osc.h **** extern void osc_priv_disable_rc1m(void);
 336:../../../platform/common/services/clock/sam4l/osc.h **** 
 337:../../../platform/common/services/clock/sam4l/osc.h **** static inline void osc_enable(uint8_t id)
 338:../../../platform/common/services/clock/sam4l/osc.h **** {
 262              	 .loc 4 338 0
 263              	 .cfi_startproc
 264              	 
 265              	 
 266 0084 80B5     	 push {r7,lr}
 267              	.LCFI17:
 268              	 .cfi_def_cfa_offset 8
 269              	 .cfi_offset 7,-8
 270              	 .cfi_offset 14,-4
 271 0086 82B0     	 sub sp,sp,#8
 272              	.LCFI18:
 273              	 .cfi_def_cfa_offset 16
 274 0088 00AF     	 add r7,sp,#0
 275              	.LCFI19:
 276              	 .cfi_def_cfa_register 7
 277 008a 0346     	 mov r3,r0
 278 008c FB71     	 strb r3,[r7,#7]
 339:../../../platform/common/services/clock/sam4l/osc.h **** 	switch (id) {
 279              	 .loc 4 339 0
 280 008e FB79     	 ldrb r3,[r7,#7]
 281 0090 062B     	 cmp r3,#6
 282 0092 23D8     	 bhi .L24
 283 0094 01A2     	 adr r2,.L16
 284 0096 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 285 009a 00BF     	 .p2align 2
 286              	.L16:
 287 009c B9000000 	 .word .L15+1
 288 00a0 BF000000 	 .word .L17+1
 289 00a4 C5000000 	 .word .L18+1
 290 00a8 CB000000 	 .word .L19+1
 291 00ac D1000000 	 .word .L20+1
 292 00b0 D7000000 	 .word .L21+1
 293 00b4 DD000000 	 .word .L24+1
 294              	 .p2align 1
 295              	.L15:
 340:../../../platform/common/services/clock/sam4l/osc.h **** #ifdef BOARD_OSC0_HZ
 341:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_OSC0:
 342:../../../platform/common/services/clock/sam4l/osc.h **** 		osc_priv_enable_osc0();
 296              	 .loc 4 342 0
 297 00b8 0B4B     	 ldr r3,.L25
 298 00ba 9847     	 blx r3
 299              	.LVL0:
 343:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 300              	 .loc 4 343 0
 301 00bc 0FE0     	 b .L23
 302              	.L17:
 344:../../../platform/common/services/clock/sam4l/osc.h **** #endif
 345:../../../platform/common/services/clock/sam4l/osc.h **** 
 346:../../../platform/common/services/clock/sam4l/osc.h **** #ifdef BOARD_OSC32_HZ
 347:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_OSC32:
 348:../../../platform/common/services/clock/sam4l/osc.h **** 		osc_priv_enable_osc32();
 303              	 .loc 4 348 0
 304 00be 0B4B     	 ldr r3,.L25+4
 305 00c0 9847     	 blx r3
 306              	.LVL1:
 349:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 307              	 .loc 4 349 0
 308 00c2 0CE0     	 b .L23
 309              	.L18:
 350:../../../platform/common/services/clock/sam4l/osc.h **** #endif
 351:../../../platform/common/services/clock/sam4l/osc.h **** 
 352:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RC32K:
 353:../../../platform/common/services/clock/sam4l/osc.h **** 		osc_priv_enable_rc32k();
 310              	 .loc 4 353 0
 311 00c4 0A4B     	 ldr r3,.L25+8
 312 00c6 9847     	 blx r3
 313              	.LVL2:
 354:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 314              	 .loc 4 354 0
 315 00c8 09E0     	 b .L23
 316              	.L19:
 355:../../../platform/common/services/clock/sam4l/osc.h **** 
 356:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RC80M:
 357:../../../platform/common/services/clock/sam4l/osc.h **** 		osc_priv_enable_rc80m();
 317              	 .loc 4 357 0
 318 00ca 0A4B     	 ldr r3,.L25+12
 319 00cc 9847     	 blx r3
 320              	.LVL3:
 358:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 321              	 .loc 4 358 0
 322 00ce 06E0     	 b .L23
 323              	.L20:
 359:../../../platform/common/services/clock/sam4l/osc.h **** 
 360:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RCFAST:
 361:../../../platform/common/services/clock/sam4l/osc.h **** 		osc_priv_enable_rcfast();
 324              	 .loc 4 361 0
 325 00d0 094B     	 ldr r3,.L25+16
 326 00d2 9847     	 blx r3
 327              	.LVL4:
 362:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 328              	 .loc 4 362 0
 329 00d4 03E0     	 b .L23
 330              	.L21:
 363:../../../platform/common/services/clock/sam4l/osc.h **** 
 364:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RC1M:
 365:../../../platform/common/services/clock/sam4l/osc.h **** 		osc_priv_enable_rc1m();
 331              	 .loc 4 365 0
 332 00d6 094B     	 ldr r3,.L25+20
 333 00d8 9847     	 blx r3
 334              	.LVL5:
 366:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 335              	 .loc 4 366 0
 336 00da 00E0     	 b .L23
 337              	.L24:
 367:../../../platform/common/services/clock/sam4l/osc.h **** 
 368:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RCSYS:
 369:../../../platform/common/services/clock/sam4l/osc.h **** 		/* RCSYS is always running */
 370:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 371:../../../platform/common/services/clock/sam4l/osc.h **** 
 372:../../../platform/common/services/clock/sam4l/osc.h **** 	default:
 373:../../../platform/common/services/clock/sam4l/osc.h **** 		/* unhandled_case(id); */
 374:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 338              	 .loc 4 374 0
 339 00dc 00BF     	 nop
 340              	.L23:
 375:../../../platform/common/services/clock/sam4l/osc.h **** 	}
 376:../../../platform/common/services/clock/sam4l/osc.h **** }
 341              	 .loc 4 376 0
 342 00de 00BF     	 nop
 343 00e0 0837     	 adds r7,r7,#8
 344              	.LCFI20:
 345              	 .cfi_def_cfa_offset 8
 346 00e2 BD46     	 mov sp,r7
 347              	.LCFI21:
 348              	 .cfi_def_cfa_register 13
 349              	 
 350 00e4 80BD     	 pop {r7,pc}
 351              	.L26:
 352 00e6 00BF     	 .align 2
 353              	.L25:
 354 00e8 00000000 	 .word osc_priv_enable_osc0
 355 00ec 00000000 	 .word osc_priv_enable_osc32
 356 00f0 00000000 	 .word osc_priv_enable_rc32k
 357 00f4 00000000 	 .word osc_priv_enable_rc80m
 358 00f8 00000000 	 .word osc_priv_enable_rcfast
 359 00fc 00000000 	 .word osc_priv_enable_rc1m
 360              	 .cfi_endproc
 361              	.LFE126:
 363              	 .align 1
 364              	 .syntax unified
 365              	 .thumb
 366              	 .thumb_func
 367              	 .fpu softvfp
 369              	osc_is_ready:
 370              	.LFB128:
 377:../../../platform/common/services/clock/sam4l/osc.h **** 
 378:../../../platform/common/services/clock/sam4l/osc.h **** static inline void osc_disable(uint8_t id)
 379:../../../platform/common/services/clock/sam4l/osc.h **** {
 380:../../../platform/common/services/clock/sam4l/osc.h **** 	switch (id) {
 381:../../../platform/common/services/clock/sam4l/osc.h **** #ifdef BOARD_OSC0_HZ
 382:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_OSC0:
 383:../../../platform/common/services/clock/sam4l/osc.h **** 		osc_priv_disable_osc0();
 384:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 385:../../../platform/common/services/clock/sam4l/osc.h **** #endif
 386:../../../platform/common/services/clock/sam4l/osc.h **** 
 387:../../../platform/common/services/clock/sam4l/osc.h **** #ifdef BOARD_OSC32_HZ
 388:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_OSC32:
 389:../../../platform/common/services/clock/sam4l/osc.h **** 		osc_priv_disable_osc32();
 390:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 391:../../../platform/common/services/clock/sam4l/osc.h **** #endif
 392:../../../platform/common/services/clock/sam4l/osc.h **** 
 393:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RC32K:
 394:../../../platform/common/services/clock/sam4l/osc.h **** 		osc_priv_disable_rc32k();
 395:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 396:../../../platform/common/services/clock/sam4l/osc.h **** 
 397:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RC80M:
 398:../../../platform/common/services/clock/sam4l/osc.h **** 		osc_priv_disable_rc80m();
 399:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 400:../../../platform/common/services/clock/sam4l/osc.h **** 
 401:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RCFAST:
 402:../../../platform/common/services/clock/sam4l/osc.h **** 		osc_priv_disable_rcfast();
 403:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 404:../../../platform/common/services/clock/sam4l/osc.h **** 
 405:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RC1M:
 406:../../../platform/common/services/clock/sam4l/osc.h **** 		osc_priv_disable_rc1m();
 407:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 408:../../../platform/common/services/clock/sam4l/osc.h **** 
 409:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RCSYS:
 410:../../../platform/common/services/clock/sam4l/osc.h **** 		/* RCSYS is always running */
 411:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 412:../../../platform/common/services/clock/sam4l/osc.h **** 
 413:../../../platform/common/services/clock/sam4l/osc.h **** 	default:
 414:../../../platform/common/services/clock/sam4l/osc.h **** 		/* unhandled_case(id); */
 415:../../../platform/common/services/clock/sam4l/osc.h **** 		break;
 416:../../../platform/common/services/clock/sam4l/osc.h **** 	}
 417:../../../platform/common/services/clock/sam4l/osc.h **** }
 418:../../../platform/common/services/clock/sam4l/osc.h **** 
 419:../../../platform/common/services/clock/sam4l/osc.h **** static inline bool osc_is_ready(uint8_t id)
 420:../../../platform/common/services/clock/sam4l/osc.h **** {
 371              	 .loc 4 420 0
 372              	 .cfi_startproc
 373              	 
 374              	 
 375              	 
 376 0100 80B4     	 push {r7}
 377              	.LCFI22:
 378              	 .cfi_def_cfa_offset 4
 379              	 .cfi_offset 7,-4
 380 0102 83B0     	 sub sp,sp,#12
 381              	.LCFI23:
 382              	 .cfi_def_cfa_offset 16
 383 0104 00AF     	 add r7,sp,#0
 384              	.LCFI24:
 385              	 .cfi_def_cfa_register 7
 386 0106 0346     	 mov r3,r0
 387 0108 FB71     	 strb r3,[r7,#7]
 421:../../../platform/common/services/clock/sam4l/osc.h **** 	switch (id) {
 388              	 .loc 4 421 0
 389 010a FB79     	 ldrb r3,[r7,#7]
 390 010c 062B     	 cmp r3,#6
 391 010e 4FD8     	 bhi .L28
 392 0110 01A2     	 adr r2,.L30
 393 0112 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 394 0116 00BF     	 .p2align 2
 395              	.L30:
 396 0118 35010000 	 .word .L29+1
 397 011c 49010000 	 .word .L31+1
 398 0120 5D010000 	 .word .L32+1
 399 0124 71010000 	 .word .L33+1
 400 0128 85010000 	 .word .L34+1
 401 012c 99010000 	 .word .L35+1
 402 0130 AD010000 	 .word .L36+1
 403              	 .p2align 1
 404              	.L29:
 422:../../../platform/common/services/clock/sam4l/osc.h **** #ifdef BOARD_OSC0_HZ
 423:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_OSC0:
 424:../../../platform/common/services/clock/sam4l/osc.h **** 		return !!(SCIF->SCIF_PCLKSR & SCIF_PCLKSR_OSC0RDY);
 405              	 .loc 4 424 0
 406 0134 214B     	 ldr r3,.L38
 407 0136 5B69     	 ldr r3,[r3,#20]
 408 0138 03F00103 	 and r3,r3,#1
 409 013c 002B     	 cmp r3,#0
 410 013e 14BF     	 ite ne
 411 0140 0123     	 movne r3,#1
 412 0142 0023     	 moveq r3,#0
 413 0144 DBB2     	 uxtb r3,r3
 414 0146 34E0     	 b .L37
 415              	.L31:
 425:../../../platform/common/services/clock/sam4l/osc.h **** #endif
 426:../../../platform/common/services/clock/sam4l/osc.h **** 
 427:../../../platform/common/services/clock/sam4l/osc.h **** #ifdef BOARD_OSC32_HZ
 428:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_OSC32:
 429:../../../platform/common/services/clock/sam4l/osc.h **** 		return !!(BSCIF->BSCIF_PCLKSR & BSCIF_PCLKSR_OSC32RDY);
 416              	 .loc 4 429 0
 417 0148 1D4B     	 ldr r3,.L38+4
 418 014a 5B69     	 ldr r3,[r3,#20]
 419 014c 03F00103 	 and r3,r3,#1
 420 0150 002B     	 cmp r3,#0
 421 0152 14BF     	 ite ne
 422 0154 0123     	 movne r3,#1
 423 0156 0023     	 moveq r3,#0
 424 0158 DBB2     	 uxtb r3,r3
 425 015a 2AE0     	 b .L37
 426              	.L32:
 430:../../../platform/common/services/clock/sam4l/osc.h **** #endif
 431:../../../platform/common/services/clock/sam4l/osc.h **** 
 432:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RC32K:
 433:../../../platform/common/services/clock/sam4l/osc.h **** 		return !!(BSCIF->BSCIF_RC32KCR & (BSCIF_RC32KCR_EN));
 427              	 .loc 4 433 0
 428 015c 184B     	 ldr r3,.L38+4
 429 015e 5B6A     	 ldr r3,[r3,#36]
 430 0160 03F00103 	 and r3,r3,#1
 431 0164 002B     	 cmp r3,#0
 432 0166 14BF     	 ite ne
 433 0168 0123     	 movne r3,#1
 434 016a 0023     	 moveq r3,#0
 435 016c DBB2     	 uxtb r3,r3
 436 016e 20E0     	 b .L37
 437              	.L33:
 434:../../../platform/common/services/clock/sam4l/osc.h **** 
 435:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RC80M:
 436:../../../platform/common/services/clock/sam4l/osc.h **** 		return !!(SCIF->SCIF_RC80MCR & (SCIF_RC80MCR_EN));
 438              	 .loc 4 436 0
 439 0170 124B     	 ldr r3,.L38
 440 0172 1B6D     	 ldr r3,[r3,#80]
 441 0174 03F00103 	 and r3,r3,#1
 442 0178 002B     	 cmp r3,#0
 443 017a 14BF     	 ite ne
 444 017c 0123     	 movne r3,#1
 445 017e 0023     	 moveq r3,#0
 446 0180 DBB2     	 uxtb r3,r3
 447 0182 16E0     	 b .L37
 448              	.L34:
 437:../../../platform/common/services/clock/sam4l/osc.h **** 
 438:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RCFAST:
 439:../../../platform/common/services/clock/sam4l/osc.h **** 		return !!(SCIF->SCIF_RCFASTCFG & (SCIF_RCFASTCFG_EN));
 449              	 .loc 4 439 0
 450 0184 0D4B     	 ldr r3,.L38
 451 0186 9B6C     	 ldr r3,[r3,#72]
 452 0188 03F00103 	 and r3,r3,#1
 453 018c 002B     	 cmp r3,#0
 454 018e 14BF     	 ite ne
 455 0190 0123     	 movne r3,#1
 456 0192 0023     	 moveq r3,#0
 457 0194 DBB2     	 uxtb r3,r3
 458 0196 0CE0     	 b .L37
 459              	.L35:
 440:../../../platform/common/services/clock/sam4l/osc.h **** 
 441:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RC1M:
 442:../../../platform/common/services/clock/sam4l/osc.h **** 		return !!(BSCIF->BSCIF_RC1MCR & (BSCIF_RC1MCR_CLKOE));
 460              	 .loc 4 442 0
 461 0198 094B     	 ldr r3,.L38+4
 462 019a 9B6D     	 ldr r3,[r3,#88]
 463 019c 03F00103 	 and r3,r3,#1
 464 01a0 002B     	 cmp r3,#0
 465 01a2 14BF     	 ite ne
 466 01a4 0123     	 movne r3,#1
 467 01a6 0023     	 moveq r3,#0
 468 01a8 DBB2     	 uxtb r3,r3
 469 01aa 02E0     	 b .L37
 470              	.L36:
 443:../../../platform/common/services/clock/sam4l/osc.h **** 
 444:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RCSYS:
 445:../../../platform/common/services/clock/sam4l/osc.h **** 		/* RCSYS is always ready */
 446:../../../platform/common/services/clock/sam4l/osc.h **** 		return true;
 471              	 .loc 4 446 0
 472 01ac 0123     	 movs r3,#1
 473 01ae 00E0     	 b .L37
 474              	.L28:
 447:../../../platform/common/services/clock/sam4l/osc.h **** 
 448:../../../platform/common/services/clock/sam4l/osc.h **** 	default:
 449:../../../platform/common/services/clock/sam4l/osc.h **** 		/* unhandled_case(id); */
 450:../../../platform/common/services/clock/sam4l/osc.h **** 		return false;
 475              	 .loc 4 450 0
 476 01b0 0023     	 movs r3,#0
 477              	.L37:
 451:../../../platform/common/services/clock/sam4l/osc.h **** 	}
 452:../../../platform/common/services/clock/sam4l/osc.h **** }
 478              	 .loc 4 452 0
 479 01b2 1846     	 mov r0,r3
 480 01b4 0C37     	 adds r7,r7,#12
 481              	.LCFI25:
 482              	 .cfi_def_cfa_offset 4
 483 01b6 BD46     	 mov sp,r7
 484              	.LCFI26:
 485              	 .cfi_def_cfa_register 13
 486              	 
 487 01b8 80BC     	 pop {r7}
 488              	.LCFI27:
 489              	 .cfi_restore 7
 490              	 .cfi_def_cfa_offset 0
 491 01ba 7047     	 bx lr
 492              	.L39:
 493              	 .align 2
 494              	.L38:
 495 01bc 00080E40 	 .word 1074661376
 496 01c0 00040F40 	 .word 1074725888
 497              	 .cfi_endproc
 498              	.LFE128:
 500              	 .align 1
 501              	 .syntax unified
 502              	 .thumb
 503              	 .thumb_func
 504              	 .fpu softvfp
 506              	osc_get_rate:
 507              	.LFB129:
 453:../../../platform/common/services/clock/sam4l/osc.h **** 
 454:../../../platform/common/services/clock/sam4l/osc.h **** static inline uint32_t osc_get_rate(uint8_t id)
 455:../../../platform/common/services/clock/sam4l/osc.h **** {
 508              	 .loc 4 455 0
 509              	 .cfi_startproc
 510              	 
 511              	 
 512              	 
 513 01c4 80B4     	 push {r7}
 514              	.LCFI28:
 515              	 .cfi_def_cfa_offset 4
 516              	 .cfi_offset 7,-4
 517 01c6 83B0     	 sub sp,sp,#12
 518              	.LCFI29:
 519              	 .cfi_def_cfa_offset 16
 520 01c8 00AF     	 add r7,sp,#0
 521              	.LCFI30:
 522              	 .cfi_def_cfa_register 7
 523 01ca 0346     	 mov r3,r0
 524 01cc FB71     	 strb r3,[r7,#7]
 456:../../../platform/common/services/clock/sam4l/osc.h **** 	switch (id) {
 525              	 .loc 4 456 0
 526 01ce FB79     	 ldrb r3,[r7,#7]
 527 01d0 062B     	 cmp r3,#6
 528 01d2 21D8     	 bhi .L41
 529 01d4 01A2     	 adr r2,.L43
 530 01d6 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 531 01da 00BF     	 .p2align 2
 532              	.L43:
 533 01dc F9010000 	 .word .L42+1
 534 01e0 FD010000 	 .word .L44+1
 535 01e4 03020000 	 .word .L45+1
 536 01e8 09020000 	 .word .L46+1
 537 01ec 0D020000 	 .word .L47+1
 538 01f0 11020000 	 .word .L48+1
 539 01f4 15020000 	 .word .L49+1
 540              	 .p2align 1
 541              	.L42:
 457:../../../platform/common/services/clock/sam4l/osc.h **** #ifdef BOARD_OSC0_HZ
 458:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_OSC0:
 459:../../../platform/common/services/clock/sam4l/osc.h **** 		return BOARD_OSC0_HZ;
 542              	 .loc 4 459 0
 543 01f8 0A4B     	 ldr r3,.L51
 544 01fa 0EE0     	 b .L50
 545              	.L44:
 460:../../../platform/common/services/clock/sam4l/osc.h **** #endif
 461:../../../platform/common/services/clock/sam4l/osc.h **** 
 462:../../../platform/common/services/clock/sam4l/osc.h **** #ifdef BOARD_OSC32_HZ
 463:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_OSC32:
 464:../../../platform/common/services/clock/sam4l/osc.h **** 		return BOARD_OSC32_HZ;
 546              	 .loc 4 464 0
 547 01fc 4FF40043 	 mov r3,#32768
 548 0200 0BE0     	 b .L50
 549              	.L45:
 465:../../../platform/common/services/clock/sam4l/osc.h **** #endif
 466:../../../platform/common/services/clock/sam4l/osc.h **** 
 467:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RC32K:
 468:../../../platform/common/services/clock/sam4l/osc.h **** 		return OSC_RC32K_NOMINAL_HZ;
 550              	 .loc 4 468 0
 551 0202 4FF40043 	 mov r3,#32768
 552 0206 08E0     	 b .L50
 553              	.L46:
 469:../../../platform/common/services/clock/sam4l/osc.h **** 
 470:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RC80M:
 471:../../../platform/common/services/clock/sam4l/osc.h **** 		return OSC_RC80M_NOMINAL_HZ;
 554              	 .loc 4 471 0
 555 0208 074B     	 ldr r3,.L51+4
 556 020a 06E0     	 b .L50
 557              	.L47:
 472:../../../platform/common/services/clock/sam4l/osc.h **** 
 473:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RCFAST:
 474:../../../platform/common/services/clock/sam4l/osc.h **** 		if (CONFIG_RCFAST_FRANGE == 2) {
 475:../../../platform/common/services/clock/sam4l/osc.h **** 			return OSC_RCFAST12M_NOMINAL_HZ;
 476:../../../platform/common/services/clock/sam4l/osc.h **** 
 477:../../../platform/common/services/clock/sam4l/osc.h **** 		} else if (CONFIG_RCFAST_FRANGE == 1) {
 478:../../../platform/common/services/clock/sam4l/osc.h **** 			return OSC_RCFAST8M_NOMINAL_HZ;
 479:../../../platform/common/services/clock/sam4l/osc.h **** 
 480:../../../platform/common/services/clock/sam4l/osc.h **** 		} else {
 481:../../../platform/common/services/clock/sam4l/osc.h **** 			return OSC_RCFAST4M_NOMINAL_HZ;
 558              	 .loc 4 481 0
 559 020c 074B     	 ldr r3,.L51+8
 560 020e 04E0     	 b .L50
 561              	.L48:
 482:../../../platform/common/services/clock/sam4l/osc.h **** 		}
 483:../../../platform/common/services/clock/sam4l/osc.h **** 
 484:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RC1M:
 485:../../../platform/common/services/clock/sam4l/osc.h **** 		return OSC_RC1M_NOMINAL_HZ;
 562              	 .loc 4 485 0
 563 0210 074B     	 ldr r3,.L51+12
 564 0212 02E0     	 b .L50
 565              	.L49:
 486:../../../platform/common/services/clock/sam4l/osc.h **** 
 487:../../../platform/common/services/clock/sam4l/osc.h **** 	case OSC_ID_RCSYS:
 488:../../../platform/common/services/clock/sam4l/osc.h **** 		return OSC_RCSYS_NOMINAL_HZ;
 566              	 .loc 4 488 0
 567 0214 074B     	 ldr r3,.L51+16
 568 0216 00E0     	 b .L50
 569              	.L41:
 489:../../../platform/common/services/clock/sam4l/osc.h **** 
 490:../../../platform/common/services/clock/sam4l/osc.h **** 	default:
 491:../../../platform/common/services/clock/sam4l/osc.h **** 		/* unhandled_case(id); */
 492:../../../platform/common/services/clock/sam4l/osc.h **** 		return 0;
 570              	 .loc 4 492 0
 571 0218 0023     	 movs r3,#0
 572              	.L50:
 493:../../../platform/common/services/clock/sam4l/osc.h **** 	}
 494:../../../platform/common/services/clock/sam4l/osc.h **** }
 573              	 .loc 4 494 0
 574 021a 1846     	 mov r0,r3
 575 021c 0C37     	 adds r7,r7,#12
 576              	.LCFI31:
 577              	 .cfi_def_cfa_offset 4
 578 021e BD46     	 mov sp,r7
 579              	.LCFI32:
 580              	 .cfi_def_cfa_register 13
 581              	 
 582 0220 80BC     	 pop {r7}
 583              	.LCFI33:
 584              	 .cfi_restore 7
 585              	 .cfi_def_cfa_offset 0
 586 0222 7047     	 bx lr
 587              	.L52:
 588              	 .align 2
 589              	.L51:
 590 0224 001BB700 	 .word 12000000
 591 0228 00B4C404 	 .word 80000000
 592 022c 00093D00 	 .word 4000000
 593 0230 40420F00 	 .word 1000000
 594 0234 38C10100 	 .word 115000
 595              	 .cfi_endproc
 596              	.LFE129:
 598              	 .align 1
 599              	 .syntax unified
 600              	 .thumb
 601              	 .thumb_func
 602              	 .fpu softvfp
 604              	osc_wait_ready:
 605              	.LFB130:
 606              	 .file 5 "../../../platform/common/services/clock/osc.h"
   1:../../../platform/common/services/clock/osc.h **** /**
   2:../../../platform/common/services/clock/osc.h ****  * \file
   3:../../../platform/common/services/clock/osc.h ****  *
   4:../../../platform/common/services/clock/osc.h ****  * \brief Oscillator management
   5:../../../platform/common/services/clock/osc.h ****  *
   6:../../../platform/common/services/clock/osc.h ****  * Copyright (c) 2010-2014 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/osc.h ****  *
   8:../../../platform/common/services/clock/osc.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/osc.h ****  *
  10:../../../platform/common/services/clock/osc.h ****  * \page License
  11:../../../platform/common/services/clock/osc.h ****  *
  12:../../../platform/common/services/clock/osc.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/osc.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/osc.h ****  *
  15:../../../platform/common/services/clock/osc.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/osc.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/osc.h ****  *
  18:../../../platform/common/services/clock/osc.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/osc.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/osc.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/osc.h ****  *
  22:../../../platform/common/services/clock/osc.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/osc.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/osc.h ****  *
  25:../../../platform/common/services/clock/osc.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/osc.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/osc.h ****  *
  28:../../../platform/common/services/clock/osc.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/osc.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/osc.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/osc.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/osc.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/osc.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/osc.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/osc.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/osc.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/osc.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/osc.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/osc.h ****  *
  40:../../../platform/common/services/clock/osc.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/osc.h ****  *
  42:../../../platform/common/services/clock/osc.h ****  */
  43:../../../platform/common/services/clock/osc.h **** #ifndef OSC_H_INCLUDED
  44:../../../platform/common/services/clock/osc.h **** #define OSC_H_INCLUDED
  45:../../../platform/common/services/clock/osc.h **** 
  46:../../../platform/common/services/clock/osc.h **** #include "parts.h"
  47:../../../platform/common/services/clock/osc.h **** #include "conf_clock.h"
  48:../../../platform/common/services/clock/osc.h **** 
  49:../../../platform/common/services/clock/osc.h **** #if SAM3S
  50:../../../platform/common/services/clock/osc.h **** # include "sam3s/osc.h"
  51:../../../platform/common/services/clock/osc.h **** #elif SAM3XA
  52:../../../platform/common/services/clock/osc.h **** # include "sam3x/osc.h"
  53:../../../platform/common/services/clock/osc.h **** #elif SAM3U
  54:../../../platform/common/services/clock/osc.h **** # include "sam3u/osc.h"
  55:../../../platform/common/services/clock/osc.h **** #elif SAM3N
  56:../../../platform/common/services/clock/osc.h **** # include "sam3n/osc.h"
  57:../../../platform/common/services/clock/osc.h **** #elif SAM4S
  58:../../../platform/common/services/clock/osc.h **** # include "sam4s/osc.h"
  59:../../../platform/common/services/clock/osc.h **** #elif SAM4E
  60:../../../platform/common/services/clock/osc.h **** # include "sam4e/osc.h"
  61:../../../platform/common/services/clock/osc.h **** #elif SAM4C
  62:../../../platform/common/services/clock/osc.h **** # include "sam4c/osc.h"
  63:../../../platform/common/services/clock/osc.h **** #elif SAM4CM
  64:../../../platform/common/services/clock/osc.h **** # include "sam4cm/osc.h"
  65:../../../platform/common/services/clock/osc.h **** #elif SAM4CP
  66:../../../platform/common/services/clock/osc.h **** # include "sam4cp/osc.h"
  67:../../../platform/common/services/clock/osc.h **** #elif SAM4L
  68:../../../platform/common/services/clock/osc.h **** # include "sam4l/osc.h"
  69:../../../platform/common/services/clock/osc.h **** #elif SAM4N
  70:../../../platform/common/services/clock/osc.h **** # include "sam4n/osc.h"
  71:../../../platform/common/services/clock/osc.h **** #elif SAMG
  72:../../../platform/common/services/clock/osc.h **** # include "samg/osc.h"
  73:../../../platform/common/services/clock/osc.h **** #elif (UC3A0 || UC3A1)
  74:../../../platform/common/services/clock/osc.h **** # include "uc3a0_a1/osc.h"
  75:../../../platform/common/services/clock/osc.h **** #elif UC3A3
  76:../../../platform/common/services/clock/osc.h **** # include "uc3a3_a4/osc.h"
  77:../../../platform/common/services/clock/osc.h **** #elif UC3B
  78:../../../platform/common/services/clock/osc.h **** # include "uc3b0_b1/osc.h"
  79:../../../platform/common/services/clock/osc.h **** #elif UC3C
  80:../../../platform/common/services/clock/osc.h **** # include "uc3c/osc.h"
  81:../../../platform/common/services/clock/osc.h **** #elif UC3D
  82:../../../platform/common/services/clock/osc.h **** # include "uc3d/osc.h"
  83:../../../platform/common/services/clock/osc.h **** #elif UC3L
  84:../../../platform/common/services/clock/osc.h **** # include "uc3l/osc.h"
  85:../../../platform/common/services/clock/osc.h **** #elif XMEGA
  86:../../../platform/common/services/clock/osc.h **** # include "xmega/osc.h"
  87:../../../platform/common/services/clock/osc.h **** #else
  88:../../../platform/common/services/clock/osc.h **** # error Unsupported chip type
  89:../../../platform/common/services/clock/osc.h **** #endif
  90:../../../platform/common/services/clock/osc.h **** 
  91:../../../platform/common/services/clock/osc.h **** /**
  92:../../../platform/common/services/clock/osc.h ****  * \ingroup clk_group
  93:../../../platform/common/services/clock/osc.h ****  * \defgroup osc_group Oscillator Management
  94:../../../platform/common/services/clock/osc.h ****  *
  95:../../../platform/common/services/clock/osc.h ****  * This group contains functions and definitions related to configuring
  96:../../../platform/common/services/clock/osc.h ****  * and enabling/disabling on-chip oscillators. Internal RC-oscillators,
  97:../../../platform/common/services/clock/osc.h ****  * external crystal oscillators and external clock generators are
  98:../../../platform/common/services/clock/osc.h ****  * supported by this module. What all of these have in common is that
  99:../../../platform/common/services/clock/osc.h ****  * they swing at a fixed, nominal frequency which is normally not
 100:../../../platform/common/services/clock/osc.h ****  * adjustable.
 101:../../../platform/common/services/clock/osc.h ****  *
 102:../../../platform/common/services/clock/osc.h ****  * \par Example: Enabling an oscillator
 103:../../../platform/common/services/clock/osc.h ****  *
 104:../../../platform/common/services/clock/osc.h ****  * The following example demonstrates how to enable the external
 105:../../../platform/common/services/clock/osc.h ****  * oscillator on XMEGA A and wait for it to be ready to use. The
 106:../../../platform/common/services/clock/osc.h ****  * oscillator identifiers are platform-specific, so while the same
 107:../../../platform/common/services/clock/osc.h ****  * procedure is used on all platforms, the parameter to osc_enable()
 108:../../../platform/common/services/clock/osc.h ****  * will be different from device to device.
 109:../../../platform/common/services/clock/osc.h ****  * \code
 110:../../../platform/common/services/clock/osc.h **** 	osc_enable(OSC_ID_XOSC);
 111:../../../platform/common/services/clock/osc.h **** 	osc_wait_ready(OSC_ID_XOSC); \endcode
 112:../../../platform/common/services/clock/osc.h ****  *
 113:../../../platform/common/services/clock/osc.h ****  * \section osc_group_board Board-specific Definitions
 114:../../../platform/common/services/clock/osc.h ****  * If external oscillators are used, the board code must provide the
 115:../../../platform/common/services/clock/osc.h ****  * following definitions for each of those:
 116:../../../platform/common/services/clock/osc.h ****  *   - \b BOARD_<osc name>_HZ: The nominal frequency of the oscillator.
 117:../../../platform/common/services/clock/osc.h ****  *   - \b BOARD_<osc name>_STARTUP_US: The startup time of the
 118:../../../platform/common/services/clock/osc.h ****  *     oscillator in microseconds.
 119:../../../platform/common/services/clock/osc.h ****  *   - \b BOARD_<osc name>_TYPE: The type of oscillator connected, i.e.
 120:../../../platform/common/services/clock/osc.h ****  *     whether it's a crystal or external clock, and sometimes what kind
 121:../../../platform/common/services/clock/osc.h ****  *     of crystal it is. The meaning of this value is platform-specific.
 122:../../../platform/common/services/clock/osc.h ****  *
 123:../../../platform/common/services/clock/osc.h ****  * @{
 124:../../../platform/common/services/clock/osc.h ****  */
 125:../../../platform/common/services/clock/osc.h **** 
 126:../../../platform/common/services/clock/osc.h **** //! \name Oscillator Management
 127:../../../platform/common/services/clock/osc.h **** //@{
 128:../../../platform/common/services/clock/osc.h **** /**
 129:../../../platform/common/services/clock/osc.h ****  * \fn void osc_enable(uint8_t id)
 130:../../../platform/common/services/clock/osc.h ****  * \brief Enable oscillator \a id
 131:../../../platform/common/services/clock/osc.h ****  *
 132:../../../platform/common/services/clock/osc.h ****  * The startup time and mode value is automatically determined based on
 133:../../../platform/common/services/clock/osc.h ****  * definitions in the board code.
 134:../../../platform/common/services/clock/osc.h ****  */
 135:../../../platform/common/services/clock/osc.h **** /**
 136:../../../platform/common/services/clock/osc.h ****  * \fn void osc_disable(uint8_t id)
 137:../../../platform/common/services/clock/osc.h ****  * \brief Disable oscillator \a id
 138:../../../platform/common/services/clock/osc.h ****  */
 139:../../../platform/common/services/clock/osc.h **** /**
 140:../../../platform/common/services/clock/osc.h ****  * \fn osc_is_ready(uint8_t id)
 141:../../../platform/common/services/clock/osc.h ****  * \brief Determine whether oscillator \a id is ready.
 142:../../../platform/common/services/clock/osc.h ****  * \retval true Oscillator \a id is running and ready to use as a clock
 143:../../../platform/common/services/clock/osc.h ****  * source.
 144:../../../platform/common/services/clock/osc.h ****  * \retval false Oscillator \a id is not running.
 145:../../../platform/common/services/clock/osc.h ****  */
 146:../../../platform/common/services/clock/osc.h **** /**
 147:../../../platform/common/services/clock/osc.h ****  * \fn uint32_t osc_get_rate(uint8_t id)
 148:../../../platform/common/services/clock/osc.h ****  * \brief Return the frequency of oscillator \a id in Hz
 149:../../../platform/common/services/clock/osc.h ****  */
 150:../../../platform/common/services/clock/osc.h **** 
 151:../../../platform/common/services/clock/osc.h **** #ifndef __ASSEMBLY__
 152:../../../platform/common/services/clock/osc.h **** 
 153:../../../platform/common/services/clock/osc.h **** /**
 154:../../../platform/common/services/clock/osc.h ****  * \brief Wait until the oscillator identified by \a id is ready
 155:../../../platform/common/services/clock/osc.h ****  *
 156:../../../platform/common/services/clock/osc.h ****  * This function will busy-wait for the oscillator identified by \a id
 157:../../../platform/common/services/clock/osc.h ****  * to become stable and ready to use as a clock source.
 158:../../../platform/common/services/clock/osc.h ****  *
 159:../../../platform/common/services/clock/osc.h ****  * \param id A number identifying the oscillator to wait for.
 160:../../../platform/common/services/clock/osc.h ****  */
 161:../../../platform/common/services/clock/osc.h **** static inline void osc_wait_ready(uint8_t id)
 162:../../../platform/common/services/clock/osc.h **** {
 607              	 .loc 5 162 0
 608              	 .cfi_startproc
 609              	 
 610              	 
 611 0238 80B5     	 push {r7,lr}
 612              	.LCFI34:
 613              	 .cfi_def_cfa_offset 8
 614              	 .cfi_offset 7,-8
 615              	 .cfi_offset 14,-4
 616 023a 82B0     	 sub sp,sp,#8
 617              	.LCFI35:
 618              	 .cfi_def_cfa_offset 16
 619 023c 00AF     	 add r7,sp,#0
 620              	.LCFI36:
 621              	 .cfi_def_cfa_register 7
 622 023e 0346     	 mov r3,r0
 623 0240 FB71     	 strb r3,[r7,#7]
 163:../../../platform/common/services/clock/osc.h **** 	while (!osc_is_ready(id)) {
 624              	 .loc 5 163 0
 625 0242 00BF     	 nop
 626              	.L54:
 627              	 .loc 5 163 0 is_stmt 0 discriminator 1
 628 0244 FB79     	 ldrb r3,[r7,#7]
 629 0246 1846     	 mov r0,r3
 630 0248 FFF75AFF 	 bl osc_is_ready
 631 024c 0346     	 mov r3,r0
 632 024e 83F00103 	 eor r3,r3,#1
 633 0252 DBB2     	 uxtb r3,r3
 634 0254 002B     	 cmp r3,#0
 635 0256 F5D1     	 bne .L54
 164:../../../platform/common/services/clock/osc.h **** 		/* Do nothing */
 165:../../../platform/common/services/clock/osc.h **** 	}
 166:../../../platform/common/services/clock/osc.h **** }
 636              	 .loc 5 166 0 is_stmt 1
 637 0258 00BF     	 nop
 638 025a 0837     	 adds r7,r7,#8
 639              	.LCFI37:
 640              	 .cfi_def_cfa_offset 8
 641 025c BD46     	 mov sp,r7
 642              	.LCFI38:
 643              	 .cfi_def_cfa_register 13
 644              	 
 645 025e 80BD     	 pop {r7,pc}
 646              	 .cfi_endproc
 647              	.LFE130:
 649              	 .align 1
 650              	 .syntax unified
 651              	 .thumb
 652              	 .thumb_func
 653              	 .fpu softvfp
 655              	pll_config_set_option:
 656              	.LFB131:
 657              	 .file 6 "../../../platform/common/services/clock/sam4l/pll.h"
   1:../../../platform/common/services/clock/sam4l/pll.h **** /**
   2:../../../platform/common/services/clock/sam4l/pll.h ****  * \file
   3:../../../platform/common/services/clock/sam4l/pll.h ****  *
   4:../../../platform/common/services/clock/sam4l/pll.h ****  * \brief Chip-specific PLL definitions
   5:../../../platform/common/services/clock/sam4l/pll.h ****  *
   6:../../../platform/common/services/clock/sam4l/pll.h ****  * Copyright (c) 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/sam4l/pll.h ****  *
   8:../../../platform/common/services/clock/sam4l/pll.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/sam4l/pll.h ****  *
  10:../../../platform/common/services/clock/sam4l/pll.h ****  * \page License
  11:../../../platform/common/services/clock/sam4l/pll.h ****  *
  12:../../../platform/common/services/clock/sam4l/pll.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/sam4l/pll.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/sam4l/pll.h ****  *
  15:../../../platform/common/services/clock/sam4l/pll.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/sam4l/pll.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/sam4l/pll.h ****  *
  18:../../../platform/common/services/clock/sam4l/pll.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/sam4l/pll.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/sam4l/pll.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/sam4l/pll.h ****  *
  22:../../../platform/common/services/clock/sam4l/pll.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/sam4l/pll.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/sam4l/pll.h ****  *
  25:../../../platform/common/services/clock/sam4l/pll.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/sam4l/pll.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/sam4l/pll.h ****  *
  28:../../../platform/common/services/clock/sam4l/pll.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/sam4l/pll.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/sam4l/pll.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/sam4l/pll.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/sam4l/pll.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/sam4l/pll.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/sam4l/pll.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/sam4l/pll.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/sam4l/pll.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/sam4l/pll.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/sam4l/pll.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/sam4l/pll.h ****  *
  40:../../../platform/common/services/clock/sam4l/pll.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/sam4l/pll.h ****  *
  42:../../../platform/common/services/clock/sam4l/pll.h ****  */
  43:../../../platform/common/services/clock/sam4l/pll.h **** #ifndef CHIP_PLL_H_INCLUDED
  44:../../../platform/common/services/clock/sam4l/pll.h **** #define CHIP_PLL_H_INCLUDED
  45:../../../platform/common/services/clock/sam4l/pll.h **** 
  46:../../../platform/common/services/clock/sam4l/pll.h **** #ifdef __cplusplus
  47:../../../platform/common/services/clock/sam4l/pll.h **** extern "C" {
  48:../../../platform/common/services/clock/sam4l/pll.h **** #endif
  49:../../../platform/common/services/clock/sam4l/pll.h **** 
  50:../../../platform/common/services/clock/sam4l/pll.h **** #define SCIF0_PLL_VCO_RANGE1_MAX_FREQ   240000000
  51:../../../platform/common/services/clock/sam4l/pll.h **** #define SCIF_PLL0_VCO_RANGE1_MIN_FREQ   160000000
  52:../../../platform/common/services/clock/sam4l/pll.h **** #define SCIF_PLL0_VCO_RANGE0_MAX_FREQ   180000000
  53:../../../platform/common/services/clock/sam4l/pll.h **** #define SCIF_PLL0_VCO_RANGE0_MIN_FREQ    80000000
  54:../../../platform/common/services/clock/sam4l/pll.h **** 
  55:../../../platform/common/services/clock/sam4l/pll.h **** /**
  56:../../../platform/common/services/clock/sam4l/pll.h ****  * \weakgroup pll_group
  57:../../../platform/common/services/clock/sam4l/pll.h ****  * @{
  58:../../../platform/common/services/clock/sam4l/pll.h ****  */
  59:../../../platform/common/services/clock/sam4l/pll.h **** 
  60:../../../platform/common/services/clock/sam4l/pll.h **** #define PLL_MAX_STARTUP_CYCLES    (SCIF_PLL_PLLCOUNT_Msk >> SCIF_PLL_PLLCOUNT_Pos)
  61:../../../platform/common/services/clock/sam4l/pll.h **** #define NR_PLLS                   1
  62:../../../platform/common/services/clock/sam4l/pll.h **** 
  63:../../../platform/common/services/clock/sam4l/pll.h **** /**
  64:../../../platform/common/services/clock/sam4l/pll.h ****  * \brief Number of milliseconds to wait for PLL lock
  65:../../../platform/common/services/clock/sam4l/pll.h ****  */
  66:../../../platform/common/services/clock/sam4l/pll.h **** #define PLL_TIMEOUT_MS \
  67:../../../platform/common/services/clock/sam4l/pll.h **** 	div_ceil(1000 * (PLL_MAX_STARTUP_CYCLES * 2), OSC_RCSYS_MIN_HZ)
  68:../../../platform/common/services/clock/sam4l/pll.h **** 
  69:../../../platform/common/services/clock/sam4l/pll.h **** /**
  70:../../../platform/common/services/clock/sam4l/pll.h ****  * \note The PLL must run at twice this frequency internally, but the
  71:../../../platform/common/services/clock/sam4l/pll.h ****  * output frequency may be divided by two by setting the PLLOPT[1] bit.
  72:../../../platform/common/services/clock/sam4l/pll.h ****  */
  73:../../../platform/common/services/clock/sam4l/pll.h **** #define PLL_MIN_HZ                40000000
  74:../../../platform/common/services/clock/sam4l/pll.h **** #define PLL_MAX_HZ                240000000
  75:../../../platform/common/services/clock/sam4l/pll.h **** 
  76:../../../platform/common/services/clock/sam4l/pll.h **** //! \name Chip-specific PLL options
  77:../../../platform/common/services/clock/sam4l/pll.h **** //@{
  78:../../../platform/common/services/clock/sam4l/pll.h **** //! VCO frequency range is 160-240 MHz (80-180 MHz if unset).
  79:../../../platform/common/services/clock/sam4l/pll.h **** #define PLL_OPT_VCO_RANGE_HIGH    0
  80:../../../platform/common/services/clock/sam4l/pll.h **** //! Divide output frequency by two
  81:../../../platform/common/services/clock/sam4l/pll.h **** #define PLL_OPT_OUTPUT_DIV        1
  82:../../../platform/common/services/clock/sam4l/pll.h **** //! Disable wide-bandwidth mode
  83:../../../platform/common/services/clock/sam4l/pll.h **** #define PLL_OPT_WBM_DISABLE       2
  84:../../../platform/common/services/clock/sam4l/pll.h **** //! Number of PLL options
  85:../../../platform/common/services/clock/sam4l/pll.h **** #define PLL_NR_OPTIONS            3
  86:../../../platform/common/services/clock/sam4l/pll.h **** //! The threshold above which to set the #PLL_OPT_VCO_RANGE_HIGH option
  87:../../../platform/common/services/clock/sam4l/pll.h **** #define PLL_VCO_LOW_THRESHOLD     ((SCIF_PLL0_VCO_RANGE1_MIN_FREQ \
  88:../../../platform/common/services/clock/sam4l/pll.h **** 	+ SCIF_PLL0_VCO_RANGE0_MAX_FREQ) / 2)
  89:../../../platform/common/services/clock/sam4l/pll.h **** //@}
  90:../../../platform/common/services/clock/sam4l/pll.h **** 
  91:../../../platform/common/services/clock/sam4l/pll.h **** #ifndef __ASSEMBLY__
  92:../../../platform/common/services/clock/sam4l/pll.h **** 
  93:../../../platform/common/services/clock/sam4l/pll.h **** #include <compiler.h>
  94:../../../platform/common/services/clock/sam4l/pll.h **** #include <osc.h>
  95:../../../platform/common/services/clock/sam4l/pll.h **** 
  96:../../../platform/common/services/clock/sam4l/pll.h **** enum pll_source {
  97:../../../platform/common/services/clock/sam4l/pll.h **** 	PLL_SRC_OSC0            = 0,    //!< Oscillator 0
  98:../../../platform/common/services/clock/sam4l/pll.h **** 	PLL_SRC_GCLK9           = 1,    //!< Generic Clock 9
  99:../../../platform/common/services/clock/sam4l/pll.h **** 	PLL_NR_SOURCES,                 //!< Number of PLL sources
 100:../../../platform/common/services/clock/sam4l/pll.h **** };
 101:../../../platform/common/services/clock/sam4l/pll.h **** 
 102:../../../platform/common/services/clock/sam4l/pll.h **** struct pll_config {
 103:../../../platform/common/services/clock/sam4l/pll.h **** 	uint32_t ctrl;
 104:../../../platform/common/services/clock/sam4l/pll.h **** };
 105:../../../platform/common/services/clock/sam4l/pll.h **** 
 106:../../../platform/common/services/clock/sam4l/pll.h **** #define pll_get_default_rate(pll_id)                \
 107:../../../platform/common/services/clock/sam4l/pll.h **** 	((osc_get_rate(CONFIG_PLL ## pll_id ## _SOURCE) \
 108:../../../platform/common/services/clock/sam4l/pll.h **** 	* CONFIG_PLL ## pll_id ## _MUL)                 \
 109:../../../platform/common/services/clock/sam4l/pll.h **** 	/ CONFIG_PLL ## pll_id ## _DIV)
 110:../../../platform/common/services/clock/sam4l/pll.h **** 
 111:../../../platform/common/services/clock/sam4l/pll.h **** static inline void pll_config_set_option(struct pll_config *cfg,
 112:../../../platform/common/services/clock/sam4l/pll.h **** 		uint32_t option)
 113:../../../platform/common/services/clock/sam4l/pll.h **** {
 658              	 .loc 6 113 0
 659              	 .cfi_startproc
 660              	 
 661              	 
 662              	 
 663 0260 80B4     	 push {r7}
 664              	.LCFI39:
 665              	 .cfi_def_cfa_offset 4
 666              	 .cfi_offset 7,-4
 667 0262 83B0     	 sub sp,sp,#12
 668              	.LCFI40:
 669              	 .cfi_def_cfa_offset 16
 670 0264 00AF     	 add r7,sp,#0
 671              	.LCFI41:
 672              	 .cfi_def_cfa_register 7
 673 0266 7860     	 str r0,[r7,#4]
 674 0268 3960     	 str r1,[r7]
 114:../../../platform/common/services/clock/sam4l/pll.h **** 	Assert(option < PLL_NR_OPTIONS);
 115:../../../platform/common/services/clock/sam4l/pll.h **** 
 116:../../../platform/common/services/clock/sam4l/pll.h **** 	cfg->ctrl |= 1U << (SCIF_PLL_PLLOPT_Pos + option);
 675              	 .loc 6 116 0
 676 026a 7B68     	 ldr r3,[r7,#4]
 677 026c 1A68     	 ldr r2,[r3]
 678 026e 3B68     	 ldr r3,[r7]
 679 0270 0333     	 adds r3,r3,#3
 680 0272 0121     	 movs r1,#1
 681 0274 01FA03F3 	 lsl r3,r1,r3
 682 0278 1A43     	 orrs r2,r2,r3
 683 027a 7B68     	 ldr r3,[r7,#4]
 684 027c 1A60     	 str r2,[r3]
 117:../../../platform/common/services/clock/sam4l/pll.h **** }
 685              	 .loc 6 117 0
 686 027e 00BF     	 nop
 687 0280 0C37     	 adds r7,r7,#12
 688              	.LCFI42:
 689              	 .cfi_def_cfa_offset 4
 690 0282 BD46     	 mov sp,r7
 691              	.LCFI43:
 692              	 .cfi_def_cfa_register 13
 693              	 
 694 0284 80BC     	 pop {r7}
 695              	.LCFI44:
 696              	 .cfi_restore 7
 697              	 .cfi_def_cfa_offset 0
 698 0286 7047     	 bx lr
 699              	 .cfi_endproc
 700              	.LFE131:
 702              	 .align 1
 703              	 .syntax unified
 704              	 .thumb
 705              	 .thumb_func
 706              	 .fpu softvfp
 708              	pll_config_init:
 709              	.LFB133:
 118:../../../platform/common/services/clock/sam4l/pll.h **** 
 119:../../../platform/common/services/clock/sam4l/pll.h **** static inline void pll_config_clear_option(struct pll_config *cfg,
 120:../../../platform/common/services/clock/sam4l/pll.h **** 		uint32_t option)
 121:../../../platform/common/services/clock/sam4l/pll.h **** {
 122:../../../platform/common/services/clock/sam4l/pll.h **** 	Assert(option < PLL_NR_OPTIONS);
 123:../../../platform/common/services/clock/sam4l/pll.h **** 
 124:../../../platform/common/services/clock/sam4l/pll.h **** 	cfg->ctrl &= ~(1U << (SCIF_PLL_PLLOPT_Pos + option));
 125:../../../platform/common/services/clock/sam4l/pll.h **** }
 126:../../../platform/common/services/clock/sam4l/pll.h **** 
 127:../../../platform/common/services/clock/sam4l/pll.h **** /**
 128:../../../platform/common/services/clock/sam4l/pll.h ****  * The PLL options #PLL_OPT_VCO_RANGE_HIGH and #PLL_OPT_OUTPUT_DIV will
 129:../../../platform/common/services/clock/sam4l/pll.h ****  * be set automatically based on the calculated target frequency.
 130:../../../platform/common/services/clock/sam4l/pll.h ****  */
 131:../../../platform/common/services/clock/sam4l/pll.h **** static inline void pll_config_init(struct pll_config *cfg,
 132:../../../platform/common/services/clock/sam4l/pll.h **** 		enum pll_source src, uint32_t divide, uint32_t mul)
 133:../../../platform/common/services/clock/sam4l/pll.h **** {
 710              	 .loc 6 133 0
 711              	 .cfi_startproc
 712              	 
 713              	 
 714 0288 80B5     	 push {r7,lr}
 715              	.LCFI45:
 716              	 .cfi_def_cfa_offset 8
 717              	 .cfi_offset 7,-8
 718              	 .cfi_offset 14,-4
 719 028a 86B0     	 sub sp,sp,#24
 720              	.LCFI46:
 721              	 .cfi_def_cfa_offset 32
 722 028c 00AF     	 add r7,sp,#0
 723              	.LCFI47:
 724              	 .cfi_def_cfa_register 7
 725 028e F860     	 str r0,[r7,#12]
 726 0290 7A60     	 str r2,[r7,#4]
 727 0292 3B60     	 str r3,[r7]
 728 0294 0B46     	 mov r3,r1
 729 0296 FB72     	 strb r3,[r7,#11]
 134:../../../platform/common/services/clock/sam4l/pll.h **** #define MUL_MIN    2
 135:../../../platform/common/services/clock/sam4l/pll.h **** #define MUL_MAX    16
 136:../../../platform/common/services/clock/sam4l/pll.h **** #define DIV_MIN    0
 137:../../../platform/common/services/clock/sam4l/pll.h **** #define DIV_MAX    15
 138:../../../platform/common/services/clock/sam4l/pll.h **** 
 139:../../../platform/common/services/clock/sam4l/pll.h **** 	uint32_t vco_hz;
 140:../../../platform/common/services/clock/sam4l/pll.h **** 
 141:../../../platform/common/services/clock/sam4l/pll.h **** 	Assert(src < PLL_NR_SOURCES);
 142:../../../platform/common/services/clock/sam4l/pll.h **** 	Assert(divide != 0);
 143:../../../platform/common/services/clock/sam4l/pll.h **** 
 144:../../../platform/common/services/clock/sam4l/pll.h **** 	/* Calculate internal VCO frequency */
 145:../../../platform/common/services/clock/sam4l/pll.h **** 	vco_hz = osc_get_rate(src) * mul;
 730              	 .loc 6 145 0
 731 0298 FB7A     	 ldrb r3,[r7,#11]
 732 029a 1846     	 mov r0,r3
 733 029c FFF792FF 	 bl osc_get_rate
 734 02a0 0246     	 mov r2,r0
 735 02a2 3B68     	 ldr r3,[r7]
 736 02a4 03FB02F3 	 mul r3,r3,r2
 737 02a8 7B61     	 str r3,[r7,#20]
 146:../../../platform/common/services/clock/sam4l/pll.h **** 	vco_hz /= divide;
 738              	 .loc 6 146 0
 739 02aa 7A69     	 ldr r2,[r7,#20]
 740 02ac 7B68     	 ldr r3,[r7,#4]
 741 02ae B2FBF3F3 	 udiv r3,r2,r3
 742 02b2 7B61     	 str r3,[r7,#20]
 147:../../../platform/common/services/clock/sam4l/pll.h **** 	Assert(vco_hz >= PLL_MIN_HZ);
 148:../../../platform/common/services/clock/sam4l/pll.h **** 	Assert(vco_hz <= PLL_MAX_HZ);
 149:../../../platform/common/services/clock/sam4l/pll.h **** 
 150:../../../platform/common/services/clock/sam4l/pll.h **** 	cfg->ctrl = 0;
 743              	 .loc 6 150 0
 744 02b4 FB68     	 ldr r3,[r7,#12]
 745 02b6 0022     	 movs r2,#0
 746 02b8 1A60     	 str r2,[r3]
 151:../../../platform/common/services/clock/sam4l/pll.h **** 
 152:../../../platform/common/services/clock/sam4l/pll.h **** 	/* Bring the internal VCO frequency up to the minimum value */
 153:../../../platform/common/services/clock/sam4l/pll.h **** 	if ((vco_hz < PLL_MIN_HZ * 2) && (mul <= 8)) {
 747              	 .loc 6 153 0
 748 02ba 7B69     	 ldr r3,[r7,#20]
 749 02bc 154A     	 ldr r2,.L59
 750 02be 9342     	 cmp r3,r2
 751 02c0 0CD8     	 bhi .L57
 752              	 .loc 6 153 0 is_stmt 0 discriminator 1
 753 02c2 3B68     	 ldr r3,[r7]
 754 02c4 082B     	 cmp r3,#8
 755 02c6 09D8     	 bhi .L57
 154:../../../platform/common/services/clock/sam4l/pll.h **** 		mul *= 2;
 756              	 .loc 6 154 0 is_stmt 1
 757 02c8 3B68     	 ldr r3,[r7]
 758 02ca 5B00     	 lsls r3,r3,#1
 759 02cc 3B60     	 str r3,[r7]
 155:../../../platform/common/services/clock/sam4l/pll.h **** 		vco_hz *= 2;
 760              	 .loc 6 155 0
 761 02ce 7B69     	 ldr r3,[r7,#20]
 762 02d0 5B00     	 lsls r3,r3,#1
 763 02d2 7B61     	 str r3,[r7,#20]
 156:../../../platform/common/services/clock/sam4l/pll.h **** 		pll_config_set_option(cfg, PLL_OPT_OUTPUT_DIV);
 764              	 .loc 6 156 0
 765 02d4 0121     	 movs r1,#1
 766 02d6 F868     	 ldr r0,[r7,#12]
 767 02d8 FFF7C2FF 	 bl pll_config_set_option
 768              	.L57:
 157:../../../platform/common/services/clock/sam4l/pll.h **** 	}
 158:../../../platform/common/services/clock/sam4l/pll.h **** 
 159:../../../platform/common/services/clock/sam4l/pll.h **** 	/* Set VCO frequency range according to calculated value */
 160:../../../platform/common/services/clock/sam4l/pll.h **** 	if (vco_hz >= PLL_VCO_LOW_THRESHOLD) {
 769              	 .loc 6 160 0
 770 02dc 7B69     	 ldr r3,[r7,#20]
 771 02de 0E4A     	 ldr r2,.L59+4
 772 02e0 9342     	 cmp r3,r2
 773 02e2 03D9     	 bls .L58
 161:../../../platform/common/services/clock/sam4l/pll.h **** 		pll_config_set_option(cfg, PLL_OPT_VCO_RANGE_HIGH);
 774              	 .loc 6 161 0
 775 02e4 0021     	 movs r1,#0
 776 02e6 F868     	 ldr r0,[r7,#12]
 777 02e8 FFF7BAFF 	 bl pll_config_set_option
 778              	.L58:
 162:../../../platform/common/services/clock/sam4l/pll.h **** 	}
 163:../../../platform/common/services/clock/sam4l/pll.h **** 
 164:../../../platform/common/services/clock/sam4l/pll.h **** 	Assert(mul > MUL_MIN && mul <= MUL_MAX);
 165:../../../platform/common/services/clock/sam4l/pll.h **** 	Assert(divide > DIV_MIN && divide <= DIV_MAX);
 166:../../../platform/common/services/clock/sam4l/pll.h **** 
 167:../../../platform/common/services/clock/sam4l/pll.h **** 	cfg->ctrl |= ((mul - 1) << SCIF_PLL_PLLMUL_Pos)
 779              	 .loc 6 167 0
 780 02ec FB68     	 ldr r3,[r7,#12]
 781 02ee 1A68     	 ldr r2,[r3]
 782 02f0 3B68     	 ldr r3,[r7]
 783 02f2 013B     	 subs r3,r3,#1
 784 02f4 1904     	 lsls r1,r3,#16
 168:../../../platform/common/services/clock/sam4l/pll.h **** 			| (divide << SCIF_PLL_PLLDIV_Pos)
 785              	 .loc 6 168 0
 786 02f6 7B68     	 ldr r3,[r7,#4]
 787 02f8 1B02     	 lsls r3,r3,#8
 788 02fa 0B43     	 orrs r3,r3,r1
 169:../../../platform/common/services/clock/sam4l/pll.h **** 			| (PLL_MAX_STARTUP_CYCLES << SCIF_PLL_PLLCOUNT_Pos)
 170:../../../platform/common/services/clock/sam4l/pll.h **** 			| (src << SCIF_PLL_PLLOSC_Pos);
 789              	 .loc 6 170 0
 790 02fc F97A     	 ldrb r1,[r7,#11]
 791 02fe 4900     	 lsls r1,r1,#1
 792 0300 0B43     	 orrs r3,r3,r1
 167:../../../platform/common/services/clock/sam4l/pll.h **** 			| (divide << SCIF_PLL_PLLDIV_Pos)
 793              	 .loc 6 167 0
 794 0302 1343     	 orrs r3,r3,r2
 795 0304 43F07C52 	 orr r2,r3,#1056964608
 796 0308 FB68     	 ldr r3,[r7,#12]
 797 030a 1A60     	 str r2,[r3]
 171:../../../platform/common/services/clock/sam4l/pll.h **** }
 798              	 .loc 6 171 0
 799 030c 00BF     	 nop
 800 030e 1837     	 adds r7,r7,#24
 801              	.LCFI48:
 802              	 .cfi_def_cfa_offset 8
 803 0310 BD46     	 mov sp,r7
 804              	.LCFI49:
 805              	 .cfi_def_cfa_register 13
 806              	 
 807 0312 80BD     	 pop {r7,pc}
 808              	.L60:
 809              	 .align 2
 810              	.L59:
 811 0314 FFB3C404 	 .word 79999999
 812 0318 7FFE210A 	 .word 169999999
 813              	 .cfi_endproc
 814              	.LFE133:
 816              	 .align 1
 817              	 .syntax unified
 818              	 .thumb
 819              	 .thumb_func
 820              	 .fpu softvfp
 822              	pll_is_locked:
 823              	.LFB135:
 172:../../../platform/common/services/clock/sam4l/pll.h **** 
 173:../../../platform/common/services/clock/sam4l/pll.h **** #define pll_config_defaults(cfg, pll_id) \
 174:../../../platform/common/services/clock/sam4l/pll.h **** 	pll_config_init(cfg,                 \
 175:../../../platform/common/services/clock/sam4l/pll.h **** 		CONFIG_PLL ## pll_id ## _SOURCE, \
 176:../../../platform/common/services/clock/sam4l/pll.h **** 		CONFIG_PLL ## pll_id ## _DIV,    \
 177:../../../platform/common/services/clock/sam4l/pll.h **** 		CONFIG_PLL ## pll_id ## _MUL)
 178:../../../platform/common/services/clock/sam4l/pll.h **** 
 179:../../../platform/common/services/clock/sam4l/pll.h **** static inline void pll_config_read(struct pll_config *cfg, uint32_t pll_id)
 180:../../../platform/common/services/clock/sam4l/pll.h **** {
 181:../../../platform/common/services/clock/sam4l/pll.h **** 	Assert(pll_id < NR_PLLS);
 182:../../../platform/common/services/clock/sam4l/pll.h **** 
 183:../../../platform/common/services/clock/sam4l/pll.h **** 	cfg->ctrl = SCIF->SCIF_PLL[pll_id].SCIF_PLL;
 184:../../../platform/common/services/clock/sam4l/pll.h **** }
 185:../../../platform/common/services/clock/sam4l/pll.h **** 
 186:../../../platform/common/services/clock/sam4l/pll.h **** extern void pll_config_write(const struct pll_config *cfg, uint32_t pll_id);
 187:../../../platform/common/services/clock/sam4l/pll.h **** extern void pll_enable(const struct pll_config *cfg, uint32_t pll_id);
 188:../../../platform/common/services/clock/sam4l/pll.h **** extern void pll_disable(uint32_t pll_id);
 189:../../../platform/common/services/clock/sam4l/pll.h **** 
 190:../../../platform/common/services/clock/sam4l/pll.h **** static inline bool pll_is_locked(uint32_t pll_id)
 191:../../../platform/common/services/clock/sam4l/pll.h **** {
 824              	 .loc 6 191 0
 825              	 .cfi_startproc
 826              	 
 827              	 
 828              	 
 829 031c 80B4     	 push {r7}
 830              	.LCFI50:
 831              	 .cfi_def_cfa_offset 4
 832              	 .cfi_offset 7,-4
 833 031e 83B0     	 sub sp,sp,#12
 834              	.LCFI51:
 835              	 .cfi_def_cfa_offset 16
 836 0320 00AF     	 add r7,sp,#0
 837              	.LCFI52:
 838              	 .cfi_def_cfa_register 7
 839 0322 7860     	 str r0,[r7,#4]
 192:../../../platform/common/services/clock/sam4l/pll.h **** 	Assert(pll_id < NR_PLLS);
 193:../../../platform/common/services/clock/sam4l/pll.h **** 	return !!(SCIF->SCIF_PCLKSR & (1U << (6 + pll_id)));
 840              	 .loc 6 193 0
 841 0324 084B     	 ldr r3,.L63
 842 0326 5A69     	 ldr r2,[r3,#20]
 843 0328 7B68     	 ldr r3,[r7,#4]
 844 032a 0633     	 adds r3,r3,#6
 845 032c 0121     	 movs r1,#1
 846 032e 01FA03F3 	 lsl r3,r1,r3
 847 0332 1340     	 ands r3,r3,r2
 848 0334 002B     	 cmp r3,#0
 849 0336 14BF     	 ite ne
 850 0338 0123     	 movne r3,#1
 851 033a 0023     	 moveq r3,#0
 852 033c DBB2     	 uxtb r3,r3
 194:../../../platform/common/services/clock/sam4l/pll.h **** }
 853              	 .loc 6 194 0
 854 033e 1846     	 mov r0,r3
 855 0340 0C37     	 adds r7,r7,#12
 856              	.LCFI53:
 857              	 .cfi_def_cfa_offset 4
 858 0342 BD46     	 mov sp,r7
 859              	.LCFI54:
 860              	 .cfi_def_cfa_register 13
 861              	 
 862 0344 80BC     	 pop {r7}
 863              	.LCFI55:
 864              	 .cfi_restore 7
 865              	 .cfi_def_cfa_offset 0
 866 0346 7047     	 bx lr
 867              	.L64:
 868              	 .align 2
 869              	.L63:
 870 0348 00080E40 	 .word 1074661376
 871              	 .cfi_endproc
 872              	.LFE135:
 874              	 .align 1
 875              	 .syntax unified
 876              	 .thumb
 877              	 .thumb_func
 878              	 .fpu softvfp
 880              	pll_enable_source:
 881              	.LFB136:
 195:../../../platform/common/services/clock/sam4l/pll.h **** 
 196:../../../platform/common/services/clock/sam4l/pll.h **** static inline void pll_enable_source(enum pll_source src)
 197:../../../platform/common/services/clock/sam4l/pll.h **** {
 882              	 .loc 6 197 0
 883              	 .cfi_startproc
 884              	 
 885              	 
 886 034c 80B5     	 push {r7,lr}
 887              	.LCFI56:
 888              	 .cfi_def_cfa_offset 8
 889              	 .cfi_offset 7,-8
 890              	 .cfi_offset 14,-4
 891 034e 82B0     	 sub sp,sp,#8
 892              	.LCFI57:
 893              	 .cfi_def_cfa_offset 16
 894 0350 00AF     	 add r7,sp,#0
 895              	.LCFI58:
 896              	 .cfi_def_cfa_register 7
 897 0352 0346     	 mov r3,r0
 898 0354 FB71     	 strb r3,[r7,#7]
 198:../../../platform/common/services/clock/sam4l/pll.h **** 	switch (src) {
 899              	 .loc 6 198 0
 900 0356 FB79     	 ldrb r3,[r7,#7]
 901 0358 002B     	 cmp r3,#0
 902 035a 00D0     	 beq .L67
 199:../../../platform/common/services/clock/sam4l/pll.h **** 	case PLL_SRC_OSC0:
 200:../../../platform/common/services/clock/sam4l/pll.h **** 		if (!osc_is_ready(OSC_ID_OSC0)) {
 201:../../../platform/common/services/clock/sam4l/pll.h **** 			osc_enable(OSC_ID_OSC0);
 202:../../../platform/common/services/clock/sam4l/pll.h **** 			osc_wait_ready(OSC_ID_OSC0);
 203:../../../platform/common/services/clock/sam4l/pll.h **** 		}
 204:../../../platform/common/services/clock/sam4l/pll.h **** 		break;
 205:../../../platform/common/services/clock/sam4l/pll.h **** #ifdef CONFIG_GCLK9_SOURCE
 206:../../../platform/common/services/clock/sam4l/pll.h **** 	case PLL_SRC_GCLK9:
 207:../../../platform/common/services/clock/sam4l/pll.h **** 		SCIF->SCIF_GCCTRL[9].SCIF_GCCTRL =
 208:../../../platform/common/services/clock/sam4l/pll.h **** 			SCIF_GCCTRL_OSCSEL(CONFIG_GCLK9_SOURCE) |
 209:../../../platform/common/services/clock/sam4l/pll.h **** 			SCIF_GCCTRL_CEN;
 210:../../../platform/common/services/clock/sam4l/pll.h **** 		break;
 211:../../../platform/common/services/clock/sam4l/pll.h **** #endif
 212:../../../platform/common/services/clock/sam4l/pll.h **** 	default:
 213:../../../platform/common/services/clock/sam4l/pll.h **** 		Assert(false);
 214:../../../platform/common/services/clock/sam4l/pll.h **** 		break;
 903              	 .loc 6 214 0
 904 035c 0FE0     	 b .L69
 905              	.L67:
 200:../../../platform/common/services/clock/sam4l/pll.h **** 			osc_enable(OSC_ID_OSC0);
 906              	 .loc 6 200 0
 907 035e 0020     	 movs r0,#0
 908 0360 FFF7CEFE 	 bl osc_is_ready
 909 0364 0346     	 mov r3,r0
 910 0366 83F00103 	 eor r3,r3,#1
 911 036a DBB2     	 uxtb r3,r3
 912 036c 002B     	 cmp r3,#0
 913 036e 05D0     	 beq .L70
 201:../../../platform/common/services/clock/sam4l/pll.h **** 			osc_wait_ready(OSC_ID_OSC0);
 914              	 .loc 6 201 0
 915 0370 0020     	 movs r0,#0
 916 0372 FFF787FE 	 bl osc_enable
 202:../../../platform/common/services/clock/sam4l/pll.h **** 		}
 917              	 .loc 6 202 0
 918 0376 0020     	 movs r0,#0
 919 0378 FFF75EFF 	 bl osc_wait_ready
 920              	.L70:
 204:../../../platform/common/services/clock/sam4l/pll.h **** #ifdef CONFIG_GCLK9_SOURCE
 921              	 .loc 6 204 0
 922 037c 00BF     	 nop
 923              	.L69:
 215:../../../platform/common/services/clock/sam4l/pll.h **** 	}
 216:../../../platform/common/services/clock/sam4l/pll.h **** }
 924              	 .loc 6 216 0
 925 037e 00BF     	 nop
 926 0380 0837     	 adds r7,r7,#8
 927              	.LCFI59:
 928              	 .cfi_def_cfa_offset 8
 929 0382 BD46     	 mov sp,r7
 930              	.LCFI60:
 931              	 .cfi_def_cfa_register 13
 932              	 
 933 0384 80BD     	 pop {r7,pc}
 934              	 .cfi_endproc
 935              	.LFE136:
 937              	 .align 1
 938              	 .syntax unified
 939              	 .thumb
 940              	 .thumb_func
 941              	 .fpu softvfp
 943              	pll_enable_config_defaults:
 944              	.LFB137:
 217:../../../platform/common/services/clock/sam4l/pll.h **** 
 218:../../../platform/common/services/clock/sam4l/pll.h **** static inline void pll_enable_config_defaults(uint32_t pll_id)
 219:../../../platform/common/services/clock/sam4l/pll.h **** {
 945              	 .loc 6 219 0
 946              	 .cfi_startproc
 947              	 
 948              	 
 949 0386 80B5     	 push {r7,lr}
 950              	.LCFI61:
 951              	 .cfi_def_cfa_offset 8
 952              	 .cfi_offset 7,-8
 953              	 .cfi_offset 14,-4
 954 0388 84B0     	 sub sp,sp,#16
 955              	.LCFI62:
 956              	 .cfi_def_cfa_offset 24
 957 038a 00AF     	 add r7,sp,#0
 958              	.LCFI63:
 959              	 .cfi_def_cfa_register 7
 960 038c 7860     	 str r0,[r7,#4]
 220:../../../platform/common/services/clock/sam4l/pll.h **** 	struct pll_config pllcfg;
 221:../../../platform/common/services/clock/sam4l/pll.h **** 
 222:../../../platform/common/services/clock/sam4l/pll.h **** 	if (pll_is_locked(pll_id)) {
 961              	 .loc 6 222 0
 962 038e 7868     	 ldr r0,[r7,#4]
 963 0390 FFF7C4FF 	 bl pll_is_locked
 964 0394 0346     	 mov r3,r0
 965 0396 002B     	 cmp r3,#0
 966 0398 1FD1     	 bne .L78
 223:../../../platform/common/services/clock/sam4l/pll.h **** 		return; // Pll already running
 224:../../../platform/common/services/clock/sam4l/pll.h **** 	}
 225:../../../platform/common/services/clock/sam4l/pll.h **** 
 226:../../../platform/common/services/clock/sam4l/pll.h **** 	switch (pll_id) {
 967              	 .loc 6 226 0
 968 039a 7B68     	 ldr r3,[r7,#4]
 969 039c 002B     	 cmp r3,#0
 970 039e 00D0     	 beq .L75
 227:../../../platform/common/services/clock/sam4l/pll.h **** #ifdef CONFIG_PLL0_SOURCE
 228:../../../platform/common/services/clock/sam4l/pll.h **** 	case 0:
 229:../../../platform/common/services/clock/sam4l/pll.h **** 		pll_enable_source(CONFIG_PLL0_SOURCE);
 230:../../../platform/common/services/clock/sam4l/pll.h **** 		pll_config_init(&pllcfg,
 231:../../../platform/common/services/clock/sam4l/pll.h **** 				CONFIG_PLL0_SOURCE,
 232:../../../platform/common/services/clock/sam4l/pll.h **** 				CONFIG_PLL0_DIV,
 233:../../../platform/common/services/clock/sam4l/pll.h **** 				CONFIG_PLL0_MUL);
 234:../../../platform/common/services/clock/sam4l/pll.h **** 		break;
 235:../../../platform/common/services/clock/sam4l/pll.h **** 
 236:../../../platform/common/services/clock/sam4l/pll.h **** #endif
 237:../../../platform/common/services/clock/sam4l/pll.h **** 	default:
 238:../../../platform/common/services/clock/sam4l/pll.h **** 		Assert(false);
 239:../../../platform/common/services/clock/sam4l/pll.h **** 		break;
 971              	 .loc 6 239 0
 972 03a0 0AE0     	 b .L76
 973              	.L75:
 229:../../../platform/common/services/clock/sam4l/pll.h **** 		pll_config_init(&pllcfg,
 974              	 .loc 6 229 0
 975 03a2 0020     	 movs r0,#0
 976 03a4 FFF7D2FF 	 bl pll_enable_source
 230:../../../platform/common/services/clock/sam4l/pll.h **** 				CONFIG_PLL0_SOURCE,
 977              	 .loc 6 230 0
 978 03a8 07F10C00 	 add r0,r7,#12
 979 03ac 1023     	 movs r3,#16
 980 03ae 0422     	 movs r2,#4
 981 03b0 0021     	 movs r1,#0
 982 03b2 FFF769FF 	 bl pll_config_init
 234:../../../platform/common/services/clock/sam4l/pll.h **** 
 983              	 .loc 6 234 0
 984 03b6 00BF     	 nop
 985              	.L76:
 240:../../../platform/common/services/clock/sam4l/pll.h **** 	}
 241:../../../platform/common/services/clock/sam4l/pll.h **** 	pll_enable(&pllcfg, pll_id);
 986              	 .loc 6 241 0
 987 03b8 07F10C03 	 add r3,r7,#12
 988 03bc 7968     	 ldr r1,[r7,#4]
 989 03be 1846     	 mov r0,r3
 990 03c0 084B     	 ldr r3,.L79
 991 03c2 9847     	 blx r3
 992              	.LVL6:
 242:../../../platform/common/services/clock/sam4l/pll.h **** 	while (!pll_is_locked(pll_id));
 993              	 .loc 6 242 0
 994 03c4 00BF     	 nop
 995              	.L77:
 996              	 .loc 6 242 0 is_stmt 0 discriminator 1
 997 03c6 7868     	 ldr r0,[r7,#4]
 998 03c8 FFF7A8FF 	 bl pll_is_locked
 999 03cc 0346     	 mov r3,r0
 1000 03ce 83F00103 	 eor r3,r3,#1
 1001 03d2 DBB2     	 uxtb r3,r3
 1002 03d4 002B     	 cmp r3,#0
 1003 03d6 F6D1     	 bne .L77
 1004 03d8 00E0     	 b .L71
 1005              	.L78:
 223:../../../platform/common/services/clock/sam4l/pll.h **** 	}
 1006              	 .loc 6 223 0 is_stmt 1
 1007 03da 00BF     	 nop
 1008              	.L71:
 243:../../../platform/common/services/clock/sam4l/pll.h **** }
 1009              	 .loc 6 243 0
 1010 03dc 1037     	 adds r7,r7,#16
 1011              	.LCFI64:
 1012              	 .cfi_def_cfa_offset 8
 1013 03de BD46     	 mov sp,r7
 1014              	.LCFI65:
 1015              	 .cfi_def_cfa_register 13
 1016              	 
 1017 03e0 80BD     	 pop {r7,pc}
 1018              	.L80:
 1019 03e2 00BF     	 .align 2
 1020              	.L79:
 1021 03e4 00000000 	 .word pll_enable
 1022              	 .cfi_endproc
 1023              	.LFE137:
 1025              	 .align 1
 1026              	 .syntax unified
 1027              	 .thumb
 1028              	 .thumb_func
 1029              	 .fpu softvfp
 1031              	genclk_config_defaults:
 1032              	.LFB139:
 1033              	 .file 7 "../../../platform/common/services/clock/sam4l/genclk.h"
   1:../../../platform/common/services/clock/sam4l/genclk.h **** /**
   2:../../../platform/common/services/clock/sam4l/genclk.h ****  * \file
   3:../../../platform/common/services/clock/sam4l/genclk.h ****  *
   4:../../../platform/common/services/clock/sam4l/genclk.h ****  * \brief Chip-specific generic clock management
   5:../../../platform/common/services/clock/sam4l/genclk.h ****  *
   6:../../../platform/common/services/clock/sam4l/genclk.h ****  * Copyright (c) 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/sam4l/genclk.h ****  *
   8:../../../platform/common/services/clock/sam4l/genclk.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/sam4l/genclk.h ****  *
  10:../../../platform/common/services/clock/sam4l/genclk.h ****  * \page License
  11:../../../platform/common/services/clock/sam4l/genclk.h ****  *
  12:../../../platform/common/services/clock/sam4l/genclk.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/sam4l/genclk.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/sam4l/genclk.h ****  *
  15:../../../platform/common/services/clock/sam4l/genclk.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/sam4l/genclk.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/sam4l/genclk.h ****  *
  18:../../../platform/common/services/clock/sam4l/genclk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/sam4l/genclk.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/sam4l/genclk.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/sam4l/genclk.h ****  *
  22:../../../platform/common/services/clock/sam4l/genclk.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/sam4l/genclk.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/sam4l/genclk.h ****  *
  25:../../../platform/common/services/clock/sam4l/genclk.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/sam4l/genclk.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/sam4l/genclk.h ****  *
  28:../../../platform/common/services/clock/sam4l/genclk.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/sam4l/genclk.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/sam4l/genclk.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/sam4l/genclk.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/sam4l/genclk.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/sam4l/genclk.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/sam4l/genclk.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/sam4l/genclk.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/sam4l/genclk.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/sam4l/genclk.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/sam4l/genclk.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/sam4l/genclk.h ****  *
  40:../../../platform/common/services/clock/sam4l/genclk.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/sam4l/genclk.h ****  *
  42:../../../platform/common/services/clock/sam4l/genclk.h ****  */
  43:../../../platform/common/services/clock/sam4l/genclk.h **** #ifndef CHIP_GENCLK_H_INCLUDED
  44:../../../platform/common/services/clock/sam4l/genclk.h **** #define CHIP_GENCLK_H_INCLUDED
  45:../../../platform/common/services/clock/sam4l/genclk.h **** 
  46:../../../platform/common/services/clock/sam4l/genclk.h **** #ifdef __cplusplus
  47:../../../platform/common/services/clock/sam4l/genclk.h **** extern "C" {
  48:../../../platform/common/services/clock/sam4l/genclk.h **** #endif
  49:../../../platform/common/services/clock/sam4l/genclk.h **** 
  50:../../../platform/common/services/clock/sam4l/genclk.h **** // dfll.h is not included to avoid a circular dependency.
  51:../../../platform/common/services/clock/sam4l/genclk.h **** extern void dfll_enable_config_defaults(uint32_t dfll_id);
  52:../../../platform/common/services/clock/sam4l/genclk.h **** 
  53:../../../platform/common/services/clock/sam4l/genclk.h **** /**
  54:../../../platform/common/services/clock/sam4l/genclk.h ****  * \weakgroup genclk_group
  55:../../../platform/common/services/clock/sam4l/genclk.h ****  * @{
  56:../../../platform/common/services/clock/sam4l/genclk.h ****  */
  57:../../../platform/common/services/clock/sam4l/genclk.h **** 
  58:../../../platform/common/services/clock/sam4l/genclk.h **** //! \name Chip-specific generic clock definitions
  59:../../../platform/common/services/clock/sam4l/genclk.h **** //@{
  60:../../../platform/common/services/clock/sam4l/genclk.h **** 
  61:../../../platform/common/services/clock/sam4l/genclk.h **** #define GENCLK_DIV_MAX          256
  62:../../../platform/common/services/clock/sam4l/genclk.h **** 
  63:../../../platform/common/services/clock/sam4l/genclk.h **** #ifndef __ASSEMBLY__
  64:../../../platform/common/services/clock/sam4l/genclk.h **** 
  65:../../../platform/common/services/clock/sam4l/genclk.h **** #include <compiler.h>
  66:../../../platform/common/services/clock/sam4l/genclk.h **** #include <osc.h>
  67:../../../platform/common/services/clock/sam4l/genclk.h **** #include <pll.h>
  68:../../../platform/common/services/clock/sam4l/genclk.h **** 
  69:../../../platform/common/services/clock/sam4l/genclk.h **** enum genclk_source {
  70:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_RCSYS        = 0,    //!< System RC oscillator
  71:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_OSC32K       = 1,    //!< 32 kHz oscillator
  72:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_DFLL         = 2,    //!< DFLL
  73:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_OSC0         = 3,    //!< Oscillator 0
  74:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_RC80M        = 4,    //!< 80 MHz RC oscillator
  75:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_RCFAST       = 5,    //!< 4-8-12 MHz RC oscillator
  76:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_RC1M         = 6,    //!< 1 MHz RC oscillator
  77:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_CLK_CPU      = 7,    //!< CPU clock
  78:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_CLK_HSB      = 8,    //!< High Speed Bus clock
  79:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_CLK_PBA      = 9,    //!< Peripheral Bus A clock
  80:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_CLK_PBB      = 10,   //!< Peripheral Bus B clock
  81:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_CLK_PBC      = 11,   //!< Peripheral Bus C clock
  82:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_CLK_PBD      = 12,   //!< Peripheral Bus D clock
  83:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_RC32K        = 13,   //!< 32 kHz RC oscillator
  84:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_CLK_1K       = 15,   //!< 1 kHz output from OSC32K
  85:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_PLL0         = 16,   //!< PLL0
  86:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_HRPCLK       = 17,   //!< High resolution prescaler
  87:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_FPCLK        = 18,   //!< Fractional prescaler
  88:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_GCLKIN0      = 19,   //!< GCLKIN0
  89:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_GCLKIN1      = 20,   //!< GCLKIN1
  90:../../../platform/common/services/clock/sam4l/genclk.h **** 	GENCLK_SRC_GCLK11       = 21,   //!< GCLK11
  91:../../../platform/common/services/clock/sam4l/genclk.h **** };
  92:../../../platform/common/services/clock/sam4l/genclk.h **** 
  93:../../../platform/common/services/clock/sam4l/genclk.h **** //@}
  94:../../../platform/common/services/clock/sam4l/genclk.h **** 
  95:../../../platform/common/services/clock/sam4l/genclk.h **** struct genclk_config {
  96:../../../platform/common/services/clock/sam4l/genclk.h **** 	uint32_t ctrl;
  97:../../../platform/common/services/clock/sam4l/genclk.h **** };
  98:../../../platform/common/services/clock/sam4l/genclk.h **** 
  99:../../../platform/common/services/clock/sam4l/genclk.h **** static inline void genclk_config_defaults(struct genclk_config *cfg,
 100:../../../platform/common/services/clock/sam4l/genclk.h **** 		uint32_t id)
 101:../../../platform/common/services/clock/sam4l/genclk.h **** {
 1034              	 .loc 7 101 0
 1035              	 .cfi_startproc
 1036              	 
 1037              	 
 1038              	 
 1039 03e8 80B4     	 push {r7}
 1040              	.LCFI66:
 1041              	 .cfi_def_cfa_offset 4
 1042              	 .cfi_offset 7,-4
 1043 03ea 83B0     	 sub sp,sp,#12
 1044              	.LCFI67:
 1045              	 .cfi_def_cfa_offset 16
 1046 03ec 00AF     	 add r7,sp,#0
 1047              	.LCFI68:
 1048              	 .cfi_def_cfa_register 7
 1049 03ee 7860     	 str r0,[r7,#4]
 1050 03f0 3960     	 str r1,[r7]
 102:../../../platform/common/services/clock/sam4l/genclk.h **** 	UNUSED(id);
 103:../../../platform/common/services/clock/sam4l/genclk.h **** 	cfg->ctrl = 0;
 1051              	 .loc 7 103 0
 1052 03f2 7B68     	 ldr r3,[r7,#4]
 1053 03f4 0022     	 movs r2,#0
 1054 03f6 1A60     	 str r2,[r3]
 104:../../../platform/common/services/clock/sam4l/genclk.h **** }
 1055              	 .loc 7 104 0
 1056 03f8 00BF     	 nop
 1057 03fa 0C37     	 adds r7,r7,#12
 1058              	.LCFI69:
 1059              	 .cfi_def_cfa_offset 4
 1060 03fc BD46     	 mov sp,r7
 1061              	.LCFI70:
 1062              	 .cfi_def_cfa_register 13
 1063              	 
 1064 03fe 80BC     	 pop {r7}
 1065              	.LCFI71:
 1066              	 .cfi_restore 7
 1067              	 .cfi_def_cfa_offset 0
 1068 0400 7047     	 bx lr
 1069              	 .cfi_endproc
 1070              	.LFE139:
 1072              	 .align 1
 1073              	 .syntax unified
 1074              	 .thumb
 1075              	 .thumb_func
 1076              	 .fpu softvfp
 1078              	genclk_config_set_source:
 1079              	.LFB142:
 105:../../../platform/common/services/clock/sam4l/genclk.h **** 
 106:../../../platform/common/services/clock/sam4l/genclk.h **** static inline void genclk_config_read(struct genclk_config *cfg,
 107:../../../platform/common/services/clock/sam4l/genclk.h **** 		uint32_t id)
 108:../../../platform/common/services/clock/sam4l/genclk.h **** {
 109:../../../platform/common/services/clock/sam4l/genclk.h **** 	cfg->ctrl = SCIF->SCIF_GCCTRL[id].SCIF_GCCTRL;
 110:../../../platform/common/services/clock/sam4l/genclk.h **** }
 111:../../../platform/common/services/clock/sam4l/genclk.h **** 
 112:../../../platform/common/services/clock/sam4l/genclk.h **** static inline void genclk_config_write(const struct genclk_config *cfg,
 113:../../../platform/common/services/clock/sam4l/genclk.h **** 		uint32_t id)
 114:../../../platform/common/services/clock/sam4l/genclk.h **** {
 115:../../../platform/common/services/clock/sam4l/genclk.h **** 	SCIF->SCIF_GCCTRL[id].SCIF_GCCTRL = cfg->ctrl;
 116:../../../platform/common/services/clock/sam4l/genclk.h **** }
 117:../../../platform/common/services/clock/sam4l/genclk.h **** 
 118:../../../platform/common/services/clock/sam4l/genclk.h **** static inline void genclk_config_set_source(struct genclk_config *cfg,
 119:../../../platform/common/services/clock/sam4l/genclk.h **** 		enum genclk_source src)
 120:../../../platform/common/services/clock/sam4l/genclk.h **** {
 1080              	 .loc 7 120 0
 1081              	 .cfi_startproc
 1082              	 
 1083              	 
 1084              	 
 1085 0402 80B4     	 push {r7}
 1086              	.LCFI72:
 1087              	 .cfi_def_cfa_offset 4
 1088              	 .cfi_offset 7,-4
 1089 0404 83B0     	 sub sp,sp,#12
 1090              	.LCFI73:
 1091              	 .cfi_def_cfa_offset 16
 1092 0406 00AF     	 add r7,sp,#0
 1093              	.LCFI74:
 1094              	 .cfi_def_cfa_register 7
 1095 0408 7860     	 str r0,[r7,#4]
 1096 040a 0B46     	 mov r3,r1
 1097 040c FB70     	 strb r3,[r7,#3]
 121:../../../platform/common/services/clock/sam4l/genclk.h **** 	cfg->ctrl = (cfg->ctrl & ~SCIF_GCCTRL_OSCSEL_Msk)
 1098              	 .loc 7 121 0
 1099 040e 7B68     	 ldr r3,[r7,#4]
 1100 0410 1B68     	 ldr r3,[r3]
 1101 0412 23F4F852 	 bic r2,r3,#7936
 122:../../../platform/common/services/clock/sam4l/genclk.h **** 			| SCIF_GCCTRL_OSCSEL(src);
 1102              	 .loc 7 122 0
 1103 0416 FB78     	 ldrb r3,[r7,#3]
 1104 0418 1B02     	 lsls r3,r3,#8
 1105 041a 03F4F853 	 and r3,r3,#7936
 1106 041e 1A43     	 orrs r2,r2,r3
 121:../../../platform/common/services/clock/sam4l/genclk.h **** 	cfg->ctrl = (cfg->ctrl & ~SCIF_GCCTRL_OSCSEL_Msk)
 1107              	 .loc 7 121 0
 1108 0420 7B68     	 ldr r3,[r7,#4]
 1109 0422 1A60     	 str r2,[r3]
 123:../../../platform/common/services/clock/sam4l/genclk.h **** }
 1110              	 .loc 7 123 0
 1111 0424 00BF     	 nop
 1112 0426 0C37     	 adds r7,r7,#12
 1113              	.LCFI75:
 1114              	 .cfi_def_cfa_offset 4
 1115 0428 BD46     	 mov sp,r7
 1116              	.LCFI76:
 1117              	 .cfi_def_cfa_register 13
 1118              	 
 1119 042a 80BC     	 pop {r7}
 1120              	.LCFI77:
 1121              	 .cfi_restore 7
 1122              	 .cfi_def_cfa_offset 0
 1123 042c 7047     	 bx lr
 1124              	 .cfi_endproc
 1125              	.LFE142:
 1127              	 .align 1
 1128              	 .syntax unified
 1129              	 .thumb
 1130              	 .thumb_func
 1131              	 .fpu softvfp
 1133              	genclk_config_set_divider:
 1134              	.LFB143:
 124:../../../platform/common/services/clock/sam4l/genclk.h **** 
 125:../../../platform/common/services/clock/sam4l/genclk.h **** static inline void genclk_config_set_divider(struct genclk_config *cfg,
 126:../../../platform/common/services/clock/sam4l/genclk.h **** 		uint32_t divider)
 127:../../../platform/common/services/clock/sam4l/genclk.h **** {
 1135              	 .loc 7 127 0
 1136              	 .cfi_startproc
 1137              	 
 1138              	 
 1139              	 
 1140 042e 80B4     	 push {r7}
 1141              	.LCFI78:
 1142              	 .cfi_def_cfa_offset 4
 1143              	 .cfi_offset 7,-4
 1144 0430 83B0     	 sub sp,sp,#12
 1145              	.LCFI79:
 1146              	 .cfi_def_cfa_offset 16
 1147 0432 00AF     	 add r7,sp,#0
 1148              	.LCFI80:
 1149              	 .cfi_def_cfa_register 7
 1150 0434 7860     	 str r0,[r7,#4]
 1151 0436 3960     	 str r1,[r7]
 128:../../../platform/common/services/clock/sam4l/genclk.h **** 	Assert(divider > 0 && divider <= GENCLK_DIV_MAX);
 129:../../../platform/common/services/clock/sam4l/genclk.h **** 
 130:../../../platform/common/services/clock/sam4l/genclk.h **** 	/* Clear all the bits we're about to modify */
 131:../../../platform/common/services/clock/sam4l/genclk.h **** 	cfg->ctrl &= ~(SCIF_GCCTRL_DIVEN
 1152              	 .loc 7 131 0
 1153 0438 7B68     	 ldr r3,[r7,#4]
 1154 043a 1A68     	 ldr r2,[r3]
 1155 043c 4FF6FD73 	 movw r3,#65533
 1156 0440 1340     	 ands r3,r3,r2
 1157 0442 7A68     	 ldr r2,[r7,#4]
 1158 0444 1360     	 str r3,[r2]
 132:../../../platform/common/services/clock/sam4l/genclk.h **** 			| SCIF_GCCTRL_DIV_Msk);
 133:../../../platform/common/services/clock/sam4l/genclk.h **** 
 134:../../../platform/common/services/clock/sam4l/genclk.h **** 	if (divider > 1) {
 1159              	 .loc 7 134 0
 1160 0446 3B68     	 ldr r3,[r7]
 1161 0448 012B     	 cmp r3,#1
 1162 044a 0FD9     	 bls .L85
 135:../../../platform/common/services/clock/sam4l/genclk.h **** 		cfg->ctrl |= SCIF_GCCTRL_DIVEN;
 1163              	 .loc 7 135 0
 1164 044c 7B68     	 ldr r3,[r7,#4]
 1165 044e 1B68     	 ldr r3,[r3]
 1166 0450 43F00202 	 orr r2,r3,#2
 1167 0454 7B68     	 ldr r3,[r7,#4]
 1168 0456 1A60     	 str r2,[r3]
 136:../../../platform/common/services/clock/sam4l/genclk.h **** 		cfg->ctrl |= SCIF_GCCTRL_DIV(((divider + 1) / 2) - 1);
 1169              	 .loc 7 136 0
 1170 0458 7B68     	 ldr r3,[r7,#4]
 1171 045a 1A68     	 ldr r2,[r3]
 1172 045c 3B68     	 ldr r3,[r7]
 1173 045e 0133     	 adds r3,r3,#1
 1174 0460 5B08     	 lsrs r3,r3,#1
 1175 0462 013B     	 subs r3,r3,#1
 1176 0464 1B04     	 lsls r3,r3,#16
 1177 0466 1A43     	 orrs r2,r2,r3
 1178 0468 7B68     	 ldr r3,[r7,#4]
 1179 046a 1A60     	 str r2,[r3]
 1180              	.L85:
 137:../../../platform/common/services/clock/sam4l/genclk.h **** 	}
 138:../../../platform/common/services/clock/sam4l/genclk.h **** }
 1181              	 .loc 7 138 0
 1182 046c 00BF     	 nop
 1183 046e 0C37     	 adds r7,r7,#12
 1184              	.LCFI81:
 1185              	 .cfi_def_cfa_offset 4
 1186 0470 BD46     	 mov sp,r7
 1187              	.LCFI82:
 1188              	 .cfi_def_cfa_register 13
 1189              	 
 1190 0472 80BC     	 pop {r7}
 1191              	.LCFI83:
 1192              	 .cfi_restore 7
 1193              	 .cfi_def_cfa_offset 0
 1194 0474 7047     	 bx lr
 1195              	 .cfi_endproc
 1196              	.LFE143:
 1198              	 .align 1
 1199              	 .syntax unified
 1200              	 .thumb
 1201              	 .thumb_func
 1202              	 .fpu softvfp
 1204              	genclk_enable:
 1205              	.LFB144:
 139:../../../platform/common/services/clock/sam4l/genclk.h **** 
 140:../../../platform/common/services/clock/sam4l/genclk.h **** static inline void genclk_enable(const struct genclk_config *cfg,
 141:../../../platform/common/services/clock/sam4l/genclk.h **** 		uint32_t id)
 142:../../../platform/common/services/clock/sam4l/genclk.h **** {
 1206              	 .loc 7 142 0
 1207              	 .cfi_startproc
 1208              	 
 1209              	 
 1210              	 
 1211 0476 80B4     	 push {r7}
 1212              	.LCFI84:
 1213              	 .cfi_def_cfa_offset 4
 1214              	 .cfi_offset 7,-4
 1215 0478 83B0     	 sub sp,sp,#12
 1216              	.LCFI85:
 1217              	 .cfi_def_cfa_offset 16
 1218 047a 00AF     	 add r7,sp,#0
 1219              	.LCFI86:
 1220              	 .cfi_def_cfa_register 7
 1221 047c 7860     	 str r0,[r7,#4]
 1222 047e 3960     	 str r1,[r7]
 143:../../../platform/common/services/clock/sam4l/genclk.h **** 	 SCIF->SCIF_GCCTRL[id].SCIF_GCCTRL = cfg->ctrl | SCIF_GCCTRL_CEN;
 1223              	 .loc 7 143 0
 1224 0480 0749     	 ldr r1,.L87
 1225 0482 7B68     	 ldr r3,[r7,#4]
 1226 0484 1B68     	 ldr r3,[r3]
 1227 0486 43F00102 	 orr r2,r3,#1
 1228 048a 3B68     	 ldr r3,[r7]
 1229 048c 1C33     	 adds r3,r3,#28
 1230 048e 9B00     	 lsls r3,r3,#2
 1231 0490 0B44     	 add r3,r3,r1
 1232 0492 5A60     	 str r2,[r3,#4]
 144:../../../platform/common/services/clock/sam4l/genclk.h **** }
 1233              	 .loc 7 144 0
 1234 0494 00BF     	 nop
 1235 0496 0C37     	 adds r7,r7,#12
 1236              	.LCFI87:
 1237              	 .cfi_def_cfa_offset 4
 1238 0498 BD46     	 mov sp,r7
 1239              	.LCFI88:
 1240              	 .cfi_def_cfa_register 13
 1241              	 
 1242 049a 80BC     	 pop {r7}
 1243              	.LCFI89:
 1244              	 .cfi_restore 7
 1245              	 .cfi_def_cfa_offset 0
 1246 049c 7047     	 bx lr
 1247              	.L88:
 1248 049e 00BF     	 .align 2
 1249              	.L87:
 1250 04a0 00080E40 	 .word 1074661376
 1251              	 .cfi_endproc
 1252              	.LFE144:
 1254              	 .align 1
 1255              	 .syntax unified
 1256              	 .thumb
 1257              	 .thumb_func
 1258              	 .fpu softvfp
 1260              	genclk_disable:
 1261              	.LFB145:
 145:../../../platform/common/services/clock/sam4l/genclk.h **** 
 146:../../../platform/common/services/clock/sam4l/genclk.h **** static inline void genclk_disable(uint32_t id)
 147:../../../platform/common/services/clock/sam4l/genclk.h **** {
 1262              	 .loc 7 147 0
 1263              	 .cfi_startproc
 1264              	 
 1265              	 
 1266              	 
 1267 04a4 80B4     	 push {r7}
 1268              	.LCFI90:
 1269              	 .cfi_def_cfa_offset 4
 1270              	 .cfi_offset 7,-4
 1271 04a6 83B0     	 sub sp,sp,#12
 1272              	.LCFI91:
 1273              	 .cfi_def_cfa_offset 16
 1274 04a8 00AF     	 add r7,sp,#0
 1275              	.LCFI92:
 1276              	 .cfi_def_cfa_register 7
 1277 04aa 7860     	 str r0,[r7,#4]
 148:../../../platform/common/services/clock/sam4l/genclk.h **** 	SCIF->SCIF_GCCTRL[id].SCIF_GCCTRL = 0;
 1278              	 .loc 7 148 0
 1279 04ac 054A     	 ldr r2,.L90
 1280 04ae 7B68     	 ldr r3,[r7,#4]
 1281 04b0 1C33     	 adds r3,r3,#28
 1282 04b2 9B00     	 lsls r3,r3,#2
 1283 04b4 1344     	 add r3,r3,r2
 1284 04b6 0022     	 movs r2,#0
 1285 04b8 5A60     	 str r2,[r3,#4]
 149:../../../platform/common/services/clock/sam4l/genclk.h **** }
 1286              	 .loc 7 149 0
 1287 04ba 00BF     	 nop
 1288 04bc 0C37     	 adds r7,r7,#12
 1289              	.LCFI93:
 1290              	 .cfi_def_cfa_offset 4
 1291 04be BD46     	 mov sp,r7
 1292              	.LCFI94:
 1293              	 .cfi_def_cfa_register 13
 1294              	 
 1295 04c0 80BC     	 pop {r7}
 1296              	.LCFI95:
 1297              	 .cfi_restore 7
 1298              	 .cfi_def_cfa_offset 0
 1299 04c2 7047     	 bx lr
 1300              	.L91:
 1301              	 .align 2
 1302              	.L90:
 1303 04c4 00080E40 	 .word 1074661376
 1304              	 .cfi_endproc
 1305              	.LFE145:
 1307              	 .align 1
 1308              	 .syntax unified
 1309              	 .thumb
 1310              	 .thumb_func
 1311              	 .fpu softvfp
 1313              	genclk_enable_source:
 1314              	.LFB146:
 150:../../../platform/common/services/clock/sam4l/genclk.h **** 
 151:../../../platform/common/services/clock/sam4l/genclk.h **** static inline void genclk_enable_source(enum genclk_source src)
 152:../../../platform/common/services/clock/sam4l/genclk.h **** {
 1315              	 .loc 7 152 0
 1316              	 .cfi_startproc
 1317              	 
 1318              	 
 1319 04c8 80B5     	 push {r7,lr}
 1320              	.LCFI96:
 1321              	 .cfi_def_cfa_offset 8
 1322              	 .cfi_offset 7,-8
 1323              	 .cfi_offset 14,-4
 1324 04ca 82B0     	 sub sp,sp,#8
 1325              	.LCFI97:
 1326              	 .cfi_def_cfa_offset 16
 1327 04cc 00AF     	 add r7,sp,#0
 1328              	.LCFI98:
 1329              	 .cfi_def_cfa_register 7
 1330 04ce 0346     	 mov r3,r0
 1331 04d0 FB71     	 strb r3,[r7,#7]
 153:../../../platform/common/services/clock/sam4l/genclk.h **** 	switch (src) {
 1332              	 .loc 7 153 0
 1333 04d2 FB79     	 ldrb r3,[r7,#7]
 1334 04d4 102B     	 cmp r3,#16
 1335 04d6 00F28D80 	 bhi .L111
 1336 04da 01A2     	 adr r2,.L95
 1337 04dc 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1338              	 .p2align 2
 1339              	.L95:
 1340 04e0 F5050000 	 .word .L111+1
 1341 04e4 25050000 	 .word .L96+1
 1342 04e8 C5050000 	 .word .L97+1
 1343 04ec CD050000 	 .word .L98+1
 1344 04f0 45050000 	 .word .L99+1
 1345 04f4 65050000 	 .word .L100+1
 1346 04f8 85050000 	 .word .L101+1
 1347 04fc F5050000 	 .word .L111+1
 1348 0500 F5050000 	 .word .L111+1
 1349 0504 F5050000 	 .word .L111+1
 1350 0508 F5050000 	 .word .L111+1
 1351 050c F5050000 	 .word .L111+1
 1352 0510 F5050000 	 .word .L111+1
 1353 0514 A5050000 	 .word .L102+1
 1354 0518 F5050000 	 .word .L111+1
 1355 051c 25050000 	 .word .L96+1
 1356 0520 ED050000 	 .word .L103+1
 1357              	 .p2align 1
 1358              	.L96:
 154:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_RCSYS:
 155:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_CLK_CPU:
 156:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_CLK_HSB:
 157:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_CLK_PBA:
 158:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_CLK_PBB:
 159:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_CLK_PBC:
 160:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_CLK_PBD:
 161:../../../platform/common/services/clock/sam4l/genclk.h **** 		// Nothing to do
 162:../../../platform/common/services/clock/sam4l/genclk.h **** 		break;
 163:../../../platform/common/services/clock/sam4l/genclk.h **** 
 164:../../../platform/common/services/clock/sam4l/genclk.h **** #ifdef BOARD_OSC32_HZ
 165:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_OSC32K:
 166:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_CLK_1K: // The 1K linked on OSC32K
 167:../../../platform/common/services/clock/sam4l/genclk.h **** 		if (!osc_is_ready(OSC_ID_OSC32)) {
 1359              	 .loc 7 167 0
 1360 0524 0120     	 movs r0,#1
 1361 0526 FFF7EBFD 	 bl osc_is_ready
 1362 052a 0346     	 mov r3,r0
 1363 052c 83F00103 	 eor r3,r3,#1
 1364 0530 DBB2     	 uxtb r3,r3
 1365 0532 002B     	 cmp r3,#0
 1366 0534 60D0     	 beq .L112
 168:../../../platform/common/services/clock/sam4l/genclk.h **** 			osc_enable(OSC_ID_OSC32);
 1367              	 .loc 7 168 0
 1368 0536 0120     	 movs r0,#1
 1369 0538 FFF7A4FD 	 bl osc_enable
 169:../../../platform/common/services/clock/sam4l/genclk.h **** 			osc_wait_ready(OSC_ID_OSC32);
 1370              	 .loc 7 169 0
 1371 053c 0120     	 movs r0,#1
 1372 053e FFF77BFE 	 bl osc_wait_ready
 170:../../../platform/common/services/clock/sam4l/genclk.h **** 		}
 171:../../../platform/common/services/clock/sam4l/genclk.h **** 		break;
 1373              	 .loc 7 171 0
 1374 0542 59E0     	 b .L112
 1375              	.L99:
 172:../../../platform/common/services/clock/sam4l/genclk.h **** #endif
 173:../../../platform/common/services/clock/sam4l/genclk.h **** 
 174:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_RC80M:
 175:../../../platform/common/services/clock/sam4l/genclk.h **** 		if (!osc_is_ready(OSC_ID_RC80M)) {
 1376              	 .loc 7 175 0
 1377 0544 0320     	 movs r0,#3
 1378 0546 FFF7DBFD 	 bl osc_is_ready
 1379 054a 0346     	 mov r3,r0
 1380 054c 83F00103 	 eor r3,r3,#1
 1381 0550 DBB2     	 uxtb r3,r3
 1382 0552 002B     	 cmp r3,#0
 1383 0554 52D0     	 beq .L113
 176:../../../platform/common/services/clock/sam4l/genclk.h **** 			osc_enable(OSC_ID_RC80M);
 1384              	 .loc 7 176 0
 1385 0556 0320     	 movs r0,#3
 1386 0558 FFF794FD 	 bl osc_enable
 177:../../../platform/common/services/clock/sam4l/genclk.h **** 			osc_wait_ready(OSC_ID_RC80M);
 1387              	 .loc 7 177 0
 1388 055c 0320     	 movs r0,#3
 1389 055e FFF76BFE 	 bl osc_wait_ready
 178:../../../platform/common/services/clock/sam4l/genclk.h **** 		}
 179:../../../platform/common/services/clock/sam4l/genclk.h **** 		break;
 1390              	 .loc 7 179 0
 1391 0562 4BE0     	 b .L113
 1392              	.L100:
 180:../../../platform/common/services/clock/sam4l/genclk.h **** 
 181:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_RCFAST:
 182:../../../platform/common/services/clock/sam4l/genclk.h **** 		if (!osc_is_ready(OSC_ID_RCFAST)) {
 1393              	 .loc 7 182 0
 1394 0564 0420     	 movs r0,#4
 1395 0566 FFF7CBFD 	 bl osc_is_ready
 1396 056a 0346     	 mov r3,r0
 1397 056c 83F00103 	 eor r3,r3,#1
 1398 0570 DBB2     	 uxtb r3,r3
 1399 0572 002B     	 cmp r3,#0
 1400 0574 44D0     	 beq .L114
 183:../../../platform/common/services/clock/sam4l/genclk.h **** 			osc_enable(OSC_ID_RCFAST);
 1401              	 .loc 7 183 0
 1402 0576 0420     	 movs r0,#4
 1403 0578 FFF784FD 	 bl osc_enable
 184:../../../platform/common/services/clock/sam4l/genclk.h **** 			osc_wait_ready(OSC_ID_RCFAST);
 1404              	 .loc 7 184 0
 1405 057c 0420     	 movs r0,#4
 1406 057e FFF75BFE 	 bl osc_wait_ready
 185:../../../platform/common/services/clock/sam4l/genclk.h **** 		}
 186:../../../platform/common/services/clock/sam4l/genclk.h **** 		break;
 1407              	 .loc 7 186 0
 1408 0582 3DE0     	 b .L114
 1409              	.L101:
 187:../../../platform/common/services/clock/sam4l/genclk.h **** 
 188:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_RC1M:
 189:../../../platform/common/services/clock/sam4l/genclk.h **** 		if (!osc_is_ready(OSC_ID_RC1M)) {
 1410              	 .loc 7 189 0
 1411 0584 0520     	 movs r0,#5
 1412 0586 FFF7BBFD 	 bl osc_is_ready
 1413 058a 0346     	 mov r3,r0
 1414 058c 83F00103 	 eor r3,r3,#1
 1415 0590 DBB2     	 uxtb r3,r3
 1416 0592 002B     	 cmp r3,#0
 1417 0594 36D0     	 beq .L115
 190:../../../platform/common/services/clock/sam4l/genclk.h **** 			osc_enable(OSC_ID_RC1M);
 1418              	 .loc 7 190 0
 1419 0596 0520     	 movs r0,#5
 1420 0598 FFF774FD 	 bl osc_enable
 191:../../../platform/common/services/clock/sam4l/genclk.h **** 			osc_wait_ready(OSC_ID_RC1M);
 1421              	 .loc 7 191 0
 1422 059c 0520     	 movs r0,#5
 1423 059e FFF74BFE 	 bl osc_wait_ready
 192:../../../platform/common/services/clock/sam4l/genclk.h **** 		}
 193:../../../platform/common/services/clock/sam4l/genclk.h **** 		break;
 1424              	 .loc 7 193 0
 1425 05a2 2FE0     	 b .L115
 1426              	.L102:
 194:../../../platform/common/services/clock/sam4l/genclk.h **** 
 195:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_RC32K:
 196:../../../platform/common/services/clock/sam4l/genclk.h **** 		if (!osc_is_ready(OSC_ID_RC32K)) {
 1427              	 .loc 7 196 0
 1428 05a4 0220     	 movs r0,#2
 1429 05a6 FFF7ABFD 	 bl osc_is_ready
 1430 05aa 0346     	 mov r3,r0
 1431 05ac 83F00103 	 eor r3,r3,#1
 1432 05b0 DBB2     	 uxtb r3,r3
 1433 05b2 002B     	 cmp r3,#0
 1434 05b4 28D0     	 beq .L116
 197:../../../platform/common/services/clock/sam4l/genclk.h **** 			osc_enable(OSC_ID_RC32K);
 1435              	 .loc 7 197 0
 1436 05b6 0220     	 movs r0,#2
 1437 05b8 FFF764FD 	 bl osc_enable
 198:../../../platform/common/services/clock/sam4l/genclk.h **** 			osc_wait_ready(OSC_ID_RC32K);
 1438              	 .loc 7 198 0
 1439 05bc 0220     	 movs r0,#2
 1440 05be FFF73BFE 	 bl osc_wait_ready
 199:../../../platform/common/services/clock/sam4l/genclk.h **** 		}
 200:../../../platform/common/services/clock/sam4l/genclk.h **** 		break;
 1441              	 .loc 7 200 0
 1442 05c2 21E0     	 b .L116
 1443              	.L97:
 201:../../../platform/common/services/clock/sam4l/genclk.h **** 
 202:../../../platform/common/services/clock/sam4l/genclk.h **** #ifdef CONFIG_DFLL0_SOURCE
 203:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_DFLL:
 204:../../../platform/common/services/clock/sam4l/genclk.h **** 		dfll_enable_config_defaults(0);
 1444              	 .loc 7 204 0
 1445 05c4 0020     	 movs r0,#0
 1446 05c6 144B     	 ldr r3,.L118
 1447 05c8 9847     	 blx r3
 1448              	.LVL7:
 205:../../../platform/common/services/clock/sam4l/genclk.h **** 		break;
 1449              	 .loc 7 205 0
 1450 05ca 20E0     	 b .L104
 1451              	.L98:
 206:../../../platform/common/services/clock/sam4l/genclk.h **** #endif
 207:../../../platform/common/services/clock/sam4l/genclk.h **** 
 208:../../../platform/common/services/clock/sam4l/genclk.h **** #ifdef BOARD_OSC0_HZ
 209:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_OSC0:
 210:../../../platform/common/services/clock/sam4l/genclk.h **** 		if (!osc_is_ready(OSC_ID_OSC0)) {
 1452              	 .loc 7 210 0
 1453 05cc 0020     	 movs r0,#0
 1454 05ce FFF797FD 	 bl osc_is_ready
 1455 05d2 0346     	 mov r3,r0
 1456 05d4 83F00103 	 eor r3,r3,#1
 1457 05d8 DBB2     	 uxtb r3,r3
 1458 05da 002B     	 cmp r3,#0
 1459 05dc 16D0     	 beq .L117
 211:../../../platform/common/services/clock/sam4l/genclk.h **** 			osc_enable(OSC_ID_OSC0);
 1460              	 .loc 7 211 0
 1461 05de 0020     	 movs r0,#0
 1462 05e0 FFF750FD 	 bl osc_enable
 212:../../../platform/common/services/clock/sam4l/genclk.h **** 			osc_wait_ready(OSC_ID_OSC0);
 1463              	 .loc 7 212 0
 1464 05e4 0020     	 movs r0,#0
 1465 05e6 FFF727FE 	 bl osc_wait_ready
 213:../../../platform/common/services/clock/sam4l/genclk.h **** 		}
 214:../../../platform/common/services/clock/sam4l/genclk.h **** 		break;
 1466              	 .loc 7 214 0
 1467 05ea 0FE0     	 b .L117
 1468              	.L103:
 215:../../../platform/common/services/clock/sam4l/genclk.h **** #endif
 216:../../../platform/common/services/clock/sam4l/genclk.h **** 
 217:../../../platform/common/services/clock/sam4l/genclk.h **** # ifdef CONFIG_PLL0_SOURCE
 218:../../../platform/common/services/clock/sam4l/genclk.h **** 	case GENCLK_SRC_PLL0: {
 219:../../../platform/common/services/clock/sam4l/genclk.h **** 		pll_enable_config_defaults(0);
 1469              	 .loc 7 219 0
 1470 05ec 0020     	 movs r0,#0
 1471 05ee FFF7CAFE 	 bl pll_enable_config_defaults
 220:../../../platform/common/services/clock/sam4l/genclk.h **** 		break;
 1472              	 .loc 7 220 0
 1473 05f2 0CE0     	 b .L104
 1474              	.L111:
 221:../../../platform/common/services/clock/sam4l/genclk.h **** 	}
 222:../../../platform/common/services/clock/sam4l/genclk.h **** # endif
 223:../../../platform/common/services/clock/sam4l/genclk.h **** 
 224:../../../platform/common/services/clock/sam4l/genclk.h **** 	default:
 225:../../../platform/common/services/clock/sam4l/genclk.h **** 		Assert(false);
 226:../../../platform/common/services/clock/sam4l/genclk.h **** 		break;
 1475              	 .loc 7 226 0
 1476 05f4 00BF     	 nop
 1477 05f6 0AE0     	 b .L104
 1478              	.L112:
 171:../../../platform/common/services/clock/sam4l/genclk.h **** #endif
 1479              	 .loc 7 171 0
 1480 05f8 00BF     	 nop
 1481 05fa 08E0     	 b .L104
 1482              	.L113:
 179:../../../platform/common/services/clock/sam4l/genclk.h **** 
 1483              	 .loc 7 179 0
 1484 05fc 00BF     	 nop
 1485 05fe 06E0     	 b .L104
 1486              	.L114:
 186:../../../platform/common/services/clock/sam4l/genclk.h **** 
 1487              	 .loc 7 186 0
 1488 0600 00BF     	 nop
 1489 0602 04E0     	 b .L104
 1490              	.L115:
 193:../../../platform/common/services/clock/sam4l/genclk.h **** 
 1491              	 .loc 7 193 0
 1492 0604 00BF     	 nop
 1493 0606 02E0     	 b .L104
 1494              	.L116:
 200:../../../platform/common/services/clock/sam4l/genclk.h **** 
 1495              	 .loc 7 200 0
 1496 0608 00BF     	 nop
 1497 060a 00E0     	 b .L104
 1498              	.L117:
 214:../../../platform/common/services/clock/sam4l/genclk.h **** #endif
 1499              	 .loc 7 214 0
 1500 060c 00BF     	 nop
 1501              	.L104:
 227:../../../platform/common/services/clock/sam4l/genclk.h **** 	}
 228:../../../platform/common/services/clock/sam4l/genclk.h **** }
 1502              	 .loc 7 228 0
 1503 060e 00BF     	 nop
 1504 0610 0837     	 adds r7,r7,#8
 1505              	.LCFI99:
 1506              	 .cfi_def_cfa_offset 8
 1507 0612 BD46     	 mov sp,r7
 1508              	.LCFI100:
 1509              	 .cfi_def_cfa_register 13
 1510              	 
 1511 0614 80BD     	 pop {r7,pc}
 1512              	.L119:
 1513 0616 00BF     	 .align 2
 1514              	.L118:
 1515 0618 00000000 	 .word dfll_enable_config_defaults
 1516              	 .cfi_endproc
 1517              	.LFE146:
 1519              	 .align 1
 1520              	 .syntax unified
 1521              	 .thumb
 1522              	 .thumb_func
 1523              	 .fpu softvfp
 1525              	genclk_enable_config:
 1526              	.LFB147:
 1527              	 .file 8 "../../../platform/common/services/clock/genclk.h"
   1:../../../platform/common/services/clock/genclk.h **** /**
   2:../../../platform/common/services/clock/genclk.h ****  * \file
   3:../../../platform/common/services/clock/genclk.h ****  *
   4:../../../platform/common/services/clock/genclk.h ****  * \brief Generic clock management
   5:../../../platform/common/services/clock/genclk.h ****  *
   6:../../../platform/common/services/clock/genclk.h ****  * Copyright (c) 2010-2014 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/genclk.h ****  *
   8:../../../platform/common/services/clock/genclk.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/genclk.h ****  *
  10:../../../platform/common/services/clock/genclk.h ****  * \page License
  11:../../../platform/common/services/clock/genclk.h ****  *
  12:../../../platform/common/services/clock/genclk.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/genclk.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/genclk.h ****  *
  15:../../../platform/common/services/clock/genclk.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/genclk.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/genclk.h ****  *
  18:../../../platform/common/services/clock/genclk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/genclk.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/genclk.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/genclk.h ****  *
  22:../../../platform/common/services/clock/genclk.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/genclk.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/genclk.h ****  *
  25:../../../platform/common/services/clock/genclk.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/genclk.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/genclk.h ****  *
  28:../../../platform/common/services/clock/genclk.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/genclk.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/genclk.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/genclk.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/genclk.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/genclk.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/genclk.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/genclk.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/genclk.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/genclk.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/genclk.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/genclk.h ****  *
  40:../../../platform/common/services/clock/genclk.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/genclk.h ****  *
  42:../../../platform/common/services/clock/genclk.h ****  */
  43:../../../platform/common/services/clock/genclk.h **** #ifndef CLK_GENCLK_H_INCLUDED
  44:../../../platform/common/services/clock/genclk.h **** #define CLK_GENCLK_H_INCLUDED
  45:../../../platform/common/services/clock/genclk.h **** 
  46:../../../platform/common/services/clock/genclk.h **** #include "parts.h"
  47:../../../platform/common/services/clock/genclk.h **** 
  48:../../../platform/common/services/clock/genclk.h **** #if SAM3S
  49:../../../platform/common/services/clock/genclk.h **** # include "sam3s/genclk.h"
  50:../../../platform/common/services/clock/genclk.h **** #elif SAM3U
  51:../../../platform/common/services/clock/genclk.h **** # include "sam3u/genclk.h"
  52:../../../platform/common/services/clock/genclk.h **** #elif SAM3N
  53:../../../platform/common/services/clock/genclk.h **** # include "sam3n/genclk.h"
  54:../../../platform/common/services/clock/genclk.h **** #elif SAM3XA
  55:../../../platform/common/services/clock/genclk.h **** # include "sam3x/genclk.h"
  56:../../../platform/common/services/clock/genclk.h **** #elif SAM4S
  57:../../../platform/common/services/clock/genclk.h **** # include "sam4s/genclk.h"
  58:../../../platform/common/services/clock/genclk.h **** #elif SAM4L
  59:../../../platform/common/services/clock/genclk.h **** # include "sam4l/genclk.h"
  60:../../../platform/common/services/clock/genclk.h **** #elif SAM4E
  61:../../../platform/common/services/clock/genclk.h **** # include "sam4e/genclk.h"
  62:../../../platform/common/services/clock/genclk.h **** #elif SAM4N
  63:../../../platform/common/services/clock/genclk.h **** # include "sam4n/genclk.h"
  64:../../../platform/common/services/clock/genclk.h **** #elif SAM4C
  65:../../../platform/common/services/clock/genclk.h **** # include "sam4c/genclk.h"
  66:../../../platform/common/services/clock/genclk.h **** #elif SAM4CM
  67:../../../platform/common/services/clock/genclk.h **** # include "sam4cm/genclk.h"
  68:../../../platform/common/services/clock/genclk.h **** #elif SAM4CP
  69:../../../platform/common/services/clock/genclk.h **** # include "sam4cp/genclk.h"
  70:../../../platform/common/services/clock/genclk.h **** #elif SAMG
  71:../../../platform/common/services/clock/genclk.h **** # include "samg/genclk.h"
  72:../../../platform/common/services/clock/genclk.h **** #elif (UC3A0 || UC3A1)
  73:../../../platform/common/services/clock/genclk.h **** # include "uc3a0_a1/genclk.h"
  74:../../../platform/common/services/clock/genclk.h **** #elif UC3A3
  75:../../../platform/common/services/clock/genclk.h **** # include "uc3a3_a4/genclk.h"
  76:../../../platform/common/services/clock/genclk.h **** #elif UC3B
  77:../../../platform/common/services/clock/genclk.h **** # include "uc3b0_b1/genclk.h"
  78:../../../platform/common/services/clock/genclk.h **** #elif UC3C
  79:../../../platform/common/services/clock/genclk.h **** # include "uc3c/genclk.h"
  80:../../../platform/common/services/clock/genclk.h **** #elif UC3D
  81:../../../platform/common/services/clock/genclk.h **** # include "uc3d/genclk.h"
  82:../../../platform/common/services/clock/genclk.h **** #elif UC3L
  83:../../../platform/common/services/clock/genclk.h **** # include "uc3l/genclk.h"
  84:../../../platform/common/services/clock/genclk.h **** #else
  85:../../../platform/common/services/clock/genclk.h **** # error Unsupported chip type
  86:../../../platform/common/services/clock/genclk.h **** #endif
  87:../../../platform/common/services/clock/genclk.h **** 
  88:../../../platform/common/services/clock/genclk.h **** /**
  89:../../../platform/common/services/clock/genclk.h ****  * \ingroup clk_group
  90:../../../platform/common/services/clock/genclk.h ****  * \defgroup genclk_group Generic Clock Management
  91:../../../platform/common/services/clock/genclk.h ****  *
  92:../../../platform/common/services/clock/genclk.h ****  * Generic clocks are configurable clocks which run outside the system
  93:../../../platform/common/services/clock/genclk.h ****  * clock domain. They are often connected to peripherals which have an
  94:../../../platform/common/services/clock/genclk.h ****  * asynchronous component running independently of the bus clock, e.g.
  95:../../../platform/common/services/clock/genclk.h ****  * USB controllers, low-power timers and RTCs, etc.
  96:../../../platform/common/services/clock/genclk.h ****  *
  97:../../../platform/common/services/clock/genclk.h ****  * Note that not all platforms have support for generic clocks; on such
  98:../../../platform/common/services/clock/genclk.h ****  * platforms, this API will not be available.
  99:../../../platform/common/services/clock/genclk.h ****  *
 100:../../../platform/common/services/clock/genclk.h ****  * @{
 101:../../../platform/common/services/clock/genclk.h ****  */
 102:../../../platform/common/services/clock/genclk.h **** 
 103:../../../platform/common/services/clock/genclk.h **** /**
 104:../../../platform/common/services/clock/genclk.h ****  * \def GENCLK_DIV_MAX
 105:../../../platform/common/services/clock/genclk.h ****  * \brief Maximum divider supported by the generic clock implementation
 106:../../../platform/common/services/clock/genclk.h ****  */
 107:../../../platform/common/services/clock/genclk.h **** /**
 108:../../../platform/common/services/clock/genclk.h ****  * \enum genclk_source
 109:../../../platform/common/services/clock/genclk.h ****  * \brief Generic clock source ID
 110:../../../platform/common/services/clock/genclk.h ****  *
 111:../../../platform/common/services/clock/genclk.h ****  * Each generic clock may be generated from a different clock source.
 112:../../../platform/common/services/clock/genclk.h ****  * These are the available alternatives provided by the chip.
 113:../../../platform/common/services/clock/genclk.h ****  */
 114:../../../platform/common/services/clock/genclk.h **** 
 115:../../../platform/common/services/clock/genclk.h **** //! \name Generic clock configuration
 116:../../../platform/common/services/clock/genclk.h **** //@{
 117:../../../platform/common/services/clock/genclk.h **** /**
 118:../../../platform/common/services/clock/genclk.h ****  * \struct genclk_config
 119:../../../platform/common/services/clock/genclk.h ****  * \brief Hardware representation of a set of generic clock parameters
 120:../../../platform/common/services/clock/genclk.h ****  */
 121:../../../platform/common/services/clock/genclk.h **** /**
 122:../../../platform/common/services/clock/genclk.h ****  * \fn void genclk_config_defaults(struct genclk_config *cfg,
 123:../../../platform/common/services/clock/genclk.h ****  *              unsigned int id)
 124:../../../platform/common/services/clock/genclk.h ****  * \brief Initialize \a cfg to the default configuration for the clock
 125:../../../platform/common/services/clock/genclk.h ****  * identified by \a id.
 126:../../../platform/common/services/clock/genclk.h ****  */
 127:../../../platform/common/services/clock/genclk.h **** /**
 128:../../../platform/common/services/clock/genclk.h ****  * \fn void genclk_config_read(struct genclk_config *cfg, unsigned int id)
 129:../../../platform/common/services/clock/genclk.h ****  * \brief Read the currently active configuration of the clock
 130:../../../platform/common/services/clock/genclk.h ****  * identified by \a id into \a cfg.
 131:../../../platform/common/services/clock/genclk.h ****  */
 132:../../../platform/common/services/clock/genclk.h **** /**
 133:../../../platform/common/services/clock/genclk.h ****  * \fn void genclk_config_write(const struct genclk_config *cfg,
 134:../../../platform/common/services/clock/genclk.h ****  *              unsigned int id)
 135:../../../platform/common/services/clock/genclk.h ****  * \brief Activate the configuration \a cfg on the clock identified by
 136:../../../platform/common/services/clock/genclk.h ****  * \a id.
 137:../../../platform/common/services/clock/genclk.h ****  */
 138:../../../platform/common/services/clock/genclk.h **** /**
 139:../../../platform/common/services/clock/genclk.h ****  * \fn void genclk_config_set_source(struct genclk_config *cfg,
 140:../../../platform/common/services/clock/genclk.h ****  *              enum genclk_source src)
 141:../../../platform/common/services/clock/genclk.h ****  * \brief Select a new source clock \a src in configuration \a cfg.
 142:../../../platform/common/services/clock/genclk.h ****  */
 143:../../../platform/common/services/clock/genclk.h **** /**
 144:../../../platform/common/services/clock/genclk.h ****  * \fn void genclk_config_set_divider(struct genclk_config *cfg,
 145:../../../platform/common/services/clock/genclk.h ****  *              unsigned int divider)
 146:../../../platform/common/services/clock/genclk.h ****  * \brief Set a new \a divider in configuration \a cfg.
 147:../../../platform/common/services/clock/genclk.h ****  */
 148:../../../platform/common/services/clock/genclk.h **** /**
 149:../../../platform/common/services/clock/genclk.h ****  * \fn void genclk_enable_source(enum genclk_source src)
 150:../../../platform/common/services/clock/genclk.h ****  * \brief Enable the source clock \a src used by a generic clock.
 151:../../../platform/common/services/clock/genclk.h ****  */
 152:../../../platform/common/services/clock/genclk.h ****  //@}
 153:../../../platform/common/services/clock/genclk.h **** 
 154:../../../platform/common/services/clock/genclk.h **** //! \name Enabling and disabling Generic Clocks
 155:../../../platform/common/services/clock/genclk.h **** //@{
 156:../../../platform/common/services/clock/genclk.h **** /**
 157:../../../platform/common/services/clock/genclk.h ****  * \fn void genclk_enable(const struct genclk_config *cfg, unsigned int id)
 158:../../../platform/common/services/clock/genclk.h ****  * \brief Activate the configuration \a cfg on the clock identified by
 159:../../../platform/common/services/clock/genclk.h ****  * \a id and enable it.
 160:../../../platform/common/services/clock/genclk.h ****  */
 161:../../../platform/common/services/clock/genclk.h **** /**
 162:../../../platform/common/services/clock/genclk.h ****  * \fn void genclk_disable(unsigned int id)
 163:../../../platform/common/services/clock/genclk.h ****  * \brief Disable the generic clock identified by \a id.
 164:../../../platform/common/services/clock/genclk.h ****  */
 165:../../../platform/common/services/clock/genclk.h **** //@}
 166:../../../platform/common/services/clock/genclk.h **** 
 167:../../../platform/common/services/clock/genclk.h **** /**
 168:../../../platform/common/services/clock/genclk.h ****  * \brief Enable the configuration defined by \a src and \a divider
 169:../../../platform/common/services/clock/genclk.h ****  * for the generic clock identified by \a id.
 170:../../../platform/common/services/clock/genclk.h ****  *
 171:../../../platform/common/services/clock/genclk.h ****  * \param id      The ID of the generic clock.
 172:../../../platform/common/services/clock/genclk.h ****  * \param src     The source clock of the generic clock.
 173:../../../platform/common/services/clock/genclk.h ****  * \param divider The divider used to generate the generic clock.
 174:../../../platform/common/services/clock/genclk.h ****  */
 175:../../../platform/common/services/clock/genclk.h **** static inline void genclk_enable_config(unsigned int id, enum genclk_source src, unsigned int divid
 176:../../../platform/common/services/clock/genclk.h **** {
 1528              	 .loc 8 176 0
 1529              	 .cfi_startproc
 1530              	 
 1531              	 
 1532 061c 80B5     	 push {r7,lr}
 1533              	.LCFI101:
 1534              	 .cfi_def_cfa_offset 8
 1535              	 .cfi_offset 7,-8
 1536              	 .cfi_offset 14,-4
 1537 061e 86B0     	 sub sp,sp,#24
 1538              	.LCFI102:
 1539              	 .cfi_def_cfa_offset 32
 1540 0620 00AF     	 add r7,sp,#0
 1541              	.LCFI103:
 1542              	 .cfi_def_cfa_register 7
 1543 0622 F860     	 str r0,[r7,#12]
 1544 0624 0B46     	 mov r3,r1
 1545 0626 7A60     	 str r2,[r7,#4]
 1546 0628 FB72     	 strb r3,[r7,#11]
 177:../../../platform/common/services/clock/genclk.h **** 	struct genclk_config gcfg;
 178:../../../platform/common/services/clock/genclk.h **** 
 179:../../../platform/common/services/clock/genclk.h **** 	genclk_config_defaults(&gcfg, id);
 1547              	 .loc 8 179 0
 1548 062a 07F11403 	 add r3,r7,#20
 1549 062e F968     	 ldr r1,[r7,#12]
 1550 0630 1846     	 mov r0,r3
 1551 0632 FFF7D9FE 	 bl genclk_config_defaults
 180:../../../platform/common/services/clock/genclk.h **** 	genclk_enable_source(src);
 1552              	 .loc 8 180 0
 1553 0636 FB7A     	 ldrb r3,[r7,#11]
 1554 0638 1846     	 mov r0,r3
 1555 063a FFF745FF 	 bl genclk_enable_source
 181:../../../platform/common/services/clock/genclk.h **** 	genclk_config_set_source(&gcfg, src);
 1556              	 .loc 8 181 0
 1557 063e FA7A     	 ldrb r2,[r7,#11]
 1558 0640 07F11403 	 add r3,r7,#20
 1559 0644 1146     	 mov r1,r2
 1560 0646 1846     	 mov r0,r3
 1561 0648 FFF7DBFE 	 bl genclk_config_set_source
 182:../../../platform/common/services/clock/genclk.h **** 	genclk_config_set_divider(&gcfg, divider);
 1562              	 .loc 8 182 0
 1563 064c 07F11403 	 add r3,r7,#20
 1564 0650 7968     	 ldr r1,[r7,#4]
 1565 0652 1846     	 mov r0,r3
 1566 0654 FFF7EBFE 	 bl genclk_config_set_divider
 183:../../../platform/common/services/clock/genclk.h **** 	genclk_enable(&gcfg, id);
 1567              	 .loc 8 183 0
 1568 0658 07F11403 	 add r3,r7,#20
 1569 065c F968     	 ldr r1,[r7,#12]
 1570 065e 1846     	 mov r0,r3
 1571 0660 FFF709FF 	 bl genclk_enable
 184:../../../platform/common/services/clock/genclk.h **** }
 1572              	 .loc 8 184 0
 1573 0664 00BF     	 nop
 1574 0666 1837     	 adds r7,r7,#24
 1575              	.LCFI104:
 1576              	 .cfi_def_cfa_offset 8
 1577 0668 BD46     	 mov sp,r7
 1578              	.LCFI105:
 1579              	 .cfi_def_cfa_register 13
 1580              	 
 1581 066a 80BD     	 pop {r7,pc}
 1582              	 .cfi_endproc
 1583              	.LFE147:
 1585              	 .align 1
 1586              	 .syntax unified
 1587              	 .thumb
 1588              	 .thumb_func
 1589              	 .fpu softvfp
 1591              	sysclk_get_main_hz:
 1592              	.LFB164:
 1593              	 .file 9 "../../../platform/common/services/clock/sam4l/sysclk.h"
   1:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
   2:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \file
   3:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
   4:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Chip-specific system clock management functions
   5:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
   6:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Copyright (c) 2012-2014 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
   8:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  10:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \page License
  11:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  12:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/sam4l/sysclk.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  15:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  18:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  22:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  25:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  28:../../../platform/common/services/clock/sam4l/sysclk.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/sam4l/sysclk.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/sam4l/sysclk.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/sam4l/sysclk.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/sam4l/sysclk.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/sam4l/sysclk.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/sam4l/sysclk.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/sam4l/sysclk.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/sam4l/sysclk.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/sam4l/sysclk.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/sam4l/sysclk.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  40:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  42:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
  43:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CHIP_SYSCLK_H_INCLUDED
  44:../../../platform/common/services/clock/sam4l/sysclk.h **** #define CHIP_SYSCLK_H_INCLUDED
  45:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  46:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <board.h>
  47:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  48:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __cplusplus
  49:../../../platform/common/services/clock/sam4l/sysclk.h **** extern "C" {
  50:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
  51:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  52:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
  53:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \page sysclk_quickstart Quick Start Guide for the System Clock Management service (SAM4L)
  54:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  55:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This is the quick start guide for the \ref sysclk_group "System Clock Management"
  56:../../../platform/common/services/clock/sam4l/sysclk.h ****  * service, with step-by-step instructions on how to configure and use the service for
  57:../../../platform/common/services/clock/sam4l/sysclk.h ****  * specific use cases.
  58:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  59:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \section sysclk_quickstart_usecases System Clock Management use cases
  60:../../../platform/common/services/clock/sam4l/sysclk.h ****  * - \ref sysclk_quickstart_basic
  61:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  62:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \section sysclk_quickstart_basic Basic usage of the System Clock Management service
  63:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This section will present a basic use case for the System Clock Management service.
  64:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This use case will configure the main system clock to 48MHz, using an internal DFLL
  65:../../../platform/common/services/clock/sam4l/sysclk.h ****  * module to multiply the frequency of a crystal attached to the microcontroller. The
  66:../../../platform/common/services/clock/sam4l/sysclk.h ****  * peripheral bus clocks are scaled down from the speed of the main system clock.
  67:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  68:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_prereq Prerequisites
  69:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  - None
  70:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  71:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_setup_steps Initialization code
  72:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Add to the application initialization code:
  73:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \code
  74:../../../platform/common/services/clock/sam4l/sysclk.h **** 	sysclk_init();
  75:../../../platform/common/services/clock/sam4l/sysclk.h **** \endcode
  76:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  77:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_setup_steps_workflow Workflow
  78:../../../platform/common/services/clock/sam4l/sysclk.h ****  * -# Configure the system clocks according to the settings in conf_clock.h:
  79:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    \code sysclk_init(); \endcode
  80:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  81:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_example_code Example code
  82:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   Add or uncomment the following in your conf_clock.h header file, commenting out all other
  83:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   definitions of the same symbol(s):
  84:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \code
  85:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_SOURCE        SYSCLK_SRC_DFLL0
  86:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  87:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   // Fdfll = (Fclk * DFLL_mul) / DFLL_div
  88:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_DFLL0_SOURCE         GENCLK_SRC_OSC32K
  89:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_DFLL0_FREQ           48000000UL
  90:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_DFLL0_MUL            (CONFIG_DFLL0_FREQ / BOARD_OSC32_HZ)
  91:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_DFLL0_DIV            1
  92:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  93:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   // Fbus = Fsys / (2 ^ BUS_div)
  94:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_CPU_DIV       0
  95:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_PBA_DIV       1
  96:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_PBB_DIV       1
  97:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_PBC_DIV       1
  98:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_PBD_DIV       1
  99:../../../platform/common/services/clock/sam4l/sysclk.h **** \endcode
 100:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 101:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_example_workflow Workflow
 102:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  -# Configure the main system clock to use the output of the DFLL0 module as its source:
 103:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \code #define CONFIG_SYSCLK_SOURCE      SYSCLK_SRC_DFLL0 \endcode
 104:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  -# Configure the DFLL0 module to use external crystal oscillator OSC0 as its source:
 105:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \code #define CONFIG_DFLL0_SOURCE       GENCLK_SRC_OSC32K \endcode
 106:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  -# Configure the DFLL0 module to multiply the external oscillator OSC0 frequency up to 48MHz:
 107:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \code
 108:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_DFLL0_FREQ           48000000UL
 109:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_DFLL0_MUL            (CONFIG_DFLL0_FREQ / BOARD_OSC32_HZ)
 110:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_DFLL0_DIV            1
 111:../../../platform/common/services/clock/sam4l/sysclk.h **** \endcode
 112:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \note For user boards, \c BOARD_OSC0_HZ should be defined in the board \c conf_board.h configu
 113:../../../platform/common/services/clock/sam4l/sysclk.h ****  *         file as the frequency of the crystal attached to OSC0.
 114:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  -# Configure the main clock to run at the full 48MHz, scale the peripheral busses to run at one
 115:../../../platform/common/services/clock/sam4l/sysclk.h ****  *     half (2 to the power of 1) of the system clock speed:
 116:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    \code
 117:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_CPU_DIV       0
 118:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_PBA_DIV       1
 119:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_PBB_DIV       1
 120:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_PBC_DIV       1
 121:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_PBD_DIV       1
 122:../../../platform/common/services/clock/sam4l/sysclk.h **** \endcode
 123:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    \note Some dividers are powers of two, while others are integer division factors. Refer to th
 124:../../../platform/common/services/clock/sam4l/sysclk.h ****  *          formulas in the conf_clock.h template commented above each division define.
 125:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 126:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 127:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 128:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 129:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \weakgroup sysclk_group
 130:../../../platform/common/services/clock/sam4l/sysclk.h ****  * @{
 131:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 132:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 133:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name System clock source
 134:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 135:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_RCSYS        0     //!< System RC oscillator
 136:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_OSC0         1     //!< Oscillator 0
 137:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_PLL0         2     //!< Phase Locked Loop 0
 138:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_DFLL         3     //!< Digital Frequency Locked Loop
 139:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_RC80M        4     //!< 80 MHz RC oscillator
 140:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_RCFAST       5     //!< 4-8-12 MHz RC oscillator
 141:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_RC1M         6     //!< 1 MHz RC oscillator
 142:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 143:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 144:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name USB Clock Sources
 145:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 146:../../../platform/common/services/clock/sam4l/sysclk.h **** #define USBCLK_SRC_OSC0         GENCLK_SRC_OSC0     //!< Use OSC0
 147:../../../platform/common/services/clock/sam4l/sysclk.h **** #define USBCLK_SRC_PLL0         GENCLK_SRC_PLL0     //!< Use PLL0
 148:../../../platform/common/services/clock/sam4l/sysclk.h **** #define USBCLK_SRC_DFLL         GENCLK_SRC_DFLL     //!< Use DFLL
 149:../../../platform/common/services/clock/sam4l/sysclk.h **** #define USBCLK_SRC_GCLKIN0      GENCLK_SRC_GCLKIN0  //!< Use GCLKIN0
 150:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 151:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 152:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Bus index of maskable module clocks
 153:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 154:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_CPU               0
 155:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_HSB               1
 156:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_PBA               2
 157:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_PBB               3
 158:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_PBC               4
 159:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_PBD               5
 160:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 161:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 162:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the CPU clock
 163:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 164:../../../platform/common/services/clock/sam4l/sysclk.h **** //! On-Chip Debug system
 165:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_OCD              0
 166:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 167:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 168:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the HSB clock
 169:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 170:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PDCA memory interface
 171:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PDCA_HSB         0
 172:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Flash data interface
 173:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HFLASHC_DATA     1
 174:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HRAMC data interface
 175:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HRAMC1_DATA      2
 176:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USBC DMA and FIFO interface
 177:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USBC_DATA        3
 178:../../../platform/common/services/clock/sam4l/sysclk.h **** //! CRCCU data interface
 179:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_CRCCU_DATA       4
 180:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB<->PBA bridge
 181:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PBA_BRIDGE       5
 182:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB<->PBB bridge
 183:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PBB_BRIDGE       6
 184:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB<->PBC bridge
 185:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PBC_BRIDGE       7
 186:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB<->PBD bridge
 187:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PBD_BRIDGE       8
 188:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Advanced Encryption Standard
 189:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_AESA_HSB         9
 190:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 191:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 192:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the PBA clock
 193:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 194:../../../platform/common/services/clock/sam4l/sysclk.h **** //! IISC Controller
 195:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_IISC             0
 196:../../../platform/common/services/clock/sam4l/sysclk.h **** //! SPI Controller
 197:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SPI              1
 198:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Timer/Counter 0
 199:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TC0              2
 200:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Timer/Counter 1
 201:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TC1              3
 202:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Master 0
 203:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIM0            4
 204:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Slave 0
 205:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIS0            5
 206:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Master 1
 207:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIM1            6
 208:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Slave 1
 209:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIS1            7
 210:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USART 0
 211:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USART0           8
 212:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USART 1
 213:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USART1           9
 214:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USART 2
 215:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USART2           10
 216:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USART 3
 217:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USART3           11
 218:../../../platform/common/services/clock/sam4l/sysclk.h **** //! A/D Converter
 219:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_ADCIFE           12
 220:../../../platform/common/services/clock/sam4l/sysclk.h **** //! D/A Converter
 221:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_DACC             13
 222:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Analog Comparator
 223:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_ACIFC            14
 224:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Glue Logic Controller
 225:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_GLOC             15
 226:../../../platform/common/services/clock/sam4l/sysclk.h **** //! ABDACB Controller
 227:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_ABDACB           16
 228:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TRNG Controller
 229:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TRNG             17
 230:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PARC Controller
 231:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PARC             18
 232:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Capacitive Touch
 233:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_CATB             19
 234:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Master 2
 235:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIM2            21
 236:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Master 3
 237:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIM3            22
 238:../../../platform/common/services/clock/sam4l/sysclk.h **** //! LCD Controller
 239:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_LCDCA            23
 240:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 241:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 242:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 243:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the PBB clock
 244:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 245:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Flash Controller registers
 246:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HFLASHC_REGS     0
 247:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HRAMC Controller registers
 248:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HRAMC1_REGS      1
 249:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB Matrix configuration
 250:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HMATRIX          2
 251:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PDCA peripheral bus interface
 252:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PDCA_PB          3
 253:../../../platform/common/services/clock/sam4l/sysclk.h **** //! CRCCU registers
 254:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_CRCCU_REGS       4
 255:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USBC registers
 256:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USBC_REGS        5
 257:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PEVC Controller
 258:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PEVC             6
 259:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 260:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 261:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the PBC clock
 262:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 263:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PM configuration
 264:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PM               0
 265:../../../platform/common/services/clock/sam4l/sysclk.h **** //! CHIPID Controller
 266:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_CHIPID           1
 267:../../../platform/common/services/clock/sam4l/sysclk.h **** //! System Control Interface
 268:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SCIF             2
 269:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Frequency Meter
 270:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_FREQM            3
 271:../../../platform/common/services/clock/sam4l/sysclk.h **** //! General-Purpose I/O
 272:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_GPIO             4
 273:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 274:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 275:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the PBD clock
 276:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 277:../../../platform/common/services/clock/sam4l/sysclk.h **** //! BPM configuration
 278:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_BPM              0
 279:../../../platform/common/services/clock/sam4l/sysclk.h **** //! BSCIF configuration
 280:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_BSCIF            1
 281:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Asynchronous Timer
 282:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_AST              2
 283:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Watchdog Timer
 284:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_WDT              3
 285:../../../platform/common/services/clock/sam4l/sysclk.h **** //! External Interrupt Controller
 286:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_EIC              4
 287:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PICOUART
 288:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PICOUART         5
 289:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 290:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 291:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Divided clock mask derived from the PBA clock
 292:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 293:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TIMER_CLOCK2 mask
 294:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_TIMER_CLOCK2     (1u << 0)
 295:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TIMER_CLOCK3 mask
 296:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_TIMER_CLOCK3     (1u << 2)
 297:../../../platform/common/services/clock/sam4l/sysclk.h **** //! CLK_USART/DIV mask
 298:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_CLK_USART        (1u << 2)
 299:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TIMER_CLOCK4 mask
 300:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_TIMER_CLOCK4     (1u << 4)
 301:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TIMER_CLOCK5 mask
 302:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_TIMER_CLOCK5     (1u << 6)
 303:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Bitfield mask
 304:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_Msk              (0x7Fu << 0)
 305:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 306:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 307:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef __ASSEMBLY__
 308:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 309:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <compiler.h>
 310:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <dfll.h>
 311:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <osc.h>
 312:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <pll.h>
 313:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <genclk.h>
 314:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 315:../../../platform/common/services/clock/sam4l/sysclk.h **** // Use the slow clock (RCOSC) with no prescaling if config was empty.
 316:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_SOURCE
 317:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_SOURCE    SYSCLK_SRC_RCSYS
 318:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_SOURCE */
 319:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 320:../../../platform/common/services/clock/sam4l/sysclk.h **** /*
 321:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Enable PicoCache for flash access by default.
 322:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 0: disable PicoCache, 1: enable PicoCache.
 323:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 324:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_HCACHE_ENABLE
 325:../../../platform/common/services/clock/sam4l/sysclk.h **** #define CONFIG_HCACHE_ENABLE          1
 326:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 327:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 328:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 329:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_CPU_DIV
 330:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the CPU clock frequency by
 331:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_CPU\_DIV}\f$
 332:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 333:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the CPU clock frequency is not divided.
 334:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 335:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 336:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 337:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_CPU_DIV
 338:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_CPU_DIV   0
 339:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_CPU_DIV */
 340:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 341:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 342:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_HSBMASK
 343:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the HSB clocks enabled at power-on after the
 344:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all HSB clocks are left
 345:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 346:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 347:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 348:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all HSB clocks are left enabled.
 349:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 350:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 351:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 352:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 353:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_HSBMASK
 354:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 355:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 356:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 357:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_PBA_DIV
 358:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the PBA clock frequency by
 359:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_PBA\_DIV}\f$
 360:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 361:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the PBA clock frequency is not divided.
 362:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 363:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 364:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 365:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_PBA_DIV
 366:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_PBA_DIV   0
 367:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_PBA_DIV */
 368:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 369:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 370:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_PBB_DIV
 371:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the PBB clock frequency by
 372:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_PBB\_DIV}\f$
 373:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 374:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the PBB clock frequency is not divided.
 375:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 376:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 377:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 378:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_PBB_DIV
 379:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_PBB_DIV   0
 380:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_PBB_DIV */
 381:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 382:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 383:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_PBC_DIV
 384:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the PBC clock frequency by
 385:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_PBC\_DIV}\f$
 386:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 387:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the PBC clock frequency is not divided.
 388:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 389:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 390:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 391:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_PBC_DIV
 392:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_PBC_DIV   0
 393:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_PBC_DIV */
 394:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 395:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 396:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_PBD_DIV
 397:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the PBD clock frequency by
 398:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_PBD\_DIV}\f$
 399:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 400:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the PBD clock frequency is not divided.
 401:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 402:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 403:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 404:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_PBD_DIV
 405:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_PBD_DIV   0
 406:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_PBD_DIV */
 407:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 408:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 409:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_CPUMASK
 410:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the CPU clocks enabled at power-on after the
 411:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all CPU clocks are left
 412:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 413:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 414:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 415:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all CPU clocks are left enabled.
 416:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 417:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 418:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 419:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 420:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_CPUMASK
 421:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 422:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 423:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 424:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_PBAMASK
 425:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the PBA clocks enabled at power-on after the
 426:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all PBA clocks are left
 427:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 428:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 429:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 430:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all PBA clocks are left enabled.
 431:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 432:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 433:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 434:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 435:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_PBAMASK
 436:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 437:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 438:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 439:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_PBBMASK
 440:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the PBB clocks enabled at power-on after the
 441:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all PBB clocks are left
 442:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 443:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 444:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 445:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all PBB clocks are left enabled.
 446:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 447:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 448:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 449:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 450:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_PBBMASK
 451:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 452:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 453:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 454:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_PBCMASK
 455:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the PBC clocks enabled at power-on after the
 456:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all PBC clocks are left
 457:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 458:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 459:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 460:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all PBC clocks are left enabled.
 461:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 462:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 463:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 464:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 465:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_PBCMASK
 466:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 467:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 468:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 469:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_PBDMASK
 470:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the PBD clocks enabled at power-on after the
 471:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all PBD clocks are left
 472:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 473:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 474:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 475:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all PBD clocks are left enabled.
 476:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 477:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 478:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 479:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 480:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_PBDMASK
 481:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 482:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 483:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 484:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_USBCLK_SOURCE
 485:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the USB generic clock source
 486:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 487:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Sets the clock source to use for the USB. The source must also be properly
 488:../../../platform/common/services/clock/sam4l/sysclk.h ****  * configured.
 489:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 490:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Define this to one of the \c USBCLK_SRC_xxx settings. Leave it undefined if
 491:../../../platform/common/services/clock/sam4l/sysclk.h ****  * USB is not required.
 492:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 493:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 494:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_USBCLK_SOURCE
 495:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 496:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 497:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 498:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_USBCLK_DIV
 499:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the USB generic clock divider setting
 500:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 501:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Sets the clock division for the USB generic clock. If a USB clock source is
 502:../../../platform/common/services/clock/sam4l/sysclk.h ****  * selected with CONFIG_USBCLK_SOURCE, this configuration symbol must also be
 503:../../../platform/common/services/clock/sam4l/sysclk.h ****  * defined.
 504:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 505:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Define this as any value that does not exceed \c GENCLK_DIV_MAX, and which
 506:../../../platform/common/services/clock/sam4l/sysclk.h ****  * will give a 48 MHz clock frequency from the selected source.
 507:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 508:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 509:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_USBCLK_DIV
 510:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 511:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 512:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 513:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \name Querying the system clock and its derived clocks
 514:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 515:../../../platform/common/services/clock/sam4l/sysclk.h ****  * The following functions may be used to query the current frequency of
 516:../../../platform/common/services/clock/sam4l/sysclk.h ****  * the system clock and the CPU and bus clocks derived from it.
 517:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclk_get_main_hz() and sysclk_get_cpu_hz() can be assumed to be
 518:../../../platform/common/services/clock/sam4l/sysclk.h ****  * available on all platforms, although some platforms may define
 519:../../../platform/common/services/clock/sam4l/sysclk.h ****  * additional accessors for various chip-internal bus clocks. These are
 520:../../../platform/common/services/clock/sam4l/sysclk.h ****  * usually not intended to be queried directly by generic code.
 521:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 522:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 523:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 524:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 525:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Return the current rate in Hz of the main system clock
 526:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 527:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \todo This function assumes that the main clock source never changes
 528:../../../platform/common/services/clock/sam4l/sysclk.h ****  * once it's been set up, and that PLL0 always runs at the compile-time
 529:../../../platform/common/services/clock/sam4l/sysclk.h ****  * configured default rate. While this is probably the most common
 530:../../../platform/common/services/clock/sam4l/sysclk.h ****  * configuration, which we want to support as a special case for
 531:../../../platform/common/services/clock/sam4l/sysclk.h ****  * performance reasons, we will at some point need to support more
 532:../../../platform/common/services/clock/sam4l/sysclk.h ****  * dynamic setups as well.
 533:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 534:../../../platform/common/services/clock/sam4l/sysclk.h **** #if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
 535:../../../platform/common/services/clock/sam4l/sysclk.h **** extern bool sysclk_initialized;
 536:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 537:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline uint32_t sysclk_get_main_hz(void)
 538:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 1594              	 .loc 9 538 0
 1595              	 .cfi_startproc
 1596              	 
 1597              	 
 1598              	 
 1599 066c 80B4     	 push {r7}
 1600              	.LCFI106:
 1601              	 .cfi_def_cfa_offset 4
 1602              	 .cfi_offset 7,-4
 1603 066e 00AF     	 add r7,sp,#0
 1604              	.LCFI107:
 1605              	 .cfi_def_cfa_register 7
 539:../../../platform/common/services/clock/sam4l/sysclk.h **** #if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
 540:../../../platform/common/services/clock/sam4l/sysclk.h **** 	if (!sysclk_initialized ) {
 541:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return OSC_RCSYS_NOMINAL_HZ;
 542:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 543:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 544:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 545:../../../platform/common/services/clock/sam4l/sysclk.h **** 	if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RCSYS) {
 546:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return OSC_RCSYS_NOMINAL_HZ;
 547:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 548:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 549:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef BOARD_OSC0_HZ
 550:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_OSC0) {
 551:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return BOARD_OSC0_HZ;
 1606              	 .loc 9 551 0
 1607 0670 024B     	 ldr r3,.L123
 552:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 553:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 554:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 555:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef CONFIG_PLL0_SOURCE
 556:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLL0) {
 557:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return pll_get_default_rate(0);
 558:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 559:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 560:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 561:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef CONFIG_DFLL0_SOURCE
 562:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_DFLL) {
 563:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return dfll_get_default_rate(0);
 564:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 565:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 566:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 567:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RC80M) {
 568:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return OSC_RC80M_NOMINAL_HZ;
 569:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 570:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 571:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RCFAST) {
 572:../../../platform/common/services/clock/sam4l/sysclk.h **** 		if (CONFIG_RCFAST_FRANGE == 2) {
 573:../../../platform/common/services/clock/sam4l/sysclk.h **** 			return OSC_RCFAST12M_NOMINAL_HZ;
 574:../../../platform/common/services/clock/sam4l/sysclk.h **** 		} else if (CONFIG_RCFAST_FRANGE == 1) {
 575:../../../platform/common/services/clock/sam4l/sysclk.h **** 			return OSC_RCFAST8M_NOMINAL_HZ;
 576:../../../platform/common/services/clock/sam4l/sysclk.h **** 		} else {
 577:../../../platform/common/services/clock/sam4l/sysclk.h **** 			return OSC_RCFAST4M_NOMINAL_HZ;
 578:../../../platform/common/services/clock/sam4l/sysclk.h **** 		}
 579:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 580:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 581:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RC1M) {
 582:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return OSC_RC1M_NOMINAL_HZ;
 583:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 584:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 585:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 586:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else {
 587:../../../platform/common/services/clock/sam4l/sysclk.h **** 		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
 588:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return 0;
 589:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 590:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 1608              	 .loc 9 590 0
 1609 0672 1846     	 mov r0,r3
 1610 0674 BD46     	 mov sp,r7
 1611              	.LCFI108:
 1612              	 .cfi_def_cfa_register 13
 1613              	 
 1614 0676 80BC     	 pop {r7}
 1615              	.LCFI109:
 1616              	 .cfi_restore 7
 1617              	 .cfi_def_cfa_offset 0
 1618 0678 7047     	 bx lr
 1619              	.L124:
 1620 067a 00BF     	 .align 2
 1621              	.L123:
 1622 067c 001BB700 	 .word 12000000
 1623              	 .cfi_endproc
 1624              	.LFE164:
 1626              	 .align 1
 1627              	 .syntax unified
 1628              	 .thumb
 1629              	 .thumb_func
 1630              	 .fpu softvfp
 1632              	sysclk_get_cpu_hz:
 1633              	.LFB165:
 591:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 592:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 593:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Return the current rate in Hz of the CPU clock
 594:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 595:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \todo This function assumes that the CPU always runs at the system
 596:../../../platform/common/services/clock/sam4l/sysclk.h ****  * clock frequency. We want to support at least two more scenarios:
 597:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Fixed CPU/bus clock dividers (config symbols) and dynamic CPU/bus
 598:../../../platform/common/services/clock/sam4l/sysclk.h ****  * clock dividers (which may change at run time). Ditto for all the bus
 599:../../../platform/common/services/clock/sam4l/sysclk.h ****  * clocks.
 600:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 601:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 602:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 603:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline uint32_t sysclk_get_cpu_hz(void)
 604:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 1634              	 .loc 9 604 0
 1635              	 .cfi_startproc
 1636              	 
 1637              	 
 1638 0680 80B5     	 push {r7,lr}
 1639              	.LCFI110:
 1640              	 .cfi_def_cfa_offset 8
 1641              	 .cfi_offset 7,-8
 1642              	 .cfi_offset 14,-4
 1643 0682 00AF     	 add r7,sp,#0
 1644              	.LCFI111:
 1645              	 .cfi_def_cfa_register 7
 605:../../../platform/common/services/clock/sam4l/sysclk.h **** 	return sysclk_get_main_hz() >> CONFIG_SYSCLK_CPU_DIV;
 1646              	 .loc 9 605 0
 1647 0684 FFF7F2FF 	 bl sysclk_get_main_hz
 1648 0688 0346     	 mov r3,r0
 606:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 1649              	 .loc 9 606 0
 1650 068a 1846     	 mov r0,r3
 1651 068c 80BD     	 pop {r7,pc}
 1652              	 .cfi_endproc
 1653              	.LFE165:
 1655              	 .align 1
 1656              	 .syntax unified
 1657              	 .thumb
 1658              	 .thumb_func
 1659              	 .fpu softvfp
 1661              	sysclk_get_pba_hz:
 1662              	.LFB167:
 607:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 608:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 609:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Return the current rate in Hz of the High-Speed Bus clock
 610:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 611:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \return Frequency of the High Speed Peripheral Bus clock, in Hz.
 612:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 613:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline uint32_t sysclk_get_hsb_hz(void)
 614:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 615:../../../platform/common/services/clock/sam4l/sysclk.h **** 	return sysclk_get_main_hz() >> CONFIG_SYSCLK_CPU_DIV;
 616:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 617:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 618:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 619:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Return the current rate in Hz of the Peripheral Bus A clock
 620:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 621:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \return Frequency of the Peripheral Bus A clock, in Hz.
 622:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 623:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline uint32_t sysclk_get_pba_hz(void)
 624:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 1663              	 .loc 9 624 0
 1664              	 .cfi_startproc
 1665              	 
 1666              	 
 1667 068e 80B5     	 push {r7,lr}
 1668              	.LCFI112:
 1669              	 .cfi_def_cfa_offset 8
 1670              	 .cfi_offset 7,-8
 1671              	 .cfi_offset 14,-4
 1672 0690 00AF     	 add r7,sp,#0
 1673              	.LCFI113:
 1674              	 .cfi_def_cfa_register 7
 625:../../../platform/common/services/clock/sam4l/sysclk.h **** 	return sysclk_get_main_hz() >> CONFIG_SYSCLK_PBA_DIV;
 1675              	 .loc 9 625 0
 1676 0692 FFF7EBFF 	 bl sysclk_get_main_hz
 1677 0696 0346     	 mov r3,r0
 626:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 1678              	 .loc 9 626 0
 1679 0698 1846     	 mov r0,r3
 1680 069a 80BD     	 pop {r7,pc}
 1681              	 .cfi_endproc
 1682              	.LFE167:
 1684              	 .align 1
 1685              	 .syntax unified
 1686              	 .thumb
 1687              	 .thumb_func
 1688              	 .fpu softvfp
 1690              	sysclk_get_pbb_hz:
 1691              	.LFB168:
 627:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 628:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 629:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Return the current rate in Hz of the Peripheral Bus B clock
 630:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 631:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \return Frequency of the Peripheral Bus B clock, in Hz.
 632:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 633:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline uint32_t sysclk_get_pbb_hz(void)
 634:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 1692              	 .loc 9 634 0
 1693              	 .cfi_startproc
 1694              	 
 1695              	 
 1696 069c 80B5     	 push {r7,lr}
 1697              	.LCFI114:
 1698              	 .cfi_def_cfa_offset 8
 1699              	 .cfi_offset 7,-8
 1700              	 .cfi_offset 14,-4
 1701 069e 00AF     	 add r7,sp,#0
 1702              	.LCFI115:
 1703              	 .cfi_def_cfa_register 7
 635:../../../platform/common/services/clock/sam4l/sysclk.h **** 	return sysclk_get_main_hz() >> CONFIG_SYSCLK_PBB_DIV;
 1704              	 .loc 9 635 0
 1705 06a0 FFF7E4FF 	 bl sysclk_get_main_hz
 1706 06a4 0346     	 mov r3,r0
 636:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 1707              	 .loc 9 636 0
 1708 06a6 1846     	 mov r0,r3
 1709 06a8 80BD     	 pop {r7,pc}
 1710              	 .cfi_endproc
 1711              	.LFE168:
 1713              	 .align 1
 1714              	 .syntax unified
 1715              	 .thumb
 1716              	 .thumb_func
 1717              	 .fpu softvfp
 1719              	sysclk_get_pbc_hz:
 1720              	.LFB169:
 637:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 638:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 639:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Return the current rate in Hz of the Peripheral Bus C clock
 640:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 641:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \return Frequency of the Peripheral Bus C clock, in Hz.
 642:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 643:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline uint32_t sysclk_get_pbc_hz(void)
 644:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 1721              	 .loc 9 644 0
 1722              	 .cfi_startproc
 1723              	 
 1724              	 
 1725 06aa 80B5     	 push {r7,lr}
 1726              	.LCFI116:
 1727              	 .cfi_def_cfa_offset 8
 1728              	 .cfi_offset 7,-8
 1729              	 .cfi_offset 14,-4
 1730 06ac 00AF     	 add r7,sp,#0
 1731              	.LCFI117:
 1732              	 .cfi_def_cfa_register 7
 645:../../../platform/common/services/clock/sam4l/sysclk.h **** 	return sysclk_get_main_hz() >> CONFIG_SYSCLK_PBC_DIV;
 1733              	 .loc 9 645 0
 1734 06ae FFF7DDFF 	 bl sysclk_get_main_hz
 1735 06b2 0346     	 mov r3,r0
 646:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 1736              	 .loc 9 646 0
 1737 06b4 1846     	 mov r0,r3
 1738 06b6 80BD     	 pop {r7,pc}
 1739              	 .cfi_endproc
 1740              	.LFE169:
 1742              	 .align 1
 1743              	 .syntax unified
 1744              	 .thumb
 1745              	 .thumb_func
 1746              	 .fpu softvfp
 1748              	sysclk_get_pbd_hz:
 1749              	.LFB170:
 647:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 648:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 649:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Return the current rate in Hz of the Peripheral Bus D clock
 650:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 651:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \return Frequency of the Peripheral Bus D clock, in Hz.
 652:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 653:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline uint32_t sysclk_get_pbd_hz(void)
 654:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 1750              	 .loc 9 654 0
 1751              	 .cfi_startproc
 1752              	 
 1753              	 
 1754 06b8 80B5     	 push {r7,lr}
 1755              	.LCFI118:
 1756              	 .cfi_def_cfa_offset 8
 1757              	 .cfi_offset 7,-8
 1758              	 .cfi_offset 14,-4
 1759 06ba 00AF     	 add r7,sp,#0
 1760              	.LCFI119:
 1761              	 .cfi_def_cfa_register 7
 655:../../../platform/common/services/clock/sam4l/sysclk.h **** 	return sysclk_get_main_hz() >> CONFIG_SYSCLK_PBD_DIV;
 1762              	 .loc 9 655 0
 1763 06bc FFF7D6FF 	 bl sysclk_get_main_hz
 1764 06c0 0346     	 mov r3,r0
 656:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 1765              	 .loc 9 656 0
 1766 06c2 1846     	 mov r0,r3
 1767 06c4 80BD     	 pop {r7,pc}
 1768              	 .cfi_endproc
 1769              	.LFE170:
 1771              	 .align 1
 1772              	 .syntax unified
 1773              	 .thumb
 1774              	 .thumb_func
 1775              	 .fpu softvfp
 1777              	sysclk_enable_hsb_module:
 1778              	.LFB173:
 657:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 658:../../../platform/common/services/clock/sam4l/sysclk.h **** extern uint32_t sysclk_get_peripheral_bus_hz(const volatile void *module);
 659:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 660:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 661:../../../platform/common/services/clock/sam4l/sysclk.h **** extern void sysclk_priv_enable_module(uint32_t bus_id, uint32_t module_index);
 662:../../../platform/common/services/clock/sam4l/sysclk.h **** extern void sysclk_priv_disable_module(uint32_t bus_id, uint32_t module_index);
 663:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 664:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Enabling and disabling synchronous clocks
 665:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 666:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 667:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 668:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Enable a module clock derived from the CPU clock
 669:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \param module_index Index of the module clock in the CPUMASK register
 670:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 671:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline void sysclk_enable_cpu_module(uint32_t module_index)
 672:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 673:../../../platform/common/services/clock/sam4l/sysclk.h **** 	sysclk_priv_enable_module(PM_CLK_GRP_CPU, module_index);
 674:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 675:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 676:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 677:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Disable a module clock derived from the CPU clock
 678:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \param module_index Index of the module clock in the CPUMASK register
 679:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 680:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline void sysclk_disable_cpu_module(uint32_t module_index)
 681:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 682:../../../platform/common/services/clock/sam4l/sysclk.h **** 	sysclk_priv_disable_module(PM_CLK_GRP_CPU, module_index);
 683:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 684:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 685:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 686:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Enable a module clock derived from the HSB clock
 687:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \param module_index Index of the module clock in the HSBMASK register
 688:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 689:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline void sysclk_enable_hsb_module(uint32_t module_index)
 690:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 1779              	 .loc 9 690 0
 1780              	 .cfi_startproc
 1781              	 
 1782              	 
 1783 06c6 80B5     	 push {r7,lr}
 1784              	.LCFI120:
 1785              	 .cfi_def_cfa_offset 8
 1786              	 .cfi_offset 7,-8
 1787              	 .cfi_offset 14,-4
 1788 06c8 82B0     	 sub sp,sp,#8
 1789              	.LCFI121:
 1790              	 .cfi_def_cfa_offset 16
 1791 06ca 00AF     	 add r7,sp,#0
 1792              	.LCFI122:
 1793              	 .cfi_def_cfa_register 7
 1794 06cc 7860     	 str r0,[r7,#4]
 691:../../../platform/common/services/clock/sam4l/sysclk.h **** 	sysclk_priv_enable_module(PM_CLK_GRP_HSB, module_index);
 1795              	 .loc 9 691 0
 1796 06ce 7968     	 ldr r1,[r7,#4]
 1797 06d0 0120     	 movs r0,#1
 1798 06d2 FFF7FEFF 	 bl sysclk_priv_enable_module
 692:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 1799              	 .loc 9 692 0
 1800 06d6 00BF     	 nop
 1801 06d8 0837     	 adds r7,r7,#8
 1802              	.LCFI123:
 1803              	 .cfi_def_cfa_offset 8
 1804 06da BD46     	 mov sp,r7
 1805              	.LCFI124:
 1806              	 .cfi_def_cfa_register 13
 1807              	 
 1808 06dc 80BD     	 pop {r7,pc}
 1809              	 .cfi_endproc
 1810              	.LFE173:
 1812              	 .align 1
 1813              	 .syntax unified
 1814              	 .thumb
 1815              	 .thumb_func
 1816              	 .fpu softvfp
 1818              	sysclk_disable_hsb_module:
 1819              	.LFB174:
 693:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 694:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 695:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Disable a module clock derived from the HSB clock
 696:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \param module_index Index of the module clock in the HSBMASK register
 697:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 698:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline void sysclk_disable_hsb_module(uint32_t module_index)
 699:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 1820              	 .loc 9 699 0
 1821              	 .cfi_startproc
 1822              	 
 1823              	 
 1824 06de 80B5     	 push {r7,lr}
 1825              	.LCFI125:
 1826              	 .cfi_def_cfa_offset 8
 1827              	 .cfi_offset 7,-8
 1828              	 .cfi_offset 14,-4
 1829 06e0 82B0     	 sub sp,sp,#8
 1830              	.LCFI126:
 1831              	 .cfi_def_cfa_offset 16
 1832 06e2 00AF     	 add r7,sp,#0
 1833              	.LCFI127:
 1834              	 .cfi_def_cfa_register 7
 1835 06e4 7860     	 str r0,[r7,#4]
 700:../../../platform/common/services/clock/sam4l/sysclk.h **** 	sysclk_priv_disable_module(PM_CLK_GRP_HSB, module_index);
 1836              	 .loc 9 700 0
 1837 06e6 7968     	 ldr r1,[r7,#4]
 1838 06e8 0120     	 movs r0,#1
 1839 06ea FFF7FEFF 	 bl sysclk_priv_disable_module
 701:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 1840              	 .loc 9 701 0
 1841 06ee 00BF     	 nop
 1842 06f0 0837     	 adds r7,r7,#8
 1843              	.LCFI128:
 1844              	 .cfi_def_cfa_offset 8
 1845 06f2 BD46     	 mov sp,r7
 1846              	.LCFI129:
 1847              	 .cfi_def_cfa_register 13
 1848              	 
 1849 06f4 80BD     	 pop {r7,pc}
 1850              	 .cfi_endproc
 1851              	.LFE174:
 1853              	 .align 1
 1854              	 .syntax unified
 1855              	 .thumb
 1856              	 .thumb_func
 1857              	 .fpu softvfp
 1859              	sysclk_enable_pbc_module:
 1860              	.LFB175:
 702:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 703:../../../platform/common/services/clock/sam4l/sysclk.h **** extern void sysclk_enable_pba_module(uint32_t module_index);
 704:../../../platform/common/services/clock/sam4l/sysclk.h **** extern void sysclk_disable_pba_module(uint32_t module_index);
 705:../../../platform/common/services/clock/sam4l/sysclk.h **** extern void sysclk_enable_pbb_module(uint32_t module_index);
 706:../../../platform/common/services/clock/sam4l/sysclk.h **** extern void sysclk_disable_pbb_module(uint32_t module_index);
 707:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 708:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 709:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Enable a module clock derived from the PBC clock
 710:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \param module_index Index of the module clock in the PBAMASK register
 711:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 712:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline void sysclk_enable_pbc_module(uint32_t module_index)
 713:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 1861              	 .loc 9 713 0
 1862              	 .cfi_startproc
 1863              	 
 1864              	 
 1865 06f6 80B5     	 push {r7,lr}
 1866              	.LCFI130:
 1867              	 .cfi_def_cfa_offset 8
 1868              	 .cfi_offset 7,-8
 1869              	 .cfi_offset 14,-4
 1870 06f8 82B0     	 sub sp,sp,#8
 1871              	.LCFI131:
 1872              	 .cfi_def_cfa_offset 16
 1873 06fa 00AF     	 add r7,sp,#0
 1874              	.LCFI132:
 1875              	 .cfi_def_cfa_register 7
 1876 06fc 7860     	 str r0,[r7,#4]
 714:../../../platform/common/services/clock/sam4l/sysclk.h **** 	sysclk_priv_enable_module(PM_CLK_GRP_PBC, module_index);
 1877              	 .loc 9 714 0
 1878 06fe 7968     	 ldr r1,[r7,#4]
 1879 0700 0420     	 movs r0,#4
 1880 0702 FFF7FEFF 	 bl sysclk_priv_enable_module
 715:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 1881              	 .loc 9 715 0
 1882 0706 00BF     	 nop
 1883 0708 0837     	 adds r7,r7,#8
 1884              	.LCFI133:
 1885              	 .cfi_def_cfa_offset 8
 1886 070a BD46     	 mov sp,r7
 1887              	.LCFI134:
 1888              	 .cfi_def_cfa_register 13
 1889              	 
 1890 070c 80BD     	 pop {r7,pc}
 1891              	 .cfi_endproc
 1892              	.LFE175:
 1894              	 .align 1
 1895              	 .syntax unified
 1896              	 .thumb
 1897              	 .thumb_func
 1898              	 .fpu softvfp
 1900              	sysclk_disable_pbc_module:
 1901              	.LFB176:
 716:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 717:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 718:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Disable a module clock derived from the PBC clock
 719:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \param module_index Index of the module clock in the PBAMASK register
 720:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 721:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline void sysclk_disable_pbc_module(uint32_t module_index)
 722:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 1902              	 .loc 9 722 0
 1903              	 .cfi_startproc
 1904              	 
 1905              	 
 1906 070e 80B5     	 push {r7,lr}
 1907              	.LCFI135:
 1908              	 .cfi_def_cfa_offset 8
 1909              	 .cfi_offset 7,-8
 1910              	 .cfi_offset 14,-4
 1911 0710 82B0     	 sub sp,sp,#8
 1912              	.LCFI136:
 1913              	 .cfi_def_cfa_offset 16
 1914 0712 00AF     	 add r7,sp,#0
 1915              	.LCFI137:
 1916              	 .cfi_def_cfa_register 7
 1917 0714 7860     	 str r0,[r7,#4]
 723:../../../platform/common/services/clock/sam4l/sysclk.h **** 	sysclk_priv_disable_module(PM_CLK_GRP_PBC, module_index);
 1918              	 .loc 9 723 0
 1919 0716 7968     	 ldr r1,[r7,#4]
 1920 0718 0420     	 movs r0,#4
 1921 071a FFF7FEFF 	 bl sysclk_priv_disable_module
 724:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 1922              	 .loc 9 724 0
 1923 071e 00BF     	 nop
 1924 0720 0837     	 adds r7,r7,#8
 1925              	.LCFI138:
 1926              	 .cfi_def_cfa_offset 8
 1927 0722 BD46     	 mov sp,r7
 1928              	.LCFI139:
 1929              	 .cfi_def_cfa_register 13
 1930              	 
 1931 0724 80BD     	 pop {r7,pc}
 1932              	 .cfi_endproc
 1933              	.LFE176:
 1935              	 .align 1
 1936              	 .syntax unified
 1937              	 .thumb
 1938              	 .thumb_func
 1939              	 .fpu softvfp
 1941              	sysclk_enable_pbd_module:
 1942              	.LFB177:
 725:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 726:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 727:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Enable a module clock derived from the PBD clock
 728:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \param module_index Index of the module clock in the PBAMASK register
 729:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 730:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline void sysclk_enable_pbd_module(uint32_t module_index)
 731:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 1943              	 .loc 9 731 0
 1944              	 .cfi_startproc
 1945              	 
 1946              	 
 1947 0726 80B5     	 push {r7,lr}
 1948              	.LCFI140:
 1949              	 .cfi_def_cfa_offset 8
 1950              	 .cfi_offset 7,-8
 1951              	 .cfi_offset 14,-4
 1952 0728 82B0     	 sub sp,sp,#8
 1953              	.LCFI141:
 1954              	 .cfi_def_cfa_offset 16
 1955 072a 00AF     	 add r7,sp,#0
 1956              	.LCFI142:
 1957              	 .cfi_def_cfa_register 7
 1958 072c 7860     	 str r0,[r7,#4]
 732:../../../platform/common/services/clock/sam4l/sysclk.h **** 	sysclk_priv_enable_module(PM_CLK_GRP_PBD, module_index);
 1959              	 .loc 9 732 0
 1960 072e 7968     	 ldr r1,[r7,#4]
 1961 0730 0520     	 movs r0,#5
 1962 0732 FFF7FEFF 	 bl sysclk_priv_enable_module
 733:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 1963              	 .loc 9 733 0
 1964 0736 00BF     	 nop
 1965 0738 0837     	 adds r7,r7,#8
 1966              	.LCFI143:
 1967              	 .cfi_def_cfa_offset 8
 1968 073a BD46     	 mov sp,r7
 1969              	.LCFI144:
 1970              	 .cfi_def_cfa_register 13
 1971              	 
 1972 073c 80BD     	 pop {r7,pc}
 1973              	 .cfi_endproc
 1974              	.LFE177:
 1976              	 .align 1
 1977              	 .syntax unified
 1978              	 .thumb
 1979              	 .thumb_func
 1980              	 .fpu softvfp
 1982              	sysclk_disable_pbd_module:
 1983              	.LFB178:
 734:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 735:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 736:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Disable a module clock derived from the PBD clock
 737:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \param module_index Index of the module clock in the PBAMASK register
 738:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 739:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline void sysclk_disable_pbd_module(uint32_t module_index)
 740:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 1984              	 .loc 9 740 0
 1985              	 .cfi_startproc
 1986              	 
 1987              	 
 1988 073e 80B5     	 push {r7,lr}
 1989              	.LCFI145:
 1990              	 .cfi_def_cfa_offset 8
 1991              	 .cfi_offset 7,-8
 1992              	 .cfi_offset 14,-4
 1993 0740 82B0     	 sub sp,sp,#8
 1994              	.LCFI146:
 1995              	 .cfi_def_cfa_offset 16
 1996 0742 00AF     	 add r7,sp,#0
 1997              	.LCFI147:
 1998              	 .cfi_def_cfa_register 7
 1999 0744 7860     	 str r0,[r7,#4]
 741:../../../platform/common/services/clock/sam4l/sysclk.h **** 	sysclk_priv_disable_module(PM_CLK_GRP_PBD, module_index);
 2000              	 .loc 9 741 0
 2001 0746 7968     	 ldr r1,[r7,#4]
 2002 0748 0520     	 movs r0,#5
 2003 074a FFF7FEFF 	 bl sysclk_priv_disable_module
 742:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 2004              	 .loc 9 742 0
 2005 074e 00BF     	 nop
 2006 0750 0837     	 adds r7,r7,#8
 2007              	.LCFI148:
 2008              	 .cfi_def_cfa_offset 8
 2009 0752 BD46     	 mov sp,r7
 2010              	.LCFI149:
 2011              	 .cfi_def_cfa_register 13
 2012              	 
 2013 0754 80BD     	 pop {r7,pc}
 2014              	 .cfi_endproc
 2015              	.LFE178:
 2017              	 .align 1
 2018              	 .syntax unified
 2019              	 .thumb
 2020              	 .thumb_func
 2021              	 .fpu softvfp
 2023              	sysclk_enable_pba_divmask:
 2024              	.LFB179:
 743:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 744:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 745:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Enable divided clock mask derived from the PBA clock
 746:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \param mask mask of the divided clock in the PBADIVMASK register
 747:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 748:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline void sysclk_enable_pba_divmask(uint32_t mask)
 749:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 2025              	 .loc 9 749 0
 2026              	 .cfi_startproc
 2027              	 
 2028              	 
 2029              	 
 2030 0756 80B4     	 push {r7}
 2031              	.LCFI150:
 2032              	 .cfi_def_cfa_offset 4
 2033              	 .cfi_offset 7,-4
 2034 0758 85B0     	 sub sp,sp,#20
 2035              	.LCFI151:
 2036              	 .cfi_def_cfa_offset 24
 2037 075a 00AF     	 add r7,sp,#0
 2038              	.LCFI152:
 2039              	 .cfi_def_cfa_register 7
 2040 075c 7860     	 str r0,[r7,#4]
 750:../../../platform/common/services/clock/sam4l/sysclk.h **** 	uint32_t temp_mask;
 751:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 752:../../../platform/common/services/clock/sam4l/sysclk.h **** 	temp_mask = PM->PM_PBADIVMASK;
 2041              	 .loc 9 752 0
 2042 075e 094B     	 ldr r3,.L142
 2043 0760 1B6C     	 ldr r3,[r3,#64]
 2044 0762 FB60     	 str r3,[r7,#12]
 753:../../../platform/common/services/clock/sam4l/sysclk.h **** 	temp_mask |= mask;
 2045              	 .loc 9 753 0
 2046 0764 FA68     	 ldr r2,[r7,#12]
 2047 0766 7B68     	 ldr r3,[r7,#4]
 2048 0768 1343     	 orrs r3,r3,r2
 2049 076a FB60     	 str r3,[r7,#12]
 754:../../../platform/common/services/clock/sam4l/sysclk.h **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 2050              	 .loc 9 754 0
 2051 076c 054B     	 ldr r3,.L142
 2052 076e 064A     	 ldr r2,.L142+4
 2053 0770 9A65     	 str r2,[r3,#88]
 755:../../../platform/common/services/clock/sam4l/sysclk.h **** 			| PM_UNLOCK_ADDR((uint32_t)&PM->PM_PBADIVMASK - (uint32_t)PM);
 756:../../../platform/common/services/clock/sam4l/sysclk.h **** 	PM->PM_PBADIVMASK = temp_mask;
 2054              	 .loc 9 756 0
 2055 0772 044A     	 ldr r2,.L142
 2056 0774 FB68     	 ldr r3,[r7,#12]
 2057 0776 1364     	 str r3,[r2,#64]
 757:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 2058              	 .loc 9 757 0
 2059 0778 00BF     	 nop
 2060 077a 1437     	 adds r7,r7,#20
 2061              	.LCFI153:
 2062              	 .cfi_def_cfa_offset 4
 2063 077c BD46     	 mov sp,r7
 2064              	.LCFI154:
 2065              	 .cfi_def_cfa_register 13
 2066              	 
 2067 077e 80BC     	 pop {r7}
 2068              	.LCFI155:
 2069              	 .cfi_restore 7
 2070              	 .cfi_def_cfa_offset 0
 2071 0780 7047     	 bx lr
 2072              	.L143:
 2073 0782 00BF     	 .align 2
 2074              	.L142:
 2075 0784 00000E40 	 .word 1074659328
 2076 0788 400000AA 	 .word -1442840512
 2077              	 .cfi_endproc
 2078              	.LFE179:
 2080              	 .align 1
 2081              	 .syntax unified
 2082              	 .thumb
 2083              	 .thumb_func
 2084              	 .fpu softvfp
 2086              	sysclk_disable_pba_divmask:
 2087              	.LFB180:
 758:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 759:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 760:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Disable divided clock mask derived from the PBA clock
 761:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \param mask mask of the divided clock in the PBADIVMASK register
 762:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 763:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline void sysclk_disable_pba_divmask(uint32_t mask)
 764:../../../platform/common/services/clock/sam4l/sysclk.h **** {
 2088              	 .loc 9 764 0
 2089              	 .cfi_startproc
 2090              	 
 2091              	 
 2092              	 
 2093 078c 80B4     	 push {r7}
 2094              	.LCFI156:
 2095              	 .cfi_def_cfa_offset 4
 2096              	 .cfi_offset 7,-4
 2097 078e 85B0     	 sub sp,sp,#20
 2098              	.LCFI157:
 2099              	 .cfi_def_cfa_offset 24
 2100 0790 00AF     	 add r7,sp,#0
 2101              	.LCFI158:
 2102              	 .cfi_def_cfa_register 7
 2103 0792 7860     	 str r0,[r7,#4]
 765:../../../platform/common/services/clock/sam4l/sysclk.h **** 	uint32_t temp_mask;
 766:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 767:../../../platform/common/services/clock/sam4l/sysclk.h **** 	temp_mask = PM->PM_PBADIVMASK;
 2104              	 .loc 9 767 0
 2105 0794 094B     	 ldr r3,.L145
 2106 0796 1B6C     	 ldr r3,[r3,#64]
 2107 0798 FB60     	 str r3,[r7,#12]
 768:../../../platform/common/services/clock/sam4l/sysclk.h **** 	temp_mask &= ~mask;
 2108              	 .loc 9 768 0
 2109 079a 7B68     	 ldr r3,[r7,#4]
 2110 079c DB43     	 mvns r3,r3
 2111 079e FA68     	 ldr r2,[r7,#12]
 2112 07a0 1340     	 ands r3,r3,r2
 2113 07a2 FB60     	 str r3,[r7,#12]
 769:../../../platform/common/services/clock/sam4l/sysclk.h **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 2114              	 .loc 9 769 0
 2115 07a4 054B     	 ldr r3,.L145
 2116 07a6 064A     	 ldr r2,.L145+4
 2117 07a8 9A65     	 str r2,[r3,#88]
 770:../../../platform/common/services/clock/sam4l/sysclk.h **** 			| PM_UNLOCK_ADDR((uint32_t)&PM->PM_PBADIVMASK - (uint32_t)PM);
 771:../../../platform/common/services/clock/sam4l/sysclk.h **** 	PM->PM_PBADIVMASK = temp_mask;
 2118              	 .loc 9 771 0
 2119 07aa 044A     	 ldr r2,.L145
 2120 07ac FB68     	 ldr r3,[r7,#12]
 2121 07ae 1364     	 str r3,[r2,#64]
 772:../../../platform/common/services/clock/sam4l/sysclk.h **** }
 2122              	 .loc 9 772 0
 2123 07b0 00BF     	 nop
 2124 07b2 1437     	 adds r7,r7,#20
 2125              	.LCFI159:
 2126              	 .cfi_def_cfa_offset 4
 2127 07b4 BD46     	 mov sp,r7
 2128              	.LCFI160:
 2129              	 .cfi_def_cfa_register 13
 2130              	 
 2131 07b6 80BC     	 pop {r7}
 2132              	.LCFI161:
 2133              	 .cfi_restore 7
 2134              	 .cfi_def_cfa_offset 0
 2135 07b8 7047     	 bx lr
 2136              	.L146:
 2137 07ba 00BF     	 .align 2
 2138              	.L145:
 2139 07bc 00000E40 	 .word 1074659328
 2140 07c0 400000AA 	 .word -1442840512
 2141              	 .cfi_endproc
 2142              	.LFE180:
 2144              	 .align 1
 2145              	 .global sysclk_priv_enable_module
 2146              	 .syntax unified
 2147              	 .thumb
 2148              	 .thumb_func
 2149              	 .fpu softvfp
 2151              	sysclk_priv_enable_module:
 2152              	.LFB182:
 2153              	 .file 10 "../../../platform/common/services/clock/sam4l/sysclk.c"
   1:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
   2:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \file
   3:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
   4:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief Chip-specific system clock management functions
   5:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
   6:../../../platform/common/services/clock/sam4l/sysclk.c ****  * Copyright (c) 2012-2014 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
   8:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \asf_license_start
   9:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
  10:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \page License
  11:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
  12:../../../platform/common/services/clock/sam4l/sysclk.c ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/sam4l/sysclk.c ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
  15:../../../platform/common/services/clock/sam4l/sysclk.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/sam4l/sysclk.c ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
  18:../../../platform/common/services/clock/sam4l/sysclk.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/sam4l/sysclk.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/sam4l/sysclk.c ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
  22:../../../platform/common/services/clock/sam4l/sysclk.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/sam4l/sysclk.c ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
  25:../../../platform/common/services/clock/sam4l/sysclk.c ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/sam4l/sysclk.c ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
  28:../../../platform/common/services/clock/sam4l/sysclk.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/sam4l/sysclk.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/sam4l/sysclk.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/sam4l/sysclk.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/sam4l/sysclk.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/sam4l/sysclk.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/sam4l/sysclk.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/sam4l/sysclk.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/sam4l/sysclk.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/sam4l/sysclk.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/sam4l/sysclk.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
  40:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \asf_license_stop
  41:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
  42:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
  43:../../../platform/common/services/clock/sam4l/sysclk.c **** 
  44:../../../platform/common/services/clock/sam4l/sysclk.c **** #include <compiler.h>
  45:../../../platform/common/services/clock/sam4l/sysclk.c **** #include <stdbool.h>
  46:../../../platform/common/services/clock/sam4l/sysclk.c **** #include <sysclk.h>
  47:../../../platform/common/services/clock/sam4l/sysclk.c **** #include <flashcalw.h>
  48:../../../platform/common/services/clock/sam4l/sysclk.c **** #include <bpm.h>
  49:../../../platform/common/services/clock/sam4l/sysclk.c **** #include <osc.h>
  50:../../../platform/common/services/clock/sam4l/sysclk.c **** 
  51:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
  52:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \weakgroup sysclk_group
  53:../../../platform/common/services/clock/sam4l/sysclk.c ****  * @{
  54:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
  55:../../../platform/common/services/clock/sam4l/sysclk.c **** 
  56:../../../platform/common/services/clock/sam4l/sysclk.c **** #if ((CONFIG_SYSCLK_CPU_DIV > CONFIG_SYSCLK_PBA_DIV) || \
  57:../../../platform/common/services/clock/sam4l/sysclk.c ****      (CONFIG_SYSCLK_CPU_DIV > CONFIG_SYSCLK_PBB_DIV) || \
  58:../../../platform/common/services/clock/sam4l/sysclk.c ****      (CONFIG_SYSCLK_CPU_DIV > CONFIG_SYSCLK_PBC_DIV) || \
  59:../../../platform/common/services/clock/sam4l/sysclk.c ****      (CONFIG_SYSCLK_CPU_DIV > CONFIG_SYSCLK_PBD_DIV))
  60:../../../platform/common/services/clock/sam4l/sysclk.c **** # error CONFIG_SYSCLK_PBx_DIV must be equal to or more than CONFIG_SYSCLK_CPU_DIV.
  61:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif
  62:../../../platform/common/services/clock/sam4l/sysclk.c **** 
  63:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
  64:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \internal
  65:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \defgroup sysclk_internals_group System Clock internals
  66:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
  67:../../../platform/common/services/clock/sam4l/sysclk.c ****  * System clock management is fairly straightforward apart from one
  68:../../../platform/common/services/clock/sam4l/sysclk.c ****  * thing: Enabling and disabling bus bridges. When all peripherals on a
  69:../../../platform/common/services/clock/sam4l/sysclk.c ****  * given bus are disabled, the bridge to the bus may be disabled. Only
  70:../../../platform/common/services/clock/sam4l/sysclk.c ****  * the PBA and PBB busses support this, and it is not practical to
  71:../../../platform/common/services/clock/sam4l/sysclk.c ****  * disable the PBA bridge as it includes the PM and SCIF modules, so turning
  72:../../../platform/common/services/clock/sam4l/sysclk.c ****  * it off would make it impossible to turn anything back on again.
  73:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
  74:../../../platform/common/services/clock/sam4l/sysclk.c ****  * The system clock implementation keeps track of a reference count for
  75:../../../platform/common/services/clock/sam4l/sysclk.c ****  * PBB. When the reference count is zero, the bus bridge is disabled, otherwise
  76:../../../platform/common/services/clock/sam4l/sysclk.c ****  * it is enabled.
  77:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
  78:../../../platform/common/services/clock/sam4l/sysclk.c ****  * @{
  79:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
  80:../../../platform/common/services/clock/sam4l/sysclk.c **** 
  81:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
  82:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \internal
  83:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \name Initial module clock masks
  84:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
  85:../../../platform/common/services/clock/sam4l/sysclk.c ****  * These are the mask values written to the xxxMASK registers during
  86:../../../platform/common/services/clock/sam4l/sysclk.c ****  * initialization if the user has overridden the default behavior of all clocks
  87:../../../platform/common/services/clock/sam4l/sysclk.c ****  * left enabled. These values assume that:
  88:../../../platform/common/services/clock/sam4l/sysclk.c ****  *   - Debugging should be possible
  89:../../../platform/common/services/clock/sam4l/sysclk.c ****  *   - The program may be running from flash
  90:../../../platform/common/services/clock/sam4l/sysclk.c ****  *   - The PM should be available to unmask other clocks
  91:../../../platform/common/services/clock/sam4l/sysclk.c ****  *   - All on-chip RAM should be available
  92:../../../platform/common/services/clock/sam4l/sysclk.c ****  *   - SCIF, BPM, BSCIF and GPIO are made permanently available for now; this
  93:../../../platform/common/services/clock/sam4l/sysclk.c ****  *     may change in the future.
  94:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
  95:../../../platform/common/services/clock/sam4l/sysclk.c **** //@{
  96:../../../platform/common/services/clock/sam4l/sysclk.c **** //! \internal
  97:../../../platform/common/services/clock/sam4l/sysclk.c **** //! \brief Initial value of CPUMASK
  98:../../../platform/common/services/clock/sam4l/sysclk.c **** #define SYSCLK_INIT_MINIMAL_CPUMASK       0
  99:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 100:../../../platform/common/services/clock/sam4l/sysclk.c **** //! \internal
 101:../../../platform/common/services/clock/sam4l/sysclk.c **** //! \brief Initial value of HSBMASK
 102:../../../platform/common/services/clock/sam4l/sysclk.c **** #define SYSCLK_INIT_MINIMAL_HSBMASK                                    \
 103:../../../platform/common/services/clock/sam4l/sysclk.c **** 	((1 << SYSCLK_HFLASHC_DATA)                                        \
 104:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| (1 << SYSCLK_PBB_BRIDGE)                                     \
 105:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| (1 << SYSCLK_PBC_BRIDGE)                                     \
 106:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| (1 << SYSCLK_PBD_BRIDGE))
 107:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 108:../../../platform/common/services/clock/sam4l/sysclk.c **** //! \internal
 109:../../../platform/common/services/clock/sam4l/sysclk.c **** //! \brief Initial value of PBAMASK
 110:../../../platform/common/services/clock/sam4l/sysclk.c **** #define SYSCLK_INIT_MINIMAL_PBAMASK       0
 111:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 112:../../../platform/common/services/clock/sam4l/sysclk.c **** //! \internal
 113:../../../platform/common/services/clock/sam4l/sysclk.c **** //! \brief Initial value of PBBMASK
 114:../../../platform/common/services/clock/sam4l/sysclk.c **** #define SYSCLK_INIT_MINIMAL_PBBMASK       (1 << SYSCLK_HFLASHC_REGS)
 115:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 116:../../../platform/common/services/clock/sam4l/sysclk.c **** //! \internal
 117:../../../platform/common/services/clock/sam4l/sysclk.c **** //! \brief Initial value of PBCMASK
 118:../../../platform/common/services/clock/sam4l/sysclk.c **** #define SYSCLK_INIT_MINIMAL_PBCMASK                                    \
 119:../../../platform/common/services/clock/sam4l/sysclk.c **** 	((1 << SYSCLK_PM)                                                  \
 120:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| (1 << SYSCLK_GPIO)                                           \
 121:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| (1 << SYSCLK_SCIF))
 122:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 123:../../../platform/common/services/clock/sam4l/sysclk.c **** //! \internal
 124:../../../platform/common/services/clock/sam4l/sysclk.c **** //! \brief Initial value of PBDMASK
 125:../../../platform/common/services/clock/sam4l/sysclk.c **** #define SYSCLK_INIT_MINIMAL_PBDMASK                                    \
 126:../../../platform/common/services/clock/sam4l/sysclk.c **** 	((1 << SYSCLK_BPM)                                                 \
 127:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| (1 << SYSCLK_BSCIF))
 128:../../../platform/common/services/clock/sam4l/sysclk.c **** //@}
 129:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 130:../../../platform/common/services/clock/sam4l/sysclk.c **** #if defined(CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
 131:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
 132:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief boolean signalling that the sysclk_init is done.
 133:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
 134:../../../platform/common/services/clock/sam4l/sysclk.c **** bool sysclk_initialized = false;
 135:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif
 136:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 137:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
 138:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \internal
 139:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief Enable a maskable module clock.
 140:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param bus_id Bus index, given by the \c PM_CLK_GRP_xxx definitions.
 141:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param module_index Index of the module to be enabled. This is the
 142:../../../platform/common/services/clock/sam4l/sysclk.c ****  * bit number in the corresponding xxxMASK register.
 143:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
 144:../../../platform/common/services/clock/sam4l/sysclk.c **** void sysclk_priv_enable_module(uint32_t bus_id, uint32_t module_index)
 145:../../../platform/common/services/clock/sam4l/sysclk.c **** {
 2154              	 .loc 10 145 0
 2155              	 .cfi_startproc
 2156              	 
 2157              	 
 2158 07c4 80B5     	 push {r7,lr}
 2159              	.LCFI162:
 2160              	 .cfi_def_cfa_offset 8
 2161              	 .cfi_offset 7,-8
 2162              	 .cfi_offset 14,-4
 2163 07c6 84B0     	 sub sp,sp,#16
 2164              	.LCFI163:
 2165              	 .cfi_def_cfa_offset 24
 2166 07c8 00AF     	 add r7,sp,#0
 2167              	.LCFI164:
 2168              	 .cfi_def_cfa_register 7
 2169 07ca 7860     	 str r0,[r7,#4]
 2170 07cc 3960     	 str r1,[r7]
 146:../../../platform/common/services/clock/sam4l/sysclk.c **** 	irqflags_t flags;
 147:../../../platform/common/services/clock/sam4l/sysclk.c **** 	uint32_t   mask;
 148:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 149:../../../platform/common/services/clock/sam4l/sysclk.c **** 	flags = cpu_irq_save();
 2171              	 .loc 10 149 0
 2172 07ce FFF717FC 	 bl cpu_irq_save
 2173 07d2 F860     	 str r0,[r7,#12]
 150:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 151:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Enable the clock */
 152:../../../platform/common/services/clock/sam4l/sysclk.c **** 	mask = *(&PM->PM_CPUMASK + bus_id);
 2174              	 .loc 10 152 0
 2175 07d4 7B68     	 ldr r3,[r7,#4]
 2176 07d6 9A00     	 lsls r2,r3,#2
 2177 07d8 104B     	 ldr r3,.L148
 2178 07da 1344     	 add r3,r3,r2
 2179 07dc 1B68     	 ldr r3,[r3]
 2180 07de BB60     	 str r3,[r7,#8]
 153:../../../platform/common/services/clock/sam4l/sysclk.c **** 	mask |= 1U << module_index;
 2181              	 .loc 10 153 0
 2182 07e0 0122     	 movs r2,#1
 2183 07e2 3B68     	 ldr r3,[r7]
 2184 07e4 02FA03F3 	 lsl r3,r2,r3
 2185 07e8 BA68     	 ldr r2,[r7,#8]
 2186 07ea 1343     	 orrs r3,r3,r2
 2187 07ec BB60     	 str r3,[r7,#8]
 154:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu) |
 2188              	 .loc 10 154 0
 2189 07ee 0C4A     	 ldr r2,.L148+4
 155:../../../platform/common/services/clock/sam4l/sysclk.c **** 		BPM_UNLOCK_ADDR(((uint32_t)&PM->PM_CPUMASK - (uint32_t)PM) + (4 * bus_id));
 2190              	 .loc 10 155 0
 2191 07f0 7B68     	 ldr r3,[r7,#4]
 2192 07f2 0833     	 adds r3,r3,#8
 2193 07f4 9B00     	 lsls r3,r3,#2
 2194 07f6 03F47F73 	 and r3,r3,#1020
 154:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu) |
 2195              	 .loc 10 154 0
 2196 07fa 43F02A43 	 orr r3,r3,#-1442840576
 2197 07fe 9365     	 str r3,[r2,#88]
 156:../../../platform/common/services/clock/sam4l/sysclk.c **** 	*(&PM->PM_CPUMASK + bus_id) = mask;
 2198              	 .loc 10 156 0
 2199 0800 7B68     	 ldr r3,[r7,#4]
 2200 0802 9A00     	 lsls r2,r3,#2
 2201 0804 054B     	 ldr r3,.L148
 2202 0806 1344     	 add r3,r3,r2
 2203 0808 BA68     	 ldr r2,[r7,#8]
 2204 080a 1A60     	 str r2,[r3]
 157:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 158:../../../platform/common/services/clock/sam4l/sysclk.c **** 	cpu_irq_restore(flags);
 2205              	 .loc 10 158 0
 2206 080c F868     	 ldr r0,[r7,#12]
 2207 080e FFF722FC 	 bl cpu_irq_restore
 159:../../../platform/common/services/clock/sam4l/sysclk.c **** }
 2208              	 .loc 10 159 0
 2209 0812 00BF     	 nop
 2210 0814 1037     	 adds r7,r7,#16
 2211              	.LCFI165:
 2212              	 .cfi_def_cfa_offset 8
 2213 0816 BD46     	 mov sp,r7
 2214              	.LCFI166:
 2215              	 .cfi_def_cfa_register 13
 2216              	 
 2217 0818 80BD     	 pop {r7,pc}
 2218              	.L149:
 2219 081a 00BF     	 .align 2
 2220              	.L148:
 2221 081c 20000E40 	 .word 1074659360
 2222 0820 00000E40 	 .word 1074659328
 2223              	 .cfi_endproc
 2224              	.LFE182:
 2226              	 .align 1
 2227              	 .global sysclk_priv_disable_module
 2228              	 .syntax unified
 2229              	 .thumb
 2230              	 .thumb_func
 2231              	 .fpu softvfp
 2233              	sysclk_priv_disable_module:
 2234              	.LFB183:
 160:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 161:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
 162:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \internal
 163:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief Disable a maskable module clock.
 164:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param bus_id Bus index, given by the \c PM_CLK_GRP_xxx definitions.
 165:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param module_index Index of the module to be disabled. This is the
 166:../../../platform/common/services/clock/sam4l/sysclk.c ****  * bit number in the corresponding xxxMASK register.
 167:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
 168:../../../platform/common/services/clock/sam4l/sysclk.c **** void sysclk_priv_disable_module(uint32_t bus_id, uint32_t module_index)
 169:../../../platform/common/services/clock/sam4l/sysclk.c **** {
 2235              	 .loc 10 169 0
 2236              	 .cfi_startproc
 2237              	 
 2238              	 
 2239 0824 80B5     	 push {r7,lr}
 2240              	.LCFI167:
 2241              	 .cfi_def_cfa_offset 8
 2242              	 .cfi_offset 7,-8
 2243              	 .cfi_offset 14,-4
 2244 0826 84B0     	 sub sp,sp,#16
 2245              	.LCFI168:
 2246              	 .cfi_def_cfa_offset 24
 2247 0828 00AF     	 add r7,sp,#0
 2248              	.LCFI169:
 2249              	 .cfi_def_cfa_register 7
 2250 082a 7860     	 str r0,[r7,#4]
 2251 082c 3960     	 str r1,[r7]
 170:../../../platform/common/services/clock/sam4l/sysclk.c **** 	irqflags_t flags;
 171:../../../platform/common/services/clock/sam4l/sysclk.c **** 	uint32_t   mask;
 172:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 173:../../../platform/common/services/clock/sam4l/sysclk.c **** 	flags = cpu_irq_save();
 2252              	 .loc 10 173 0
 2253 082e FFF7E7FB 	 bl cpu_irq_save
 2254 0832 F860     	 str r0,[r7,#12]
 174:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 175:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Disable the clock */
 176:../../../platform/common/services/clock/sam4l/sysclk.c **** 	mask = *(&PM->PM_CPUMASK + bus_id);
 2255              	 .loc 10 176 0
 2256 0834 7B68     	 ldr r3,[r7,#4]
 2257 0836 9A00     	 lsls r2,r3,#2
 2258 0838 104B     	 ldr r3,.L151
 2259 083a 1344     	 add r3,r3,r2
 2260 083c 1B68     	 ldr r3,[r3]
 2261 083e BB60     	 str r3,[r7,#8]
 177:../../../platform/common/services/clock/sam4l/sysclk.c **** 	mask &= ~(1U << module_index);
 2262              	 .loc 10 177 0
 2263 0840 0122     	 movs r2,#1
 2264 0842 3B68     	 ldr r3,[r7]
 2265 0844 02FA03F3 	 lsl r3,r2,r3
 2266 0848 DB43     	 mvns r3,r3
 2267 084a BA68     	 ldr r2,[r7,#8]
 2268 084c 1340     	 ands r3,r3,r2
 2269 084e BB60     	 str r3,[r7,#8]
 178:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu) |
 2270              	 .loc 10 178 0
 2271 0850 0B4A     	 ldr r2,.L151+4
 179:../../../platform/common/services/clock/sam4l/sysclk.c **** 		BPM_UNLOCK_ADDR(((uint32_t)&PM->PM_CPUMASK - (uint32_t)PM) + (4 * bus_id));
 2272              	 .loc 10 179 0
 2273 0852 7B68     	 ldr r3,[r7,#4]
 2274 0854 0833     	 adds r3,r3,#8
 2275 0856 9B00     	 lsls r3,r3,#2
 2276 0858 03F47F73 	 and r3,r3,#1020
 178:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu) |
 2277              	 .loc 10 178 0
 2278 085c 43F02A43 	 orr r3,r3,#-1442840576
 2279 0860 9365     	 str r3,[r2,#88]
 180:../../../platform/common/services/clock/sam4l/sysclk.c **** 	*(&PM->PM_CPUMASK + bus_id) = mask;
 2280              	 .loc 10 180 0
 2281 0862 7B68     	 ldr r3,[r7,#4]
 2282 0864 9A00     	 lsls r2,r3,#2
 2283 0866 054B     	 ldr r3,.L151
 2284 0868 1344     	 add r3,r3,r2
 2285 086a BA68     	 ldr r2,[r7,#8]
 2286 086c 1A60     	 str r2,[r3]
 181:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 182:../../../platform/common/services/clock/sam4l/sysclk.c **** 	cpu_irq_restore(flags);
 2287              	 .loc 10 182 0
 2288 086e F868     	 ldr r0,[r7,#12]
 2289 0870 FFF7F1FB 	 bl cpu_irq_restore
 183:../../../platform/common/services/clock/sam4l/sysclk.c **** }
 2290              	 .loc 10 183 0
 2291 0874 00BF     	 nop
 2292 0876 1037     	 adds r7,r7,#16
 2293              	.LCFI170:
 2294              	 .cfi_def_cfa_offset 8
 2295 0878 BD46     	 mov sp,r7
 2296              	.LCFI171:
 2297              	 .cfi_def_cfa_register 13
 2298              	 
 2299 087a 80BD     	 pop {r7,pc}
 2300              	.L152:
 2301              	 .align 2
 2302              	.L151:
 2303 087c 20000E40 	 .word 1074659360
 2304 0880 00000E40 	 .word 1074659328
 2305              	 .cfi_endproc
 2306              	.LFE183:
 2308              	 .align 1
 2309              	 .global sysclk_enable_pba_module
 2310              	 .syntax unified
 2311              	 .thumb
 2312              	 .thumb_func
 2313              	 .fpu softvfp
 2315              	sysclk_enable_pba_module:
 2316              	.LFB184:
 184:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 185:../../../platform/common/services/clock/sam4l/sysclk.c **** //! @}
 186:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 187:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
 188:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief Enable a module clock derived from the PBA clock
 189:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param module_index Index of the module clock in the PBAMASK register
 190:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
 191:../../../platform/common/services/clock/sam4l/sysclk.c **** void sysclk_enable_pba_module(uint32_t module_index)
 192:../../../platform/common/services/clock/sam4l/sysclk.c **** {
 2317              	 .loc 10 192 0
 2318              	 .cfi_startproc
 2319              	 
 2320              	 
 2321 0884 80B5     	 push {r7,lr}
 2322              	.LCFI172:
 2323              	 .cfi_def_cfa_offset 8
 2324              	 .cfi_offset 7,-8
 2325              	 .cfi_offset 14,-4
 2326 0886 84B0     	 sub sp,sp,#16
 2327              	.LCFI173:
 2328              	 .cfi_def_cfa_offset 24
 2329 0888 00AF     	 add r7,sp,#0
 2330              	.LCFI174:
 2331              	 .cfi_def_cfa_register 7
 2332 088a 7860     	 str r0,[r7,#4]
 193:../../../platform/common/services/clock/sam4l/sysclk.c **** 	irqflags_t flags;
 194:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 195:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Enable the bridge if necessary */
 196:../../../platform/common/services/clock/sam4l/sysclk.c **** 	flags = cpu_irq_save();
 2333              	 .loc 10 196 0
 2334 088c FFF7B8FB 	 bl cpu_irq_save
 2335 0890 F860     	 str r0,[r7,#12]
 197:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 198:../../../platform/common/services/clock/sam4l/sysclk.c **** 	if (PM->PM_PBAMASK == 0) {
 2336              	 .loc 10 198 0
 2337 0892 094B     	 ldr r3,.L155
 2338 0894 9B6A     	 ldr r3,[r3,#40]
 2339 0896 002B     	 cmp r3,#0
 2340 0898 02D1     	 bne .L154
 199:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_hsb_module(SYSCLK_PBA_BRIDGE);
 2341              	 .loc 10 199 0
 2342 089a 0520     	 movs r0,#5
 2343 089c FFF713FF 	 bl sysclk_enable_hsb_module
 2344              	.L154:
 200:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 201:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 202:../../../platform/common/services/clock/sam4l/sysclk.c **** 	cpu_irq_restore(flags);
 2345              	 .loc 10 202 0
 2346 08a0 F868     	 ldr r0,[r7,#12]
 2347 08a2 FFF7D8FB 	 bl cpu_irq_restore
 203:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 204:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Enable the module */
 205:../../../platform/common/services/clock/sam4l/sysclk.c **** 	sysclk_priv_enable_module(PM_CLK_GRP_PBA, module_index);
 2348              	 .loc 10 205 0
 2349 08a6 7968     	 ldr r1,[r7,#4]
 2350 08a8 0220     	 movs r0,#2
 2351 08aa FFF7FEFF 	 bl sysclk_priv_enable_module
 206:../../../platform/common/services/clock/sam4l/sysclk.c **** }
 2352              	 .loc 10 206 0
 2353 08ae 00BF     	 nop
 2354 08b0 1037     	 adds r7,r7,#16
 2355              	.LCFI175:
 2356              	 .cfi_def_cfa_offset 8
 2357 08b2 BD46     	 mov sp,r7
 2358              	.LCFI176:
 2359              	 .cfi_def_cfa_register 13
 2360              	 
 2361 08b4 80BD     	 pop {r7,pc}
 2362              	.L156:
 2363 08b6 00BF     	 .align 2
 2364              	.L155:
 2365 08b8 00000E40 	 .word 1074659328
 2366              	 .cfi_endproc
 2367              	.LFE184:
 2369              	 .align 1
 2370              	 .global sysclk_disable_pba_module
 2371              	 .syntax unified
 2372              	 .thumb
 2373              	 .thumb_func
 2374              	 .fpu softvfp
 2376              	sysclk_disable_pba_module:
 2377              	.LFB185:
 207:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 208:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
 209:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief Disable a module clock derived from the PBA clock
 210:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param module_index Index of the module clock in the PBAMASK register
 211:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
 212:../../../platform/common/services/clock/sam4l/sysclk.c **** void sysclk_disable_pba_module(uint32_t module_index)
 213:../../../platform/common/services/clock/sam4l/sysclk.c **** {
 2378              	 .loc 10 213 0
 2379              	 .cfi_startproc
 2380              	 
 2381              	 
 2382 08bc 80B5     	 push {r7,lr}
 2383              	.LCFI177:
 2384              	 .cfi_def_cfa_offset 8
 2385              	 .cfi_offset 7,-8
 2386              	 .cfi_offset 14,-4
 2387 08be 84B0     	 sub sp,sp,#16
 2388              	.LCFI178:
 2389              	 .cfi_def_cfa_offset 24
 2390 08c0 00AF     	 add r7,sp,#0
 2391              	.LCFI179:
 2392              	 .cfi_def_cfa_register 7
 2393 08c2 7860     	 str r0,[r7,#4]
 214:../../../platform/common/services/clock/sam4l/sysclk.c **** 	irqflags_t flags;
 215:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 216:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Disable the module */
 217:../../../platform/common/services/clock/sam4l/sysclk.c **** 	sysclk_priv_disable_module(PM_CLK_GRP_PBA, module_index);
 2394              	 .loc 10 217 0
 2395 08c4 7968     	 ldr r1,[r7,#4]
 2396 08c6 0220     	 movs r0,#2
 2397 08c8 FFF7FEFF 	 bl sysclk_priv_disable_module
 218:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 219:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Disable the bridge if possible */
 220:../../../platform/common/services/clock/sam4l/sysclk.c **** 	flags = cpu_irq_save();
 2398              	 .loc 10 220 0
 2399 08cc FFF798FB 	 bl cpu_irq_save
 2400 08d0 F860     	 str r0,[r7,#12]
 221:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 222:../../../platform/common/services/clock/sam4l/sysclk.c **** 	if (PM->PM_PBAMASK == 0) {
 2401              	 .loc 10 222 0
 2402 08d2 074B     	 ldr r3,.L159
 2403 08d4 9B6A     	 ldr r3,[r3,#40]
 2404 08d6 002B     	 cmp r3,#0
 2405 08d8 02D1     	 bne .L158
 223:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_hsb_module(SYSCLK_PBA_BRIDGE);
 2406              	 .loc 10 223 0
 2407 08da 0520     	 movs r0,#5
 2408 08dc FFF7FFFE 	 bl sysclk_disable_hsb_module
 2409              	.L158:
 224:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 225:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 226:../../../platform/common/services/clock/sam4l/sysclk.c **** 	cpu_irq_restore(flags);
 2410              	 .loc 10 226 0
 2411 08e0 F868     	 ldr r0,[r7,#12]
 2412 08e2 FFF7B8FB 	 bl cpu_irq_restore
 227:../../../platform/common/services/clock/sam4l/sysclk.c **** }
 2413              	 .loc 10 227 0
 2414 08e6 00BF     	 nop
 2415 08e8 1037     	 adds r7,r7,#16
 2416              	.LCFI180:
 2417              	 .cfi_def_cfa_offset 8
 2418 08ea BD46     	 mov sp,r7
 2419              	.LCFI181:
 2420              	 .cfi_def_cfa_register 13
 2421              	 
 2422 08ec 80BD     	 pop {r7,pc}
 2423              	.L160:
 2424 08ee 00BF     	 .align 2
 2425              	.L159:
 2426 08f0 00000E40 	 .word 1074659328
 2427              	 .cfi_endproc
 2428              	.LFE185:
 2430              	 .align 1
 2431              	 .global sysclk_enable_pbb_module
 2432              	 .syntax unified
 2433              	 .thumb
 2434              	 .thumb_func
 2435              	 .fpu softvfp
 2437              	sysclk_enable_pbb_module:
 2438              	.LFB186:
 228:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 229:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
 230:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief Enable a module clock derived from the PBB clock
 231:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param module_index Index of the module clock in the PBBMASK register
 232:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
 233:../../../platform/common/services/clock/sam4l/sysclk.c **** void sysclk_enable_pbb_module(uint32_t module_index)
 234:../../../platform/common/services/clock/sam4l/sysclk.c **** {
 2439              	 .loc 10 234 0
 2440              	 .cfi_startproc
 2441              	 
 2442              	 
 2443 08f4 80B5     	 push {r7,lr}
 2444              	.LCFI182:
 2445              	 .cfi_def_cfa_offset 8
 2446              	 .cfi_offset 7,-8
 2447              	 .cfi_offset 14,-4
 2448 08f6 84B0     	 sub sp,sp,#16
 2449              	.LCFI183:
 2450              	 .cfi_def_cfa_offset 24
 2451 08f8 00AF     	 add r7,sp,#0
 2452              	.LCFI184:
 2453              	 .cfi_def_cfa_register 7
 2454 08fa 7860     	 str r0,[r7,#4]
 235:../../../platform/common/services/clock/sam4l/sysclk.c **** 	irqflags_t flags;
 236:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 237:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Enable the bridge if necessary */
 238:../../../platform/common/services/clock/sam4l/sysclk.c **** 	flags = cpu_irq_save();
 2455              	 .loc 10 238 0
 2456 08fc FFF780FB 	 bl cpu_irq_save
 2457 0900 F860     	 str r0,[r7,#12]
 239:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 240:../../../platform/common/services/clock/sam4l/sysclk.c **** 	if (PM->PM_PBBMASK == 0) {
 2458              	 .loc 10 240 0
 2459 0902 094B     	 ldr r3,.L163
 2460 0904 DB6A     	 ldr r3,[r3,#44]
 2461 0906 002B     	 cmp r3,#0
 2462 0908 02D1     	 bne .L162
 241:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_hsb_module(SYSCLK_PBB_BRIDGE);
 2463              	 .loc 10 241 0
 2464 090a 0620     	 movs r0,#6
 2465 090c FFF7DBFE 	 bl sysclk_enable_hsb_module
 2466              	.L162:
 242:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 243:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 244:../../../platform/common/services/clock/sam4l/sysclk.c **** 	cpu_irq_restore(flags);
 2467              	 .loc 10 244 0
 2468 0910 F868     	 ldr r0,[r7,#12]
 2469 0912 FFF7A0FB 	 bl cpu_irq_restore
 245:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 246:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Enable the module */
 247:../../../platform/common/services/clock/sam4l/sysclk.c **** 	sysclk_priv_enable_module(PM_CLK_GRP_PBB, module_index);
 2470              	 .loc 10 247 0
 2471 0916 7968     	 ldr r1,[r7,#4]
 2472 0918 0320     	 movs r0,#3
 2473 091a FFF7FEFF 	 bl sysclk_priv_enable_module
 248:../../../platform/common/services/clock/sam4l/sysclk.c **** }
 2474              	 .loc 10 248 0
 2475 091e 00BF     	 nop
 2476 0920 1037     	 adds r7,r7,#16
 2477              	.LCFI185:
 2478              	 .cfi_def_cfa_offset 8
 2479 0922 BD46     	 mov sp,r7
 2480              	.LCFI186:
 2481              	 .cfi_def_cfa_register 13
 2482              	 
 2483 0924 80BD     	 pop {r7,pc}
 2484              	.L164:
 2485 0926 00BF     	 .align 2
 2486              	.L163:
 2487 0928 00000E40 	 .word 1074659328
 2488              	 .cfi_endproc
 2489              	.LFE186:
 2491              	 .align 1
 2492              	 .global sysclk_disable_pbb_module
 2493              	 .syntax unified
 2494              	 .thumb
 2495              	 .thumb_func
 2496              	 .fpu softvfp
 2498              	sysclk_disable_pbb_module:
 2499              	.LFB187:
 249:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 250:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
 251:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief Disable a module clock derived from the PBB clock
 252:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param module_index Index of the module clock in the PBBMASK register
 253:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
 254:../../../platform/common/services/clock/sam4l/sysclk.c **** void sysclk_disable_pbb_module(uint32_t module_index)
 255:../../../platform/common/services/clock/sam4l/sysclk.c **** {
 2500              	 .loc 10 255 0
 2501              	 .cfi_startproc
 2502              	 
 2503              	 
 2504 092c 80B5     	 push {r7,lr}
 2505              	.LCFI187:
 2506              	 .cfi_def_cfa_offset 8
 2507              	 .cfi_offset 7,-8
 2508              	 .cfi_offset 14,-4
 2509 092e 84B0     	 sub sp,sp,#16
 2510              	.LCFI188:
 2511              	 .cfi_def_cfa_offset 24
 2512 0930 00AF     	 add r7,sp,#0
 2513              	.LCFI189:
 2514              	 .cfi_def_cfa_register 7
 2515 0932 7860     	 str r0,[r7,#4]
 256:../../../platform/common/services/clock/sam4l/sysclk.c **** 	irqflags_t flags;
 257:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 258:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Disable the module */
 259:../../../platform/common/services/clock/sam4l/sysclk.c **** 	sysclk_priv_disable_module(PM_CLK_GRP_PBB, module_index);
 2516              	 .loc 10 259 0
 2517 0934 7968     	 ldr r1,[r7,#4]
 2518 0936 0320     	 movs r0,#3
 2519 0938 FFF7FEFF 	 bl sysclk_priv_disable_module
 260:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 261:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Disable the bridge if possible */
 262:../../../platform/common/services/clock/sam4l/sysclk.c **** 	flags = cpu_irq_save();
 2520              	 .loc 10 262 0
 2521 093c FFF760FB 	 bl cpu_irq_save
 2522 0940 F860     	 str r0,[r7,#12]
 263:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 264:../../../platform/common/services/clock/sam4l/sysclk.c **** 	if (PM->PM_PBBMASK == 0) {
 2523              	 .loc 10 264 0
 2524 0942 074B     	 ldr r3,.L167
 2525 0944 DB6A     	 ldr r3,[r3,#44]
 2526 0946 002B     	 cmp r3,#0
 2527 0948 02D1     	 bne .L166
 265:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_hsb_module(SYSCLK_PBB_BRIDGE);
 2528              	 .loc 10 265 0
 2529 094a 0620     	 movs r0,#6
 2530 094c FFF7C7FE 	 bl sysclk_disable_hsb_module
 2531              	.L166:
 266:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 267:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 268:../../../platform/common/services/clock/sam4l/sysclk.c **** 	cpu_irq_restore(flags);
 2532              	 .loc 10 268 0
 2533 0950 F868     	 ldr r0,[r7,#12]
 2534 0952 FFF780FB 	 bl cpu_irq_restore
 269:../../../platform/common/services/clock/sam4l/sysclk.c **** }
 2535              	 .loc 10 269 0
 2536 0956 00BF     	 nop
 2537 0958 1037     	 adds r7,r7,#16
 2538              	.LCFI190:
 2539              	 .cfi_def_cfa_offset 8
 2540 095a BD46     	 mov sp,r7
 2541              	.LCFI191:
 2542              	 .cfi_def_cfa_register 13
 2543              	 
 2544 095c 80BD     	 pop {r7,pc}
 2545              	.L168:
 2546 095e 00BF     	 .align 2
 2547              	.L167:
 2548 0960 00000E40 	 .word 1074659328
 2549              	 .cfi_endproc
 2550              	.LFE187:
 2552              	 .align 1
 2553              	 .global sysclk_get_peripheral_bus_hz
 2554              	 .syntax unified
 2555              	 .thumb
 2556              	 .thumb_func
 2557              	 .fpu softvfp
 2559              	sysclk_get_peripheral_bus_hz:
 2560              	.LFB188:
 270:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 271:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
 272:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief Retrieves the current rate in Hz of the Peripheral Bus clock attached
 273:../../../platform/common/services/clock/sam4l/sysclk.c ****  *        to the specified peripheral.
 274:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
 275:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param module Pointer to the module's base address.
 276:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
 277:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \return Frequency of the bus attached to the specified peripheral, in Hz.
 278:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
 279:../../../platform/common/services/clock/sam4l/sysclk.c **** uint32_t sysclk_get_peripheral_bus_hz(const volatile void *module)
 280:../../../platform/common/services/clock/sam4l/sysclk.c **** {
 2561              	 .loc 10 280 0
 2562              	 .cfi_startproc
 2563              	 
 2564              	 
 2565 0964 80B5     	 push {r7,lr}
 2566              	.LCFI192:
 2567              	 .cfi_def_cfa_offset 8
 2568              	 .cfi_offset 7,-8
 2569              	 .cfi_offset 14,-4
 2570 0966 82B0     	 sub sp,sp,#8
 2571              	.LCFI193:
 2572              	 .cfi_def_cfa_offset 16
 2573 0968 00AF     	 add r7,sp,#0
 2574              	.LCFI194:
 2575              	 .cfi_def_cfa_register 7
 2576 096a 7860     	 str r0,[r7,#4]
 281:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Fallthroughs intended for modules sharing the same peripheral bus. */
 282:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 2577              	 .loc 10 282 0
 2578 096c 7B68     	 ldr r3,[r7,#4]
 2579 096e 6C4A     	 ldr r2,.L191
 2580 0970 9342     	 cmp r3,r2
 2581 0972 00F0C080 	 beq .L171
 2582 0976 6A4A     	 ldr r2,.L191
 2583 0978 9342     	 cmp r3,r2
 2584 097a 63D8     	 bhi .L172
 2585 097c 694A     	 ldr r2,.L191+4
 2586 097e 9342     	 cmp r3,r2
 2587 0980 00F0B980 	 beq .L171
 2588 0984 674A     	 ldr r2,.L191+4
 2589 0986 9342     	 cmp r3,r2
 2590 0988 30D8     	 bhi .L173
 2591 098a 674A     	 ldr r2,.L191+8
 2592 098c 9342     	 cmp r3,r2
 2593 098e 00F0B280 	 beq .L171
 2594 0992 654A     	 ldr r2,.L191+8
 2595 0994 9342     	 cmp r3,r2
 2596 0996 14D8     	 bhi .L174
 2597 0998 644A     	 ldr r2,.L191+12
 2598 099a 9342     	 cmp r3,r2
 2599 099c 00F0AB80 	 beq .L171
 2600 09a0 624A     	 ldr r2,.L191+12
 2601 09a2 9342     	 cmp r3,r2
 2602 09a4 04D8     	 bhi .L175
 2603 09a6 B3F1402F 	 cmp r3,#1073758208
 2604 09aa 00F0A480 	 beq .L171
 2605 09ae B2E0     	 b .L170
 2606              	.L175:
 2607 09b0 5F4A     	 ldr r2,.L191+16
 2608 09b2 9342     	 cmp r3,r2
 2609 09b4 00F09F80 	 beq .L171
 2610 09b8 5E4A     	 ldr r2,.L191+20
 2611 09ba 9342     	 cmp r3,r2
 2612 09bc 00F09B80 	 beq .L171
 2613 09c0 A9E0     	 b .L170
 2614              	.L174:
 2615 09c2 5D4A     	 ldr r2,.L191+24
 2616 09c4 9342     	 cmp r3,r2
 2617 09c6 00F09680 	 beq .L171
 2618 09ca 5B4A     	 ldr r2,.L191+24
 2619 09cc 9342     	 cmp r3,r2
 2620 09ce 04D8     	 bhi .L176
 2621 09d0 5A4A     	 ldr r2,.L191+28
 2622 09d2 9342     	 cmp r3,r2
 2623 09d4 00F08F80 	 beq .L171
 2624 09d8 9DE0     	 b .L170
 2625              	.L176:
 2626 09da 594A     	 ldr r2,.L191+32
 2627 09dc 9342     	 cmp r3,r2
 2628 09de 00F08A80 	 beq .L171
 2629 09e2 584A     	 ldr r2,.L191+36
 2630 09e4 9342     	 cmp r3,r2
 2631 09e6 00F08680 	 beq .L171
 2632 09ea 94E0     	 b .L170
 2633              	.L173:
 2634 09ec 564A     	 ldr r2,.L191+40
 2635 09ee 9342     	 cmp r3,r2
 2636 09f0 00F08180 	 beq .L171
 2637 09f4 544A     	 ldr r2,.L191+40
 2638 09f6 9342     	 cmp r3,r2
 2639 09f8 10D8     	 bhi .L177
 2640 09fa 544A     	 ldr r2,.L191+44
 2641 09fc 9342     	 cmp r3,r2
 2642 09fe 7AD0     	 beq .L171
 2643 0a00 524A     	 ldr r2,.L191+44
 2644 0a02 9342     	 cmp r3,r2
 2645 0a04 03D8     	 bhi .L178
 2646 0a06 524A     	 ldr r2,.L191+48
 2647 0a08 9342     	 cmp r3,r2
 2648 0a0a 74D0     	 beq .L171
 2649 0a0c 83E0     	 b .L170
 2650              	.L178:
 2651 0a0e 514A     	 ldr r2,.L191+52
 2652 0a10 9342     	 cmp r3,r2
 2653 0a12 70D0     	 beq .L171
 2654 0a14 504A     	 ldr r2,.L191+56
 2655 0a16 9342     	 cmp r3,r2
 2656 0a18 6DD0     	 beq .L171
 2657 0a1a 7CE0     	 b .L170
 2658              	.L177:
 2659 0a1c 4F4A     	 ldr r2,.L191+60
 2660 0a1e 9342     	 cmp r3,r2
 2661 0a20 69D0     	 beq .L171
 2662 0a22 4E4A     	 ldr r2,.L191+60
 2663 0a24 9342     	 cmp r3,r2
 2664 0a26 06D8     	 bhi .L179
 2665 0a28 4D4A     	 ldr r2,.L191+64
 2666 0a2a 9342     	 cmp r3,r2
 2667 0a2c 63D0     	 beq .L171
 2668 0a2e 4D4A     	 ldr r2,.L191+68
 2669 0a30 9342     	 cmp r3,r2
 2670 0a32 60D0     	 beq .L171
 2671 0a34 6FE0     	 b .L170
 2672              	.L179:
 2673 0a36 4C4A     	 ldr r2,.L191+72
 2674 0a38 9342     	 cmp r3,r2
 2675 0a3a 5CD0     	 beq .L171
 2676 0a3c 4B4A     	 ldr r2,.L191+76
 2677 0a3e 9342     	 cmp r3,r2
 2678 0a40 59D0     	 beq .L171
 2679 0a42 68E0     	 b .L170
 2680              	.L172:
 2681 0a44 4A4A     	 ldr r2,.L191+80
 2682 0a46 9342     	 cmp r3,r2
 2683 0a48 5DD0     	 beq .L180
 2684 0a4a 494A     	 ldr r2,.L191+80
 2685 0a4c 9342     	 cmp r3,r2
 2686 0a4e 27D8     	 bhi .L181
 2687 0a50 484A     	 ldr r2,.L191+84
 2688 0a52 9342     	 cmp r3,r2
 2689 0a54 53D0     	 beq .L182
 2690 0a56 474A     	 ldr r2,.L191+84
 2691 0a58 9342     	 cmp r3,r2
 2692 0a5a 10D8     	 bhi .L183
 2693 0a5c 464A     	 ldr r2,.L191+88
 2694 0a5e 9342     	 cmp r3,r2
 2695 0a60 49D0     	 beq .L171
 2696 0a62 454A     	 ldr r2,.L191+88
 2697 0a64 9342     	 cmp r3,r2
 2698 0a66 03D8     	 bhi .L184
 2699 0a68 444A     	 ldr r2,.L191+92
 2700 0a6a 9342     	 cmp r3,r2
 2701 0a6c 43D0     	 beq .L171
 2702 0a6e 52E0     	 b .L170
 2703              	.L184:
 2704 0a70 434A     	 ldr r2,.L191+96
 2705 0a72 9342     	 cmp r3,r2
 2706 0a74 43D0     	 beq .L182
 2707 0a76 434A     	 ldr r2,.L191+100
 2708 0a78 9342     	 cmp r3,r2
 2709 0a7a 40D0     	 beq .L182
 2710 0a7c 4BE0     	 b .L170
 2711              	.L183:
 2712 0a7e 424A     	 ldr r2,.L191+104
 2713 0a80 9342     	 cmp r3,r2
 2714 0a82 3CD0     	 beq .L182
 2715 0a84 404A     	 ldr r2,.L191+104
 2716 0a86 9342     	 cmp r3,r2
 2717 0a88 03D8     	 bhi .L185
 2718 0a8a 404A     	 ldr r2,.L191+108
 2719 0a8c 9342     	 cmp r3,r2
 2720 0a8e 36D0     	 beq .L182
 2721 0a90 41E0     	 b .L170
 2722              	.L185:
 2723 0a92 3F4A     	 ldr r2,.L191+112
 2724 0a94 9342     	 cmp r3,r2
 2725 0a96 32D0     	 beq .L182
 2726 0a98 3E4A     	 ldr r2,.L191+116
 2727 0a9a 9342     	 cmp r3,r2
 2728 0a9c 2FD0     	 beq .L182
 2729 0a9e 3AE0     	 b .L170
 2730              	.L181:
 2731 0aa0 3D4A     	 ldr r2,.L191+120
 2732 0aa2 9342     	 cmp r3,r2
 2733 0aa4 33D0     	 beq .L186
 2734 0aa6 3C4A     	 ldr r2,.L191+120
 2735 0aa8 9342     	 cmp r3,r2
 2736 0aaa 10D8     	 bhi .L187
 2737 0aac 3B4A     	 ldr r2,.L191+124
 2738 0aae 9342     	 cmp r3,r2
 2739 0ab0 29D0     	 beq .L180
 2740 0ab2 3A4A     	 ldr r2,.L191+124
 2741 0ab4 9342     	 cmp r3,r2
 2742 0ab6 03D8     	 bhi .L188
 2743 0ab8 394A     	 ldr r2,.L191+128
 2744 0aba 9342     	 cmp r3,r2
 2745 0abc 23D0     	 beq .L180
 2746 0abe 2AE0     	 b .L170
 2747              	.L188:
 2748 0ac0 384A     	 ldr r2,.L191+132
 2749 0ac2 9342     	 cmp r3,r2
 2750 0ac4 1FD0     	 beq .L180
 2751 0ac6 384A     	 ldr r2,.L191+136
 2752 0ac8 9342     	 cmp r3,r2
 2753 0aca 1CD0     	 beq .L180
 2754 0acc 23E0     	 b .L170
 2755              	.L187:
 2756 0ace 374A     	 ldr r2,.L191+140
 2757 0ad0 9342     	 cmp r3,r2
 2758 0ad2 1CD0     	 beq .L186
 2759 0ad4 354A     	 ldr r2,.L191+140
 2760 0ad6 9342     	 cmp r3,r2
 2761 0ad8 06D8     	 bhi .L189
 2762 0ada 354A     	 ldr r2,.L191+144
 2763 0adc 9342     	 cmp r3,r2
 2764 0ade 16D0     	 beq .L186
 2765 0ae0 344A     	 ldr r2,.L191+148
 2766 0ae2 9342     	 cmp r3,r2
 2767 0ae4 13D0     	 beq .L186
 2768 0ae6 16E0     	 b .L170
 2769              	.L189:
 2770 0ae8 334A     	 ldr r2,.L191+152
 2771 0aea 9342     	 cmp r3,r2
 2772 0aec 0FD0     	 beq .L186
 2773 0aee 334A     	 ldr r2,.L191+156
 2774 0af0 9342     	 cmp r3,r2
 2775 0af2 0CD0     	 beq .L186
 2776 0af4 0FE0     	 b .L170
 2777              	.L171:
 283:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case IISC_ADDR:
 284:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case SPI_ADDR:
 285:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TC0_ADDR:
 286:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TC1_ADDR:
 287:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIM0_ADDR:
 288:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIS0_ADDR:
 289:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIM1_ADDR:
 290:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIS1_ADDR:
 291:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USART0_ADDR:
 292:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USART1_ADDR:
 293:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USART2_ADDR:
 294:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USART3_ADDR:
 295:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case ADCIFE_ADDR:
 296:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case DACC_ADDR:
 297:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case ACIFC_ADDR:
 298:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case GLOC_ADDR:
 299:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case ABDACB_ADDR:
 300:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TRNG_ADDR:
 301:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PARC_ADDR:
 302:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case CATB_ADDR:
 303:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIM2_ADDR:
 304:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIM3_ADDR:
 305:../../../platform/common/services/clock/sam4l/sysclk.c **** 	#if !SAM4LS
 306:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case LCDCA_ADDR:
 307:../../../platform/common/services/clock/sam4l/sysclk.c **** 	#endif
 308:../../../platform/common/services/clock/sam4l/sysclk.c **** 		return sysclk_get_pba_hz();
 2778              	 .loc 10 308 0
 2779 0af6 FFF7CAFD 	 bl sysclk_get_pba_hz
 2780 0afa 0346     	 mov r3,r0
 2781 0afc 0CE0     	 b .L190
 2782              	.L182:
 309:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 310:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case HFLASHC_ADDR:
 311:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case HCACHE_ADDR:
 312:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case HMATRIX_ADDR:
 313:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PDCA_ADDR:
 314:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case CRCCU_ADDR:
 315:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USBC_ADDR:
 316:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PEVC_ADDR:
 317:../../../platform/common/services/clock/sam4l/sysclk.c **** 		return sysclk_get_pbb_hz();
 2783              	 .loc 10 317 0
 2784 0afe FFF7CDFD 	 bl sysclk_get_pbb_hz
 2785 0b02 0346     	 mov r3,r0
 2786 0b04 08E0     	 b .L190
 2787              	.L180:
 318:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 319:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PM_ADDR:
 320:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case CHIPID_ADDR:
 321:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case SCIF_ADDR:
 322:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case FREQM_ADDR:
 323:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case GPIO_ADDR:
 324:../../../platform/common/services/clock/sam4l/sysclk.c **** 		return sysclk_get_pbc_hz();
 2788              	 .loc 10 324 0
 2789 0b06 FFF7D0FD 	 bl sysclk_get_pbc_hz
 2790 0b0a 0346     	 mov r3,r0
 2791 0b0c 04E0     	 b .L190
 2792              	.L186:
 325:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 326:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case BPM_ADDR:
 327:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case BSCIF_ADDR:
 328:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case AST_ADDR:
 329:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case WDT_ADDR:
 330:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case EIC_ADDR:
 331:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PICOUART_ADDR:
 332:../../../platform/common/services/clock/sam4l/sysclk.c **** 		return sysclk_get_pbd_hz();
 2793              	 .loc 10 332 0
 2794 0b0e FFF7D3FD 	 bl sysclk_get_pbd_hz
 2795 0b12 0346     	 mov r3,r0
 2796 0b14 00E0     	 b .L190
 2797              	.L170:
 333:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 334:../../../platform/common/services/clock/sam4l/sysclk.c **** 	default:
 335:../../../platform/common/services/clock/sam4l/sysclk.c **** 		Assert(false);
 336:../../../platform/common/services/clock/sam4l/sysclk.c **** 		return 0;
 2798              	 .loc 10 336 0
 2799 0b16 0023     	 movs r3,#0
 2800              	.L190:
 337:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 338:../../../platform/common/services/clock/sam4l/sysclk.c **** }
 2801              	 .loc 10 338 0
 2802 0b18 1846     	 mov r0,r3
 2803 0b1a 0837     	 adds r7,r7,#8
 2804              	.LCFI195:
 2805              	 .cfi_def_cfa_offset 8
 2806 0b1c BD46     	 mov sp,r7
 2807              	.LCFI196:
 2808              	 .cfi_def_cfa_register 13
 2809              	 
 2810 0b1e 80BD     	 pop {r7,pc}
 2811              	.L192:
 2812              	 .align 2
 2813              	.L191:
 2814 0b20 00800740 	 .word 1074233344
 2815 0b24 00800240 	 .word 1073905664
 2816 0b28 00800140 	 .word 1073840128
 2817 0b2c 00800040 	 .word 1073774592
 2818 0b30 00000140 	 .word 1073807360
 2819 0b34 00400140 	 .word 1073823744
 2820 0b38 00C00140 	 .word 1073856512
 2821 0b3c 00840140 	 .word 1073841152
 2822 0b40 00C40140 	 .word 1073857536
 2823 0b44 00400240 	 .word 1073889280
 2824 0b48 00000440 	 .word 1074003968
 2825 0b4c 00000340 	 .word 1073938432
 2826 0b50 00C00240 	 .word 1073922048
 2827 0b54 00800340 	 .word 1073971200
 2828 0b58 00C00340 	 .word 1073987584
 2829 0b5c 00800640 	 .word 1074167808
 2830 0b60 00000640 	 .word 1074135040
 2831 0b64 00400640 	 .word 1074151424
 2832 0b68 00C00640 	 .word 1074184192
 2833 0b6c 00000740 	 .word 1074200576
 2834 0b70 00000E40 	 .word 1074659328
 2835 0b74 00100A40 	 .word 1074401280
 2836 0b78 00000840 	 .word 1074266112
 2837 0b7c 00C00740 	 .word 1074249728
 2838 0b80 00000A40 	 .word 1074397184
 2839 0b84 00040A40 	 .word 1074398208
 2840 0b88 00400A40 	 .word 1074413568
 2841 0b8c 00200A40 	 .word 1074405376
 2842 0b90 00500A40 	 .word 1074417664
 2843 0b94 00600A40 	 .word 1074421760
 2844 0b98 00000F40 	 .word 1074724864
 2845 0b9c 00080E40 	 .word 1074661376
 2846 0ba0 00040E40 	 .word 1074660352
 2847 0ba4 000C0E40 	 .word 1074662400
 2848 0ba8 00100E40 	 .word 1074663424
 2849 0bac 000C0F40 	 .word 1074727936
 2850 0bb0 00040F40 	 .word 1074725888
 2851 0bb4 00080F40 	 .word 1074726912
 2852 0bb8 00100F40 	 .word 1074728960
 2853 0bbc 00140F40 	 .word 1074729984
 2854              	 .cfi_endproc
 2855              	.LFE188:
 2857              	 .align 1
 2858              	 .global sysclk_enable_peripheral_clock
 2859              	 .syntax unified
 2860              	 .thumb
 2861              	 .thumb_func
 2862              	 .fpu softvfp
 2864              	sysclk_enable_peripheral_clock:
 2865              	.LFB189:
 339:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 340:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
 341:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief Enable a peripheral's clock from its base address.
 342:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
 343:../../../platform/common/services/clock/sam4l/sysclk.c ****  *  Enables the clock to a peripheral, given its base address. If the peripheral
 344:../../../platform/common/services/clock/sam4l/sysclk.c ****  *  has an associated clock on the HSB bus, this will be enabled also.
 345:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
 346:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param module Pointer to the module's base address.
 347:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
 348:../../../platform/common/services/clock/sam4l/sysclk.c **** void sysclk_enable_peripheral_clock(const volatile void *module)
 349:../../../platform/common/services/clock/sam4l/sysclk.c **** {
 2866              	 .loc 10 349 0
 2867              	 .cfi_startproc
 2868              	 
 2869              	 
 2870 0bc0 80B5     	 push {r7,lr}
 2871              	.LCFI197:
 2872              	 .cfi_def_cfa_offset 8
 2873              	 .cfi_offset 7,-8
 2874              	 .cfi_offset 14,-4
 2875 0bc2 82B0     	 sub sp,sp,#8
 2876              	.LCFI198:
 2877              	 .cfi_def_cfa_offset 16
 2878 0bc4 00AF     	 add r7,sp,#0
 2879              	.LCFI199:
 2880              	 .cfi_def_cfa_register 7
 2881 0bc6 7860     	 str r0,[r7,#4]
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 2882              	 .loc 10 350 0
 2883 0bc8 7B68     	 ldr r3,[r7,#4]
 2884 0bca C04A     	 ldr r2,.L253
 2885 0bcc 9342     	 cmp r3,r2
 2886 0bce 00F04681 	 beq .L195
 2887 0bd2 BE4A     	 ldr r2,.L253
 2888 0bd4 9342     	 cmp r3,r2
 2889 0bd6 6CD8     	 bhi .L196
 2890 0bd8 BD4A     	 ldr r2,.L253+4
 2891 0bda 9342     	 cmp r3,r2
 2892 0bdc 00F00A81 	 beq .L197
 2893 0be0 BB4A     	 ldr r2,.L253+4
 2894 0be2 9342     	 cmp r3,r2
 2895 0be4 30D8     	 bhi .L198
 2896 0be6 BB4A     	 ldr r2,.L253+8
 2897 0be8 9342     	 cmp r3,r2
 2898 0bea 00F0EC80 	 beq .L199
 2899 0bee B94A     	 ldr r2,.L253+8
 2900 0bf0 9342     	 cmp r3,r2
 2901 0bf2 14D8     	 bhi .L200
 2902 0bf4 B84A     	 ldr r2,.L253+12
 2903 0bf6 9342     	 cmp r3,r2
 2904 0bf8 00F0D380 	 beq .L201
 2905 0bfc B64A     	 ldr r2,.L253+12
 2906 0bfe 9342     	 cmp r3,r2
 2907 0c00 04D8     	 bhi .L202
 2908 0c02 B3F1402F 	 cmp r3,#1073758208
 2909 0c06 00F0C880 	 beq .L203
 351:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 352:../../../platform/common/services/clock/sam4l/sysclk.c **** 	#if !SAM4LS
 353:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case AESA_ADDR:
 354:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_hsb_module(SYSCLK_AESA_HSB);
 355:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 356:../../../platform/common/services/clock/sam4l/sysclk.c **** 	#endif
 357:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 358:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case IISC_ADDR:
 359:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_IISC);
 360:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 361:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 362:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case SPI_ADDR:
 363:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_SPI);
 364:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 365:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 366:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TC0_ADDR:
 367:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_TC0);
 368:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_divmask(PBA_DIVMASK_TIMER_CLOCK2
 369:../../../platform/common/services/clock/sam4l/sysclk.c **** 			| PBA_DIVMASK_TIMER_CLOCK3
 370:../../../platform/common/services/clock/sam4l/sysclk.c **** 			| PBA_DIVMASK_TIMER_CLOCK4
 371:../../../platform/common/services/clock/sam4l/sysclk.c **** 			| PBA_DIVMASK_TIMER_CLOCK5
 372:../../../platform/common/services/clock/sam4l/sysclk.c **** 			);
 373:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 374:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 375:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TC1_ADDR:
 376:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_TC1);
 377:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_divmask(PBA_DIVMASK_TIMER_CLOCK2
 378:../../../platform/common/services/clock/sam4l/sysclk.c **** 			| PBA_DIVMASK_TIMER_CLOCK3
 379:../../../platform/common/services/clock/sam4l/sysclk.c **** 			| PBA_DIVMASK_TIMER_CLOCK4
 380:../../../platform/common/services/clock/sam4l/sysclk.c **** 			| PBA_DIVMASK_TIMER_CLOCK5
 381:../../../platform/common/services/clock/sam4l/sysclk.c **** 			);
 382:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 383:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 384:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIM0_ADDR:
 385:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_TWIM0);
 386:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 387:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 388:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIS0_ADDR:
 389:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_TWIS0);
 390:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 391:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 392:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIM1_ADDR:
 393:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_TWIM1);
 394:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 395:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 396:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIS1_ADDR:
 397:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_TWIS1);
 398:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 399:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 400:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USART0_ADDR:
 401:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_USART0);
 402:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_divmask(PBA_DIVMASK_CLK_USART);
 403:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 404:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 405:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USART1_ADDR:
 406:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_USART1);
 407:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_divmask(PBA_DIVMASK_CLK_USART);
 408:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 409:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 410:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USART2_ADDR:
 411:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_USART2);
 412:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_divmask(PBA_DIVMASK_CLK_USART);
 413:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 414:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 415:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USART3_ADDR:
 416:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_USART3);
 417:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_divmask(PBA_DIVMASK_CLK_USART);
 418:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 419:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 420:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case ADCIFE_ADDR:
 421:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_ADCIFE);
 422:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 423:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 424:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case DACC_ADDR:
 425:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_DACC);
 426:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 427:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 428:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case ACIFC_ADDR:
 429:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_ACIFC);
 430:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 431:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 432:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case GLOC_ADDR:
 433:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_GLOC);
 434:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 435:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 436:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case ABDACB_ADDR:
 437:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_ABDACB);
 438:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 439:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 440:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TRNG_ADDR:
 441:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_TRNG);
 442:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 443:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 444:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PARC_ADDR:
 445:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_PARC);
 446:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 447:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 448:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case CATB_ADDR:
 449:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_CATB);
 450:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 451:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 452:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIM2_ADDR:
 453:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_TWIM2);
 454:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 455:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 456:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIM3_ADDR:
 457:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_TWIM3);
 458:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 459:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 460:../../../platform/common/services/clock/sam4l/sysclk.c **** 	#if !SAM4LS
 461:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case LCDCA_ADDR:
 462:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_module(SYSCLK_LCDCA);
 463:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 464:../../../platform/common/services/clock/sam4l/sysclk.c **** 	#endif
 465:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 466:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case HFLASHC_ADDR:
 467:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_hsb_module(SYSCLK_HFLASHC_DATA);
 468:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbb_module(SYSCLK_HFLASHC_REGS);
 469:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 470:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 471:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case HCACHE_ADDR:
 472:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_hsb_module(SYSCLK_HRAMC1_DATA);
 473:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbb_module(SYSCLK_HRAMC1_REGS);
 474:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 475:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 476:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case HMATRIX_ADDR:
 477:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbb_module(SYSCLK_HMATRIX);
 478:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 479:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 480:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PDCA_ADDR:
 481:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_hsb_module(SYSCLK_PDCA_HSB);
 482:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbb_module(SYSCLK_PDCA_PB);
 483:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 484:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 485:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case CRCCU_ADDR:
 486:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_hsb_module(SYSCLK_CRCCU_DATA);
 487:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbb_module(SYSCLK_CRCCU_REGS);
 488:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 489:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 490:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USBC_ADDR:
 491:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_hsb_module(SYSCLK_USBC_DATA);
 492:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbb_module(SYSCLK_USBC_REGS);
 493:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 494:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 495:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PEVC_ADDR:
 496:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbb_module(SYSCLK_PEVC);
 497:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 498:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 499:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PM_ADDR:
 500:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbc_module(SYSCLK_PM);
 501:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 502:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 503:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case CHIPID_ADDR:
 504:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbc_module(SYSCLK_CHIPID);
 505:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 506:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 507:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case SCIF_ADDR:
 508:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbc_module(SYSCLK_SCIF);
 509:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 510:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 511:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case FREQM_ADDR:
 512:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbc_module(SYSCLK_FREQM);
 513:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 514:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 515:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case GPIO_ADDR:
 516:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbc_module(SYSCLK_GPIO);
 517:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 518:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 519:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case BPM_ADDR:
 520:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbd_module(SYSCLK_BPM);
 521:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 522:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 523:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case BSCIF_ADDR:
 524:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbd_module(SYSCLK_BSCIF);
 525:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 526:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 527:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case AST_ADDR:
 528:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbd_module(SYSCLK_AST);
 529:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 530:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 531:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case WDT_ADDR:
 532:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbd_module(SYSCLK_WDT);
 533:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 534:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 535:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case EIC_ADDR:
 536:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbd_module(SYSCLK_EIC);
 537:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 538:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 539:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PICOUART_ADDR:
 540:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbd_module(SYSCLK_PICOUART);
 541:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 542:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 543:../../../platform/common/services/clock/sam4l/sysclk.c **** 	default:
 544:../../../platform/common/services/clock/sam4l/sysclk.c **** 		Assert(false);
 545:../../../platform/common/services/clock/sam4l/sysclk.c **** 		return;
 2910              	 .loc 10 545 0
 2911 0c0a DDE1     	 b .L193
 2912              	.L202:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 2913              	 .loc 10 350 0
 2914 0c0c B34A     	 ldr r2,.L253+16
 2915 0c0e 9342     	 cmp r3,r2
 2916 0c10 00F0CB80 	 beq .L204
 2917 0c14 B24A     	 ldr r2,.L253+20
 2918 0c16 9342     	 cmp r3,r2
 2919 0c18 00F0CE80 	 beq .L205
 2920              	 .loc 10 545 0
 2921 0c1c D4E1     	 b .L193
 2922              	.L200:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 2923              	 .loc 10 350 0
 2924 0c1e B14A     	 ldr r2,.L253+24
 2925 0c20 9342     	 cmp r3,r2
 2926 0c22 00F0D880 	 beq .L206
 2927 0c26 AF4A     	 ldr r2,.L253+24
 2928 0c28 9342     	 cmp r3,r2
 2929 0c2a 04D8     	 bhi .L207
 2930 0c2c AE4A     	 ldr r2,.L253+28
 2931 0c2e 9342     	 cmp r3,r2
 2932 0c30 00F0CD80 	 beq .L208
 2933              	 .loc 10 545 0
 2934 0c34 C8E1     	 b .L193
 2935              	.L207:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 2936              	 .loc 10 350 0
 2937 0c36 AD4A     	 ldr r2,.L253+32
 2938 0c38 9342     	 cmp r3,r2
 2939 0c3a 00F0D080 	 beq .L209
 2940 0c3e AC4A     	 ldr r2,.L253+36
 2941 0c40 9342     	 cmp r3,r2
 2942 0c42 00F0D080 	 beq .L210
 2943              	 .loc 10 545 0
 2944 0c46 BFE1     	 b .L193
 2945              	.L198:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 2946              	 .loc 10 350 0
 2947 0c48 AA4A     	 ldr r2,.L253+40
 2948 0c4a 9342     	 cmp r3,r2
 2949 0c4c 00F0EF80 	 beq .L211
 2950 0c50 A84A     	 ldr r2,.L253+40
 2951 0c52 9342     	 cmp r3,r2
 2952 0c54 14D8     	 bhi .L212
 2953 0c56 A84A     	 ldr r2,.L253+44
 2954 0c58 9342     	 cmp r3,r2
 2955 0c5a 00F0D980 	 beq .L213
 2956 0c5e A64A     	 ldr r2,.L253+44
 2957 0c60 9342     	 cmp r3,r2
 2958 0c62 04D8     	 bhi .L214
 2959 0c64 A54A     	 ldr r2,.L253+48
 2960 0c66 9342     	 cmp r3,r2
 2961 0c68 00F0CB80 	 beq .L215
 2962              	 .loc 10 545 0
 2963 0c6c ACE1     	 b .L193
 2964              	.L214:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 2965              	 .loc 10 350 0
 2966 0c6e A44A     	 ldr r2,.L253+52
 2967 0c70 9342     	 cmp r3,r2
 2968 0c72 00F0D480 	 beq .L216
 2969 0c76 A34A     	 ldr r2,.L253+56
 2970 0c78 9342     	 cmp r3,r2
 2971 0c7a 00F0D480 	 beq .L217
 2972              	 .loc 10 545 0
 2973 0c7e A3E1     	 b .L193
 2974              	.L212:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 2975              	 .loc 10 350 0
 2976 0c80 A14A     	 ldr r2,.L253+60
 2977 0c82 9342     	 cmp r3,r2
 2978 0c84 00F0DF80 	 beq .L218
 2979 0c88 9F4A     	 ldr r2,.L253+60
 2980 0c8a 9342     	 cmp r3,r2
 2981 0c8c 08D8     	 bhi .L219
 2982 0c8e 9F4A     	 ldr r2,.L253+64
 2983 0c90 9342     	 cmp r3,r2
 2984 0c92 00F0D080 	 beq .L220
 2985 0c96 9E4A     	 ldr r2,.L253+68
 2986 0c98 9342     	 cmp r3,r2
 2987 0c9a 00F0D080 	 beq .L221
 2988              	 .loc 10 545 0
 2989 0c9e 93E1     	 b .L193
 2990              	.L219:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 2991              	 .loc 10 350 0
 2992 0ca0 9C4A     	 ldr r2,.L253+72
 2993 0ca2 9342     	 cmp r3,r2
 2994 0ca4 00F0D380 	 beq .L222
 2995 0ca8 9B4A     	 ldr r2,.L253+76
 2996 0caa 9342     	 cmp r3,r2
 2997 0cac 00F0D380 	 beq .L223
 2998              	 .loc 10 545 0
 2999 0cb0 8AE1     	 b .L193
 3000              	.L196:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3001              	 .loc 10 350 0
 3002 0cb2 9A4A     	 ldr r2,.L253+80
 3003 0cb4 9342     	 cmp r3,r2
 3004 0cb6 00F05B81 	 beq .L224
 3005 0cba 984A     	 ldr r2,.L253+80
 3006 0cbc 9342     	 cmp r3,r2
 3007 0cbe 33D8     	 bhi .L225
 3008 0cc0 974A     	 ldr r2,.L253+84
 3009 0cc2 9342     	 cmp r3,r2
 3010 0cc4 00F0E580 	 beq .L226
 3011 0cc8 954A     	 ldr r2,.L253+84
 3012 0cca 9342     	 cmp r3,r2
 3013 0ccc 14D8     	 bhi .L227
 3014 0cce 954A     	 ldr r2,.L253+88
 3015 0cd0 9342     	 cmp r3,r2
 3016 0cd2 00F0CC80 	 beq .L228
 3017 0cd6 934A     	 ldr r2,.L253+88
 3018 0cd8 9342     	 cmp r3,r2
 3019 0cda 04D8     	 bhi .L229
 3020 0cdc 924A     	 ldr r2,.L253+92
 3021 0cde 9342     	 cmp r3,r2
 3022 0ce0 00F0C180 	 beq .L230
 3023              	 .loc 10 545 0
 3024 0ce4 70E1     	 b .L193
 3025              	.L229:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3026              	 .loc 10 350 0
 3027 0ce6 914A     	 ldr r2,.L253+96
 3028 0ce8 9342     	 cmp r3,r2
 3029 0cea 00F0C480 	 beq .L231
 3030 0cee 904A     	 ldr r2,.L253+100
 3031 0cf0 9342     	 cmp r3,r2
 3032 0cf2 00F0C780 	 beq .L232
 3033              	 .loc 10 545 0
 3034 0cf6 67E1     	 b .L193
 3035              	.L227:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3036              	 .loc 10 350 0
 3037 0cf8 8E4A     	 ldr r2,.L253+104
 3038 0cfa 9342     	 cmp r3,r2
 3039 0cfc 00F0DB80 	 beq .L233
 3040 0d00 8C4A     	 ldr r2,.L253+104
 3041 0d02 9342     	 cmp r3,r2
 3042 0d04 08D8     	 bhi .L234
 3043 0d06 8C4A     	 ldr r2,.L253+108
 3044 0d08 9342     	 cmp r3,r2
 3045 0d0a 00F0C680 	 beq .L235
 3046 0d0e 8B4A     	 ldr r2,.L253+112
 3047 0d10 9342     	 cmp r3,r2
 3048 0d12 00F0C980 	 beq .L236
 3049              	 .loc 10 545 0
 3050 0d16 57E1     	 b .L193
 3051              	.L234:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3052              	 .loc 10 350 0
 3053 0d18 894A     	 ldr r2,.L253+116
 3054 0d1a 9342     	 cmp r3,r2
 3055 0d1c 00F0D280 	 beq .L237
 3056 0d20 884A     	 ldr r2,.L253+120
 3057 0d22 9342     	 cmp r3,r2
 3058 0d24 35D0     	 beq .L238
 3059              	 .loc 10 545 0
 3060 0d26 4FE1     	 b .L193
 3061              	.L225:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3062              	 .loc 10 350 0
 3063 0d28 874A     	 ldr r2,.L253+124
 3064 0d2a 9342     	 cmp r3,r2
 3065 0d2c 00F03481 	 beq .L239
 3066 0d30 854A     	 ldr r2,.L253+124
 3067 0d32 9342     	 cmp r3,r2
 3068 0d34 14D8     	 bhi .L240
 3069 0d36 854A     	 ldr r2,.L253+128
 3070 0d38 9342     	 cmp r3,r2
 3071 0d3a 00F02181 	 beq .L241
 3072 0d3e 834A     	 ldr r2,.L253+128
 3073 0d40 9342     	 cmp r3,r2
 3074 0d42 04D8     	 bhi .L242
 3075 0d44 824A     	 ldr r2,.L253+132
 3076 0d46 9342     	 cmp r3,r2
 3077 0d48 00F01681 	 beq .L243
 3078              	 .loc 10 545 0
 3079 0d4c 3CE1     	 b .L193
 3080              	.L242:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3081              	 .loc 10 350 0
 3082 0d4e 814A     	 ldr r2,.L253+136
 3083 0d50 9342     	 cmp r3,r2
 3084 0d52 00F01981 	 beq .L244
 3085 0d56 804A     	 ldr r2,.L253+140
 3086 0d58 9342     	 cmp r3,r2
 3087 0d5a 00F01981 	 beq .L245
 3088              	 .loc 10 545 0
 3089 0d5e 33E1     	 b .L193
 3090              	.L240:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3091              	 .loc 10 350 0
 3092 0d60 7E4A     	 ldr r2,.L253+144
 3093 0d62 9342     	 cmp r3,r2
 3094 0d64 00F02481 	 beq .L246
 3095 0d68 7C4A     	 ldr r2,.L253+144
 3096 0d6a 9342     	 cmp r3,r2
 3097 0d6c 08D8     	 bhi .L247
 3098 0d6e 7C4A     	 ldr r2,.L253+148
 3099 0d70 9342     	 cmp r3,r2
 3100 0d72 00F01581 	 beq .L248
 3101 0d76 7B4A     	 ldr r2,.L253+152
 3102 0d78 9342     	 cmp r3,r2
 3103 0d7a 00F01581 	 beq .L249
 3104              	 .loc 10 545 0
 3105 0d7e 23E1     	 b .L193
 3106              	.L247:
 350:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3107              	 .loc 10 350 0
 3108 0d80 794A     	 ldr r2,.L253+156
 3109 0d82 9342     	 cmp r3,r2
 3110 0d84 00F01881 	 beq .L250
 3111 0d88 784A     	 ldr r2,.L253+160
 3112 0d8a 9342     	 cmp r3,r2
 3113 0d8c 00F01881 	 beq .L251
 3114              	 .loc 10 545 0
 3115 0d90 1AE1     	 b .L193
 3116              	.L238:
 354:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3117              	 .loc 10 354 0
 3118 0d92 0920     	 movs r0,#9
 3119 0d94 FFF797FC 	 bl sysclk_enable_hsb_module
 355:../../../platform/common/services/clock/sam4l/sysclk.c **** 	#endif
 3120              	 .loc 10 355 0
 3121 0d98 16E1     	 b .L193
 3122              	.L203:
 359:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3123              	 .loc 10 359 0
 3124 0d9a 0020     	 movs r0,#0
 3125 0d9c FFF7FEFF 	 bl sysclk_enable_pba_module
 360:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3126              	 .loc 10 360 0
 3127 0da0 12E1     	 b .L193
 3128              	.L201:
 363:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3129              	 .loc 10 363 0
 3130 0da2 0120     	 movs r0,#1
 3131 0da4 FFF7FEFF 	 bl sysclk_enable_pba_module
 364:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3132              	 .loc 10 364 0
 3133 0da8 0EE1     	 b .L193
 3134              	.L204:
 367:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_divmask(PBA_DIVMASK_TIMER_CLOCK2
 3135              	 .loc 10 367 0
 3136 0daa 0220     	 movs r0,#2
 3137 0dac FFF7FEFF 	 bl sysclk_enable_pba_module
 368:../../../platform/common/services/clock/sam4l/sysclk.c **** 			| PBA_DIVMASK_TIMER_CLOCK3
 3138              	 .loc 10 368 0
 3139 0db0 5520     	 movs r0,#85
 3140 0db2 FFF7D0FC 	 bl sysclk_enable_pba_divmask
 373:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3141              	 .loc 10 373 0
 3142 0db6 07E1     	 b .L193
 3143              	.L205:
 376:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_divmask(PBA_DIVMASK_TIMER_CLOCK2
 3144              	 .loc 10 376 0
 3145 0db8 0320     	 movs r0,#3
 3146 0dba FFF7FEFF 	 bl sysclk_enable_pba_module
 377:../../../platform/common/services/clock/sam4l/sysclk.c **** 			| PBA_DIVMASK_TIMER_CLOCK3
 3147              	 .loc 10 377 0
 3148 0dbe 5520     	 movs r0,#85
 3149 0dc0 FFF7C9FC 	 bl sysclk_enable_pba_divmask
 382:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3150              	 .loc 10 382 0
 3151 0dc4 00E1     	 b .L193
 3152              	.L199:
 385:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3153              	 .loc 10 385 0
 3154 0dc6 0420     	 movs r0,#4
 3155 0dc8 FFF7FEFF 	 bl sysclk_enable_pba_module
 386:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3156              	 .loc 10 386 0
 3157 0dcc FCE0     	 b .L193
 3158              	.L208:
 389:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3159              	 .loc 10 389 0
 3160 0dce 0520     	 movs r0,#5
 3161 0dd0 FFF7FEFF 	 bl sysclk_enable_pba_module
 390:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3162              	 .loc 10 390 0
 3163 0dd4 F8E0     	 b .L193
 3164              	.L206:
 393:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3165              	 .loc 10 393 0
 3166 0dd6 0620     	 movs r0,#6
 3167 0dd8 FFF7FEFF 	 bl sysclk_enable_pba_module
 394:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3168              	 .loc 10 394 0
 3169 0ddc F4E0     	 b .L193
 3170              	.L209:
 397:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3171              	 .loc 10 397 0
 3172 0dde 0720     	 movs r0,#7
 3173 0de0 FFF7FEFF 	 bl sysclk_enable_pba_module
 398:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3174              	 .loc 10 398 0
 3175 0de4 F0E0     	 b .L193
 3176              	.L210:
 401:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_divmask(PBA_DIVMASK_CLK_USART);
 3177              	 .loc 10 401 0
 3178 0de6 0820     	 movs r0,#8
 3179 0de8 FFF7FEFF 	 bl sysclk_enable_pba_module
 402:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3180              	 .loc 10 402 0
 3181 0dec 0420     	 movs r0,#4
 3182 0dee FFF7B2FC 	 bl sysclk_enable_pba_divmask
 403:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3183              	 .loc 10 403 0
 3184 0df2 E9E0     	 b .L193
 3185              	.L197:
 406:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_divmask(PBA_DIVMASK_CLK_USART);
 3186              	 .loc 10 406 0
 3187 0df4 0920     	 movs r0,#9
 3188 0df6 FFF7FEFF 	 bl sysclk_enable_pba_module
 407:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3189              	 .loc 10 407 0
 3190 0dfa 0420     	 movs r0,#4
 3191 0dfc FFF7ABFC 	 bl sysclk_enable_pba_divmask
 408:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3192              	 .loc 10 408 0
 3193 0e00 E2E0     	 b .L193
 3194              	.L215:
 411:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_divmask(PBA_DIVMASK_CLK_USART);
 3195              	 .loc 10 411 0
 3196 0e02 0A20     	 movs r0,#10
 3197 0e04 FFF7FEFF 	 bl sysclk_enable_pba_module
 412:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3198              	 .loc 10 412 0
 3199 0e08 0420     	 movs r0,#4
 3200 0e0a FFF7A4FC 	 bl sysclk_enable_pba_divmask
 413:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3201              	 .loc 10 413 0
 3202 0e0e DBE0     	 b .L193
 3203              	.L213:
 416:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pba_divmask(PBA_DIVMASK_CLK_USART);
 3204              	 .loc 10 416 0
 3205 0e10 0B20     	 movs r0,#11
 3206 0e12 FFF7FEFF 	 bl sysclk_enable_pba_module
 417:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3207              	 .loc 10 417 0
 3208 0e16 0420     	 movs r0,#4
 3209 0e18 FFF79DFC 	 bl sysclk_enable_pba_divmask
 418:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3210              	 .loc 10 418 0
 3211 0e1c D4E0     	 b .L193
 3212              	.L216:
 421:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3213              	 .loc 10 421 0
 3214 0e1e 0C20     	 movs r0,#12
 3215 0e20 FFF7FEFF 	 bl sysclk_enable_pba_module
 422:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3216              	 .loc 10 422 0
 3217 0e24 D0E0     	 b .L193
 3218              	.L217:
 425:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3219              	 .loc 10 425 0
 3220 0e26 0D20     	 movs r0,#13
 3221 0e28 FFF7FEFF 	 bl sysclk_enable_pba_module
 426:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3222              	 .loc 10 426 0
 3223 0e2c CCE0     	 b .L193
 3224              	.L211:
 429:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3225              	 .loc 10 429 0
 3226 0e2e 0E20     	 movs r0,#14
 3227 0e30 FFF7FEFF 	 bl sysclk_enable_pba_module
 430:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3228              	 .loc 10 430 0
 3229 0e34 C8E0     	 b .L193
 3230              	.L220:
 433:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3231              	 .loc 10 433 0
 3232 0e36 0F20     	 movs r0,#15
 3233 0e38 FFF7FEFF 	 bl sysclk_enable_pba_module
 434:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3234              	 .loc 10 434 0
 3235 0e3c C4E0     	 b .L193
 3236              	.L221:
 437:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3237              	 .loc 10 437 0
 3238 0e3e 1020     	 movs r0,#16
 3239 0e40 FFF7FEFF 	 bl sysclk_enable_pba_module
 438:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3240              	 .loc 10 438 0
 3241 0e44 C0E0     	 b .L193
 3242              	.L218:
 441:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3243              	 .loc 10 441 0
 3244 0e46 1120     	 movs r0,#17
 3245 0e48 FFF7FEFF 	 bl sysclk_enable_pba_module
 442:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3246              	 .loc 10 442 0
 3247 0e4c BCE0     	 b .L193
 3248              	.L222:
 445:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3249              	 .loc 10 445 0
 3250 0e4e 1220     	 movs r0,#18
 3251 0e50 FFF7FEFF 	 bl sysclk_enable_pba_module
 446:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3252              	 .loc 10 446 0
 3253 0e54 B8E0     	 b .L193
 3254              	.L223:
 449:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3255              	 .loc 10 449 0
 3256 0e56 1320     	 movs r0,#19
 3257 0e58 FFF7FEFF 	 bl sysclk_enable_pba_module
 450:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3258              	 .loc 10 450 0
 3259 0e5c B4E0     	 b .L193
 3260              	.L195:
 453:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3261              	 .loc 10 453 0
 3262 0e5e 1520     	 movs r0,#21
 3263 0e60 FFF7FEFF 	 bl sysclk_enable_pba_module
 454:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3264              	 .loc 10 454 0
 3265 0e64 B0E0     	 b .L193
 3266              	.L230:
 457:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3267              	 .loc 10 457 0
 3268 0e66 1620     	 movs r0,#22
 3269 0e68 FFF7FEFF 	 bl sysclk_enable_pba_module
 458:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3270              	 .loc 10 458 0
 3271 0e6c ACE0     	 b .L193
 3272              	.L228:
 462:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3273              	 .loc 10 462 0
 3274 0e6e 1720     	 movs r0,#23
 3275 0e70 FFF7FEFF 	 bl sysclk_enable_pba_module
 463:../../../platform/common/services/clock/sam4l/sysclk.c **** 	#endif
 3276              	 .loc 10 463 0
 3277 0e74 A8E0     	 b .L193
 3278              	.L231:
 467:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbb_module(SYSCLK_HFLASHC_REGS);
 3279              	 .loc 10 467 0
 3280 0e76 0120     	 movs r0,#1
 3281 0e78 FFF725FC 	 bl sysclk_enable_hsb_module
 468:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3282              	 .loc 10 468 0
 3283 0e7c 0020     	 movs r0,#0
 3284 0e7e FFF7FEFF 	 bl sysclk_enable_pbb_module
 469:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3285              	 .loc 10 469 0
 3286 0e82 A1E0     	 b .L193
 3287              	.L232:
 472:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbb_module(SYSCLK_HRAMC1_REGS);
 3288              	 .loc 10 472 0
 3289 0e84 0220     	 movs r0,#2
 3290 0e86 FFF71EFC 	 bl sysclk_enable_hsb_module
 473:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3291              	 .loc 10 473 0
 3292 0e8a 0120     	 movs r0,#1
 3293 0e8c FFF7FEFF 	 bl sysclk_enable_pbb_module
 474:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3294              	 .loc 10 474 0
 3295 0e90 9AE0     	 b .L193
 3296              	.L226:
 477:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3297              	 .loc 10 477 0
 3298 0e92 0220     	 movs r0,#2
 3299 0e94 FFF7FEFF 	 bl sysclk_enable_pbb_module
 478:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3300              	 .loc 10 478 0
 3301 0e98 96E0     	 b .L193
 3302              	.L235:
 481:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbb_module(SYSCLK_PDCA_PB);
 3303              	 .loc 10 481 0
 3304 0e9a 0020     	 movs r0,#0
 3305 0e9c FFF713FC 	 bl sysclk_enable_hsb_module
 482:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3306              	 .loc 10 482 0
 3307 0ea0 0320     	 movs r0,#3
 3308 0ea2 FFF7FEFF 	 bl sysclk_enable_pbb_module
 483:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3309              	 .loc 10 483 0
 3310 0ea6 8FE0     	 b .L193
 3311              	.L236:
 486:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbb_module(SYSCLK_CRCCU_REGS);
 3312              	 .loc 10 486 0
 3313 0ea8 0420     	 movs r0,#4
 3314 0eaa FFF70CFC 	 bl sysclk_enable_hsb_module
 487:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3315              	 .loc 10 487 0
 3316 0eae 0420     	 movs r0,#4
 3317 0eb0 FFF7FEFF 	 bl sysclk_enable_pbb_module
 488:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3318              	 .loc 10 488 0
 3319 0eb4 88E0     	 b .L193
 3320              	.L233:
 491:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_enable_pbb_module(SYSCLK_USBC_REGS);
 3321              	 .loc 10 491 0
 3322 0eb6 0320     	 movs r0,#3
 3323 0eb8 FFF705FC 	 bl sysclk_enable_hsb_module
 492:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3324              	 .loc 10 492 0
 3325 0ebc 0520     	 movs r0,#5
 3326 0ebe FFF7FEFF 	 bl sysclk_enable_pbb_module
 493:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3327              	 .loc 10 493 0
 3328 0ec2 81E0     	 b .L193
 3329              	.L237:
 496:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3330              	 .loc 10 496 0
 3331 0ec4 0620     	 movs r0,#6
 3332 0ec6 FFF7FEFF 	 bl sysclk_enable_pbb_module
 497:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3333              	 .loc 10 497 0
 3334 0eca 7DE0     	 b .L193
 3335              	.L254:
 3336              	 .align 2
 3337              	.L253:
 3338 0ecc 00800740 	 .word 1074233344
 3339 0ed0 00800240 	 .word 1073905664
 3340 0ed4 00800140 	 .word 1073840128
 3341 0ed8 00800040 	 .word 1073774592
 3342 0edc 00000140 	 .word 1073807360
 3343 0ee0 00400140 	 .word 1073823744
 3344 0ee4 00C00140 	 .word 1073856512
 3345 0ee8 00840140 	 .word 1073841152
 3346 0eec 00C40140 	 .word 1073857536
 3347 0ef0 00400240 	 .word 1073889280
 3348 0ef4 00000440 	 .word 1074003968
 3349 0ef8 00000340 	 .word 1073938432
 3350 0efc 00C00240 	 .word 1073922048
 3351 0f00 00800340 	 .word 1073971200
 3352 0f04 00C00340 	 .word 1073987584
 3353 0f08 00800640 	 .word 1074167808
 3354 0f0c 00000640 	 .word 1074135040
 3355 0f10 00400640 	 .word 1074151424
 3356 0f14 00C00640 	 .word 1074184192
 3357 0f18 00000740 	 .word 1074200576
 3358 0f1c 00000E40 	 .word 1074659328
 3359 0f20 00100A40 	 .word 1074401280
 3360 0f24 00000840 	 .word 1074266112
 3361 0f28 00C00740 	 .word 1074249728
 3362 0f2c 00000A40 	 .word 1074397184
 3363 0f30 00040A40 	 .word 1074398208
 3364 0f34 00500A40 	 .word 1074417664
 3365 0f38 00200A40 	 .word 1074405376
 3366 0f3c 00400A40 	 .word 1074413568
 3367 0f40 00600A40 	 .word 1074421760
 3368 0f44 00000B40 	 .word 1074462720
 3369 0f48 00000F40 	 .word 1074724864
 3370 0f4c 00080E40 	 .word 1074661376
 3371 0f50 00040E40 	 .word 1074660352
 3372 0f54 000C0E40 	 .word 1074662400
 3373 0f58 00100E40 	 .word 1074663424
 3374 0f5c 000C0F40 	 .word 1074727936
 3375 0f60 00040F40 	 .word 1074725888
 3376 0f64 00080F40 	 .word 1074726912
 3377 0f68 00100F40 	 .word 1074728960
 3378 0f6c 00140F40 	 .word 1074729984
 3379              	.L224:
 500:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3380              	 .loc 10 500 0
 3381 0f70 0020     	 movs r0,#0
 3382 0f72 FFF7C0FB 	 bl sysclk_enable_pbc_module
 501:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3383              	 .loc 10 501 0
 3384 0f76 27E0     	 b .L193
 3385              	.L243:
 504:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3386              	 .loc 10 504 0
 3387 0f78 0120     	 movs r0,#1
 3388 0f7a FFF7BCFB 	 bl sysclk_enable_pbc_module
 505:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3389              	 .loc 10 505 0
 3390 0f7e 23E0     	 b .L193
 3391              	.L241:
 508:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3392              	 .loc 10 508 0
 3393 0f80 0220     	 movs r0,#2
 3394 0f82 FFF7B8FB 	 bl sysclk_enable_pbc_module
 509:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3395              	 .loc 10 509 0
 3396 0f86 1FE0     	 b .L193
 3397              	.L244:
 512:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3398              	 .loc 10 512 0
 3399 0f88 0320     	 movs r0,#3
 3400 0f8a FFF7B4FB 	 bl sysclk_enable_pbc_module
 513:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3401              	 .loc 10 513 0
 3402 0f8e 1BE0     	 b .L193
 3403              	.L245:
 516:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3404              	 .loc 10 516 0
 3405 0f90 0420     	 movs r0,#4
 3406 0f92 FFF7B0FB 	 bl sysclk_enable_pbc_module
 517:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3407              	 .loc 10 517 0
 3408 0f96 17E0     	 b .L193
 3409              	.L239:
 520:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3410              	 .loc 10 520 0
 3411 0f98 0020     	 movs r0,#0
 3412 0f9a FFF7C4FB 	 bl sysclk_enable_pbd_module
 521:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3413              	 .loc 10 521 0
 3414 0f9e 13E0     	 b .L193
 3415              	.L248:
 524:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3416              	 .loc 10 524 0
 3417 0fa0 0120     	 movs r0,#1
 3418 0fa2 FFF7C0FB 	 bl sysclk_enable_pbd_module
 525:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3419              	 .loc 10 525 0
 3420 0fa6 0FE0     	 b .L193
 3421              	.L249:
 528:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3422              	 .loc 10 528 0
 3423 0fa8 0220     	 movs r0,#2
 3424 0faa FFF7BCFB 	 bl sysclk_enable_pbd_module
 529:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3425              	 .loc 10 529 0
 3426 0fae 0BE0     	 b .L193
 3427              	.L246:
 532:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3428              	 .loc 10 532 0
 3429 0fb0 0320     	 movs r0,#3
 3430 0fb2 FFF7B8FB 	 bl sysclk_enable_pbd_module
 533:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3431              	 .loc 10 533 0
 3432 0fb6 07E0     	 b .L193
 3433              	.L250:
 536:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3434              	 .loc 10 536 0
 3435 0fb8 0420     	 movs r0,#4
 3436 0fba FFF7B4FB 	 bl sysclk_enable_pbd_module
 537:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3437              	 .loc 10 537 0
 3438 0fbe 03E0     	 b .L193
 3439              	.L251:
 540:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3440              	 .loc 10 540 0
 3441 0fc0 0520     	 movs r0,#5
 3442 0fc2 FFF7B0FB 	 bl sysclk_enable_pbd_module
 541:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3443              	 .loc 10 541 0
 3444 0fc6 00BF     	 nop
 3445              	.L193:
 546:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 547:../../../platform/common/services/clock/sam4l/sysclk.c **** }
 3446              	 .loc 10 547 0
 3447 0fc8 0837     	 adds r7,r7,#8
 3448              	.LCFI200:
 3449              	 .cfi_def_cfa_offset 8
 3450 0fca BD46     	 mov sp,r7
 3451              	.LCFI201:
 3452              	 .cfi_def_cfa_register 13
 3453              	 
 3454 0fcc 80BD     	 pop {r7,pc}
 3455              	 .cfi_endproc
 3456              	.LFE189:
 3458              	 .align 1
 3459              	 .global sysclk_disable_peripheral_clock
 3460              	 .syntax unified
 3461              	 .thumb
 3462              	 .thumb_func
 3463              	 .fpu softvfp
 3465              	sysclk_disable_peripheral_clock:
 3466              	.LFB190:
 548:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 549:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
 550:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief Disable a peripheral's clock from its base address.
 551:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
 552:../../../platform/common/services/clock/sam4l/sysclk.c ****  *  Disables the clock to a peripheral, given its base address. If the peripheral
 553:../../../platform/common/services/clock/sam4l/sysclk.c ****  *  has an associated clock on the HSB bus, this will be disabled also.
 554:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
 555:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param module Pointer to the module's base address.
 556:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
 557:../../../platform/common/services/clock/sam4l/sysclk.c **** void sysclk_disable_peripheral_clock(const volatile void *module)
 558:../../../platform/common/services/clock/sam4l/sysclk.c **** {
 3467              	 .loc 10 558 0
 3468              	 .cfi_startproc
 3469              	 
 3470              	 
 3471 0fce 80B5     	 push {r7,lr}
 3472              	.LCFI202:
 3473              	 .cfi_def_cfa_offset 8
 3474              	 .cfi_offset 7,-8
 3475              	 .cfi_offset 14,-4
 3476 0fd0 82B0     	 sub sp,sp,#8
 3477              	.LCFI203:
 3478              	 .cfi_def_cfa_offset 16
 3479 0fd2 00AF     	 add r7,sp,#0
 3480              	.LCFI204:
 3481              	 .cfi_def_cfa_register 7
 3482 0fd4 7860     	 str r0,[r7,#4]
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3483              	 .loc 10 559 0
 3484 0fd6 7B68     	 ldr r3,[r7,#4]
 3485 0fd8 BF4A     	 ldr r2,.L316
 3486 0fda 9342     	 cmp r3,r2
 3487 0fdc 00F03481 	 beq .L257
 3488 0fe0 BD4A     	 ldr r2,.L316
 3489 0fe2 9342     	 cmp r3,r2
 3490 0fe4 6CD8     	 bhi .L258
 3491 0fe6 BD4A     	 ldr r2,.L316+4
 3492 0fe8 9342     	 cmp r3,r2
 3493 0fea 00F00181 	 beq .L259
 3494 0fee BB4A     	 ldr r2,.L316+4
 3495 0ff0 9342     	 cmp r3,r2
 3496 0ff2 30D8     	 bhi .L260
 3497 0ff4 BA4A     	 ldr r2,.L316+8
 3498 0ff6 9342     	 cmp r3,r2
 3499 0ff8 00F0E680 	 beq .L261
 3500 0ffc B84A     	 ldr r2,.L316+8
 3501 0ffe 9342     	 cmp r3,r2
 3502 1000 14D8     	 bhi .L262
 3503 1002 B84A     	 ldr r2,.L316+12
 3504 1004 9342     	 cmp r3,r2
 3505 1006 00F0D380 	 beq .L263
 3506 100a B64A     	 ldr r2,.L316+12
 3507 100c 9342     	 cmp r3,r2
 3508 100e 04D8     	 bhi .L264
 3509 1010 B3F1402F 	 cmp r3,#1073758208
 3510 1014 00F0C880 	 beq .L265
 560:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 561:../../../platform/common/services/clock/sam4l/sysclk.c **** 	#if !SAM4LS
 562:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case AESA_ADDR:
 563:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_hsb_module(SYSCLK_AESA_HSB);
 564:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 565:../../../platform/common/services/clock/sam4l/sysclk.c **** 	#endif
 566:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 567:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case IISC_ADDR:
 568:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_IISC);
 569:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 570:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 571:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case SPI_ADDR:
 572:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_SPI);
 573:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 574:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 575:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TC0_ADDR:
 576:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_TC0);
 577:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 578:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 579:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TC1_ADDR:
 580:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_TC1);
 581:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 582:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 583:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIM0_ADDR:
 584:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_TWIM0);
 585:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 586:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 587:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIS0_ADDR:
 588:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_TWIS0);
 589:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 590:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 591:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIM1_ADDR:
 592:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_TWIM1);
 593:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 594:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 595:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIS1_ADDR:
 596:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_TWIS1);
 597:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 598:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 599:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USART0_ADDR:
 600:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_USART0);
 601:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 602:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 603:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USART1_ADDR:
 604:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_USART1);
 605:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 606:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 607:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USART2_ADDR:
 608:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_USART2);
 609:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 610:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 611:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USART3_ADDR:
 612:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_USART3);
 613:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 614:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 615:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case ADCIFE_ADDR:
 616:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_ADCIFE);
 617:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 618:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 619:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case DACC_ADDR:
 620:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_DACC);
 621:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 622:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 623:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case ACIFC_ADDR:
 624:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_ACIFC);
 625:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 626:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 627:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case GLOC_ADDR:
 628:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_GLOC);
 629:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 630:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 631:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case ABDACB_ADDR:
 632:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_ABDACB);
 633:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 634:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 635:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TRNG_ADDR:
 636:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_TRNG);
 637:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 638:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 639:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PARC_ADDR:
 640:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_PARC);
 641:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 642:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 643:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case CATB_ADDR:
 644:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_CATB);
 645:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 646:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 647:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIM2_ADDR:
 648:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_TWIM2);
 649:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 650:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 651:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case TWIM3_ADDR:
 652:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_TWIM3);
 653:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 654:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 655:../../../platform/common/services/clock/sam4l/sysclk.c **** 	#if !SAM4LS
 656:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case LCDCA_ADDR:
 657:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_module(SYSCLK_LCDCA);
 658:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 659:../../../platform/common/services/clock/sam4l/sysclk.c **** 	#endif
 660:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 661:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case HFLASHC_ADDR:
 662:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbb_module(SYSCLK_HFLASHC_REGS);
 663:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 664:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 665:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case HCACHE_ADDR:
 666:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_hsb_module(SYSCLK_HRAMC1_DATA);
 667:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbb_module(SYSCLK_HRAMC1_REGS);
 668:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 669:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 670:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case HMATRIX_ADDR:
 671:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbb_module(SYSCLK_HMATRIX);
 672:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 673:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 674:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PDCA_ADDR:
 675:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_hsb_module(SYSCLK_PDCA_HSB);
 676:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbb_module(SYSCLK_PDCA_PB);
 677:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 678:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 679:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case CRCCU_ADDR:
 680:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_hsb_module(SYSCLK_CRCCU_DATA);
 681:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbb_module(SYSCLK_CRCCU_REGS);
 682:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 683:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 684:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case USBC_ADDR:
 685:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_hsb_module(SYSCLK_USBC_DATA);
 686:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbb_module(SYSCLK_USBC_REGS);
 687:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 688:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 689:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PEVC_ADDR:
 690:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbb_module(SYSCLK_PEVC);
 691:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 692:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 693:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PM_ADDR:
 694:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbc_module(SYSCLK_PM);
 695:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 696:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 697:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case CHIPID_ADDR:
 698:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbc_module(SYSCLK_CHIPID);
 699:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 700:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 701:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case SCIF_ADDR:
 702:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbc_module(SYSCLK_SCIF);
 703:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 704:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 705:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case FREQM_ADDR:
 706:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbc_module(SYSCLK_FREQM);
 707:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 708:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 709:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case GPIO_ADDR:
 710:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbc_module(SYSCLK_GPIO);
 711:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 712:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 713:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case BPM_ADDR:
 714:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbd_module(SYSCLK_BPM);
 715:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 716:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 717:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case BSCIF_ADDR:
 718:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbd_module(SYSCLK_BSCIF);
 719:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 720:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 721:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case AST_ADDR:
 722:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbd_module(SYSCLK_AST);
 723:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 724:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 725:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case WDT_ADDR:
 726:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbd_module(SYSCLK_WDT);
 727:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 728:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 729:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case EIC_ADDR:
 730:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbd_module(SYSCLK_EIC);
 731:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 732:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 733:../../../platform/common/services/clock/sam4l/sysclk.c **** 	case PICOUART_ADDR:
 734:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbd_module(SYSCLK_PICOUART);
 735:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 736:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 737:../../../platform/common/services/clock/sam4l/sysclk.c **** 	default:
 738:../../../platform/common/services/clock/sam4l/sysclk.c **** 		Assert(false);
 739:../../../platform/common/services/clock/sam4l/sysclk.c **** 		return;
 3511              	 .loc 10 739 0
 3512 1018 D1E1     	 b .L255
 3513              	.L264:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3514              	 .loc 10 559 0
 3515 101a B34A     	 ldr r2,.L316+16
 3516 101c 9342     	 cmp r3,r2
 3517 101e 00F0CB80 	 beq .L266
 3518 1022 B24A     	 ldr r2,.L316+20
 3519 1024 9342     	 cmp r3,r2
 3520 1026 00F0CB80 	 beq .L267
 3521              	 .loc 10 739 0
 3522 102a C8E1     	 b .L255
 3523              	.L262:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3524              	 .loc 10 559 0
 3525 102c B04A     	 ldr r2,.L316+24
 3526 102e 9342     	 cmp r3,r2
 3527 1030 00F0D280 	 beq .L268
 3528 1034 AE4A     	 ldr r2,.L316+24
 3529 1036 9342     	 cmp r3,r2
 3530 1038 04D8     	 bhi .L269
 3531 103a AE4A     	 ldr r2,.L316+28
 3532 103c 9342     	 cmp r3,r2
 3533 103e 00F0C780 	 beq .L270
 3534              	 .loc 10 739 0
 3535 1042 BCE1     	 b .L255
 3536              	.L269:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3537              	 .loc 10 559 0
 3538 1044 AC4A     	 ldr r2,.L316+32
 3539 1046 9342     	 cmp r3,r2
 3540 1048 00F0CA80 	 beq .L271
 3541 104c AB4A     	 ldr r2,.L316+36
 3542 104e 9342     	 cmp r3,r2
 3543 1050 00F0CA80 	 beq .L272
 3544              	 .loc 10 739 0
 3545 1054 B3E1     	 b .L255
 3546              	.L260:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3547              	 .loc 10 559 0
 3548 1056 AA4A     	 ldr r2,.L316+40
 3549 1058 9342     	 cmp r3,r2
 3550 105a 00F0DD80 	 beq .L273
 3551 105e A84A     	 ldr r2,.L316+40
 3552 1060 9342     	 cmp r3,r2
 3553 1062 14D8     	 bhi .L274
 3554 1064 A74A     	 ldr r2,.L316+44
 3555 1066 9342     	 cmp r3,r2
 3556 1068 00F0CA80 	 beq .L275
 3557 106c A54A     	 ldr r2,.L316+44
 3558 106e 9342     	 cmp r3,r2
 3559 1070 04D8     	 bhi .L276
 3560 1072 A54A     	 ldr r2,.L316+48
 3561 1074 9342     	 cmp r3,r2
 3562 1076 00F0BF80 	 beq .L277
 3563              	 .loc 10 739 0
 3564 107a A0E1     	 b .L255
 3565              	.L276:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3566              	 .loc 10 559 0
 3567 107c A34A     	 ldr r2,.L316+52
 3568 107e 9342     	 cmp r3,r2
 3569 1080 00F0C280 	 beq .L278
 3570 1084 A24A     	 ldr r2,.L316+56
 3571 1086 9342     	 cmp r3,r2
 3572 1088 00F0C280 	 beq .L279
 3573              	 .loc 10 739 0
 3574 108c 97E1     	 b .L255
 3575              	.L274:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3576              	 .loc 10 559 0
 3577 108e A14A     	 ldr r2,.L316+60
 3578 1090 9342     	 cmp r3,r2
 3579 1092 00F0CD80 	 beq .L280
 3580 1096 9F4A     	 ldr r2,.L316+60
 3581 1098 9342     	 cmp r3,r2
 3582 109a 08D8     	 bhi .L281
 3583 109c 9E4A     	 ldr r2,.L316+64
 3584 109e 9342     	 cmp r3,r2
 3585 10a0 00F0BE80 	 beq .L282
 3586 10a4 9D4A     	 ldr r2,.L316+68
 3587 10a6 9342     	 cmp r3,r2
 3588 10a8 00F0BE80 	 beq .L283
 3589              	 .loc 10 739 0
 3590 10ac 87E1     	 b .L255
 3591              	.L281:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3592              	 .loc 10 559 0
 3593 10ae 9C4A     	 ldr r2,.L316+72
 3594 10b0 9342     	 cmp r3,r2
 3595 10b2 00F0C180 	 beq .L284
 3596 10b6 9B4A     	 ldr r2,.L316+76
 3597 10b8 9342     	 cmp r3,r2
 3598 10ba 00F0C180 	 beq .L285
 3599              	 .loc 10 739 0
 3600 10be 7EE1     	 b .L255
 3601              	.L258:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3602              	 .loc 10 559 0
 3603 10c0 994A     	 ldr r2,.L316+80
 3604 10c2 9342     	 cmp r3,r2
 3605 10c4 00F0F480 	 beq .L286
 3606 10c8 974A     	 ldr r2,.L316+80
 3607 10ca 9342     	 cmp r3,r2
 3608 10cc 33D8     	 bhi .L287
 3609 10ce 974A     	 ldr r2,.L316+84
 3610 10d0 9342     	 cmp r3,r2
 3611 10d2 00F0D080 	 beq .L288
 3612 10d6 954A     	 ldr r2,.L316+84
 3613 10d8 9342     	 cmp r3,r2
 3614 10da 14D8     	 bhi .L289
 3615 10dc 944A     	 ldr r2,.L316+88
 3616 10de 9342     	 cmp r3,r2
 3617 10e0 00F0BA80 	 beq .L290
 3618 10e4 924A     	 ldr r2,.L316+88
 3619 10e6 9342     	 cmp r3,r2
 3620 10e8 04D8     	 bhi .L291
 3621 10ea 924A     	 ldr r2,.L316+92
 3622 10ec 9342     	 cmp r3,r2
 3623 10ee 00F0AF80 	 beq .L292
 3624              	 .loc 10 739 0
 3625 10f2 64E1     	 b .L255
 3626              	.L291:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3627              	 .loc 10 559 0
 3628 10f4 904A     	 ldr r2,.L316+96
 3629 10f6 9342     	 cmp r3,r2
 3630 10f8 00F0B280 	 beq .L293
 3631 10fc 8F4A     	 ldr r2,.L316+100
 3632 10fe 9342     	 cmp r3,r2
 3633 1100 00F0B280 	 beq .L294
 3634              	 .loc 10 739 0
 3635 1104 5BE1     	 b .L255
 3636              	.L289:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3637              	 .loc 10 559 0
 3638 1106 8E4A     	 ldr r2,.L316+104
 3639 1108 9342     	 cmp r3,r2
 3640 110a 00F0C680 	 beq .L295
 3641 110e 8C4A     	 ldr r2,.L316+104
 3642 1110 9342     	 cmp r3,r2
 3643 1112 08D8     	 bhi .L296
 3644 1114 8B4A     	 ldr r2,.L316+108
 3645 1116 9342     	 cmp r3,r2
 3646 1118 00F0B180 	 beq .L297
 3647 111c 8A4A     	 ldr r2,.L316+112
 3648 111e 9342     	 cmp r3,r2
 3649 1120 00F0B480 	 beq .L298
 3650              	 .loc 10 739 0
 3651 1124 4BE1     	 b .L255
 3652              	.L296:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3653              	 .loc 10 559 0
 3654 1126 894A     	 ldr r2,.L316+116
 3655 1128 9342     	 cmp r3,r2
 3656 112a 00F0BD80 	 beq .L299
 3657 112e 884A     	 ldr r2,.L316+120
 3658 1130 9342     	 cmp r3,r2
 3659 1132 35D0     	 beq .L300
 3660              	 .loc 10 739 0
 3661 1134 43E1     	 b .L255
 3662              	.L287:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3663              	 .loc 10 559 0
 3664 1136 874A     	 ldr r2,.L316+124
 3665 1138 9342     	 cmp r3,r2
 3666 113a 00F01F81 	 beq .L301
 3667 113e 854A     	 ldr r2,.L316+124
 3668 1140 9342     	 cmp r3,r2
 3669 1142 14D8     	 bhi .L302
 3670 1144 844A     	 ldr r2,.L316+128
 3671 1146 9342     	 cmp r3,r2
 3672 1148 00F0BA80 	 beq .L303
 3673 114c 824A     	 ldr r2,.L316+128
 3674 114e 9342     	 cmp r3,r2
 3675 1150 04D8     	 bhi .L304
 3676 1152 824A     	 ldr r2,.L316+132
 3677 1154 9342     	 cmp r3,r2
 3678 1156 00F0AF80 	 beq .L305
 3679              	 .loc 10 739 0
 3680 115a 30E1     	 b .L255
 3681              	.L304:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3682              	 .loc 10 559 0
 3683 115c 804A     	 ldr r2,.L316+136
 3684 115e 9342     	 cmp r3,r2
 3685 1160 00F0B280 	 beq .L306
 3686 1164 7F4A     	 ldr r2,.L316+140
 3687 1166 9342     	 cmp r3,r2
 3688 1168 00F0B280 	 beq .L307
 3689              	 .loc 10 739 0
 3690 116c 27E1     	 b .L255
 3691              	.L302:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3692              	 .loc 10 559 0
 3693 116e 7E4A     	 ldr r2,.L316+144
 3694 1170 9342     	 cmp r3,r2
 3695 1172 00F00F81 	 beq .L308
 3696 1176 7C4A     	 ldr r2,.L316+144
 3697 1178 9342     	 cmp r3,r2
 3698 117a 08D8     	 bhi .L309
 3699 117c 7B4A     	 ldr r2,.L316+148
 3700 117e 9342     	 cmp r3,r2
 3701 1180 00F00081 	 beq .L310
 3702 1184 7A4A     	 ldr r2,.L316+152
 3703 1186 9342     	 cmp r3,r2
 3704 1188 00F00081 	 beq .L311
 3705              	 .loc 10 739 0
 3706 118c 17E1     	 b .L255
 3707              	.L309:
 559:../../../platform/common/services/clock/sam4l/sysclk.c **** 	switch ((uintptr_t)module) {
 3708              	 .loc 10 559 0
 3709 118e 794A     	 ldr r2,.L316+156
 3710 1190 9342     	 cmp r3,r2
 3711 1192 00F00381 	 beq .L312
 3712 1196 784A     	 ldr r2,.L316+160
 3713 1198 9342     	 cmp r3,r2
 3714 119a 00F00381 	 beq .L313
 3715              	 .loc 10 739 0
 3716 119e 0EE1     	 b .L255
 3717              	.L300:
 563:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3718              	 .loc 10 563 0
 3719 11a0 0920     	 movs r0,#9
 3720 11a2 FFF79CFA 	 bl sysclk_disable_hsb_module
 564:../../../platform/common/services/clock/sam4l/sysclk.c **** 	#endif
 3721              	 .loc 10 564 0
 3722 11a6 01E1     	 b .L314
 3723              	.L265:
 568:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3724              	 .loc 10 568 0
 3725 11a8 0020     	 movs r0,#0
 3726 11aa FFF7FEFF 	 bl sysclk_disable_pba_module
 569:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3727              	 .loc 10 569 0
 3728 11ae FDE0     	 b .L314
 3729              	.L263:
 572:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3730              	 .loc 10 572 0
 3731 11b0 0120     	 movs r0,#1
 3732 11b2 FFF7FEFF 	 bl sysclk_disable_pba_module
 573:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3733              	 .loc 10 573 0
 3734 11b6 F9E0     	 b .L314
 3735              	.L266:
 576:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3736              	 .loc 10 576 0
 3737 11b8 0220     	 movs r0,#2
 3738 11ba FFF7FEFF 	 bl sysclk_disable_pba_module
 577:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3739              	 .loc 10 577 0
 3740 11be F5E0     	 b .L314
 3741              	.L267:
 580:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3742              	 .loc 10 580 0
 3743 11c0 0320     	 movs r0,#3
 3744 11c2 FFF7FEFF 	 bl sysclk_disable_pba_module
 581:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3745              	 .loc 10 581 0
 3746 11c6 F1E0     	 b .L314
 3747              	.L261:
 584:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3748              	 .loc 10 584 0
 3749 11c8 0420     	 movs r0,#4
 3750 11ca FFF7FEFF 	 bl sysclk_disable_pba_module
 585:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3751              	 .loc 10 585 0
 3752 11ce EDE0     	 b .L314
 3753              	.L270:
 588:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3754              	 .loc 10 588 0
 3755 11d0 0520     	 movs r0,#5
 3756 11d2 FFF7FEFF 	 bl sysclk_disable_pba_module
 589:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3757              	 .loc 10 589 0
 3758 11d6 E9E0     	 b .L314
 3759              	.L268:
 592:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3760              	 .loc 10 592 0
 3761 11d8 0620     	 movs r0,#6
 3762 11da FFF7FEFF 	 bl sysclk_disable_pba_module
 593:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3763              	 .loc 10 593 0
 3764 11de E5E0     	 b .L314
 3765              	.L271:
 596:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3766              	 .loc 10 596 0
 3767 11e0 0720     	 movs r0,#7
 3768 11e2 FFF7FEFF 	 bl sysclk_disable_pba_module
 597:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3769              	 .loc 10 597 0
 3770 11e6 E1E0     	 b .L314
 3771              	.L272:
 600:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3772              	 .loc 10 600 0
 3773 11e8 0820     	 movs r0,#8
 3774 11ea FFF7FEFF 	 bl sysclk_disable_pba_module
 601:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3775              	 .loc 10 601 0
 3776 11ee DDE0     	 b .L314
 3777              	.L259:
 604:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3778              	 .loc 10 604 0
 3779 11f0 0920     	 movs r0,#9
 3780 11f2 FFF7FEFF 	 bl sysclk_disable_pba_module
 605:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3781              	 .loc 10 605 0
 3782 11f6 D9E0     	 b .L314
 3783              	.L277:
 608:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3784              	 .loc 10 608 0
 3785 11f8 0A20     	 movs r0,#10
 3786 11fa FFF7FEFF 	 bl sysclk_disable_pba_module
 609:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3787              	 .loc 10 609 0
 3788 11fe D5E0     	 b .L314
 3789              	.L275:
 612:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3790              	 .loc 10 612 0
 3791 1200 0B20     	 movs r0,#11
 3792 1202 FFF7FEFF 	 bl sysclk_disable_pba_module
 613:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3793              	 .loc 10 613 0
 3794 1206 D1E0     	 b .L314
 3795              	.L278:
 616:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3796              	 .loc 10 616 0
 3797 1208 0C20     	 movs r0,#12
 3798 120a FFF7FEFF 	 bl sysclk_disable_pba_module
 617:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3799              	 .loc 10 617 0
 3800 120e CDE0     	 b .L314
 3801              	.L279:
 620:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3802              	 .loc 10 620 0
 3803 1210 0D20     	 movs r0,#13
 3804 1212 FFF7FEFF 	 bl sysclk_disable_pba_module
 621:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3805              	 .loc 10 621 0
 3806 1216 C9E0     	 b .L314
 3807              	.L273:
 624:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3808              	 .loc 10 624 0
 3809 1218 0E20     	 movs r0,#14
 3810 121a FFF7FEFF 	 bl sysclk_disable_pba_module
 625:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3811              	 .loc 10 625 0
 3812 121e C5E0     	 b .L314
 3813              	.L282:
 628:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3814              	 .loc 10 628 0
 3815 1220 0F20     	 movs r0,#15
 3816 1222 FFF7FEFF 	 bl sysclk_disable_pba_module
 629:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3817              	 .loc 10 629 0
 3818 1226 C1E0     	 b .L314
 3819              	.L283:
 632:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3820              	 .loc 10 632 0
 3821 1228 1020     	 movs r0,#16
 3822 122a FFF7FEFF 	 bl sysclk_disable_pba_module
 633:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3823              	 .loc 10 633 0
 3824 122e BDE0     	 b .L314
 3825              	.L280:
 636:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3826              	 .loc 10 636 0
 3827 1230 1120     	 movs r0,#17
 3828 1232 FFF7FEFF 	 bl sysclk_disable_pba_module
 637:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3829              	 .loc 10 637 0
 3830 1236 B9E0     	 b .L314
 3831              	.L284:
 640:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3832              	 .loc 10 640 0
 3833 1238 1220     	 movs r0,#18
 3834 123a FFF7FEFF 	 bl sysclk_disable_pba_module
 641:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3835              	 .loc 10 641 0
 3836 123e B5E0     	 b .L314
 3837              	.L285:
 644:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3838              	 .loc 10 644 0
 3839 1240 1320     	 movs r0,#19
 3840 1242 FFF7FEFF 	 bl sysclk_disable_pba_module
 645:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3841              	 .loc 10 645 0
 3842 1246 B1E0     	 b .L314
 3843              	.L257:
 648:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3844              	 .loc 10 648 0
 3845 1248 1520     	 movs r0,#21
 3846 124a FFF7FEFF 	 bl sysclk_disable_pba_module
 649:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3847              	 .loc 10 649 0
 3848 124e ADE0     	 b .L314
 3849              	.L292:
 652:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3850              	 .loc 10 652 0
 3851 1250 1620     	 movs r0,#22
 3852 1252 FFF7FEFF 	 bl sysclk_disable_pba_module
 653:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3853              	 .loc 10 653 0
 3854 1256 A9E0     	 b .L314
 3855              	.L290:
 657:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3856              	 .loc 10 657 0
 3857 1258 1720     	 movs r0,#23
 3858 125a FFF7FEFF 	 bl sysclk_disable_pba_module
 658:../../../platform/common/services/clock/sam4l/sysclk.c **** 	#endif
 3859              	 .loc 10 658 0
 3860 125e A5E0     	 b .L314
 3861              	.L293:
 662:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3862              	 .loc 10 662 0
 3863 1260 0020     	 movs r0,#0
 3864 1262 FFF7FEFF 	 bl sysclk_disable_pbb_module
 663:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3865              	 .loc 10 663 0
 3866 1266 A1E0     	 b .L314
 3867              	.L294:
 666:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbb_module(SYSCLK_HRAMC1_REGS);
 3868              	 .loc 10 666 0
 3869 1268 0220     	 movs r0,#2
 3870 126a FFF738FA 	 bl sysclk_disable_hsb_module
 667:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3871              	 .loc 10 667 0
 3872 126e 0120     	 movs r0,#1
 3873 1270 FFF7FEFF 	 bl sysclk_disable_pbb_module
 668:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3874              	 .loc 10 668 0
 3875 1274 9AE0     	 b .L314
 3876              	.L288:
 671:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3877              	 .loc 10 671 0
 3878 1276 0220     	 movs r0,#2
 3879 1278 FFF7FEFF 	 bl sysclk_disable_pbb_module
 672:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3880              	 .loc 10 672 0
 3881 127c 96E0     	 b .L314
 3882              	.L297:
 675:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbb_module(SYSCLK_PDCA_PB);
 3883              	 .loc 10 675 0
 3884 127e 0020     	 movs r0,#0
 3885 1280 FFF72DFA 	 bl sysclk_disable_hsb_module
 676:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3886              	 .loc 10 676 0
 3887 1284 0320     	 movs r0,#3
 3888 1286 FFF7FEFF 	 bl sysclk_disable_pbb_module
 677:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3889              	 .loc 10 677 0
 3890 128a 8FE0     	 b .L314
 3891              	.L298:
 680:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbb_module(SYSCLK_CRCCU_REGS);
 3892              	 .loc 10 680 0
 3893 128c 0420     	 movs r0,#4
 3894 128e FFF726FA 	 bl sysclk_disable_hsb_module
 681:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3895              	 .loc 10 681 0
 3896 1292 0420     	 movs r0,#4
 3897 1294 FFF7FEFF 	 bl sysclk_disable_pbb_module
 682:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3898              	 .loc 10 682 0
 3899 1298 88E0     	 b .L314
 3900              	.L295:
 685:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pbb_module(SYSCLK_USBC_REGS);
 3901              	 .loc 10 685 0
 3902 129a 0320     	 movs r0,#3
 3903 129c FFF71FFA 	 bl sysclk_disable_hsb_module
 686:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3904              	 .loc 10 686 0
 3905 12a0 0520     	 movs r0,#5
 3906 12a2 FFF7FEFF 	 bl sysclk_disable_pbb_module
 687:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3907              	 .loc 10 687 0
 3908 12a6 81E0     	 b .L314
 3909              	.L299:
 690:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3910              	 .loc 10 690 0
 3911 12a8 0620     	 movs r0,#6
 3912 12aa FFF7FEFF 	 bl sysclk_disable_pbb_module
 691:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3913              	 .loc 10 691 0
 3914 12ae 7DE0     	 b .L314
 3915              	.L286:
 694:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3916              	 .loc 10 694 0
 3917 12b0 0020     	 movs r0,#0
 3918 12b2 FFF72CFA 	 bl sysclk_disable_pbc_module
 695:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3919              	 .loc 10 695 0
 3920 12b6 79E0     	 b .L314
 3921              	.L305:
 698:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3922              	 .loc 10 698 0
 3923 12b8 0120     	 movs r0,#1
 3924 12ba FFF728FA 	 bl sysclk_disable_pbc_module
 699:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3925              	 .loc 10 699 0
 3926 12be 75E0     	 b .L314
 3927              	.L303:
 702:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3928              	 .loc 10 702 0
 3929 12c0 0220     	 movs r0,#2
 3930 12c2 FFF724FA 	 bl sysclk_disable_pbc_module
 703:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3931              	 .loc 10 703 0
 3932 12c6 71E0     	 b .L314
 3933              	.L306:
 706:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3934              	 .loc 10 706 0
 3935 12c8 0320     	 movs r0,#3
 3936 12ca FFF720FA 	 bl sysclk_disable_pbc_module
 707:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3937              	 .loc 10 707 0
 3938 12ce 6DE0     	 b .L314
 3939              	.L307:
 710:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3940              	 .loc 10 710 0
 3941 12d0 0420     	 movs r0,#4
 3942 12d2 FFF71CFA 	 bl sysclk_disable_pbc_module
 711:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3943              	 .loc 10 711 0
 3944 12d6 69E0     	 b .L314
 3945              	.L317:
 3946              	 .align 2
 3947              	.L316:
 3948 12d8 00800740 	 .word 1074233344
 3949 12dc 00800240 	 .word 1073905664
 3950 12e0 00800140 	 .word 1073840128
 3951 12e4 00800040 	 .word 1073774592
 3952 12e8 00000140 	 .word 1073807360
 3953 12ec 00400140 	 .word 1073823744
 3954 12f0 00C00140 	 .word 1073856512
 3955 12f4 00840140 	 .word 1073841152
 3956 12f8 00C40140 	 .word 1073857536
 3957 12fc 00400240 	 .word 1073889280
 3958 1300 00000440 	 .word 1074003968
 3959 1304 00000340 	 .word 1073938432
 3960 1308 00C00240 	 .word 1073922048
 3961 130c 00800340 	 .word 1073971200
 3962 1310 00C00340 	 .word 1073987584
 3963 1314 00800640 	 .word 1074167808
 3964 1318 00000640 	 .word 1074135040
 3965 131c 00400640 	 .word 1074151424
 3966 1320 00C00640 	 .word 1074184192
 3967 1324 00000740 	 .word 1074200576
 3968 1328 00000E40 	 .word 1074659328
 3969 132c 00100A40 	 .word 1074401280
 3970 1330 00000840 	 .word 1074266112
 3971 1334 00C00740 	 .word 1074249728
 3972 1338 00000A40 	 .word 1074397184
 3973 133c 00040A40 	 .word 1074398208
 3974 1340 00500A40 	 .word 1074417664
 3975 1344 00200A40 	 .word 1074405376
 3976 1348 00400A40 	 .word 1074413568
 3977 134c 00600A40 	 .word 1074421760
 3978 1350 00000B40 	 .word 1074462720
 3979 1354 00000F40 	 .word 1074724864
 3980 1358 00080E40 	 .word 1074661376
 3981 135c 00040E40 	 .word 1074660352
 3982 1360 000C0E40 	 .word 1074662400
 3983 1364 00100E40 	 .word 1074663424
 3984 1368 000C0F40 	 .word 1074727936
 3985 136c 00040F40 	 .word 1074725888
 3986 1370 00080F40 	 .word 1074726912
 3987 1374 00100F40 	 .word 1074728960
 3988 1378 00140F40 	 .word 1074729984
 3989              	.L301:
 714:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3990              	 .loc 10 714 0
 3991 137c 0020     	 movs r0,#0
 3992 137e FFF7DEF9 	 bl sysclk_disable_pbd_module
 715:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3993              	 .loc 10 715 0
 3994 1382 13E0     	 b .L314
 3995              	.L310:
 718:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 3996              	 .loc 10 718 0
 3997 1384 0120     	 movs r0,#1
 3998 1386 FFF7DAF9 	 bl sysclk_disable_pbd_module
 719:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 3999              	 .loc 10 719 0
 4000 138a 0FE0     	 b .L314
 4001              	.L311:
 722:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 4002              	 .loc 10 722 0
 4003 138c 0220     	 movs r0,#2
 4004 138e FFF7D6F9 	 bl sysclk_disable_pbd_module
 723:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 4005              	 .loc 10 723 0
 4006 1392 0BE0     	 b .L314
 4007              	.L308:
 726:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 4008              	 .loc 10 726 0
 4009 1394 0320     	 movs r0,#3
 4010 1396 FFF7D2F9 	 bl sysclk_disable_pbd_module
 727:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 4011              	 .loc 10 727 0
 4012 139a 07E0     	 b .L314
 4013              	.L312:
 730:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 4014              	 .loc 10 730 0
 4015 139c 0420     	 movs r0,#4
 4016 139e FFF7CEF9 	 bl sysclk_disable_pbd_module
 731:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 4017              	 .loc 10 731 0
 4018 13a2 03E0     	 b .L314
 4019              	.L313:
 734:../../../platform/common/services/clock/sam4l/sysclk.c **** 		break;
 4020              	 .loc 10 734 0
 4021 13a4 0520     	 movs r0,#5
 4022 13a6 FFF7CAF9 	 bl sysclk_disable_pbd_module
 735:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 4023              	 .loc 10 735 0
 4024 13aa 00BF     	 nop
 4025              	.L314:
 740:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 741:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 742:../../../platform/common/services/clock/sam4l/sysclk.c **** 	// Disable PBA divided clock if possible.
 743:../../../platform/common/services/clock/sam4l/sysclk.c **** #define PBADIV_CLKSRC_MASK (SYSCLK_TC0 | SYSCLK_TC1 \
 744:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| SYSCLK_USART0 | SYSCLK_USART1 | SYSCLK_USART2 | SYSCLK_USART3)
 745:../../../platform/common/services/clock/sam4l/sysclk.c **** 	if ((PM->PM_PBAMASK & PBADIV_CLKSRC_MASK) == 0) {
 4026              	 .loc 10 745 0
 4027 13ac 054B     	 ldr r3,.L318
 4028 13ae 9B6A     	 ldr r3,[r3,#40]
 4029 13b0 03F00B03 	 and r3,r3,#11
 4030 13b4 002B     	 cmp r3,#0
 4031 13b6 02D1     	 bne .L255
 746:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_disable_pba_divmask(PBA_DIVMASK_Msk);
 4032              	 .loc 10 746 0
 4033 13b8 7F20     	 movs r0,#127
 4034 13ba FFF7E7F9 	 bl sysclk_disable_pba_divmask
 4035              	.L255:
 747:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 748:../../../platform/common/services/clock/sam4l/sysclk.c **** }
 4036              	 .loc 10 748 0
 4037 13be 0837     	 adds r7,r7,#8
 4038              	.LCFI205:
 4039              	 .cfi_def_cfa_offset 8
 4040 13c0 BD46     	 mov sp,r7
 4041              	.LCFI206:
 4042              	 .cfi_def_cfa_register 13
 4043              	 
 4044 13c2 80BD     	 pop {r7,pc}
 4045              	.L319:
 4046              	 .align 2
 4047              	.L318:
 4048 13c4 00000E40 	 .word 1074659328
 4049              	 .cfi_endproc
 4050              	.LFE190:
 4052              	 .align 1
 4053              	 .global sysclk_set_prescalers
 4054              	 .syntax unified
 4055              	 .thumb
 4056              	 .thumb_func
 4057              	 .fpu softvfp
 4059              	sysclk_set_prescalers:
 4060              	.LFB191:
 749:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 750:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 751:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
 752:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief Set system clock prescaler configuration
 753:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
 754:../../../platform/common/services/clock/sam4l/sysclk.c ****  * This function will change the system clock prescaler configuration to
 755:../../../platform/common/services/clock/sam4l/sysclk.c ****  * match the parameters.
 756:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
 757:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \note The parameters to this function are device-specific.
 758:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
 759:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param cpu_shift The CPU clock will be divided by \f$2^{cpu\_shift}\f$
 760:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param pba_shift The PBA clock will be divided by \f$2^{pba\_shift}\f$
 761:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param pbb_shift The PBB clock will be divided by \f$2^{pbb\_shift}\f$
 762:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param pbc_shift The PBC clock will be divided by \f$2^{pbc\_shift}\f$
 763:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param pbd_shift The PBD clock will be divided by \f$2^{pbd\_shift}\f$
 764:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
 765:../../../platform/common/services/clock/sam4l/sysclk.c **** void sysclk_set_prescalers(uint32_t cpu_shift,
 766:../../../platform/common/services/clock/sam4l/sysclk.c **** 		uint32_t pba_shift, uint32_t pbb_shift,
 767:../../../platform/common/services/clock/sam4l/sysclk.c **** 		uint32_t pbc_shift, uint32_t pbd_shift)
 768:../../../platform/common/services/clock/sam4l/sysclk.c **** {
 4061              	 .loc 10 768 0
 4062              	 .cfi_startproc
 4063              	 
 4064              	 
 4065 13c8 80B5     	 push {r7,lr}
 4066              	.LCFI207:
 4067              	 .cfi_def_cfa_offset 8
 4068              	 .cfi_offset 7,-8
 4069              	 .cfi_offset 14,-4
 4070 13ca 8AB0     	 sub sp,sp,#40
 4071              	.LCFI208:
 4072              	 .cfi_def_cfa_offset 48
 4073 13cc 00AF     	 add r7,sp,#0
 4074              	.LCFI209:
 4075              	 .cfi_def_cfa_register 7
 4076 13ce F860     	 str r0,[r7,#12]
 4077 13d0 B960     	 str r1,[r7,#8]
 4078 13d2 7A60     	 str r2,[r7,#4]
 4079 13d4 3B60     	 str r3,[r7]
 769:../../../platform/common/services/clock/sam4l/sysclk.c **** 	irqflags_t flags;
 770:../../../platform/common/services/clock/sam4l/sysclk.c **** 	uint32_t   cpu_cksel = 0;
 4080              	 .loc 10 770 0
 4081 13d6 0023     	 movs r3,#0
 4082 13d8 7B62     	 str r3,[r7,#36]
 771:../../../platform/common/services/clock/sam4l/sysclk.c **** 	uint32_t   pba_cksel = 0;
 4083              	 .loc 10 771 0
 4084 13da 0023     	 movs r3,#0
 4085 13dc 3B62     	 str r3,[r7,#32]
 772:../../../platform/common/services/clock/sam4l/sysclk.c **** 	uint32_t   pbb_cksel = 0;
 4086              	 .loc 10 772 0
 4087 13de 0023     	 movs r3,#0
 4088 13e0 FB61     	 str r3,[r7,#28]
 773:../../../platform/common/services/clock/sam4l/sysclk.c **** 	uint32_t   pbc_cksel = 0;
 4089              	 .loc 10 773 0
 4090 13e2 0023     	 movs r3,#0
 4091 13e4 BB61     	 str r3,[r7,#24]
 774:../../../platform/common/services/clock/sam4l/sysclk.c **** 	uint32_t   pbd_cksel = 0;
 4092              	 .loc 10 774 0
 4093 13e6 0023     	 movs r3,#0
 4094 13e8 7B61     	 str r3,[r7,#20]
 775:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 776:../../../platform/common/services/clock/sam4l/sysclk.c **** 	Assert(cpu_shift <= pba_shift);
 777:../../../platform/common/services/clock/sam4l/sysclk.c **** 	Assert(cpu_shift <= pbb_shift);
 778:../../../platform/common/services/clock/sam4l/sysclk.c **** 	Assert(cpu_shift <= pbc_shift);
 779:../../../platform/common/services/clock/sam4l/sysclk.c **** 	Assert(cpu_shift <= pbd_shift);
 780:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 781:../../../platform/common/services/clock/sam4l/sysclk.c **** 	if (cpu_shift > 0) {
 4095              	 .loc 10 781 0
 4096 13ea FB68     	 ldr r3,[r7,#12]
 4097 13ec 002B     	 cmp r3,#0
 4098 13ee 06D0     	 beq .L321
 782:../../../platform/common/services/clock/sam4l/sysclk.c **** 		cpu_cksel = (PM_CPUSEL_CPUSEL(cpu_shift - 1))
 4099              	 .loc 10 782 0
 4100 13f0 FB68     	 ldr r3,[r7,#12]
 4101 13f2 013B     	 subs r3,r3,#1
 4102 13f4 03F00703 	 and r3,r3,#7
 4103 13f8 43F08003 	 orr r3,r3,#128
 4104 13fc 7B62     	 str r3,[r7,#36]
 4105              	.L321:
 783:../../../platform/common/services/clock/sam4l/sysclk.c **** 				| PM_CPUSEL_CPUDIV;
 784:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 785:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 786:../../../platform/common/services/clock/sam4l/sysclk.c **** 	if (pba_shift > 0) {
 4106              	 .loc 10 786 0
 4107 13fe BB68     	 ldr r3,[r7,#8]
 4108 1400 002B     	 cmp r3,#0
 4109 1402 06D0     	 beq .L322
 787:../../../platform/common/services/clock/sam4l/sysclk.c **** 		pba_cksel = (PM_PBASEL_PBSEL(pba_shift - 1))
 4110              	 .loc 10 787 0
 4111 1404 BB68     	 ldr r3,[r7,#8]
 4112 1406 013B     	 subs r3,r3,#1
 4113 1408 03F00703 	 and r3,r3,#7
 4114 140c 43F08003 	 orr r3,r3,#128
 4115 1410 3B62     	 str r3,[r7,#32]
 4116              	.L322:
 788:../../../platform/common/services/clock/sam4l/sysclk.c **** 				| PM_PBASEL_PBDIV;
 789:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 790:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 791:../../../platform/common/services/clock/sam4l/sysclk.c **** 	if (pbb_shift > 0) {
 4117              	 .loc 10 791 0
 4118 1412 7B68     	 ldr r3,[r7,#4]
 4119 1414 002B     	 cmp r3,#0
 4120 1416 06D0     	 beq .L323
 792:../../../platform/common/services/clock/sam4l/sysclk.c **** 		pbb_cksel = (PM_PBBSEL_PBSEL(pbb_shift - 1))
 4121              	 .loc 10 792 0
 4122 1418 7B68     	 ldr r3,[r7,#4]
 4123 141a 013B     	 subs r3,r3,#1
 4124 141c 03F00703 	 and r3,r3,#7
 4125 1420 43F08003 	 orr r3,r3,#128
 4126 1424 FB61     	 str r3,[r7,#28]
 4127              	.L323:
 793:../../../platform/common/services/clock/sam4l/sysclk.c **** 				| PM_PBBSEL_PBDIV;
 794:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 795:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 796:../../../platform/common/services/clock/sam4l/sysclk.c **** 	if (pbc_shift > 0) {
 4128              	 .loc 10 796 0
 4129 1426 3B68     	 ldr r3,[r7]
 4130 1428 002B     	 cmp r3,#0
 4131 142a 06D0     	 beq .L324
 797:../../../platform/common/services/clock/sam4l/sysclk.c **** 		pbc_cksel = (PM_PBCSEL_PBSEL(pbc_shift - 1))
 4132              	 .loc 10 797 0
 4133 142c 3B68     	 ldr r3,[r7]
 4134 142e 013B     	 subs r3,r3,#1
 4135 1430 03F00703 	 and r3,r3,#7
 4136 1434 43F08003 	 orr r3,r3,#128
 4137 1438 BB61     	 str r3,[r7,#24]
 4138              	.L324:
 798:../../../platform/common/services/clock/sam4l/sysclk.c **** 				| PM_PBCSEL_PBDIV;
 799:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 800:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 801:../../../platform/common/services/clock/sam4l/sysclk.c **** 	if (pbd_shift > 0) {
 4139              	 .loc 10 801 0
 4140 143a 3B6B     	 ldr r3,[r7,#48]
 4141 143c 002B     	 cmp r3,#0
 4142 143e 06D0     	 beq .L325
 802:../../../platform/common/services/clock/sam4l/sysclk.c **** 		pbd_cksel = (PM_PBDSEL_PBSEL(pbd_shift - 1))
 4143              	 .loc 10 802 0
 4144 1440 3B6B     	 ldr r3,[r7,#48]
 4145 1442 013B     	 subs r3,r3,#1
 4146 1444 03F00703 	 and r3,r3,#7
 4147 1448 43F08003 	 orr r3,r3,#128
 4148 144c 7B61     	 str r3,[r7,#20]
 4149              	.L325:
 803:../../../platform/common/services/clock/sam4l/sysclk.c **** 				| PM_PBDSEL_PBDIV;
 804:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 805:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 806:../../../platform/common/services/clock/sam4l/sysclk.c **** 	flags = cpu_irq_save();
 4150              	 .loc 10 806 0
 4151 144e FEF7D7FD 	 bl cpu_irq_save
 4152 1452 3861     	 str r0,[r7,#16]
 807:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 808:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 4153              	 .loc 10 808 0
 4154 1454 124B     	 ldr r3,.L326
 4155 1456 134A     	 ldr r2,.L326+4
 4156 1458 9A65     	 str r2,[r3,#88]
 809:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| PM_UNLOCK_ADDR((uint32_t)&PM->PM_CPUSEL - (uint32_t)PM);
 810:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_CPUSEL = cpu_cksel;
 4157              	 .loc 10 810 0
 4158 145a 114A     	 ldr r2,.L326
 4159 145c 7B6A     	 ldr r3,[r7,#36]
 4160 145e 5360     	 str r3,[r2,#4]
 811:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 812:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 4161              	 .loc 10 812 0
 4162 1460 0F4B     	 ldr r3,.L326
 4163 1462 114A     	 ldr r2,.L326+8
 4164 1464 9A65     	 str r2,[r3,#88]
 813:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| PM_UNLOCK_ADDR((uint32_t)&PM->PM_PBASEL - (uint32_t)PM);
 814:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_PBASEL = pba_cksel;
 4165              	 .loc 10 814 0
 4166 1466 0E4A     	 ldr r2,.L326
 4167 1468 3B6A     	 ldr r3,[r7,#32]
 4168 146a D360     	 str r3,[r2,#12]
 815:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 816:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 4169              	 .loc 10 816 0
 4170 146c 0C4B     	 ldr r3,.L326
 4171 146e 0F4A     	 ldr r2,.L326+12
 4172 1470 9A65     	 str r2,[r3,#88]
 817:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| PM_UNLOCK_ADDR((uint32_t)&PM->PM_PBBSEL - (uint32_t)PM);
 818:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_PBBSEL = pbb_cksel;
 4173              	 .loc 10 818 0
 4174 1472 0B4A     	 ldr r2,.L326
 4175 1474 FB69     	 ldr r3,[r7,#28]
 4176 1476 1361     	 str r3,[r2,#16]
 819:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 820:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 4177              	 .loc 10 820 0
 4178 1478 094B     	 ldr r3,.L326
 4179 147a 0D4A     	 ldr r2,.L326+16
 4180 147c 9A65     	 str r2,[r3,#88]
 821:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| PM_UNLOCK_ADDR((uint32_t)&PM->PM_PBCSEL - (uint32_t)PM);
 822:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_PBCSEL = pbc_cksel;
 4181              	 .loc 10 822 0
 4182 147e 084A     	 ldr r2,.L326
 4183 1480 BB69     	 ldr r3,[r7,#24]
 4184 1482 5361     	 str r3,[r2,#20]
 823:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 824:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 4185              	 .loc 10 824 0
 4186 1484 064B     	 ldr r3,.L326
 4187 1486 0B4A     	 ldr r2,.L326+20
 4188 1488 9A65     	 str r2,[r3,#88]
 825:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| PM_UNLOCK_ADDR((uint32_t)&PM->PM_PBDSEL - (uint32_t)PM);
 826:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_PBDSEL = pbd_cksel;
 4189              	 .loc 10 826 0
 4190 148a 054A     	 ldr r2,.L326
 4191 148c 7B69     	 ldr r3,[r7,#20]
 4192 148e 9361     	 str r3,[r2,#24]
 827:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 828:../../../platform/common/services/clock/sam4l/sysclk.c **** 	cpu_irq_restore(flags);
 4193              	 .loc 10 828 0
 4194 1490 3869     	 ldr r0,[r7,#16]
 4195 1492 FEF7E0FD 	 bl cpu_irq_restore
 829:../../../platform/common/services/clock/sam4l/sysclk.c **** }
 4196              	 .loc 10 829 0
 4197 1496 00BF     	 nop
 4198 1498 2837     	 adds r7,r7,#40
 4199              	.LCFI210:
 4200              	 .cfi_def_cfa_offset 8
 4201 149a BD46     	 mov sp,r7
 4202              	.LCFI211:
 4203              	 .cfi_def_cfa_register 13
 4204              	 
 4205 149c 80BD     	 pop {r7,pc}
 4206              	.L327:
 4207 149e 00BF     	 .align 2
 4208              	.L326:
 4209 14a0 00000E40 	 .word 1074659328
 4210 14a4 040000AA 	 .word -1442840572
 4211 14a8 0C0000AA 	 .word -1442840564
 4212 14ac 100000AA 	 .word -1442840560
 4213 14b0 140000AA 	 .word -1442840556
 4214 14b4 180000AA 	 .word -1442840552
 4215              	 .cfi_endproc
 4216              	.LFE191:
 4218              	 .align 1
 4219              	 .global sysclk_set_source
 4220              	 .syntax unified
 4221              	 .thumb
 4222              	 .thumb_func
 4223              	 .fpu softvfp
 4225              	sysclk_set_source:
 4226              	.LFB192:
 830:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 831:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
 832:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief Change the source of the main system clock.
 833:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
 834:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \param src The new system clock source. Must be one of the constants
 835:../../../platform/common/services/clock/sam4l/sysclk.c ****  * from the <em>System Clock Sources</em> section.
 836:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
 837:../../../platform/common/services/clock/sam4l/sysclk.c **** void sysclk_set_source(uint32_t src)
 838:../../../platform/common/services/clock/sam4l/sysclk.c **** {
 4227              	 .loc 10 838 0
 4228              	 .cfi_startproc
 4229              	 
 4230              	 
 4231 14b8 80B5     	 push {r7,lr}
 4232              	.LCFI212:
 4233              	 .cfi_def_cfa_offset 8
 4234              	 .cfi_offset 7,-8
 4235              	 .cfi_offset 14,-4
 4236 14ba 84B0     	 sub sp,sp,#16
 4237              	.LCFI213:
 4238              	 .cfi_def_cfa_offset 24
 4239 14bc 00AF     	 add r7,sp,#0
 4240              	.LCFI214:
 4241              	 .cfi_def_cfa_register 7
 4242 14be 7860     	 str r0,[r7,#4]
 839:../../../platform/common/services/clock/sam4l/sysclk.c **** 	irqflags_t flags;
 840:../../../platform/common/services/clock/sam4l/sysclk.c **** 	Assert(src <= SYSCLK_SRC_RC1M);
 841:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 842:../../../platform/common/services/clock/sam4l/sysclk.c **** 	flags = cpu_irq_save();
 4243              	 .loc 10 842 0
 4244 14c0 FEF79EFD 	 bl cpu_irq_save
 4245 14c4 F860     	 str r0,[r7,#12]
 843:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 4246              	 .loc 10 843 0
 4247 14c6 074B     	 ldr r3,.L329
 4248 14c8 4FF02A42 	 mov r2,#-1442840576
 4249 14cc 9A65     	 str r2,[r3,#88]
 844:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| PM_UNLOCK_ADDR((uint32_t)&PM->PM_MCCTRL - (uint32_t)PM);
 845:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_MCCTRL = src;
 4250              	 .loc 10 845 0
 4251 14ce 054A     	 ldr r2,.L329
 4252 14d0 7B68     	 ldr r3,[r7,#4]
 4253 14d2 1360     	 str r3,[r2]
 846:../../../platform/common/services/clock/sam4l/sysclk.c **** 	cpu_irq_restore(flags);
 4254              	 .loc 10 846 0
 4255 14d4 F868     	 ldr r0,[r7,#12]
 4256 14d6 FEF7BEFD 	 bl cpu_irq_restore
 847:../../../platform/common/services/clock/sam4l/sysclk.c **** }
 4257              	 .loc 10 847 0
 4258 14da 00BF     	 nop
 4259 14dc 1037     	 adds r7,r7,#16
 4260              	.LCFI215:
 4261              	 .cfi_def_cfa_offset 8
 4262 14de BD46     	 mov sp,r7
 4263              	.LCFI216:
 4264              	 .cfi_def_cfa_register 13
 4265              	 
 4266 14e0 80BD     	 pop {r7,pc}
 4267              	.L330:
 4268 14e2 00BF     	 .align 2
 4269              	.L329:
 4270 14e4 00000E40 	 .word 1074659328
 4271              	 .cfi_endproc
 4272              	.LFE192:
 4274              	 .align 1
 4275              	 .global sysclk_enable_usb
 4276              	 .syntax unified
 4277              	 .thumb
 4278              	 .thumb_func
 4279              	 .fpu softvfp
 4281              	sysclk_enable_usb:
 4282              	.LFB193:
 848:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 849:../../../platform/common/services/clock/sam4l/sysclk.c **** #if defined(CONFIG_USBCLK_SOURCE) || defined(__DOXYGEN__)
 850:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
 851:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief Enable the USB generic clock
 852:../../../platform/common/services/clock/sam4l/sysclk.c ****  *
 853:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \pre The USB generic clock must be configured to 48MHz.
 854:../../../platform/common/services/clock/sam4l/sysclk.c ****  * CONFIG_USBCLK_SOURCE and CONFIG_USBCLK_DIV must be defined with proper
 855:../../../platform/common/services/clock/sam4l/sysclk.c ****  * configuration. The selected clock source must also be configured.
 856:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
 857:../../../platform/common/services/clock/sam4l/sysclk.c **** void sysclk_enable_usb(void)
 858:../../../platform/common/services/clock/sam4l/sysclk.c **** {
 4283              	 .loc 10 858 0
 4284              	 .cfi_startproc
 4285              	 
 4286              	 
 4287 14e8 80B5     	 push {r7,lr}
 4288              	.LCFI217:
 4289              	 .cfi_def_cfa_offset 8
 4290              	 .cfi_offset 7,-8
 4291              	 .cfi_offset 14,-4
 4292 14ea 00AF     	 add r7,sp,#0
 4293              	.LCFI218:
 4294              	 .cfi_def_cfa_register 7
 859:../../../platform/common/services/clock/sam4l/sysclk.c **** 	// Note: the SYSCLK_PBB_BRIDGE clock is enabled by
 860:../../../platform/common/services/clock/sam4l/sysclk.c **** 	// sysclk_enable_pbb_module().
 861:../../../platform/common/services/clock/sam4l/sysclk.c **** 	sysclk_enable_pbb_module(SYSCLK_USBC_REGS);
 4295              	 .loc 10 861 0
 4296 14ec 0520     	 movs r0,#5
 4297 14ee FFF7FEFF 	 bl sysclk_enable_pbb_module
 862:../../../platform/common/services/clock/sam4l/sysclk.c **** 	sysclk_enable_hsb_module(SYSCLK_USBC_DATA);
 4298              	 .loc 10 862 0
 4299 14f2 0320     	 movs r0,#3
 4300 14f4 FFF7E7F8 	 bl sysclk_enable_hsb_module
 863:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 864:../../../platform/common/services/clock/sam4l/sysclk.c **** 	genclk_enable_config(7, CONFIG_USBCLK_SOURCE, CONFIG_USBCLK_DIV);
 4301              	 .loc 10 864 0
 4302 14f8 0122     	 movs r2,#1
 4303 14fa 1021     	 movs r1,#16
 4304 14fc 0720     	 movs r0,#7
 4305 14fe FFF78DF8 	 bl genclk_enable_config
 865:../../../platform/common/services/clock/sam4l/sysclk.c **** }
 4306              	 .loc 10 865 0
 4307 1502 00BF     	 nop
 4308 1504 80BD     	 pop {r7,pc}
 4309              	 .cfi_endproc
 4310              	.LFE193:
 4312              	 .align 1
 4313              	 .global sysclk_disable_usb
 4314              	 .syntax unified
 4315              	 .thumb
 4316              	 .thumb_func
 4317              	 .fpu softvfp
 4319              	sysclk_disable_usb:
 4320              	.LFB194:
 866:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 867:../../../platform/common/services/clock/sam4l/sysclk.c **** /**
 868:../../../platform/common/services/clock/sam4l/sysclk.c ****  * \brief Disable the USB generic clock
 869:../../../platform/common/services/clock/sam4l/sysclk.c ****  */
 870:../../../platform/common/services/clock/sam4l/sysclk.c **** void sysclk_disable_usb(void)
 871:../../../platform/common/services/clock/sam4l/sysclk.c **** {
 4321              	 .loc 10 871 0
 4322              	 .cfi_startproc
 4323              	 
 4324              	 
 4325 1506 80B5     	 push {r7,lr}
 4326              	.LCFI219:
 4327              	 .cfi_def_cfa_offset 8
 4328              	 .cfi_offset 7,-8
 4329              	 .cfi_offset 14,-4
 4330 1508 00AF     	 add r7,sp,#0
 4331              	.LCFI220:
 4332              	 .cfi_def_cfa_register 7
 872:../../../platform/common/services/clock/sam4l/sysclk.c ****    genclk_disable(7);
 4333              	 .loc 10 872 0
 4334 150a 0720     	 movs r0,#7
 4335 150c FEF7CAFF 	 bl genclk_disable
 873:../../../platform/common/services/clock/sam4l/sysclk.c **** }
 4336              	 .loc 10 873 0
 4337 1510 00BF     	 nop
 4338 1512 80BD     	 pop {r7,pc}
 4339              	 .cfi_endproc
 4340              	.LFE194:
 4342              	 .align 1
 4343              	 .global sysclk_init
 4344              	 .syntax unified
 4345              	 .thumb
 4346              	 .thumb_func
 4347              	 .fpu softvfp
 4349              	sysclk_init:
 4350              	.LFB195:
 874:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif // CONFIG_USBCLK_SOURCE
 875:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 876:../../../platform/common/services/clock/sam4l/sysclk.c **** void sysclk_init(void)
 877:../../../platform/common/services/clock/sam4l/sysclk.c **** {
 4351              	 .loc 10 877 0
 4352              	 .cfi_startproc
 4353              	 
 4354              	 
 4355 1514 80B5     	 push {r7,lr}
 4356              	.LCFI221:
 4357              	 .cfi_def_cfa_offset 8
 4358              	 .cfi_offset 7,-8
 4359              	 .cfi_offset 14,-4
 4360 1516 86B0     	 sub sp,sp,#24
 4361              	.LCFI222:
 4362              	 .cfi_def_cfa_offset 32
 4363 1518 00AF     	 add r7,sp,#0
 4364              	.LCFI223:
 4365              	 .cfi_def_cfa_register 7
 878:../../../platform/common/services/clock/sam4l/sysclk.c **** 	uint32_t ps_value = 0;
 4366              	 .loc 10 878 0
 4367 151a 0023     	 movs r3,#0
 4368 151c 7B61     	 str r3,[r7,#20]
 879:../../../platform/common/services/clock/sam4l/sysclk.c **** 	bool is_fwu_enabled = false;
 4369              	 .loc 10 879 0
 4370 151e 0023     	 movs r3,#0
 4371 1520 FB74     	 strb r3,[r7,#19]
 880:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 881:../../../platform/common/services/clock/sam4l/sysclk.c **** #if CONFIG_HCACHE_ENABLE == 1
 882:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Enable HCACHE */
 883:../../../platform/common/services/clock/sam4l/sysclk.c **** 	sysclk_enable_peripheral_clock(HCACHE);
 4372              	 .loc 10 883 0
 4373 1522 2348     	 ldr r0,.L339
 4374 1524 FFF7FEFF 	 bl sysclk_enable_peripheral_clock
 884:../../../platform/common/services/clock/sam4l/sysclk.c **** 	HCACHE->HCACHE_CTRL = HCACHE_CTRL_CEN_YES;
 4375              	 .loc 10 884 0
 4376 1528 214B     	 ldr r3,.L339
 4377 152a 0122     	 movs r2,#1
 4378 152c 9A60     	 str r2,[r3,#8]
 885:../../../platform/common/services/clock/sam4l/sysclk.c **** 	while (!(HCACHE->HCACHE_SR & HCACHE_SR_CSTS_EN));
 4379              	 .loc 10 885 0
 4380 152e 00BF     	 nop
 4381              	.L334:
 4382              	 .loc 10 885 0 is_stmt 0 discriminator 1
 4383 1530 1F4B     	 ldr r3,.L339
 4384 1532 DB68     	 ldr r3,[r3,#12]
 4385 1534 03F00103 	 and r3,r3,#1
 4386 1538 002B     	 cmp r3,#0
 4387 153a F9D0     	 beq .L334
 886:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif
 887:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 888:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Set up system clock dividers if different from defaults */
 889:../../../platform/common/services/clock/sam4l/sysclk.c **** 	if ((CONFIG_SYSCLK_CPU_DIV > 0) || (CONFIG_SYSCLK_PBA_DIV > 0) ||
 890:../../../platform/common/services/clock/sam4l/sysclk.c **** 			(CONFIG_SYSCLK_PBB_DIV > 0) || (CONFIG_SYSCLK_PBC_DIV > 0) ||
 891:../../../platform/common/services/clock/sam4l/sysclk.c **** 			(CONFIG_SYSCLK_PBD_DIV > 0)) {
 892:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_set_prescalers(CONFIG_SYSCLK_CPU_DIV,
 893:../../../platform/common/services/clock/sam4l/sysclk.c **** 				CONFIG_SYSCLK_PBA_DIV,
 894:../../../platform/common/services/clock/sam4l/sysclk.c **** 				CONFIG_SYSCLK_PBB_DIV,
 895:../../../platform/common/services/clock/sam4l/sysclk.c **** 				CONFIG_SYSCLK_PBC_DIV,
 896:../../../platform/common/services/clock/sam4l/sysclk.c **** 				CONFIG_SYSCLK_PBD_DIV
 897:../../../platform/common/services/clock/sam4l/sysclk.c **** 				);
 898:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 899:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 900:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Automatically select best power scaling mode */
 901:../../../platform/common/services/clock/sam4l/sysclk.c **** #ifdef CONFIG_FLASH_READ_MODE_HIGH_SPEED_ENABLE
 902:../../../platform/common/services/clock/sam4l/sysclk.c **** 	ps_value = BPM_PS_2;
 903:../../../platform/common/services/clock/sam4l/sysclk.c **** 	is_fwu_enabled = false;
 904:../../../platform/common/services/clock/sam4l/sysclk.c **** #elif (defined(CONFIG_PLL0_MUL) || defined(CONFIG_DFLL0_MUL) ||	defined(CONFIG_USBCLK_DIV))
 905:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* USB/DFLL/PLL are not available in PS1 (BPM.PMCON.PS=1) mode */
 906:../../../platform/common/services/clock/sam4l/sysclk.c **** 	ps_value = BPM_PS_0;
 4388              	 .loc 10 906 0 is_stmt 1
 4389 153c 0023     	 movs r3,#0
 4390 153e 7B61     	 str r3,[r7,#20]
 907:../../../platform/common/services/clock/sam4l/sysclk.c **** 	is_fwu_enabled = false;
 4391              	 .loc 10 907 0
 4392 1540 0023     	 movs r3,#0
 4393 1542 FB74     	 strb r3,[r7,#19]
 908:../../../platform/common/services/clock/sam4l/sysclk.c **** #else
 909:../../../platform/common/services/clock/sam4l/sysclk.c **** 	if (sysclk_get_cpu_hz() <= FLASH_FREQ_PS1_FWS_1_MAX_FREQ) {
 910:../../../platform/common/services/clock/sam4l/sysclk.c **** 		ps_value = BPM_PS_1;
 911:../../../platform/common/services/clock/sam4l/sysclk.c **** 		if (sysclk_get_cpu_hz() > FLASH_FREQ_PS1_FWS_0_MAX_FREQ) {
 912:../../../platform/common/services/clock/sam4l/sysclk.c **** 			bpm_enable_fast_wakeup(BPM);
 913:../../../platform/common/services/clock/sam4l/sysclk.c **** 			is_fwu_enabled = true;
 914:../../../platform/common/services/clock/sam4l/sysclk.c **** 		}
 915:../../../platform/common/services/clock/sam4l/sysclk.c **** 	} else {
 916:../../../platform/common/services/clock/sam4l/sysclk.c **** 		ps_value = BPM_PS_0;
 917:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 918:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif
 919:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 920:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Switch to system clock selected by user */
 921:../../../platform/common/services/clock/sam4l/sysclk.c **** 	if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RCSYS) {
 922:../../../platform/common/services/clock/sam4l/sysclk.c **** 		/* Already running from RCSYS */
 923:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 924:../../../platform/common/services/clock/sam4l/sysclk.c **** #ifdef BOARD_OSC0_HZ
 925:../../../platform/common/services/clock/sam4l/sysclk.c **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_OSC0) {
 926:../../../platform/common/services/clock/sam4l/sysclk.c **** 		osc_enable(OSC_ID_OSC0);
 4394              	 .loc 10 926 0
 4395 1544 0020     	 movs r0,#0
 4396 1546 FEF79DFD 	 bl osc_enable
 927:../../../platform/common/services/clock/sam4l/sysclk.c **** 		osc_wait_ready(OSC_ID_OSC0);
 4397              	 .loc 10 927 0
 4398 154a 0020     	 movs r0,#0
 4399 154c FEF774FE 	 bl osc_wait_ready
 928:../../../platform/common/services/clock/sam4l/sysclk.c **** 		// Set a flash wait state depending on the new cpu frequency.
 929:../../../platform/common/services/clock/sam4l/sysclk.c **** 		flash_set_bus_freq(sysclk_get_cpu_hz(), ps_value, is_fwu_enabled);
 4400              	 .loc 10 929 0
 4401 1550 FFF796F8 	 bl sysclk_get_cpu_hz
 4402 1554 FB7C     	 ldrb r3,[r7,#19]
 4403 1556 1A46     	 mov r2,r3
 4404 1558 7969     	 ldr r1,[r7,#20]
 4405 155a 164B     	 ldr r3,.L339+4
 4406 155c 9847     	 blx r3
 4407              	.LVL8:
 930:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_set_source(SYSCLK_SRC_OSC0);
 4408              	 .loc 10 930 0
 4409 155e 0120     	 movs r0,#1
 4410 1560 FFF7FEFF 	 bl sysclk_set_source
 4411 1564 144B     	 ldr r3,.L339+8
 4412 1566 BB60     	 str r3,[r7,#8]
 4413 1568 7B69     	 ldr r3,[r7,#20]
 4414 156a 7B60     	 str r3,[r7,#4]
 4415 156c 0123     	 movs r3,#1
 4416 156e 3B60     	 str r3,[r7]
 4417              	.LBB24:
 4418              	.LBB25:
 4419              	 .file 11 "../../../platform/sam/drivers/bpm/bpm.h"
   1:../../../platform/sam/drivers/bpm/bpm.h **** /**
   2:../../../platform/sam/drivers/bpm/bpm.h ****  * \file
   3:../../../platform/sam/drivers/bpm/bpm.h ****  *
   4:../../../platform/sam/drivers/bpm/bpm.h ****  * \brief BPM driver.
   5:../../../platform/sam/drivers/bpm/bpm.h ****  *
   6:../../../platform/sam/drivers/bpm/bpm.h ****  * Copyright (C) 2012 - 2014 Atmel Corporation. All rights reserved.
   7:../../../platform/sam/drivers/bpm/bpm.h ****  *
   8:../../../platform/sam/drivers/bpm/bpm.h ****  * \asf_license_start
   9:../../../platform/sam/drivers/bpm/bpm.h ****  *
  10:../../../platform/sam/drivers/bpm/bpm.h ****  * \page License
  11:../../../platform/sam/drivers/bpm/bpm.h ****  *
  12:../../../platform/sam/drivers/bpm/bpm.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/sam/drivers/bpm/bpm.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/sam/drivers/bpm/bpm.h ****  *
  15:../../../platform/sam/drivers/bpm/bpm.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/sam/drivers/bpm/bpm.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/sam/drivers/bpm/bpm.h ****  *
  18:../../../platform/sam/drivers/bpm/bpm.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/sam/drivers/bpm/bpm.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/sam/drivers/bpm/bpm.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/sam/drivers/bpm/bpm.h ****  *
  22:../../../platform/sam/drivers/bpm/bpm.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/sam/drivers/bpm/bpm.h ****  *    from this software without specific prior written permission.
  24:../../../platform/sam/drivers/bpm/bpm.h ****  *
  25:../../../platform/sam/drivers/bpm/bpm.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/sam/drivers/bpm/bpm.h ****  *    Atmel microcontroller product.
  27:../../../platform/sam/drivers/bpm/bpm.h ****  *
  28:../../../platform/sam/drivers/bpm/bpm.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/sam/drivers/bpm/bpm.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/sam/drivers/bpm/bpm.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/sam/drivers/bpm/bpm.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/sam/drivers/bpm/bpm.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/sam/drivers/bpm/bpm.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/sam/drivers/bpm/bpm.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/sam/drivers/bpm/bpm.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/sam/drivers/bpm/bpm.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/sam/drivers/bpm/bpm.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/sam/drivers/bpm/bpm.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/sam/drivers/bpm/bpm.h ****  *
  40:../../../platform/sam/drivers/bpm/bpm.h ****  * \asf_license_stop
  41:../../../platform/sam/drivers/bpm/bpm.h ****  *
  42:../../../platform/sam/drivers/bpm/bpm.h ****  */
  43:../../../platform/sam/drivers/bpm/bpm.h **** 
  44:../../../platform/sam/drivers/bpm/bpm.h **** #ifndef BPM_H_INCLUDED
  45:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_H_INCLUDED
  46:../../../platform/sam/drivers/bpm/bpm.h **** 
  47:../../../platform/sam/drivers/bpm/bpm.h **** #include "compiler.h"
  48:../../../platform/sam/drivers/bpm/bpm.h **** 
  49:../../../platform/sam/drivers/bpm/bpm.h **** #ifdef __cplusplus
  50:../../../platform/sam/drivers/bpm/bpm.h **** extern "C" {
  51:../../../platform/sam/drivers/bpm/bpm.h **** #endif
  52:../../../platform/sam/drivers/bpm/bpm.h **** 
  53:../../../platform/sam/drivers/bpm/bpm.h **** /**
  54:../../../platform/sam/drivers/bpm/bpm.h ****  * \defgroup group_sam_drivers_bpm BPM - Backup Power Manager
  55:../../../platform/sam/drivers/bpm/bpm.h ****  *
  56:../../../platform/sam/drivers/bpm/bpm.h ****  * Driver for the BPM (Backup Power Manager).
  57:../../../platform/sam/drivers/bpm/bpm.h ****  * This driver provides access to the main features of the BPM controller.
  58:../../../platform/sam/drivers/bpm/bpm.h ****  * It provides functions for different power mode management.
  59:../../../platform/sam/drivers/bpm/bpm.h ****  *
  60:../../../platform/sam/drivers/bpm/bpm.h ****  * @{
  61:../../../platform/sam/drivers/bpm/bpm.h ****  */
  62:../../../platform/sam/drivers/bpm/bpm.h **** 
  63:../../../platform/sam/drivers/bpm/bpm.h **** /** BPM unlock macro */
  64:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_UNLOCK(reg) \
  65:../../../platform/sam/drivers/bpm/bpm.h **** 	do { \
  66:../../../platform/sam/drivers/bpm/bpm.h **** 		BPM->BPM_UNLOCK = BPM_UNLOCK_KEY(0xAAu)                          \
  67:../../../platform/sam/drivers/bpm/bpm.h **** 			| BPM_UNLOCK_ADDR((uint32_t)&BPM->BPM_##reg - (uint32_t)BPM);\
  68:../../../platform/sam/drivers/bpm/bpm.h **** 	} while (0)
  69:../../../platform/sam/drivers/bpm/bpm.h **** 
  70:../../../platform/sam/drivers/bpm/bpm.h **** /** \name Sleep mode definitions */
  71:../../../platform/sam/drivers/bpm/bpm.h **** /* @{ */
  72:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_SM_ACTIVE    0    /**< Active mode */
  73:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_SM_SLEEP_0   1    /**< Sleep mode 0 */
  74:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_SM_SLEEP_1   2    /**< Sleep mode 1 */
  75:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_SM_SLEEP_2   3    /**< Sleep mode 2 */
  76:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_SM_SLEEP_3   4    /**< Sleep mode 3 */
  77:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_SM_WAIT      5    /**< Wait mode */
  78:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_SM_RET       6    /**< Retention mode */
  79:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_SM_BACKUP    7    /**< Backup mode */
  80:../../../platform/sam/drivers/bpm/bpm.h **** /* @} */
  81:../../../platform/sam/drivers/bpm/bpm.h **** 
  82:../../../platform/sam/drivers/bpm/bpm.h **** /** \anchor power_scaling_change_mode */
  83:../../../platform/sam/drivers/bpm/bpm.h **** /** \name Power scaling change mode */
  84:../../../platform/sam/drivers/bpm/bpm.h **** /* @{ */
  85:../../../platform/sam/drivers/bpm/bpm.h **** /** Power scaling change mode: halting the CPU execution */
  86:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_PSCM_CPU_HALT           0
  87:../../../platform/sam/drivers/bpm/bpm.h **** /** Power scaling change mode: CPU execution not halted */
  88:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_PSCM_CPU_NOT_HALT       1
  89:../../../platform/sam/drivers/bpm/bpm.h **** /* @} */
  90:../../../platform/sam/drivers/bpm/bpm.h **** 
  91:../../../platform/sam/drivers/bpm/bpm.h **** /** \anchor power_scaling_mode_value */
  92:../../../platform/sam/drivers/bpm/bpm.h **** /** \name Power scaling mode value */
  93:../../../platform/sam/drivers/bpm/bpm.h **** /* @{ */
  94:../../../platform/sam/drivers/bpm/bpm.h **** /** Power scaling mode 0 */
  95:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_PS_0    0
  96:../../../platform/sam/drivers/bpm/bpm.h **** /** Power scaling mode 1 */
  97:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_PS_1    1
  98:../../../platform/sam/drivers/bpm/bpm.h **** /** Power scaling mode 2 */
  99:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_PS_2    2
 100:../../../platform/sam/drivers/bpm/bpm.h **** /* @} */
 101:../../../platform/sam/drivers/bpm/bpm.h **** 
 102:../../../platform/sam/drivers/bpm/bpm.h **** /** \anchor CLK32_32Khz_1Khz */
 103:../../../platform/sam/drivers/bpm/bpm.h **** /** \name CLK32 32Khz-1Khz clock source selection */
 104:../../../platform/sam/drivers/bpm/bpm.h **** /* @{ */
 105:../../../platform/sam/drivers/bpm/bpm.h **** /** OSC32K : Low frequency crystal oscillator */
 106:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_CLK32_SOURCE_OSC32K  0
 107:../../../platform/sam/drivers/bpm/bpm.h **** /** RC32K : Internal Low frequency RC oscillator */
 108:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_CLK32_SOURCE_RC32K   1
 109:../../../platform/sam/drivers/bpm/bpm.h **** /* @} */
 110:../../../platform/sam/drivers/bpm/bpm.h **** 
 111:../../../platform/sam/drivers/bpm/bpm.h **** /** \anchor backup_wake_up_sources */
 112:../../../platform/sam/drivers/bpm/bpm.h **** /** \name Backup wake up sources */
 113:../../../platform/sam/drivers/bpm/bpm.h **** /* @{ */
 114:../../../platform/sam/drivers/bpm/bpm.h **** /** EIC wake up */
 115:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_WAKEUP_SRC_EIC       (1UL << BPM_BKUPWEN_EIC)
 116:../../../platform/sam/drivers/bpm/bpm.h **** /** AST wake up */
 117:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_WAKEUP_SRC_AST       (1UL << BPM_BKUPWEN_AST)
 118:../../../platform/sam/drivers/bpm/bpm.h **** /** WDT wake up */
 119:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_WAKEUP_SRC_WDT       (1UL << BPM_BKUPWEN_WDT)
 120:../../../platform/sam/drivers/bpm/bpm.h **** /** BOD33 wake up */
 121:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_WAKEUP_SRC_BOD33     (1UL << BPM_BKUPWEN_BOD33)
 122:../../../platform/sam/drivers/bpm/bpm.h **** /** BOD18 wake up */
 123:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_WAKEUP_SRC_BOD18     (1UL << BPM_BKUPWEN_BOD18)
 124:../../../platform/sam/drivers/bpm/bpm.h **** /** PICOUART wake up */
 125:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_WAKEUP_SRC_PICOUART  (1UL << BPM_BKUPWEN_PICOUART)
 126:../../../platform/sam/drivers/bpm/bpm.h **** /* @} */
 127:../../../platform/sam/drivers/bpm/bpm.h **** 
 128:../../../platform/sam/drivers/bpm/bpm.h **** /** \anchor backup_pin_muxing */
 129:../../../platform/sam/drivers/bpm/bpm.h **** /** \name Backup pin muxing */
 130:../../../platform/sam/drivers/bpm/bpm.h **** /* @{ */
 131:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_PIN_PB01_EIC0    BPM_BKUPPMUX_BKUPPMUX(0)
 132:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_PIN_PA06_EIC1    BPM_BKUPPMUX_BKUPPMUX(1)
 133:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_PIN_PA04_EIC2    BPM_BKUPPMUX_BKUPPMUX(2)
 134:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_PIN_PA05_EIC3    BPM_BKUPPMUX_BKUPPMUX(3)
 135:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_PIN_PA07_EIC4    BPM_BKUPPMUX_BKUPPMUX(4)
 136:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_PIN_PC03_EIC5    BPM_BKUPPMUX_BKUPPMUX(5)
 137:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_PIN_PC04_EIC6    BPM_BKUPPMUX_BKUPPMUX(6)
 138:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_PIN_PC05_EIC7    BPM_BKUPPMUX_BKUPPMUX(7)
 139:../../../platform/sam/drivers/bpm/bpm.h **** #define BPM_BKUP_PIN_PC06_EIC8    BPM_BKUPPMUX_BKUPPMUX(8)
 140:../../../platform/sam/drivers/bpm/bpm.h **** /* @} */
 141:../../../platform/sam/drivers/bpm/bpm.h **** 
 142:../../../platform/sam/drivers/bpm/bpm.h **** /**
 143:../../../platform/sam/drivers/bpm/bpm.h ****  * \name Power management
 144:../../../platform/sam/drivers/bpm/bpm.h ****  */
 145:../../../platform/sam/drivers/bpm/bpm.h **** /* @{ */
 146:../../../platform/sam/drivers/bpm/bpm.h **** 
 147:../../../platform/sam/drivers/bpm/bpm.h **** /**
 148:../../../platform/sam/drivers/bpm/bpm.h ****  * \brief Enter sleep mode
 149:../../../platform/sam/drivers/bpm/bpm.h ****  *
 150:../../../platform/sam/drivers/bpm/bpm.h ****  * \param bpm Base address of the BPM instance.
 151:../../../platform/sam/drivers/bpm/bpm.h ****  * \param sleep_mode Expected sleep mode (active case not included).
 152:../../../platform/sam/drivers/bpm/bpm.h ****  */
 153:../../../platform/sam/drivers/bpm/bpm.h **** void bpm_sleep(Bpm *bpm, uint32_t sleep_mode);
 154:../../../platform/sam/drivers/bpm/bpm.h **** 
 155:../../../platform/sam/drivers/bpm/bpm.h **** /**
 156:../../../platform/sam/drivers/bpm/bpm.h ****  * \brief Change Power Scaling mode
 157:../../../platform/sam/drivers/bpm/bpm.h ****  *
 158:../../../platform/sam/drivers/bpm/bpm.h ****  * PSOK is not checked while switching PS mode.
 159:../../../platform/sam/drivers/bpm/bpm.h ****  *
 160:../../../platform/sam/drivers/bpm/bpm.h ****  * \param bpm  Base address of the BPM instance.
 161:../../../platform/sam/drivers/bpm/bpm.h ****  * \param ps_value  Power scaling value, see \ref power_scaling_mode_value.
 162:../../../platform/sam/drivers/bpm/bpm.h ****  *
 163:../../../platform/sam/drivers/bpm/bpm.h ****  */
 164:../../../platform/sam/drivers/bpm/bpm.h **** void bpm_power_scaling_cpu(Bpm *bpm, uint32_t ps_value);
 165:../../../platform/sam/drivers/bpm/bpm.h **** 
 166:../../../platform/sam/drivers/bpm/bpm.h **** /**
 167:../../../platform/sam/drivers/bpm/bpm.h ****  * \brief Change Power Scaling mode and check results
 168:../../../platform/sam/drivers/bpm/bpm.h ****  *
 169:../../../platform/sam/drivers/bpm/bpm.h ****  * Wait for a while to check if PSOK is ready.
 170:../../../platform/sam/drivers/bpm/bpm.h ****  *
 171:../../../platform/sam/drivers/bpm/bpm.h ****  * \param bpm  Base address of the BPM instance.
 172:../../../platform/sam/drivers/bpm/bpm.h ****  * \param ps_value  Power scaling value, see \ref power_scaling_mode_value.
 173:../../../platform/sam/drivers/bpm/bpm.h ****  *
 174:../../../platform/sam/drivers/bpm/bpm.h ****  * \param timeout Timeout, in number of processor clocks, max 0xFFFFFF.
 175:../../../platform/sam/drivers/bpm/bpm.h ****  * \return true if PSOK is ready.
 176:../../../platform/sam/drivers/bpm/bpm.h ****  */
 177:../../../platform/sam/drivers/bpm/bpm.h **** bool bpm_power_scaling_cpu_failsafe(Bpm *bpm, uint32_t ps_value,
 178:../../../platform/sam/drivers/bpm/bpm.h **** 		uint32_t timeout);
 179:../../../platform/sam/drivers/bpm/bpm.h **** 
 180:../../../platform/sam/drivers/bpm/bpm.h **** /**
 181:../../../platform/sam/drivers/bpm/bpm.h ****  * \brief Configure power scaling mode.
 182:../../../platform/sam/drivers/bpm/bpm.h ****  *
 183:../../../platform/sam/drivers/bpm/bpm.h ****  * While checking PSOK in power safe (no halt) mode, timeout is set to
 184:../../../platform/sam/drivers/bpm/bpm.h ****  * 240000 by default, which takes 20ms when 12MHz clock is used.
 185:../../../platform/sam/drivers/bpm/bpm.h ****  *
 186:../../../platform/sam/drivers/bpm/bpm.h ****  * \param bpm  Base address of the BPM instance.
 187:../../../platform/sam/drivers/bpm/bpm.h ****  * \param ps_value  Power scaling value, see \ref power_scaling_mode_value.
 188:../../../platform/sam/drivers/bpm/bpm.h ****  *
 189:../../../platform/sam/drivers/bpm/bpm.h ****  * \param no_halt   No halt or Fail safe, see \c bpm_power_scaling_cpu()
 190:../../../platform/sam/drivers/bpm/bpm.h ****  *                  and bpm_power_scaling_cpu_failsafe()
 191:../../../platform/sam/drivers/bpm/bpm.h ****  * \return true if no error.
 192:../../../platform/sam/drivers/bpm/bpm.h ****  */
 193:../../../platform/sam/drivers/bpm/bpm.h **** __always_inline static
 194:../../../platform/sam/drivers/bpm/bpm.h **** bool bpm_configure_power_scaling(Bpm *bpm, uint32_t ps_value, uint32_t no_halt)
 195:../../../platform/sam/drivers/bpm/bpm.h **** {
 196:../../../platform/sam/drivers/bpm/bpm.h **** 	if (!no_halt) {
 4420              	 .loc 11 196 0
 4421 1570 3B68     	 ldr r3,[r7]
 4422 1572 002B     	 cmp r3,#0
 4423 1574 04D1     	 bne .L335
 197:../../../platform/sam/drivers/bpm/bpm.h **** 		bpm_power_scaling_cpu(bpm, ps_value);
 4424              	 .loc 11 197 0
 4425 1576 7968     	 ldr r1,[r7,#4]
 4426 1578 B868     	 ldr r0,[r7,#8]
 4427 157a 104B     	 ldr r3,.L339+12
 4428 157c 9847     	 blx r3
 4429              	.LVL9:
 4430 157e 04E0     	 b .L338
 4431              	.L335:
 198:../../../platform/sam/drivers/bpm/bpm.h **** 		return true;
 199:../../../platform/sam/drivers/bpm/bpm.h **** 	}
 200:../../../platform/sam/drivers/bpm/bpm.h **** 
 201:../../../platform/sam/drivers/bpm/bpm.h **** 	return bpm_power_scaling_cpu_failsafe(bpm, ps_value, 240000);
 4432              	 .loc 11 201 0
 4433 1580 0F4A     	 ldr r2,.L339+16
 4434 1582 7968     	 ldr r1,[r7,#4]
 4435 1584 B868     	 ldr r0,[r7,#8]
 4436 1586 0F4B     	 ldr r3,.L339+20
 4437 1588 9847     	 blx r3
 4438              	.LVL10:
 4439              	.L338:
 4440              	.LBE25:
 4441              	.LBE24:
 931:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 932:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif
 933:../../../platform/common/services/clock/sam4l/sysclk.c **** #ifdef CONFIG_DFLL0_SOURCE
 934:../../../platform/common/services/clock/sam4l/sysclk.c **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_DFLL) {
 935:../../../platform/common/services/clock/sam4l/sysclk.c **** 		dfll_enable_config_defaults(0);
 936:../../../platform/common/services/clock/sam4l/sysclk.c **** 		// Set a flash wait state depending on the new cpu frequency.
 937:../../../platform/common/services/clock/sam4l/sysclk.c **** 		flash_set_bus_freq(sysclk_get_cpu_hz(), ps_value, is_fwu_enabled);
 938:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_set_source(SYSCLK_SRC_DFLL);
 939:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 940:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif
 941:../../../platform/common/services/clock/sam4l/sysclk.c **** #ifdef CONFIG_PLL0_SOURCE
 942:../../../platform/common/services/clock/sam4l/sysclk.c **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLL0) {
 943:../../../platform/common/services/clock/sam4l/sysclk.c **** 		pll_enable_config_defaults(0);
 944:../../../platform/common/services/clock/sam4l/sysclk.c **** 		// Set a flash wait state depending on the new cpu frequency.
 945:../../../platform/common/services/clock/sam4l/sysclk.c **** 		flash_set_bus_freq(sysclk_get_cpu_hz(), ps_value, is_fwu_enabled);
 946:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_set_source(SYSCLK_SRC_PLL0);
 947:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 948:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif
 949:../../../platform/common/services/clock/sam4l/sysclk.c **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RC80M) {
 950:../../../platform/common/services/clock/sam4l/sysclk.c **** 		osc_enable(OSC_ID_RC80M);
 951:../../../platform/common/services/clock/sam4l/sysclk.c **** 		osc_wait_ready(OSC_ID_RC80M);
 952:../../../platform/common/services/clock/sam4l/sysclk.c **** 		// Set a flash wait state depending on the new cpu frequency.
 953:../../../platform/common/services/clock/sam4l/sysclk.c **** 		flash_set_bus_freq(sysclk_get_cpu_hz(), ps_value, is_fwu_enabled);
 954:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_set_source(SYSCLK_SRC_RC80M);
 955:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 956:../../../platform/common/services/clock/sam4l/sysclk.c **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RCFAST) {
 957:../../../platform/common/services/clock/sam4l/sysclk.c **** 		osc_enable(OSC_ID_RCFAST);
 958:../../../platform/common/services/clock/sam4l/sysclk.c **** 		osc_wait_ready(OSC_ID_RCFAST);
 959:../../../platform/common/services/clock/sam4l/sysclk.c **** 		// Set a flash wait state depending on the new cpu frequency.
 960:../../../platform/common/services/clock/sam4l/sysclk.c **** 		flash_set_bus_freq(sysclk_get_cpu_hz(), ps_value, is_fwu_enabled);
 961:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_set_source(SYSCLK_SRC_RCFAST);
 962:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 963:../../../platform/common/services/clock/sam4l/sysclk.c **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RC1M) {
 964:../../../platform/common/services/clock/sam4l/sysclk.c **** 		osc_enable(OSC_ID_RC1M);
 965:../../../platform/common/services/clock/sam4l/sysclk.c **** 		osc_wait_ready(OSC_ID_RC1M);
 966:../../../platform/common/services/clock/sam4l/sysclk.c **** 		// Set a flash wait state depending on the new cpu frequency.
 967:../../../platform/common/services/clock/sam4l/sysclk.c **** 		flash_set_bus_freq(sysclk_get_cpu_hz(), ps_value, is_fwu_enabled);
 968:../../../platform/common/services/clock/sam4l/sysclk.c **** 		sysclk_set_source(SYSCLK_SRC_RC1M);
 969:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 970:../../../platform/common/services/clock/sam4l/sysclk.c **** 	else {
 971:../../../platform/common/services/clock/sam4l/sysclk.c **** 		Assert(false);
 972:../../../platform/common/services/clock/sam4l/sysclk.c **** 	}
 973:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 974:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Automatically switch to low power mode */
 975:../../../platform/common/services/clock/sam4l/sysclk.c **** 	bpm_configure_power_scaling(BPM, ps_value, BPM_PSCM_CPU_NOT_HALT);
 976:../../../platform/common/services/clock/sam4l/sysclk.c **** 	while ((bpm_get_status(BPM) & BPM_SR_PSOK) == 0);
 4442              	 .loc 10 976 0
 4443 158a 00BF     	 nop
 4444              	.L337:
 4445              	 .loc 10 976 0 is_stmt 0 discriminator 1
 4446 158c 0A48     	 ldr r0,.L339+8
 4447 158e 0E4B     	 ldr r3,.L339+24
 4448 1590 9847     	 blx r3
 4449              	.LVL11:
 4450 1592 0346     	 mov r3,r0
 4451 1594 03F00103 	 and r3,r3,#1
 4452 1598 002B     	 cmp r3,#0
 4453 159a F7D0     	 beq .L337
 977:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 978:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* If the user has specified clock masks, enable only requested clocks */
 979:../../../platform/common/services/clock/sam4l/sysclk.c **** 	irqflags_t const flags = cpu_irq_save();
 4454              	 .loc 10 979 0 is_stmt 1
 4455 159c FEF730FD 	 bl cpu_irq_save
 4456 15a0 F860     	 str r0,[r7,#12]
 980:../../../platform/common/services/clock/sam4l/sysclk.c **** #if defined(CONFIG_SYSCLK_INIT_CPUMASK)
 981:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 982:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| PM_UNLOCK_ADDR((uint32_t)&PM->PM_CPUMASK - (uint32_t)PM);
 983:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_CPUMASK = SYSCLK_INIT_MINIMAL_CPUMASK | CONFIG_SYSCLK_INIT_CPUMASK;
 984:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif
 985:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 986:../../../platform/common/services/clock/sam4l/sysclk.c **** #if defined(CONFIG_SYSCLK_INIT_HSBMASK)
 987:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 988:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| PM_UNLOCK_ADDR((uint32_t)&PM->PM_HSBMASK - (uint32_t)PM);
 989:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_HSBMASK = SYSCLK_INIT_MINIMAL_HSBMASK | CONFIG_SYSCLK_INIT_HSBMASK;
 990:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif
 991:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 992:../../../platform/common/services/clock/sam4l/sysclk.c **** #if defined(CONFIG_SYSCLK_INIT_PBAMASK)
 993:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 994:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| PM_UNLOCK_ADDR((uint32_t)&PM->PM_PBAMASK - (uint32_t)PM);
 995:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_PBAMASK = SYSCLK_INIT_MINIMAL_PBAMASK | CONFIG_SYSCLK_INIT_PBAMASK;
 996:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif
 997:../../../platform/common/services/clock/sam4l/sysclk.c **** 
 998:../../../platform/common/services/clock/sam4l/sysclk.c **** #if defined(CONFIG_SYSCLK_INIT_PBBMASK)
 999:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
1000:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| PM_UNLOCK_ADDR((uint32_t)&PM->PM_PBBMASK - (uint32_t)PM);
1001:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_PBBMASK = SYSCLK_INIT_MINIMAL_PBBMASK | CONFIG_SYSCLK_INIT_PBBMASK;
1002:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif
1003:../../../platform/common/services/clock/sam4l/sysclk.c **** 
1004:../../../platform/common/services/clock/sam4l/sysclk.c **** #if defined(CONFIG_SYSCLK_INIT_PBCMASK)
1005:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
1006:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| PM_UNLOCK_ADDR((uint32_t)&PM->PM_PBCMASK - (uint32_t)PM);
1007:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_PBCMASK = SYSCLK_INIT_MINIMAL_PBCMASK | CONFIG_SYSCLK_INIT_PBCMASK;
1008:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif
1009:../../../platform/common/services/clock/sam4l/sysclk.c **** 
1010:../../../platform/common/services/clock/sam4l/sysclk.c **** #if defined(CONFIG_SYSCLK_INIT_PBDMASK)
1011:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
1012:../../../platform/common/services/clock/sam4l/sysclk.c **** 		| PM_UNLOCK_ADDR((uint32_t)&PM->PM_PBDMASK - (uint32_t)PM);
1013:../../../platform/common/services/clock/sam4l/sysclk.c **** 	PM->PM_PBDMASK = SYSCLK_INIT_MINIMAL_PBDMASK | CONFIG_SYSCLK_INIT_PBDMASK;
1014:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif
1015:../../../platform/common/services/clock/sam4l/sysclk.c **** 
1016:../../../platform/common/services/clock/sam4l/sysclk.c **** 	cpu_irq_restore(flags);
 4457              	 .loc 10 1016 0
 4458 15a2 F868     	 ldr r0,[r7,#12]
 4459 15a4 FEF757FD 	 bl cpu_irq_restore
1017:../../../platform/common/services/clock/sam4l/sysclk.c **** 
1018:../../../platform/common/services/clock/sam4l/sysclk.c **** #if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
1019:../../../platform/common/services/clock/sam4l/sysclk.c **** 	/* Signal that the internal frequencies are setup */
1020:../../../platform/common/services/clock/sam4l/sysclk.c **** 	sysclk_initialized = true;
1021:../../../platform/common/services/clock/sam4l/sysclk.c **** #endif
1022:../../../platform/common/services/clock/sam4l/sysclk.c **** }
 4460              	 .loc 10 1022 0
 4461 15a8 00BF     	 nop
 4462 15aa 1837     	 adds r7,r7,#24
 4463              	.LCFI224:
 4464              	 .cfi_def_cfa_offset 8
 4465 15ac BD46     	 mov sp,r7
 4466              	.LCFI225:
 4467              	 .cfi_def_cfa_register 13
 4468              	 
 4469 15ae 80BD     	 pop {r7,pc}
 4470              	.L340:
 4471              	 .align 2
 4472              	.L339:
 4473 15b0 00040A40 	 .word 1074398208
 4474 15b4 00000000 	 .word flashcalw_set_flash_waitstate_and_readmode
 4475 15b8 00000F40 	 .word 1074724864
 4476 15bc 00000000 	 .word bpm_power_scaling_cpu
 4477 15c0 80A90300 	 .word 240000
 4478 15c4 00000000 	 .word bpm_power_scaling_cpu_failsafe
 4479 15c8 00000000 	 .word bpm_get_status
 4480              	 .cfi_endproc
 4481              	.LFE195:
 4483              	.Letext0:
 4484              	 .file 12 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 4485              	 .file 13 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 4486              	 .file 14 "../../../platform/sam/utils/cmsis/sam4l/include/sam4lc4b.h"
 4487              	 .file 15 "../../../platform/thirdparty/CMSIS/include/core_cm4.h"
 4488              	 .file 16 "../../../platform/sam/utils/cmsis/sam4l/source/templates/system_sam4l.h"
 4489              	 .file 17 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_bpm.h"
 4490              	 .file 18 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_bscif.h"
 4491              	 .file 19 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_hcache.h"
 4492              	 .file 20 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_pm.h"
 4493              	 .file 21 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_scif.h"
 4494              	 .file 22 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 4495              	 .file 23 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 4496              	 .file 24 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 4497              	 .file 25 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 4498              	 .file 26 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdlib.h"
 4499              	 .file 27 "../../../platform/sam/utils/compiler.h"
 4500              	 .file 28 "../../../platform/common/services/usb/usb_protocol.h"
 4501              	 .file 29 "../../../platform/common/services/usb/udc/udi.h"
 4502              	 .file 30 "../../../platform/common/services/usb/udc/udc_desc.h"
 4503              	 .file 31 "../../../platform/common/services/usb/udc/udd.h"
 4504              	 .file 32 "../../../platform/common/services/usb/class/cdc/device/udi_cdc.h"
 4505              	 .file 33 "../../../platform/common/utils/stdio/stdio_usb/stdio_usb.h"
 4506              	 .file 34 "../../../platform/sam/drivers/flashcalw/flashcalw.h"
 4507              	 .file 35 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 sysclk.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:27     .text:00000000 $t
    {standard input}:33     .text:00000000 cpu_irq_save
    {standard input}:119    .text:00000034 $d
    {standard input}:123    .text:00000038 $t
    {standard input}:129    .text:00000038 cpu_irq_is_enabled_flags
    {standard input}:177    .text:00000056 cpu_irq_restore
    {standard input}:241    .text:00000080 $d
                            *COM*:00000001 n
    {standard input}:247    .bss.tTS:00000000 $d
    {standard input}:250    .bss.tTS:00000000 tTS
    {standard input}:253    .text:00000084 $t
    {standard input}:259    .text:00000084 osc_enable
    {standard input}:287    .text:0000009c $d
    {standard input}:294    .text:000000b8 $t
    {standard input}:354    .text:000000e8 $d
    {standard input}:363    .text:00000100 $t
    {standard input}:369    .text:00000100 osc_is_ready
    {standard input}:396    .text:00000118 $d
    {standard input}:403    .text:00000134 $t
    {standard input}:495    .text:000001bc $d
    {standard input}:500    .text:000001c4 $t
    {standard input}:506    .text:000001c4 osc_get_rate
    {standard input}:533    .text:000001dc $d
    {standard input}:540    .text:000001f8 $t
    {standard input}:590    .text:00000224 $d
    {standard input}:598    .text:00000238 $t
    {standard input}:604    .text:00000238 osc_wait_ready
    {standard input}:655    .text:00000260 pll_config_set_option
    {standard input}:708    .text:00000288 pll_config_init
    {standard input}:811    .text:00000314 $d
    {standard input}:816    .text:0000031c $t
    {standard input}:822    .text:0000031c pll_is_locked
    {standard input}:870    .text:00000348 $d
    {standard input}:874    .text:0000034c $t
    {standard input}:880    .text:0000034c pll_enable_source
    {standard input}:943    .text:00000386 pll_enable_config_defaults
    {standard input}:1021   .text:000003e4 $d
    {standard input}:1025   .text:000003e8 $t
    {standard input}:1031   .text:000003e8 genclk_config_defaults
    {standard input}:1078   .text:00000402 genclk_config_set_source
    {standard input}:1133   .text:0000042e genclk_config_set_divider
    {standard input}:1204   .text:00000476 genclk_enable
    {standard input}:1250   .text:000004a0 $d
    {standard input}:1254   .text:000004a4 $t
    {standard input}:1260   .text:000004a4 genclk_disable
    {standard input}:1303   .text:000004c4 $d
    {standard input}:1307   .text:000004c8 $t
    {standard input}:1313   .text:000004c8 genclk_enable_source
    {standard input}:1340   .text:000004e0 $d
    {standard input}:1357   .text:00000524 $t
    {standard input}:1515   .text:00000618 $d
    {standard input}:1519   .text:0000061c $t
    {standard input}:1525   .text:0000061c genclk_enable_config
    {standard input}:1591   .text:0000066c sysclk_get_main_hz
    {standard input}:1622   .text:0000067c $d
    {standard input}:1626   .text:00000680 $t
    {standard input}:1632   .text:00000680 sysclk_get_cpu_hz
    {standard input}:1661   .text:0000068e sysclk_get_pba_hz
    {standard input}:1690   .text:0000069c sysclk_get_pbb_hz
    {standard input}:1719   .text:000006aa sysclk_get_pbc_hz
    {standard input}:1748   .text:000006b8 sysclk_get_pbd_hz
    {standard input}:1777   .text:000006c6 sysclk_enable_hsb_module
    {standard input}:2151   .text:000007c4 sysclk_priv_enable_module
    {standard input}:1818   .text:000006de sysclk_disable_hsb_module
    {standard input}:2233   .text:00000824 sysclk_priv_disable_module
    {standard input}:1859   .text:000006f6 sysclk_enable_pbc_module
    {standard input}:1900   .text:0000070e sysclk_disable_pbc_module
    {standard input}:1941   .text:00000726 sysclk_enable_pbd_module
    {standard input}:1982   .text:0000073e sysclk_disable_pbd_module
    {standard input}:2023   .text:00000756 sysclk_enable_pba_divmask
    {standard input}:2075   .text:00000784 $d
    {standard input}:2080   .text:0000078c $t
    {standard input}:2086   .text:0000078c sysclk_disable_pba_divmask
    {standard input}:2139   .text:000007bc $d
    {standard input}:2144   .text:000007c4 $t
    {standard input}:2221   .text:0000081c $d
    {standard input}:2226   .text:00000824 $t
    {standard input}:2303   .text:0000087c $d
    {standard input}:2308   .text:00000884 $t
    {standard input}:2315   .text:00000884 sysclk_enable_pba_module
    {standard input}:2365   .text:000008b8 $d
    {standard input}:2369   .text:000008bc $t
    {standard input}:2376   .text:000008bc sysclk_disable_pba_module
    {standard input}:2426   .text:000008f0 $d
    {standard input}:2430   .text:000008f4 $t
    {standard input}:2437   .text:000008f4 sysclk_enable_pbb_module
    {standard input}:2487   .text:00000928 $d
    {standard input}:2491   .text:0000092c $t
    {standard input}:2498   .text:0000092c sysclk_disable_pbb_module
    {standard input}:2548   .text:00000960 $d
    {standard input}:2552   .text:00000964 $t
    {standard input}:2559   .text:00000964 sysclk_get_peripheral_bus_hz
    {standard input}:2814   .text:00000b20 $d
    {standard input}:2857   .text:00000bc0 $t
    {standard input}:2864   .text:00000bc0 sysclk_enable_peripheral_clock
    {standard input}:3338   .text:00000ecc $d
    {standard input}:3381   .text:00000f70 $t
    {standard input}:3465   .text:00000fce sysclk_disable_peripheral_clock
    {standard input}:3948   .text:000012d8 $d
    {standard input}:3991   .text:0000137c $t
    {standard input}:4048   .text:000013c4 $d
    {standard input}:4052   .text:000013c8 $t
    {standard input}:4059   .text:000013c8 sysclk_set_prescalers
    {standard input}:4209   .text:000014a0 $d
    {standard input}:4218   .text:000014b8 $t
    {standard input}:4225   .text:000014b8 sysclk_set_source
    {standard input}:4270   .text:000014e4 $d
    {standard input}:4274   .text:000014e8 $t
    {standard input}:4281   .text:000014e8 sysclk_enable_usb
    {standard input}:4319   .text:00001506 sysclk_disable_usb
    {standard input}:4349   .text:00001514 sysclk_init
    {standard input}:4473   .text:000015b0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
g_interrupt_enabled
osc_priv_enable_osc0
osc_priv_enable_osc32
osc_priv_enable_rc32k
osc_priv_enable_rc80m
osc_priv_enable_rcfast
osc_priv_enable_rc1m
pll_enable
dfll_enable_config_defaults
flashcalw_set_flash_waitstate_and_readmode
bpm_power_scaling_cpu
bpm_power_scaling_cpu_failsafe
bpm_get_status
