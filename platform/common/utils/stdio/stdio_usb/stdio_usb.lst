   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "stdio_usb.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .comm n,1,1
  27              	 .section .bss.tTS,"aw",%nobits
  28              	 .align 2
  31              	tTS:
  32 0000 00000000 	 .space 4
  33              	 .section .bss.stdio_usb_interface_enable,"aw",%nobits
  36              	stdio_usb_interface_enable:
  37 0000 00       	 .space 1
  38              	 .text
  39              	 .align 1
  40              	 .global stdio_usb_putchar
  41              	 .syntax unified
  42              	 .thumb
  43              	 .thumb_func
  44              	 .fpu softvfp
  46              	stdio_usb_putchar:
  47              	.LFB126:
  48              	 .file 1 "../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c"
   1:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** /**
   2:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * \file
   3:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *
   4:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * \brief USB CDC Standard I/O Serial Management.
   5:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *
   6:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * This module defines support routines for a stdio serial interface to the
   7:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * Atmel Software Framework (ASF) common USB CDC service.
   8:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *
   9:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * Copyright (c) 2011 - 2012 Atmel Corporation. All rights reserved.
  10:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *
  11:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * \asf_license_start
  12:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *
  13:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * \page License
  14:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *
  15:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * Redistribution and use in source and binary forms, with or without
  16:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * modification, are permitted provided that the following conditions are met:
  17:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *
  18:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  19:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *    this list of conditions and the following disclaimer.
  20:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *
  21:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *    this list of conditions and the following disclaimer in the documentation
  23:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *    and/or other materials provided with the distribution.
  24:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *
  25:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  26:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *    from this software without specific prior written permission.
  27:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *
  28:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * 4. This software may only be redistributed and used in connection with an
  29:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *    Atmel microcontroller product.
  30:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *
  31:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  32:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  33:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  34:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  35:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  36:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  37:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  38:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  39:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  40:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  41:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * POSSIBILITY OF SUCH DAMAGE.
  42:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *
  43:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  * \asf_license_stop
  44:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  *
  45:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c ****  */
  46:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 
  47:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 
  48:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** #include "stdio_usb.h"
  49:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 
  50:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** static bool stdio_usb_interface_enable = false;
  51:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 
  52:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** int stdio_usb_putchar (volatile void * unused, char data)
  53:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** {
  49              	 .loc 1 53 0
  50              	 .cfi_startproc
  51              	 
  52              	 
  53 0000 80B5     	 push {r7,lr}
  54              	.LCFI0:
  55              	 .cfi_def_cfa_offset 8
  56              	 .cfi_offset 7,-8
  57              	 .cfi_offset 14,-4
  58 0002 82B0     	 sub sp,sp,#8
  59              	.LCFI1:
  60              	 .cfi_def_cfa_offset 16
  61 0004 00AF     	 add r7,sp,#0
  62              	.LCFI2:
  63              	 .cfi_def_cfa_register 7
  64 0006 7860     	 str r0,[r7,#4]
  65 0008 0B46     	 mov r3,r1
  66 000a FB70     	 strb r3,[r7,#3]
  54:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	/* A negative return value should be used to indicate that data
  55:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	 * was not written, but this doesn't seem to work with GCC libc.
  56:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	 */
  57:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	if (!stdio_usb_interface_enable) {
  67              	 .loc 1 57 0
  68 000c 0B4B     	 ldr r3,.L6
  69 000e 1B78     	 ldrb r3,[r3]
  70 0010 83F00103 	 eor r3,r3,#1
  71 0014 DBB2     	 uxtb r3,r3
  72 0016 002B     	 cmp r3,#0
  73 0018 01D0     	 beq .L2
  58:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 		return 0;  // -1
  74              	 .loc 1 58 0
  75 001a 0023     	 movs r3,#0
  76 001c 0AE0     	 b .L3
  77              	.L2:
  59:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	}
  60:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 
  61:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	return udi_cdc_putc(data) ? 0 : -1;
  78              	 .loc 1 61 0
  79 001e FB78     	 ldrb r3,[r7,#3]
  80 0020 1846     	 mov r0,r3
  81 0022 074B     	 ldr r3,.L6+4
  82 0024 9847     	 blx r3
  83              	.LVL0:
  84 0026 0346     	 mov r3,r0
  85 0028 002B     	 cmp r3,#0
  86 002a 01D0     	 beq .L4
  87              	 .loc 1 61 0 is_stmt 0 discriminator 1
  88 002c 0023     	 movs r3,#0
  89 002e 01E0     	 b .L3
  90              	.L4:
  91              	 .loc 1 61 0 discriminator 2
  92 0030 4FF0FF33 	 mov r3,#-1
  93              	.L3:
  62:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** }
  94              	 .loc 1 62 0 is_stmt 1
  95 0034 1846     	 mov r0,r3
  96 0036 0837     	 adds r7,r7,#8
  97              	.LCFI3:
  98              	 .cfi_def_cfa_offset 8
  99 0038 BD46     	 mov sp,r7
 100              	.LCFI4:
 101              	 .cfi_def_cfa_register 13
 102              	 
 103 003a 80BD     	 pop {r7,pc}
 104              	.L7:
 105              	 .align 2
 106              	.L6:
 107 003c 00000000 	 .word stdio_usb_interface_enable
 108 0040 00000000 	 .word udi_cdc_putc
 109              	 .cfi_endproc
 110              	.LFE126:
 112              	 .align 1
 113              	 .global stdio_usb_getchar
 114              	 .syntax unified
 115              	 .thumb
 116              	 .thumb_func
 117              	 .fpu softvfp
 119              	stdio_usb_getchar:
 120              	.LFB127:
  63:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 
  64:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** void stdio_usb_getchar (void volatile * unused, char *data)
  65:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** {
 121              	 .loc 1 65 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125 0044 80B5     	 push {r7,lr}
 126              	.LCFI5:
 127              	 .cfi_def_cfa_offset 8
 128              	 .cfi_offset 7,-8
 129              	 .cfi_offset 14,-4
 130 0046 82B0     	 sub sp,sp,#8
 131              	.LCFI6:
 132              	 .cfi_def_cfa_offset 16
 133 0048 00AF     	 add r7,sp,#0
 134              	.LCFI7:
 135              	 .cfi_def_cfa_register 7
 136 004a 7860     	 str r0,[r7,#4]
 137 004c 3960     	 str r1,[r7]
  66:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	/* A negative return value should be used to indicate that data
  67:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	 * was not read, but this doesn't seem to work with GCC libc.
  68:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	 */
  69:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	if (!stdio_usb_interface_enable) {
 138              	 .loc 1 69 0
 139 004e 0A4B     	 ldr r3,.L11
 140 0050 1B78     	 ldrb r3,[r3]
 141 0052 83F00103 	 eor r3,r3,#1
 142 0056 DBB2     	 uxtb r3,r3
 143 0058 002B     	 cmp r3,#0
 144 005a 03D0     	 beq .L9
  70:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 		*data = 0;  // -1
 145              	 .loc 1 70 0
 146 005c 3B68     	 ldr r3,[r7]
 147 005e 0022     	 movs r2,#0
 148 0060 1A70     	 strb r2,[r3]
  71:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 		return;
 149              	 .loc 1 71 0
 150 0062 05E0     	 b .L8
 151              	.L9:
  72:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	}
  73:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 
  74:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	*data = (char)udi_cdc_getc();
 152              	 .loc 1 74 0
 153 0064 054B     	 ldr r3,.L11+4
 154 0066 9847     	 blx r3
 155              	.LVL1:
 156 0068 0346     	 mov r3,r0
 157 006a DAB2     	 uxtb r2,r3
 158 006c 3B68     	 ldr r3,[r7]
 159 006e 1A70     	 strb r2,[r3]
 160              	.L8:
  75:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** }
 161              	 .loc 1 75 0
 162 0070 0837     	 adds r7,r7,#8
 163              	.LCFI8:
 164              	 .cfi_def_cfa_offset 8
 165 0072 BD46     	 mov sp,r7
 166              	.LCFI9:
 167              	 .cfi_def_cfa_register 13
 168              	 
 169 0074 80BD     	 pop {r7,pc}
 170              	.L12:
 171 0076 00BF     	 .align 2
 172              	.L11:
 173 0078 00000000 	 .word stdio_usb_interface_enable
 174 007c 00000000 	 .word udi_cdc_getc
 175              	 .cfi_endproc
 176              	.LFE127:
 178              	 .align 1
 179              	 .global stdio_usb_enable
 180              	 .syntax unified
 181              	 .thumb
 182              	 .thumb_func
 183              	 .fpu softvfp
 185              	stdio_usb_enable:
 186              	.LFB128:
  76:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 
  77:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** bool stdio_usb_enable(void)
  78:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** {
 187              	 .loc 1 78 0
 188              	 .cfi_startproc
 189              	 
 190              	 
 191              	 
 192 0080 80B4     	 push {r7}
 193              	.LCFI10:
 194              	 .cfi_def_cfa_offset 4
 195              	 .cfi_offset 7,-4
 196 0082 00AF     	 add r7,sp,#0
 197              	.LCFI11:
 198              	 .cfi_def_cfa_register 7
  79:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	stdio_usb_interface_enable = true;
 199              	 .loc 1 79 0
 200 0084 034B     	 ldr r3,.L15
 201 0086 0122     	 movs r2,#1
 202 0088 1A70     	 strb r2,[r3]
  80:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	return true;
 203              	 .loc 1 80 0
 204 008a 0123     	 movs r3,#1
  81:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** }
 205              	 .loc 1 81 0
 206 008c 1846     	 mov r0,r3
 207 008e BD46     	 mov sp,r7
 208              	.LCFI12:
 209              	 .cfi_def_cfa_register 13
 210              	 
 211 0090 80BC     	 pop {r7}
 212              	.LCFI13:
 213              	 .cfi_restore 7
 214              	 .cfi_def_cfa_offset 0
 215 0092 7047     	 bx lr
 216              	.L16:
 217              	 .align 2
 218              	.L15:
 219 0094 00000000 	 .word stdio_usb_interface_enable
 220              	 .cfi_endproc
 221              	.LFE128:
 223              	 .align 1
 224              	 .global stdio_usb_disable
 225              	 .syntax unified
 226              	 .thumb
 227              	 .thumb_func
 228              	 .fpu softvfp
 230              	stdio_usb_disable:
 231              	.LFB129:
  82:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 
  83:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** void stdio_usb_disable(void)
  84:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** {
 232              	 .loc 1 84 0
 233              	 .cfi_startproc
 234              	 
 235              	 
 236              	 
 237 0098 80B4     	 push {r7}
 238              	.LCFI14:
 239              	 .cfi_def_cfa_offset 4
 240              	 .cfi_offset 7,-4
 241 009a 00AF     	 add r7,sp,#0
 242              	.LCFI15:
 243              	 .cfi_def_cfa_register 7
  85:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	stdio_usb_interface_enable = false;
 244              	 .loc 1 85 0
 245 009c 034B     	 ldr r3,.L18
 246 009e 0022     	 movs r2,#0
 247 00a0 1A70     	 strb r2,[r3]
  86:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** }
 248              	 .loc 1 86 0
 249 00a2 00BF     	 nop
 250 00a4 BD46     	 mov sp,r7
 251              	.LCFI16:
 252              	 .cfi_def_cfa_register 13
 253              	 
 254 00a6 80BC     	 pop {r7}
 255              	.LCFI17:
 256              	 .cfi_restore 7
 257              	 .cfi_def_cfa_offset 0
 258 00a8 7047     	 bx lr
 259              	.L19:
 260 00aa 00BF     	 .align 2
 261              	.L18:
 262 00ac 00000000 	 .word stdio_usb_interface_enable
 263              	 .cfi_endproc
 264              	.LFE129:
 266              	 .align 1
 267              	 .global stdio_usb_init
 268              	 .syntax unified
 269              	 .thumb
 270              	 .thumb_func
 271              	 .fpu softvfp
 273              	stdio_usb_init:
 274              	.LFB130:
  87:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 
  88:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** void stdio_usb_init(void)
  89:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** {
 275              	 .loc 1 89 0
 276              	 .cfi_startproc
 277              	 
 278              	 
 279 00b0 80B5     	 push {r7,lr}
 280              	.LCFI18:
 281              	 .cfi_def_cfa_offset 8
 282              	 .cfi_offset 7,-8
 283              	 .cfi_offset 14,-4
 284 00b2 00AF     	 add r7,sp,#0
 285              	.LCFI19:
 286              	 .cfi_def_cfa_register 7
  90:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	stdio_base = NULL;
 287              	 .loc 1 90 0
 288 00b4 0D4B     	 ldr r3,.L21
 289 00b6 0022     	 movs r2,#0
 290 00b8 1A60     	 str r2,[r3]
  91:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	ptr_put = stdio_usb_putchar;
 291              	 .loc 1 91 0
 292 00ba 0D4B     	 ldr r3,.L21+4
 293 00bc 0D4A     	 ldr r2,.L21+8
 294 00be 1A60     	 str r2,[r3]
  92:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	ptr_get = stdio_usb_getchar;
 295              	 .loc 1 92 0
 296 00c0 0D4B     	 ldr r3,.L21+12
 297 00c2 0E4A     	 ldr r2,.L21+16
 298 00c4 1A60     	 str r2,[r3]
  93:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 
  94:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	/*
  95:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	 * Start and attach USB CDC device interface for devices with
  96:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	 * integrated USB interfaces.  Assume the VBUS is present if
  97:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	 * VBUS monitoring is not available.
  98:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	 */
  99:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	udc_start ();
 299              	 .loc 1 99 0
 300 00c6 0E4B     	 ldr r3,.L21+20
 301 00c8 9847     	 blx r3
 302              	.LVL2:
 100:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 
 101:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** #if defined(__GNUC__)
 102:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** # if XMEGA
 103:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	// For AVR GCC libc print redirection uses fdevopen.
 104:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
 105:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** # endif
 106:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** # if UC3 || SAM
 107:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	// For AVR32 and SAM GCC
 108:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	// Specify that stdout and stdin should not be buffered.
 109:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	setbuf(stdout, NULL);
 303              	 .loc 1 109 0
 304 00ca 0E4B     	 ldr r3,.L21+24
 305 00cc 1B68     	 ldr r3,[r3]
 306 00ce 9B68     	 ldr r3,[r3,#8]
 307 00d0 0021     	 movs r1,#0
 308 00d2 1846     	 mov r0,r3
 309 00d4 0C4B     	 ldr r3,.L21+28
 310 00d6 9847     	 blx r3
 311              	.LVL3:
 110:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	setbuf(stdin, NULL);
 312              	 .loc 1 110 0
 313 00d8 0A4B     	 ldr r3,.L21+24
 314 00da 1B68     	 ldr r3,[r3]
 315 00dc 5B68     	 ldr r3,[r3,#4]
 316 00de 0021     	 movs r1,#0
 317 00e0 1846     	 mov r0,r3
 318 00e2 094B     	 ldr r3,.L21+28
 319 00e4 9847     	 blx r3
 320              	.LVL4:
 111:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	// Note: Already the case in IAR's Normal DLIB default configuration
 112:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	// and AVR GCC library:
 113:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	// - printf() emits one character at a time.
 114:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** 	// - getchar() requests only 1 byte to exit.
 115:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** # endif
 116:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** #endif
 117:../../../platform/common/utils/stdio/stdio_usb/stdio_usb.c **** }
 321              	 .loc 1 117 0
 322 00e6 00BF     	 nop
 323 00e8 80BD     	 pop {r7,pc}
 324              	.L22:
 325 00ea 00BF     	 .align 2
 326              	.L21:
 327 00ec 00000000 	 .word stdio_base
 328 00f0 00000000 	 .word ptr_put
 329 00f4 00000000 	 .word stdio_usb_putchar
 330 00f8 00000000 	 .word ptr_get
 331 00fc 00000000 	 .word stdio_usb_getchar
 332 0100 00000000 	 .word udc_start
 333 0104 00000000 	 .word _impure_ptr
 334 0108 00000000 	 .word setbuf
 335              	 .cfi_endproc
 336              	.LFE130:
 338              	.Letext0:
 339              	 .file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 340              	 .file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 341              	 .file 4 "../../../platform/thirdparty/CMSIS/include/core_cm4.h"
 342              	 .file 5 "../../../platform/sam/utils/cmsis/sam4l/source/templates/system_sam4l.h"
 343              	 .file 6 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 344              	 .file 7 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 345              	 .file 8 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 346              	 .file 9 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 347              	 .file 10 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdlib.h"
 348              	 .file 11 "../../../platform/common/utils/interrupt/interrupt_sam_nvic.h"
 349              	 .file 12 "../../../platform/sam/utils/compiler.h"
 350              	 .file 13 "../../../platform/common/services/usb/usb_protocol.h"
 351              	 .file 14 "../../../platform/common/services/usb/udc/udi.h"
 352              	 .file 15 "../../../platform/common/services/usb/udc/udc_desc.h"
 353              	 .file 16 "../../../platform/common/services/usb/udc/udd.h"
 354              	 .file 17 "../../../platform/common/services/usb/class/cdc/device/udi_cdc.h"
 355              	 .file 18 "../../../platform/common/utils/stdio/stdio_usb/stdio_usb.h"
 356              	 .file 19 "../../../platform/common/services/usb/udc/udc.h"
 357              	 .file 20 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdio.h"
 358              	 .file 21 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stdio_usb.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
                            *COM*:00000001 n
    {standard input}:28     .bss.tTS:00000000 $d
    {standard input}:31     .bss.tTS:00000000 tTS
    {standard input}:36     .bss.stdio_usb_interface_enable:00000000 stdio_usb_interface_enable
    {standard input}:37     .bss.stdio_usb_interface_enable:00000000 $d
    {standard input}:39     .text:00000000 $t
    {standard input}:46     .text:00000000 stdio_usb_putchar
    {standard input}:107    .text:0000003c $d
    {standard input}:112    .text:00000044 $t
    {standard input}:119    .text:00000044 stdio_usb_getchar
    {standard input}:173    .text:00000078 $d
    {standard input}:178    .text:00000080 $t
    {standard input}:185    .text:00000080 stdio_usb_enable
    {standard input}:219    .text:00000094 $d
    {standard input}:223    .text:00000098 $t
    {standard input}:230    .text:00000098 stdio_usb_disable
    {standard input}:262    .text:000000ac $d
    {standard input}:266    .text:000000b0 $t
    {standard input}:273    .text:000000b0 stdio_usb_init
    {standard input}:327    .text:000000ec $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
udi_cdc_putc
udi_cdc_getc
stdio_base
ptr_put
ptr_get
udc_start
_impure_ptr
setbuf
