   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "flashcalw.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .comm n,1,1
  27              	 .section .bss.tTS,"aw",%nobits
  28              	 .align 2
  31              	tTS:
  32 0000 00000000 	 .space 4
  33              	 .text
  34              	 .align 1
  35              	 .global flashcalw_get_flash_size
  36              	 .syntax unified
  37              	 .thumb
  38              	 .thumb_func
  39              	 .fpu softvfp
  41              	flashcalw_get_flash_size:
  42              	.LFB181:
  43              	 .file 1 "../../../platform/sam/drivers/flashcalw/flashcalw.c"
   1:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
   2:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \file
   3:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
   4:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief FlashCALW driver for SAM4L.
   5:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
   6:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * Copyright (c) 2012-2013 Atmel Corporation. All rights reserved.
   7:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
   8:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \asf_license_start
   9:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  10:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \page License
  11:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  12:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  15:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  18:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *    and/or other materials provided with the distribution.
  21:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  22:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *    from this software without specific prior written permission.
  24:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  25:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *    Atmel microcontroller product.
  27:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  28:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  40:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \asf_license_stop
  41:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  42:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
  43:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
  44:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #include "flashcalw.h"
  45:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #include "sysclk.h"
  46:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
  47:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /// @cond 0
  48:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**INDENT-OFF**/
  49:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #ifdef __cplusplus
  50:../../../platform/sam/drivers/flashcalw/flashcalw.c **** extern "C" {
  51:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #endif
  52:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**INDENT-ON**/
  53:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /// @endcond
  54:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
  55:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
  56:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \defgroup group_sam_drivers_flashcalw FLASHCALW - FLASH Controller Double-Word
  57:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  58:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * See \ref sam_flashcalw_quickstart.
  59:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  60:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * FLASHCALW interfaces a flash block with the 32-bit internal HSB bus.
  61:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  62:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \{
  63:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
  64:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
  65:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name Flash Properties
  66:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
  67:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
  68:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
  69:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the size of the whole flash array.
  70:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  71:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The size of the whole flash array in Bytes.
  72:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
  73:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_flash_size(void)
  74:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
  44              	 .loc 1 74 0
  45              	 .cfi_startproc
  46              	 
  47              	 
  48 0000 80B5     	 push {r7,lr}
  49              	.LCFI0:
  50              	 .cfi_def_cfa_offset 8
  51              	 .cfi_offset 7,-8
  52              	 .cfi_offset 14,-4
  53 0002 88B0     	 sub sp,sp,#32
  54              	.LCFI1:
  55              	 .cfi_def_cfa_offset 40
  56 0004 00AF     	 add r7,sp,#0
  57              	.LCFI2:
  58              	 .cfi_def_cfa_register 7
  75:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	const uint16_t flash_size[(FLASHCALW_FPR_FSZ_Msk >>
  59              	 .loc 1 75 0
  60 0006 3B46     	 mov r3,r7
  61 0008 2022     	 movs r2,#32
  62 000a 0021     	 movs r1,#0
  63 000c 1846     	 mov r0,r3
  64 000e 1A4B     	 ldr r3,.L3
  65 0010 9847     	 blx r3
  66              	.LVL0:
  67 0012 0423     	 movs r3,#4
  68 0014 3B80     	 strh r3,[r7]
  69 0016 0823     	 movs r3,#8
  70 0018 7B80     	 strh r3,[r7,#2]
  71 001a 1023     	 movs r3,#16
  72 001c BB80     	 strh r3,[r7,#4]
  73 001e 2023     	 movs r3,#32
  74 0020 FB80     	 strh r3,[r7,#6]
  75 0022 3023     	 movs r3,#48
  76 0024 3B81     	 strh r3,[r7,#8]
  77 0026 4023     	 movs r3,#64
  78 0028 7B81     	 strh r3,[r7,#10]
  79 002a 6023     	 movs r3,#96
  80 002c BB81     	 strh r3,[r7,#12]
  81 002e 8023     	 movs r3,#128
  82 0030 FB81     	 strh r3,[r7,#14]
  83 0032 C023     	 movs r3,#192
  84 0034 3B82     	 strh r3,[r7,#16]
  85 0036 4FF48073 	 mov r3,#256
  86 003a 7B82     	 strh r3,[r7,#18]
  87 003c 4FF4C073 	 mov r3,#384
  88 0040 BB82     	 strh r3,[r7,#20]
  89 0042 4FF40073 	 mov r3,#512
  90 0046 FB82     	 strh r3,[r7,#22]
  91 0048 4FF44073 	 mov r3,#768
  92 004c 3B83     	 strh r3,[r7,#24]
  93 004e 4FF48063 	 mov r3,#1024
  94 0052 7B83     	 strh r3,[r7,#26]
  95 0054 4FF40063 	 mov r3,#2048
  96 0058 BB83     	 strh r3,[r7,#28]
  76:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	FLASHCALW_FPR_FSZ_Pos) + 1] = {
  77:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		4,
  78:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		8,
  79:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		16,
  80:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		32,
  81:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		48,
  82:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		64,
  83:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		96,
  84:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		128,
  85:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		192,
  86:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		256,
  87:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		384,
  88:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		512,
  89:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		768,
  90:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		1024,
  91:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		2048,
  92:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	};
  93:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((uint32_t)flash_size[(HFLASHC->FLASHCALW_FPR &
  97              	 .loc 1 93 0
  98 005a 084B     	 ldr r3,.L3+4
  99 005c DB68     	 ldr r3,[r3,#12]
  94:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	       FLASHCALW_FPR_FSZ_Msk) >> FLASHCALW_FPR_FSZ_Pos] << 10);
 100              	 .loc 1 94 0
 101 005e 03F00F03 	 and r3,r3,#15
  93:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	       FLASHCALW_FPR_FSZ_Msk) >> FLASHCALW_FPR_FSZ_Pos] << 10);
 102              	 .loc 1 93 0
 103 0062 5B00     	 lsls r3,r3,#1
 104 0064 07F12002 	 add r2,r7,#32
 105 0068 1344     	 add r3,r3,r2
 106 006a 33F8203C 	 ldrh r3,[r3,#-32]
 107              	 .loc 1 94 0
 108 006e 9B02     	 lsls r3,r3,#10
  95:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 109              	 .loc 1 95 0
 110 0070 1846     	 mov r0,r3
 111 0072 2037     	 adds r7,r7,#32
 112              	.LCFI3:
 113              	 .cfi_def_cfa_offset 8
 114 0074 BD46     	 mov sp,r7
 115              	.LCFI4:
 116              	 .cfi_def_cfa_register 13
 117              	 
 118 0076 80BD     	 pop {r7,pc}
 119              	.L4:
 120              	 .align 2
 121              	.L3:
 122 0078 00000000 	 .word memset
 123 007c 00000A40 	 .word 1074397184
 124              	 .cfi_endproc
 125              	.LFE181:
 127              	 .align 1
 128              	 .global flashcalw_get_page_count
 129              	 .syntax unified
 130              	 .thumb
 131              	 .thumb_func
 132              	 .fpu softvfp
 134              	flashcalw_get_page_count:
 135              	.LFB182:
  96:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
  97:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the total number of pages in the flash array.
  98:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  99:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The total number of pages in the flash array.
 100:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 101:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_page_count(void)
 102:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 136              	 .loc 1 102 0
 137              	 .cfi_startproc
 138              	 
 139              	 
 140 0080 80B5     	 push {r7,lr}
 141              	.LCFI5:
 142              	 .cfi_def_cfa_offset 8
 143              	 .cfi_offset 7,-8
 144              	 .cfi_offset 14,-4
 145 0082 00AF     	 add r7,sp,#0
 146              	.LCFI6:
 147              	 .cfi_def_cfa_register 7
 103:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_get_flash_size() / FLASH_PAGE_SIZE;
 148              	 .loc 1 103 0
 149 0084 FFF7FEFF 	 bl flashcalw_get_flash_size
 150 0088 0346     	 mov r3,r0
 151 008a 5B0A     	 lsrs r3,r3,#9
 104:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 152              	 .loc 1 104 0
 153 008c 1846     	 mov r0,r3
 154 008e 80BD     	 pop {r7,pc}
 155              	 .cfi_endproc
 156              	.LFE182:
 158              	 .align 1
 159              	 .global flashcalw_get_page_count_per_region
 160              	 .syntax unified
 161              	 .thumb
 162              	 .thumb_func
 163              	 .fpu softvfp
 165              	flashcalw_get_page_count_per_region:
 166              	.LFB183:
 105:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 106:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the number of pages in each flash region.
 107:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 108:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The number of pages in each flash region.
 109:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 110:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_page_count_per_region(void)
 111:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 167              	 .loc 1 111 0
 168              	 .cfi_startproc
 169              	 
 170              	 
 171 0090 80B5     	 push {r7,lr}
 172              	.LCFI7:
 173              	 .cfi_def_cfa_offset 8
 174              	 .cfi_offset 7,-8
 175              	 .cfi_offset 14,-4
 176 0092 00AF     	 add r7,sp,#0
 177              	.LCFI8:
 178              	 .cfi_def_cfa_register 7
 112:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_get_page_count() / FLASH_NB_OF_REGIONS;
 179              	 .loc 1 112 0
 180 0094 FFF7FEFF 	 bl flashcalw_get_page_count
 181 0098 0346     	 mov r3,r0
 182 009a 1B09     	 lsrs r3,r3,#4
 113:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 183              	 .loc 1 113 0
 184 009c 1846     	 mov r0,r3
 185 009e 80BD     	 pop {r7,pc}
 186              	 .cfi_endproc
 187              	.LFE183:
 189              	 .align 1
 190              	 .global flashcalw_get_page_region
 191              	 .syntax unified
 192              	 .thumb
 193              	 .thumb_func
 194              	 .fpu softvfp
 196              	flashcalw_get_page_region:
 197              	.LFB184:
 114:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 115:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the region number of a page.
 116:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 117:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param page_number The page number:
 118:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg \c 0 to <tt>(flashcalw_get_page_count() - 1)</tt>: a page number
 119:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * within the flash array;
 120:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg <tt>< 0</tt>: the current page number.
 121:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 122:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The region number of the specified page.
 123:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 124:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_page_region(int32_t page_number)
 125:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 198              	 .loc 1 125 0
 199              	 .cfi_startproc
 200              	 
 201              	 
 202 00a0 90B5     	 push {r4,r7,lr}
 203              	.LCFI9:
 204              	 .cfi_def_cfa_offset 12
 205              	 .cfi_offset 4,-12
 206              	 .cfi_offset 7,-8
 207              	 .cfi_offset 14,-4
 208 00a2 83B0     	 sub sp,sp,#12
 209              	.LCFI10:
 210              	 .cfi_def_cfa_offset 24
 211 00a4 00AF     	 add r7,sp,#0
 212              	.LCFI11:
 213              	 .cfi_def_cfa_register 7
 214 00a6 7860     	 str r0,[r7,#4]
 126:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((page_number >= 0) ? page_number
 127:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			: (int32_t)flashcalw_get_page_number())
 215              	 .loc 1 127 0
 216 00a8 7B68     	 ldr r3,[r7,#4]
 217 00aa 002B     	 cmp r3,#0
 218 00ac 03DA     	 bge .L10
 219              	 .loc 1 127 0 is_stmt 0 discriminator 1
 220 00ae FFF7FEFF 	 bl flashcalw_get_page_number
 221 00b2 0446     	 mov r4,r0
 222 00b4 00E0     	 b .L11
 223              	.L10:
 224              	 .loc 1 127 0 discriminator 2
 225 00b6 7C68     	 ldr r4,[r7,#4]
 226              	.L11:
 128:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/ flashcalw_get_page_count_per_region();
 227              	 .loc 1 128 0 is_stmt 1
 228 00b8 FFF7FEFF 	 bl flashcalw_get_page_count_per_region
 229 00bc 0346     	 mov r3,r0
 230 00be B4FBF3F3 	 udiv r3,r4,r3
 129:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 231              	 .loc 1 129 0
 232 00c2 1846     	 mov r0,r3
 233 00c4 0C37     	 adds r7,r7,#12
 234              	.LCFI12:
 235              	 .cfi_def_cfa_offset 12
 236 00c6 BD46     	 mov sp,r7
 237              	.LCFI13:
 238              	 .cfi_def_cfa_register 13
 239              	 
 240 00c8 90BD     	 pop {r4,r7,pc}
 241              	 .cfi_endproc
 242              	.LFE184:
 244              	 .align 1
 245              	 .global flashcalw_get_region_first_page_number
 246              	 .syntax unified
 247              	 .thumb
 248              	 .thumb_func
 249              	 .fpu softvfp
 251              	flashcalw_get_region_first_page_number:
 252              	.LFB185:
 130:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 131:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the number of the first page of a region.
 132:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 133:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param region The region number: \c 0 to <tt>(FLASHCALW_REGIONS - 1)</tt>.
 134:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 135:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The number of the first page of the specified region.
 136:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 137:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_region_first_page_number(uint32_t region)
 138:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 253              	 .loc 1 138 0
 254              	 .cfi_startproc
 255              	 
 256              	 
 257 00ca 80B5     	 push {r7,lr}
 258              	.LCFI14:
 259              	 .cfi_def_cfa_offset 8
 260              	 .cfi_offset 7,-8
 261              	 .cfi_offset 14,-4
 262 00cc 82B0     	 sub sp,sp,#8
 263              	.LCFI15:
 264              	 .cfi_def_cfa_offset 16
 265 00ce 00AF     	 add r7,sp,#0
 266              	.LCFI16:
 267              	 .cfi_def_cfa_register 7
 268 00d0 7860     	 str r0,[r7,#4]
 139:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return region * flashcalw_get_page_count_per_region();
 269              	 .loc 1 139 0
 270 00d2 FFF7FEFF 	 bl flashcalw_get_page_count_per_region
 271 00d6 0246     	 mov r2,r0
 272 00d8 7B68     	 ldr r3,[r7,#4]
 273 00da 03FB02F3 	 mul r3,r3,r2
 140:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 274              	 .loc 1 140 0
 275 00de 1846     	 mov r0,r3
 276 00e0 0837     	 adds r7,r7,#8
 277              	.LCFI17:
 278              	 .cfi_def_cfa_offset 8
 279 00e2 BD46     	 mov sp,r7
 280              	.LCFI18:
 281              	 .cfi_def_cfa_register 13
 282              	 
 283 00e4 80BD     	 pop {r7,pc}
 284              	 .cfi_endproc
 285              	.LFE185:
 287              	 .align 1
 288              	 .global flashcalw_get_wait_state
 289              	 .syntax unified
 290              	 .thumb
 291              	 .thumb_func
 292              	 .fpu softvfp
 294              	flashcalw_get_wait_state:
 295              	.LFB186:
 141:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 142:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @}
 143:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 144:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name FLASHC Control
 145:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 146:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
 147:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 148:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the number of wait states of flash read accesses.
 149:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 150:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The number of wait states of flash read accesses.
 151:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 152:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_wait_state(void)
 153:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 296              	 .loc 1 153 0
 297              	 .cfi_startproc
 298              	 
 299              	 
 300              	 
 301 00e6 80B4     	 push {r7}
 302              	.LCFI19:
 303              	 .cfi_def_cfa_offset 4
 304              	 .cfi_offset 7,-4
 305 00e8 00AF     	 add r7,sp,#0
 306              	.LCFI20:
 307              	 .cfi_def_cfa_register 7
 154:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (HFLASHC->FLASHCALW_FCR & FLASHCALW_FCR_FWS ? 1 : 0);
 308              	 .loc 1 154 0
 309 00ea 064B     	 ldr r3,.L17
 310 00ec 1B68     	 ldr r3,[r3]
 311 00ee 03F04003 	 and r3,r3,#64
 312 00f2 002B     	 cmp r3,#0
 313 00f4 14BF     	 ite ne
 314 00f6 0123     	 movne r3,#1
 315 00f8 0023     	 moveq r3,#0
 316 00fa DBB2     	 uxtb r3,r3
 155:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 317              	 .loc 1 155 0
 318 00fc 1846     	 mov r0,r3
 319 00fe BD46     	 mov sp,r7
 320              	.LCFI21:
 321              	 .cfi_def_cfa_register 13
 322              	 
 323 0100 80BC     	 pop {r7}
 324              	.LCFI22:
 325              	 .cfi_restore 7
 326              	 .cfi_def_cfa_offset 0
 327 0102 7047     	 bx lr
 328              	.L18:
 329              	 .align 2
 330              	.L17:
 331 0104 00000A40 	 .word 1074397184
 332              	 .cfi_endproc
 333              	.LFE186:
 335              	 .align 1
 336              	 .global flashcalw_set_wait_state
 337              	 .syntax unified
 338              	 .thumb
 339              	 .thumb_func
 340              	 .fpu softvfp
 342              	flashcalw_set_wait_state:
 343              	.LFB187:
 156:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 157:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Sets the number of wait states of flash read accesses.
 158:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 159:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param wait_state The number of wait states of flash read accesses: \c 0 to
 160:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *                   \c 1.
 161:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 162:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_set_wait_state(uint32_t wait_state)
 163:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 344              	 .loc 1 163 0
 345              	 .cfi_startproc
 346              	 
 347              	 
 348              	 
 349 0108 80B4     	 push {r7}
 350              	.LCFI23:
 351              	 .cfi_def_cfa_offset 4
 352              	 .cfi_offset 7,-4
 353 010a 83B0     	 sub sp,sp,#12
 354              	.LCFI24:
 355              	 .cfi_def_cfa_offset 16
 356 010c 00AF     	 add r7,sp,#0
 357              	.LCFI25:
 358              	 .cfi_def_cfa_register 7
 359 010e 7860     	 str r0,[r7,#4]
 164:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HFLASHC->FLASHCALW_FCR = (HFLASHC->FLASHCALW_FCR & ~FLASHCALW_FCR_FWS)
 360              	 .loc 1 164 0
 361 0110 0849     	 ldr r1,.L22
 362 0112 084B     	 ldr r3,.L22
 363 0114 1B68     	 ldr r3,[r3]
 364 0116 23F04002 	 bic r2,r3,#64
 165:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			| (wait_state ? FLASHCALW_FCR_FWS_1 :
 365              	 .loc 1 165 0
 366 011a 7B68     	 ldr r3,[r7,#4]
 367 011c 002B     	 cmp r3,#0
 368 011e 01D0     	 beq .L20
 369              	 .loc 1 165 0 is_stmt 0 discriminator 1
 370 0120 4023     	 movs r3,#64
 371 0122 00E0     	 b .L21
 372              	.L20:
 373              	 .loc 1 165 0 discriminator 2
 374 0124 0023     	 movs r3,#0
 375              	.L21:
 376              	 .loc 1 165 0 discriminator 4
 377 0126 1343     	 orrs r3,r3,r2
 164:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HFLASHC->FLASHCALW_FCR = (HFLASHC->FLASHCALW_FCR & ~FLASHCALW_FCR_FWS)
 378              	 .loc 1 164 0 is_stmt 1 discriminator 4
 379 0128 0B60     	 str r3,[r1]
 166:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			FLASHCALW_FCR_FWS_0);
 167:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 380              	 .loc 1 167 0 discriminator 4
 381 012a 00BF     	 nop
 382 012c 0C37     	 adds r7,r7,#12
 383              	.LCFI26:
 384              	 .cfi_def_cfa_offset 4
 385 012e BD46     	 mov sp,r7
 386              	.LCFI27:
 387              	 .cfi_def_cfa_register 13
 388              	 
 389 0130 80BC     	 pop {r7}
 390              	.LCFI28:
 391              	 .cfi_restore 7
 392              	 .cfi_def_cfa_offset 0
 393 0132 7047     	 bx lr
 394              	.L23:
 395              	 .align 2
 396              	.L22:
 397 0134 00000A40 	 .word 1074397184
 398              	 .cfi_endproc
 399              	.LFE187:
 401              	 .align 1
 402              	 .global flashcalw_set_flash_waitstate_and_readmode
 403              	 .syntax unified
 404              	 .thumb
 405              	 .thumb_func
 406              	 .fpu softvfp
 408              	flashcalw_set_flash_waitstate_and_readmode:
 409              	.LFB188:
 168:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 169:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #define FLASH_FWS_0_MAX_FREQ           CHIP_FREQ_FWS_0
 170:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #define FLASH_FWS_1_MAX_FREQ           CHIP_FREQ_FWS_1
 171:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #define FLASH_HSEN_FWS_0_MAX_FREQ      CHIP_FREQ_FLASH_HSEN_FWS_0
 172:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #define FLASH_HSEN_FWS_1_MAX_FREQ      CHIP_FREQ_FLASH_HSEN_FWS_1
 173:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 174:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Depending on the CPU frequency, on the Power Scaling mode and on the
 175:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * Fast Wakeup mode, set the wait states of flash read accesses and enable or
 176:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * disable the High speed read mode.
 177:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 178:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param cpu_f_hz The CPU frequency
 179:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param ps_value Power Scaling mode value (0, 1)
 180:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param is_fwu_enabled (boolean), Is fast wakeup mode enabled or not
 181:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 182:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_set_flash_waitstate_and_readmode(uint32_t cpu_f_hz,
 183:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		uint32_t ps_value, bool is_fwu_enabled)
 184:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 410              	 .loc 1 184 0
 411              	 .cfi_startproc
 412              	 
 413              	 
 414 0138 80B5     	 push {r7,lr}
 415              	.LCFI29:
 416              	 .cfi_def_cfa_offset 8
 417              	 .cfi_offset 7,-8
 418              	 .cfi_offset 14,-4
 419 013a 84B0     	 sub sp,sp,#16
 420              	.LCFI30:
 421              	 .cfi_def_cfa_offset 24
 422 013c 00AF     	 add r7,sp,#0
 423              	.LCFI31:
 424              	 .cfi_def_cfa_register 7
 425 013e F860     	 str r0,[r7,#12]
 426 0140 B960     	 str r1,[r7,#8]
 427 0142 1346     	 mov r3,r2
 428 0144 FB71     	 strb r3,[r7,#7]
 185:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #ifdef CONFIG_FLASH_READ_MODE_HIGH_SPEED_ENABLE
 186:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	UNUSED(ps_value);
 187:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	UNUSED(is_fwu_enabled);
 188:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 189:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (cpu_f_hz > FLASH_FREQ_PS2_FWS_0_MAX_FREQ) { /* > 24MHz */
 190:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Set a wait-state. */
 191:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_set_wait_state(1);
 192:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	} else {
 193:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* No wait-state. */
 194:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_set_wait_state(0);
 195:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 196:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 197:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Enable the high-speed read mode. */
 198:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_HSEN, -1);
 199:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #else
 200:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (ps_value == 0) {
 429              	 .loc 1 200 0
 430 0146 BB68     	 ldr r3,[r7,#8]
 431 0148 002B     	 cmp r3,#0
 432 014a 32D1     	 bne .L25
 201:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (cpu_f_hz > FLASH_FREQ_PS0_FWS_0_MAX_FREQ) {
 433              	 .loc 1 201 0
 434 014c FB68     	 ldr r3,[r7,#12]
 435 014e 234A     	 ldr r2,.L35
 436 0150 9342     	 cmp r3,r2
 437 0152 15D9     	 bls .L26
 202:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			// > 18MHz
 203:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			if (cpu_f_hz <= FLASH_FREQ_PS0_FWS_1_MAX_FREQ) {
 438              	 .loc 1 203 0
 439 0154 FB68     	 ldr r3,[r7,#12]
 440 0156 224A     	 ldr r2,.L35+4
 441 0158 9342     	 cmp r3,r2
 442 015a 08D8     	 bhi .L27
 204:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				// <= 36MHz
 205:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* Set a wait-state, disable the high-speed read
 206:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * mode. */
 207:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_set_wait_state(1);
 443              	 .loc 1 207 0
 444 015c 0120     	 movs r0,#1
 445 015e FFF7FEFF 	 bl flashcalw_set_wait_state
 208:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_issue_command(
 446              	 .loc 1 208 0
 447 0162 4FF0FF31 	 mov r1,#-1
 448 0166 1120     	 movs r0,#17
 449 0168 FFF7FEFF 	 bl flashcalw_issue_command
 209:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						FLASHCALW_FCMD_CMD_HSDIS, -1);
 210:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			} else {
 211:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				// > 36 MHz
 212:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* Set a wait-state, enable the high-speed read
 213:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				mode. */
 214:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_set_wait_state(1);
 215:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_issue_command(FLASHCALW_FCMD_CMD_HSEN,
 216:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						-1);
 217:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
 218:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		} else { // <= 18MHz
 219:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			if((is_fwu_enabled == true) &&
 220:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				(cpu_f_hz <= FLASH_FREQ_PS1_FWS_1_FWU_MAX_FREQ))
 221:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			{
 222:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				// <= 12MHz
 223:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* Set a wait-state, disable the high-speed read
 224:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				mode. */
 225:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_set_wait_state(1);
 226:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_issue_command(
 227:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						FLASHCALW_FCMD_CMD_HSDIS, -1);
 228:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			} else {
 229:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* No wait-state, disable the high-speed read
 230:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				mode */
 231:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_set_wait_state(0);
 232:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_issue_command(
 233:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					FLASHCALW_FCMD_CMD_HSDIS, -1);
 234:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
 235:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
 236:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	} else { /* ps_value == 1 */
 237:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (cpu_f_hz > FLASH_FREQ_PS1_FWS_0_MAX_FREQ) { /* > 8MHz */
 238:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Set a wait-state. */
 239:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			flashcalw_set_wait_state(1);
 240:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		} else {
 241:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* No wait-state. */
 242:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			flashcalw_set_wait_state(0);
 243:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
 244:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 245:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Disable the high-speed read mode. */
 246:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_issue_command(FLASHCALW_FCMD_CMD_HSDIS, -1);
 247:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 248:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #endif
 249:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 450              	 .loc 1 249 0
 451 016c 31E0     	 b .L34
 452              	.L27:
 214:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_issue_command(FLASHCALW_FCMD_CMD_HSEN,
 453              	 .loc 1 214 0
 454 016e 0120     	 movs r0,#1
 455 0170 FFF7FEFF 	 bl flashcalw_set_wait_state
 215:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						-1);
 456              	 .loc 1 215 0
 457 0174 4FF0FF31 	 mov r1,#-1
 458 0178 1020     	 movs r0,#16
 459 017a FFF7FEFF 	 bl flashcalw_issue_command
 460              	 .loc 1 249 0
 461 017e 28E0     	 b .L34
 462              	.L26:
 219:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				(cpu_f_hz <= FLASH_FREQ_PS1_FWS_1_FWU_MAX_FREQ))
 463              	 .loc 1 219 0
 464 0180 FB79     	 ldrb r3,[r7,#7]
 465 0182 002B     	 cmp r3,#0
 466 0184 0CD0     	 beq .L30
 219:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				(cpu_f_hz <= FLASH_FREQ_PS1_FWS_1_FWU_MAX_FREQ))
 467              	 .loc 1 219 0 is_stmt 0 discriminator 1
 468 0186 FB68     	 ldr r3,[r7,#12]
 469 0188 164A     	 ldr r2,.L35+8
 470 018a 9342     	 cmp r3,r2
 471 018c 08D8     	 bhi .L30
 225:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_issue_command(
 472              	 .loc 1 225 0 is_stmt 1
 473 018e 0120     	 movs r0,#1
 474 0190 FFF7FEFF 	 bl flashcalw_set_wait_state
 226:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						FLASHCALW_FCMD_CMD_HSDIS, -1);
 475              	 .loc 1 226 0
 476 0194 4FF0FF31 	 mov r1,#-1
 477 0198 1120     	 movs r0,#17
 478 019a FFF7FEFF 	 bl flashcalw_issue_command
 479              	 .loc 1 249 0
 480 019e 18E0     	 b .L34
 481              	.L30:
 231:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_issue_command(
 482              	 .loc 1 231 0
 483 01a0 0020     	 movs r0,#0
 484 01a2 FFF7FEFF 	 bl flashcalw_set_wait_state
 232:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					FLASHCALW_FCMD_CMD_HSDIS, -1);
 485              	 .loc 1 232 0
 486 01a6 4FF0FF31 	 mov r1,#-1
 487 01aa 1120     	 movs r0,#17
 488 01ac FFF7FEFF 	 bl flashcalw_issue_command
 489              	 .loc 1 249 0
 490 01b0 0FE0     	 b .L34
 491              	.L25:
 237:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Set a wait-state. */
 492              	 .loc 1 237 0
 493 01b2 FB68     	 ldr r3,[r7,#12]
 494 01b4 0C4A     	 ldr r2,.L35+12
 495 01b6 9342     	 cmp r3,r2
 496 01b8 03D9     	 bls .L32
 239:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		} else {
 497              	 .loc 1 239 0
 498 01ba 0120     	 movs r0,#1
 499 01bc FFF7FEFF 	 bl flashcalw_set_wait_state
 500 01c0 02E0     	 b .L33
 501              	.L32:
 242:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
 502              	 .loc 1 242 0
 503 01c2 0020     	 movs r0,#0
 504 01c4 FFF7FEFF 	 bl flashcalw_set_wait_state
 505              	.L33:
 246:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 506              	 .loc 1 246 0
 507 01c8 4FF0FF31 	 mov r1,#-1
 508 01cc 1120     	 movs r0,#17
 509 01ce FFF7FEFF 	 bl flashcalw_issue_command
 510              	.L34:
 511              	 .loc 1 249 0
 512 01d2 00BF     	 nop
 513 01d4 1037     	 adds r7,r7,#16
 514              	.LCFI32:
 515              	 .cfi_def_cfa_offset 8
 516 01d6 BD46     	 mov sp,r7
 517              	.LCFI33:
 518              	 .cfi_def_cfa_register 13
 519              	 
 520 01d8 80BD     	 pop {r7,pc}
 521              	.L36:
 522 01da 00BF     	 .align 2
 523              	.L35:
 524 01dc 80A81201 	 .word 18000000
 525 01e0 00512502 	 .word 36000000
 526 01e4 001BB700 	 .word 12000000
 527 01e8 00127A00 	 .word 8000000
 528              	 .cfi_endproc
 529              	.LFE188:
 531              	 .align 1
 532              	 .global flashcalw_is_ready_int_enabled
 533              	 .syntax unified
 534              	 .thumb
 535              	 .thumb_func
 536              	 .fpu softvfp
 538              	flashcalw_is_ready_int_enabled:
 539              	.LFB189:
 250:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 251:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether the Flash Ready interrupt is enabled.
 252:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 253:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the Flash Ready interrupt is enabled.
 254:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 255:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_ready_int_enabled(void)
 256:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 540              	 .loc 1 256 0
 541              	 .cfi_startproc
 542              	 
 543              	 
 544              	 
 545 01ec 80B4     	 push {r7}
 546              	.LCFI34:
 547              	 .cfi_def_cfa_offset 4
 548              	 .cfi_offset 7,-4
 549 01ee 00AF     	 add r7,sp,#0
 550              	.LCFI35:
 551              	 .cfi_def_cfa_register 7
 257:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FCR & FLASHCALW_FCR_FRDY) != 0);
 552              	 .loc 1 257 0
 553 01f0 064B     	 ldr r3,.L39
 554 01f2 1B68     	 ldr r3,[r3]
 555 01f4 03F00103 	 and r3,r3,#1
 556 01f8 002B     	 cmp r3,#0
 557 01fa 14BF     	 ite ne
 558 01fc 0123     	 movne r3,#1
 559 01fe 0023     	 moveq r3,#0
 560 0200 DBB2     	 uxtb r3,r3
 258:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 561              	 .loc 1 258 0
 562 0202 1846     	 mov r0,r3
 563 0204 BD46     	 mov sp,r7
 564              	.LCFI36:
 565              	 .cfi_def_cfa_register 13
 566              	 
 567 0206 80BC     	 pop {r7}
 568              	.LCFI37:
 569              	 .cfi_restore 7
 570              	 .cfi_def_cfa_offset 0
 571 0208 7047     	 bx lr
 572              	.L40:
 573 020a 00BF     	 .align 2
 574              	.L39:
 575 020c 00000A40 	 .word 1074397184
 576              	 .cfi_endproc
 577              	.LFE189:
 579              	 .align 1
 580              	 .global flashcalw_enable_ready_int
 581              	 .syntax unified
 582              	 .thumb
 583              	 .thumb_func
 584              	 .fpu softvfp
 586              	flashcalw_enable_ready_int:
 587              	.LFB190:
 259:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 260:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Enables or disables the Flash Ready interrupt.
 261:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 262:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param enable Whether to enable the Flash Ready interrupt: \c true or
 263:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *               \c false.
 264:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 265:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_enable_ready_int(bool enable)
 266:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 588              	 .loc 1 266 0
 589              	 .cfi_startproc
 590              	 
 591              	 
 592              	 
 593 0210 80B4     	 push {r7}
 594              	.LCFI38:
 595              	 .cfi_def_cfa_offset 4
 596              	 .cfi_offset 7,-4
 597 0212 83B0     	 sub sp,sp,#12
 598              	.LCFI39:
 599              	 .cfi_def_cfa_offset 16
 600 0214 00AF     	 add r7,sp,#0
 601              	.LCFI40:
 602              	 .cfi_def_cfa_register 7
 603 0216 0346     	 mov r3,r0
 604 0218 FB71     	 strb r3,[r7,#7]
 267:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HFLASHC->FLASHCALW_FCR
 268:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		&= ((enable &
 605              	 .loc 1 268 0
 606 021a 0649     	 ldr r1,.L42
 607 021c 054B     	 ldr r3,.L42
 608 021e 1A68     	 ldr r2,[r3]
 609 0220 FB79     	 ldrb r3,[r7,#7]
 269:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			FLASHCALW_FCR_FRDY) | (~FLASHCALW_FCR_FRDY));
 610              	 .loc 1 269 0
 611 0222 63F00103 	 orn r3,r3,#1
 268:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			FLASHCALW_FCR_FRDY) | (~FLASHCALW_FCR_FRDY));
 612              	 .loc 1 268 0
 613 0226 1340     	 ands r3,r3,r2
 614 0228 0B60     	 str r3,[r1]
 270:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 615              	 .loc 1 270 0
 616 022a 00BF     	 nop
 617 022c 0C37     	 adds r7,r7,#12
 618              	.LCFI41:
 619              	 .cfi_def_cfa_offset 4
 620 022e BD46     	 mov sp,r7
 621              	.LCFI42:
 622              	 .cfi_def_cfa_register 13
 623              	 
 624 0230 80BC     	 pop {r7}
 625              	.LCFI43:
 626              	 .cfi_restore 7
 627              	 .cfi_def_cfa_offset 0
 628 0232 7047     	 bx lr
 629              	.L43:
 630              	 .align 2
 631              	.L42:
 632 0234 00000A40 	 .word 1074397184
 633              	 .cfi_endproc
 634              	.LFE190:
 636              	 .align 1
 637              	 .global flashcalw_is_lock_error_int_enabled
 638              	 .syntax unified
 639              	 .thumb
 640              	 .thumb_func
 641              	 .fpu softvfp
 643              	flashcalw_is_lock_error_int_enabled:
 644              	.LFB191:
 271:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 272:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether the Lock Error interrupt is enabled.
 273:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 274:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the Lock Error interrupt is enabled.
 275:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 276:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_lock_error_int_enabled(void)
 277:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 645              	 .loc 1 277 0
 646              	 .cfi_startproc
 647              	 
 648              	 
 649              	 
 650 0238 80B4     	 push {r7}
 651              	.LCFI44:
 652              	 .cfi_def_cfa_offset 4
 653              	 .cfi_offset 7,-4
 654 023a 00AF     	 add r7,sp,#0
 655              	.LCFI45:
 656              	 .cfi_def_cfa_register 7
 278:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FCR & FLASHCALW_FCR_LOCKE) != 0);
 657              	 .loc 1 278 0
 658 023c 064B     	 ldr r3,.L46
 659 023e 1B68     	 ldr r3,[r3]
 660 0240 03F00403 	 and r3,r3,#4
 661 0244 002B     	 cmp r3,#0
 662 0246 14BF     	 ite ne
 663 0248 0123     	 movne r3,#1
 664 024a 0023     	 moveq r3,#0
 665 024c DBB2     	 uxtb r3,r3
 279:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 666              	 .loc 1 279 0
 667 024e 1846     	 mov r0,r3
 668 0250 BD46     	 mov sp,r7
 669              	.LCFI46:
 670              	 .cfi_def_cfa_register 13
 671              	 
 672 0252 80BC     	 pop {r7}
 673              	.LCFI47:
 674              	 .cfi_restore 7
 675              	 .cfi_def_cfa_offset 0
 676 0254 7047     	 bx lr
 677              	.L47:
 678 0256 00BF     	 .align 2
 679              	.L46:
 680 0258 00000A40 	 .word 1074397184
 681              	 .cfi_endproc
 682              	.LFE191:
 684              	 .align 1
 685              	 .global flashcalw_enable_lock_error_int
 686              	 .syntax unified
 687              	 .thumb
 688              	 .thumb_func
 689              	 .fpu softvfp
 691              	flashcalw_enable_lock_error_int:
 692              	.LFB192:
 280:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 281:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Enables or disables the Lock Error interrupt.
 282:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 283:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param enable Whether to enable the Lock Error interrupt: \c true or
 284:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *               \c false.
 285:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 286:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_enable_lock_error_int(bool enable)
 287:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 693              	 .loc 1 287 0
 694              	 .cfi_startproc
 695              	 
 696              	 
 697              	 
 698 025c 80B4     	 push {r7}
 699              	.LCFI48:
 700              	 .cfi_def_cfa_offset 4
 701              	 .cfi_offset 7,-4
 702 025e 83B0     	 sub sp,sp,#12
 703              	.LCFI49:
 704              	 .cfi_def_cfa_offset 16
 705 0260 00AF     	 add r7,sp,#0
 706              	.LCFI50:
 707              	 .cfi_def_cfa_register 7
 708 0262 0346     	 mov r3,r0
 709 0264 FB71     	 strb r3,[r7,#7]
 288:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HFLASHC->FLASHCALW_FCR
 289:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		&= ((enable &
 710              	 .loc 1 289 0
 711 0266 0649     	 ldr r1,.L49
 712 0268 054B     	 ldr r3,.L49
 713 026a 1A68     	 ldr r2,[r3]
 290:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			FLASHCALW_FCR_LOCKE) | (~FLASHCALW_FCR_LOCKE));
 714              	 .loc 1 290 0
 715 026c FB79     	 ldrb r3,[r7,#7]
 716 026e 63F00403 	 orn r3,r3,#4
 289:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			FLASHCALW_FCR_LOCKE) | (~FLASHCALW_FCR_LOCKE));
 717              	 .loc 1 289 0
 718 0272 1340     	 ands r3,r3,r2
 719 0274 0B60     	 str r3,[r1]
 291:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 720              	 .loc 1 291 0
 721 0276 00BF     	 nop
 722 0278 0C37     	 adds r7,r7,#12
 723              	.LCFI51:
 724              	 .cfi_def_cfa_offset 4
 725 027a BD46     	 mov sp,r7
 726              	.LCFI52:
 727              	 .cfi_def_cfa_register 13
 728              	 
 729 027c 80BC     	 pop {r7}
 730              	.LCFI53:
 731              	 .cfi_restore 7
 732              	 .cfi_def_cfa_offset 0
 733 027e 7047     	 bx lr
 734              	.L50:
 735              	 .align 2
 736              	.L49:
 737 0280 00000A40 	 .word 1074397184
 738              	 .cfi_endproc
 739              	.LFE192:
 741              	 .align 1
 742              	 .global flashcalw_is_prog_error_int_enabled
 743              	 .syntax unified
 744              	 .thumb
 745              	 .thumb_func
 746              	 .fpu softvfp
 748              	flashcalw_is_prog_error_int_enabled:
 749              	.LFB193:
 292:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 293:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether the Programming Error interrupt is enabled.
 294:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 295:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the Programming Error interrupt is enabled.
 296:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 297:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_prog_error_int_enabled(void)
 298:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 750              	 .loc 1 298 0
 751              	 .cfi_startproc
 752              	 
 753              	 
 754              	 
 755 0284 80B4     	 push {r7}
 756              	.LCFI54:
 757              	 .cfi_def_cfa_offset 4
 758              	 .cfi_offset 7,-4
 759 0286 00AF     	 add r7,sp,#0
 760              	.LCFI55:
 761              	 .cfi_def_cfa_register 7
 299:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FCR & FLASHCALW_FCR_PROGE) != 0);
 762              	 .loc 1 299 0
 763 0288 064B     	 ldr r3,.L53
 764 028a 1B68     	 ldr r3,[r3]
 765 028c 03F00803 	 and r3,r3,#8
 766 0290 002B     	 cmp r3,#0
 767 0292 14BF     	 ite ne
 768 0294 0123     	 movne r3,#1
 769 0296 0023     	 moveq r3,#0
 770 0298 DBB2     	 uxtb r3,r3
 300:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 771              	 .loc 1 300 0
 772 029a 1846     	 mov r0,r3
 773 029c BD46     	 mov sp,r7
 774              	.LCFI56:
 775              	 .cfi_def_cfa_register 13
 776              	 
 777 029e 80BC     	 pop {r7}
 778              	.LCFI57:
 779              	 .cfi_restore 7
 780              	 .cfi_def_cfa_offset 0
 781 02a0 7047     	 bx lr
 782              	.L54:
 783 02a2 00BF     	 .align 2
 784              	.L53:
 785 02a4 00000A40 	 .word 1074397184
 786              	 .cfi_endproc
 787              	.LFE193:
 789              	 .align 1
 790              	 .global flashcalw_enable_prog_error_int
 791              	 .syntax unified
 792              	 .thumb
 793              	 .thumb_func
 794              	 .fpu softvfp
 796              	flashcalw_enable_prog_error_int:
 797              	.LFB194:
 301:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 302:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Enables or disables the Programming Error interrupt.
 303:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 304:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param enable Whether to enable the Programming Error interrupt: \c true or
 305:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *               \c false.
 306:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 307:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_enable_prog_error_int(bool enable)
 308:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 798              	 .loc 1 308 0
 799              	 .cfi_startproc
 800              	 
 801              	 
 802              	 
 803 02a8 80B4     	 push {r7}
 804              	.LCFI58:
 805              	 .cfi_def_cfa_offset 4
 806              	 .cfi_offset 7,-4
 807 02aa 83B0     	 sub sp,sp,#12
 808              	.LCFI59:
 809              	 .cfi_def_cfa_offset 16
 810 02ac 00AF     	 add r7,sp,#0
 811              	.LCFI60:
 812              	 .cfi_def_cfa_register 7
 813 02ae 0346     	 mov r3,r0
 814 02b0 FB71     	 strb r3,[r7,#7]
 309:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HFLASHC->FLASHCALW_FCR &= ((enable &
 815              	 .loc 1 309 0
 816 02b2 0649     	 ldr r1,.L56
 817 02b4 054B     	 ldr r3,.L56
 818 02b6 1A68     	 ldr r2,[r3]
 310:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			FLASHCALW_FCR_PROGE) | (~FLASHCALW_FCR_PROGE));
 819              	 .loc 1 310 0
 820 02b8 FB79     	 ldrb r3,[r7,#7]
 821 02ba 63F00803 	 orn r3,r3,#8
 309:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HFLASHC->FLASHCALW_FCR &= ((enable &
 822              	 .loc 1 309 0
 823 02be 1340     	 ands r3,r3,r2
 824 02c0 0B60     	 str r3,[r1]
 311:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 825              	 .loc 1 311 0
 826 02c2 00BF     	 nop
 827 02c4 0C37     	 adds r7,r7,#12
 828              	.LCFI61:
 829              	 .cfi_def_cfa_offset 4
 830 02c6 BD46     	 mov sp,r7
 831              	.LCFI62:
 832              	 .cfi_def_cfa_register 13
 833              	 
 834 02c8 80BC     	 pop {r7}
 835              	.LCFI63:
 836              	 .cfi_restore 7
 837              	 .cfi_def_cfa_offset 0
 838 02ca 7047     	 bx lr
 839              	.L57:
 840              	 .align 2
 841              	.L56:
 842 02cc 00000A40 	 .word 1074397184
 843              	 .cfi_endproc
 844              	.LFE194:
 846              	 .align 1
 847              	 .global flashcalw_is_ready
 848              	 .syntax unified
 849              	 .thumb
 850              	 .thumb_func
 851              	 .fpu softvfp
 853              	flashcalw_is_ready:
 854              	.LFB195:
 312:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 313:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @}
 314:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 315:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name FLASHCALW Status
 316:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 317:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
 318:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 319:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether the FLASHCALW is ready to run a new command.
 320:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 321:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the FLASHCALW is ready to run a new command.
 322:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 323:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_ready(void)
 324:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 855              	 .loc 1 324 0
 856              	 .cfi_startproc
 857              	 
 858              	 
 859              	 
 860 02d0 80B4     	 push {r7}
 861              	.LCFI64:
 862              	 .cfi_def_cfa_offset 4
 863              	 .cfi_offset 7,-4
 864 02d2 00AF     	 add r7,sp,#0
 865              	.LCFI65:
 866              	 .cfi_def_cfa_register 7
 325:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FSR & FLASHCALW_FSR_FRDY) != 0);
 867              	 .loc 1 325 0
 868 02d4 064B     	 ldr r3,.L60
 869 02d6 9B68     	 ldr r3,[r3,#8]
 870 02d8 03F00103 	 and r3,r3,#1
 871 02dc 002B     	 cmp r3,#0
 872 02de 14BF     	 ite ne
 873 02e0 0123     	 movne r3,#1
 874 02e2 0023     	 moveq r3,#0
 875 02e4 DBB2     	 uxtb r3,r3
 326:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 876              	 .loc 1 326 0
 877 02e6 1846     	 mov r0,r3
 878 02e8 BD46     	 mov sp,r7
 879              	.LCFI66:
 880              	 .cfi_def_cfa_register 13
 881              	 
 882 02ea 80BC     	 pop {r7}
 883              	.LCFI67:
 884              	 .cfi_restore 7
 885              	 .cfi_def_cfa_offset 0
 886 02ec 7047     	 bx lr
 887              	.L61:
 888 02ee 00BF     	 .align 2
 889              	.L60:
 890 02f0 00000A40 	 .word 1074397184
 891              	 .cfi_endproc
 892              	.LFE195:
 894              	 .align 1
 895              	 .global flashcalw_default_wait_until_ready
 896              	 .syntax unified
 897              	 .thumb
 898              	 .thumb_func
 899              	 .fpu softvfp
 901              	flashcalw_default_wait_until_ready:
 902              	.LFB196:
 327:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 328:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Waits actively until the FLASHCALW is ready to run a new command.
 329:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 330:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * This is the default function assigned to \ref flashcalw_wait_until_ready.
 331:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 332:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_default_wait_until_ready(void)
 333:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 903              	 .loc 1 333 0
 904              	 .cfi_startproc
 905              	 
 906              	 
 907 02f4 80B5     	 push {r7,lr}
 908              	.LCFI68:
 909              	 .cfi_def_cfa_offset 8
 910              	 .cfi_offset 7,-8
 911              	 .cfi_offset 14,-4
 912 02f6 00AF     	 add r7,sp,#0
 913              	.LCFI69:
 914              	 .cfi_def_cfa_register 7
 334:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (!flashcalw_is_ready()) {
 915              	 .loc 1 334 0
 916 02f8 00BF     	 nop
 917              	.L63:
 918              	 .loc 1 334 0 is_stmt 0 discriminator 1
 919 02fa FFF7FEFF 	 bl flashcalw_is_ready
 920 02fe 0346     	 mov r3,r0
 921 0300 83F00103 	 eor r3,r3,#1
 922 0304 DBB2     	 uxtb r3,r3
 923 0306 002B     	 cmp r3,#0
 924 0308 F7D1     	 bne .L63
 335:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 336:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 925              	 .loc 1 336 0 is_stmt 1
 926 030a 00BF     	 nop
 927 030c 80BD     	 pop {r7,pc}
 928              	 .cfi_endproc
 929              	.LFE196:
 931              	 .global flashcalw_wait_until_ready
 932              	 .section .data.flashcalw_wait_until_ready,"aw",%progbits
 933              	 .align 2
 936              	flashcalw_wait_until_ready:
 937 0000 00000000 	 .word flashcalw_default_wait_until_ready
 938              	 .text
 939              	 .align 1
 940              	 .syntax unified
 941              	 .thumb
 942              	 .thumb_func
 943              	 .fpu softvfp
 945              	flashcalw_get_error_status:
 946              	.LFB197:
 337:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 338:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
 339:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Pointer to the function used by the driver when it needs to wait until
 340:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * the FLASHCALW is ready to run a new command.
 341:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 342:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * The default function is \ref flashcalw_default_wait_until_ready.
 343:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * The user may change this pointer to use another implementation.
 344:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 345:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void(*volatile flashcalw_wait_until_ready) (void)
 346:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	= flashcalw_default_wait_until_ready;
 347:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 348:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
 349:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \internal
 350:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Gets the error status of the FLASHCALW.
 351:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 352:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The error status of the FLASHCALW built up from
 353:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         \c FLASHCALW_FSR_LOCKE and \c FLASHCALW_FSR_PROGE.
 354:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 355:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning This hardware error status is cleared by all functions reading the
 356:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          Flash Status Register (FSR). This function is therefore not part of
 357:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          the driver's API which instead presents \ref flashcalw_is_lock_error
 358:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          and \ref flashcalw_is_programming_error.
 359:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 360:../../../platform/sam/drivers/flashcalw/flashcalw.c **** static uint32_t flashcalw_get_error_status(void)
 361:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 947              	 .loc 1 361 0
 948              	 .cfi_startproc
 949              	 
 950              	 
 951              	 
 952 030e 80B4     	 push {r7}
 953              	.LCFI70:
 954              	 .cfi_def_cfa_offset 4
 955              	 .cfi_offset 7,-4
 956 0310 00AF     	 add r7,sp,#0
 957              	.LCFI71:
 958              	 .cfi_def_cfa_register 7
 362:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return HFLASHC->FLASHCALW_FSR &
 959              	 .loc 1 362 0
 960 0312 044B     	 ldr r3,.L66
 961 0314 9B68     	 ldr r3,[r3,#8]
 962 0316 03F00C03 	 and r3,r3,#12
 363:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	       (FLASHCALW_FSR_LOCKE | FLASHCALW_FSR_PROGE);
 364:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 963              	 .loc 1 364 0
 964 031a 1846     	 mov r0,r3
 965 031c BD46     	 mov sp,r7
 966              	.LCFI72:
 967              	 .cfi_def_cfa_register 13
 968              	 
 969 031e 80BC     	 pop {r7}
 970              	.LCFI73:
 971              	 .cfi_restore 7
 972              	 .cfi_def_cfa_offset 0
 973 0320 7047     	 bx lr
 974              	.L67:
 975 0322 00BF     	 .align 2
 976              	.L66:
 977 0324 00000A40 	 .word 1074397184
 978              	 .cfi_endproc
 979              	.LFE197:
 981              	 .section .bss.flashcalw_error_status,"aw",%nobits
 982              	 .align 2
 985              	flashcalw_error_status:
 986 0000 00000000 	 .space 4
 987              	 .text
 988              	 .align 1
 989              	 .global flashcalw_is_lock_error
 990              	 .syntax unified
 991              	 .thumb
 992              	 .thumb_func
 993              	 .fpu softvfp
 995              	flashcalw_is_lock_error:
 996              	.LFB198:
 365:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 366:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
 367:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \internal
 368:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Sticky error status of the FLASHCALW.
 369:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 370:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * This variable is updated by functions that issue FLASHCALW commands. It
 371:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * contains the cumulated FLASHCALW error status of all the FLASHCALW commands
 372:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * issued by a function.
 373:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 374:../../../platform/sam/drivers/flashcalw/flashcalw.c **** static uint32_t flashcalw_error_status = 0;
 375:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 376:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether a Lock Error has occurred during the last function
 377:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         called that issued one or more FLASHCALW commands.
 378:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 379:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether a Lock Error has occurred during the last function called
 380:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         that issued one or more FLASHCALW commands.
 381:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 382:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_lock_error(void)
 383:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 997              	 .loc 1 383 0
 998              	 .cfi_startproc
 999              	 
 1000              	 
 1001              	 
 1002 0328 80B4     	 push {r7}
 1003              	.LCFI74:
 1004              	 .cfi_def_cfa_offset 4
 1005              	 .cfi_offset 7,-4
 1006 032a 00AF     	 add r7,sp,#0
 1007              	.LCFI75:
 1008              	 .cfi_def_cfa_register 7
 384:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((flashcalw_error_status & FLASHCALW_FSR_LOCKE) != 0);
 1009              	 .loc 1 384 0
 1010 032c 064B     	 ldr r3,.L70
 1011 032e 1B68     	 ldr r3,[r3]
 1012 0330 03F00403 	 and r3,r3,#4
 1013 0334 002B     	 cmp r3,#0
 1014 0336 14BF     	 ite ne
 1015 0338 0123     	 movne r3,#1
 1016 033a 0023     	 moveq r3,#0
 1017 033c DBB2     	 uxtb r3,r3
 385:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1018              	 .loc 1 385 0
 1019 033e 1846     	 mov r0,r3
 1020 0340 BD46     	 mov sp,r7
 1021              	.LCFI76:
 1022              	 .cfi_def_cfa_register 13
 1023              	 
 1024 0342 80BC     	 pop {r7}
 1025              	.LCFI77:
 1026              	 .cfi_restore 7
 1027              	 .cfi_def_cfa_offset 0
 1028 0344 7047     	 bx lr
 1029              	.L71:
 1030 0346 00BF     	 .align 2
 1031              	.L70:
 1032 0348 00000000 	 .word flashcalw_error_status
 1033              	 .cfi_endproc
 1034              	.LFE198:
 1036              	 .align 1
 1037              	 .global flashcalw_is_programming_error
 1038              	 .syntax unified
 1039              	 .thumb
 1040              	 .thumb_func
 1041              	 .fpu softvfp
 1043              	flashcalw_is_programming_error:
 1044              	.LFB199:
 386:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 387:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether a Programming Error has occurred during the last
 388:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         function called that issued one or more FLASHCALW commands.
 389:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 390:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether a Programming Error has occurred during the last function
 391:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         called that issued one or more FLASHCALW commands.
 392:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 393:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_programming_error(void)
 394:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1045              	 .loc 1 394 0
 1046              	 .cfi_startproc
 1047              	 
 1048              	 
 1049              	 
 1050 034c 80B4     	 push {r7}
 1051              	.LCFI78:
 1052              	 .cfi_def_cfa_offset 4
 1053              	 .cfi_offset 7,-4
 1054 034e 00AF     	 add r7,sp,#0
 1055              	.LCFI79:
 1056              	 .cfi_def_cfa_register 7
 395:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((flashcalw_error_status & FLASHCALW_FSR_PROGE) != 0);
 1057              	 .loc 1 395 0
 1058 0350 064B     	 ldr r3,.L74
 1059 0352 1B68     	 ldr r3,[r3]
 1060 0354 03F00803 	 and r3,r3,#8
 1061 0358 002B     	 cmp r3,#0
 1062 035a 14BF     	 ite ne
 1063 035c 0123     	 movne r3,#1
 1064 035e 0023     	 moveq r3,#0
 1065 0360 DBB2     	 uxtb r3,r3
 396:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1066              	 .loc 1 396 0
 1067 0362 1846     	 mov r0,r3
 1068 0364 BD46     	 mov sp,r7
 1069              	.LCFI80:
 1070              	 .cfi_def_cfa_register 13
 1071              	 
 1072 0366 80BC     	 pop {r7}
 1073              	.LCFI81:
 1074              	 .cfi_restore 7
 1075              	 .cfi_def_cfa_offset 0
 1076 0368 7047     	 bx lr
 1077              	.L75:
 1078 036a 00BF     	 .align 2
 1079              	.L74:
 1080 036c 00000000 	 .word flashcalw_error_status
 1081              	 .cfi_endproc
 1082              	.LFE199:
 1084              	 .align 1
 1085              	 .global flashcalw_get_command
 1086              	 .syntax unified
 1087              	 .thumb
 1088              	 .thumb_func
 1089              	 .fpu softvfp
 1091              	flashcalw_get_command:
 1092              	.LFB200:
 397:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 398:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @}
 399:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 400:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name FLASHCALW Command Control
 401:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 402:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
 403:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 404:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the last issued FLASHCALW command.
 405:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 406:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The last issued FLASHCALW command.
 407:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 408:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_command(void)
 409:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1093              	 .loc 1 409 0
 1094              	 .cfi_startproc
 1095              	 
 1096              	 
 1097              	 
 1098 0370 80B4     	 push {r7}
 1099              	.LCFI82:
 1100              	 .cfi_def_cfa_offset 4
 1101              	 .cfi_offset 7,-4
 1102 0372 00AF     	 add r7,sp,#0
 1103              	.LCFI83:
 1104              	 .cfi_def_cfa_register 7
 410:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (HFLASHC->FLASHCALW_FCMD & FLASHCALW_FCMD_CMD_Msk);
 1105              	 .loc 1 410 0
 1106 0374 034B     	 ldr r3,.L78
 1107 0376 5B68     	 ldr r3,[r3,#4]
 1108 0378 03F03F03 	 and r3,r3,#63
 411:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1109              	 .loc 1 411 0
 1110 037c 1846     	 mov r0,r3
 1111 037e BD46     	 mov sp,r7
 1112              	.LCFI84:
 1113              	 .cfi_def_cfa_register 13
 1114              	 
 1115 0380 80BC     	 pop {r7}
 1116              	.LCFI85:
 1117              	 .cfi_restore 7
 1118              	 .cfi_def_cfa_offset 0
 1119 0382 7047     	 bx lr
 1120              	.L79:
 1121              	 .align 2
 1122              	.L78:
 1123 0384 00000A40 	 .word 1074397184
 1124              	 .cfi_endproc
 1125              	.LFE200:
 1127              	 .align 1
 1128              	 .global flashcalw_get_page_number
 1129              	 .syntax unified
 1130              	 .thumb
 1131              	 .thumb_func
 1132              	 .fpu softvfp
 1134              	flashcalw_get_page_number:
 1135              	.LFB201:
 412:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 413:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the current FLASHCALW page number.
 414:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 415:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The current FLASHCALW page number.
 416:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 417:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_page_number(void)
 418:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1136              	 .loc 1 418 0
 1137              	 .cfi_startproc
 1138              	 
 1139              	 
 1140              	 
 1141 0388 80B4     	 push {r7}
 1142              	.LCFI86:
 1143              	 .cfi_def_cfa_offset 4
 1144              	 .cfi_offset 7,-4
 1145 038a 00AF     	 add r7,sp,#0
 1146              	.LCFI87:
 1147              	 .cfi_def_cfa_register 7
 419:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FCMD & FLASHCALW_FCMD_PAGEN_Msk)
 1148              	 .loc 1 419 0
 1149 038c 034B     	 ldr r3,.L82
 1150 038e 5B68     	 ldr r3,[r3,#4]
 420:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			>> FLASHCALW_FCMD_PAGEN_Pos);
 1151              	 .loc 1 420 0
 1152 0390 1B0A     	 lsrs r3,r3,#8
 1153 0392 9BB2     	 uxth r3,r3
 421:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1154              	 .loc 1 421 0
 1155 0394 1846     	 mov r0,r3
 1156 0396 BD46     	 mov sp,r7
 1157              	.LCFI88:
 1158              	 .cfi_def_cfa_register 13
 1159              	 
 1160 0398 80BC     	 pop {r7}
 1161              	.LCFI89:
 1162              	 .cfi_restore 7
 1163              	 .cfi_def_cfa_offset 0
 1164 039a 7047     	 bx lr
 1165              	.L83:
 1166              	 .align 2
 1167              	.L82:
 1168 039c 00000A40 	 .word 1074397184
 1169              	 .cfi_endproc
 1170              	.LFE201:
 1172              	 .align 1
 1173              	 .global flashcalw_issue_command
 1174              	 .syntax unified
 1175              	 .thumb
 1176              	 .thumb_func
 1177              	 .fpu softvfp
 1179              	flashcalw_issue_command:
 1180              	.LFB202:
 422:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 423:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Issues a FLASHCALW command.
 424:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 425:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param command The command: \c FLASHCALW_FCMD_CMD_x.
 426:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param page_number The page number to apply the command to:
 427:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg \c 0 to <tt>(flashcalw_get_page_count() - 1)</tt>: a page number
 428:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        within the flash array;
 429:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg <tt>< 0</tt>: use this to apply the command to the current page number
 430:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        or if the command does not apply to any page number;
 431:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg this argument may have other meanings according to the command. See
 432:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        the FLASHCALW chapter of the MCU datasheet.
 433:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 434:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command violates the protection
 435:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          mechanism.
 436:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 437:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Programming Error is issued if the command is invalid.
 438:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 439:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 440:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 441:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 442:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_issue_command(uint32_t command, int page_number)
 443:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1181              	 .loc 1 443 0
 1182              	 .cfi_startproc
 1183              	 
 1184              	 
 1185 03a0 80B5     	 push {r7,lr}
 1186              	.LCFI90:
 1187              	 .cfi_def_cfa_offset 8
 1188              	 .cfi_offset 7,-8
 1189              	 .cfi_offset 14,-4
 1190 03a2 84B0     	 sub sp,sp,#16
 1191              	.LCFI91:
 1192              	 .cfi_def_cfa_offset 24
 1193 03a4 00AF     	 add r7,sp,#0
 1194              	.LCFI92:
 1195              	 .cfi_def_cfa_register 7
 1196 03a6 7860     	 str r0,[r7,#4]
 1197 03a8 3960     	 str r1,[r7]
 444:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t tempo;
 445:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 446:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_wait_until_ready();
 1198              	 .loc 1 446 0
 1199 03aa 174B     	 ldr r3,.L87
 1200 03ac 1B68     	 ldr r3,[r3]
 1201 03ae 9847     	 blx r3
 1202              	.LVL1:
 447:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	tempo = HFLASHC->FLASHCALW_FCMD;
 1203              	 .loc 1 447 0
 1204 03b0 164B     	 ldr r3,.L87+4
 1205 03b2 5B68     	 ldr r3,[r3,#4]
 1206 03b4 FB60     	 str r3,[r7,#12]
 448:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Clear the command bitfield. */
 449:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	tempo &= ~FLASHCALW_FCMD_CMD_Msk;
 1207              	 .loc 1 449 0
 1208 03b6 FB68     	 ldr r3,[r7,#12]
 1209 03b8 23F03F03 	 bic r3,r3,#63
 1210 03bc FB60     	 str r3,[r7,#12]
 450:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (page_number >= 0) {
 1211              	 .loc 1 450 0
 1212 03be 3B68     	 ldr r3,[r7]
 1213 03c0 002B     	 cmp r3,#0
 1214 03c2 0BDB     	 blt .L85
 451:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		tempo = (FLASHCALW_FCMD_KEY_KEY
 452:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				| FLASHCALW_FCMD_PAGEN(page_number) | command);
 1215              	 .loc 1 452 0
 1216 03c4 3B68     	 ldr r3,[r7]
 1217 03c6 1B02     	 lsls r3,r3,#8
 1218 03c8 23F07F43 	 bic r3,r3,#-16777216
 1219 03cc 23F0FF03 	 bic r3,r3,#255
 1220 03d0 7A68     	 ldr r2,[r7,#4]
 1221 03d2 1343     	 orrs r3,r3,r2
 451:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		tempo = (FLASHCALW_FCMD_KEY_KEY
 1222              	 .loc 1 451 0
 1223 03d4 43F02543 	 orr r3,r3,#-1526726656
 1224 03d8 FB60     	 str r3,[r7,#12]
 1225 03da 05E0     	 b .L86
 1226              	.L85:
 453:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	} else {
 454:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		tempo |= (FLASHCALW_FCMD_KEY_KEY | command);
 1227              	 .loc 1 454 0
 1228 03dc 7A68     	 ldr r2,[r7,#4]
 1229 03de FB68     	 ldr r3,[r7,#12]
 1230 03e0 1343     	 orrs r3,r3,r2
 1231 03e2 43F02543 	 orr r3,r3,#-1526726656
 1232 03e6 FB60     	 str r3,[r7,#12]
 1233              	.L86:
 455:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 456:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 457:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HFLASHC->FLASHCALW_FCMD = tempo;
 1234              	 .loc 1 457 0
 1235 03e8 084A     	 ldr r2,.L87+4
 1236 03ea FB68     	 ldr r3,[r7,#12]
 1237 03ec 5360     	 str r3,[r2,#4]
 458:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = flashcalw_get_error_status();
 1238              	 .loc 1 458 0
 1239 03ee FFF78EFF 	 bl flashcalw_get_error_status
 1240 03f2 0246     	 mov r2,r0
 1241 03f4 064B     	 ldr r3,.L87+8
 1242 03f6 1A60     	 str r2,[r3]
 459:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_wait_until_ready();
 1243              	 .loc 1 459 0
 1244 03f8 034B     	 ldr r3,.L87
 1245 03fa 1B68     	 ldr r3,[r3]
 1246 03fc 9847     	 blx r3
 1247              	.LVL2:
 460:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1248              	 .loc 1 460 0
 1249 03fe 00BF     	 nop
 1250 0400 1037     	 adds r7,r7,#16
 1251              	.LCFI93:
 1252              	 .cfi_def_cfa_offset 8
 1253 0402 BD46     	 mov sp,r7
 1254              	.LCFI94:
 1255              	 .cfi_def_cfa_register 13
 1256              	 
 1257 0404 80BD     	 pop {r7,pc}
 1258              	.L88:
 1259 0406 00BF     	 .align 2
 1260              	.L87:
 1261 0408 00000000 	 .word flashcalw_wait_until_ready
 1262 040c 00000A40 	 .word 1074397184
 1263 0410 00000000 	 .word flashcalw_error_status
 1264              	 .cfi_endproc
 1265              	.LFE202:
 1267              	 .align 1
 1268              	 .global flashcalw_no_operation
 1269              	 .syntax unified
 1270              	 .thumb
 1271              	 .thumb_func
 1272              	 .fpu softvfp
 1274              	flashcalw_no_operation:
 1275              	.LFB203:
 461:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 462:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @}
 463:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 464:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name FLASHCALW Global Commands
 465:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 466:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
 467:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 468:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Issues a No Operation command to the FLASHCALW.
 469:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 470:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 471:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 472:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 473:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_no_operation(void)
 474:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1276              	 .loc 1 474 0
 1277              	 .cfi_startproc
 1278              	 
 1279              	 
 1280 0414 80B5     	 push {r7,lr}
 1281              	.LCFI95:
 1282              	 .cfi_def_cfa_offset 8
 1283              	 .cfi_offset 7,-8
 1284              	 .cfi_offset 14,-4
 1285 0416 00AF     	 add r7,sp,#0
 1286              	.LCFI96:
 1287              	 .cfi_def_cfa_register 7
 475:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_NOP, -1);
 1288              	 .loc 1 475 0
 1289 0418 4FF0FF31 	 mov r1,#-1
 1290 041c 0020     	 movs r0,#0
 1291 041e FFF7FEFF 	 bl flashcalw_issue_command
 476:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1292              	 .loc 1 476 0
 1293 0422 00BF     	 nop
 1294 0424 80BD     	 pop {r7,pc}
 1295              	 .cfi_endproc
 1296              	.LFE203:
 1298              	 .align 1
 1299              	 .global flashcalw_erase_all
 1300              	 .syntax unified
 1301              	 .thumb
 1302              	 .thumb_func
 1303              	 .fpu softvfp
 1305              	flashcalw_erase_all:
 1306              	.LFB204:
 477:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 478:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Issues an Erase All command to the FLASHCALW.
 479:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 480:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * This command erases all bits in the flash array, the general-purpose fuse
 481:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * bits and the Security bit. The User page is not erased.
 482:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 483:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * This command also ensures that all volatile memories, such as register file
 484:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * and RAMs, are erased before the Security bit is erased, i.e. deactivated.
 485:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 486:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if at least one region is locked or the
 487:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          bootloader protection is active.
 488:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 489:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 490:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 491:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 492:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
 493:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 494:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_erase_all(void)
 495:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1307              	 .loc 1 495 0
 1308              	 .cfi_startproc
 1309              	 
 1310              	 
 1311 0426 80B5     	 push {r7,lr}
 1312              	.LCFI97:
 1313              	 .cfi_def_cfa_offset 8
 1314              	 .cfi_offset 7,-8
 1315              	 .cfi_offset 14,-4
 1316 0428 00AF     	 add r7,sp,#0
 1317              	.LCFI98:
 1318              	 .cfi_def_cfa_register 7
 496:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_EA, -1);
 1319              	 .loc 1 496 0
 1320 042a 4FF0FF31 	 mov r1,#-1
 1321 042e 0620     	 movs r0,#6
 1322 0430 FFF7FEFF 	 bl flashcalw_issue_command
 497:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1323              	 .loc 1 497 0
 1324 0434 00BF     	 nop
 1325 0436 80BD     	 pop {r7,pc}
 1326              	 .cfi_endproc
 1327              	.LFE204:
 1329              	 .align 1
 1330              	 .global flashcalw_is_security_bit_active
 1331              	 .syntax unified
 1332              	 .thumb
 1333              	 .thumb_func
 1334              	 .fpu softvfp
 1336              	flashcalw_is_security_bit_active:
 1337              	.LFB205:
 498:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 499:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @}
 500:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 501:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name FLASHCALW Protection Mechanisms
 502:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 503:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
 504:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 505:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether the Security bit is active.
 506:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 507:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the Security bit is active.
 508:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 509:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_security_bit_active(void)
 510:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1338              	 .loc 1 510 0
 1339              	 .cfi_startproc
 1340              	 
 1341              	 
 1342              	 
 1343 0438 80B4     	 push {r7}
 1344              	.LCFI99:
 1345              	 .cfi_def_cfa_offset 4
 1346              	 .cfi_offset 7,-4
 1347 043a 00AF     	 add r7,sp,#0
 1348              	.LCFI100:
 1349              	 .cfi_def_cfa_register 7
 511:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FSR & FLASHCALW_FSR_SECURITY) != 0);
 1350              	 .loc 1 511 0
 1351 043c 064B     	 ldr r3,.L93
 1352 043e 9B68     	 ldr r3,[r3,#8]
 1353 0440 03F01003 	 and r3,r3,#16
 1354 0444 002B     	 cmp r3,#0
 1355 0446 14BF     	 ite ne
 1356 0448 0123     	 movne r3,#1
 1357 044a 0023     	 moveq r3,#0
 1358 044c DBB2     	 uxtb r3,r3
 512:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1359              	 .loc 1 512 0
 1360 044e 1846     	 mov r0,r3
 1361 0450 BD46     	 mov sp,r7
 1362              	.LCFI101:
 1363              	 .cfi_def_cfa_register 13
 1364              	 
 1365 0452 80BC     	 pop {r7}
 1366              	.LCFI102:
 1367              	 .cfi_restore 7
 1368              	 .cfi_def_cfa_offset 0
 1369 0454 7047     	 bx lr
 1370              	.L94:
 1371 0456 00BF     	 .align 2
 1372              	.L93:
 1373 0458 00000A40 	 .word 1074397184
 1374              	 .cfi_endproc
 1375              	.LFE205:
 1377              	 .align 1
 1378              	 .global flashcalw_set_security_bit
 1379              	 .syntax unified
 1380              	 .thumb
 1381              	 .thumb_func
 1382              	 .fpu softvfp
 1384              	flashcalw_set_security_bit:
 1385              	.LFB206:
 513:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 514:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Activates the Security bit.
 515:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 516:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 517:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 518:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 519:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_set_security_bit(void)
 520:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1386              	 .loc 1 520 0
 1387              	 .cfi_startproc
 1388              	 
 1389              	 
 1390 045c 80B5     	 push {r7,lr}
 1391              	.LCFI103:
 1392              	 .cfi_def_cfa_offset 8
 1393              	 .cfi_offset 7,-8
 1394              	 .cfi_offset 14,-4
 1395 045e 00AF     	 add r7,sp,#0
 1396              	.LCFI104:
 1397              	 .cfi_def_cfa_register 7
 521:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_SSB, -1);
 1398              	 .loc 1 521 0
 1399 0460 4FF0FF31 	 mov r1,#-1
 1400 0464 0920     	 movs r0,#9
 1401 0466 FFF7FEFF 	 bl flashcalw_issue_command
 522:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1402              	 .loc 1 522 0
 1403 046a 00BF     	 nop
 1404 046c 80BD     	 pop {r7,pc}
 1405              	 .cfi_endproc
 1406              	.LFE206:
 1408              	 .align 1
 1409              	 .global flashcalw_is_page_region_locked
 1410              	 .syntax unified
 1411              	 .thumb
 1412              	 .thumb_func
 1413              	 .fpu softvfp
 1415              	flashcalw_is_page_region_locked:
 1416              	.LFB207:
 523:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 524:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether the region of a page is locked.
 525:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 526:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param page_number The page number:
 527:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg \c 0 to <tt>(flashcalw_get_page_count() - 1)</tt>: a page number
 528:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        within the flash array;
 529:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg <tt>< 0</tt>: the current page number.
 530:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 531:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the region of the specified page is locked.
 532:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 533:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_page_region_locked(uint32_t page_number)
 534:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1417              	 .loc 1 534 0
 1418              	 .cfi_startproc
 1419              	 
 1420              	 
 1421 046e 80B5     	 push {r7,lr}
 1422              	.LCFI105:
 1423              	 .cfi_def_cfa_offset 8
 1424              	 .cfi_offset 7,-8
 1425              	 .cfi_offset 14,-4
 1426 0470 82B0     	 sub sp,sp,#8
 1427              	.LCFI106:
 1428              	 .cfi_def_cfa_offset 16
 1429 0472 00AF     	 add r7,sp,#0
 1430              	.LCFI107:
 1431              	 .cfi_def_cfa_register 7
 1432 0474 7860     	 str r0,[r7,#4]
 535:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_is_region_locked(flashcalw_get_page_region(page_number));
 1433              	 .loc 1 535 0
 1434 0476 7B68     	 ldr r3,[r7,#4]
 1435 0478 1846     	 mov r0,r3
 1436 047a FFF7FEFF 	 bl flashcalw_get_page_region
 1437 047e 0346     	 mov r3,r0
 1438 0480 1846     	 mov r0,r3
 1439 0482 FFF7FEFF 	 bl flashcalw_is_region_locked
 1440 0486 0346     	 mov r3,r0
 536:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1441              	 .loc 1 536 0
 1442 0488 1846     	 mov r0,r3
 1443 048a 0837     	 adds r7,r7,#8
 1444              	.LCFI108:
 1445              	 .cfi_def_cfa_offset 8
 1446 048c BD46     	 mov sp,r7
 1447              	.LCFI109:
 1448              	 .cfi_def_cfa_register 13
 1449              	 
 1450 048e 80BD     	 pop {r7,pc}
 1451              	 .cfi_endproc
 1452              	.LFE207:
 1454              	 .align 1
 1455              	 .global flashcalw_is_region_locked
 1456              	 .syntax unified
 1457              	 .thumb
 1458              	 .thumb_func
 1459              	 .fpu softvfp
 1461              	flashcalw_is_region_locked:
 1462              	.LFB208:
 537:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 538:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether a region is locked.
 539:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 540:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param region The region number: \c 0 to <tt>(FLASHCALW_REGIONS - 1)</tt>.
 541:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 542:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the specified region is locked.
 543:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 544:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_region_locked(uint32_t region)
 545:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1463              	 .loc 1 545 0
 1464              	 .cfi_startproc
 1465              	 
 1466              	 
 1467              	 
 1468 0490 80B4     	 push {r7}
 1469              	.LCFI110:
 1470              	 .cfi_def_cfa_offset 4
 1471              	 .cfi_offset 7,-4
 1472 0492 83B0     	 sub sp,sp,#12
 1473              	.LCFI111:
 1474              	 .cfi_def_cfa_offset 16
 1475 0494 00AF     	 add r7,sp,#0
 1476              	.LCFI112:
 1477              	 .cfi_def_cfa_register 7
 1478 0496 7860     	 str r0,[r7,#4]
 546:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FSR & FLASHCALW_FSR_LOCK0
 1479              	 .loc 1 546 0
 1480 0498 094B     	 ldr r3,.L100
 1481 049a 9A68     	 ldr r2,[r3,#8]
 547:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			<< (region & (FLASHCALW_REGIONS - 1))) != 0);
 1482              	 .loc 1 547 0
 1483 049c 7B68     	 ldr r3,[r7,#4]
 1484 049e 03F00F03 	 and r3,r3,#15
 1485 04a2 4FF48031 	 mov r1,#65536
 1486 04a6 01FA03F3 	 lsl r3,r1,r3
 546:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FSR & FLASHCALW_FSR_LOCK0
 1487              	 .loc 1 546 0
 1488 04aa 1340     	 ands r3,r3,r2
 1489              	 .loc 1 547 0
 1490 04ac 002B     	 cmp r3,#0
 1491 04ae 14BF     	 ite ne
 1492 04b0 0123     	 movne r3,#1
 1493 04b2 0023     	 moveq r3,#0
 1494 04b4 DBB2     	 uxtb r3,r3
 548:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1495              	 .loc 1 548 0
 1496 04b6 1846     	 mov r0,r3
 1497 04b8 0C37     	 adds r7,r7,#12
 1498              	.LCFI113:
 1499              	 .cfi_def_cfa_offset 4
 1500 04ba BD46     	 mov sp,r7
 1501              	.LCFI114:
 1502              	 .cfi_def_cfa_register 13
 1503              	 
 1504 04bc 80BC     	 pop {r7}
 1505              	.LCFI115:
 1506              	 .cfi_restore 7
 1507              	 .cfi_def_cfa_offset 0
 1508 04be 7047     	 bx lr
 1509              	.L101:
 1510              	 .align 2
 1511              	.L100:
 1512 04c0 00000A40 	 .word 1074397184
 1513              	 .cfi_endproc
 1514              	.LFE208:
 1516              	 .align 1
 1517              	 .global flashcalw_lock_page_region
 1518              	 .syntax unified
 1519              	 .thumb
 1520              	 .thumb_func
 1521              	 .fpu softvfp
 1523              	flashcalw_lock_page_region:
 1524              	.LFB209:
 549:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 550:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Locks or unlocks the region of a page.
 551:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 552:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param page_number The page number:
 553:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg \c 0 to <tt>(flashcalw_get_page_count() - 1)</tt>: a page number
 554:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        within the flash array;
 555:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg <tt>< 0</tt>: the current page number.
 556:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param lock Whether to lock the region of the specified page: \c true or
 557:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *             \c false.
 558:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 559:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 560:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 561:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 562:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_lock_page_region(int page_number, bool lock)
 563:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1525              	 .loc 1 563 0
 1526              	 .cfi_startproc
 1527              	 
 1528              	 
 1529 04c4 80B5     	 push {r7,lr}
 1530              	.LCFI116:
 1531              	 .cfi_def_cfa_offset 8
 1532              	 .cfi_offset 7,-8
 1533              	 .cfi_offset 14,-4
 1534 04c6 82B0     	 sub sp,sp,#8
 1535              	.LCFI117:
 1536              	 .cfi_def_cfa_offset 16
 1537 04c8 00AF     	 add r7,sp,#0
 1538              	.LCFI118:
 1539              	 .cfi_def_cfa_register 7
 1540 04ca 7860     	 str r0,[r7,#4]
 1541 04cc 0B46     	 mov r3,r1
 1542 04ce FB70     	 strb r3,[r7,#3]
 564:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(
 1543              	 .loc 1 564 0
 1544 04d0 FB78     	 ldrb r3,[r7,#3]
 1545 04d2 002B     	 cmp r3,#0
 1546 04d4 01D0     	 beq .L103
 1547              	 .loc 1 564 0 is_stmt 0 discriminator 1
 1548 04d6 0423     	 movs r3,#4
 1549 04d8 00E0     	 b .L104
 1550              	.L103:
 1551              	 .loc 1 564 0 discriminator 2
 1552 04da 0523     	 movs r3,#5
 1553              	.L104:
 1554              	 .loc 1 564 0 discriminator 4
 1555 04dc 7968     	 ldr r1,[r7,#4]
 1556 04de 1846     	 mov r0,r3
 1557 04e0 FFF7FEFF 	 bl flashcalw_issue_command
 565:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			(lock) ? FLASHCALW_FCMD_CMD_LP : FLASHCALW_FCMD_CMD_UP,
 566:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			page_number);
 567:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1558              	 .loc 1 567 0 is_stmt 1 discriminator 4
 1559 04e4 00BF     	 nop
 1560 04e6 0837     	 adds r7,r7,#8
 1561              	.LCFI119:
 1562              	 .cfi_def_cfa_offset 8
 1563 04e8 BD46     	 mov sp,r7
 1564              	.LCFI120:
 1565              	 .cfi_def_cfa_register 13
 1566              	 
 1567 04ea 80BD     	 pop {r7,pc}
 1568              	 .cfi_endproc
 1569              	.LFE209:
 1571              	 .align 1
 1572              	 .global flashcalw_lock_region
 1573              	 .syntax unified
 1574              	 .thumb
 1575              	 .thumb_func
 1576              	 .fpu softvfp
 1578              	flashcalw_lock_region:
 1579              	.LFB210:
 568:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 569:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Locks or unlocks a region.
 570:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 571:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param region The region number: \c 0 to <tt>(FLASHCALW_REGIONS - 1)</tt>.
 572:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param lock Whether to lock the specified region: \c true or \c false.
 573:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 574:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 575:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 576:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 577:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_lock_region(uint32_t region, bool lock)
 578:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1580              	 .loc 1 578 0
 1581              	 .cfi_startproc
 1582              	 
 1583              	 
 1584 04ec 80B5     	 push {r7,lr}
 1585              	.LCFI121:
 1586              	 .cfi_def_cfa_offset 8
 1587              	 .cfi_offset 7,-8
 1588              	 .cfi_offset 14,-4
 1589 04ee 82B0     	 sub sp,sp,#8
 1590              	.LCFI122:
 1591              	 .cfi_def_cfa_offset 16
 1592 04f0 00AF     	 add r7,sp,#0
 1593              	.LCFI123:
 1594              	 .cfi_def_cfa_register 7
 1595 04f2 7860     	 str r0,[r7,#4]
 1596 04f4 0B46     	 mov r3,r1
 1597 04f6 FB70     	 strb r3,[r7,#3]
 579:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_lock_page_region(flashcalw_get_region_first_page_number(
 1598              	 .loc 1 579 0
 1599 04f8 7868     	 ldr r0,[r7,#4]
 1600 04fa FFF7FEFF 	 bl flashcalw_get_region_first_page_number
 1601 04fe 0346     	 mov r3,r0
 1602 0500 1A46     	 mov r2,r3
 1603 0502 FB78     	 ldrb r3,[r7,#3]
 1604 0504 1946     	 mov r1,r3
 1605 0506 1046     	 mov r0,r2
 1606 0508 FFF7FEFF 	 bl flashcalw_lock_page_region
 580:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			region), lock);
 581:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1607              	 .loc 1 581 0
 1608 050c 00BF     	 nop
 1609 050e 0837     	 adds r7,r7,#8
 1610              	.LCFI124:
 1611              	 .cfi_def_cfa_offset 8
 1612 0510 BD46     	 mov sp,r7
 1613              	.LCFI125:
 1614              	 .cfi_def_cfa_register 13
 1615              	 
 1616 0512 80BD     	 pop {r7,pc}
 1617              	 .cfi_endproc
 1618              	.LFE210:
 1620              	 .align 1
 1621              	 .global flashcalw_lock_all_regions
 1622              	 .syntax unified
 1623              	 .thumb
 1624              	 .thumb_func
 1625              	 .fpu softvfp
 1627              	flashcalw_lock_all_regions:
 1628              	.LFB211:
 582:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 583:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Locks or unlocks all regions.
 584:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 585:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param lock Whether to lock the regions: \c true or \c false.
 586:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 587:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 588:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 589:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 590:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_lock_all_regions(bool lock)
 591:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1629              	 .loc 1 591 0
 1630              	 .cfi_startproc
 1631              	 
 1632              	 
 1633 0514 80B5     	 push {r7,lr}
 1634              	.LCFI126:
 1635              	 .cfi_def_cfa_offset 8
 1636              	 .cfi_offset 7,-8
 1637              	 .cfi_offset 14,-4
 1638 0516 84B0     	 sub sp,sp,#16
 1639              	.LCFI127:
 1640              	 .cfi_def_cfa_offset 24
 1641 0518 00AF     	 add r7,sp,#0
 1642              	.LCFI128:
 1643              	 .cfi_def_cfa_register 7
 1644 051a 0346     	 mov r3,r0
 1645 051c FB71     	 strb r3,[r7,#7]
 592:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 1646              	 .loc 1 592 0
 1647 051e 0023     	 movs r3,#0
 1648 0520 FB60     	 str r3,[r7,#12]
 593:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t region = FLASHCALW_REGIONS;
 1649              	 .loc 1 593 0
 1650 0522 1023     	 movs r3,#16
 1651 0524 BB60     	 str r3,[r7,#8]
 594:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 595:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (region) {
 1652              	 .loc 1 595 0
 1653 0526 0CE0     	 b .L107
 1654              	.L108:
 596:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_lock_region(--region, lock);
 1655              	 .loc 1 596 0
 1656 0528 BB68     	 ldr r3,[r7,#8]
 1657 052a 013B     	 subs r3,r3,#1
 1658 052c BB60     	 str r3,[r7,#8]
 1659 052e FB79     	 ldrb r3,[r7,#7]
 1660 0530 1946     	 mov r1,r3
 1661 0532 B868     	 ldr r0,[r7,#8]
 1662 0534 FFF7FEFF 	 bl flashcalw_lock_region
 597:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 1663              	 .loc 1 597 0
 1664 0538 074B     	 ldr r3,.L109
 1665 053a 1B68     	 ldr r3,[r3]
 1666 053c FA68     	 ldr r2,[r7,#12]
 1667 053e 1343     	 orrs r3,r3,r2
 1668 0540 FB60     	 str r3,[r7,#12]
 1669              	.L107:
 595:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_lock_region(--region, lock);
 1670              	 .loc 1 595 0
 1671 0542 BB68     	 ldr r3,[r7,#8]
 1672 0544 002B     	 cmp r3,#0
 1673 0546 EFD1     	 bne .L108
 598:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 599:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 1674              	 .loc 1 599 0
 1675 0548 034A     	 ldr r2,.L109
 1676 054a FB68     	 ldr r3,[r7,#12]
 1677 054c 1360     	 str r3,[r2]
 600:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1678              	 .loc 1 600 0
 1679 054e 00BF     	 nop
 1680 0550 1037     	 adds r7,r7,#16
 1681              	.LCFI129:
 1682              	 .cfi_def_cfa_offset 8
 1683 0552 BD46     	 mov sp,r7
 1684              	.LCFI130:
 1685              	 .cfi_def_cfa_register 13
 1686              	 
 1687 0554 80BD     	 pop {r7,pc}
 1688              	.L110:
 1689 0556 00BF     	 .align 2
 1690              	.L109:
 1691 0558 00000000 	 .word flashcalw_error_status
 1692              	 .cfi_endproc
 1693              	.LFE211:
 1695              	 .align 1
 1696              	 .global flashcalw_read_gp_fuse_bit
 1697              	 .syntax unified
 1698              	 .thumb
 1699              	 .thumb_func
 1700              	 .fpu softvfp
 1702              	flashcalw_read_gp_fuse_bit:
 1703              	.LFB212:
 601:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 602:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @}
 603:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 604:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name Access to General-Purpose Fuses
 605:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 606:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
 607:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 608:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Reads a general-purpose fuse bit.
 609:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 610:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_bit The general-purpose fuse bit: \c 0 to \c 63.
 611:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 612:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of the specified general-purpose fuse bit.
 613:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 614:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 615:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 616:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 617:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 618:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_read_gp_fuse_bit(uint32_t gp_fuse_bit)
 619:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1704              	 .loc 1 619 0
 1705              	 .cfi_startproc
 1706              	 
 1707              	 
 1708 055c F0B5     	 push {r4,r5,r6,r7,lr}
 1709              	.LCFI131:
 1710              	 .cfi_def_cfa_offset 20
 1711              	 .cfi_offset 4,-20
 1712              	 .cfi_offset 5,-16
 1713              	 .cfi_offset 6,-12
 1714              	 .cfi_offset 7,-8
 1715              	 .cfi_offset 14,-4
 1716 055e 83B0     	 sub sp,sp,#12
 1717              	.LCFI132:
 1718              	 .cfi_def_cfa_offset 32
 1719 0560 00AF     	 add r7,sp,#0
 1720              	.LCFI133:
 1721              	 .cfi_def_cfa_register 7
 1722 0562 7860     	 str r0,[r7,#4]
 620:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((flashcalw_read_all_gp_fuses() & (uint64_t)1 << (gp_fuse_bit & 0x3F))
 1723              	 .loc 1 620 0
 1724 0564 FFF7FEFF 	 bl flashcalw_read_all_gp_fuses
 1725 0568 0246     	 mov r2,r0
 1726 056a 0B46     	 mov r3,r1
 1727 056c 7968     	 ldr r1,[r7,#4]
 1728 056e 01F03F01 	 and r1,r1,#63
 621:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		!= 0);
 1729              	 .loc 1 621 0
 1730 0572 C1F12006 	 rsb r6,r1,#32
 1731 0576 A1F12000 	 sub r0,r1,#32
 1732 057a 22FA01F4 	 lsr r4,r2,r1
 1733 057e 03FA06F6 	 lsl r6,r3,r6
 1734 0582 3443     	 orrs r4,r4,r6
 1735 0584 23FA00F0 	 lsr r0,r3,r0
 1736 0588 0443     	 orrs r4,r4,r0
 1737 058a 23FA01F5 	 lsr r5,r3,r1
 1738 058e 4FF00102 	 mov r2,#1
 1739 0592 4FF00003 	 mov r3,#0
 1740 0596 04EA0200 	 and r0,r4,r2
 1741 059a 05EA0301 	 and r1,r5,r3
 1742 059e 0346     	 mov r3,r0
 1743 05a0 0C46     	 mov r4,r1
 1744 05a2 2343     	 orrs r3,r3,r4
 1745 05a4 002B     	 cmp r3,#0
 1746 05a6 14BF     	 ite ne
 1747 05a8 0123     	 movne r3,#1
 1748 05aa 0023     	 moveq r3,#0
 1749 05ac DBB2     	 uxtb r3,r3
 622:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1750              	 .loc 1 622 0
 1751 05ae 1846     	 mov r0,r3
 1752 05b0 0C37     	 adds r7,r7,#12
 1753              	.LCFI134:
 1754              	 .cfi_def_cfa_offset 20
 1755 05b2 BD46     	 mov sp,r7
 1756              	.LCFI135:
 1757              	 .cfi_def_cfa_register 13
 1758              	 
 1759 05b4 F0BD     	 pop {r4,r5,r6,r7,pc}
 1760              	 .cfi_endproc
 1761              	.LFE212:
 1763              	 .align 1
 1764              	 .global flashcalw_read_gp_fuse_bitfield
 1765              	 .syntax unified
 1766              	 .thumb
 1767              	 .thumb_func
 1768              	 .fpu softvfp
 1770              	flashcalw_read_gp_fuse_bitfield:
 1771              	.LFB213:
 623:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 624:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Reads a general-purpose fuse bit-field.
 625:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 626:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param pos The bit-position of the general-purpose fuse bit-field: \c 0 to
 627:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *            \c 63.
 628:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param width The bit-width of the general-purpose fuse bit-field: \c 0 to
 629:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *              \c 64.
 630:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 631:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of the specified general-purpose fuse bit-field.
 632:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 633:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 634:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 635:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 636:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 637:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint64_t flashcalw_read_gp_fuse_bitfield(uint32_t pos, uint32_t width)
 638:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1772              	 .loc 1 638 0
 1773              	 .cfi_startproc
 1774              	 
 1775              	 
 1776 05b6 2DE9F043 	 push {r4,r5,r6,r7,r8,r9,lr}
 1777              	.LCFI136:
 1778              	 .cfi_def_cfa_offset 28
 1779              	 .cfi_offset 4,-28
 1780              	 .cfi_offset 5,-24
 1781              	 .cfi_offset 6,-20
 1782              	 .cfi_offset 7,-16
 1783              	 .cfi_offset 8,-12
 1784              	 .cfi_offset 9,-8
 1785              	 .cfi_offset 14,-4
 1786 05ba 83B0     	 sub sp,sp,#12
 1787              	.LCFI137:
 1788              	 .cfi_def_cfa_offset 40
 1789 05bc 00AF     	 add r7,sp,#0
 1790              	.LCFI138:
 1791              	 .cfi_def_cfa_register 7
 1792 05be 7860     	 str r0,[r7,#4]
 1793 05c0 3960     	 str r1,[r7]
 639:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_read_all_gp_fuses() >> (pos & 0x3F)
 1794              	 .loc 1 639 0
 1795 05c2 FFF7FEFF 	 bl flashcalw_read_all_gp_fuses
 1796 05c6 0246     	 mov r2,r0
 1797 05c8 0B46     	 mov r3,r1
 1798 05ca 7968     	 ldr r1,[r7,#4]
 1799 05cc 01F03F01 	 and r1,r1,#63
 1800 05d0 C1F12006 	 rsb r6,r1,#32
 1801 05d4 A1F12000 	 sub r0,r1,#32
 1802 05d8 22FA01F4 	 lsr r4,r2,r1
 1803 05dc 03FA06F6 	 lsl r6,r3,r6
 1804 05e0 3443     	 orrs r4,r4,r6
 1805 05e2 23FA00F0 	 lsr r0,r3,r0
 1806 05e6 0443     	 orrs r4,r4,r0
 1807 05e8 23FA01F5 	 lsr r5,r3,r1
 640:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		& (((uint64_t)1 << Min(width, 64)) - 1);
 1808              	 .loc 1 640 0
 1809 05ec 3B68     	 ldr r3,[r7]
 1810 05ee 402B     	 cmp r3,#64
 1811 05f0 28BF     	 it cs
 1812 05f2 4023     	 movcs r3,#64
 1813 05f4 1946     	 mov r1,r3
 1814 05f6 4FF00102 	 mov r2,#1
 1815 05fa 4FF00003 	 mov r3,#0
 1816 05fe A1F12006 	 sub r6,r1,#32
 1817 0602 C1F12000 	 rsb r0,r1,#32
 1818 0606 03FA01F9 	 lsl r9,r3,r1
 1819 060a 02FA06F6 	 lsl r6,r2,r6
 1820 060e 49EA0609 	 orr r9,r9,r6
 1821 0612 22FA00F0 	 lsr r0,r2,r0
 1822 0616 49EA0009 	 orr r9,r9,r0
 1823 061a 02FA01F8 	 lsl r8,r2,r1
 1824 061e 18F1FF32 	 adds r2,r8,#-1
 1825 0622 49F1FF33 	 adc r3,r9,#-1
 1826 0626 04EA0200 	 and r0,r4,r2
 1827 062a 05EA0301 	 and r1,r5,r3
 1828 062e 0346     	 mov r3,r0
 1829 0630 0C46     	 mov r4,r1
 641:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1830              	 .loc 1 641 0
 1831 0632 1846     	 mov r0,r3
 1832 0634 2146     	 mov r1,r4
 1833 0636 0C37     	 adds r7,r7,#12
 1834              	.LCFI139:
 1835              	 .cfi_def_cfa_offset 28
 1836 0638 BD46     	 mov sp,r7
 1837              	.LCFI140:
 1838              	 .cfi_def_cfa_register 13
 1839              	 
 1840 063a BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 1841              	 .cfi_endproc
 1842              	.LFE213:
 1844              	 .align 1
 1845              	 .global flashcalw_read_gp_fuse_byte
 1846              	 .syntax unified
 1847              	 .thumb
 1848              	 .thumb_func
 1849              	 .fpu softvfp
 1851              	flashcalw_read_gp_fuse_byte:
 1852              	.LFB214:
 642:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 643:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Reads a general-purpose fuse byte.
 644:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 645:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_byte The general-purpose fuse byte: \c 0 to \c 7.
 646:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 647:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of the specified general-purpose fuse byte.
 648:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 649:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 650:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 651:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 652:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 653:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint8_t flashcalw_read_gp_fuse_byte(uint32_t gp_fuse_byte)
 654:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1853              	 .loc 1 654 0
 1854              	 .cfi_startproc
 1855              	 
 1856              	 
 1857 063e F0B5     	 push {r4,r5,r6,r7,lr}
 1858              	.LCFI141:
 1859              	 .cfi_def_cfa_offset 20
 1860              	 .cfi_offset 4,-20
 1861              	 .cfi_offset 5,-16
 1862              	 .cfi_offset 6,-12
 1863              	 .cfi_offset 7,-8
 1864              	 .cfi_offset 14,-4
 1865 0640 83B0     	 sub sp,sp,#12
 1866              	.LCFI142:
 1867              	 .cfi_def_cfa_offset 32
 1868 0642 00AF     	 add r7,sp,#0
 1869              	.LCFI143:
 1870              	 .cfi_def_cfa_register 7
 1871 0644 7860     	 str r0,[r7,#4]
 655:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_read_all_gp_fuses() >> ((gp_fuse_byte & 0x07) << 3);
 1872              	 .loc 1 655 0
 1873 0646 FFF7FEFF 	 bl flashcalw_read_all_gp_fuses
 1874 064a 0246     	 mov r2,r0
 1875 064c 0B46     	 mov r3,r1
 1876 064e 7968     	 ldr r1,[r7,#4]
 1877 0650 C900     	 lsls r1,r1,#3
 1878 0652 01F03801 	 and r1,r1,#56
 1879 0656 C1F12006 	 rsb r6,r1,#32
 1880 065a A1F12000 	 sub r0,r1,#32
 1881 065e 22FA01F4 	 lsr r4,r2,r1
 1882 0662 03FA06F6 	 lsl r6,r3,r6
 1883 0666 3443     	 orrs r4,r4,r6
 1884 0668 23FA00F0 	 lsr r0,r3,r0
 1885 066c 0443     	 orrs r4,r4,r0
 1886 066e 23FA01F5 	 lsr r5,r3,r1
 1887 0672 E3B2     	 uxtb r3,r4
 656:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1888              	 .loc 1 656 0
 1889 0674 1846     	 mov r0,r3
 1890 0676 0C37     	 adds r7,r7,#12
 1891              	.LCFI144:
 1892              	 .cfi_def_cfa_offset 20
 1893 0678 BD46     	 mov sp,r7
 1894              	.LCFI145:
 1895              	 .cfi_def_cfa_register 13
 1896              	 
 1897 067a F0BD     	 pop {r4,r5,r6,r7,pc}
 1898              	 .cfi_endproc
 1899              	.LFE214:
 1901              	 .align 1
 1902              	 .global flashcalw_read_all_gp_fuses
 1903              	 .syntax unified
 1904              	 .thumb
 1905              	 .thumb_func
 1906              	 .fpu softvfp
 1908              	flashcalw_read_all_gp_fuses:
 1909              	.LFB215:
 657:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 658:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Reads all general-purpose fuses.
 659:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 660:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of all general-purpose fuses as a word.
 661:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 662:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 663:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 664:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 665:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 666:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint64_t flashcalw_read_all_gp_fuses(void)
 667:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1910              	 .loc 1 667 0
 1911              	 .cfi_startproc
 1912              	 
 1913              	 
 1914              	 
 1915 067c F0B4     	 push {r4,r5,r6,r7}
 1916              	.LCFI146:
 1917              	 .cfi_def_cfa_offset 16
 1918              	 .cfi_offset 4,-16
 1919              	 .cfi_offset 5,-12
 1920              	 .cfi_offset 6,-8
 1921              	 .cfi_offset 7,-4
 1922 067e 82B0     	 sub sp,sp,#8
 1923              	.LCFI147:
 1924              	 .cfi_def_cfa_offset 24
 1925 0680 00AF     	 add r7,sp,#0
 1926              	.LCFI148:
 1927              	 .cfi_def_cfa_register 7
 668:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t fuselo = HFLASHC->FLASHCALW_FGPFRLO;
 1928              	 .loc 1 668 0
 1929 0682 0C4A     	 ldr r2,.L119
 1930 0684 9269     	 ldr r2,[r2,#24]
 1931 0686 7A60     	 str r2,[r7,#4]
 669:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return fuselo |	(uint64_t)HFLASHC->FLASHCALW_FGPFRHI << 32;
 1932              	 .loc 1 669 0
 1933 0688 7A68     	 ldr r2,[r7,#4]
 1934 068a 1146     	 mov r1,r2
 1935 068c 4FF00002 	 mov r2,#0
 1936 0690 0848     	 ldr r0,.L119
 1937 0692 4069     	 ldr r0,[r0,#20]
 1938 0694 0546     	 mov r5,r0
 1939 0696 4FF00006 	 mov r6,#0
 1940 069a 2C00     	 movs r4,r5
 1941 069c 0023     	 movs r3,#0
 1942 069e 43EA0103 	 orr r3,r3,r1
 1943 06a2 44EA0204 	 orr r4,r4,r2
 670:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1944              	 .loc 1 670 0
 1945 06a6 1846     	 mov r0,r3
 1946 06a8 2146     	 mov r1,r4
 1947 06aa 0837     	 adds r7,r7,#8
 1948              	.LCFI149:
 1949              	 .cfi_def_cfa_offset 16
 1950 06ac BD46     	 mov sp,r7
 1951              	.LCFI150:
 1952              	 .cfi_def_cfa_register 13
 1953              	 
 1954 06ae F0BC     	 pop {r4,r5,r6,r7}
 1955              	.LCFI151:
 1956              	 .cfi_restore 7
 1957              	 .cfi_restore 6
 1958              	 .cfi_restore 5
 1959              	 .cfi_restore 4
 1960              	 .cfi_def_cfa_offset 0
 1961 06b0 7047     	 bx lr
 1962              	.L120:
 1963 06b2 00BF     	 .align 2
 1964              	.L119:
 1965 06b4 00000A40 	 .word 1074397184
 1966              	 .cfi_endproc
 1967              	.LFE215:
 1969              	 .align 1
 1970              	 .global flashcalw_erase_gp_fuse_bit
 1971              	 .syntax unified
 1972              	 .thumb
 1973              	 .thumb_func
 1974              	 .fpu softvfp
 1976              	flashcalw_erase_gp_fuse_bit:
 1977              	.LFB216:
 671:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 672:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Erases a general-purpose fuse bit.
 673:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 674:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_bit The general-purpose fuse bit: \c 0 to \c 63.
 675:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param check Whether to check erase: \c true or \c false.
 676:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 677:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the erase succeeded or always \c true if erase check was not
 678:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         requested.
 679:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 680:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active and the command
 681:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  is applied to BOOTPROT.
 682:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 683:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 684:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 685:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 686:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
 687:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 688:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 689:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 690:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 691:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 692:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_erase_gp_fuse_bit(uint32_t gp_fuse_bit, bool check)
 693:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1978              	 .loc 1 693 0
 1979              	 .cfi_startproc
 1980              	 
 1981              	 
 1982 06b8 80B5     	 push {r7,lr}
 1983              	.LCFI152:
 1984              	 .cfi_def_cfa_offset 8
 1985              	 .cfi_offset 7,-8
 1986              	 .cfi_offset 14,-4
 1987 06ba 82B0     	 sub sp,sp,#8
 1988              	.LCFI153:
 1989              	 .cfi_def_cfa_offset 16
 1990 06bc 00AF     	 add r7,sp,#0
 1991              	.LCFI154:
 1992              	 .cfi_def_cfa_register 7
 1993 06be 7860     	 str r0,[r7,#4]
 1994 06c0 0B46     	 mov r3,r1
 1995 06c2 FB70     	 strb r3,[r7,#3]
 694:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_EGPB, gp_fuse_bit & 0x3F);
 1996              	 .loc 1 694 0
 1997 06c4 7B68     	 ldr r3,[r7,#4]
 1998 06c6 03F03F03 	 and r3,r3,#63
 1999 06ca 1946     	 mov r1,r3
 2000 06cc 0820     	 movs r0,#8
 2001 06ce FFF7FEFF 	 bl flashcalw_issue_command
 695:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (check) ? flashcalw_read_gp_fuse_bit(gp_fuse_bit) : true;
 2002              	 .loc 1 695 0
 2003 06d2 FB78     	 ldrb r3,[r7,#3]
 2004 06d4 002B     	 cmp r3,#0
 2005 06d6 05D0     	 beq .L122
 2006              	 .loc 1 695 0 is_stmt 0 discriminator 2
 2007 06d8 7868     	 ldr r0,[r7,#4]
 2008 06da FFF7FEFF 	 bl flashcalw_read_gp_fuse_bit
 2009 06de 0346     	 mov r3,r0
 2010 06e0 002B     	 cmp r3,#0
 2011 06e2 01D0     	 beq .L123
 2012              	.L122:
 2013              	 .loc 1 695 0 discriminator 3
 2014 06e4 0123     	 movs r3,#1
 2015 06e6 00E0     	 b .L124
 2016              	.L123:
 2017              	 .loc 1 695 0 discriminator 4
 2018 06e8 0023     	 movs r3,#0
 2019              	.L124:
 696:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2020              	 .loc 1 696 0 is_stmt 1 discriminator 6
 2021 06ea 1846     	 mov r0,r3
 2022 06ec 0837     	 adds r7,r7,#8
 2023              	.LCFI155:
 2024              	 .cfi_def_cfa_offset 8
 2025 06ee BD46     	 mov sp,r7
 2026              	.LCFI156:
 2027              	 .cfi_def_cfa_register 13
 2028              	 
 2029 06f0 80BD     	 pop {r7,pc}
 2030              	 .cfi_endproc
 2031              	.LFE216:
 2033              	 .align 1
 2034              	 .global flashcalw_erase_gp_fuse_bitfield
 2035              	 .syntax unified
 2036              	 .thumb
 2037              	 .thumb_func
 2038              	 .fpu softvfp
 2040              	flashcalw_erase_gp_fuse_bitfield:
 2041              	.LFB217:
 697:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 698:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Erases a general-purpose fuse bit-field.
 699:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 700:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param pos The bit-position of the general-purpose fuse bit-field: \c 0 to
 701:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *            \c 63.
 702:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param width The bit-width of the general-purpose fuse bit-field: \c 0 to
 703:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *              \c 64.
 704:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param check Whether to check erase: \c true or \c false.
 705:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 706:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the erase succeeded or always \c true if erase check was not
 707:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         requested.
 708:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 709:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active and the command
 710:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  is applied to BOOTPROT.
 711:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 712:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 713:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 714:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 715:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
 716:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 717:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 718:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 719:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 720:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 721:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_erase_gp_fuse_bitfield(uint32_t pos, uint32_t width, bool check)
 722:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2042              	 .loc 1 722 0
 2043              	 .cfi_startproc
 2044              	 
 2045              	 
 2046 06f2 2DE9F043 	 push {r4,r5,r6,r7,r8,r9,lr}
 2047              	.LCFI157:
 2048              	 .cfi_def_cfa_offset 28
 2049              	 .cfi_offset 4,-28
 2050              	 .cfi_offset 5,-24
 2051              	 .cfi_offset 6,-20
 2052              	 .cfi_offset 7,-16
 2053              	 .cfi_offset 8,-12
 2054              	 .cfi_offset 9,-8
 2055              	 .cfi_offset 14,-4
 2056 06f6 87B0     	 sub sp,sp,#28
 2057              	.LCFI158:
 2058              	 .cfi_def_cfa_offset 56
 2059 06f8 00AF     	 add r7,sp,#0
 2060              	.LCFI159:
 2061              	 .cfi_def_cfa_register 7
 2062 06fa F860     	 str r0,[r7,#12]
 2063 06fc B960     	 str r1,[r7,#8]
 2064 06fe 1346     	 mov r3,r2
 2065 0700 FB71     	 strb r3,[r7,#7]
 723:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 2066              	 .loc 1 723 0
 2067 0702 0023     	 movs r3,#0
 2068 0704 7B61     	 str r3,[r7,#20]
 724:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t gp_fuse_bit;
 725:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 726:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	pos &= 0x3F;
 2069              	 .loc 1 726 0
 2070 0706 FB68     	 ldr r3,[r7,#12]
 2071 0708 03F03F03 	 and r3,r3,#63
 2072 070c FB60     	 str r3,[r7,#12]
 727:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	width = Min(width, 64);
 2073              	 .loc 1 727 0
 2074 070e BB68     	 ldr r3,[r7,#8]
 2075 0710 402B     	 cmp r3,#64
 2076 0712 28BF     	 it cs
 2077 0714 4023     	 movcs r3,#64
 2078 0716 BB60     	 str r3,[r7,#8]
 728:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 729:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	for (gp_fuse_bit = pos; gp_fuse_bit < pos + width; gp_fuse_bit++) {
 2079              	 .loc 1 729 0
 2080 0718 FB68     	 ldr r3,[r7,#12]
 2081 071a 3B61     	 str r3,[r7,#16]
 2082 071c 0BE0     	 b .L127
 2083              	.L128:
 730:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_gp_fuse_bit(gp_fuse_bit, false);
 2084              	 .loc 1 730 0 discriminator 3
 2085 071e 0021     	 movs r1,#0
 2086 0720 3869     	 ldr r0,[r7,#16]
 2087 0722 FFF7FEFF 	 bl flashcalw_erase_gp_fuse_bit
 731:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 2088              	 .loc 1 731 0 discriminator 3
 2089 0726 214B     	 ldr r3,.L133
 2090 0728 1B68     	 ldr r3,[r3]
 2091 072a 7A69     	 ldr r2,[r7,#20]
 2092 072c 1343     	 orrs r3,r3,r2
 2093 072e 7B61     	 str r3,[r7,#20]
 729:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_gp_fuse_bit(gp_fuse_bit, false);
 2094              	 .loc 1 729 0 discriminator 3
 2095 0730 3B69     	 ldr r3,[r7,#16]
 2096 0732 0133     	 adds r3,r3,#1
 2097 0734 3B61     	 str r3,[r7,#16]
 2098              	.L127:
 729:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_gp_fuse_bit(gp_fuse_bit, false);
 2099              	 .loc 1 729 0 is_stmt 0 discriminator 1
 2100 0736 FA68     	 ldr r2,[r7,#12]
 2101 0738 BB68     	 ldr r3,[r7,#8]
 2102 073a 1A44     	 add r2,r2,r3
 2103 073c 3B69     	 ldr r3,[r7,#16]
 2104 073e 9A42     	 cmp r2,r3
 2105 0740 EDD8     	 bhi .L128
 732:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 733:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 2106              	 .loc 1 733 0 is_stmt 1
 2107 0742 1A4A     	 ldr r2,.L133
 2108 0744 7B69     	 ldr r3,[r7,#20]
 2109 0746 1360     	 str r3,[r2]
 734:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (check) ? (flashcalw_read_gp_fuse_bitfield(pos, width)
 735:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		== ((uint64_t)1 << width) - 1) : true;
 2110              	 .loc 1 735 0
 2111 0748 FB79     	 ldrb r3,[r7,#7]
 2112 074a 002B     	 cmp r3,#0
 2113 074c 22D0     	 beq .L129
 734:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (check) ? (flashcalw_read_gp_fuse_bitfield(pos, width)
 2114              	 .loc 1 734 0 discriminator 2
 2115 074e B968     	 ldr r1,[r7,#8]
 2116 0750 F868     	 ldr r0,[r7,#12]
 2117 0752 FFF7FEFF 	 bl flashcalw_read_gp_fuse_bitfield
 2118 0756 8046     	 mov r8,r0
 2119 0758 8946     	 mov r9,r1
 2120              	 .loc 1 735 0 discriminator 2
 2121 075a 4FF00102 	 mov r2,#1
 2122 075e 4FF00003 	 mov r3,#0
 2123 0762 B968     	 ldr r1,[r7,#8]
 2124 0764 A1F12006 	 sub r6,r1,#32
 2125 0768 C1F12000 	 rsb r0,r1,#32
 2126 076c 03FA01F5 	 lsl r5,r3,r1
 2127 0770 02FA06F6 	 lsl r6,r2,r6
 2128 0774 3543     	 orrs r5,r5,r6
 2129 0776 22FA00F0 	 lsr r0,r2,r0
 2130 077a 0543     	 orrs r5,r5,r0
 2131 077c 02FA01F4 	 lsl r4,r2,r1
 2132 0780 14F1FF32 	 adds r2,r4,#-1
 2133 0784 45F1FF33 	 adc r3,r5,#-1
 2134 0788 1C46     	 mov r4,r3
 2135 078a 1346     	 mov r3,r2
 2136 078c A145     	 cmp r9,r4
 2137 078e 08BF     	 it eq
 2138 0790 9845     	 cmpeq r8,r3
 2139 0792 01D1     	 bne .L130
 2140              	.L129:
 2141              	 .loc 1 735 0 is_stmt 0 discriminator 3
 2142 0794 0123     	 movs r3,#1
 2143 0796 00E0     	 b .L131
 2144              	.L130:
 2145              	 .loc 1 735 0 discriminator 4
 2146 0798 0023     	 movs r3,#0
 2147              	.L131:
 2148              	 .loc 1 735 0 discriminator 6
 2149 079a 03F00103 	 and r3,r3,#1
 2150 079e DBB2     	 uxtb r3,r3
 736:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2151              	 .loc 1 736 0 is_stmt 1 discriminator 6
 2152 07a0 1846     	 mov r0,r3
 2153 07a2 1C37     	 adds r7,r7,#28
 2154              	.LCFI160:
 2155              	 .cfi_def_cfa_offset 28
 2156 07a4 BD46     	 mov sp,r7
 2157              	.LCFI161:
 2158              	 .cfi_def_cfa_register 13
 2159              	 
 2160 07a6 BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 2161              	.L134:
 2162 07aa 00BF     	 .align 2
 2163              	.L133:
 2164 07ac 00000000 	 .word flashcalw_error_status
 2165              	 .cfi_endproc
 2166              	.LFE217:
 2168              	 .align 1
 2169              	 .global flashcalw_erase_gp_fuse_byte
 2170              	 .syntax unified
 2171              	 .thumb
 2172              	 .thumb_func
 2173              	 .fpu softvfp
 2175              	flashcalw_erase_gp_fuse_byte:
 2176              	.LFB218:
 737:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 738:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Erases a general-purpose fuse byte.
 739:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 740:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_byte The general-purpose fuse byte: \c 0 to \c 7.
 741:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param check Whether to check erase: \c true or \c false.
 742:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 743:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the erase succeeded or always \c true if erase check was not
 744:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         requested.
 745:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 746:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active.
 747:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 748:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 749:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 750:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 751:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
 752:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 753:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 754:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 755:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 756:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 757:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_erase_gp_fuse_byte(uint32_t gp_fuse_byte, bool check)
 758:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2177              	 .loc 1 758 0
 2178              	 .cfi_startproc
 2179              	 
 2180              	 
 2181 07b0 B0B5     	 push {r4,r5,r7,lr}
 2182              	.LCFI162:
 2183              	 .cfi_def_cfa_offset 16
 2184              	 .cfi_offset 4,-16
 2185              	 .cfi_offset 5,-12
 2186              	 .cfi_offset 7,-8
 2187              	 .cfi_offset 14,-4
 2188 07b2 86B0     	 sub sp,sp,#24
 2189              	.LCFI163:
 2190              	 .cfi_def_cfa_offset 40
 2191 07b4 00AF     	 add r7,sp,#0
 2192              	.LCFI164:
 2193              	 .cfi_def_cfa_register 7
 2194 07b6 7860     	 str r0,[r7,#4]
 2195 07b8 0B46     	 mov r3,r1
 2196 07ba FB70     	 strb r3,[r7,#3]
 759:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status;
 760:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t current_gp_fuse_byte;
 761:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint64_t value = flashcalw_read_all_gp_fuses();
 2197              	 .loc 1 761 0
 2198 07bc FFF7FEFF 	 bl flashcalw_read_all_gp_fuses
 2199 07c0 C7E90201 	 strd r0,[r7,#8]
 762:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 763:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_erase_all_gp_fuses(false);
 2200              	 .loc 1 763 0
 2201 07c4 0020     	 movs r0,#0
 2202 07c6 FFF7FEFF 	 bl flashcalw_erase_all_gp_fuses
 764:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	error_status = flashcalw_error_status;
 2203              	 .loc 1 764 0
 2204 07ca 1C4B     	 ldr r3,.L143
 2205 07cc 1B68     	 ldr r3,[r3]
 2206 07ce 7B61     	 str r3,[r7,#20]
 765:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	for (current_gp_fuse_byte = 0; current_gp_fuse_byte < 8;
 2207              	 .loc 1 765 0
 2208 07d0 0023     	 movs r3,#0
 2209 07d2 3B61     	 str r3,[r7,#16]
 2210 07d4 18E0     	 b .L136
 2211              	.L138:
 766:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			current_gp_fuse_byte++, value >>= 8) {
 767:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (current_gp_fuse_byte != gp_fuse_byte) {
 2212              	 .loc 1 767 0
 2213 07d6 3A69     	 ldr r2,[r7,#16]
 2214 07d8 7B68     	 ldr r3,[r7,#4]
 2215 07da 9A42     	 cmp r2,r3
 2216 07dc 09D0     	 beq .L137
 768:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			flashcalw_write_gp_fuse_byte(current_gp_fuse_byte,
 2217              	 .loc 1 768 0
 2218 07de 3B7A     	 ldrb r3,[r7,#8]
 2219 07e0 1946     	 mov r1,r3
 2220 07e2 3869     	 ldr r0,[r7,#16]
 2221 07e4 FFF7FEFF 	 bl flashcalw_write_gp_fuse_byte
 769:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					value);
 770:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			error_status |= flashcalw_error_status;
 2222              	 .loc 1 770 0
 2223 07e8 144B     	 ldr r3,.L143
 2224 07ea 1B68     	 ldr r3,[r3]
 2225 07ec 7A69     	 ldr r2,[r7,#20]
 2226 07ee 1343     	 orrs r3,r3,r2
 2227 07f0 7B61     	 str r3,[r7,#20]
 2228              	.L137:
 766:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (current_gp_fuse_byte != gp_fuse_byte) {
 2229              	 .loc 1 766 0
 2230 07f2 3B69     	 ldr r3,[r7,#16]
 2231 07f4 0133     	 adds r3,r3,#1
 2232 07f6 3B61     	 str r3,[r7,#16]
 2233 07f8 D7E90223 	 ldrd r2,[r7,#8]
 2234 07fc 140A     	 lsrs r4,r2,#8
 2235 07fe 44EA0364 	 orr r4,r4,r3,lsl#24
 2236 0802 1D0A     	 lsrs r5,r3,#8
 2237 0804 C7E90245 	 strd r4,[r7,#8]
 2238              	.L136:
 765:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			current_gp_fuse_byte++, value >>= 8) {
 2239              	 .loc 1 765 0 discriminator 1
 2240 0808 3B69     	 ldr r3,[r7,#16]
 2241 080a 072B     	 cmp r3,#7
 2242 080c E3D9     	 bls .L138
 771:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
 772:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 773:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 2243              	 .loc 1 773 0
 2244 080e 0B4A     	 ldr r2,.L143
 2245 0810 7B69     	 ldr r3,[r7,#20]
 2246 0812 1360     	 str r3,[r2]
 774:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (check) ? (flashcalw_read_gp_fuse_byte(gp_fuse_byte) == 0xFF)
 775:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		: true;
 2247              	 .loc 1 775 0
 2248 0814 FB78     	 ldrb r3,[r7,#3]
 2249 0816 002B     	 cmp r3,#0
 2250 0818 05D0     	 beq .L139
 774:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (check) ? (flashcalw_read_gp_fuse_byte(gp_fuse_byte) == 0xFF)
 2251              	 .loc 1 774 0 discriminator 2
 2252 081a 7868     	 ldr r0,[r7,#4]
 2253 081c FFF7FEFF 	 bl flashcalw_read_gp_fuse_byte
 2254 0820 0346     	 mov r3,r0
 2255              	 .loc 1 775 0 discriminator 2
 2256 0822 FF2B     	 cmp r3,#255
 2257 0824 01D1     	 bne .L140
 2258              	.L139:
 2259              	 .loc 1 775 0 is_stmt 0 discriminator 3
 2260 0826 0123     	 movs r3,#1
 2261 0828 00E0     	 b .L141
 2262              	.L140:
 2263              	 .loc 1 775 0 discriminator 4
 2264 082a 0023     	 movs r3,#0
 2265              	.L141:
 2266              	 .loc 1 775 0 discriminator 6
 2267 082c 03F00103 	 and r3,r3,#1
 2268 0830 DBB2     	 uxtb r3,r3
 776:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2269              	 .loc 1 776 0 is_stmt 1 discriminator 6
 2270 0832 1846     	 mov r0,r3
 2271 0834 1837     	 adds r7,r7,#24
 2272              	.LCFI165:
 2273              	 .cfi_def_cfa_offset 16
 2274 0836 BD46     	 mov sp,r7
 2275              	.LCFI166:
 2276              	 .cfi_def_cfa_register 13
 2277              	 
 2278 0838 B0BD     	 pop {r4,r5,r7,pc}
 2279              	.L144:
 2280 083a 00BF     	 .align 2
 2281              	.L143:
 2282 083c 00000000 	 .word flashcalw_error_status
 2283              	 .cfi_endproc
 2284              	.LFE218:
 2286              	 .align 1
 2287              	 .global flashcalw_erase_all_gp_fuses
 2288              	 .syntax unified
 2289              	 .thumb
 2290              	 .thumb_func
 2291              	 .fpu softvfp
 2293              	flashcalw_erase_all_gp_fuses:
 2294              	.LFB219:
 777:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 778:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Erases all general-purpose fuses.
 779:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 780:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param check Whether to check erase: \c true or \c false.
 781:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 782:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the erase succeeded or always \c true if erase check was not
 783:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         requested.
 784:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 785:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active.
 786:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 787:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 788:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 789:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 790:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
 791:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 792:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 793:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 794:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 795:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 796:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_erase_all_gp_fuses(bool check)
 797:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2295              	 .loc 1 797 0
 2296              	 .cfi_startproc
 2297              	 
 2298              	 
 2299 0840 90B5     	 push {r4,r7,lr}
 2300              	.LCFI167:
 2301              	 .cfi_def_cfa_offset 12
 2302              	 .cfi_offset 4,-12
 2303              	 .cfi_offset 7,-8
 2304              	 .cfi_offset 14,-4
 2305 0842 83B0     	 sub sp,sp,#12
 2306              	.LCFI168:
 2307              	 .cfi_def_cfa_offset 24
 2308 0844 00AF     	 add r7,sp,#0
 2309              	.LCFI169:
 2310              	 .cfi_def_cfa_register 7
 2311 0846 0346     	 mov r3,r0
 2312 0848 FB71     	 strb r3,[r7,#7]
 798:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_EAGPF, -1);
 2313              	 .loc 1 798 0
 2314 084a 4FF0FF31 	 mov r1,#-1
 2315 084e 0B20     	 movs r0,#11
 2316 0850 FFF7FEFF 	 bl flashcalw_issue_command
 799:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/**
 800:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * use (uint64_t)-1 instead of 0xFFFFFFFFFFFFFFFFULL to avoid
 801:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * compilation warning
 802:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 */
 803:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (check) ? (flashcalw_read_all_gp_fuses() ==
 804:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		(uint64_t)-1) : true;
 2317              	 .loc 1 804 0
 2318 0854 FB79     	 ldrb r3,[r7,#7]
 2319 0856 002B     	 cmp r3,#0
 2320 0858 09D0     	 beq .L146
 803:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		(uint64_t)-1) : true;
 2321              	 .loc 1 803 0 discriminator 2
 2322 085a FFF7FEFF 	 bl flashcalw_read_all_gp_fuses
 2323 085e 0346     	 mov r3,r0
 2324 0860 0C46     	 mov r4,r1
 2325              	 .loc 1 804 0 discriminator 2
 2326 0862 B4F1FF3F 	 cmp r4,#-1
 2327 0866 08BF     	 it eq
 2328 0868 B3F1FF3F 	 cmpeq r3,#-1
 2329 086c 01D1     	 bne .L147
 2330              	.L146:
 2331              	 .loc 1 804 0 is_stmt 0 discriminator 3
 2332 086e 0123     	 movs r3,#1
 2333 0870 00E0     	 b .L148
 2334              	.L147:
 2335              	 .loc 1 804 0 discriminator 4
 2336 0872 0023     	 movs r3,#0
 2337              	.L148:
 2338              	 .loc 1 804 0 discriminator 6
 2339 0874 03F00103 	 and r3,r3,#1
 2340 0878 DBB2     	 uxtb r3,r3
 805:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2341              	 .loc 1 805 0 is_stmt 1 discriminator 6
 2342 087a 1846     	 mov r0,r3
 2343 087c 0C37     	 adds r7,r7,#12
 2344              	.LCFI170:
 2345              	 .cfi_def_cfa_offset 12
 2346 087e BD46     	 mov sp,r7
 2347              	.LCFI171:
 2348              	 .cfi_def_cfa_register 13
 2349              	 
 2350 0880 90BD     	 pop {r4,r7,pc}
 2351              	 .cfi_endproc
 2352              	.LFE219:
 2354              	 .align 1
 2355              	 .global flashcalw_write_gp_fuse_bit
 2356              	 .syntax unified
 2357              	 .thumb
 2358              	 .thumb_func
 2359              	 .fpu softvfp
 2361              	flashcalw_write_gp_fuse_bit:
 2362              	.LFB220:
 806:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 807:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Writes a general-purpose fuse bit.
 808:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 809:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_bit The general-purpose fuse bit: \c 0 to \c 63.
 810:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of the specified general-purpose fuse bit.
 811:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 812:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active and the command
 813:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * is applied to BOOTPROT.
 814:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 815:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 816:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 817:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 818:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note A write operation can only clear bits; in other words, an erase
 819:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  operation must first be done if some bits need to be set to 1.
 820:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 821:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 822:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 823:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 824:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 825:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_write_gp_fuse_bit(uint32_t gp_fuse_bit, bool value)
 826:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2363              	 .loc 1 826 0
 2364              	 .cfi_startproc
 2365              	 
 2366              	 
 2367 0882 80B5     	 push {r7,lr}
 2368              	.LCFI172:
 2369              	 .cfi_def_cfa_offset 8
 2370              	 .cfi_offset 7,-8
 2371              	 .cfi_offset 14,-4
 2372 0884 82B0     	 sub sp,sp,#8
 2373              	.LCFI173:
 2374              	 .cfi_def_cfa_offset 16
 2375 0886 00AF     	 add r7,sp,#0
 2376              	.LCFI174:
 2377              	 .cfi_def_cfa_register 7
 2378 0888 7860     	 str r0,[r7,#4]
 2379 088a 0B46     	 mov r3,r1
 2380 088c FB70     	 strb r3,[r7,#3]
 827:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (!value) {
 2381              	 .loc 1 827 0
 2382 088e FB78     	 ldrb r3,[r7,#3]
 2383 0890 83F00103 	 eor r3,r3,#1
 2384 0894 DBB2     	 uxtb r3,r3
 2385 0896 002B     	 cmp r3,#0
 2386 0898 06D0     	 beq .L152
 828:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_issue_command(FLASHCALW_FCMD_CMD_WGPB, gp_fuse_bit
 829:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				& 0x3F);
 2387              	 .loc 1 829 0
 2388 089a 7B68     	 ldr r3,[r7,#4]
 828:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_issue_command(FLASHCALW_FCMD_CMD_WGPB, gp_fuse_bit
 2389              	 .loc 1 828 0
 2390 089c 03F03F03 	 and r3,r3,#63
 2391 08a0 1946     	 mov r1,r3
 2392 08a2 0720     	 movs r0,#7
 2393 08a4 FFF7FEFF 	 bl flashcalw_issue_command
 2394              	.L152:
 830:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 831:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2395              	 .loc 1 831 0
 2396 08a8 00BF     	 nop
 2397 08aa 0837     	 adds r7,r7,#8
 2398              	.LCFI175:
 2399              	 .cfi_def_cfa_offset 8
 2400 08ac BD46     	 mov sp,r7
 2401              	.LCFI176:
 2402              	 .cfi_def_cfa_register 13
 2403              	 
 2404 08ae 80BD     	 pop {r7,pc}
 2405              	 .cfi_endproc
 2406              	.LFE220:
 2408              	 .align 1
 2409              	 .global flashcalw_write_gp_fuse_bitfield
 2410              	 .syntax unified
 2411              	 .thumb
 2412              	 .thumb_func
 2413              	 .fpu softvfp
 2415              	flashcalw_write_gp_fuse_bitfield:
 2416              	.LFB221:
 832:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 833:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Writes a general-purpose fuse bit-field.
 834:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 835:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param pos The bit-position of the general-purpose fuse bit-field: \c 0 to
 836:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *            \c 63.
 837:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param width The bit-width of the general-purpose fuse bit-field: \c 0 to
 838:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *              \c 64.
 839:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of the specified general-purpose fuse bit-field.
 840:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 841:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active and the command
 842:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * is applied to BOOTPROT.
 843:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 844:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 845:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 846:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 847:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note A write operation can only clear bits; in other words, an erase
 848:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  operation must first be done if some bits need to be set to 1.
 849:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 850:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 851:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 852:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 853:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 854:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_write_gp_fuse_bitfield(uint32_t pos, uint32_t width,
 855:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		uint64_t value)
 856:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2417              	 .loc 1 856 0
 2418              	 .cfi_startproc
 2419              	 
 2420              	 
 2421 08b0 90B5     	 push {r4,r7,lr}
 2422              	.LCFI177:
 2423              	 .cfi_def_cfa_offset 12
 2424              	 .cfi_offset 4,-12
 2425              	 .cfi_offset 7,-8
 2426              	 .cfi_offset 14,-4
 2427 08b2 87B0     	 sub sp,sp,#28
 2428              	.LCFI178:
 2429              	 .cfi_def_cfa_offset 40
 2430 08b4 00AF     	 add r7,sp,#0
 2431              	.LCFI179:
 2432              	 .cfi_def_cfa_register 7
 2433 08b6 F860     	 str r0,[r7,#12]
 2434 08b8 B960     	 str r1,[r7,#8]
 2435 08ba C7E90023 	 strd r2,[r7]
 857:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 2436              	 .loc 1 857 0
 2437 08be 0023     	 movs r3,#0
 2438 08c0 7B61     	 str r3,[r7,#20]
 858:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t gp_fuse_bit;
 859:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 860:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	pos &= 0x3F;
 2439              	 .loc 1 860 0
 2440 08c2 FB68     	 ldr r3,[r7,#12]
 2441 08c4 03F03F03 	 and r3,r3,#63
 2442 08c8 FB60     	 str r3,[r7,#12]
 861:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	width = Min(width, 64);
 2443              	 .loc 1 861 0
 2444 08ca BB68     	 ldr r3,[r7,#8]
 2445 08cc 402B     	 cmp r3,#64
 2446 08ce 28BF     	 it cs
 2447 08d0 4023     	 movcs r3,#64
 2448 08d2 BB60     	 str r3,[r7,#8]
 862:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 863:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	for (gp_fuse_bit = pos; gp_fuse_bit < pos + width;
 2449              	 .loc 1 863 0
 2450 08d4 FB68     	 ldr r3,[r7,#12]
 2451 08d6 3B61     	 str r3,[r7,#16]
 2452 08d8 22E0     	 b .L154
 2453              	.L155:
 864:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			gp_fuse_bit++, value >>= 1) {
 865:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_gp_fuse_bit(gp_fuse_bit, value & 0x01);
 2454              	 .loc 1 865 0
 2455 08da D7E90034 	 ldrd r3,[r7]
 2456 08de 4FF00101 	 mov r1,#1
 2457 08e2 4FF00002 	 mov r2,#0
 2458 08e6 03EA0103 	 and r3,r3,r1
 2459 08ea 04EA0204 	 and r4,r4,r2
 2460 08ee 2343     	 orrs r3,r3,r4
 2461 08f0 002B     	 cmp r3,#0
 2462 08f2 14BF     	 ite ne
 2463 08f4 0123     	 movne r3,#1
 2464 08f6 0023     	 moveq r3,#0
 2465 08f8 DBB2     	 uxtb r3,r3
 2466 08fa 1946     	 mov r1,r3
 2467 08fc 3869     	 ldr r0,[r7,#16]
 2468 08fe FFF7FEFF 	 bl flashcalw_write_gp_fuse_bit
 866:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 2469              	 .loc 1 866 0
 2470 0902 0E4B     	 ldr r3,.L156
 2471 0904 1B68     	 ldr r3,[r3]
 2472 0906 7A69     	 ldr r2,[r7,#20]
 2473 0908 1343     	 orrs r3,r3,r2
 2474 090a 7B61     	 str r3,[r7,#20]
 864:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			gp_fuse_bit++, value >>= 1) {
 2475              	 .loc 1 864 0
 2476 090c 3B69     	 ldr r3,[r7,#16]
 2477 090e 0133     	 adds r3,r3,#1
 2478 0910 3B61     	 str r3,[r7,#16]
 2479 0912 D7E90034 	 ldrd r3,[r7]
 2480 0916 6408     	 movs r4,r4,lsr#1
 2481 0918 4FEA3303 	 mov r3,r3,rrx
 2482 091c C7E90034 	 strd r3,[r7]
 2483              	.L154:
 863:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			gp_fuse_bit++, value >>= 1) {
 2484              	 .loc 1 863 0 discriminator 1
 2485 0920 FA68     	 ldr r2,[r7,#12]
 2486 0922 BB68     	 ldr r3,[r7,#8]
 2487 0924 1A44     	 add r2,r2,r3
 2488 0926 3B69     	 ldr r3,[r7,#16]
 2489 0928 9A42     	 cmp r2,r3
 2490 092a D6D8     	 bhi .L155
 867:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 868:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 2491              	 .loc 1 868 0
 2492 092c 034A     	 ldr r2,.L156
 2493 092e 7B69     	 ldr r3,[r7,#20]
 2494 0930 1360     	 str r3,[r2]
 869:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2495              	 .loc 1 869 0
 2496 0932 00BF     	 nop
 2497 0934 1C37     	 adds r7,r7,#28
 2498              	.LCFI180:
 2499              	 .cfi_def_cfa_offset 12
 2500 0936 BD46     	 mov sp,r7
 2501              	.LCFI181:
 2502              	 .cfi_def_cfa_register 13
 2503              	 
 2504 0938 90BD     	 pop {r4,r7,pc}
 2505              	.L157:
 2506 093a 00BF     	 .align 2
 2507              	.L156:
 2508 093c 00000000 	 .word flashcalw_error_status
 2509              	 .cfi_endproc
 2510              	.LFE221:
 2512              	 .align 1
 2513              	 .global flashcalw_write_gp_fuse_byte
 2514              	 .syntax unified
 2515              	 .thumb
 2516              	 .thumb_func
 2517              	 .fpu softvfp
 2519              	flashcalw_write_gp_fuse_byte:
 2520              	.LFB222:
 870:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 871:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Writes a general-purpose fuse byte.
 872:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 873:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_byte The general-purpose fuse byte: \c 0 to \c 7.
 874:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of the specified general-purpose fuse byte.
 875:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 876:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active.
 877:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 878:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 879:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 880:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 881:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note A write operation can only clear bits; in other words, an erase
 882:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  operation must first be done if some bits need to be set to 1.
 883:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 884:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 885:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 886:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 887:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 888:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_write_gp_fuse_byte(uint32_t gp_fuse_byte, uint8_t value)
 889:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2521              	 .loc 1 889 0
 2522              	 .cfi_startproc
 2523              	 
 2524              	 
 2525 0940 80B5     	 push {r7,lr}
 2526              	.LCFI182:
 2527              	 .cfi_def_cfa_offset 8
 2528              	 .cfi_offset 7,-8
 2529              	 .cfi_offset 14,-4
 2530 0942 82B0     	 sub sp,sp,#8
 2531              	.LCFI183:
 2532              	 .cfi_def_cfa_offset 16
 2533 0944 00AF     	 add r7,sp,#0
 2534              	.LCFI184:
 2535              	 .cfi_def_cfa_register 7
 2536 0946 7860     	 str r0,[r7,#4]
 2537 0948 0B46     	 mov r3,r1
 2538 094a FB70     	 strb r3,[r7,#3]
 890:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_PGPFB, (gp_fuse_byte & 0x07)
 2539              	 .loc 1 890 0
 2540 094c 7B68     	 ldr r3,[r7,#4]
 2541 094e 03F00703 	 and r3,r3,#7
 891:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			| value << 3);
 2542              	 .loc 1 891 0
 2543 0952 FA78     	 ldrb r2,[r7,#3]
 2544 0954 D200     	 lsls r2,r2,#3
 2545 0956 1343     	 orrs r3,r3,r2
 890:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_PGPFB, (gp_fuse_byte & 0x07)
 2546              	 .loc 1 890 0
 2547 0958 1946     	 mov r1,r3
 2548 095a 0A20     	 movs r0,#10
 2549 095c FFF7FEFF 	 bl flashcalw_issue_command
 892:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2550              	 .loc 1 892 0
 2551 0960 00BF     	 nop
 2552 0962 0837     	 adds r7,r7,#8
 2553              	.LCFI185:
 2554              	 .cfi_def_cfa_offset 8
 2555 0964 BD46     	 mov sp,r7
 2556              	.LCFI186:
 2557              	 .cfi_def_cfa_register 13
 2558              	 
 2559 0966 80BD     	 pop {r7,pc}
 2560              	 .cfi_endproc
 2561              	.LFE222:
 2563              	 .align 1
 2564              	 .global flashcalw_write_all_gp_fuses
 2565              	 .syntax unified
 2566              	 .thumb
 2567              	 .thumb_func
 2568              	 .fpu softvfp
 2570              	flashcalw_write_all_gp_fuses:
 2571              	.LFB223:
 893:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 894:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Writes all general-purpose fuses.
 895:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 896:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of all general-purpose fuses as a word.
 897:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 898:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active.
 899:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 900:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 901:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 902:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 903:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note A write operation can only clear bits; in other words, an erase
 904:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  operation must first be done if some bits need to be set to 1.
 905:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 906:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 907:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 908:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 909:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 910:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_write_all_gp_fuses(uint64_t value)
 911:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2572              	 .loc 1 911 0
 2573              	 .cfi_startproc
 2574              	 
 2575              	 
 2576 0968 B0B5     	 push {r4,r5,r7,lr}
 2577              	.LCFI187:
 2578              	 .cfi_def_cfa_offset 16
 2579              	 .cfi_offset 4,-16
 2580              	 .cfi_offset 5,-12
 2581              	 .cfi_offset 7,-8
 2582              	 .cfi_offset 14,-4
 2583 096a 84B0     	 sub sp,sp,#16
 2584              	.LCFI188:
 2585              	 .cfi_def_cfa_offset 32
 2586 096c 00AF     	 add r7,sp,#0
 2587              	.LCFI189:
 2588              	 .cfi_def_cfa_register 7
 2589 096e C7E90001 	 strd r0,[r7]
 912:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 2590              	 .loc 1 912 0
 2591 0972 0023     	 movs r3,#0
 2592 0974 FB60     	 str r3,[r7,#12]
 913:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t gp_fuse_byte;
 914:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 915:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	for (gp_fuse_byte = 0; gp_fuse_byte < 8; gp_fuse_byte++, value >>= 8) {
 2593              	 .loc 1 915 0
 2594 0976 0023     	 movs r3,#0
 2595 0978 BB60     	 str r3,[r7,#8]
 2596 097a 14E0     	 b .L160
 2597              	.L161:
 916:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_gp_fuse_byte(gp_fuse_byte, value);
 2598              	 .loc 1 916 0 discriminator 3
 2599 097c 3B78     	 ldrb r3,[r7]
 2600 097e 1946     	 mov r1,r3
 2601 0980 B868     	 ldr r0,[r7,#8]
 2602 0982 FFF7FEFF 	 bl flashcalw_write_gp_fuse_byte
 917:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 2603              	 .loc 1 917 0 discriminator 3
 2604 0986 0D4B     	 ldr r3,.L162
 2605 0988 1B68     	 ldr r3,[r3]
 2606 098a FA68     	 ldr r2,[r7,#12]
 2607 098c 1343     	 orrs r3,r3,r2
 2608 098e FB60     	 str r3,[r7,#12]
 915:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_gp_fuse_byte(gp_fuse_byte, value);
 2609              	 .loc 1 915 0 discriminator 3
 2610 0990 BB68     	 ldr r3,[r7,#8]
 2611 0992 0133     	 adds r3,r3,#1
 2612 0994 BB60     	 str r3,[r7,#8]
 2613 0996 D7E90023 	 ldrd r2,[r7]
 2614 099a 140A     	 lsrs r4,r2,#8
 2615 099c 44EA0364 	 orr r4,r4,r3,lsl#24
 2616 09a0 1D0A     	 lsrs r5,r3,#8
 2617 09a2 C7E90045 	 strd r4,[r7]
 2618              	.L160:
 915:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_gp_fuse_byte(gp_fuse_byte, value);
 2619              	 .loc 1 915 0 is_stmt 0 discriminator 1
 2620 09a6 BB68     	 ldr r3,[r7,#8]
 2621 09a8 072B     	 cmp r3,#7
 2622 09aa E7D9     	 bls .L161
 918:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 919:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 2623              	 .loc 1 919 0 is_stmt 1
 2624 09ac 034A     	 ldr r2,.L162
 2625 09ae FB68     	 ldr r3,[r7,#12]
 2626 09b0 1360     	 str r3,[r2]
 920:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2627              	 .loc 1 920 0
 2628 09b2 00BF     	 nop
 2629 09b4 1037     	 adds r7,r7,#16
 2630              	.LCFI190:
 2631              	 .cfi_def_cfa_offset 16
 2632 09b6 BD46     	 mov sp,r7
 2633              	.LCFI191:
 2634              	 .cfi_def_cfa_register 13
 2635              	 
 2636 09b8 B0BD     	 pop {r4,r5,r7,pc}
 2637              	.L163:
 2638 09ba 00BF     	 .align 2
 2639              	.L162:
 2640 09bc 00000000 	 .word flashcalw_error_status
 2641              	 .cfi_endproc
 2642              	.LFE223:
 2644              	 .align 1
 2645              	 .global flashcalw_set_gp_fuse_bit
 2646              	 .syntax unified
 2647              	 .thumb
 2648              	 .thumb_func
 2649              	 .fpu softvfp
 2651              	flashcalw_set_gp_fuse_bit:
 2652              	.LFB224:
 921:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 922:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Sets a general-purpose fuse bit with the appropriate erase and write
 923:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         operations.
 924:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 925:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_bit The general-purpose fuse bit: \c 0 to \c 63.
 926:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of the specified general-purpose fuse bit.
 927:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 928:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active and the command
 929:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * is applied to BOOTPROT.
 930:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 931:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 932:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 933:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 934:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 935:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 936:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 937:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 938:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_set_gp_fuse_bit(uint32_t gp_fuse_bit, bool value)
 939:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2653              	 .loc 1 939 0
 2654              	 .cfi_startproc
 2655              	 
 2656              	 
 2657 09c0 80B5     	 push {r7,lr}
 2658              	.LCFI192:
 2659              	 .cfi_def_cfa_offset 8
 2660              	 .cfi_offset 7,-8
 2661              	 .cfi_offset 14,-4
 2662 09c2 82B0     	 sub sp,sp,#8
 2663              	.LCFI193:
 2664              	 .cfi_def_cfa_offset 16
 2665 09c4 00AF     	 add r7,sp,#0
 2666              	.LCFI194:
 2667              	 .cfi_def_cfa_register 7
 2668 09c6 7860     	 str r0,[r7,#4]
 2669 09c8 0B46     	 mov r3,r1
 2670 09ca FB70     	 strb r3,[r7,#3]
 940:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (value) {
 2671              	 .loc 1 940 0
 2672 09cc FB78     	 ldrb r3,[r7,#3]
 2673 09ce 002B     	 cmp r3,#0
 2674 09d0 04D0     	 beq .L165
 941:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_gp_fuse_bit(gp_fuse_bit, false);
 2675              	 .loc 1 941 0
 2676 09d2 0021     	 movs r1,#0
 2677 09d4 7868     	 ldr r0,[r7,#4]
 2678 09d6 FFF7FEFF 	 bl flashcalw_erase_gp_fuse_bit
 942:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	} else {
 943:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_gp_fuse_bit(gp_fuse_bit, false);
 944:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 945:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2679              	 .loc 1 945 0
 2680 09da 03E0     	 b .L167
 2681              	.L165:
 943:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 2682              	 .loc 1 943 0
 2683 09dc 0021     	 movs r1,#0
 2684 09de 7868     	 ldr r0,[r7,#4]
 2685 09e0 FFF7FEFF 	 bl flashcalw_write_gp_fuse_bit
 2686              	.L167:
 2687              	 .loc 1 945 0
 2688 09e4 00BF     	 nop
 2689 09e6 0837     	 adds r7,r7,#8
 2690              	.LCFI195:
 2691              	 .cfi_def_cfa_offset 8
 2692 09e8 BD46     	 mov sp,r7
 2693              	.LCFI196:
 2694              	 .cfi_def_cfa_register 13
 2695              	 
 2696 09ea 80BD     	 pop {r7,pc}
 2697              	 .cfi_endproc
 2698              	.LFE224:
 2700              	 .align 1
 2701              	 .global flashcalw_set_gp_fuse_bitfield
 2702              	 .syntax unified
 2703              	 .thumb
 2704              	 .thumb_func
 2705              	 .fpu softvfp
 2707              	flashcalw_set_gp_fuse_bitfield:
 2708              	.LFB225:
 946:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 947:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Sets a general-purpose fuse bit-field with the appropriate erase and
 948:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         write operations.
 949:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 950:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param pos The bit-position of the general-purpose fuse bit-field: \c 0 to
 951:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *            \c 63.
 952:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param width The bit-width of the general-purpose fuse bit-field: \c 0 to
 953:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *              \c 64.
 954:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of the specified general-purpose fuse bit-field.
 955:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 956:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active and the command
 957:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * is applied to BOOTPROT.
 958:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 959:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 960:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 961:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 962:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 963:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 964:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 965:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 966:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_set_gp_fuse_bitfield(uint32_t pos, uint32_t width,
 967:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		uint64_t value)
 968:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2709              	 .loc 1 968 0
 2710              	 .cfi_startproc
 2711              	 
 2712              	 
 2713 09ec 90B5     	 push {r4,r7,lr}
 2714              	.LCFI197:
 2715              	 .cfi_def_cfa_offset 12
 2716              	 .cfi_offset 4,-12
 2717              	 .cfi_offset 7,-8
 2718              	 .cfi_offset 14,-4
 2719 09ee 87B0     	 sub sp,sp,#28
 2720              	.LCFI198:
 2721              	 .cfi_def_cfa_offset 40
 2722 09f0 00AF     	 add r7,sp,#0
 2723              	.LCFI199:
 2724              	 .cfi_def_cfa_register 7
 2725 09f2 F860     	 str r0,[r7,#12]
 2726 09f4 B960     	 str r1,[r7,#8]
 2727 09f6 C7E90023 	 strd r2,[r7]
 969:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 2728              	 .loc 1 969 0
 2729 09fa 0023     	 movs r3,#0
 2730 09fc 7B61     	 str r3,[r7,#20]
 970:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t gp_fuse_bit;
 971:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 972:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	pos &= 0x3F;
 2731              	 .loc 1 972 0
 2732 09fe FB68     	 ldr r3,[r7,#12]
 2733 0a00 03F03F03 	 and r3,r3,#63
 2734 0a04 FB60     	 str r3,[r7,#12]
 973:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	width = Min(width, 64);
 2735              	 .loc 1 973 0
 2736 0a06 BB68     	 ldr r3,[r7,#8]
 2737 0a08 402B     	 cmp r3,#64
 2738 0a0a 28BF     	 it cs
 2739 0a0c 4023     	 movcs r3,#64
 2740 0a0e BB60     	 str r3,[r7,#8]
 974:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 975:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	for (gp_fuse_bit = pos; gp_fuse_bit < pos + width;
 2741              	 .loc 1 975 0
 2742 0a10 FB68     	 ldr r3,[r7,#12]
 2743 0a12 3B61     	 str r3,[r7,#16]
 2744 0a14 22E0     	 b .L169
 2745              	.L170:
 976:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			gp_fuse_bit++, value >>= 1) {
 977:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_set_gp_fuse_bit(gp_fuse_bit, value & 0x01);
 2746              	 .loc 1 977 0
 2747 0a16 D7E90034 	 ldrd r3,[r7]
 2748 0a1a 4FF00101 	 mov r1,#1
 2749 0a1e 4FF00002 	 mov r2,#0
 2750 0a22 03EA0103 	 and r3,r3,r1
 2751 0a26 04EA0204 	 and r4,r4,r2
 2752 0a2a 2343     	 orrs r3,r3,r4
 2753 0a2c 002B     	 cmp r3,#0
 2754 0a2e 14BF     	 ite ne
 2755 0a30 0123     	 movne r3,#1
 2756 0a32 0023     	 moveq r3,#0
 2757 0a34 DBB2     	 uxtb r3,r3
 2758 0a36 1946     	 mov r1,r3
 2759 0a38 3869     	 ldr r0,[r7,#16]
 2760 0a3a FFF7FEFF 	 bl flashcalw_set_gp_fuse_bit
 978:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 2761              	 .loc 1 978 0
 2762 0a3e 0E4B     	 ldr r3,.L171
 2763 0a40 1B68     	 ldr r3,[r3]
 2764 0a42 7A69     	 ldr r2,[r7,#20]
 2765 0a44 1343     	 orrs r3,r3,r2
 2766 0a46 7B61     	 str r3,[r7,#20]
 976:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			gp_fuse_bit++, value >>= 1) {
 2767              	 .loc 1 976 0
 2768 0a48 3B69     	 ldr r3,[r7,#16]
 2769 0a4a 0133     	 adds r3,r3,#1
 2770 0a4c 3B61     	 str r3,[r7,#16]
 2771 0a4e D7E90034 	 ldrd r3,[r7]
 2772 0a52 6408     	 movs r4,r4,lsr#1
 2773 0a54 4FEA3303 	 mov r3,r3,rrx
 2774 0a58 C7E90034 	 strd r3,[r7]
 2775              	.L169:
 975:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			gp_fuse_bit++, value >>= 1) {
 2776              	 .loc 1 975 0 discriminator 1
 2777 0a5c FA68     	 ldr r2,[r7,#12]
 2778 0a5e BB68     	 ldr r3,[r7,#8]
 2779 0a60 1A44     	 add r2,r2,r3
 2780 0a62 3B69     	 ldr r3,[r7,#16]
 2781 0a64 9A42     	 cmp r2,r3
 2782 0a66 D6D8     	 bhi .L170
 979:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 980:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 2783              	 .loc 1 980 0
 2784 0a68 034A     	 ldr r2,.L171
 2785 0a6a 7B69     	 ldr r3,[r7,#20]
 2786 0a6c 1360     	 str r3,[r2]
 981:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2787              	 .loc 1 981 0
 2788 0a6e 00BF     	 nop
 2789 0a70 1C37     	 adds r7,r7,#28
 2790              	.LCFI200:
 2791              	 .cfi_def_cfa_offset 12
 2792 0a72 BD46     	 mov sp,r7
 2793              	.LCFI201:
 2794              	 .cfi_def_cfa_register 13
 2795              	 
 2796 0a74 90BD     	 pop {r4,r7,pc}
 2797              	.L172:
 2798 0a76 00BF     	 .align 2
 2799              	.L171:
 2800 0a78 00000000 	 .word flashcalw_error_status
 2801              	 .cfi_endproc
 2802              	.LFE225:
 2804              	 .align 1
 2805              	 .global flashcalw_set_gp_fuse_byte
 2806              	 .syntax unified
 2807              	 .thumb
 2808              	 .thumb_func
 2809              	 .fpu softvfp
 2811              	flashcalw_set_gp_fuse_byte:
 2812              	.LFB226:
 982:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 983:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Sets a general-purpose fuse byte with the appropriate erase and write
 984:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         operations.
 985:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 986:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_byte The general-purpose fuse byte: \c 0 to \c 7.
 987:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of the specified general-purpose fuse byte.
 988:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 989:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active.
 990:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 991:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 992:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 993:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 994:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 995:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 996:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 997:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 998:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_set_gp_fuse_byte(uint32_t gp_fuse_byte, uint8_t value)
 999:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2813              	 .loc 1 999 0
 2814              	 .cfi_startproc
 2815              	 
 2816              	 
 2817 0a7c 80B5     	 push {r7,lr}
 2818              	.LCFI202:
 2819              	 .cfi_def_cfa_offset 8
 2820              	 .cfi_offset 7,-8
 2821              	 .cfi_offset 14,-4
 2822 0a7e 84B0     	 sub sp,sp,#16
 2823              	.LCFI203:
 2824              	 .cfi_def_cfa_offset 24
 2825 0a80 00AF     	 add r7,sp,#0
 2826              	.LCFI204:
 2827              	 .cfi_def_cfa_register 7
 2828 0a82 7860     	 str r0,[r7,#4]
 2829 0a84 0B46     	 mov r3,r1
 2830 0a86 FB70     	 strb r3,[r7,#3]
1000:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status;
1001:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1002:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	switch (value) {
 2831              	 .loc 1 1002 0
 2832 0a88 FB78     	 ldrb r3,[r7,#3]
 2833 0a8a 002B     	 cmp r3,#0
 2834 0a8c 06D0     	 beq .L175
 2835 0a8e FF2B     	 cmp r3,#255
 2836 0a90 09D1     	 bne .L178
1003:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	case 0xFF:
1004:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_gp_fuse_byte(gp_fuse_byte, false);
 2837              	 .loc 1 1004 0
 2838 0a92 0021     	 movs r1,#0
 2839 0a94 7868     	 ldr r0,[r7,#4]
 2840 0a96 FFF7FEFF 	 bl flashcalw_erase_gp_fuse_byte
1005:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		break;
 2841              	 .loc 1 1005 0
 2842 0a9a 17E0     	 b .L177
 2843              	.L175:
1006:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1007:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	case 0x00:
1008:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_gp_fuse_byte(gp_fuse_byte, 0x00);
 2844              	 .loc 1 1008 0
 2845 0a9c 0021     	 movs r1,#0
 2846 0a9e 7868     	 ldr r0,[r7,#4]
 2847 0aa0 FFF7FEFF 	 bl flashcalw_write_gp_fuse_byte
1009:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		break;
 2848              	 .loc 1 1009 0
 2849 0aa4 12E0     	 b .L177
 2850              	.L178:
1010:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1011:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	default:
1012:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_gp_fuse_byte(gp_fuse_byte, false);
 2851              	 .loc 1 1012 0
 2852 0aa6 0021     	 movs r1,#0
 2853 0aa8 7868     	 ldr r0,[r7,#4]
 2854 0aaa FFF7FEFF 	 bl flashcalw_erase_gp_fuse_byte
1013:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status = flashcalw_error_status;
 2855              	 .loc 1 1013 0
 2856 0aae 094B     	 ldr r3,.L179
 2857 0ab0 1B68     	 ldr r3,[r3]
 2858 0ab2 FB60     	 str r3,[r7,#12]
1014:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_gp_fuse_byte(gp_fuse_byte, value);
 2859              	 .loc 1 1014 0
 2860 0ab4 FB78     	 ldrb r3,[r7,#3]
 2861 0ab6 1946     	 mov r1,r3
 2862 0ab8 7868     	 ldr r0,[r7,#4]
 2863 0aba FFF7FEFF 	 bl flashcalw_write_gp_fuse_byte
1015:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_error_status |= error_status;
 2864              	 .loc 1 1015 0
 2865 0abe 054B     	 ldr r3,.L179
 2866 0ac0 1A68     	 ldr r2,[r3]
 2867 0ac2 FB68     	 ldr r3,[r7,#12]
 2868 0ac4 1343     	 orrs r3,r3,r2
 2869 0ac6 034A     	 ldr r2,.L179
 2870 0ac8 1360     	 str r3,[r2]
1016:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		break;
 2871              	 .loc 1 1016 0
 2872 0aca 00BF     	 nop
 2873              	.L177:
1017:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1018:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2874              	 .loc 1 1018 0
 2875 0acc 00BF     	 nop
 2876 0ace 1037     	 adds r7,r7,#16
 2877              	.LCFI205:
 2878              	 .cfi_def_cfa_offset 8
 2879 0ad0 BD46     	 mov sp,r7
 2880              	.LCFI206:
 2881              	 .cfi_def_cfa_register 13
 2882              	 
 2883 0ad2 80BD     	 pop {r7,pc}
 2884              	.L180:
 2885              	 .align 2
 2886              	.L179:
 2887 0ad4 00000000 	 .word flashcalw_error_status
 2888              	 .cfi_endproc
 2889              	.LFE226:
 2891              	 .align 1
 2892              	 .global flashcalw_set_all_gp_fuses
 2893              	 .syntax unified
 2894              	 .thumb
 2895              	 .thumb_func
 2896              	 .fpu softvfp
 2898              	flashcalw_set_all_gp_fuses:
 2899              	.LFB227:
1019:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1020:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Sets all general-purpose fuses with the appropriate erase and write
1021:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         operations.
1022:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1023:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of all general-purpose fuses as a word.
1024:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1025:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active.
1026:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1027:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1028:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1029:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1030:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
1031:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
1032:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
1033:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1034:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_set_all_gp_fuses(uint64_t value)
1035:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2900              	 .loc 1 1035 0
 2901              	 .cfi_startproc
 2902              	 
 2903              	 
 2904 0ad8 90B5     	 push {r4,r7,lr}
 2905              	.LCFI207:
 2906              	 .cfi_def_cfa_offset 12
 2907              	 .cfi_offset 4,-12
 2908              	 .cfi_offset 7,-8
 2909              	 .cfi_offset 14,-4
 2910 0ada 85B0     	 sub sp,sp,#20
 2911              	.LCFI208:
 2912              	 .cfi_def_cfa_offset 32
 2913 0adc 00AF     	 add r7,sp,#0
 2914              	.LCFI209:
 2915              	 .cfi_def_cfa_register 7
 2916 0ade C7E90001 	 strd r0,[r7]
1036:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status;
1037:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1038:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	switch (value) {
 2917              	 .loc 1 1038 0
 2918 0ae2 D7E90034 	 ldrd r3,[r7]
 2919 0ae6 53EA0402 	 orrs r2,r3,r4
 2920 0aea 09D0     	 beq .L183
 2921 0aec B4F1FF3F 	 cmp r4,#-1
 2922 0af0 08BF     	 it eq
 2923 0af2 B3F1FF3F 	 cmpeq r3,#-1
 2924 0af6 0AD1     	 bne .L186
1039:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/**
1040:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * use (uint64_t)-1 instead of 0xFFFFFFFFFFFFFFFFULL to avoid
1041:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * compilation warning
1042:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 */
1043:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	case (uint64_t)-1:
1044:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_all_gp_fuses(false);
 2925              	 .loc 1 1044 0
 2926 0af8 0020     	 movs r0,#0
 2927 0afa FFF7FEFF 	 bl flashcalw_erase_all_gp_fuses
1045:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		break;
 2928              	 .loc 1 1045 0
 2929 0afe 17E0     	 b .L185
 2930              	.L183:
1046:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1047:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	case (uint64_t)0:
1048:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_all_gp_fuses((uint64_t)0);
 2931              	 .loc 1 1048 0
 2932 0b00 4FF00000 	 mov r0,#0
 2933 0b04 4FF00001 	 mov r1,#0
 2934 0b08 FFF7FEFF 	 bl flashcalw_write_all_gp_fuses
1049:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		break;
 2935              	 .loc 1 1049 0
 2936 0b0c 10E0     	 b .L185
 2937              	.L186:
1050:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1051:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	default:
1052:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_all_gp_fuses(false);
 2938              	 .loc 1 1052 0
 2939 0b0e 0020     	 movs r0,#0
 2940 0b10 FFF7FEFF 	 bl flashcalw_erase_all_gp_fuses
1053:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status = flashcalw_error_status;
 2941              	 .loc 1 1053 0
 2942 0b14 084B     	 ldr r3,.L187
 2943 0b16 1B68     	 ldr r3,[r3]
 2944 0b18 FB60     	 str r3,[r7,#12]
1054:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_all_gp_fuses(value);
 2945              	 .loc 1 1054 0
 2946 0b1a D7E90001 	 ldrd r0,[r7]
 2947 0b1e FFF7FEFF 	 bl flashcalw_write_all_gp_fuses
1055:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_error_status |= error_status;
 2948              	 .loc 1 1055 0
 2949 0b22 054B     	 ldr r3,.L187
 2950 0b24 1A68     	 ldr r2,[r3]
 2951 0b26 FB68     	 ldr r3,[r7,#12]
 2952 0b28 1343     	 orrs r3,r3,r2
 2953 0b2a 034A     	 ldr r2,.L187
 2954 0b2c 1360     	 str r3,[r2]
1056:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		break;
 2955              	 .loc 1 1056 0
 2956 0b2e 00BF     	 nop
 2957              	.L185:
1057:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1058:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2958              	 .loc 1 1058 0
 2959 0b30 00BF     	 nop
 2960 0b32 1437     	 adds r7,r7,#20
 2961              	.LCFI210:
 2962              	 .cfi_def_cfa_offset 12
 2963 0b34 BD46     	 mov sp,r7
 2964              	.LCFI211:
 2965              	 .cfi_def_cfa_register 13
 2966              	 
 2967 0b36 90BD     	 pop {r4,r7,pc}
 2968              	.L188:
 2969              	 .align 2
 2970              	.L187:
 2971 0b38 00000000 	 .word flashcalw_error_status
 2972              	 .cfi_endproc
 2973              	.LFE227:
 2975              	 .align 1
 2976              	 .global flashcalw_clear_page_buffer
 2977              	 .syntax unified
 2978              	 .thumb
 2979              	 .thumb_func
 2980              	 .fpu softvfp
 2982              	flashcalw_clear_page_buffer:
 2983              	.LFB228:
1059:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1060:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @}
1061:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1062:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name Access to Flash Pages
1063:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1064:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
1065:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1066:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Clears the page buffer.
1067:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1068:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * This command resets all bits in the page buffer to one. Write accesses to the
1069:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * page buffer can only change page buffer bits from one to zero.
1070:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1071:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning The page buffer is not automatically reset after a page write.
1072:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1073:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1074:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1075:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1076:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_clear_page_buffer(void)
1077:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2984              	 .loc 1 1077 0
 2985              	 .cfi_startproc
 2986              	 
 2987              	 
 2988 0b3c 80B5     	 push {r7,lr}
 2989              	.LCFI212:
 2990              	 .cfi_def_cfa_offset 8
 2991              	 .cfi_offset 7,-8
 2992              	 .cfi_offset 14,-4
 2993 0b3e 00AF     	 add r7,sp,#0
 2994              	.LCFI213:
 2995              	 .cfi_def_cfa_register 7
1078:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_CPB, -1);
 2996              	 .loc 1 1078 0
 2997 0b40 4FF0FF31 	 mov r1,#-1
 2998 0b44 0320     	 movs r0,#3
 2999 0b46 FFF7FEFF 	 bl flashcalw_issue_command
1079:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3000              	 .loc 1 1079 0
 3001 0b4a 00BF     	 nop
 3002 0b4c 80BD     	 pop {r7,pc}
 3003              	 .cfi_endproc
 3004              	.LFE228:
 3006              	 .align 1
 3007              	 .global flashcalw_is_page_erased
 3008              	 .syntax unified
 3009              	 .thumb
 3010              	 .thumb_func
 3011              	 .fpu softvfp
 3013              	flashcalw_is_page_erased:
 3014              	.LFB229:
1080:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1081:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether the page to which the last Quick Page Read or Quick
1082:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         Page Read User Page command was applied was erased.
1083:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1084:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the page to which the last Quick Page Read or Quick Page Read
1085:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         User Page command was applied was erased.
1086:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1087:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_page_erased(void)
1088:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3015              	 .loc 1 1088 0
 3016              	 .cfi_startproc
 3017              	 
 3018              	 
 3019              	 
 3020 0b4e 80B4     	 push {r7}
 3021              	.LCFI214:
 3022              	 .cfi_def_cfa_offset 4
 3023              	 .cfi_offset 7,-4
 3024 0b50 00AF     	 add r7,sp,#0
 3025              	.LCFI215:
 3026              	 .cfi_def_cfa_register 7
1089:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FSR & FLASHCALW_FSR_QPRR) != 0);
 3027              	 .loc 1 1089 0
 3028 0b52 064B     	 ldr r3,.L192
 3029 0b54 9B68     	 ldr r3,[r3,#8]
 3030 0b56 03F02003 	 and r3,r3,#32
 3031 0b5a 002B     	 cmp r3,#0
 3032 0b5c 14BF     	 ite ne
 3033 0b5e 0123     	 movne r3,#1
 3034 0b60 0023     	 moveq r3,#0
 3035 0b62 DBB2     	 uxtb r3,r3
1090:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3036              	 .loc 1 1090 0
 3037 0b64 1846     	 mov r0,r3
 3038 0b66 BD46     	 mov sp,r7
 3039              	.LCFI216:
 3040              	 .cfi_def_cfa_register 13
 3041              	 
 3042 0b68 80BC     	 pop {r7}
 3043              	.LCFI217:
 3044              	 .cfi_restore 7
 3045              	 .cfi_def_cfa_offset 0
 3046 0b6a 7047     	 bx lr
 3047              	.L193:
 3048              	 .align 2
 3049              	.L192:
 3050 0b6c 00000A40 	 .word 1074397184
 3051              	 .cfi_endproc
 3052              	.LFE229:
 3054              	 .align 1
 3055              	 .global flashcalw_quick_page_read
 3056              	 .syntax unified
 3057              	 .thumb
 3058              	 .thumb_func
 3059              	 .fpu softvfp
 3061              	flashcalw_quick_page_read:
 3062              	.LFB230:
1091:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1092:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Applies the Quick Page Read command to a page.
1093:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1094:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param page_number The page number:
1095:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg \c 0 to <tt>(flashcalw_get_page_count() - 1)</tt>: a page number
1096:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        within the flash array;
1097:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg <tt>< 0</tt>: the current page number.
1098:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1099:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the specified page is erased.
1100:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1101:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1102:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1103:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1104:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_quick_page_read(int page_number)
1105:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3063              	 .loc 1 1105 0
 3064              	 .cfi_startproc
 3065              	 
 3066              	 
 3067 0b70 80B5     	 push {r7,lr}
 3068              	.LCFI218:
 3069              	 .cfi_def_cfa_offset 8
 3070              	 .cfi_offset 7,-8
 3071              	 .cfi_offset 14,-4
 3072 0b72 82B0     	 sub sp,sp,#8
 3073              	.LCFI219:
 3074              	 .cfi_def_cfa_offset 16
 3075 0b74 00AF     	 add r7,sp,#0
 3076              	.LCFI220:
 3077              	 .cfi_def_cfa_register 7
 3078 0b76 7860     	 str r0,[r7,#4]
1106:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_QPR, page_number);
 3079              	 .loc 1 1106 0
 3080 0b78 7968     	 ldr r1,[r7,#4]
 3081 0b7a 0C20     	 movs r0,#12
 3082 0b7c FFF7FEFF 	 bl flashcalw_issue_command
1107:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_is_page_erased();
 3083              	 .loc 1 1107 0
 3084 0b80 FFF7FEFF 	 bl flashcalw_is_page_erased
 3085 0b84 0346     	 mov r3,r0
1108:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3086              	 .loc 1 1108 0
 3087 0b86 1846     	 mov r0,r3
 3088 0b88 0837     	 adds r7,r7,#8
 3089              	.LCFI221:
 3090              	 .cfi_def_cfa_offset 8
 3091 0b8a BD46     	 mov sp,r7
 3092              	.LCFI222:
 3093              	 .cfi_def_cfa_register 13
 3094              	 
 3095 0b8c 80BD     	 pop {r7,pc}
 3096              	 .cfi_endproc
 3097              	.LFE230:
 3099              	 .align 1
 3100              	 .global flashcalw_erase_page
 3101              	 .syntax unified
 3102              	 .thumb
 3103              	 .thumb_func
 3104              	 .fpu softvfp
 3106              	flashcalw_erase_page:
 3107              	.LFB231:
1109:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1110:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Erases a page.
1111:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1112:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param page_number The page number:
1113:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg \c 0 to <tt>(flashcalw_get_page_count() - 1)</tt>: a page number
1114:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        within the flash array;
1115:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg <tt>< 0</tt>: the current page number.
1116:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param check Whether to check erase: \c true or \c false.
1117:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1118:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the erase succeeded or always \c true if erase check was not
1119:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         requested.
1120:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1121:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command is applied to a page belonging
1122:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          to a locked region or to the bootloader protected area.
1123:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1124:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1125:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1126:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1127:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
1128:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1129:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_erase_page(int page_number, bool check)
1130:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3108              	 .loc 1 1130 0
 3109              	 .cfi_startproc
 3110              	 
 3111              	 
 3112 0b8e 80B5     	 push {r7,lr}
 3113              	.LCFI223:
 3114              	 .cfi_def_cfa_offset 8
 3115              	 .cfi_offset 7,-8
 3116              	 .cfi_offset 14,-4
 3117 0b90 84B0     	 sub sp,sp,#16
 3118              	.LCFI224:
 3119              	 .cfi_def_cfa_offset 24
 3120 0b92 00AF     	 add r7,sp,#0
 3121              	.LCFI225:
 3122              	 .cfi_def_cfa_register 7
 3123 0b94 7860     	 str r0,[r7,#4]
 3124 0b96 0B46     	 mov r3,r1
 3125 0b98 FB70     	 strb r3,[r7,#3]
1131:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	bool page_erased = true;
 3126              	 .loc 1 1131 0
 3127 0b9a 0123     	 movs r3,#1
 3128 0b9c FB73     	 strb r3,[r7,#15]
1132:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1133:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_EP, page_number);
 3129              	 .loc 1 1133 0
 3130 0b9e 7968     	 ldr r1,[r7,#4]
 3131 0ba0 0220     	 movs r0,#2
 3132 0ba2 FFF7FEFF 	 bl flashcalw_issue_command
1134:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1135:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (check) {
 3133              	 .loc 1 1135 0
 3134 0ba6 FB78     	 ldrb r3,[r7,#3]
 3135 0ba8 002B     	 cmp r3,#0
 3136 0baa 0ED0     	 beq .L197
 3137              	.LBB2:
1136:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		uint32_t error_status = flashcalw_error_status;
 3138              	 .loc 1 1136 0
 3139 0bac 094B     	 ldr r3,.L199
 3140 0bae 1B68     	 ldr r3,[r3]
 3141 0bb0 BB60     	 str r3,[r7,#8]
1137:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		page_erased = flashcalw_quick_page_read(-1);
 3142              	 .loc 1 1137 0
 3143 0bb2 4FF0FF30 	 mov r0,#-1
 3144 0bb6 FFF7FEFF 	 bl flashcalw_quick_page_read
 3145 0bba 0346     	 mov r3,r0
 3146 0bbc FB73     	 strb r3,[r7,#15]
1138:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_error_status |= error_status;
 3147              	 .loc 1 1138 0
 3148 0bbe 054B     	 ldr r3,.L199
 3149 0bc0 1A68     	 ldr r2,[r3]
 3150 0bc2 BB68     	 ldr r3,[r7,#8]
 3151 0bc4 1343     	 orrs r3,r3,r2
 3152 0bc6 034A     	 ldr r2,.L199
 3153 0bc8 1360     	 str r3,[r2]
 3154              	.L197:
 3155              	.LBE2:
1139:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1140:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1141:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return page_erased;
 3156              	 .loc 1 1141 0
 3157 0bca FB7B     	 ldrb r3,[r7,#15]
1142:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3158              	 .loc 1 1142 0
 3159 0bcc 1846     	 mov r0,r3
 3160 0bce 1037     	 adds r7,r7,#16
 3161              	.LCFI226:
 3162              	 .cfi_def_cfa_offset 8
 3163 0bd0 BD46     	 mov sp,r7
 3164              	.LCFI227:
 3165              	 .cfi_def_cfa_register 13
 3166              	 
 3167 0bd2 80BD     	 pop {r7,pc}
 3168              	.L200:
 3169              	 .align 2
 3170              	.L199:
 3171 0bd4 00000000 	 .word flashcalw_error_status
 3172              	 .cfi_endproc
 3173              	.LFE231:
 3175              	 .align 1
 3176              	 .global flashcalw_erase_all_pages
 3177              	 .syntax unified
 3178              	 .thumb
 3179              	 .thumb_func
 3180              	 .fpu softvfp
 3182              	flashcalw_erase_all_pages:
 3183              	.LFB232:
1143:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1144:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Erases all pages within the flash array.
1145:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1146:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param check Whether to check erase: \c true or \c false.
1147:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1148:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the erase succeeded or always \c true if erase check was not
1149:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         requested.
1150:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1151:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if at least one region is locked or the
1152:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          bootloader protection is active.
1153:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1154:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1155:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1156:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1157:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
1158:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1159:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_erase_all_pages(bool check)
1160:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3184              	 .loc 1 1160 0
 3185              	 .cfi_startproc
 3186              	 
 3187              	 
 3188 0bd8 80B5     	 push {r7,lr}
 3189              	.LCFI228:
 3190              	 .cfi_def_cfa_offset 8
 3191              	 .cfi_offset 7,-8
 3192              	 .cfi_offset 14,-4
 3193 0bda 86B0     	 sub sp,sp,#24
 3194              	.LCFI229:
 3195              	 .cfi_def_cfa_offset 32
 3196 0bdc 00AF     	 add r7,sp,#0
 3197              	.LCFI230:
 3198              	 .cfi_def_cfa_register 7
 3199 0bde 0346     	 mov r3,r0
 3200 0be0 FB71     	 strb r3,[r7,#7]
1161:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	bool all_pages_erased = true;
 3201              	 .loc 1 1161 0
 3202 0be2 0123     	 movs r3,#1
 3203 0be4 FB75     	 strb r3,[r7,#23]
1162:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 3204              	 .loc 1 1162 0
 3205 0be6 0023     	 movs r3,#0
 3206 0be8 3B61     	 str r3,[r7,#16]
1163:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t page_number = flashcalw_get_page_count();
 3207              	 .loc 1 1163 0
 3208 0bea FFF7FEFF 	 bl flashcalw_get_page_count
 3209 0bee F860     	 str r0,[r7,#12]
1164:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1165:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (page_number) {
 3210              	 .loc 1 1165 0
 3211 0bf0 16E0     	 b .L202
 3212              	.L203:
1166:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		all_pages_erased &= flashcalw_erase_page(--page_number, check);
 3213              	 .loc 1 1166 0
 3214 0bf2 FB68     	 ldr r3,[r7,#12]
 3215 0bf4 013B     	 subs r3,r3,#1
 3216 0bf6 FB60     	 str r3,[r7,#12]
 3217 0bf8 FB68     	 ldr r3,[r7,#12]
 3218 0bfa FA79     	 ldrb r2,[r7,#7]
 3219 0bfc 1146     	 mov r1,r2
 3220 0bfe 1846     	 mov r0,r3
 3221 0c00 FFF7FEFF 	 bl flashcalw_erase_page
 3222 0c04 0346     	 mov r3,r0
 3223 0c06 1A46     	 mov r2,r3
 3224 0c08 FB7D     	 ldrb r3,[r7,#23]
 3225 0c0a 1340     	 ands r3,r3,r2
 3226 0c0c 002B     	 cmp r3,#0
 3227 0c0e 14BF     	 ite ne
 3228 0c10 0123     	 movne r3,#1
 3229 0c12 0023     	 moveq r3,#0
 3230 0c14 FB75     	 strb r3,[r7,#23]
1167:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 3231              	 .loc 1 1167 0
 3232 0c16 084B     	 ldr r3,.L205
 3233 0c18 1B68     	 ldr r3,[r3]
 3234 0c1a 3A69     	 ldr r2,[r7,#16]
 3235 0c1c 1343     	 orrs r3,r3,r2
 3236 0c1e 3B61     	 str r3,[r7,#16]
 3237              	.L202:
1165:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		all_pages_erased &= flashcalw_erase_page(--page_number, check);
 3238              	 .loc 1 1165 0
 3239 0c20 FB68     	 ldr r3,[r7,#12]
 3240 0c22 002B     	 cmp r3,#0
 3241 0c24 E5D1     	 bne .L203
1168:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1169:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1170:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 3242              	 .loc 1 1170 0
 3243 0c26 044A     	 ldr r2,.L205
 3244 0c28 3B69     	 ldr r3,[r7,#16]
 3245 0c2a 1360     	 str r3,[r2]
1171:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return all_pages_erased;
 3246              	 .loc 1 1171 0
 3247 0c2c FB7D     	 ldrb r3,[r7,#23]
1172:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3248              	 .loc 1 1172 0
 3249 0c2e 1846     	 mov r0,r3
 3250 0c30 1837     	 adds r7,r7,#24
 3251              	.LCFI231:
 3252              	 .cfi_def_cfa_offset 8
 3253 0c32 BD46     	 mov sp,r7
 3254              	.LCFI232:
 3255              	 .cfi_def_cfa_register 13
 3256              	 
 3257 0c34 80BD     	 pop {r7,pc}
 3258              	.L206:
 3259 0c36 00BF     	 .align 2
 3260              	.L205:
 3261 0c38 00000000 	 .word flashcalw_error_status
 3262              	 .cfi_endproc
 3263              	.LFE232:
 3265              	 .align 1
 3266              	 .global flashcalw_write_page
 3267              	 .syntax unified
 3268              	 .thumb
 3269              	 .thumb_func
 3270              	 .fpu softvfp
 3272              	flashcalw_write_page:
 3273              	.LFB233:
1173:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1174:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Writes a page from the page buffer.
1175:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1176:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param page_number The page number:
1177:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg \c 0 to <tt>(flashcalw_get_page_count() - 1)</tt>: a page number
1178:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        within the flash array;
1179:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg <tt>< 0</tt>: the current page number.
1180:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1181:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command is applied to a page belonging
1182:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          to a locked region or to the bootloader protected area.
1183:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1184:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning The page buffer is not automatically reset after a page write.
1185:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1186:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1187:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1188:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1189:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note A write operation can only clear bits; in other words, an erase
1190:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  operation must first be done if some bits need to be set to 1.
1191:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1192:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_write_page(int page_number)
1193:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3274              	 .loc 1 1193 0
 3275              	 .cfi_startproc
 3276              	 
 3277              	 
 3278 0c3c 80B5     	 push {r7,lr}
 3279              	.LCFI233:
 3280              	 .cfi_def_cfa_offset 8
 3281              	 .cfi_offset 7,-8
 3282              	 .cfi_offset 14,-4
 3283 0c3e 82B0     	 sub sp,sp,#8
 3284              	.LCFI234:
 3285              	 .cfi_def_cfa_offset 16
 3286 0c40 00AF     	 add r7,sp,#0
 3287              	.LCFI235:
 3288              	 .cfi_def_cfa_register 7
 3289 0c42 7860     	 str r0,[r7,#4]
1194:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_WP, page_number);
 3290              	 .loc 1 1194 0
 3291 0c44 7968     	 ldr r1,[r7,#4]
 3292 0c46 0120     	 movs r0,#1
 3293 0c48 FFF7FEFF 	 bl flashcalw_issue_command
1195:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3294              	 .loc 1 1195 0
 3295 0c4c 00BF     	 nop
 3296 0c4e 0837     	 adds r7,r7,#8
 3297              	.LCFI236:
 3298              	 .cfi_def_cfa_offset 8
 3299 0c50 BD46     	 mov sp,r7
 3300              	.LCFI237:
 3301              	 .cfi_def_cfa_register 13
 3302              	 
 3303 0c52 80BD     	 pop {r7,pc}
 3304              	 .cfi_endproc
 3305              	.LFE233:
 3307              	 .align 1
 3308              	 .global flashcalw_quick_user_page_read
 3309              	 .syntax unified
 3310              	 .thumb
 3311              	 .thumb_func
 3312              	 .fpu softvfp
 3314              	flashcalw_quick_user_page_read:
 3315              	.LFB234:
1196:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1197:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Issues a Quick Page Read User Page command to the FLASHCALW.
1198:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1199:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the User page is erased.
1200:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1201:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1202:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1203:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1204:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_quick_user_page_read(void)
1205:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3316              	 .loc 1 1205 0
 3317              	 .cfi_startproc
 3318              	 
 3319              	 
 3320 0c54 80B5     	 push {r7,lr}
 3321              	.LCFI238:
 3322              	 .cfi_def_cfa_offset 8
 3323              	 .cfi_offset 7,-8
 3324              	 .cfi_offset 14,-4
 3325 0c56 00AF     	 add r7,sp,#0
 3326              	.LCFI239:
 3327              	 .cfi_def_cfa_register 7
1206:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_QPRUP, -1);
 3328              	 .loc 1 1206 0
 3329 0c58 4FF0FF31 	 mov r1,#-1
 3330 0c5c 0F20     	 movs r0,#15
 3331 0c5e FFF7FEFF 	 bl flashcalw_issue_command
1207:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_is_page_erased();
 3332              	 .loc 1 1207 0
 3333 0c62 FFF7FEFF 	 bl flashcalw_is_page_erased
 3334 0c66 0346     	 mov r3,r0
1208:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3335              	 .loc 1 1208 0
 3336 0c68 1846     	 mov r0,r3
 3337 0c6a 80BD     	 pop {r7,pc}
 3338              	 .cfi_endproc
 3339              	.LFE234:
 3341              	 .align 1
 3342              	 .global flashcalw_erase_user_page
 3343              	 .syntax unified
 3344              	 .thumb
 3345              	 .thumb_func
 3346              	 .fpu softvfp
 3348              	flashcalw_erase_user_page:
 3349              	.LFB235:
1209:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1210:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Erases the User page.
1211:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1212:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param check Whether to check erase: \c true or \c false.
1213:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1214:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the erase succeeded or always \c true if erase check was not
1215:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         requested.
1216:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1217:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1218:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1219:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1220:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
1221:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1222:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_erase_user_page(bool check)
1223:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3350              	 .loc 1 1223 0
 3351              	 .cfi_startproc
 3352              	 
 3353              	 
 3354 0c6c 80B5     	 push {r7,lr}
 3355              	.LCFI240:
 3356              	 .cfi_def_cfa_offset 8
 3357              	 .cfi_offset 7,-8
 3358              	 .cfi_offset 14,-4
 3359 0c6e 82B0     	 sub sp,sp,#8
 3360              	.LCFI241:
 3361              	 .cfi_def_cfa_offset 16
 3362 0c70 00AF     	 add r7,sp,#0
 3363              	.LCFI242:
 3364              	 .cfi_def_cfa_register 7
 3365 0c72 0346     	 mov r3,r0
 3366 0c74 FB71     	 strb r3,[r7,#7]
1224:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_EUP, -1);
 3367              	 .loc 1 1224 0
 3368 0c76 4FF0FF31 	 mov r1,#-1
 3369 0c7a 0E20     	 movs r0,#14
 3370 0c7c FFF7FEFF 	 bl flashcalw_issue_command
1225:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (check) ? flashcalw_quick_user_page_read() : true;
 3371              	 .loc 1 1225 0
 3372 0c80 FB79     	 ldrb r3,[r7,#7]
 3373 0c82 002B     	 cmp r3,#0
 3374 0c84 04D0     	 beq .L211
 3375              	 .loc 1 1225 0 is_stmt 0 discriminator 2
 3376 0c86 FFF7FEFF 	 bl flashcalw_quick_user_page_read
 3377 0c8a 0346     	 mov r3,r0
 3378 0c8c 002B     	 cmp r3,#0
 3379 0c8e 01D0     	 beq .L212
 3380              	.L211:
 3381              	 .loc 1 1225 0 discriminator 3
 3382 0c90 0123     	 movs r3,#1
 3383 0c92 00E0     	 b .L213
 3384              	.L212:
 3385              	 .loc 1 1225 0 discriminator 4
 3386 0c94 0023     	 movs r3,#0
 3387              	.L213:
1226:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3388              	 .loc 1 1226 0 is_stmt 1 discriminator 6
 3389 0c96 1846     	 mov r0,r3
 3390 0c98 0837     	 adds r7,r7,#8
 3391              	.LCFI243:
 3392              	 .cfi_def_cfa_offset 8
 3393 0c9a BD46     	 mov sp,r7
 3394              	.LCFI244:
 3395              	 .cfi_def_cfa_register 13
 3396              	 
 3397 0c9c 80BD     	 pop {r7,pc}
 3398              	 .cfi_endproc
 3399              	.LFE235:
 3401              	 .align 1
 3402              	 .global flashcalw_write_user_page
 3403              	 .syntax unified
 3404              	 .thumb
 3405              	 .thumb_func
 3406              	 .fpu softvfp
 3408              	flashcalw_write_user_page:
 3409              	.LFB236:
1227:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1228:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Writes the User page from the page buffer.
1229:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1230:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning The page buffer is not automatically reset after a page write.
1231:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1232:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1233:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1234:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1235:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note A write operation can only clear bits; in other words, an erase
1236:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  operation must first be done if some bits need to be set to 1.
1237:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1238:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_write_user_page(void)
1239:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3410              	 .loc 1 1239 0
 3411              	 .cfi_startproc
 3412              	 
 3413              	 
 3414 0c9e 80B5     	 push {r7,lr}
 3415              	.LCFI245:
 3416              	 .cfi_def_cfa_offset 8
 3417              	 .cfi_offset 7,-8
 3418              	 .cfi_offset 14,-4
 3419 0ca0 00AF     	 add r7,sp,#0
 3420              	.LCFI246:
 3421              	 .cfi_def_cfa_register 7
1240:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_WUP, -1);
 3422              	 .loc 1 1240 0
 3423 0ca2 4FF0FF31 	 mov r1,#-1
 3424 0ca6 0D20     	 movs r0,#13
 3425 0ca8 FFF7FEFF 	 bl flashcalw_issue_command
1241:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3426              	 .loc 1 1241 0
 3427 0cac 00BF     	 nop
 3428 0cae 80BD     	 pop {r7,pc}
 3429              	 .cfi_endproc
 3430              	.LFE236:
 3432              	 .align 1
 3433              	 .global flashcalw_memset8
 3434              	 .syntax unified
 3435              	 .thumb
 3436              	 .thumb_func
 3437              	 .fpu softvfp
 3439              	flashcalw_memset8:
 3440              	.LFB237:
1242:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1243:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Copies \a nbytes bytes to the flash destination pointed to by \a dst
1244:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         from the repeated \a src source byte.
1245:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1246:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * All pointer and size alignments are supported.
1247:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1248:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param dst Pointer to flash destination.
1249:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param src Source byte.
1250:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param nbytes Number of bytes to set.
1251:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param erase Whether to erase before writing: \c true or \c false.
1252:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1253:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of \a dst.
1254:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1255:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning This function may be called with \a erase set to \c false only if
1256:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          the destination consists only of erased words, i.e. this function
1257:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          cannot be used to write only one bit of a previously written word.
1258:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          E.g., if \c 0x00000001 then \c 0xFFFFFFFE are written to a word, the
1259:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          resulting value in flash may be different from \c 0x00000000.
1260:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1261:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command is applied to pages belonging
1262:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          to a locked region or to the bootloader protected area.
1263:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1264:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1265:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1266:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1267:../../../platform/sam/drivers/flashcalw/flashcalw.c **** volatile void *flashcalw_memset8(volatile void *dst, uint8_t src, size_t nbytes,
1268:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		bool erase)
1269:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3441              	 .loc 1 1269 0
 3442              	 .cfi_startproc
 3443              	 
 3444              	 
 3445 0cb0 80B5     	 push {r7,lr}
 3446              	.LCFI247:
 3447              	 .cfi_def_cfa_offset 8
 3448              	 .cfi_offset 7,-8
 3449              	 .cfi_offset 14,-4
 3450 0cb2 84B0     	 sub sp,sp,#16
 3451              	.LCFI248:
 3452              	 .cfi_def_cfa_offset 24
 3453 0cb4 00AF     	 add r7,sp,#0
 3454              	.LCFI249:
 3455              	 .cfi_def_cfa_register 7
 3456 0cb6 F860     	 str r0,[r7,#12]
 3457 0cb8 7A60     	 str r2,[r7,#4]
 3458 0cba 1A46     	 mov r2,r3
 3459 0cbc 0B46     	 mov r3,r1
 3460 0cbe FB72     	 strb r3,[r7,#11]
 3461 0cc0 1346     	 mov r3,r2
 3462 0cc2 BB72     	 strb r3,[r7,#10]
1270:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_memset16(dst, src | (uint16_t)src << 8, nbytes, erase);
 3463              	 .loc 1 1270 0
 3464 0cc4 FB7A     	 ldrb r3,[r7,#11]
 3465 0cc6 1AB2     	 sxth r2,r3
 3466 0cc8 FB7A     	 ldrb r3,[r7,#11]
 3467 0cca 1B02     	 lsls r3,r3,#8
 3468 0ccc 1BB2     	 sxth r3,r3
 3469 0cce 1343     	 orrs r3,r3,r2
 3470 0cd0 1BB2     	 sxth r3,r3
 3471 0cd2 99B2     	 uxth r1,r3
 3472 0cd4 BB7A     	 ldrb r3,[r7,#10]
 3473 0cd6 7A68     	 ldr r2,[r7,#4]
 3474 0cd8 F868     	 ldr r0,[r7,#12]
 3475 0cda FFF7FEFF 	 bl flashcalw_memset16
 3476 0cde 0346     	 mov r3,r0
1271:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3477              	 .loc 1 1271 0
 3478 0ce0 1846     	 mov r0,r3
 3479 0ce2 1037     	 adds r7,r7,#16
 3480              	.LCFI250:
 3481              	 .cfi_def_cfa_offset 8
 3482 0ce4 BD46     	 mov sp,r7
 3483              	.LCFI251:
 3484              	 .cfi_def_cfa_register 13
 3485              	 
 3486 0ce6 80BD     	 pop {r7,pc}
 3487              	 .cfi_endproc
 3488              	.LFE237:
 3490              	 .align 1
 3491              	 .global flashcalw_memset16
 3492              	 .syntax unified
 3493              	 .thumb
 3494              	 .thumb_func
 3495              	 .fpu softvfp
 3497              	flashcalw_memset16:
 3498              	.LFB238:
1272:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1273:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Copies \a nbytes bytes to the flash destination pointed to by \a dst
1274:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         from the repeated \a src big-endian source half-word.
1275:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1276:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * All pointer and size alignments are supported.
1277:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1278:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param dst Pointer to flash destination.
1279:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param src Source half-word.
1280:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param nbytes Number of bytes to set.
1281:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param erase Whether to erase before writing: \c true or \c false.
1282:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1283:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of \a dst.
1284:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1285:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning This function may be called with \a erase set to \c false only if
1286:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          the destination consists only of erased words, i.e. this function
1287:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          can not be used to write only one bit of a previously written word.
1288:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          E.g., if \c 0x00000001 then \c 0xFFFFFFFE are written to a word, the
1289:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          resulting value in flash may be different from \c 0x00000000.
1290:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1291:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command is applied to pages belonging
1292:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          to a locked region or to the bootloader protected area.
1293:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1294:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1295:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1296:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1297:../../../platform/sam/drivers/flashcalw/flashcalw.c **** volatile void *flashcalw_memset16(volatile void *dst, uint16_t src,
1298:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		size_t nbytes, bool erase)
1299:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3499              	 .loc 1 1299 0
 3500              	 .cfi_startproc
 3501              	 
 3502              	 
 3503 0ce8 80B5     	 push {r7,lr}
 3504              	.LCFI252:
 3505              	 .cfi_def_cfa_offset 8
 3506              	 .cfi_offset 7,-8
 3507              	 .cfi_offset 14,-4
 3508 0cea 84B0     	 sub sp,sp,#16
 3509              	.LCFI253:
 3510              	 .cfi_def_cfa_offset 24
 3511 0cec 00AF     	 add r7,sp,#0
 3512              	.LCFI254:
 3513              	 .cfi_def_cfa_register 7
 3514 0cee F860     	 str r0,[r7,#12]
 3515 0cf0 7A60     	 str r2,[r7,#4]
 3516 0cf2 1A46     	 mov r2,r3
 3517 0cf4 0B46     	 mov r3,r1
 3518 0cf6 7B81     	 strh r3,[r7,#10]
 3519 0cf8 1346     	 mov r3,r2
 3520 0cfa 7B72     	 strb r3,[r7,#9]
1300:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_memset32(dst, src | (uint32_t)src << 16, nbytes,
 3521              	 .loc 1 1300 0
 3522 0cfc 7A89     	 ldrh r2,[r7,#10]
 3523 0cfe 7B89     	 ldrh r3,[r7,#10]
 3524 0d00 1B04     	 lsls r3,r3,#16
 3525 0d02 42EA0301 	 orr r1,r2,r3
 3526 0d06 7B7A     	 ldrb r3,[r7,#9]
 3527 0d08 7A68     	 ldr r2,[r7,#4]
 3528 0d0a F868     	 ldr r0,[r7,#12]
 3529 0d0c FFF7FEFF 	 bl flashcalw_memset32
 3530 0d10 0346     	 mov r3,r0
1301:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			erase);
1302:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3531              	 .loc 1 1302 0
 3532 0d12 1846     	 mov r0,r3
 3533 0d14 1037     	 adds r7,r7,#16
 3534              	.LCFI255:
 3535              	 .cfi_def_cfa_offset 8
 3536 0d16 BD46     	 mov sp,r7
 3537              	.LCFI256:
 3538              	 .cfi_def_cfa_register 13
 3539              	 
 3540 0d18 80BD     	 pop {r7,pc}
 3541              	 .cfi_endproc
 3542              	.LFE238:
 3544              	 .align 1
 3545              	 .global flashcalw_memset32
 3546              	 .syntax unified
 3547              	 .thumb
 3548              	 .thumb_func
 3549              	 .fpu softvfp
 3551              	flashcalw_memset32:
 3552              	.LFB239:
1303:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1304:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Copies \a nbytes bytes to the flash destination pointed to by \a dst
1305:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         from the repeated \a src big-endian source word.
1306:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1307:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * All pointer and size alignments are supported.
1308:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1309:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param dst Pointer to flash destination.
1310:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param src Source word.
1311:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param nbytes Number of bytes to set.
1312:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param erase Whether to erase before writing: \c true or \c false.
1313:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1314:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of \a dst.
1315:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1316:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning This function may be called with \a erase set to \c false only if
1317:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          the destination consists only of erased words, i.e. this function
1318:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          can not be used to write only one bit of a previously written word.
1319:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          E.g., if \c 0x00000001 then \c 0xFFFFFFFE are written to a word, the
1320:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          resulting value in flash may be different from \c 0x00000000.
1321:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1322:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command is applied to pages belonging
1323:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          to a locked region or to the bootloader protected area.
1324:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1325:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1326:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1327:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1328:../../../platform/sam/drivers/flashcalw/flashcalw.c **** volatile void *flashcalw_memset32(volatile void *dst, uint32_t src,
1329:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		size_t nbytes, bool erase)
1330:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3553              	 .loc 1 1330 0
 3554              	 .cfi_startproc
 3555              	 
 3556              	 
 3557 0d1a B0B5     	 push {r4,r5,r7,lr}
 3558              	.LCFI257:
 3559              	 .cfi_def_cfa_offset 16
 3560              	 .cfi_offset 4,-16
 3561              	 .cfi_offset 5,-12
 3562              	 .cfi_offset 7,-8
 3563              	 .cfi_offset 14,-4
 3564 0d1c 86B0     	 sub sp,sp,#24
 3565              	.LCFI258:
 3566              	 .cfi_def_cfa_offset 40
 3567 0d1e 02AF     	 add r7,sp,#8
 3568              	.LCFI259:
 3569              	 .cfi_def_cfa 7,32
 3570 0d20 F860     	 str r0,[r7,#12]
 3571 0d22 B960     	 str r1,[r7,#8]
 3572 0d24 7A60     	 str r2,[r7,#4]
 3573 0d26 FB70     	 strb r3,[r7,#3]
1331:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_memset64(dst, src | (uint64_t)src << 32, nbytes,
 3574              	 .loc 1 1331 0
 3575 0d28 BB68     	 ldr r3,[r7,#8]
 3576 0d2a 1A46     	 mov r2,r3
 3577 0d2c 4FF00003 	 mov r3,#0
 3578 0d30 B968     	 ldr r1,[r7,#8]
 3579 0d32 0846     	 mov r0,r1
 3580 0d34 4FF00001 	 mov r1,#0
 3581 0d38 0500     	 movs r5,r0
 3582 0d3a 0024     	 movs r4,#0
 3583 0d3c 42EA0400 	 orr r0,r2,r4
 3584 0d40 43EA0501 	 orr r1,r3,r5
 3585 0d44 0346     	 mov r3,r0
 3586 0d46 0C46     	 mov r4,r1
 3587 0d48 FA78     	 ldrb r2,[r7,#3]
 3588 0d4a 0192     	 str r2,[sp,#4]
 3589 0d4c 7A68     	 ldr r2,[r7,#4]
 3590 0d4e 0092     	 str r2,[sp]
 3591 0d50 1A46     	 mov r2,r3
 3592 0d52 2346     	 mov r3,r4
 3593 0d54 F868     	 ldr r0,[r7,#12]
 3594 0d56 FFF7FEFF 	 bl flashcalw_memset64
 3595 0d5a 0346     	 mov r3,r0
1332:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			erase);
1333:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3596              	 .loc 1 1333 0
 3597 0d5c 1846     	 mov r0,r3
 3598 0d5e 1037     	 adds r7,r7,#16
 3599              	.LCFI260:
 3600              	 .cfi_def_cfa_offset 16
 3601 0d60 BD46     	 mov sp,r7
 3602              	.LCFI261:
 3603              	 .cfi_def_cfa_register 13
 3604              	 
 3605 0d62 B0BD     	 pop {r4,r5,r7,pc}
 3606              	 .cfi_endproc
 3607              	.LFE239:
 3609              	 .align 1
 3610              	 .global flashcalw_memset64
 3611              	 .syntax unified
 3612              	 .thumb
 3613              	 .thumb_func
 3614              	 .fpu softvfp
 3616              	flashcalw_memset64:
 3617              	.LFB240:
1334:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1335:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Copies \a nbytes bytes to the flash destination pointed to by \a dst
1336:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         from the repeated \a src big-endian source double-word.
1337:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1338:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * All pointer and size alignments are supported.
1339:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1340:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param dst Pointer to flash destination.
1341:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param src Source double-word.
1342:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param nbytes Number of bytes to set.
1343:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param erase Whether to erase before writing: \c true or \c false.
1344:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1345:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of \a dst.
1346:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1347:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning This function may be called with \a erase set to \c false only if
1348:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          the destination consists only of erased words, i.e. this function
1349:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          can not be used to write only one bit of a previously written word.
1350:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          E.g., if \c 0x00000001 then \c 0xFFFFFFFE are written to a word, the
1351:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          resulting value in flash may be different from \c 0x00000000.
1352:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1353:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command is applied to pages belonging
1354:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          to a locked region or to the bootloader protected area.
1355:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1356:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1357:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1358:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1359:../../../platform/sam/drivers/flashcalw/flashcalw.c **** volatile void *flashcalw_memset64(volatile void *dst, uint64_t src,
1360:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		size_t nbytes, bool erase)
1361:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3618              	 .loc 1 1361 0
 3619              	 .cfi_startproc
 3620              	 
 3621              	 
 3622 0d64 B0B5     	 push {r4,r5,r7,lr}
 3623              	.LCFI262:
 3624              	 .cfi_def_cfa_offset 16
 3625              	 .cfi_offset 4,-16
 3626              	 .cfi_offset 5,-12
 3627              	 .cfi_offset 7,-8
 3628              	 .cfi_offset 14,-4
 3629 0d66 9AB0     	 sub sp,sp,#104
 3630              	.LCFI263:
 3631              	 .cfi_def_cfa_offset 120
 3632 0d68 00AF     	 add r7,sp,#0
 3633              	.LCFI264:
 3634              	 .cfi_def_cfa_register 7
 3635 0d6a F860     	 str r0,[r7,#12]
 3636 0d6c C7E90023 	 strd r2,[r7]
1362:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Use aggregated pointers to have several alignments available for a
1363:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * same address. */
1364:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	UnionCVPtr flash_array_end;
1365:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	UnionVPtr dest;
1366:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	Union64 source = {0};
 3637              	 .loc 1 1366 0
 3638 0d70 4FF00002 	 mov r2,#0
 3639 0d74 4FF00003 	 mov r3,#0
 3640 0d78 C7E91223 	 strd r2,[r7,#72]
1367:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	StructCVPtr dest_end;
1368:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	UnionCVPtr flash_page_source_end;
1369:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	bool incomplete_flash_page_end;
1370:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	Union64 flash_dword;
1371:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	UnionVPtr tmp;
1372:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 3641              	 .loc 1 1372 0
 3642 0d7c 0023     	 movs r3,#0
 3643 0d7e 7B66     	 str r3,[r7,#100]
1373:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t i;
1374:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1375:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Reformat arguments. */
1376:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flash_array_end.u8ptr = ((uint8_t *)FLASH_ADDR)
1377:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			+ flashcalw_get_flash_size();
 3644              	 .loc 1 1377 0
 3645 0d80 FFF7FEFF 	 bl flashcalw_get_flash_size
 3646 0d84 0346     	 mov r3,r0
1376:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			+ flashcalw_get_flash_size();
 3647              	 .loc 1 1376 0
 3648 0d86 BB65     	 str r3,[r7,#88]
1378:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	dest.u8ptr = dst;
 3649              	 .loc 1 1378 0
 3650 0d88 FB68     	 ldr r3,[r7,#12]
 3651 0d8a 7B65     	 str r3,[r7,#84]
1379:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	for (i = (Get_align((uint32_t)dest.u8ptr, sizeof(uint64_t)) - 1)
 3652              	 .loc 1 1379 0
 3653 0d8c 7B6D     	 ldr r3,[r7,#84]
1380:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			& (sizeof(uint64_t) - 1); src;
 3654              	 .loc 1 1380 0
 3655 0d8e 013B     	 subs r3,r3,#1
1379:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	for (i = (Get_align((uint32_t)dest.u8ptr, sizeof(uint64_t)) - 1)
 3656              	 .loc 1 1379 0
 3657 0d90 03F00703 	 and r3,r3,#7
 3658 0d94 3B66     	 str r3,[r7,#96]
 3659 0d96 13E0     	 b .L223
 3660              	.L224:
1381:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			i = (i - 1) & (sizeof(uint64_t) - 1)) {
1382:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		source.u8[i] = src;
 3661              	 .loc 1 1382 0
 3662 0d98 3978     	 ldrb r1,[r7]
 3663 0d9a 07F14802 	 add r2,r7,#72
 3664 0d9e 3B6E     	 ldr r3,[r7,#96]
 3665 0da0 1344     	 add r3,r3,r2
 3666 0da2 0A46     	 mov r2,r1
 3667 0da4 1A70     	 strb r2,[r3]
1383:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		src >>= 8;
 3668              	 .loc 1 1383 0
 3669 0da6 D7E90023 	 ldrd r2,[r7]
 3670 0daa 140A     	 lsrs r4,r2,#8
 3671 0dac 44EA0364 	 orr r4,r4,r3,lsl#24
 3672 0db0 1D0A     	 lsrs r5,r3,#8
 3673 0db2 C7E90045 	 strd r4,[r7]
1381:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			i = (i - 1) & (sizeof(uint64_t) - 1)) {
 3674              	 .loc 1 1381 0
 3675 0db6 3B6E     	 ldr r3,[r7,#96]
 3676 0db8 013B     	 subs r3,r3,#1
 3677 0dba 03F00703 	 and r3,r3,#7
 3678 0dbe 3B66     	 str r3,[r7,#96]
 3679              	.L223:
1379:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			& (sizeof(uint64_t) - 1); src;
 3680              	 .loc 1 1379 0 discriminator 1
 3681 0dc0 D7E90023 	 ldrd r2,[r7]
 3682 0dc4 1343     	 orrs r3,r2,r3
 3683 0dc6 E7D1     	 bne .L224
1384:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1385:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	dest_end.u8ptr = dest.u8ptr + nbytes;
 3684              	 .loc 1 1385 0
 3685 0dc8 7A6D     	 ldr r2,[r7,#84]
 3686 0dca BB6F     	 ldr r3,[r7,#120]
 3687 0dcc 1344     	 add r3,r3,r2
 3688 0dce 7B64     	 str r3,[r7,#68]
1386:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1387:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* If destination is outside flash, go to next flash page if any. */
1388:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (dest.u8ptr < (uint8_t *)FLASH_ADDR) {
1389:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		dest.u8ptr = (uint8_t *)FLASH_ADDR;
1390:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	} else if (flash_array_end.u8ptr <= dest.u8ptr &&
 3689              	 .loc 1 1390 0
 3690 0dd0 BA6D     	 ldr r2,[r7,#88]
 3691 0dd2 7B6D     	 ldr r3,[r7,#84]
 3692 0dd4 9A42     	 cmp r2,r3
 3693 0dd6 06D8     	 bhi .L225
1391:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			dest.u8ptr < (uint8_t *)FLASH_USER_PAGE_ADDR) {
 3694              	 .loc 1 1391 0 discriminator 1
 3695 0dd8 7B6D     	 ldr r3,[r7,#84]
1390:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			dest.u8ptr < (uint8_t *)FLASH_USER_PAGE_ADDR) {
 3696              	 .loc 1 1390 0 discriminator 1
 3697 0dda B3F5000F 	 cmp r3,#8388608
 3698 0dde 02D2     	 bcs .L225
1392:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		dest.u8ptr = (uint8_t *)FLASH_USER_PAGE_ADDR;
 3699              	 .loc 1 1392 0
 3700 0de0 4FF40003 	 mov r3,#8388608
 3701 0de4 7B65     	 str r3,[r7,#84]
 3702              	.L225:
1393:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1394:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1395:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* If end of destination is outside flash, move it to the end of the
1396:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * previous flash page if any. */
1397:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (dest_end.u8ptr >
 3703              	 .loc 1 1397 0
 3704 0de6 7B6C     	 ldr r3,[r7,#68]
 3705 0de8 A14A     	 ldr r2,.L250
 3706 0dea 9342     	 cmp r3,r2
 3707 0dec 02D9     	 bls .L226
1398:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			(((uint8_t *)FLASH_USER_PAGE_ADDR) + FLASH_PAGE_SIZE)) {
1399:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		dest_end.u8ptr = (uint8_t *)FLASH_USER_PAGE_ADDR
 3708              	 .loc 1 1399 0
 3709 0dee A04B     	 ldr r3,.L250
 3710 0df0 7B64     	 str r3,[r7,#68]
 3711 0df2 09E0     	 b .L227
 3712              	.L226:
1400:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				+ FLASH_PAGE_SIZE;
1401:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	} else if ((uint8_t *)FLASH_USER_PAGE_ADDR >= dest_end.u8ptr &&
 3713              	 .loc 1 1401 0
 3714 0df4 7B6C     	 ldr r3,[r7,#68]
 3715 0df6 B3F5000F 	 cmp r3,#8388608
 3716 0dfa 05D8     	 bhi .L227
1402:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			dest_end.u8ptr > flash_array_end.u8ptr) {
 3717              	 .loc 1 1402 0 discriminator 1
 3718 0dfc 7A6C     	 ldr r2,[r7,#68]
 3719 0dfe BB6D     	 ldr r3,[r7,#88]
1401:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			dest_end.u8ptr > flash_array_end.u8ptr) {
 3720              	 .loc 1 1401 0 discriminator 1
 3721 0e00 9A42     	 cmp r2,r3
 3722 0e02 01D9     	 bls .L227
1403:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		dest_end.u8ptr = flash_array_end.u8ptr;
 3723              	 .loc 1 1403 0
 3724 0e04 BB6D     	 ldr r3,[r7,#88]
 3725 0e06 7B64     	 str r3,[r7,#68]
 3726              	.L227:
1404:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1405:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1406:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Align each end of destination pointer with its natural boundary. */
1407:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	dest_end.u16ptr = (uint16_t *)Align_down((uint32_t)dest_end.u8ptr,
 3727              	 .loc 1 1407 0
 3728 0e08 7B6C     	 ldr r3,[r7,#68]
 3729 0e0a 23F00103 	 bic r3,r3,#1
 3730 0e0e FB63     	 str r3,[r7,#60]
1408:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			sizeof(uint16_t));
1409:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	dest_end.u32ptr = (uint32_t *)Align_down((uint32_t)dest_end.u16ptr,
 3731              	 .loc 1 1409 0
 3732 0e10 FB6B     	 ldr r3,[r7,#60]
 3733 0e12 23F00303 	 bic r3,r3,#3
 3734 0e16 7B63     	 str r3,[r7,#52]
1410:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			sizeof(uint32_t));
1411:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	dest_end.u64ptr = (uint64_t *)Align_down((uint32_t)dest_end.u32ptr,
 3735              	 .loc 1 1411 0
 3736 0e18 7B6B     	 ldr r3,[r7,#52]
 3737 0e1a 23F00703 	 bic r3,r3,#7
 3738 0e1e FB62     	 str r3,[r7,#44]
1412:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			sizeof(uint64_t));
1413:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1414:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* While end of destination is not reached... */
1415:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (dest.u8ptr < dest_end.u8ptr) {
 3739              	 .loc 1 1415 0
 3740 0e20 18E1     	 b .L228
 3741              	.L248:
1416:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Clear the page buffer in order to prepare data for a flash
1417:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		 * page write. */
1418:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_clear_page_buffer();
 3742              	 .loc 1 1418 0
 3743 0e22 FFF7FEFF 	 bl flashcalw_clear_page_buffer
1419:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 3744              	 .loc 1 1419 0
 3745 0e26 934B     	 ldr r3,.L250+4
 3746 0e28 1B68     	 ldr r3,[r3]
 3747 0e2a 7A6E     	 ldr r2,[r7,#100]
 3748 0e2c 1343     	 orrs r3,r3,r2
 3749 0e2e 7B66     	 str r3,[r7,#100]
1420:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1421:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Determine where the source data will end in the current flash
1422:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		 * page. */
1423:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flash_page_source_end.u64ptr
1424:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			= (uint64_t *)Min((uint32_t)dest_end.u64ptr,
 3750              	 .loc 1 1424 0
 3751 0e30 FB6A     	 ldr r3,[r7,#44]
 3752 0e32 1A46     	 mov r2,r3
 3753 0e34 7B6D     	 ldr r3,[r7,#84]
 3754 0e36 23F4FF73 	 bic r3,r3,#510
 3755 0e3a 23F00103 	 bic r3,r3,#1
 3756 0e3e 03F50073 	 add r3,r3,#512
 3757 0e42 9A42     	 cmp r2,r3
 3758 0e44 01D2     	 bcs .L229
 3759              	 .loc 1 1424 0 is_stmt 0 discriminator 1
 3760 0e46 FB6A     	 ldr r3,[r7,#44]
 3761 0e48 06E0     	 b .L230
 3762              	.L229:
 3763              	 .loc 1 1424 0 discriminator 2
 3764 0e4a 7B6D     	 ldr r3,[r7,#84]
 3765 0e4c 23F4FF73 	 bic r3,r3,#510
 3766 0e50 23F00103 	 bic r3,r3,#1
 3767 0e54 03F50073 	 add r3,r3,#512
 3768              	.L230:
 3769              	 .loc 1 1424 0 discriminator 4
 3770 0e58 7B62     	 str r3,[r7,#36]
1425:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				Align_down((uint32_t)dest.u8ptr,
1426:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				(uint32_t)FLASH_PAGE_SIZE) + FLASH_PAGE_SIZE);
1427:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1428:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Determine if the current destination page has an incomplete
1429:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		 * end. */
1430:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		incomplete_flash_page_end
1431:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			= (Align_down((uint32_t)dest.u8ptr,
 3771              	 .loc 1 1431 0 is_stmt 1 discriminator 4
 3772 0e5a 7B6D     	 ldr r3,[r7,#84]
 3773 0e5c 23F4FF72 	 bic r2,r3,#510
 3774 0e60 22F00102 	 bic r2,r2,#1
1432:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				(uint32_t)FLASH_PAGE_SIZE)
1433:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				>= Align_down((uint32_t)dest_end.u8ptr,
 3775              	 .loc 1 1433 0 discriminator 4
 3776 0e64 7B6C     	 ldr r3,[r7,#68]
 3777 0e66 23F4FF73 	 bic r3,r3,#510
 3778 0e6a 23F00103 	 bic r3,r3,#1
1431:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				(uint32_t)FLASH_PAGE_SIZE)
 3779              	 .loc 1 1431 0 discriminator 4
 3780 0e6e 9A42     	 cmp r2,r3
 3781 0e70 2CBF     	 ite cs
 3782 0e72 0123     	 movcs r3,#1
 3783 0e74 0023     	 movcc r3,#0
 3784 0e76 87F85F30 	 strb r3,[r7,#95]
1434:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				(uint32_t)FLASH_PAGE_SIZE));
1435:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1436:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Use a flash double-word buffer to manage unaligned accesses. */
1437:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flash_dword.u64 = source.u64;
 3785              	 .loc 1 1437 0 discriminator 4
 3786 0e7a D7E91234 	 ldrd r3,[r7,#72]
 3787 0e7e C7E90634 	 strd r3,[r7,#24]
1438:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1439:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* If destination does not point to the beginning of the current
1440:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		 * flash page... */
1441:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (!Test_align((uint32_t)dest.u8ptr, FLASH_PAGE_SIZE)) {
 3788              	 .loc 1 1441 0 discriminator 4
 3789 0e82 7B6D     	 ldr r3,[r7,#84]
 3790 0e84 C3F30803 	 ubfx r3,r3,#0,#9
 3791 0e88 002B     	 cmp r3,#0
 3792 0e8a 4FD0     	 beq .L231
1442:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Fill the beginning of the page buffer with the
1443:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * current flash page data.
1444:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * This is required by the hardware, even if page erase
1445:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * is not requested, in order to be able to write
1446:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * successfully to erased parts of flash pages that have
1447:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * already been written to. */
1448:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			for (tmp.u8ptr = (uint8_t *)Align_down((uint32_t)dest.u8ptr,
 3793              	 .loc 1 1448 0
 3794 0e8c 7B6D     	 ldr r3,[r7,#84]
 3795 0e8e 23F4FF73 	 bic r3,r3,#510
 3796 0e92 23F00103 	 bic r3,r3,#1
 3797 0e96 7B61     	 str r3,[r7,#20]
 3798 0e98 0BE0     	 b .L232
 3799              	.L233:
1449:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 							(uint32_t)FLASH_PAGE_SIZE);
1450:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					tmp.u64ptr < (uint64_t *)Align_down(
1451:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					(uint32_t)dest.u8ptr,
1452:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					sizeof(uint64_t));
1453:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					tmp.u64ptr++) {
1454:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				*tmp.u32ptr = *tmp.u32ptr;
 3800              	 .loc 1 1454 0
 3801 0e9a 7B69     	 ldr r3,[r7,#20]
 3802 0e9c 7A69     	 ldr r2,[r7,#20]
 3803 0e9e 1268     	 ldr r2,[r2]
 3804 0ea0 1A60     	 str r2,[r3]
1455:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				*(tmp.u32ptr + 1) = *(tmp.u32ptr + 1);
 3805              	 .loc 1 1455 0
 3806 0ea2 7B69     	 ldr r3,[r7,#20]
 3807 0ea4 0433     	 adds r3,r3,#4
 3808 0ea6 7A69     	 ldr r2,[r7,#20]
 3809 0ea8 5268     	 ldr r2,[r2,#4]
 3810 0eaa 1A60     	 str r2,[r3]
1453:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				*tmp.u32ptr = *tmp.u32ptr;
 3811              	 .loc 1 1453 0
 3812 0eac 7B69     	 ldr r3,[r7,#20]
 3813 0eae 0833     	 adds r3,r3,#8
 3814 0eb0 7B61     	 str r3,[r7,#20]
 3815              	.L232:
1450:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					(uint32_t)dest.u8ptr,
 3816              	 .loc 1 1450 0 discriminator 1
 3817 0eb2 7B69     	 ldr r3,[r7,#20]
 3818 0eb4 7A6D     	 ldr r2,[r7,#84]
 3819 0eb6 22F00702 	 bic r2,r2,#7
1448:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 							(uint32_t)FLASH_PAGE_SIZE);
 3820              	 .loc 1 1448 0 discriminator 1
 3821 0eba 9342     	 cmp r3,r2
 3822 0ebc EDD3     	 bcc .L233
1456:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
1457:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1458:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* If destination is not 64-bit aligned... */
1459:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			if (!Test_align((uint32_t)dest.u8ptr,
 3823              	 .loc 1 1459 0
 3824 0ebe 7B6D     	 ldr r3,[r7,#84]
 3825 0ec0 03F00703 	 and r3,r3,#7
 3826 0ec4 002B     	 cmp r3,#0
 3827 0ec6 31D0     	 beq .L231
1460:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					sizeof(uint64_t))) {
1461:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* Fill the beginning of the flash double-word
1462:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * buffer with the current flash page data.
1463:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * This is required by the hardware, even if
1464:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * page erase is not requested, in order to be
1465:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * able to write successfully to erased parts
1466:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * of flash pages that have already been written
1467:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * to. */
1468:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				for (i = 0; i < Get_align((uint32_t)dest.u8ptr,
 3828              	 .loc 1 1468 0
 3829 0ec8 0023     	 movs r3,#0
 3830 0eca 3B66     	 str r3,[r7,#96]
 3831 0ecc 0DE0     	 b .L234
 3832              	.L235:
1469:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						sizeof(uint64_t)); i++) {
1470:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					flash_dword.u8[i] = *tmp.u8ptr++;
 3833              	 .loc 1 1470 0
 3834 0ece 7B69     	 ldr r3,[r7,#20]
 3835 0ed0 5A1C     	 adds r2,r3,#1
 3836 0ed2 7A61     	 str r2,[r7,#20]
 3837 0ed4 1B78     	 ldrb r3,[r3]
 3838 0ed6 D9B2     	 uxtb r1,r3
 3839 0ed8 07F11802 	 add r2,r7,#24
 3840 0edc 3B6E     	 ldr r3,[r7,#96]
 3841 0ede 1344     	 add r3,r3,r2
 3842 0ee0 0A46     	 mov r2,r1
 3843 0ee2 1A70     	 strb r2,[r3]
1469:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						sizeof(uint64_t)); i++) {
 3844              	 .loc 1 1469 0
 3845 0ee4 3B6E     	 ldr r3,[r7,#96]
 3846 0ee6 0133     	 adds r3,r3,#1
 3847 0ee8 3B66     	 str r3,[r7,#96]
 3848              	.L234:
1468:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						sizeof(uint64_t)); i++) {
 3849              	 .loc 1 1468 0 discriminator 1
 3850 0eea 7B6D     	 ldr r3,[r7,#84]
 3851 0eec 03F00702 	 and r2,r3,#7
 3852 0ef0 3B6E     	 ldr r3,[r7,#96]
 3853 0ef2 9A42     	 cmp r2,r3
 3854 0ef4 EBD8     	 bhi .L235
1471:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				}
1472:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1473:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* Align the destination pointer with its 64-bit
1474:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * boundary. */
1475:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				dest.u64ptr = (uint64_t *)Align_down((uint32_t)dest.u8ptr,
 3855              	 .loc 1 1475 0
 3856 0ef6 7B6D     	 ldr r3,[r7,#84]
 3857 0ef8 23F00703 	 bic r3,r3,#7
 3858 0efc 7B65     	 str r3,[r7,#84]
1476:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						sizeof(uint64_t));
1477:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1478:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* If the current destination double-word is not
1479:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * the last one... */
1480:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				if (dest.u64ptr < dest_end.u64ptr) {
 3859              	 .loc 1 1480 0
 3860 0efe 7A6D     	 ldr r2,[r7,#84]
 3861 0f00 FB6A     	 ldr r3,[r7,#44]
 3862 0f02 9A42     	 cmp r2,r3
 3863 0f04 12D2     	 bcs .L231
1481:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					/* Workaround for corrupted data after page write
1482:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					 * operations */
1483:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					*(volatile uint64_t*)((uint32_t)dest.u64ptr) = (uint64_t)-1;
 3864              	 .loc 1 1483 0
 3865 0f06 7A6D     	 ldr r2,[r7,#84]
 3866 0f08 4FF0FF33 	 mov r3,#-1
 3867 0f0c 4FF0FF34 	 mov r4,#-1
 3868 0f10 C2E90034 	 strd r3,[r2]
1484:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					/* Write the flash double-word buffer to
1485:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					the page buffer and reinitialize it. */
1486:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					*dest.u64ptr++ = flash_dword.u64;
 3869              	 .loc 1 1486 0
 3870 0f14 7A6D     	 ldr r2,[r7,#84]
 3871 0f16 02F10803 	 add r3,r2,#8
 3872 0f1a 7B65     	 str r3,[r7,#84]
 3873 0f1c D7E90634 	 ldrd r3,[r7,#24]
 3874 0f20 C2E90034 	 strd r3,[r2]
1487:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					flash_dword.u64 = source.u64;
 3875              	 .loc 1 1487 0
 3876 0f24 D7E91234 	 ldrd r3,[r7,#72]
 3877 0f28 C7E90634 	 strd r3,[r7,#24]
 3878              	.L231:
1488:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				}
1489:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
1490:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
1491:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1492:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Write the source data to the page buffer with 64-bit
1493:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		 * alignment. */
1494:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		for (i = flash_page_source_end.u64ptr - dest.u64ptr; i; i--) {
 3879              	 .loc 1 1494 0
 3880 0f2c 7B6A     	 ldr r3,[r7,#36]
 3881 0f2e 1A46     	 mov r2,r3
 3882 0f30 7B6D     	 ldr r3,[r7,#84]
 3883 0f32 D31A     	 subs r3,r2,r3
 3884 0f34 DB10     	 asrs r3,r3,#3
 3885 0f36 3B66     	 str r3,[r7,#96]
 3886 0f38 11E0     	 b .L236
 3887              	.L237:
1495:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Workaround for corrupted data after page write operations */
1496:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			*(volatile uint64_t*)((uint32_t)dest.u64ptr)
 3888              	 .loc 1 1496 0 discriminator 3
 3889 0f3a 7A6D     	 ldr r2,[r7,#84]
1497:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					= (uint64_t)-1;
 3890              	 .loc 1 1497 0 discriminator 3
 3891 0f3c 4FF0FF33 	 mov r3,#-1
 3892 0f40 4FF0FF34 	 mov r4,#-1
 3893 0f44 C2E90034 	 strd r3,[r2]
1498:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			*dest.u64ptr++ = source.u64;
 3894              	 .loc 1 1498 0 discriminator 3
 3895 0f48 7A6D     	 ldr r2,[r7,#84]
 3896 0f4a 02F10803 	 add r3,r2,#8
 3897 0f4e 7B65     	 str r3,[r7,#84]
 3898 0f50 D7E91234 	 ldrd r3,[r7,#72]
 3899 0f54 C2E90034 	 strd r3,[r2]
1494:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Workaround for corrupted data after page write operations */
 3900              	 .loc 1 1494 0 discriminator 3
 3901 0f58 3B6E     	 ldr r3,[r7,#96]
 3902 0f5a 013B     	 subs r3,r3,#1
 3903 0f5c 3B66     	 str r3,[r7,#96]
 3904              	.L236:
1494:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Workaround for corrupted data after page write operations */
 3905              	 .loc 1 1494 0 is_stmt 0 discriminator 1
 3906 0f5e 3B6E     	 ldr r3,[r7,#96]
 3907 0f60 002B     	 cmp r3,#0
 3908 0f62 EAD1     	 bne .L237
1499:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
1500:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1501:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* If the current destination page has an incomplete end... */
1502:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (incomplete_flash_page_end) {
 3909              	 .loc 1 1502 0 is_stmt 1
 3910 0f64 97F85F30 	 ldrb r3,[r7,#95]
 3911 0f68 002B     	 cmp r3,#0
 3912 0f6a 3DD0     	 beq .L238
1503:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* This is required by the hardware, even if page erase
1504:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * is not requested, in order to be able to write
1505:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * successfully to erased parts of flash pages that have
1506:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * already been written to. */
1507:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			{
1508:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				tmp.u8ptr = (volatile uint8_t *)dest_end.u8ptr;
 3913              	 .loc 1 1508 0
 3914 0f6c 7B6C     	 ldr r3,[r7,#68]
 3915 0f6e 7B61     	 str r3,[r7,#20]
1509:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1510:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* If end of destination is not 64-bit aligned. */
1511:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				if (!Test_align((uint32_t)dest_end.u8ptr,
 3916              	 .loc 1 1511 0
 3917 0f70 7B6C     	 ldr r3,[r7,#68]
 3918 0f72 03F00703 	 and r3,r3,#7
 3919 0f76 002B     	 cmp r3,#0
 3920 0f78 31D0     	 beq .L242
1512:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						sizeof(uint64_t))) {
1513:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					/* Fill the end of the flash double-word
1514:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					 * buffer with the current flash page
1515:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					 * data. */
1516:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					for (i = Get_align(
 3921              	 .loc 1 1516 0
 3922 0f7a 7B6C     	 ldr r3,[r7,#68]
 3923 0f7c 03F00703 	 and r3,r3,#7
 3924 0f80 3B66     	 str r3,[r7,#96]
 3925 0f82 0DE0     	 b .L240
 3926              	.L241:
1517:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 							(uint32_t)dest_end.u8ptr,
1518:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 							sizeof(uint64_t));
1519:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 							i < sizeof(uint64_t);
1520:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 							i++) {
1521:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						flash_dword.u8[i] = *tmp.u8ptr++;
 3927              	 .loc 1 1521 0
 3928 0f84 7B69     	 ldr r3,[r7,#20]
 3929 0f86 5A1C     	 adds r2,r3,#1
 3930 0f88 7A61     	 str r2,[r7,#20]
 3931 0f8a 1B78     	 ldrb r3,[r3]
 3932 0f8c D9B2     	 uxtb r1,r3
 3933 0f8e 07F11802 	 add r2,r7,#24
 3934 0f92 3B6E     	 ldr r3,[r7,#96]
 3935 0f94 1344     	 add r3,r3,r2
 3936 0f96 0A46     	 mov r2,r1
 3937 0f98 1A70     	 strb r2,[r3]
1520:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						flash_dword.u8[i] = *tmp.u8ptr++;
 3938              	 .loc 1 1520 0
 3939 0f9a 3B6E     	 ldr r3,[r7,#96]
 3940 0f9c 0133     	 adds r3,r3,#1
 3941 0f9e 3B66     	 str r3,[r7,#96]
 3942              	.L240:
1516:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 							(uint32_t)dest_end.u8ptr,
 3943              	 .loc 1 1516 0 discriminator 1
 3944 0fa0 3B6E     	 ldr r3,[r7,#96]
 3945 0fa2 072B     	 cmp r3,#7
 3946 0fa4 EED9     	 bls .L241
1522:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					}
1523:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1524:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					/* Workaround for corrupted data after page write operations */
1525:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					*(volatile uint64_t*)((uint32_t)dest.u64ptr) = (uint64_t)-1;
 3947              	 .loc 1 1525 0
 3948 0fa6 7A6D     	 ldr r2,[r7,#84]
 3949 0fa8 4FF0FF33 	 mov r3,#-1
 3950 0fac 4FF0FF34 	 mov r4,#-1
 3951 0fb0 C2E90034 	 strd r3,[r2]
1526:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					/* Write the flash double-word buffer to
1527:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					 * the page buffer. */
1528:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					*dest.u64ptr++ = flash_dword.u64;
 3952              	 .loc 1 1528 0
 3953 0fb4 7A6D     	 ldr r2,[r7,#84]
 3954 0fb6 02F10803 	 add r3,r2,#8
 3955 0fba 7B65     	 str r3,[r7,#84]
 3956 0fbc D7E90634 	 ldrd r3,[r7,#24]
 3957 0fc0 C2E90034 	 strd r3,[r2]
1529:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				}
1530:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1531:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* Fill the end of the page buffer with the
1532:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				current flash page data. */
1533:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				for (; !Test_align((uint32_t)tmp.u64ptr,
 3958              	 .loc 1 1533 0
 3959 0fc4 0BE0     	 b .L242
 3960              	.L243:
1534:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						FLASH_PAGE_SIZE); tmp.u64ptr++){
1535:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					*tmp.u32ptr = *tmp.u32ptr;
 3961              	 .loc 1 1535 0
 3962 0fc6 7B69     	 ldr r3,[r7,#20]
 3963 0fc8 7A69     	 ldr r2,[r7,#20]
 3964 0fca 1268     	 ldr r2,[r2]
 3965 0fcc 1A60     	 str r2,[r3]
1536:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					*(tmp.u32ptr + 1) = *(tmp.u32ptr + 1);
 3966              	 .loc 1 1536 0
 3967 0fce 7B69     	 ldr r3,[r7,#20]
 3968 0fd0 0433     	 adds r3,r3,#4
 3969 0fd2 7A69     	 ldr r2,[r7,#20]
 3970 0fd4 5268     	 ldr r2,[r2,#4]
 3971 0fd6 1A60     	 str r2,[r3]
1534:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						FLASH_PAGE_SIZE); tmp.u64ptr++){
 3972              	 .loc 1 1534 0
 3973 0fd8 7B69     	 ldr r3,[r7,#20]
 3974 0fda 0833     	 adds r3,r3,#8
 3975 0fdc 7B61     	 str r3,[r7,#20]
 3976              	.L242:
1533:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						FLASH_PAGE_SIZE); tmp.u64ptr++){
 3977              	 .loc 1 1533 0
 3978 0fde 7B69     	 ldr r3,[r7,#20]
 3979 0fe0 C3F30803 	 ubfx r3,r3,#0,#9
 3980 0fe4 002B     	 cmp r3,#0
 3981 0fe6 EED1     	 bne .L243
 3982              	.L238:
1537:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				}
1538:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
1539:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
1540:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1541:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* If the current flash page is in the flash array... */
1542:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (dest.u8ptr <= (uint8_t *)FLASH_USER_PAGE_ADDR) {
 3983              	 .loc 1 1542 0
 3984 0fe8 7B6D     	 ldr r3,[r7,#84]
 3985 0fea B3F5000F 	 cmp r3,#8388608
 3986 0fee 1ED8     	 bhi .L244
1543:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Erase the current page if requested and write it from
1544:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * the page buffer. */
1545:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			if (erase) {
 3987              	 .loc 1 1545 0
 3988 0ff0 97F87C30 	 ldrb r3,[r7,#124]
 3989 0ff4 002B     	 cmp r3,#0
 3990 0ff6 09D0     	 beq .L245
1546:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_erase_page(-1, false);
 3991              	 .loc 1 1546 0
 3992 0ff8 0021     	 movs r1,#0
 3993 0ffa 4FF0FF30 	 mov r0,#-1
 3994 0ffe FFF7FEFF 	 bl flashcalw_erase_page
1547:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				error_status |= flashcalw_error_status;
 3995              	 .loc 1 1547 0
 3996 1002 1C4B     	 ldr r3,.L250+4
 3997 1004 1B68     	 ldr r3,[r3]
 3998 1006 7A6E     	 ldr r2,[r7,#100]
 3999 1008 1343     	 orrs r3,r3,r2
 4000 100a 7B66     	 str r3,[r7,#100]
 4001              	.L245:
1548:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
1549:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1550:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			flashcalw_write_page(-1);
 4002              	 .loc 1 1550 0
 4003 100c 4FF0FF30 	 mov r0,#-1
 4004 1010 FFF7FEFF 	 bl flashcalw_write_page
1551:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			error_status |= flashcalw_error_status;
 4005              	 .loc 1 1551 0
 4006 1014 174B     	 ldr r3,.L250+4
 4007 1016 1B68     	 ldr r3,[r3]
 4008 1018 7A6E     	 ldr r2,[r7,#100]
 4009 101a 1343     	 orrs r3,r3,r2
 4010 101c 7B66     	 str r3,[r7,#100]
1552:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1553:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* If the end of the flash array is reached, go to the
1554:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * User page. */
1555:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			if (dest.u8ptr >= flash_array_end.u8ptr) {
 4011              	 .loc 1 1555 0
 4012 101e 7A6D     	 ldr r2,[r7,#84]
 4013 1020 BB6D     	 ldr r3,[r7,#88]
 4014 1022 9A42     	 cmp r2,r3
 4015 1024 16D3     	 bcc .L228
1556:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				dest.u8ptr = (uint8_t *)FLASH_USER_PAGE_ADDR;
 4016              	 .loc 1 1556 0
 4017 1026 4FF40003 	 mov r3,#8388608
 4018 102a 7B65     	 str r3,[r7,#84]
 4019 102c 12E0     	 b .L228
 4020              	.L244:
1557:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
1558:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		} else {
1559:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Erase the User page if requested and write it from
1560:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * the page buffer. */
1561:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			if (erase) {
 4021              	 .loc 1 1561 0
 4022 102e 97F87C30 	 ldrb r3,[r7,#124]
 4023 1032 002B     	 cmp r3,#0
 4024 1034 07D0     	 beq .L247
1562:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_erase_user_page(false);
 4025              	 .loc 1 1562 0
 4026 1036 0020     	 movs r0,#0
 4027 1038 FFF7FEFF 	 bl flashcalw_erase_user_page
1563:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				error_status |= flashcalw_error_status;
 4028              	 .loc 1 1563 0
 4029 103c 0D4B     	 ldr r3,.L250+4
 4030 103e 1B68     	 ldr r3,[r3]
 4031 1040 7A6E     	 ldr r2,[r7,#100]
 4032 1042 1343     	 orrs r3,r3,r2
 4033 1044 7B66     	 str r3,[r7,#100]
 4034              	.L247:
1564:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
1565:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1566:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			flashcalw_write_user_page();
 4035              	 .loc 1 1566 0
 4036 1046 FFF7FEFF 	 bl flashcalw_write_user_page
1567:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			error_status |= flashcalw_error_status;
 4037              	 .loc 1 1567 0
 4038 104a 0A4B     	 ldr r3,.L250+4
 4039 104c 1B68     	 ldr r3,[r3]
 4040 104e 7A6E     	 ldr r2,[r7,#100]
 4041 1050 1343     	 orrs r3,r3,r2
 4042 1052 7B66     	 str r3,[r7,#100]
 4043              	.L228:
1415:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Clear the page buffer in order to prepare data for a flash
 4044              	 .loc 1 1415 0
 4045 1054 7A6D     	 ldr r2,[r7,#84]
 4046 1056 7B6C     	 ldr r3,[r7,#68]
 4047 1058 9A42     	 cmp r2,r3
 4048 105a FFF4E2AE 	 bcc .L248
1568:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
1569:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1570:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1571:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Update the FLASHC error status. */
1572:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 4049              	 .loc 1 1572 0
 4050 105e 054A     	 ldr r2,.L250+4
 4051 1060 7B6E     	 ldr r3,[r7,#100]
 4052 1062 1360     	 str r3,[r2]
1573:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1574:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Return the initial destination pointer as the standard memset
1575:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * function does. */
1576:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return dst;
 4053              	 .loc 1 1576 0
 4054 1064 FB68     	 ldr r3,[r7,#12]
1577:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4055              	 .loc 1 1577 0
 4056 1066 1846     	 mov r0,r3
 4057 1068 6837     	 adds r7,r7,#104
 4058              	.LCFI265:
 4059              	 .cfi_def_cfa_offset 16
 4060 106a BD46     	 mov sp,r7
 4061              	.LCFI266:
 4062              	 .cfi_def_cfa_register 13
 4063              	 
 4064 106c B0BD     	 pop {r4,r5,r7,pc}
 4065              	.L251:
 4066 106e 00BF     	 .align 2
 4067              	.L250:
 4068 1070 00028000 	 .word 8389120
 4069 1074 00000000 	 .word flashcalw_error_status
 4070              	 .cfi_endproc
 4071              	.LFE240:
 4073              	 .align 1
 4074              	 .global flashcalw_memcpy
 4075              	 .syntax unified
 4076              	 .thumb
 4077              	 .thumb_func
 4078              	 .fpu softvfp
 4080              	flashcalw_memcpy:
 4081              	.LFB241:
1578:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1579:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Copies \a nbytes bytes to the flash destination pointed to by \a dst
1580:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         from the source pointed to by \a src.
1581:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1582:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * The destination areas that are not within the flash
1583:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * array or the User page are caught by an Assert() operation.
1584:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1585:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * All pointer and size alignments are supported.
1586:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1587:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param dst Pointer to flash destination.
1588:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param src Pointer to source data.
1589:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param nbytes Number of bytes to copy.
1590:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param erase Whether to erase before writing: \c true or \c false.
1591:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1592:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of \a dst.
1593:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1594:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning If copying takes place between areas that overlap, the behavior is
1595:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          undefined.
1596:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1597:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning This function may be called with \a erase set to \c false only if
1598:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          the destination consists only of erased words, i.e. this function
1599:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          can not be used to write only one bit of a previously written word.
1600:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          E.g., if \c 0x00000001 then \c 0xFFFFFFFE are written to a word, the
1601:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          resulting value in flash may be different from \c 0x00000000.
1602:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1603:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command is applied to pages belonging
1604:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          to a locked region or to the bootloader protected area.
1605:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1606:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1607:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1608:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1609:../../../platform/sam/drivers/flashcalw/flashcalw.c **** volatile void *flashcalw_memcpy(volatile void *dst, const void *src,
1610:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		size_t nbytes, bool erase)
1611:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4082              	 .loc 1 1611 0
 4083              	 .cfi_startproc
 4084              	 
 4085              	 
 4086 1078 90B5     	 push {r4,r7,lr}
 4087              	.LCFI267:
 4088              	 .cfi_def_cfa_offset 12
 4089              	 .cfi_offset 4,-12
 4090              	 .cfi_offset 7,-8
 4091              	 .cfi_offset 14,-4
 4092 107a 8DB0     	 sub sp,sp,#52
 4093              	.LCFI268:
 4094              	 .cfi_def_cfa_offset 64
 4095 107c 00AF     	 add r7,sp,#0
 4096              	.LCFI269:
 4097              	 .cfi_def_cfa_register 7
 4098 107e F860     	 str r0,[r7,#12]
 4099 1080 B960     	 str r1,[r7,#8]
 4100 1082 7A60     	 str r2,[r7,#4]
 4101 1084 FB70     	 strb r3,[r7,#3]
1612:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint16_t page_pos;
1613:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	Union64 flash_dword;
1614:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint8_t i;
1615:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	bool b_user_page;
1616:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 4102              	 .loc 1 1616 0
 4103 1086 0023     	 movs r3,#0
 4104 1088 BB62     	 str r3,[r7,#40]
1617:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	volatile uint8_t *flash_add;
1618:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	volatile uint8_t *dest_add = (uint8_t *)dst;
 4105              	 .loc 1 1618 0
 4106 108a FB68     	 ldr r3,[r7,#12]
 4107 108c 3B62     	 str r3,[r7,#32]
1619:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	const uint8_t *src_buf = (const uint8_t *)src;
 4108              	 .loc 1 1619 0
 4109 108e BB68     	 ldr r3,[r7,#8]
 4110 1090 FB61     	 str r3,[r7,#28]
1620:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1621:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Copy area must be in flash array or flash user page */
1622:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	Assert((((uint8_t *)dst >= (uint8_t *)FLASH_ADDR) &&
1623:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			(((uint8_t *)dst + nbytes)
1624:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			<= (((uint8_t *)FLASH_ADDR)
1625:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			+ flashcalw_get_flash_size()))) ||
1626:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			(((uint8_t *)dst >= (uint8_t *)FLASH_USER_PAGE_ADDR) &&
1627:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			(((uint8_t *)dst + nbytes)
1628:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			<= (((uint8_t *)FLASH_USER_PAGE_ADDR)
1629:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			+ FLASH_PAGE_SIZE))));
1630:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1631:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	b_user_page = (volatile uint8_t *)dst
 4111              	 .loc 1 1631 0
 4112 1092 FB68     	 ldr r3,[r7,#12]
 4113 1094 444A     	 ldr r2,.L266
 4114 1096 9342     	 cmp r3,r2
 4115 1098 8CBF     	 ite hi
 4116 109a 0123     	 movhi r3,#1
 4117 109c 0023     	 movls r3,#0
 4118 109e FB76     	 strb r3,[r7,#27]
1632:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			>= (uint8_t *)FLASH_USER_PAGE_ADDR;
1633:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1634:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flash_add = (uint8_t *)((uint32_t)dest_add
 4119              	 .loc 1 1634 0
 4120 10a0 3B6A     	 ldr r3,[r7,#32]
1635:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			- ((uint32_t)dest_add % FLASH_PAGE_SIZE));
 4121              	 .loc 1 1635 0
 4122 10a2 23F4FF73 	 bic r3,r3,#510
 4123 10a6 23F00103 	 bic r3,r3,#1
1634:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			- ((uint32_t)dest_add % FLASH_PAGE_SIZE));
 4124              	 .loc 1 1634 0
 4125 10aa 7B62     	 str r3,[r7,#36]
1636:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1637:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (nbytes) {
 4126              	 .loc 1 1637 0
 4127 10ac 71E0     	 b .L253
 4128              	.L264:
1638:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Clear the page buffer in order to prepare data for a flash
1639:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		 * page write. */
1640:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_clear_page_buffer();
 4129              	 .loc 1 1640 0
 4130 10ae FFF7FEFF 	 bl flashcalw_clear_page_buffer
1641:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 4131              	 .loc 1 1641 0
 4132 10b2 3E4B     	 ldr r3,.L266+4
 4133 10b4 1B68     	 ldr r3,[r3]
 4134 10b6 BA6A     	 ldr r2,[r7,#40]
 4135 10b8 1343     	 orrs r3,r3,r2
 4136 10ba BB62     	 str r3,[r7,#40]
1642:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1643:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Loop in the page */
1644:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		for (page_pos = 0; page_pos < FLASH_PAGE_SIZE;
 4137              	 .loc 1 1644 0
 4138 10bc 0023     	 movs r3,#0
 4139 10be FB85     	 strh r3,[r7,#46]
 4140 10c0 40E0     	 b .L254
 4141              	.L258:
1645:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				page_pos += sizeof(uint64_t)) {
1646:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Read the flash double-word buffer */
1647:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			flash_dword.u64 = *(volatile uint64_t *)((uint32_t)flash_add);
 4142              	 .loc 1 1647 0
 4143 10c2 7B6A     	 ldr r3,[r7,#36]
 4144 10c4 D3E90034 	 ldrd r3,[r3]
 4145 10c8 C7E90434 	 strd r3,[r7,#16]
1648:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1649:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Update double-word if necessary */
1650:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			for (i = 0; i < sizeof(uint64_t); i++) {
 4146              	 .loc 1 1650 0
 4147 10cc 0023     	 movs r3,#0
 4148 10ce 87F82D30 	 strb r3,[r7,#45]
 4149 10d2 20E0     	 b .L255
 4150              	.L257:
1651:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				if (nbytes && (flash_add == dest_add)) {
 4151              	 .loc 1 1651 0
 4152 10d4 7B68     	 ldr r3,[r7,#4]
 4153 10d6 002B     	 cmp r3,#0
 4154 10d8 15D0     	 beq .L256
 4155              	 .loc 1 1651 0 is_stmt 0 discriminator 1
 4156 10da 7A6A     	 ldr r2,[r7,#36]
 4157 10dc 3B6A     	 ldr r3,[r7,#32]
 4158 10de 9A42     	 cmp r2,r3
 4159 10e0 11D1     	 bne .L256
1652:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					/* Update page with data source */
1653:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					flash_dword.u8[i] = *src_buf++;
 4160              	 .loc 1 1653 0 is_stmt 1
 4161 10e2 97F82D20 	 ldrb r2,[r7,#45]
 4162 10e6 FB69     	 ldr r3,[r7,#28]
 4163 10e8 591C     	 adds r1,r3,#1
 4164 10ea F961     	 str r1,[r7,#28]
 4165 10ec 1978     	 ldrb r1,[r3]
 4166 10ee 07F13003 	 add r3,r7,#48
 4167 10f2 1344     	 add r3,r3,r2
 4168 10f4 0A46     	 mov r2,r1
 4169 10f6 03F8202C 	 strb r2,[r3,#-32]
1654:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					dest_add++;
 4170              	 .loc 1 1654 0
 4171 10fa 3B6A     	 ldr r3,[r7,#32]
 4172 10fc 0133     	 adds r3,r3,#1
 4173 10fe 3B62     	 str r3,[r7,#32]
1655:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					nbytes--;
 4174              	 .loc 1 1655 0
 4175 1100 7B68     	 ldr r3,[r7,#4]
 4176 1102 013B     	 subs r3,r3,#1
 4177 1104 7B60     	 str r3,[r7,#4]
 4178              	.L256:
1656:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				}
1657:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1658:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flash_add++;
 4179              	 .loc 1 1658 0 discriminator 2
 4180 1106 7B6A     	 ldr r3,[r7,#36]
 4181 1108 0133     	 adds r3,r3,#1
 4182 110a 7B62     	 str r3,[r7,#36]
1650:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				if (nbytes && (flash_add == dest_add)) {
 4183              	 .loc 1 1650 0 discriminator 2
 4184 110c 97F82D30 	 ldrb r3,[r7,#45]
 4185 1110 0133     	 adds r3,r3,#1
 4186 1112 87F82D30 	 strb r3,[r7,#45]
 4187              	.L255:
1650:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				if (nbytes && (flash_add == dest_add)) {
 4188              	 .loc 1 1650 0 is_stmt 0 discriminator 1
 4189 1116 97F82D30 	 ldrb r3,[r7,#45]
 4190 111a 072B     	 cmp r3,#7
 4191 111c DAD9     	 bls .L257
1659:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
1660:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1661:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Workaround for corrupted data after page write operations */
1662:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			*(volatile uint64_t*)((uint32_t)flash_add - sizeof(uint64_t))
 4192              	 .loc 1 1662 0 is_stmt 1
 4193 111e 7B6A     	 ldr r3,[r7,#36]
 4194 1120 083B     	 subs r3,r3,#8
 4195 1122 1A46     	 mov r2,r3
1663:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					= (uint64_t)-1;
 4196              	 .loc 1 1663 0
 4197 1124 4FF0FF33 	 mov r3,#-1
 4198 1128 4FF0FF34 	 mov r4,#-1
 4199 112c C2E90034 	 strd r3,[r2]
1664:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			
1665:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Write the flash double-word buffer to the page buffer */
1666:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			*(volatile uint64_t *)((uint32_t)flash_add - sizeof(uint64_t))
 4200              	 .loc 1 1666 0
 4201 1130 7B6A     	 ldr r3,[r7,#36]
 4202 1132 083B     	 subs r3,r3,#8
 4203 1134 1A46     	 mov r2,r3
1667:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					= flash_dword.u64;
 4204              	 .loc 1 1667 0
 4205 1136 D7E90434 	 ldrd r3,[r7,#16]
 4206 113a C2E90034 	 strd r3,[r2]
1645:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Read the flash double-word buffer */
 4207              	 .loc 1 1645 0
 4208 113e FB8D     	 ldrh r3,[r7,#46]
 4209 1140 0833     	 adds r3,r3,#8
 4210 1142 FB85     	 strh r3,[r7,#46]
 4211              	.L254:
1644:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				page_pos += sizeof(uint64_t)) {
 4212              	 .loc 1 1644 0 discriminator 1
 4213 1144 FB8D     	 ldrh r3,[r7,#46]
 4214 1146 B3F5007F 	 cmp r3,#512
 4215 114a BAD3     	 bcc .L258
1668:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
1669:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1670:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Erase the current page if requested and write it from the
1671:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		 * page buffer. */
1672:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (erase) {
 4216              	 .loc 1 1672 0
 4217 114c FB78     	 ldrb r3,[r7,#3]
 4218 114e 002B     	 cmp r3,#0
 4219 1150 10D0     	 beq .L259
1673:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			(b_user_page) ? flashcalw_erase_user_page(false)
1674:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			: flashcalw_erase_page(-1, false);
 4220              	 .loc 1 1674 0
 4221 1152 FB7E     	 ldrb r3,[r7,#27]
 4222 1154 002B     	 cmp r3,#0
 4223 1156 03D0     	 beq .L260
1673:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			(b_user_page) ? flashcalw_erase_user_page(false)
 4224              	 .loc 1 1673 0 discriminator 1
 4225 1158 0020     	 movs r0,#0
 4226 115a FFF7FEFF 	 bl flashcalw_erase_user_page
 4227 115e 04E0     	 b .L261
 4228              	.L260:
 4229              	 .loc 1 1674 0 discriminator 2
 4230 1160 0021     	 movs r1,#0
 4231 1162 4FF0FF30 	 mov r0,#-1
 4232 1166 FFF7FEFF 	 bl flashcalw_erase_page
 4233              	.L261:
1675:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			error_status |= flashcalw_error_status;
 4234              	 .loc 1 1675 0
 4235 116a 104B     	 ldr r3,.L266+4
 4236 116c 1B68     	 ldr r3,[r3]
 4237 116e BA6A     	 ldr r2,[r7,#40]
 4238 1170 1343     	 orrs r3,r3,r2
 4239 1172 BB62     	 str r3,[r7,#40]
 4240              	.L259:
1676:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
1677:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1678:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Write the page */
1679:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		(b_user_page) ? flashcalw_write_user_page()
1680:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		: flashcalw_write_page(-1);
 4241              	 .loc 1 1680 0
 4242 1174 FB7E     	 ldrb r3,[r7,#27]
 4243 1176 002B     	 cmp r3,#0
 4244 1178 02D0     	 beq .L262
1679:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		: flashcalw_write_page(-1);
 4245              	 .loc 1 1679 0
 4246 117a FFF7FEFF 	 bl flashcalw_write_user_page
 4247 117e 03E0     	 b .L263
 4248              	.L262:
 4249              	 .loc 1 1680 0 discriminator 1
 4250 1180 4FF0FF30 	 mov r0,#-1
 4251 1184 FFF7FEFF 	 bl flashcalw_write_page
 4252              	.L263:
1681:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 4253              	 .loc 1 1681 0
 4254 1188 084B     	 ldr r3,.L266+4
 4255 118a 1B68     	 ldr r3,[r3]
 4256 118c BA6A     	 ldr r2,[r7,#40]
 4257 118e 1343     	 orrs r3,r3,r2
 4258 1190 BB62     	 str r3,[r7,#40]
 4259              	.L253:
1637:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Clear the page buffer in order to prepare data for a flash
 4260              	 .loc 1 1637 0
 4261 1192 7B68     	 ldr r3,[r7,#4]
 4262 1194 002B     	 cmp r3,#0
 4263 1196 8AD1     	 bne .L264
1682:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1683:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Update the FLASHC error status. */
1684:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 4264              	 .loc 1 1684 0
 4265 1198 044A     	 ldr r2,.L266+4
 4266 119a BB6A     	 ldr r3,[r7,#40]
 4267 119c 1360     	 str r3,[r2]
1685:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1686:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Return the initial destination pointer as the standard memcpy
1687:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * function does. */
1688:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return dst;
 4268              	 .loc 1 1688 0
 4269 119e FB68     	 ldr r3,[r7,#12]
1689:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4270              	 .loc 1 1689 0
 4271 11a0 1846     	 mov r0,r3
 4272 11a2 3437     	 adds r7,r7,#52
 4273              	.LCFI270:
 4274              	 .cfi_def_cfa_offset 12
 4275 11a4 BD46     	 mov sp,r7
 4276              	.LCFI271:
 4277              	 .cfi_def_cfa_register 13
 4278              	 
 4279 11a6 90BD     	 pop {r4,r7,pc}
 4280              	.L267:
 4281              	 .align 2
 4282              	.L266:
 4283 11a8 FFFF7F00 	 .word 8388607
 4284 11ac 00000000 	 .word flashcalw_error_status
 4285              	 .cfi_endproc
 4286              	.LFE241:
 4288              	 .align 1
 4289              	 .global flashcalw_picocache_enable
 4290              	 .syntax unified
 4291              	 .thumb
 4292              	 .thumb_func
 4293              	 .fpu softvfp
 4295              	flashcalw_picocache_enable:
 4296              	.LFB242:
1690:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1691:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /** @} */
1692:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1693:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name PicoCache interfaces
1694:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1695:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
1696:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1697:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1698:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Enable PicoCache.
1699:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1700:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_enable(void)
1701:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4297              	 .loc 1 1701 0
 4298              	 .cfi_startproc
 4299              	 
 4300              	 
 4301 11b0 80B5     	 push {r7,lr}
 4302              	.LCFI272:
 4303              	 .cfi_def_cfa_offset 8
 4304              	 .cfi_offset 7,-8
 4305              	 .cfi_offset 14,-4
 4306 11b2 00AF     	 add r7,sp,#0
 4307              	.LCFI273:
 4308              	 .cfi_def_cfa_register 7
1702:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	sysclk_enable_peripheral_clock(HCACHE);
 4309              	 .loc 1 1702 0
 4310 11b4 0748     	 ldr r0,.L270
 4311 11b6 084B     	 ldr r3,.L270+4
 4312 11b8 9847     	 blx r3
 4313              	.LVL3:
1703:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_CTRL = HCACHE_CTRL_CEN_YES;
 4314              	 .loc 1 1703 0
 4315 11ba 064B     	 ldr r3,.L270
 4316 11bc 0122     	 movs r2,#1
 4317 11be 9A60     	 str r2,[r3,#8]
1704:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1705:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (!(flashcalw_picocache_get_status() & HCACHE_SR_CSTS_EN)) {
 4318              	 .loc 1 1705 0
 4319 11c0 00BF     	 nop
 4320              	.L269:
 4321              	 .loc 1 1705 0 is_stmt 0 discriminator 1
 4322 11c2 FFF7FEFF 	 bl flashcalw_picocache_get_status
 4323 11c6 0346     	 mov r3,r0
 4324 11c8 03F00103 	 and r3,r3,#1
 4325 11cc 002B     	 cmp r3,#0
 4326 11ce F8D0     	 beq .L269
1706:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1707:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4327              	 .loc 1 1707 0 is_stmt 1
 4328 11d0 00BF     	 nop
 4329 11d2 80BD     	 pop {r7,pc}
 4330              	.L271:
 4331              	 .align 2
 4332              	.L270:
 4333 11d4 00040A40 	 .word 1074398208
 4334 11d8 00000000 	 .word sysclk_enable_peripheral_clock
 4335              	 .cfi_endproc
 4336              	.LFE242:
 4338              	 .align 1
 4339              	 .global flashcalw_picocache_disable
 4340              	 .syntax unified
 4341              	 .thumb
 4342              	 .thumb_func
 4343              	 .fpu softvfp
 4345              	flashcalw_picocache_disable:
 4346              	.LFB243:
1708:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1709:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1710:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Disable PicoCache.
1711:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1712:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_disable(void)
1713:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4347              	 .loc 1 1713 0
 4348              	 .cfi_startproc
 4349              	 
 4350              	 
 4351 11dc 80B5     	 push {r7,lr}
 4352              	.LCFI274:
 4353              	 .cfi_def_cfa_offset 8
 4354              	 .cfi_offset 7,-8
 4355              	 .cfi_offset 14,-4
 4356 11de 00AF     	 add r7,sp,#0
 4357              	.LCFI275:
 4358              	 .cfi_def_cfa_register 7
1714:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_MAINT0 = HCACHE_MAINT0_INVALL_YES;
 4359              	 .loc 1 1714 0
 4360 11e0 084B     	 ldr r3,.L274
 4361 11e2 0122     	 movs r2,#1
 4362 11e4 1A62     	 str r2,[r3,#32]
1715:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_CTRL = HCACHE_CTRL_CEN_NO;
 4363              	 .loc 1 1715 0
 4364 11e6 074B     	 ldr r3,.L274
 4365 11e8 0022     	 movs r2,#0
 4366 11ea 9A60     	 str r2,[r3,#8]
1716:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1717:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (flashcalw_picocache_get_status() != HCACHE_SR_CSTS_DIS) {
 4367              	 .loc 1 1717 0
 4368 11ec 00BF     	 nop
 4369              	.L273:
 4370              	 .loc 1 1717 0 is_stmt 0 discriminator 1
 4371 11ee FFF7FEFF 	 bl flashcalw_picocache_get_status
 4372 11f2 0346     	 mov r3,r0
 4373 11f4 002B     	 cmp r3,#0
 4374 11f6 FAD1     	 bne .L273
1718:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1719:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1720:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	sysclk_disable_peripheral_clock(HCACHE);
 4375              	 .loc 1 1720 0 is_stmt 1
 4376 11f8 0248     	 ldr r0,.L274
 4377 11fa 034B     	 ldr r3,.L274+4
 4378 11fc 9847     	 blx r3
 4379              	.LVL4:
1721:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4380              	 .loc 1 1721 0
 4381 11fe 00BF     	 nop
 4382 1200 80BD     	 pop {r7,pc}
 4383              	.L275:
 4384 1202 00BF     	 .align 2
 4385              	.L274:
 4386 1204 00040A40 	 .word 1074398208
 4387 1208 00000000 	 .word sysclk_disable_peripheral_clock
 4388              	 .cfi_endproc
 4389              	.LFE243:
 4391              	 .align 1
 4392              	 .global flashcalw_picocache_get_status
 4393              	 .syntax unified
 4394              	 .thumb
 4395              	 .thumb_func
 4396              	 .fpu softvfp
 4398              	flashcalw_picocache_get_status:
 4399              	.LFB244:
1722:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1723:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1724:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Get PicoCache status.
1725:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1726:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return 1 If PicoCahe is enabled, else disabled.
1727:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1728:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_picocache_get_status(void)
1729:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4400              	 .loc 1 1729 0
 4401              	 .cfi_startproc
 4402              	 
 4403              	 
 4404              	 
 4405 120c 80B4     	 push {r7}
 4406              	.LCFI276:
 4407              	 .cfi_def_cfa_offset 4
 4408              	 .cfi_offset 7,-4
 4409 120e 00AF     	 add r7,sp,#0
 4410              	.LCFI277:
 4411              	 .cfi_def_cfa_register 7
1730:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return HCACHE->HCACHE_SR;
 4412              	 .loc 1 1730 0
 4413 1210 024B     	 ldr r3,.L278
 4414 1212 DB68     	 ldr r3,[r3,#12]
1731:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4415              	 .loc 1 1731 0
 4416 1214 1846     	 mov r0,r3
 4417 1216 BD46     	 mov sp,r7
 4418              	.LCFI278:
 4419              	 .cfi_def_cfa_register 13
 4420              	 
 4421 1218 80BC     	 pop {r7}
 4422              	.LCFI279:
 4423              	 .cfi_restore 7
 4424              	 .cfi_def_cfa_offset 0
 4425 121a 7047     	 bx lr
 4426              	.L279:
 4427              	 .align 2
 4428              	.L278:
 4429 121c 00040A40 	 .word 1074398208
 4430              	 .cfi_endproc
 4431              	.LFE244:
 4433              	 .align 1
 4434              	 .global flashcalw_picocache_invalid_all
 4435              	 .syntax unified
 4436              	 .thumb
 4437              	 .thumb_func
 4438              	 .fpu softvfp
 4440              	flashcalw_picocache_invalid_all:
 4441              	.LFB245:
1732:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1733:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1734:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Invalid all PicoCache lines.
1735:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1736:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_invalid_all(void)
1737:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4442              	 .loc 1 1737 0
 4443              	 .cfi_startproc
 4444              	 
 4445              	 
 4446              	 
 4447 1220 80B4     	 push {r7}
 4448              	.LCFI280:
 4449              	 .cfi_def_cfa_offset 4
 4450              	 .cfi_offset 7,-4
 4451 1222 00AF     	 add r7,sp,#0
 4452              	.LCFI281:
 4453              	 .cfi_def_cfa_register 7
1738:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_MAINT0 = HCACHE_MAINT0_INVALL_YES;
 4454              	 .loc 1 1738 0
 4455 1224 034B     	 ldr r3,.L281
 4456 1226 0122     	 movs r2,#1
 4457 1228 1A62     	 str r2,[r3,#32]
1739:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4458              	 .loc 1 1739 0
 4459 122a 00BF     	 nop
 4460 122c BD46     	 mov sp,r7
 4461              	.LCFI282:
 4462              	 .cfi_def_cfa_register 13
 4463              	 
 4464 122e 80BC     	 pop {r7}
 4465              	.LCFI283:
 4466              	 .cfi_restore 7
 4467              	 .cfi_def_cfa_offset 0
 4468 1230 7047     	 bx lr
 4469              	.L282:
 4470 1232 00BF     	 .align 2
 4471              	.L281:
 4472 1234 00040A40 	 .word 1074398208
 4473              	 .cfi_endproc
 4474              	.LFE245:
 4476              	 .align 1
 4477              	 .global flashcalw_picocache_invalid_line
 4478              	 .syntax unified
 4479              	 .thumb
 4480              	 .thumb_func
 4481              	 .fpu softvfp
 4483              	flashcalw_picocache_invalid_line:
 4484              	.LFB246:
1740:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1741:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1742:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Invalid specific cache line.
1743:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1744:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param index Lines to be invalid.
1745:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1746:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_invalid_line(uint32_t index)
1747:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4485              	 .loc 1 1747 0
 4486              	 .cfi_startproc
 4487              	 
 4488              	 
 4489 1238 80B5     	 push {r7,lr}
 4490              	.LCFI284:
 4491              	 .cfi_def_cfa_offset 8
 4492              	 .cfi_offset 7,-8
 4493              	 .cfi_offset 14,-4
 4494 123a 82B0     	 sub sp,sp,#8
 4495              	.LCFI285:
 4496              	 .cfi_def_cfa_offset 16
 4497 123c 00AF     	 add r7,sp,#0
 4498              	.LCFI286:
 4499              	 .cfi_def_cfa_register 7
 4500 123e 7860     	 str r0,[r7,#4]
1748:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Disable the cache controller */
1749:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_CTRL = HCACHE_CTRL_CEN_NO;
 4501              	 .loc 1 1749 0
 4502 1240 094B     	 ldr r3,.L285
 4503 1242 0022     	 movs r2,#0
 4504 1244 9A60     	 str r2,[r3,#8]
1750:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1751:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Wait for disable successfully */
1752:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (flashcalw_picocache_get_status() != HCACHE_SR_CSTS_DIS) {
 4505              	 .loc 1 1752 0
 4506 1246 00BF     	 nop
 4507              	.L284:
 4508              	 .loc 1 1752 0 is_stmt 0 discriminator 1
 4509 1248 FFF7FEFF 	 bl flashcalw_picocache_get_status
 4510 124c 0346     	 mov r3,r0
 4511 124e 002B     	 cmp r3,#0
 4512 1250 FAD1     	 bne .L284
1753:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1754:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1755:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Invalid the line */
1756:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_MAINT1 = index;
 4513              	 .loc 1 1756 0 is_stmt 1
 4514 1252 054A     	 ldr r2,.L285
 4515 1254 7B68     	 ldr r3,[r7,#4]
 4516 1256 5362     	 str r3,[r2,#36]
1757:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1758:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Enable the cache again */
1759:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_CTRL = HCACHE_CTRL_CEN_YES;
 4517              	 .loc 1 1759 0
 4518 1258 034B     	 ldr r3,.L285
 4519 125a 0122     	 movs r2,#1
 4520 125c 9A60     	 str r2,[r3,#8]
1760:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4521              	 .loc 1 1760 0
 4522 125e 00BF     	 nop
 4523 1260 0837     	 adds r7,r7,#8
 4524              	.LCFI287:
 4525              	 .cfi_def_cfa_offset 8
 4526 1262 BD46     	 mov sp,r7
 4527              	.LCFI288:
 4528              	 .cfi_def_cfa_register 13
 4529              	 
 4530 1264 80BD     	 pop {r7,pc}
 4531              	.L286:
 4532 1266 00BF     	 .align 2
 4533              	.L285:
 4534 1268 00040A40 	 .word 1074398208
 4535              	 .cfi_endproc
 4536              	.LFE246:
 4538              	 .align 1
 4539              	 .global flashcalw_picocache_set_monitor_mode
 4540              	 .syntax unified
 4541              	 .thumb
 4542              	 .thumb_func
 4543              	 .fpu softvfp
 4545              	flashcalw_picocache_set_monitor_mode:
 4546              	.LFB247:
1761:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1762:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1763:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Set PicoCache monitor mode.
1764:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1765:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param mode PicoCache mode, 0 for cycle, 1 for instruction hit and 2 for data
1766:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *hit.
1767:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1768:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_set_monitor_mode(uint32_t mode)
1769:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4547              	 .loc 1 1769 0
 4548              	 .cfi_startproc
 4549              	 
 4550              	 
 4551              	 
 4552 126c 80B4     	 push {r7}
 4553              	.LCFI289:
 4554              	 .cfi_def_cfa_offset 4
 4555              	 .cfi_offset 7,-4
 4556 126e 83B0     	 sub sp,sp,#12
 4557              	.LCFI290:
 4558              	 .cfi_def_cfa_offset 16
 4559 1270 00AF     	 add r7,sp,#0
 4560              	.LCFI291:
 4561              	 .cfi_def_cfa_register 7
 4562 1272 7860     	 str r0,[r7,#4]
1770:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_MCFG = mode;
 4563              	 .loc 1 1770 0
 4564 1274 034A     	 ldr r2,.L288
 4565 1276 7B68     	 ldr r3,[r7,#4]
 4566 1278 9362     	 str r3,[r2,#40]
1771:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4567              	 .loc 1 1771 0
 4568 127a 00BF     	 nop
 4569 127c 0C37     	 adds r7,r7,#12
 4570              	.LCFI292:
 4571              	 .cfi_def_cfa_offset 4
 4572 127e BD46     	 mov sp,r7
 4573              	.LCFI293:
 4574              	 .cfi_def_cfa_register 13
 4575              	 
 4576 1280 80BC     	 pop {r7}
 4577              	.LCFI294:
 4578              	 .cfi_restore 7
 4579              	 .cfi_def_cfa_offset 0
 4580 1282 7047     	 bx lr
 4581              	.L289:
 4582              	 .align 2
 4583              	.L288:
 4584 1284 00040A40 	 .word 1074398208
 4585              	 .cfi_endproc
 4586              	.LFE247:
 4588              	 .align 1
 4589              	 .global flashcalw_picocache_enable_monitor
 4590              	 .syntax unified
 4591              	 .thumb
 4592              	 .thumb_func
 4593              	 .fpu softvfp
 4595              	flashcalw_picocache_enable_monitor:
 4596              	.LFB248:
1772:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1773:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1774:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Enable PicoCache monitor.
1775:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1776:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_enable_monitor(void)
1777:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4597              	 .loc 1 1777 0
 4598              	 .cfi_startproc
 4599              	 
 4600              	 
 4601              	 
 4602 1288 80B4     	 push {r7}
 4603              	.LCFI295:
 4604              	 .cfi_def_cfa_offset 4
 4605              	 .cfi_offset 7,-4
 4606 128a 00AF     	 add r7,sp,#0
 4607              	.LCFI296:
 4608              	 .cfi_def_cfa_register 7
1778:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_MEN = HCACHE_MEN_MENABLE_EN;
 4609              	 .loc 1 1778 0
 4610 128c 034B     	 ldr r3,.L291
 4611 128e 0122     	 movs r2,#1
 4612 1290 DA62     	 str r2,[r3,#44]
1779:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4613              	 .loc 1 1779 0
 4614 1292 00BF     	 nop
 4615 1294 BD46     	 mov sp,r7
 4616              	.LCFI297:
 4617              	 .cfi_def_cfa_register 13
 4618              	 
 4619 1296 80BC     	 pop {r7}
 4620              	.LCFI298:
 4621              	 .cfi_restore 7
 4622              	 .cfi_def_cfa_offset 0
 4623 1298 7047     	 bx lr
 4624              	.L292:
 4625 129a 00BF     	 .align 2
 4626              	.L291:
 4627 129c 00040A40 	 .word 1074398208
 4628              	 .cfi_endproc
 4629              	.LFE248:
 4631              	 .align 1
 4632              	 .global flashcalw_picocache_disable_monitor
 4633              	 .syntax unified
 4634              	 .thumb
 4635              	 .thumb_func
 4636              	 .fpu softvfp
 4638              	flashcalw_picocache_disable_monitor:
 4639              	.LFB249:
1780:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1781:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1782:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Disable PicoCache monitor.
1783:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1784:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_disable_monitor(void)
1785:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4640              	 .loc 1 1785 0
 4641              	 .cfi_startproc
 4642              	 
 4643              	 
 4644              	 
 4645 12a0 80B4     	 push {r7}
 4646              	.LCFI299:
 4647              	 .cfi_def_cfa_offset 4
 4648              	 .cfi_offset 7,-4
 4649 12a2 00AF     	 add r7,sp,#0
 4650              	.LCFI300:
 4651              	 .cfi_def_cfa_register 7
1786:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_MEN = HCACHE_MEN_MENABLE_DIS;
 4652              	 .loc 1 1786 0
 4653 12a4 034B     	 ldr r3,.L294
 4654 12a6 0022     	 movs r2,#0
 4655 12a8 DA62     	 str r2,[r3,#44]
1787:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4656              	 .loc 1 1787 0
 4657 12aa 00BF     	 nop
 4658 12ac BD46     	 mov sp,r7
 4659              	.LCFI301:
 4660              	 .cfi_def_cfa_register 13
 4661              	 
 4662 12ae 80BC     	 pop {r7}
 4663              	.LCFI302:
 4664              	 .cfi_restore 7
 4665              	 .cfi_def_cfa_offset 0
 4666 12b0 7047     	 bx lr
 4667              	.L295:
 4668 12b2 00BF     	 .align 2
 4669              	.L294:
 4670 12b4 00040A40 	 .word 1074398208
 4671              	 .cfi_endproc
 4672              	.LFE249:
 4674              	 .align 1
 4675              	 .global flashcalw_picocache_reset_monitor
 4676              	 .syntax unified
 4677              	 .thumb
 4678              	 .thumb_func
 4679              	 .fpu softvfp
 4681              	flashcalw_picocache_reset_monitor:
 4682              	.LFB250:
1788:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1789:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1790:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Reset PicoCache monitor.
1791:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1792:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_reset_monitor( void )
1793:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4683              	 .loc 1 1793 0
 4684              	 .cfi_startproc
 4685              	 
 4686              	 
 4687              	 
 4688 12b8 80B4     	 push {r7}
 4689              	.LCFI303:
 4690              	 .cfi_def_cfa_offset 4
 4691              	 .cfi_offset 7,-4
 4692 12ba 00AF     	 add r7,sp,#0
 4693              	.LCFI304:
 4694              	 .cfi_def_cfa_register 7
1794:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_MCTRL = HCACHE_MCTRL_SWRST_YES;
 4695              	 .loc 1 1794 0
 4696 12bc 034B     	 ldr r3,.L297
 4697 12be 0122     	 movs r2,#1
 4698 12c0 1A63     	 str r2,[r3,#48]
1795:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4699              	 .loc 1 1795 0
 4700 12c2 00BF     	 nop
 4701 12c4 BD46     	 mov sp,r7
 4702              	.LCFI305:
 4703              	 .cfi_def_cfa_register 13
 4704              	 
 4705 12c6 80BC     	 pop {r7}
 4706              	.LCFI306:
 4707              	 .cfi_restore 7
 4708              	 .cfi_def_cfa_offset 0
 4709 12c8 7047     	 bx lr
 4710              	.L298:
 4711 12ca 00BF     	 .align 2
 4712              	.L297:
 4713 12cc 00040A40 	 .word 1074398208
 4714              	 .cfi_endproc
 4715              	.LFE250:
 4717              	 .align 1
 4718              	 .global flashcalw_picocache_get_monitor_cnt
 4719              	 .syntax unified
 4720              	 .thumb
 4721              	 .thumb_func
 4722              	 .fpu softvfp
 4724              	flashcalw_picocache_get_monitor_cnt:
 4725              	.LFB251:
1796:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1797:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1798:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Get PicoCache monitor count number.
1799:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1800:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Monitor counter number.
1801:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1802:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_picocache_get_monitor_cnt( void )
1803:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4726              	 .loc 1 1803 0
 4727              	 .cfi_startproc
 4728              	 
 4729              	 
 4730              	 
 4731 12d0 80B4     	 push {r7}
 4732              	.LCFI307:
 4733              	 .cfi_def_cfa_offset 4
 4734              	 .cfi_offset 7,-4
 4735 12d2 00AF     	 add r7,sp,#0
 4736              	.LCFI308:
 4737              	 .cfi_def_cfa_register 7
1804:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return HCACHE->HCACHE_MSR;
 4738              	 .loc 1 1804 0
 4739 12d4 024B     	 ldr r3,.L301
 4740 12d6 5B6B     	 ldr r3,[r3,#52]
1805:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4741              	 .loc 1 1805 0
 4742 12d8 1846     	 mov r0,r3
 4743 12da BD46     	 mov sp,r7
 4744              	.LCFI309:
 4745              	 .cfi_def_cfa_register 13
 4746              	 
 4747 12dc 80BC     	 pop {r7}
 4748              	.LCFI310:
 4749              	 .cfi_restore 7
 4750              	 .cfi_def_cfa_offset 0
 4751 12de 7047     	 bx lr
 4752              	.L302:
 4753              	 .align 2
 4754              	.L301:
 4755 12e0 00040A40 	 .word 1074398208
 4756              	 .cfi_endproc
 4757              	.LFE251:
 4759              	 .align 1
 4760              	 .global flashcalw_picocache_get_version
 4761              	 .syntax unified
 4762              	 .thumb
 4763              	 .thumb_func
 4764              	 .fpu softvfp
 4766              	flashcalw_picocache_get_version:
 4767              	.LFB252:
1806:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1807:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1808:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Get PicoCache version.
1809:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1810:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return PicoCache version.
1811:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1812:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_picocache_get_version( void )
1813:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4768              	 .loc 1 1813 0
 4769              	 .cfi_startproc
 4770              	 
 4771              	 
 4772              	 
 4773 12e4 80B4     	 push {r7}
 4774              	.LCFI311:
 4775              	 .cfi_def_cfa_offset 4
 4776              	 .cfi_offset 7,-4
 4777 12e6 00AF     	 add r7,sp,#0
 4778              	.LCFI312:
 4779              	 .cfi_def_cfa_register 7
1814:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return HCACHE->HCACHE_VERSION;
 4780              	 .loc 1 1814 0
 4781 12e8 034B     	 ldr r3,.L305
 4782 12ea D3F8FC30 	 ldr r3,[r3,#252]
1815:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4783              	 .loc 1 1815 0
 4784 12ee 1846     	 mov r0,r3
 4785 12f0 BD46     	 mov sp,r7
 4786              	.LCFI313:
 4787              	 .cfi_def_cfa_register 13
 4788              	 
 4789 12f2 80BC     	 pop {r7}
 4790              	.LCFI314:
 4791              	 .cfi_restore 7
 4792              	 .cfi_def_cfa_offset 0
 4793 12f4 7047     	 bx lr
 4794              	.L306:
 4795 12f6 00BF     	 .align 2
 4796              	.L305:
 4797 12f8 00040A40 	 .word 1074398208
 4798              	 .cfi_endproc
 4799              	.LFE252:
 4801              	.Letext0:
 4802              	 .file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 4803              	 .file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 4804              	 .file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 4805              	 .file 5 "../../../platform/sam/utils/cmsis/sam4l/include/sam4lc4b.h"
 4806              	 .file 6 "../../../platform/thirdparty/CMSIS/include/core_cm4.h"
 4807              	 .file 7 "../../../platform/sam/utils/cmsis/sam4l/source/templates/system_sam4l.h"
 4808              	 .file 8 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_flashcalw.h"
 4809              	 .file 9 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_hcache.h"
 4810              	 .file 10 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 4811              	 .file 11 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 4812              	 .file 12 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 4813              	 .file 13 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdlib.h"
 4814              	 .file 14 "../../../platform/common/utils/interrupt/interrupt_sam_nvic.h"
 4815              	 .file 15 "../../../platform/sam/utils/compiler.h"
 4816              	 .file 16 "../../../platform/sam/drivers/flashcalw/flashcalw.h"
 4817              	 .file 17 "../../../platform/common/services/usb/usb_protocol.h"
 4818              	 .file 18 "../../../platform/common/services/usb/udc/udi.h"
 4819              	 .file 19 "../../../platform/common/services/usb/udc/udc_desc.h"
 4820              	 .file 20 "../../../platform/common/services/usb/udc/udd.h"
 4821              	 .file 21 "../../../platform/common/services/usb/class/cdc/device/udi_cdc.h"
 4822              	 .file 22 "../../../platform/common/utils/stdio/stdio_usb/stdio_usb.h"
 4823              	 .file 23 "config/config.h"
 4824              	 .file 24 "../../../platform/common/services/clock/sam4l/sysclk.h"
DEFINED SYMBOLS
                            *ABS*:00000000 flashcalw.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
                            *COM*:00000001 n
    {standard input}:28     .bss.tTS:00000000 $d
    {standard input}:31     .bss.tTS:00000000 tTS
    {standard input}:34     .text:00000000 $t
    {standard input}:41     .text:00000000 flashcalw_get_flash_size
    {standard input}:122    .text:00000078 $d
    {standard input}:127    .text:00000080 $t
    {standard input}:134    .text:00000080 flashcalw_get_page_count
    {standard input}:165    .text:00000090 flashcalw_get_page_count_per_region
    {standard input}:196    .text:000000a0 flashcalw_get_page_region
    {standard input}:1134   .text:00000388 flashcalw_get_page_number
    {standard input}:251    .text:000000ca flashcalw_get_region_first_page_number
    {standard input}:294    .text:000000e6 flashcalw_get_wait_state
    {standard input}:331    .text:00000104 $d
    {standard input}:335    .text:00000108 $t
    {standard input}:342    .text:00000108 flashcalw_set_wait_state
    {standard input}:397    .text:00000134 $d
    {standard input}:401    .text:00000138 $t
    {standard input}:408    .text:00000138 flashcalw_set_flash_waitstate_and_readmode
    {standard input}:1179   .text:000003a0 flashcalw_issue_command
    {standard input}:524    .text:000001dc $d
    {standard input}:531    .text:000001ec $t
    {standard input}:538    .text:000001ec flashcalw_is_ready_int_enabled
    {standard input}:575    .text:0000020c $d
    {standard input}:579    .text:00000210 $t
    {standard input}:586    .text:00000210 flashcalw_enable_ready_int
    {standard input}:632    .text:00000234 $d
    {standard input}:636    .text:00000238 $t
    {standard input}:643    .text:00000238 flashcalw_is_lock_error_int_enabled
    {standard input}:680    .text:00000258 $d
    {standard input}:684    .text:0000025c $t
    {standard input}:691    .text:0000025c flashcalw_enable_lock_error_int
    {standard input}:737    .text:00000280 $d
    {standard input}:741    .text:00000284 $t
    {standard input}:748    .text:00000284 flashcalw_is_prog_error_int_enabled
    {standard input}:785    .text:000002a4 $d
    {standard input}:789    .text:000002a8 $t
    {standard input}:796    .text:000002a8 flashcalw_enable_prog_error_int
    {standard input}:842    .text:000002cc $d
    {standard input}:846    .text:000002d0 $t
    {standard input}:853    .text:000002d0 flashcalw_is_ready
    {standard input}:890    .text:000002f0 $d
    {standard input}:894    .text:000002f4 $t
    {standard input}:901    .text:000002f4 flashcalw_default_wait_until_ready
    {standard input}:936    .data.flashcalw_wait_until_ready:00000000 flashcalw_wait_until_ready
    {standard input}:933    .data.flashcalw_wait_until_ready:00000000 $d
    {standard input}:945    .text:0000030e flashcalw_get_error_status
    {standard input}:977    .text:00000324 $d
    {standard input}:982    .bss.flashcalw_error_status:00000000 $d
    {standard input}:985    .bss.flashcalw_error_status:00000000 flashcalw_error_status
    {standard input}:988    .text:00000328 $t
    {standard input}:995    .text:00000328 flashcalw_is_lock_error
    {standard input}:1032   .text:00000348 $d
    {standard input}:1036   .text:0000034c $t
    {standard input}:1043   .text:0000034c flashcalw_is_programming_error
    {standard input}:1080   .text:0000036c $d
    {standard input}:1084   .text:00000370 $t
    {standard input}:1091   .text:00000370 flashcalw_get_command
    {standard input}:1123   .text:00000384 $d
    {standard input}:1127   .text:00000388 $t
    {standard input}:1168   .text:0000039c $d
    {standard input}:1172   .text:000003a0 $t
    {standard input}:1261   .text:00000408 $d
    {standard input}:1267   .text:00000414 $t
    {standard input}:1274   .text:00000414 flashcalw_no_operation
    {standard input}:1305   .text:00000426 flashcalw_erase_all
    {standard input}:1336   .text:00000438 flashcalw_is_security_bit_active
    {standard input}:1373   .text:00000458 $d
    {standard input}:1377   .text:0000045c $t
    {standard input}:1384   .text:0000045c flashcalw_set_security_bit
    {standard input}:1415   .text:0000046e flashcalw_is_page_region_locked
    {standard input}:1461   .text:00000490 flashcalw_is_region_locked
    {standard input}:1512   .text:000004c0 $d
    {standard input}:1516   .text:000004c4 $t
    {standard input}:1523   .text:000004c4 flashcalw_lock_page_region
    {standard input}:1578   .text:000004ec flashcalw_lock_region
    {standard input}:1627   .text:00000514 flashcalw_lock_all_regions
    {standard input}:1691   .text:00000558 $d
    {standard input}:1695   .text:0000055c $t
    {standard input}:1702   .text:0000055c flashcalw_read_gp_fuse_bit
    {standard input}:1908   .text:0000067c flashcalw_read_all_gp_fuses
    {standard input}:1770   .text:000005b6 flashcalw_read_gp_fuse_bitfield
    {standard input}:1851   .text:0000063e flashcalw_read_gp_fuse_byte
    {standard input}:1965   .text:000006b4 $d
    {standard input}:1969   .text:000006b8 $t
    {standard input}:1976   .text:000006b8 flashcalw_erase_gp_fuse_bit
    {standard input}:2040   .text:000006f2 flashcalw_erase_gp_fuse_bitfield
    {standard input}:2164   .text:000007ac $d
    {standard input}:2168   .text:000007b0 $t
    {standard input}:2175   .text:000007b0 flashcalw_erase_gp_fuse_byte
    {standard input}:2293   .text:00000840 flashcalw_erase_all_gp_fuses
    {standard input}:2519   .text:00000940 flashcalw_write_gp_fuse_byte
    {standard input}:2282   .text:0000083c $d
    {standard input}:2286   .text:00000840 $t
    {standard input}:2361   .text:00000882 flashcalw_write_gp_fuse_bit
    {standard input}:2415   .text:000008b0 flashcalw_write_gp_fuse_bitfield
    {standard input}:2508   .text:0000093c $d
    {standard input}:2512   .text:00000940 $t
    {standard input}:2570   .text:00000968 flashcalw_write_all_gp_fuses
    {standard input}:2640   .text:000009bc $d
    {standard input}:2644   .text:000009c0 $t
    {standard input}:2651   .text:000009c0 flashcalw_set_gp_fuse_bit
    {standard input}:2707   .text:000009ec flashcalw_set_gp_fuse_bitfield
    {standard input}:2800   .text:00000a78 $d
    {standard input}:2804   .text:00000a7c $t
    {standard input}:2811   .text:00000a7c flashcalw_set_gp_fuse_byte
    {standard input}:2887   .text:00000ad4 $d
    {standard input}:2891   .text:00000ad8 $t
    {standard input}:2898   .text:00000ad8 flashcalw_set_all_gp_fuses
    {standard input}:2971   .text:00000b38 $d
    {standard input}:2975   .text:00000b3c $t
    {standard input}:2982   .text:00000b3c flashcalw_clear_page_buffer
    {standard input}:3013   .text:00000b4e flashcalw_is_page_erased
    {standard input}:3050   .text:00000b6c $d
    {standard input}:3054   .text:00000b70 $t
    {standard input}:3061   .text:00000b70 flashcalw_quick_page_read
    {standard input}:3106   .text:00000b8e flashcalw_erase_page
    {standard input}:3171   .text:00000bd4 $d
    {standard input}:3175   .text:00000bd8 $t
    {standard input}:3182   .text:00000bd8 flashcalw_erase_all_pages
    {standard input}:3261   .text:00000c38 $d
    {standard input}:3265   .text:00000c3c $t
    {standard input}:3272   .text:00000c3c flashcalw_write_page
    {standard input}:3314   .text:00000c54 flashcalw_quick_user_page_read
    {standard input}:3348   .text:00000c6c flashcalw_erase_user_page
    {standard input}:3408   .text:00000c9e flashcalw_write_user_page
    {standard input}:3439   .text:00000cb0 flashcalw_memset8
    {standard input}:3497   .text:00000ce8 flashcalw_memset16
    {standard input}:3551   .text:00000d1a flashcalw_memset32
    {standard input}:3616   .text:00000d64 flashcalw_memset64
    {standard input}:4068   .text:00001070 $d
    {standard input}:4073   .text:00001078 $t
    {standard input}:4080   .text:00001078 flashcalw_memcpy
    {standard input}:4283   .text:000011a8 $d
    {standard input}:4288   .text:000011b0 $t
    {standard input}:4295   .text:000011b0 flashcalw_picocache_enable
    {standard input}:4398   .text:0000120c flashcalw_picocache_get_status
    {standard input}:4333   .text:000011d4 $d
    {standard input}:4338   .text:000011dc $t
    {standard input}:4345   .text:000011dc flashcalw_picocache_disable
    {standard input}:4386   .text:00001204 $d
    {standard input}:4391   .text:0000120c $t
    {standard input}:4429   .text:0000121c $d
    {standard input}:4433   .text:00001220 $t
    {standard input}:4440   .text:00001220 flashcalw_picocache_invalid_all
    {standard input}:4472   .text:00001234 $d
    {standard input}:4476   .text:00001238 $t
    {standard input}:4483   .text:00001238 flashcalw_picocache_invalid_line
    {standard input}:4534   .text:00001268 $d
    {standard input}:4538   .text:0000126c $t
    {standard input}:4545   .text:0000126c flashcalw_picocache_set_monitor_mode
    {standard input}:4584   .text:00001284 $d
    {standard input}:4588   .text:00001288 $t
    {standard input}:4595   .text:00001288 flashcalw_picocache_enable_monitor
    {standard input}:4627   .text:0000129c $d
    {standard input}:4631   .text:000012a0 $t
    {standard input}:4638   .text:000012a0 flashcalw_picocache_disable_monitor
    {standard input}:4670   .text:000012b4 $d
    {standard input}:4674   .text:000012b8 $t
    {standard input}:4681   .text:000012b8 flashcalw_picocache_reset_monitor
    {standard input}:4713   .text:000012cc $d
    {standard input}:4717   .text:000012d0 $t
    {standard input}:4724   .text:000012d0 flashcalw_picocache_get_monitor_cnt
    {standard input}:4755   .text:000012e0 $d
    {standard input}:4759   .text:000012e4 $t
    {standard input}:4766   .text:000012e4 flashcalw_picocache_get_version
    {standard input}:4797   .text:000012f8 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
sysclk_enable_peripheral_clock
sysclk_disable_peripheral_clock
