   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "wdt_sam4l.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .comm n,1,1
  27              	 .section .bss.tTS,"aw",%nobits
  28              	 .align 2
  31              	tTS:
  32 0000 00000000 	 .space 4
  33              	 .text
  34              	 .align 1
  35              	 .syntax unified
  36              	 .thumb
  37              	 .thumb_func
  38              	 .fpu softvfp
  40              	sysclk_get_main_hz:
  41              	.LFB165:
  42              	 .file 1 "../../../platform/common/services/clock/sam4l/sysclk.h"
   1:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
   2:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \file
   3:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
   4:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Chip-specific system clock management functions
   5:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
   6:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Copyright (c) 2012-2014 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
   8:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  10:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \page License
  11:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  12:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/sam4l/sysclk.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  15:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  18:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  22:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  25:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  28:../../../platform/common/services/clock/sam4l/sysclk.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/sam4l/sysclk.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/sam4l/sysclk.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/sam4l/sysclk.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/sam4l/sysclk.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/sam4l/sysclk.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/sam4l/sysclk.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/sam4l/sysclk.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/sam4l/sysclk.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/sam4l/sysclk.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/sam4l/sysclk.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  40:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  42:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
  43:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CHIP_SYSCLK_H_INCLUDED
  44:../../../platform/common/services/clock/sam4l/sysclk.h **** #define CHIP_SYSCLK_H_INCLUDED
  45:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  46:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <board.h>
  47:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  48:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __cplusplus
  49:../../../platform/common/services/clock/sam4l/sysclk.h **** extern "C" {
  50:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
  51:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  52:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
  53:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \page sysclk_quickstart Quick Start Guide for the System Clock Management service (SAM4L)
  54:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  55:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This is the quick start guide for the \ref sysclk_group "System Clock Management"
  56:../../../platform/common/services/clock/sam4l/sysclk.h ****  * service, with step-by-step instructions on how to configure and use the service for
  57:../../../platform/common/services/clock/sam4l/sysclk.h ****  * specific use cases.
  58:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  59:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \section sysclk_quickstart_usecases System Clock Management use cases
  60:../../../platform/common/services/clock/sam4l/sysclk.h ****  * - \ref sysclk_quickstart_basic
  61:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  62:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \section sysclk_quickstart_basic Basic usage of the System Clock Management service
  63:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This section will present a basic use case for the System Clock Management service.
  64:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This use case will configure the main system clock to 48MHz, using an internal DFLL
  65:../../../platform/common/services/clock/sam4l/sysclk.h ****  * module to multiply the frequency of a crystal attached to the microcontroller. The
  66:../../../platform/common/services/clock/sam4l/sysclk.h ****  * peripheral bus clocks are scaled down from the speed of the main system clock.
  67:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  68:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_prereq Prerequisites
  69:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  - None
  70:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  71:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_setup_steps Initialization code
  72:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Add to the application initialization code:
  73:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \code
  74:../../../platform/common/services/clock/sam4l/sysclk.h **** 	sysclk_init();
  75:../../../platform/common/services/clock/sam4l/sysclk.h **** \endcode
  76:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  77:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_setup_steps_workflow Workflow
  78:../../../platform/common/services/clock/sam4l/sysclk.h ****  * -# Configure the system clocks according to the settings in conf_clock.h:
  79:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    \code sysclk_init(); \endcode
  80:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  81:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_example_code Example code
  82:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   Add or uncomment the following in your conf_clock.h header file, commenting out all other
  83:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   definitions of the same symbol(s):
  84:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \code
  85:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_SOURCE        SYSCLK_SRC_DFLL0
  86:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  87:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   // Fdfll = (Fclk * DFLL_mul) / DFLL_div
  88:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_DFLL0_SOURCE         GENCLK_SRC_OSC32K
  89:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_DFLL0_FREQ           48000000UL
  90:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_DFLL0_MUL            (CONFIG_DFLL0_FREQ / BOARD_OSC32_HZ)
  91:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_DFLL0_DIV            1
  92:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  93:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   // Fbus = Fsys / (2 ^ BUS_div)
  94:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_CPU_DIV       0
  95:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_PBA_DIV       1
  96:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_PBB_DIV       1
  97:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_PBC_DIV       1
  98:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_PBD_DIV       1
  99:../../../platform/common/services/clock/sam4l/sysclk.h **** \endcode
 100:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 101:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_example_workflow Workflow
 102:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  -# Configure the main system clock to use the output of the DFLL0 module as its source:
 103:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \code #define CONFIG_SYSCLK_SOURCE      SYSCLK_SRC_DFLL0 \endcode
 104:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  -# Configure the DFLL0 module to use external crystal oscillator OSC0 as its source:
 105:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \code #define CONFIG_DFLL0_SOURCE       GENCLK_SRC_OSC32K \endcode
 106:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  -# Configure the DFLL0 module to multiply the external oscillator OSC0 frequency up to 48MHz:
 107:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \code
 108:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_DFLL0_FREQ           48000000UL
 109:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_DFLL0_MUL            (CONFIG_DFLL0_FREQ / BOARD_OSC32_HZ)
 110:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_DFLL0_DIV            1
 111:../../../platform/common/services/clock/sam4l/sysclk.h **** \endcode
 112:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \note For user boards, \c BOARD_OSC0_HZ should be defined in the board \c conf_board.h configu
 113:../../../platform/common/services/clock/sam4l/sysclk.h ****  *         file as the frequency of the crystal attached to OSC0.
 114:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  -# Configure the main clock to run at the full 48MHz, scale the peripheral busses to run at one
 115:../../../platform/common/services/clock/sam4l/sysclk.h ****  *     half (2 to the power of 1) of the system clock speed:
 116:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    \code
 117:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_CPU_DIV       0
 118:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_PBA_DIV       1
 119:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_PBB_DIV       1
 120:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_PBC_DIV       1
 121:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_PBD_DIV       1
 122:../../../platform/common/services/clock/sam4l/sysclk.h **** \endcode
 123:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    \note Some dividers are powers of two, while others are integer division factors. Refer to th
 124:../../../platform/common/services/clock/sam4l/sysclk.h ****  *          formulas in the conf_clock.h template commented above each division define.
 125:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 126:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 127:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 128:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 129:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \weakgroup sysclk_group
 130:../../../platform/common/services/clock/sam4l/sysclk.h ****  * @{
 131:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 132:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 133:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name System clock source
 134:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 135:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_RCSYS        0     //!< System RC oscillator
 136:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_OSC0         1     //!< Oscillator 0
 137:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_PLL0         2     //!< Phase Locked Loop 0
 138:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_DFLL         3     //!< Digital Frequency Locked Loop
 139:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_RC80M        4     //!< 80 MHz RC oscillator
 140:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_RCFAST       5     //!< 4-8-12 MHz RC oscillator
 141:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_RC1M         6     //!< 1 MHz RC oscillator
 142:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 143:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 144:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name USB Clock Sources
 145:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 146:../../../platform/common/services/clock/sam4l/sysclk.h **** #define USBCLK_SRC_OSC0         GENCLK_SRC_OSC0     //!< Use OSC0
 147:../../../platform/common/services/clock/sam4l/sysclk.h **** #define USBCLK_SRC_PLL0         GENCLK_SRC_PLL0     //!< Use PLL0
 148:../../../platform/common/services/clock/sam4l/sysclk.h **** #define USBCLK_SRC_DFLL         GENCLK_SRC_DFLL     //!< Use DFLL
 149:../../../platform/common/services/clock/sam4l/sysclk.h **** #define USBCLK_SRC_GCLKIN0      GENCLK_SRC_GCLKIN0  //!< Use GCLKIN0
 150:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 151:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 152:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Bus index of maskable module clocks
 153:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 154:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_CPU               0
 155:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_HSB               1
 156:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_PBA               2
 157:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_PBB               3
 158:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_PBC               4
 159:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_PBD               5
 160:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 161:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 162:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the CPU clock
 163:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 164:../../../platform/common/services/clock/sam4l/sysclk.h **** //! On-Chip Debug system
 165:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_OCD              0
 166:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 167:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 168:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the HSB clock
 169:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 170:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PDCA memory interface
 171:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PDCA_HSB         0
 172:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Flash data interface
 173:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HFLASHC_DATA     1
 174:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HRAMC data interface
 175:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HRAMC1_DATA      2
 176:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USBC DMA and FIFO interface
 177:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USBC_DATA        3
 178:../../../platform/common/services/clock/sam4l/sysclk.h **** //! CRCCU data interface
 179:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_CRCCU_DATA       4
 180:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB<->PBA bridge
 181:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PBA_BRIDGE       5
 182:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB<->PBB bridge
 183:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PBB_BRIDGE       6
 184:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB<->PBC bridge
 185:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PBC_BRIDGE       7
 186:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB<->PBD bridge
 187:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PBD_BRIDGE       8
 188:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Advanced Encryption Standard
 189:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_AESA_HSB         9
 190:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 191:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 192:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the PBA clock
 193:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 194:../../../platform/common/services/clock/sam4l/sysclk.h **** //! IISC Controller
 195:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_IISC             0
 196:../../../platform/common/services/clock/sam4l/sysclk.h **** //! SPI Controller
 197:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SPI              1
 198:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Timer/Counter 0
 199:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TC0              2
 200:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Timer/Counter 1
 201:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TC1              3
 202:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Master 0
 203:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIM0            4
 204:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Slave 0
 205:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIS0            5
 206:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Master 1
 207:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIM1            6
 208:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Slave 1
 209:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIS1            7
 210:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USART 0
 211:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USART0           8
 212:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USART 1
 213:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USART1           9
 214:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USART 2
 215:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USART2           10
 216:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USART 3
 217:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USART3           11
 218:../../../platform/common/services/clock/sam4l/sysclk.h **** //! A/D Converter
 219:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_ADCIFE           12
 220:../../../platform/common/services/clock/sam4l/sysclk.h **** //! D/A Converter
 221:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_DACC             13
 222:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Analog Comparator
 223:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_ACIFC            14
 224:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Glue Logic Controller
 225:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_GLOC             15
 226:../../../platform/common/services/clock/sam4l/sysclk.h **** //! ABDACB Controller
 227:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_ABDACB           16
 228:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TRNG Controller
 229:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TRNG             17
 230:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PARC Controller
 231:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PARC             18
 232:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Capacitive Touch
 233:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_CATB             19
 234:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Master 2
 235:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIM2            21
 236:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Master 3
 237:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIM3            22
 238:../../../platform/common/services/clock/sam4l/sysclk.h **** //! LCD Controller
 239:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_LCDCA            23
 240:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 241:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 242:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 243:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the PBB clock
 244:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 245:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Flash Controller registers
 246:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HFLASHC_REGS     0
 247:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HRAMC Controller registers
 248:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HRAMC1_REGS      1
 249:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB Matrix configuration
 250:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HMATRIX          2
 251:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PDCA peripheral bus interface
 252:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PDCA_PB          3
 253:../../../platform/common/services/clock/sam4l/sysclk.h **** //! CRCCU registers
 254:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_CRCCU_REGS       4
 255:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USBC registers
 256:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USBC_REGS        5
 257:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PEVC Controller
 258:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PEVC             6
 259:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 260:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 261:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the PBC clock
 262:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 263:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PM configuration
 264:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PM               0
 265:../../../platform/common/services/clock/sam4l/sysclk.h **** //! CHIPID Controller
 266:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_CHIPID           1
 267:../../../platform/common/services/clock/sam4l/sysclk.h **** //! System Control Interface
 268:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SCIF             2
 269:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Frequency Meter
 270:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_FREQM            3
 271:../../../platform/common/services/clock/sam4l/sysclk.h **** //! General-Purpose I/O
 272:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_GPIO             4
 273:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 274:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 275:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the PBD clock
 276:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 277:../../../platform/common/services/clock/sam4l/sysclk.h **** //! BPM configuration
 278:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_BPM              0
 279:../../../platform/common/services/clock/sam4l/sysclk.h **** //! BSCIF configuration
 280:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_BSCIF            1
 281:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Asynchronous Timer
 282:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_AST              2
 283:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Watchdog Timer
 284:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_WDT              3
 285:../../../platform/common/services/clock/sam4l/sysclk.h **** //! External Interrupt Controller
 286:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_EIC              4
 287:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PICOUART
 288:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PICOUART         5
 289:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 290:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 291:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Divided clock mask derived from the PBA clock
 292:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 293:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TIMER_CLOCK2 mask
 294:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_TIMER_CLOCK2     (1u << 0)
 295:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TIMER_CLOCK3 mask
 296:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_TIMER_CLOCK3     (1u << 2)
 297:../../../platform/common/services/clock/sam4l/sysclk.h **** //! CLK_USART/DIV mask
 298:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_CLK_USART        (1u << 2)
 299:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TIMER_CLOCK4 mask
 300:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_TIMER_CLOCK4     (1u << 4)
 301:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TIMER_CLOCK5 mask
 302:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_TIMER_CLOCK5     (1u << 6)
 303:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Bitfield mask
 304:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_Msk              (0x7Fu << 0)
 305:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 306:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 307:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef __ASSEMBLY__
 308:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 309:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <compiler.h>
 310:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <dfll.h>
 311:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <osc.h>
 312:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <pll.h>
 313:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <genclk.h>
 314:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 315:../../../platform/common/services/clock/sam4l/sysclk.h **** // Use the slow clock (RCOSC) with no prescaling if config was empty.
 316:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_SOURCE
 317:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_SOURCE    SYSCLK_SRC_RCSYS
 318:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_SOURCE */
 319:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 320:../../../platform/common/services/clock/sam4l/sysclk.h **** /*
 321:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Enable PicoCache for flash access by default.
 322:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 0: disable PicoCache, 1: enable PicoCache.
 323:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 324:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_HCACHE_ENABLE
 325:../../../platform/common/services/clock/sam4l/sysclk.h **** #define CONFIG_HCACHE_ENABLE          1
 326:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 327:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 328:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 329:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_CPU_DIV
 330:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the CPU clock frequency by
 331:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_CPU\_DIV}\f$
 332:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 333:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the CPU clock frequency is not divided.
 334:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 335:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 336:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 337:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_CPU_DIV
 338:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_CPU_DIV   0
 339:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_CPU_DIV */
 340:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 341:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 342:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_HSBMASK
 343:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the HSB clocks enabled at power-on after the
 344:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all HSB clocks are left
 345:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 346:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 347:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 348:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all HSB clocks are left enabled.
 349:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 350:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 351:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 352:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 353:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_HSBMASK
 354:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 355:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 356:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 357:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_PBA_DIV
 358:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the PBA clock frequency by
 359:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_PBA\_DIV}\f$
 360:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 361:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the PBA clock frequency is not divided.
 362:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 363:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 364:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 365:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_PBA_DIV
 366:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_PBA_DIV   0
 367:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_PBA_DIV */
 368:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 369:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 370:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_PBB_DIV
 371:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the PBB clock frequency by
 372:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_PBB\_DIV}\f$
 373:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 374:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the PBB clock frequency is not divided.
 375:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 376:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 377:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 378:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_PBB_DIV
 379:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_PBB_DIV   0
 380:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_PBB_DIV */
 381:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 382:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 383:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_PBC_DIV
 384:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the PBC clock frequency by
 385:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_PBC\_DIV}\f$
 386:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 387:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the PBC clock frequency is not divided.
 388:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 389:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 390:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 391:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_PBC_DIV
 392:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_PBC_DIV   0
 393:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_PBC_DIV */
 394:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 395:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 396:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_PBD_DIV
 397:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the PBD clock frequency by
 398:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_PBD\_DIV}\f$
 399:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 400:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the PBD clock frequency is not divided.
 401:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 402:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 403:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 404:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_PBD_DIV
 405:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_PBD_DIV   0
 406:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_PBD_DIV */
 407:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 408:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 409:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_CPUMASK
 410:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the CPU clocks enabled at power-on after the
 411:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all CPU clocks are left
 412:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 413:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 414:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 415:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all CPU clocks are left enabled.
 416:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 417:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 418:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 419:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 420:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_CPUMASK
 421:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 422:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 423:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 424:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_PBAMASK
 425:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the PBA clocks enabled at power-on after the
 426:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all PBA clocks are left
 427:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 428:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 429:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 430:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all PBA clocks are left enabled.
 431:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 432:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 433:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 434:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 435:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_PBAMASK
 436:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 437:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 438:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 439:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_PBBMASK
 440:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the PBB clocks enabled at power-on after the
 441:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all PBB clocks are left
 442:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 443:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 444:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 445:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all PBB clocks are left enabled.
 446:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 447:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 448:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 449:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 450:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_PBBMASK
 451:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 452:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 453:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 454:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_PBCMASK
 455:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the PBC clocks enabled at power-on after the
 456:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all PBC clocks are left
 457:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 458:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 459:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 460:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all PBC clocks are left enabled.
 461:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 462:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 463:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 464:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 465:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_PBCMASK
 466:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 467:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 468:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 469:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_PBDMASK
 470:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the PBD clocks enabled at power-on after the
 471:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all PBD clocks are left
 472:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 473:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 474:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 475:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all PBD clocks are left enabled.
 476:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 477:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 478:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 479:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 480:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_PBDMASK
 481:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 482:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 483:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 484:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_USBCLK_SOURCE
 485:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the USB generic clock source
 486:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 487:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Sets the clock source to use for the USB. The source must also be properly
 488:../../../platform/common/services/clock/sam4l/sysclk.h ****  * configured.
 489:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 490:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Define this to one of the \c USBCLK_SRC_xxx settings. Leave it undefined if
 491:../../../platform/common/services/clock/sam4l/sysclk.h ****  * USB is not required.
 492:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 493:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 494:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_USBCLK_SOURCE
 495:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 496:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 497:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 498:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_USBCLK_DIV
 499:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the USB generic clock divider setting
 500:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 501:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Sets the clock division for the USB generic clock. If a USB clock source is
 502:../../../platform/common/services/clock/sam4l/sysclk.h ****  * selected with CONFIG_USBCLK_SOURCE, this configuration symbol must also be
 503:../../../platform/common/services/clock/sam4l/sysclk.h ****  * defined.
 504:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 505:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Define this as any value that does not exceed \c GENCLK_DIV_MAX, and which
 506:../../../platform/common/services/clock/sam4l/sysclk.h ****  * will give a 48 MHz clock frequency from the selected source.
 507:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 508:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 509:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_USBCLK_DIV
 510:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 511:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 512:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 513:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \name Querying the system clock and its derived clocks
 514:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 515:../../../platform/common/services/clock/sam4l/sysclk.h ****  * The following functions may be used to query the current frequency of
 516:../../../platform/common/services/clock/sam4l/sysclk.h ****  * the system clock and the CPU and bus clocks derived from it.
 517:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclk_get_main_hz() and sysclk_get_cpu_hz() can be assumed to be
 518:../../../platform/common/services/clock/sam4l/sysclk.h ****  * available on all platforms, although some platforms may define
 519:../../../platform/common/services/clock/sam4l/sysclk.h ****  * additional accessors for various chip-internal bus clocks. These are
 520:../../../platform/common/services/clock/sam4l/sysclk.h ****  * usually not intended to be queried directly by generic code.
 521:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 522:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 523:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 524:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 525:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Return the current rate in Hz of the main system clock
 526:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 527:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \todo This function assumes that the main clock source never changes
 528:../../../platform/common/services/clock/sam4l/sysclk.h ****  * once it's been set up, and that PLL0 always runs at the compile-time
 529:../../../platform/common/services/clock/sam4l/sysclk.h ****  * configured default rate. While this is probably the most common
 530:../../../platform/common/services/clock/sam4l/sysclk.h ****  * configuration, which we want to support as a special case for
 531:../../../platform/common/services/clock/sam4l/sysclk.h ****  * performance reasons, we will at some point need to support more
 532:../../../platform/common/services/clock/sam4l/sysclk.h ****  * dynamic setups as well.
 533:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 534:../../../platform/common/services/clock/sam4l/sysclk.h **** #if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
 535:../../../platform/common/services/clock/sam4l/sysclk.h **** extern bool sysclk_initialized;
 536:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 537:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline uint32_t sysclk_get_main_hz(void)
 538:../../../platform/common/services/clock/sam4l/sysclk.h **** {
  43              	 .loc 1 538 0
  44              	 .cfi_startproc
  45              	 
  46              	 
  47              	 
  48 0000 80B4     	 push {r7}
  49              	.LCFI0:
  50              	 .cfi_def_cfa_offset 4
  51              	 .cfi_offset 7,-4
  52 0002 00AF     	 add r7,sp,#0
  53              	.LCFI1:
  54              	 .cfi_def_cfa_register 7
 539:../../../platform/common/services/clock/sam4l/sysclk.h **** #if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
 540:../../../platform/common/services/clock/sam4l/sysclk.h **** 	if (!sysclk_initialized ) {
 541:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return OSC_RCSYS_NOMINAL_HZ;
 542:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 543:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 544:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 545:../../../platform/common/services/clock/sam4l/sysclk.h **** 	if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RCSYS) {
 546:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return OSC_RCSYS_NOMINAL_HZ;
 547:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 548:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 549:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef BOARD_OSC0_HZ
 550:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_OSC0) {
 551:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return BOARD_OSC0_HZ;
  55              	 .loc 1 551 0
  56 0004 024B     	 ldr r3,.L3
 552:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 553:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 554:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 555:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef CONFIG_PLL0_SOURCE
 556:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLL0) {
 557:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return pll_get_default_rate(0);
 558:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 559:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 560:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 561:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef CONFIG_DFLL0_SOURCE
 562:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_DFLL) {
 563:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return dfll_get_default_rate(0);
 564:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 565:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 566:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 567:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RC80M) {
 568:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return OSC_RC80M_NOMINAL_HZ;
 569:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 570:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 571:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RCFAST) {
 572:../../../platform/common/services/clock/sam4l/sysclk.h **** 		if (CONFIG_RCFAST_FRANGE == 2) {
 573:../../../platform/common/services/clock/sam4l/sysclk.h **** 			return OSC_RCFAST12M_NOMINAL_HZ;
 574:../../../platform/common/services/clock/sam4l/sysclk.h **** 		} else if (CONFIG_RCFAST_FRANGE == 1) {
 575:../../../platform/common/services/clock/sam4l/sysclk.h **** 			return OSC_RCFAST8M_NOMINAL_HZ;
 576:../../../platform/common/services/clock/sam4l/sysclk.h **** 		} else {
 577:../../../platform/common/services/clock/sam4l/sysclk.h **** 			return OSC_RCFAST4M_NOMINAL_HZ;
 578:../../../platform/common/services/clock/sam4l/sysclk.h **** 		}
 579:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 580:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 581:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RC1M) {
 582:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return OSC_RC1M_NOMINAL_HZ;
 583:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 584:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 585:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 586:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else {
 587:../../../platform/common/services/clock/sam4l/sysclk.h **** 		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
 588:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return 0;
 589:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 590:../../../platform/common/services/clock/sam4l/sysclk.h **** }
  57              	 .loc 1 590 0
  58 0006 1846     	 mov r0,r3
  59 0008 BD46     	 mov sp,r7
  60              	.LCFI2:
  61              	 .cfi_def_cfa_register 13
  62              	 
  63 000a 80BC     	 pop {r7}
  64              	.LCFI3:
  65              	 .cfi_restore 7
  66              	 .cfi_def_cfa_offset 0
  67 000c 7047     	 bx lr
  68              	.L4:
  69 000e 00BF     	 .align 2
  70              	.L3:
  71 0010 001BB700 	 .word 12000000
  72              	 .cfi_endproc
  73              	.LFE165:
  75              	 .align 1
  76              	 .syntax unified
  77              	 .thumb
  78              	 .thumb_func
  79              	 .fpu softvfp
  81              	sysclk_get_cpu_hz:
  82              	.LFB166:
 591:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 592:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 593:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Return the current rate in Hz of the CPU clock
 594:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 595:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \todo This function assumes that the CPU always runs at the system
 596:../../../platform/common/services/clock/sam4l/sysclk.h ****  * clock frequency. We want to support at least two more scenarios:
 597:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Fixed CPU/bus clock dividers (config symbols) and dynamic CPU/bus
 598:../../../platform/common/services/clock/sam4l/sysclk.h ****  * clock dividers (which may change at run time). Ditto for all the bus
 599:../../../platform/common/services/clock/sam4l/sysclk.h ****  * clocks.
 600:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 601:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 602:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 603:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline uint32_t sysclk_get_cpu_hz(void)
 604:../../../platform/common/services/clock/sam4l/sysclk.h **** {
  83              	 .loc 1 604 0
  84              	 .cfi_startproc
  85              	 
  86              	 
  87 0014 80B5     	 push {r7,lr}
  88              	.LCFI4:
  89              	 .cfi_def_cfa_offset 8
  90              	 .cfi_offset 7,-8
  91              	 .cfi_offset 14,-4
  92 0016 00AF     	 add r7,sp,#0
  93              	.LCFI5:
  94              	 .cfi_def_cfa_register 7
 605:../../../platform/common/services/clock/sam4l/sysclk.h **** 	return sysclk_get_main_hz() >> CONFIG_SYSCLK_CPU_DIV;
  95              	 .loc 1 605 0
  96 0018 FFF7F2FF 	 bl sysclk_get_main_hz
  97 001c 0346     	 mov r3,r0
 606:../../../platform/common/services/clock/sam4l/sysclk.h **** }
  98              	 .loc 1 606 0
  99 001e 1846     	 mov r0,r3
 100 0020 80BD     	 pop {r7,pc}
 101              	 .cfi_endproc
 102              	.LFE166:
 104              	 .align 1
 105              	 .syntax unified
 106              	 .thumb
 107              	 .thumb_func
 108              	 .fpu softvfp
 110              	wdt_set_ctrl:
 111              	.LFB182:
 112              	 .file 2 "../../../platform/sam/drivers/wdt/wdt_sam4l.c"
   1:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** /**
   2:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \file
   3:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
   4:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \brief Watchdog Timer (WDT) driver for SAM4L.
   5:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
   6:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * Copyright (c) 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
   8:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \asf_license_start
   9:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
  10:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \page License
  11:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
  12:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
  15:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
  18:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *    and/or other materials provided with the distribution.
  21:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
  22:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *    from this software without specific prior written permission.
  24:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
  25:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *    Atmel microcontroller product.
  27:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
  28:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
  40:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \asf_license_stop
  41:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
  42:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  */
  43:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
  44:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** #include "wdt_sam4l.h"
  45:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** #include "sysclk.h"
  46:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
  47:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** /**
  48:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \ingroup group_sam_drivers_wdt_sam4l
  49:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * @{
  50:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  */
  51:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
  52:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** /** Watchdog control register first write keys */
  53:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** #define WDT_FIRST_KEY     0x55ul
  54:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** /** Watchdog control register second write keys */
  55:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** #define WDT_SECOND_KEY    0xAAul
  56:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
  57:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** /**
  58:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \brief Sets the WatchDog Timer Control register to the \a ctrl value thanks
  59:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *        to the WatchDog Timer key.
  60:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
  61:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \param ctrl  Value to set the WatchDog Timer Control register to.
  62:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  */
  63:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** static void wdt_set_ctrl(uint32_t ctrl)
  64:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** {
 113              	 .loc 2 64 0
 114              	 .cfi_startproc
 115              	 
 116              	 
 117 0022 80B5     	 push {r7,lr}
 118              	.LCFI6:
 119              	 .cfi_def_cfa_offset 8
 120              	 .cfi_offset 7,-8
 121              	 .cfi_offset 14,-4
 122 0024 84B0     	 sub sp,sp,#16
 123              	.LCFI7:
 124              	 .cfi_def_cfa_offset 24
 125 0026 00AF     	 add r7,sp,#0
 126              	.LCFI8:
 127              	 .cfi_def_cfa_register 7
 128 0028 7860     	 str r0,[r7,#4]
  65:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	volatile uint32_t dly;
  66:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
  67:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/* Calculate delay for internal synchronization, see 44.1.2 WDT errata */
  68:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	if ((WDT->WDT_CTRL & WDT_CTRL_CSSEL) == WDT_CLK_SRC_RCSYS) {
 129              	 .loc 2 68 0
 130 002a 1A4B     	 ldr r3,.L11
 131 002c 1B68     	 ldr r3,[r3]
 132 002e 03F40033 	 and r3,r3,#131072
 133 0032 002B     	 cmp r3,#0
 134 0034 0ED1     	 bne .L8
  69:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		dly = div_ceil(sysclk_get_cpu_hz() * 2, OSC_RCSYS_NOMINAL_HZ);
 135              	 .loc 2 69 0
 136 0036 FFF7EDFF 	 bl sysclk_get_cpu_hz
 137 003a 0346     	 mov r3,r0
 138 003c 03F56043 	 add r3,r3,#57344
 139 0040 9C33     	 adds r3,r3,#156
 140 0042 5B00     	 lsls r3,r3,#1
 141 0044 013B     	 subs r3,r3,#1
 142 0046 DB08     	 lsrs r3,r3,#3
 143 0048 134A     	 ldr r2,.L11+4
 144 004a A2FB0323 	 umull r2,r3,r2,r3
 145 004e 5B0A     	 lsrs r3,r3,#9
 146 0050 FB60     	 str r3,[r7,#12]
 147 0052 08E0     	 b .L9
 148              	.L8:
  70:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	} else { /* WDT_CLK_SRC_32K */
  71:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		dly = div_ceil(sysclk_get_cpu_hz() * 2, OSC_RC32K_NOMINAL_HZ);
 149              	 .loc 2 71 0
 150 0054 FFF7DEFF 	 bl sysclk_get_cpu_hz
 151 0058 0346     	 mov r3,r0
 152 005a 03F58043 	 add r3,r3,#16384
 153 005e 5B00     	 lsls r3,r3,#1
 154 0060 013B     	 subs r3,r3,#1
 155 0062 DB0B     	 lsrs r3,r3,#15
 156 0064 FB60     	 str r3,[r7,#12]
 157              	.L9:
  72:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	}
  73:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	dly >>= 3; /* ~8 cycles for one while loop */
 158              	 .loc 2 73 0
 159 0066 FB68     	 ldr r3,[r7,#12]
 160 0068 DB08     	 lsrs r3,r3,#3
 161 006a FB60     	 str r3,[r7,#12]
  74:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	while(dly--);
 162              	 .loc 2 74 0
 163 006c 00BF     	 nop
 164              	.L10:
 165              	 .loc 2 74 0 is_stmt 0 discriminator 1
 166 006e FB68     	 ldr r3,[r7,#12]
 167 0070 5A1E     	 subs r2,r3,#1
 168 0072 FA60     	 str r2,[r7,#12]
 169 0074 002B     	 cmp r3,#0
 170 0076 FAD1     	 bne .L10
  75:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	WDT->WDT_CTRL = ctrl | WDT_CTRL_KEY(WDT_FIRST_KEY);
 171              	 .loc 2 75 0 is_stmt 1
 172 0078 064A     	 ldr r2,.L11
 173 007a 7B68     	 ldr r3,[r7,#4]
 174 007c 43F0AA43 	 orr r3,r3,#1426063360
 175 0080 1360     	 str r3,[r2]
  76:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	WDT->WDT_CTRL = ctrl | WDT_CTRL_KEY(WDT_SECOND_KEY);
 176              	 .loc 2 76 0
 177 0082 044A     	 ldr r2,.L11
 178 0084 7B68     	 ldr r3,[r7,#4]
 179 0086 43F02A43 	 orr r3,r3,#-1442840576
 180 008a 1360     	 str r3,[r2]
  77:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** }
 181              	 .loc 2 77 0
 182 008c 00BF     	 nop
 183 008e 1037     	 adds r7,r7,#16
 184              	.LCFI9:
 185              	 .cfi_def_cfa_offset 8
 186 0090 BD46     	 mov sp,r7
 187              	.LCFI10:
 188              	 .cfi_def_cfa_register 13
 189              	 
 190 0092 80BD     	 pop {r7,pc}
 191              	.L12:
 192              	 .align 2
 193              	.L11:
 194 0094 000C0F40 	 .word 1074727936
 195 0098 AB381E09 	 .word 152975531
 196              	 .cfi_endproc
 197              	.LFE182:
 199              	 .align 1
 200              	 .global wdt_get_config_defaults
 201              	 .syntax unified
 202              	 .thumb
 203              	 .thumb_func
 204              	 .fpu softvfp
 206              	wdt_get_config_defaults:
 207              	.LFB183:
  78:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
  79:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** /**
  80:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \brief Initializes a Watchdog Timer configuration structure to defaults.
  81:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
  82:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *  Initializes a given Watchdog Timer configuration structure to a set of
  83:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *  known default values. This function should be called on all new
  84:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *  instances of these configuration structures before being modified by the
  85:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *  user application.
  86:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
  87:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *  The default configuration is as follows:
  88:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *  - Select the RCSYS oscillator as clock source.
  89:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *  - Not locked, to allow for further (re-)configuration.
  90:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *  - A timeout period of 131072 clocks of the Watchdog module clock (about 1s).
  91:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *  - No window period, so that the watchdog count can be reset at any time.
  92:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
  93:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *  \param cfg    Configuration structure to initialize to default values.
  94:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  */
  95:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** void wdt_get_config_defaults(struct wdt_config *const cfg)
  96:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** {
 208              	 .loc 2 96 0
 209              	 .cfi_startproc
 210              	 
 211              	 
 212              	 
 213 009c 80B4     	 push {r7}
 214              	.LCFI11:
 215              	 .cfi_def_cfa_offset 4
 216              	 .cfi_offset 7,-4
 217 009e 83B0     	 sub sp,sp,#12
 218              	.LCFI12:
 219              	 .cfi_def_cfa_offset 16
 220 00a0 00AF     	 add r7,sp,#0
 221              	.LCFI13:
 222              	 .cfi_def_cfa_register 7
 223 00a2 7860     	 str r0,[r7,#4]
  97:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/* Sanity check arguments */
  98:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	Assert(cfg);
  99:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 100:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/* Default configuration values */
 101:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	cfg->clk_src = WDT_CLK_SRC_RCSYS;
 224              	 .loc 2 101 0
 225 00a4 7B68     	 ldr r3,[r7,#4]
 226 00a6 0022     	 movs r2,#0
 227 00a8 1A60     	 str r2,[r3]
 102:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	cfg->wdt_mode = WDT_MODE_BASIC;
 228              	 .loc 2 102 0
 229 00aa 7B68     	 ldr r3,[r7,#4]
 230 00ac 0022     	 movs r2,#0
 231 00ae 5A60     	 str r2,[r3,#4]
 103:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	cfg->timeout_period = WDT_PERIOD_131072_CLK;
 232              	 .loc 2 103 0
 233 00b0 7B68     	 ldr r3,[r7,#4]
 234 00b2 1022     	 movs r2,#16
 235 00b4 1A72     	 strb r2,[r3,#8]
 104:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	cfg->window_period = WDT_PERIOD_NONE;
 236              	 .loc 2 104 0
 237 00b6 7B68     	 ldr r3,[r7,#4]
 238 00b8 0022     	 movs r2,#0
 239 00ba 5A72     	 strb r2,[r3,#9]
 105:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	cfg->disable_flash_cali = true;
 240              	 .loc 2 105 0
 241 00bc 7B68     	 ldr r3,[r7,#4]
 242 00be 0122     	 movs r2,#1
 243 00c0 9A72     	 strb r2,[r3,#10]
 106:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	cfg->disable_wdt_after_reset = true;
 244              	 .loc 2 106 0
 245 00c2 7B68     	 ldr r3,[r7,#4]
 246 00c4 0122     	 movs r2,#1
 247 00c6 DA72     	 strb r2,[r3,#11]
 107:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	cfg->always_on = false;
 248              	 .loc 2 107 0
 249 00c8 7B68     	 ldr r3,[r7,#4]
 250 00ca 0022     	 movs r2,#0
 251 00cc 1A73     	 strb r2,[r3,#12]
 108:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** }
 252              	 .loc 2 108 0
 253 00ce 00BF     	 nop
 254 00d0 0C37     	 adds r7,r7,#12
 255              	.LCFI14:
 256              	 .cfi_def_cfa_offset 4
 257 00d2 BD46     	 mov sp,r7
 258              	.LCFI15:
 259              	 .cfi_def_cfa_register 13
 260              	 
 261 00d4 80BC     	 pop {r7}
 262              	.LCFI16:
 263              	 .cfi_restore 7
 264              	 .cfi_def_cfa_offset 0
 265 00d6 7047     	 bx lr
 266              	 .cfi_endproc
 267              	.LFE183:
 269              	 .align 1
 270              	 .global wdt_init
 271              	 .syntax unified
 272              	 .thumb
 273              	 .thumb_func
 274              	 .fpu softvfp
 276              	wdt_init:
 277              	.LFB184:
 109:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 110:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** /**
 111:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \brief Initialize the WDT module.
 112:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
 113:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \param dev_inst    Device structure pointer.
 114:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \param wdt         Base address of the WDT instance.
 115:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \param cfg         Pointer to WDT configuration.
 116:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
 117:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \retval true if the initialization was successful.
 118:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \retval false if initialization failed.
 119:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  */
 120:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** bool wdt_init(
 121:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		struct wdt_dev_inst *const dev_inst,
 122:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		Wdt *const wdt,
 123:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		struct wdt_config *const cfg)
 124:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** {
 278              	 .loc 2 124 0
 279              	 .cfi_startproc
 280              	 
 281              	 
 282 00d8 80B5     	 push {r7,lr}
 283              	.LCFI17:
 284              	 .cfi_def_cfa_offset 8
 285              	 .cfi_offset 7,-8
 286              	 .cfi_offset 14,-4
 287 00da 84B0     	 sub sp,sp,#16
 288              	.LCFI18:
 289              	 .cfi_def_cfa_offset 24
 290 00dc 00AF     	 add r7,sp,#0
 291              	.LCFI19:
 292              	 .cfi_def_cfa_register 7
 293 00de F860     	 str r0,[r7,#12]
 294 00e0 B960     	 str r1,[r7,#8]
 295 00e2 7A60     	 str r2,[r7,#4]
 125:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/* Sanity check arguments */
 126:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	Assert(dev_inst);
 127:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	Assert(wdt);
 128:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	Assert(cfg);
 129:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 130:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	dev_inst->hw_dev = wdt;
 296              	 .loc 2 130 0
 297 00e4 FB68     	 ldr r3,[r7,#12]
 298 00e6 BA68     	 ldr r2,[r7,#8]
 299 00e8 1A60     	 str r2,[r3]
 131:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	dev_inst->wdt_cfg = cfg;
 300              	 .loc 2 131 0
 301 00ea FB68     	 ldr r3,[r7,#12]
 302 00ec 7A68     	 ldr r2,[r7,#4]
 303 00ee 5A60     	 str r2,[r3,#4]
 132:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 133:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/* Enable APB clock for WDT */
 134:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	sysclk_enable_peripheral_clock(wdt);
 304              	 .loc 2 134 0
 305 00f0 B868     	 ldr r0,[r7,#8]
 306 00f2 364B     	 ldr r3,.L26
 307 00f4 9847     	 blx r3
 308              	.LVL0:
 135:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 136:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/* Check SFV bit: if SFV bit is set, Control Register is locked */
 137:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	if (wdt->WDT_CTRL & WDT_CTRL_SFV) {
 309              	 .loc 2 137 0
 310 00f6 BB68     	 ldr r3,[r7,#8]
 311 00f8 1B68     	 ldr r3,[r3]
 312 00fa 03F00803 	 and r3,r3,#8
 313 00fe 002B     	 cmp r3,#0
 314 0100 01D0     	 beq .L15
 138:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		return false;
 315              	 .loc 2 138 0
 316 0102 0023     	 movs r3,#0
 317 0104 5DE0     	 b .L16
 318              	.L15:
 139:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	}
 140:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 141:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/* Disable the WDT */
 142:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	if (wdt->WDT_CTRL & WDT_CTRL_EN) {
 319              	 .loc 2 142 0
 320 0106 BB68     	 ldr r3,[r7,#8]
 321 0108 1B68     	 ldr r3,[r3]
 322 010a 03F00103 	 and r3,r3,#1
 323 010e 002B     	 cmp r3,#0
 324 0110 0DD0     	 beq .L17
 143:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		wdt_set_ctrl(wdt->WDT_CTRL & ~WDT_CTRL_EN);
 325              	 .loc 2 143 0
 326 0112 BB68     	 ldr r3,[r7,#8]
 327 0114 1B68     	 ldr r3,[r3]
 328 0116 23F00103 	 bic r3,r3,#1
 329 011a 1846     	 mov r0,r3
 330 011c FFF781FF 	 bl wdt_set_ctrl
 144:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		while (wdt->WDT_CTRL & WDT_CTRL_EN) {
 331              	 .loc 2 144 0
 332 0120 00BF     	 nop
 333              	.L18:
 334              	 .loc 2 144 0 is_stmt 0 discriminator 1
 335 0122 BB68     	 ldr r3,[r7,#8]
 336 0124 1B68     	 ldr r3,[r3]
 337 0126 03F00103 	 and r3,r3,#1
 338 012a 002B     	 cmp r3,#0
 339 012c F9D1     	 bne .L18
 340              	.L17:
 145:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		}
 146:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	}
 147:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/* Disable the WDT clock */
 148:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	if (wdt->WDT_CTRL & WDT_CTRL_CEN) {
 341              	 .loc 2 148 0 is_stmt 1
 342 012e BB68     	 ldr r3,[r7,#8]
 343 0130 1B68     	 ldr r3,[r3]
 344 0132 03F48033 	 and r3,r3,#65536
 345 0136 002B     	 cmp r3,#0
 346 0138 0DD0     	 beq .L19
 149:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		wdt_set_ctrl(wdt->WDT_CTRL & ~WDT_CTRL_CEN);
 347              	 .loc 2 149 0
 348 013a BB68     	 ldr r3,[r7,#8]
 349 013c 1B68     	 ldr r3,[r3]
 350 013e 23F48033 	 bic r3,r3,#65536
 351 0142 1846     	 mov r0,r3
 352 0144 FFF76DFF 	 bl wdt_set_ctrl
 150:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		while (wdt->WDT_CTRL & WDT_CTRL_CEN) {
 353              	 .loc 2 150 0
 354 0148 00BF     	 nop
 355              	.L20:
 356              	 .loc 2 150 0 is_stmt 0 discriminator 1
 357 014a BB68     	 ldr r3,[r7,#8]
 358 014c 1B68     	 ldr r3,[r3]
 359 014e 03F48033 	 and r3,r3,#65536
 360 0152 002B     	 cmp r3,#0
 361 0154 F9D1     	 bne .L20
 362              	.L19:
 151:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		}
 152:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	}
 153:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 154:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/* Initialize the WDT with new configurations */
 155:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	wdt_set_ctrl(cfg->clk_src |
 363              	 .loc 2 155 0 is_stmt 1
 364 0156 7B68     	 ldr r3,[r7,#4]
 365 0158 1A68     	 ldr r2,[r3]
 156:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 			cfg->wdt_mode |
 366              	 .loc 2 156 0
 367 015a 7B68     	 ldr r3,[r7,#4]
 368 015c 5B68     	 ldr r3,[r3,#4]
 155:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 			cfg->wdt_mode |
 369              	 .loc 2 155 0
 370 015e 1A43     	 orrs r2,r2,r3
 157:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 			WDT_CTRL_PSEL(cfg->timeout_period) |
 371              	 .loc 2 157 0
 372 0160 7B68     	 ldr r3,[r7,#4]
 373 0162 1B7A     	 ldrb r3,[r3,#8]
 374 0164 1B02     	 lsls r3,r3,#8
 375 0166 03F4F853 	 and r3,r3,#7936
 156:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 			cfg->wdt_mode |
 376              	 .loc 2 156 0
 377 016a 1A43     	 orrs r2,r2,r3
 158:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 			WDT_CTRL_TBAN(cfg->window_period) |
 378              	 .loc 2 158 0
 379 016c 7B68     	 ldr r3,[r7,#4]
 380 016e 5B7A     	 ldrb r3,[r3,#9]
 381 0170 9B04     	 lsls r3,r3,#18
 382 0172 03F4F803 	 and r3,r3,#8126464
 157:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 			WDT_CTRL_PSEL(cfg->timeout_period) |
 383              	 .loc 2 157 0
 384 0176 1A43     	 orrs r2,r2,r3
 159:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 			(cfg->disable_flash_cali ? WDT_CTRL_FCD : 0) |
 385              	 .loc 2 159 0
 386 0178 7B68     	 ldr r3,[r7,#4]
 387 017a 9B7A     	 ldrb r3,[r3,#10]
 388 017c 002B     	 cmp r3,#0
 389 017e 01D0     	 beq .L21
 390              	 .loc 2 159 0 is_stmt 0 discriminator 1
 391 0180 8023     	 movs r3,#128
 392 0182 00E0     	 b .L22
 393              	.L21:
 394              	 .loc 2 159 0 discriminator 2
 395 0184 0023     	 movs r3,#0
 396              	.L22:
 158:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 			WDT_CTRL_TBAN(cfg->window_period) |
 397              	 .loc 2 158 0 is_stmt 1
 398 0186 1A43     	 orrs r2,r2,r3
 160:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 			(cfg->disable_wdt_after_reset ? WDT_CTRL_DAR : 0)
 399              	 .loc 2 160 0
 400 0188 7B68     	 ldr r3,[r7,#4]
 401 018a DB7A     	 ldrb r3,[r3,#11]
 402 018c 002B     	 cmp r3,#0
 403 018e 01D0     	 beq .L23
 404              	 .loc 2 160 0 is_stmt 0 discriminator 1
 405 0190 0223     	 movs r3,#2
 406 0192 00E0     	 b .L24
 407              	.L23:
 408              	 .loc 2 160 0 discriminator 2
 409 0194 0023     	 movs r3,#0
 410              	.L24:
 155:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 			cfg->wdt_mode |
 411              	 .loc 2 155 0 is_stmt 1
 412 0196 1343     	 orrs r3,r3,r2
 413 0198 1846     	 mov r0,r3
 414 019a FFF742FF 	 bl wdt_set_ctrl
 161:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	);
 162:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	wdt_set_ctrl(wdt->WDT_CTRL | WDT_CTRL_CEN);
 415              	 .loc 2 162 0
 416 019e BB68     	 ldr r3,[r7,#8]
 417 01a0 1B68     	 ldr r3,[r3]
 418 01a2 43F48033 	 orr r3,r3,#65536
 419 01a6 1846     	 mov r0,r3
 420 01a8 FFF73BFF 	 bl wdt_set_ctrl
 163:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	while (!(wdt->WDT_CTRL & WDT_CTRL_CEN)) {
 421              	 .loc 2 163 0
 422 01ac 00BF     	 nop
 423              	.L25:
 424              	 .loc 2 163 0 is_stmt 0 discriminator 1
 425 01ae BB68     	 ldr r3,[r7,#8]
 426 01b0 1B68     	 ldr r3,[r3]
 427 01b2 03F48033 	 and r3,r3,#65536
 428 01b6 002B     	 cmp r3,#0
 429 01b8 F9D0     	 beq .L25
 164:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	}
 165:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 166:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/* Disable APB clock for WDT */
 167:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	sysclk_disable_peripheral_clock(wdt);
 430              	 .loc 2 167 0 is_stmt 1
 431 01ba B868     	 ldr r0,[r7,#8]
 432 01bc 044B     	 ldr r3,.L26+4
 433 01be 9847     	 blx r3
 434              	.LVL1:
 168:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 169:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	return true;
 435              	 .loc 2 169 0
 436 01c0 0123     	 movs r3,#1
 437              	.L16:
 170:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** }
 438              	 .loc 2 170 0
 439 01c2 1846     	 mov r0,r3
 440 01c4 1037     	 adds r7,r7,#16
 441              	.LCFI20:
 442              	 .cfi_def_cfa_offset 8
 443 01c6 BD46     	 mov sp,r7
 444              	.LCFI21:
 445              	 .cfi_def_cfa_register 13
 446              	 
 447 01c8 80BD     	 pop {r7,pc}
 448              	.L27:
 449 01ca 00BF     	 .align 2
 450              	.L26:
 451 01cc 00000000 	 .word sysclk_enable_peripheral_clock
 452 01d0 00000000 	 .word sysclk_disable_peripheral_clock
 453              	 .cfi_endproc
 454              	.LFE184:
 456              	 .align 1
 457              	 .global wdt_enable
 458              	 .syntax unified
 459              	 .thumb
 460              	 .thumb_func
 461              	 .fpu softvfp
 463              	wdt_enable:
 464              	.LFB185:
 171:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 172:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** /**
 173:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \brief Enable the WDT module.
 174:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
 175:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \param dev_inst    Device structure pointer.
 176:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  */
 177:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** void wdt_enable(struct wdt_dev_inst *const dev_inst)
 178:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** {
 465              	 .loc 2 178 0
 466              	 .cfi_startproc
 467              	 
 468              	 
 469 01d4 80B5     	 push {r7,lr}
 470              	.LCFI22:
 471              	 .cfi_def_cfa_offset 8
 472              	 .cfi_offset 7,-8
 473              	 .cfi_offset 14,-4
 474 01d6 84B0     	 sub sp,sp,#16
 475              	.LCFI23:
 476              	 .cfi_def_cfa_offset 24
 477 01d8 00AF     	 add r7,sp,#0
 478              	.LCFI24:
 479              	 .cfi_def_cfa_register 7
 480 01da 7860     	 str r0,[r7,#4]
 179:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	Wdt *wdt = dev_inst->hw_dev;
 481              	 .loc 2 179 0
 482 01dc 7B68     	 ldr r3,[r7,#4]
 483 01de 1B68     	 ldr r3,[r3]
 484 01e0 FB60     	 str r3,[r7,#12]
 180:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	struct wdt_config *cfg = dev_inst->wdt_cfg;
 485              	 .loc 2 180 0
 486 01e2 7B68     	 ldr r3,[r7,#4]
 487 01e4 5B68     	 ldr r3,[r3,#4]
 488 01e6 BB60     	 str r3,[r7,#8]
 181:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 182:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/* Enable APB clock for WDT */
 183:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	sysclk_enable_peripheral_clock(wdt);
 489              	 .loc 2 183 0
 490 01e8 F868     	 ldr r0,[r7,#12]
 491 01ea 0E4B     	 ldr r3,.L32
 492 01ec 9847     	 blx r3
 493              	.LVL2:
 184:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 185:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/* Enable the WDT, and lock WDT CTRL register if need */
 186:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	wdt_set_ctrl(wdt->WDT_CTRL | WDT_CTRL_EN |
 494              	 .loc 2 186 0
 495 01ee FB68     	 ldr r3,[r7,#12]
 496 01f0 1A68     	 ldr r2,[r3]
 187:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		(cfg->always_on ? WDT_CTRL_SFV : 0));
 497              	 .loc 2 187 0
 498 01f2 BB68     	 ldr r3,[r7,#8]
 499 01f4 1B7B     	 ldrb r3,[r3,#12]
 500 01f6 002B     	 cmp r3,#0
 501 01f8 01D0     	 beq .L29
 502              	 .loc 2 187 0 is_stmt 0 discriminator 1
 503 01fa 0823     	 movs r3,#8
 504 01fc 00E0     	 b .L30
 505              	.L29:
 506              	 .loc 2 187 0 discriminator 2
 507 01fe 0023     	 movs r3,#0
 508              	.L30:
 186:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		(cfg->always_on ? WDT_CTRL_SFV : 0));
 509              	 .loc 2 186 0 is_stmt 1
 510 0200 1343     	 orrs r3,r3,r2
 511 0202 43F00103 	 orr r3,r3,#1
 512 0206 1846     	 mov r0,r3
 513 0208 FFF70BFF 	 bl wdt_set_ctrl
 188:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	while ((WDT->WDT_CTRL & WDT_CTRL_EN) != WDT_CTRL_EN) {
 514              	 .loc 2 188 0
 515 020c 00BF     	 nop
 516              	.L31:
 517              	 .loc 2 188 0 is_stmt 0 discriminator 1
 518 020e 064B     	 ldr r3,.L32+4
 519 0210 1B68     	 ldr r3,[r3]
 520 0212 03F00103 	 and r3,r3,#1
 521 0216 012B     	 cmp r3,#1
 522 0218 F9D1     	 bne .L31
 189:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	}
 190:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** }
 523              	 .loc 2 190 0 is_stmt 1
 524 021a 00BF     	 nop
 525 021c 1037     	 adds r7,r7,#16
 526              	.LCFI25:
 527              	 .cfi_def_cfa_offset 8
 528 021e BD46     	 mov sp,r7
 529              	.LCFI26:
 530              	 .cfi_def_cfa_register 13
 531              	 
 532 0220 80BD     	 pop {r7,pc}
 533              	.L33:
 534 0222 00BF     	 .align 2
 535              	.L32:
 536 0224 00000000 	 .word sysclk_enable_peripheral_clock
 537 0228 000C0F40 	 .word 1074727936
 538              	 .cfi_endproc
 539              	.LFE185:
 541              	 .align 1
 542              	 .global wdt_disable
 543              	 .syntax unified
 544              	 .thumb
 545              	 .thumb_func
 546              	 .fpu softvfp
 548              	wdt_disable:
 549              	.LFB186:
 191:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 192:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** /**
 193:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \brief Disable the WDT module.
 194:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
 195:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \param dev_inst    Device structure pointer.
 196:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  */
 197:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** void wdt_disable(struct wdt_dev_inst *const dev_inst)
 198:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** {
 550              	 .loc 2 198 0
 551              	 .cfi_startproc
 552              	 
 553              	 
 554 022c 80B5     	 push {r7,lr}
 555              	.LCFI27:
 556              	 .cfi_def_cfa_offset 8
 557              	 .cfi_offset 7,-8
 558              	 .cfi_offset 14,-4
 559 022e 84B0     	 sub sp,sp,#16
 560              	.LCFI28:
 561              	 .cfi_def_cfa_offset 24
 562 0230 00AF     	 add r7,sp,#0
 563              	.LCFI29:
 564              	 .cfi_def_cfa_register 7
 565 0232 7860     	 str r0,[r7,#4]
 199:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	Wdt *wdt = dev_inst->hw_dev;
 566              	 .loc 2 199 0
 567 0234 7B68     	 ldr r3,[r7,#4]
 568 0236 1B68     	 ldr r3,[r3]
 569 0238 FB60     	 str r3,[r7,#12]
 200:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 201:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/* Disable the WDT */
 202:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	wdt_set_ctrl(wdt->WDT_CTRL & ~WDT_CTRL_EN);
 570              	 .loc 2 202 0
 571 023a FB68     	 ldr r3,[r7,#12]
 572 023c 1B68     	 ldr r3,[r3]
 573 023e 23F00103 	 bic r3,r3,#1
 574 0242 1846     	 mov r0,r3
 575 0244 FFF7EDFE 	 bl wdt_set_ctrl
 203:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	while (wdt->WDT_CTRL & WDT_CTRL_EN) {
 576              	 .loc 2 203 0
 577 0248 00BF     	 nop
 578              	.L35:
 579              	 .loc 2 203 0 is_stmt 0 discriminator 1
 580 024a FB68     	 ldr r3,[r7,#12]
 581 024c 1B68     	 ldr r3,[r3]
 582 024e 03F00103 	 and r3,r3,#1
 583 0252 002B     	 cmp r3,#0
 584 0254 F9D1     	 bne .L35
 204:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	}
 205:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 206:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/* Disable APB clock for WDT */
 207:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	sysclk_disable_peripheral_clock(wdt);
 585              	 .loc 2 207 0 is_stmt 1
 586 0256 F868     	 ldr r0,[r7,#12]
 587 0258 024B     	 ldr r3,.L36
 588 025a 9847     	 blx r3
 589              	.LVL3:
 208:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** }
 590              	 .loc 2 208 0
 591 025c 00BF     	 nop
 592 025e 1037     	 adds r7,r7,#16
 593              	.LCFI30:
 594              	 .cfi_def_cfa_offset 8
 595 0260 BD46     	 mov sp,r7
 596              	.LCFI31:
 597              	 .cfi_def_cfa_register 13
 598              	 
 599 0262 80BD     	 pop {r7,pc}
 600              	.L37:
 601              	 .align 2
 602              	.L36:
 603 0264 00000000 	 .word sysclk_disable_peripheral_clock
 604              	 .cfi_endproc
 605              	.LFE186:
 607              	 .align 1
 608              	 .global wdt_clear
 609              	 .syntax unified
 610              	 .thumb
 611              	 .thumb_func
 612              	 .fpu softvfp
 614              	wdt_clear:
 615              	.LFB187:
 209:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 210:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** /**
 211:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \brief Restart the watchdog timer.
 212:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
 213:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \param dev_inst    Device structure pointer.
 214:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  */
 215:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** void wdt_clear(struct wdt_dev_inst *const dev_inst)
 216:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** {
 616              	 .loc 2 216 0
 617              	 .cfi_startproc
 618              	 
 619              	 
 620              	 
 621 0268 80B4     	 push {r7}
 622              	.LCFI32:
 623              	 .cfi_def_cfa_offset 4
 624              	 .cfi_offset 7,-4
 625 026a 85B0     	 sub sp,sp,#20
 626              	.LCFI33:
 627              	 .cfi_def_cfa_offset 24
 628 026c 00AF     	 add r7,sp,#0
 629              	.LCFI34:
 630              	 .cfi_def_cfa_register 7
 631 026e 7860     	 str r0,[r7,#4]
 217:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	Wdt *wdt = dev_inst->hw_dev;
 632              	 .loc 2 217 0
 633 0270 7B68     	 ldr r3,[r7,#4]
 634 0272 1B68     	 ldr r3,[r3]
 635 0274 FB60     	 str r3,[r7,#12]
 218:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 219:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	while ((wdt->WDT_SR & WDT_SR_CLEARED) != WDT_SR_CLEARED);
 636              	 .loc 2 219 0
 637 0276 00BF     	 nop
 638              	.L39:
 639              	 .loc 2 219 0 is_stmt 0 discriminator 1
 640 0278 FB68     	 ldr r3,[r7,#12]
 641 027a 9B68     	 ldr r3,[r3,#8]
 642 027c 03F00203 	 and r3,r3,#2
 643 0280 022B     	 cmp r3,#2
 644 0282 F9D1     	 bne .L39
 220:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	wdt->WDT_CLR = WDT_CLR_KEY(WDT_FIRST_KEY) | WDT_CLR_WDTCLR;
 645              	 .loc 2 220 0 is_stmt 1
 646 0284 FB68     	 ldr r3,[r7,#12]
 647 0286 054A     	 ldr r2,.L40
 648 0288 5A60     	 str r2,[r3,#4]
 221:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	wdt->WDT_CLR = WDT_CLR_KEY(WDT_SECOND_KEY) | WDT_CLR_WDTCLR;
 649              	 .loc 2 221 0
 650 028a FB68     	 ldr r3,[r7,#12]
 651 028c 044A     	 ldr r2,.L40+4
 652 028e 5A60     	 str r2,[r3,#4]
 222:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** }
 653              	 .loc 2 222 0
 654 0290 00BF     	 nop
 655 0292 1437     	 adds r7,r7,#20
 656              	.LCFI35:
 657              	 .cfi_def_cfa_offset 4
 658 0294 BD46     	 mov sp,r7
 659              	.LCFI36:
 660              	 .cfi_def_cfa_register 13
 661              	 
 662 0296 80BC     	 pop {r7}
 663              	.LCFI37:
 664              	 .cfi_restore 7
 665              	 .cfi_def_cfa_offset 0
 666 0298 7047     	 bx lr
 667              	.L41:
 668 029a 00BF     	 .align 2
 669              	.L40:
 670 029c 01000055 	 .word 1426063361
 671 02a0 010000AA 	 .word -1442840575
 672              	 .cfi_endproc
 673              	.LFE187:
 675              	 .align 1
 676              	 .global wdt_reset_mcu
 677              	 .syntax unified
 678              	 .thumb
 679              	 .thumb_func
 680              	 .fpu softvfp
 682              	wdt_reset_mcu:
 683              	.LFB188:
 223:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 224:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** /**
 225:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \brief Reset MCU by generating a WDT reset as soon as possible.
 226:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
 227:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \note This function will not work if the SFV bit was previously set
 228:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * (The WDT configuration has previously been locked).
 229:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  *
 230:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  * \return \b false Cannot reset MCU with a WDT reset, or the MCU will be reset.
 231:../../../platform/sam/drivers/wdt/wdt_sam4l.c ****  */
 232:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** bool wdt_reset_mcu(void)
 233:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** {
 684              	 .loc 2 233 0
 685              	 .cfi_startproc
 686              	 
 687              	 
 688 02a4 80B5     	 push {r7,lr}
 689              	.LCFI38:
 690              	 .cfi_def_cfa_offset 8
 691              	 .cfi_offset 7,-8
 692              	 .cfi_offset 14,-4
 693 02a6 86B0     	 sub sp,sp,#24
 694              	.LCFI39:
 695              	 .cfi_def_cfa_offset 32
 696 02a8 00AF     	 add r7,sp,#0
 697              	.LCFI40:
 698              	 .cfi_def_cfa_register 7
 234:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	struct wdt_dev_inst wdt_inst;
 235:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	struct wdt_config   wdt_cfg;
 236:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 237:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	/*
 238:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	 * Enable the watchdog with minimum period
 239:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	 * (fastest way to get a watchdog reset).
 240:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	 */
 241:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	wdt_get_config_defaults(&wdt_cfg);
 699              	 .loc 2 241 0
 700 02aa 3B46     	 mov r3,r7
 701 02ac 1846     	 mov r0,r3
 702 02ae FFF7FEFF 	 bl wdt_get_config_defaults
 242:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	wdt_cfg.timeout_period = WDT_PERIOD_MIN_CLK;
 703              	 .loc 2 242 0
 704 02b2 0723     	 movs r3,#7
 705 02b4 3B72     	 strb r3,[r7,#8]
 243:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	wdt_cfg.disable_wdt_after_reset = true;
 706              	 .loc 2 243 0
 707 02b6 0123     	 movs r3,#1
 708 02b8 FB72     	 strb r3,[r7,#11]
 244:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	if (!wdt_init(&wdt_inst, WDT, &wdt_cfg)) {
 709              	 .loc 2 244 0
 710 02ba 3A46     	 mov r2,r7
 711 02bc 07F11003 	 add r3,r7,#16
 712 02c0 0D49     	 ldr r1,.L47
 713 02c2 1846     	 mov r0,r3
 714 02c4 FFF7FEFF 	 bl wdt_init
 715 02c8 0346     	 mov r3,r0
 716 02ca 83F00103 	 eor r3,r3,#1
 717 02ce DBB2     	 uxtb r3,r3
 718 02d0 002B     	 cmp r3,#0
 719 02d2 01D0     	 beq .L43
 245:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		return false;
 720              	 .loc 2 245 0
 721 02d4 0023     	 movs r3,#0
 722 02d6 0BE0     	 b .L46
 723              	.L43:
 724              	.LBB6:
 725              	.LBB7:
 726              	 .file 3 "../../../platform/thirdparty/CMSIS/include/core_cmFunc.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @file     core_cmFunc.h
   3:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @brief    CMSIS Cortex-M Core Function Access Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @date     19. January 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * within development tools that are supporting such ARM based processors. 
  14:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  24:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #ifndef __CORE_CMFUNC_H
  25:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __CORE_CMFUNC_H
  26:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* ###########################  Core Function Access  ########################### */
  28:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \ingroup  CMSIS_Core_FunctionInterface   
  29:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  30:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   @{
  31:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  32:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  33:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  34:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* ARM armcc specific functions */
  35:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  36:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__ARMCC_VERSION < 400677)
  37:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  38:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
  39:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  40:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* intrinsic void __enable_irq();     */
  41:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* intrinsic void __disable_irq();    */
  42:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  43:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Control Register
  44:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  45:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the Control Register.
  46:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  47:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Control Register value
  48:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  49:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_CONTROL(void)
  50:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  51:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  52:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regControl);
  53:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  54:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  55:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  56:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Control Register
  57:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  58:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function writes the given value to the Control Register.
  59:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  60:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    control  Control Register value to set
  61:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  62:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_CONTROL(uint32_t control)
  63:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  64:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  65:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regControl = control;
  66:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  67:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  68:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  69:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get IPSR Register
  70:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  71:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the IPSR Register.
  72:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  73:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               IPSR Register value
  74:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  75:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_IPSR(void)
  76:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  77:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regIPSR          __ASM("ipsr");
  78:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regIPSR);
  79:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  80:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  81:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  82:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get APSR Register
  83:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  84:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the APSR Register.
  85:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  86:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               APSR Register value
  87:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  88:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_APSR(void)
  89:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  90:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regAPSR          __ASM("apsr");
  91:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regAPSR);
  92:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  93:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  94:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  95:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get xPSR Register
  96:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  97:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the xPSR Register.
  98:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  99:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               xPSR Register value
 100:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 101:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_xPSR(void)
 102:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 103:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regXPSR          __ASM("xpsr");
 104:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regXPSR);
 105:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 106:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 107:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 108:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 109:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 110:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 111:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 112:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               PSP Register value
 113:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 114:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PSP(void)
 115:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 116:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 117:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regProcessStackPointer);
 118:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 119:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 120:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 121:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 122:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 123:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 124:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 125:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 126:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 127:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 128:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 129:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 130:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regProcessStackPointer = topOfProcStack;
 131:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 132:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 133:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 134:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 135:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 136:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 137:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 138:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               MSP Register value
 139:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 140:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_MSP(void)
 141:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 142:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 143:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regMainStackPointer);
 144:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 145:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 146:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 147:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 148:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 149:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 150:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 151:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 152:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 153:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 154:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 155:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 156:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regMainStackPointer = topOfMainStack;
 157:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 158:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 159:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 160:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Priority Mask
 161:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 162:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 163:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 164:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Priority Mask value
 165:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 166:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PRIMASK(void)
 167:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 168:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 169:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regPriMask);
 170:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 171:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 172:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 173:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Priority Mask
 174:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 175:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Priority Mask Register.
 176:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 177:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    priMask  Priority Mask
 178:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 179:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 180:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 181:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 182:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regPriMask = (priMask);
 183:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 184:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 185:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 186:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if       (__CORTEX_M >= 0x03)
 187:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 188:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Enable FIQ
 189:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 190:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function enables FIQ interrupts by clearing the F-bit in the CPSR.
 191:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     Can only be executed in Privileged modes.
 192:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 193:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __enable_fault_irq                __enable_fiq
 194:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 195:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 196:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Disable FIQ
 197:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 198:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function disables FIQ interrupts by setting the F-bit in the CPSR.
 199:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     Can only be executed in Privileged modes.
 200:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 201:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __disable_fault_irq               __disable_fiq
 202:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 203:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Base Priority
 205:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 206:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Base Priority register.
 207:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 208:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Base Priority register value
 209:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 210:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t  __get_BASEPRI(void)
 211:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 212:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 213:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regBasePri);
 214:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 215:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 216:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 217:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Base Priority
 218:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 219:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Base Priority register.
 220:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 221:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    basePri  Base Priority value to set
 222:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 223:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 224:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 225:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 226:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regBasePri = (basePri & 0xff);
 227:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 228:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 229:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 230:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Fault Mask
 231:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 232:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Fault Mask register.
 233:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 234:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Fault Mask register value
 235:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 236:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 237:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 238:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 239:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regFaultMask);
 240:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 241:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 242:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 243:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Fault Mask
 244:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 245:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Fault Mask register.
 246:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 247:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    faultMask  Fault Mask value to set
 248:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 249:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 250:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 251:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 252:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regFaultMask = (faultMask & (uint32_t)1);
 253:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 254:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 255:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif /* (__CORTEX_M >= 0x03) */
 256:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 257:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 258:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if       (__CORTEX_M == 0x04)
 259:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 260:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get FPSCR
 261:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 262:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Floating Point Status/Control register.
 263:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 264:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Floating Point Status/Control register value
 265:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 266:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FPSCR(void)
 267:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 268:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 269:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 270:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regfpscr);
 271:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #else
 272:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****    return(0);
 273:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
 274:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 275:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 276:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 277:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set FPSCR
 278:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 279:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Floating Point Status/Control register.
 280:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 281:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    fpscr  Floating Point Status/Control value to set
 282:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 283:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 284:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 285:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 286:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 287:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regfpscr = (fpscr);
 288:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
 289:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 290:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 291:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif /* (__CORTEX_M == 0x04) */
 292:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 293:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 294:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 295:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* IAR iccarm specific functions */
 296:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 297:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #include <cmsis_iar.h>
 298:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 299:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 300:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 301:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* TI CCS specific functions */
 302:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 303:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #include <cmsis_ccs.h>
 304:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 306:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 307:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* GNU gcc specific functions */
 308:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 309:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Enable IRQ Interrupts
 310:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 311:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   This function enables IRQ interrupts by clearing the I-bit in the CPSR.
 312:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   Can only be executed in Privileged modes.
 313:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 314:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
 315:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 316:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("cpsie i");
 317:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 318:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 319:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 320:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Disable IRQ Interrupts
 321:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 322:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   This function disables IRQ interrupts by setting the I-bit in the CPSR.
 323:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   Can only be executed in Privileged modes.
 324:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 325:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 326:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 327:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("cpsid i");
 727              	 .loc 3 327 0
 728              	 .syntax unified
 729              	
 730 02d8 72B6     	 cpsid i
 731              	
 732              	 .thumb
 733              	 .syntax unified
 734              	.LBE7:
 735              	.LBE6:
 736              	.LBB8:
 737              	.LBB9:
 738              	 .file 4 "../../../platform/thirdparty/CMSIS/include/core_cmInstr.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @date     07. February 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors.
  14:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  24:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  28:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   Access to dedicated instructions
  31:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   @{
  32:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** */
  33:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  34:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* ARM armcc specific functions */
  36:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  37:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #endif
  40:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  41:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  42:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  No Operation
  43:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  44:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  46:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __NOP                             __nop
  47:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  48:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  49:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  51:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     until one of a number of events occurs.
  53:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  54:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __WFI                             __wfi
  55:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  56:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  57:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Event
  58:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  59:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  62:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __WFE                             __wfe
  63:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  64:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  65:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Send Event
  66:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  67:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  69:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __SEV                             __sev
  70:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  71:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  72:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  74:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  75:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  76:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  78:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  80:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  81:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  83:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  84:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  86:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  88:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  89:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  91:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
  92:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  94:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  96:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  97:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  99:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 101:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 103:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 104:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __REV                             __rev
 105:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 106:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 107:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 109:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 111:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 113:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 114:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 115:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 116:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   rev16 r0, r0
 117:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   bx lr
 118:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 119:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 120:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 121:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 123:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 125:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 127:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 128:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 129:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 130:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   revsh r0, r0
 131:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   bx lr
 132:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 133:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 134:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 135:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 136:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 137:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 138:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 139:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 140:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 141:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Rotated value
 142:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 143:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __ROR                             __ror
 144:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 145:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 146:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 147:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 148:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 149:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 150:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 151:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 152:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 153:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 154:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 155:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __RBIT                            __rbit
 156:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 157:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 158:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 159:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 160:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 161:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 162:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 163:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 164:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 165:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 166:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 167:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 168:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 169:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 170:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 171:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 172:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 173:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 174:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 175:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 176:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 177:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 178:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 179:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 180:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 181:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 182:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 183:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 184:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 185:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 186:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 187:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 188:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 189:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 190:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 191:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 192:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 193:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 194:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 195:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 196:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 197:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 198:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 199:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 200:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 201:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 202:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 203:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 205:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 206:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 207:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 208:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 209:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 210:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 211:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 212:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 213:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 214:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 215:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 216:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 217:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 218:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 219:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 220:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 221:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 222:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 223:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 224:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 225:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 226:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 227:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 228:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 229:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CLREX                           __clrex
 230:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 231:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 232:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Signed Saturate
 233:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 234:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function saturates a signed value.
 235:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 236:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 238:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             Saturated value
 239:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 240:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __SSAT                            __ssat
 241:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 242:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 243:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 244:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 245:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function saturates an unsigned value.
 246:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 247:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 248:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 249:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             Saturated value
 250:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 251:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __USAT                            __usat
 252:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 253:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 254:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Count leading zeros
 255:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 256:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 257:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 258:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 259:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             number of leading zeros in value
 260:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 261:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CLZ                             __clz
 262:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 263:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 264:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 265:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 266:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 267:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 268:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* IAR iccarm specific functions */
 269:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 270:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #include <cmsis_iar.h>
 271:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 272:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 273:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 274:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* TI CCS specific functions */
 275:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 276:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #include <cmsis_ccs.h>
 277:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 278:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 279:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 280:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* GNU gcc specific functions */
 281:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 282:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  No Operation
 283:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 284:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 285:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 286:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 287:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 288:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("nop");
 289:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 290:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 291:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 292:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 293:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 294:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 295:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     until one of a number of events occurs.
 296:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 297:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
 298:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 299:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("wfi");
 300:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 301:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 302:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 303:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Event
 304:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 306:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 307:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 308:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFE(void)
 309:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 310:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("wfe");
 311:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 312:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 313:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 314:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Send Event
 315:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 316:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 317:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 318:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __SEV(void)
 319:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 320:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("sev");
 321:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 322:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 323:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 324:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 325:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 326:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 327:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 328:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     memory, after the instruction has been completed.
 329:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 330:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __ISB(void)
 331:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 332:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("isb");
 333:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 334:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 335:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 336:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 337:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 338:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 339:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 340:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 341:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
 342:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 343:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("dsb");
 344:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 345:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 346:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 347:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 348:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 349:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 350:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 351:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 352:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
 353:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 354:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("dmb");
 739              	 .loc 4 354 0
 740              	 .syntax unified
 741              	
 742 02da BFF35F8F 	 dmb
 743              	
 744              	 .thumb
 745              	 .syntax unified
 746              	.LBE9:
 747              	.LBE8:
 246:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	}
 247:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	Disable_global_interrupt();
 748              	 .loc 2 247 0
 749 02de 074B     	 ldr r3,.L47+4
 750 02e0 0022     	 movs r2,#0
 751 02e2 1A70     	 strb r2,[r3]
 248:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	wdt_enable(&wdt_inst);
 752              	 .loc 2 248 0
 753 02e4 07F11003 	 add r3,r7,#16
 754 02e8 1846     	 mov r0,r3
 755 02ea FFF7FEFF 	 bl wdt_enable
 756              	.L45:
 249:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 
 250:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	while (1) {
 757              	 .loc 2 250 0 discriminator 1
 758 02ee FEE7     	 b .L45
 759              	.L46:
 251:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 		/* Waiting for watchdog reset */
 252:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** 	}
 253:../../../platform/sam/drivers/wdt/wdt_sam4l.c **** }
 760              	 .loc 2 253 0
 761 02f0 1846     	 mov r0,r3
 762 02f2 1837     	 adds r7,r7,#24
 763              	.LCFI41:
 764              	 .cfi_def_cfa_offset 8
 765 02f4 BD46     	 mov sp,r7
 766              	.LCFI42:
 767              	 .cfi_def_cfa_register 13
 768              	 
 769 02f6 80BD     	 pop {r7,pc}
 770              	.L48:
 771              	 .align 2
 772              	.L47:
 773 02f8 000C0F40 	 .word 1074727936
 774 02fc 00000000 	 .word g_interrupt_enabled
 775              	 .cfi_endproc
 776              	.LFE188:
 778              	.Letext0:
 779              	 .file 5 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 780              	 .file 6 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 781              	 .file 7 "../../../platform/sam/utils/cmsis/sam4l/include/sam4lc4b.h"
 782              	 .file 8 "../../../platform/thirdparty/CMSIS/include/core_cm4.h"
 783              	 .file 9 "../../../platform/sam/utils/cmsis/sam4l/source/templates/system_sam4l.h"
 784              	 .file 10 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_wdt.h"
 785              	 .file 11 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 786              	 .file 12 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 787              	 .file 13 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 788              	 .file 14 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 789              	 .file 15 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdlib.h"
 790              	 .file 16 "../../../platform/common/utils/interrupt/interrupt_sam_nvic.h"
 791              	 .file 17 "../../../platform/sam/utils/compiler.h"
 792              	 .file 18 "../../../platform/sam/drivers/wdt/wdt_sam4l.h"
 793              	 .file 19 "../../../platform/common/services/usb/usb_protocol.h"
 794              	 .file 20 "../../../platform/common/services/usb/udc/udi.h"
 795              	 .file 21 "../../../platform/common/services/usb/udc/udc_desc.h"
 796              	 .file 22 "../../../platform/common/services/usb/udc/udd.h"
 797              	 .file 23 "../../../platform/common/services/usb/class/cdc/device/udi_cdc.h"
 798              	 .file 24 "../../../platform/common/utils/stdio/stdio_usb/stdio_usb.h"
 799              	 .file 25 "../../../platform/common/services/clock/sam4l/pll.h"
 800              	 .file 26 "../../../platform/common/services/clock/sam4l/genclk.h"
 801              	 .file 27 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 wdt_sam4l.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
                            *COM*:00000001 n
    {standard input}:28     .bss.tTS:00000000 $d
    {standard input}:31     .bss.tTS:00000000 tTS
    {standard input}:34     .text:00000000 $t
    {standard input}:40     .text:00000000 sysclk_get_main_hz
    {standard input}:71     .text:00000010 $d
    {standard input}:75     .text:00000014 $t
    {standard input}:81     .text:00000014 sysclk_get_cpu_hz
    {standard input}:110    .text:00000022 wdt_set_ctrl
    {standard input}:194    .text:00000094 $d
    {standard input}:199    .text:0000009c $t
    {standard input}:206    .text:0000009c wdt_get_config_defaults
    {standard input}:276    .text:000000d8 wdt_init
    {standard input}:451    .text:000001cc $d
    {standard input}:456    .text:000001d4 $t
    {standard input}:463    .text:000001d4 wdt_enable
    {standard input}:536    .text:00000224 $d
    {standard input}:541    .text:0000022c $t
    {standard input}:548    .text:0000022c wdt_disable
    {standard input}:603    .text:00000264 $d
    {standard input}:607    .text:00000268 $t
    {standard input}:614    .text:00000268 wdt_clear
    {standard input}:670    .text:0000029c $d
    {standard input}:675    .text:000002a4 $t
    {standard input}:682    .text:000002a4 wdt_reset_mcu
    {standard input}:773    .text:000002f8 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
sysclk_enable_peripheral_clock
sysclk_disable_peripheral_clock
g_interrupt_enabled
