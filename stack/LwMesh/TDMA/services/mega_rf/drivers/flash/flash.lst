   1               		.file	"flash.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	cpu_irq_save:
  13               	.LFB5:
  14               		.file 1 "../../../platform/common/utils/interrupt/interrupt_avr8.h"
   1:../../../platform/common/utils/interrupt/interrupt_avr8.h **** /**
   2:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * \file
   3:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
   4:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * \brief Global interrupt management for 8-bit AVR
   5:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
   6:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * Copyright (C) 2010-2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
   8:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * \asf_license_start
   9:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
  10:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * \page License
  11:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
  12:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
  15:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
  18:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
  22:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
  25:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
  28:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
  40:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * \asf_license_stop
  41:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
  42:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  */
  43:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #ifndef UTILS_INTERRUPT_INTERRUPT_H
  44:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #define UTILS_INTERRUPT_INTERRUPT_H
  45:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 
  46:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #include <compiler.h>
  47:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #include <parts.h>
  48:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 
  49:../../../platform/common/utils/interrupt/interrupt_avr8.h **** /**
  50:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * \weakgroup interrupt_group
  51:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
  52:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * @{
  53:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  */
  54:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 
  55:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #ifdef ISR_CUSTOM_H
  56:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #  include ISR_CUSTOM_H
  57:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #else
  58:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 
  59:../../../platform/common/utils/interrupt/interrupt_avr8.h **** /**
  60:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * \def ISR
  61:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * \brief Define service routine for specified interrupt vector
  62:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
  63:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * Usage:
  64:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * \code
  65:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * ISR(FOO_vect)
  66:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * {
  67:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *     ...
  68:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * }
  69:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * \endcode
  70:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  *
  71:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * \param vect Interrupt vector name as found in the device header files.
  72:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  */
  73:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #if defined(__DOXYGEN__)
  74:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #  define ISR(vect)
  75:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #elif defined(__GNUC__)
  76:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #  include <avr/interrupt.h>
  77:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #elif defined(__ICCAVR__)
  78:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #  define __ISR(x) _Pragma(#x)
  79:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #  define ISR(vect) __ISR(vector=vect) __interrupt void handler_##vect(void)
  80:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #endif
  81:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #endif // ISR_CUSTOM_H
  82:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 
  83:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #if XMEGA
  84:../../../platform/common/utils/interrupt/interrupt_avr8.h **** /**
  85:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * \brief Initialize interrupt vectors
  86:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * Enables all interrupt levels, with vectors located in the application section
  87:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  * and fixed priority scheduling.
  88:../../../platform/common/utils/interrupt/interrupt_avr8.h ****  */
  89:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #define irq_initialize_vectors() \
  90:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 	PMIC.CTRL = PMIC_LOLVLEN_bm | PMIC_MEDLVLEN_bm | PMIC_HILVLEN_bm;
  91:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #endif
  92:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 
  93:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #ifdef __GNUC__
  94:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #  define cpu_irq_enable()     sei()
  95:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #  define cpu_irq_disable()    cli()
  96:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #else
  97:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #  define cpu_irq_enable()     __enable_interrupt()
  98:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #  define cpu_irq_disable()    __disable_interrupt()
  99:../../../platform/common/utils/interrupt/interrupt_avr8.h **** #endif
 100:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 
 101:../../../platform/common/utils/interrupt/interrupt_avr8.h **** typedef uint8_t irqflags_t;
 102:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 
 103:../../../platform/common/utils/interrupt/interrupt_avr8.h **** static inline irqflags_t cpu_irq_save(void)
 104:../../../platform/common/utils/interrupt/interrupt_avr8.h **** {
  15               		.loc 1 104 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25 0004 1F92      		push __zero_reg__
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 5
  28 0006 CDB7      		in r28,__SP_L__
  29 0008 DEB7      		in r29,__SP_H__
  30               	.LCFI3:
  31               		.cfi_def_cfa_register 28
  32               	/* prologue: function */
  33               	/* frame size = 1 */
  34               	/* stack size = 3 */
  35               	.L__stack_usage = 3
 105:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 	irqflags_t flags = SREG;
  36               		.loc 1 105 0
  37 000a 8FE5      		ldi r24,lo8(95)
  38 000c 90E0      		ldi r25,0
  39 000e FC01      		movw r30,r24
  40 0010 8081      		ld r24,Z
  41 0012 8983      		std Y+1,r24
 106:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 	cpu_irq_disable();
  42               		.loc 1 106 0
  43               	/* #APP */
  44               	 ;  106 "../../../platform/common/utils/interrupt/interrupt_avr8.h" 1
  45 0014 F894      		cli
  46               	 ;  0 "" 2
 107:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 	return flags;
  47               		.loc 1 107 0
  48               	/* #NOAPP */
  49 0016 8981      		ldd r24,Y+1
  50               	/* epilogue start */
 108:../../../platform/common/utils/interrupt/interrupt_avr8.h **** }
  51               		.loc 1 108 0
  52 0018 0F90      		pop __tmp_reg__
  53 001a DF91      		pop r29
  54 001c CF91      		pop r28
  55 001e 0895      		ret
  56               		.cfi_endproc
  57               	.LFE5:
  60               	cpu_irq_restore:
  61               	.LFB6:
 109:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 
 110:../../../platform/common/utils/interrupt/interrupt_avr8.h **** static inline void cpu_irq_restore(irqflags_t flags)
 111:../../../platform/common/utils/interrupt/interrupt_avr8.h **** {
  62               		.loc 1 111 0
  63               		.cfi_startproc
  64 0020 CF93      		push r28
  65               	.LCFI4:
  66               		.cfi_def_cfa_offset 3
  67               		.cfi_offset 28, -2
  68 0022 DF93      		push r29
  69               	.LCFI5:
  70               		.cfi_def_cfa_offset 4
  71               		.cfi_offset 29, -3
  72 0024 1F92      		push __zero_reg__
  73               	.LCFI6:
  74               		.cfi_def_cfa_offset 5
  75 0026 CDB7      		in r28,__SP_L__
  76 0028 DEB7      		in r29,__SP_H__
  77               	.LCFI7:
  78               		.cfi_def_cfa_register 28
  79               	/* prologue: function */
  80               	/* frame size = 1 */
  81               	/* stack size = 3 */
  82               	.L__stack_usage = 3
  83 002a 8983      		std Y+1,r24
 112:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 	barrier();
  84               		.loc 1 112 0
 113:../../../platform/common/utils/interrupt/interrupt_avr8.h **** 	SREG = flags;
  85               		.loc 1 113 0
  86 002c 8FE5      		ldi r24,lo8(95)
  87 002e 90E0      		ldi r25,0
  88 0030 2981      		ldd r18,Y+1
  89 0032 FC01      		movw r30,r24
  90 0034 2083      		st Z,r18
 114:../../../platform/common/utils/interrupt/interrupt_avr8.h **** }
  91               		.loc 1 114 0
  92 0036 0000      		nop
  93               	/* epilogue start */
  94 0038 0F90      		pop __tmp_reg__
  95 003a DF91      		pop r29
  96 003c CF91      		pop r28
  97 003e 0895      		ret
  98               		.cfi_endproc
  99               	.LFE6:
 101               		.section	.bootloader,"ax",@progbits
 102               	.global	flash_erase_page
 104               	flash_erase_page:
 105               	.LFB75:
 106               		.file 2 "../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c"
   1:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** /**
   2:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * \file
   3:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *
   4:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * \brief MEGA FLASH DRIVER
   5:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *
   6:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * Copyright (c) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *
   8:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *
  10:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * \page License
  11:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *
  12:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * Redistribution and use in source and binary forms, with or without
  13:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * modification, are permitted provided that the following conditions are met:
  14:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *
  15:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *    this list of conditions and the following disclaimer.
  17:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *
  18:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *    and/or other materials provided with the distribution.
  21:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *
  22:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *    from this software without specific prior written permission.
  24:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *
  25:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *    Atmel microcontroller product.
  27:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *
  28:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *
  40:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  * \asf_license_stop
  41:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  *
  42:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c ****  */
  43:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #include <stdint.h>
  44:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #include "interrupt.h"
  45:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #include "compiler.h"
  46:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #include "parts.h"
  47:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #include "flash.h"
  48:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #include "sysclk.h"
  49:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #include "status_codes.h"
  50:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
  51:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** void flash_write(uint32_t flash_addr, uint32_t length, uint8_t *data)
  52:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** {
  53:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	static uint8_t temp_buf[SPM_PAGESIZE];
  54:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	static uint32_t remaining_len;
  55:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	remaining_len = length;
  56:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	uint8_t *ptr = data;
  57:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	static uint32_t next_page_addr;
  58:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	static uint16_t current_len;
  59:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	do {
  60:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		next_page_addr
  61:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 			= ((flash_addr +
  62:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 				SPM_PAGESIZE) - (flash_addr % SPM_PAGESIZE));
  63:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
  64:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		/* copy the data in the page to be written into a temporary
  65:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		 * buffer,before erasing */
  66:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		flash_read((flash_addr - (flash_addr % SPM_PAGESIZE)),
  67:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 				SPM_PAGESIZE, temp_buf);
  68:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
  69:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		/* fill the temporary page buffer starting from address 0 */
  70:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		flash_fill_page_buffer(0x0000, SPM_PAGESIZE, temp_buf);
  71:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
  72:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		/* If the length of bytes to be written crosses the current
  73:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		 * page,
  74:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		 *      write till the end of the current page and calculate the
  75:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		 * remaining length to be written*/
  76:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		if ((flash_addr + remaining_len) > (next_page_addr)) {
  77:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 			current_len = (next_page_addr - flash_addr);
  78:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		} else {
  79:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 			current_len = remaining_len;
  80:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		}
  81:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
  82:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		remaining_len -= current_len;
  83:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
  84:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		/* Fill the page buffer with the data to be written at the given
  85:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		 * address */
  86:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		flash_fill_page_buffer(flash_addr, current_len, ptr);
  87:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		/* Erase and program flash page */
  88:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		flash_program_page(flash_addr);
  89:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		flash_addr = next_page_addr;
  90:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		ptr += current_len;
  91:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	} while (remaining_len != 0); /* Check if there is remaining  data  to
  92:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	                               * be written to the next page */
  93:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** }
  94:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
  95:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #ifdef __ICCAVR__
  96:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #pragma optimize = no_inline
  97:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #endif
  98:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** void flash_erase_page(uint32_t page_number)
  99:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** {
 107               		.loc 2 99 0
 108               		.cfi_startproc
 109 0000 CF93      		push r28
 110               	.LCFI8:
 111               		.cfi_def_cfa_offset 3
 112               		.cfi_offset 28, -2
 113 0002 DF93      		push r29
 114               	.LCFI9:
 115               		.cfi_def_cfa_offset 4
 116               		.cfi_offset 29, -3
 117 0004 CDB7      		in r28,__SP_L__
 118 0006 DEB7      		in r29,__SP_H__
 119               	.LCFI10:
 120               		.cfi_def_cfa_register 28
 121 0008 2997      		sbiw r28,9
 122               	.LCFI11:
 123               		.cfi_def_cfa_offset 13
 124 000a 0FB6      		in __tmp_reg__,__SREG__
 125 000c F894      		cli
 126 000e DEBF      		out __SP_H__,r29
 127 0010 0FBE      		out __SREG__,__tmp_reg__
 128 0012 CDBF      		out __SP_L__,r28
 129               	/* prologue: function */
 130               	/* frame size = 9 */
 131               	/* stack size = 11 */
 132               	.L__stack_usage = 11
 133 0014 6E83      		std Y+6,r22
 134 0016 7F83      		std Y+7,r23
 135 0018 8887      		std Y+8,r24
 136 001a 9987      		std Y+9,r25
 100:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	uint32_t page_start_addr;
 101:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	/* Find the start address of the given page number */
 102:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	page_start_addr = (page_number * FLASH_PAGE_SIZE);
 137               		.loc 2 102 0
 138 001c 8E81      		ldd r24,Y+6
 139 001e 9F81      		ldd r25,Y+7
 140 0020 A885      		ldd r26,Y+8
 141 0022 B985      		ldd r27,Y+9
 142 0024 BA2F      		mov r27,r26
 143 0026 A92F      		mov r26,r25
 144 0028 982F      		mov r25,r24
 145 002a 8827      		clr r24
 146 002c 8983      		std Y+1,r24
 147 002e 9A83      		std Y+2,r25
 148 0030 AB83      		std Y+3,r26
 149 0032 BC83      		std Y+4,r27
 103:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	irqflags_t flags;
 104:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	flags = cpu_irq_save();
 150               		.loc 2 104 0
 151 0034 0E94 0000 		call cpu_irq_save
 152 0038 8D83      		std Y+5,r24
 153               	.L5:
 105:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 106:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	EEPROM_BUSY_WAIT();
 154               		.loc 2 106 0 discriminator 1
 155 003a 8FE3      		ldi r24,lo8(63)
 156 003c 90E0      		ldi r25,0
 157 003e FC01      		movw r30,r24
 158 0040 8081      		ld r24,Z
 159 0042 882F      		mov r24,r24
 160 0044 90E0      		ldi r25,0
 161 0046 8270      		andi r24,2
 162 0048 9927      		clr r25
 163 004a 892B      		or r24,r25
 164 004c 01F4      		brne .L5
 107:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	/* Perform Page Erase */
 108:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	FLASH_ERASE(page_start_addr);
 165               		.loc 2 108 0
 166 004e 23E0      		ldi r18,lo8(3)
 167 0050 8981      		ldd r24,Y+1
 168 0052 9A81      		ldd r25,Y+2
 169 0054 AB81      		ldd r26,Y+3
 170 0056 BC81      		ldd r27,Y+4
 171               	/* #APP */
 172               	 ;  108 "../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c" 1
 173 0058 FC01      		movw r30, r24
 174 005a A093 5B00 		sts  91, r26
 175 005e 2093 5700 		sts 87, r18
 176 0062 E895      		spm
 177               		
 178               	 ;  0 "" 2
 179               	/* #NOAPP */
 180               	.L6:
 109:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	SPM_BUSY_WAIT(); /* Wait until the memory is erased. */
 181               		.loc 2 109 0 discriminator 1
 182 0064 87E5      		ldi r24,lo8(87)
 183 0066 90E0      		ldi r25,0
 184 0068 FC01      		movw r30,r24
 185 006a 8081      		ld r24,Z
 186 006c 882F      		mov r24,r24
 187 006e 90E0      		ldi r25,0
 188 0070 8170      		andi r24,1
 189 0072 9927      		clr r25
 190 0074 892B      		or r24,r25
 191 0076 01F4      		brne .L6
 110:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 111:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	/* Reenable RWW-section again. */
 112:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	ENABLE_RWW_SECTION();
 192               		.loc 2 112 0
 193 0078 81E1      		ldi r24,lo8(17)
 194               	/* #APP */
 195               	 ;  112 "../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c" 1
 196 007a 8093 5700 		sts 87, r24
 197 007e E895      		spm
 198               		
 199               	 ;  0 "" 2
 113:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 114:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	cpu_irq_restore(flags);
 200               		.loc 2 114 0
 201               	/* #NOAPP */
 202 0080 8D81      		ldd r24,Y+5
 203 0082 0E94 0000 		call cpu_irq_restore
 115:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** }
 204               		.loc 2 115 0
 205 0086 0000      		nop
 206               	/* epilogue start */
 207 0088 2996      		adiw r28,9
 208 008a 0FB6      		in __tmp_reg__,__SREG__
 209 008c F894      		cli
 210 008e DEBF      		out __SP_H__,r29
 211 0090 0FBE      		out __SREG__,__tmp_reg__
 212 0092 CDBF      		out __SP_L__,r28
 213 0094 DF91      		pop r29
 214 0096 CF91      		pop r28
 215 0098 0895      		ret
 216               		.cfi_endproc
 217               	.LFE75:
 219               	.global	flash_fill_page_buffer
 221               	flash_fill_page_buffer:
 222               	.LFB76:
 116:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 117:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #ifdef __ICCAVR__
 118:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #pragma optimize = no_inline
 119:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #endif
 120:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** void flash_fill_page_buffer(uint32_t flash_addr, uint16_t length,
 121:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		uint8_t *data )
 122:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** {
 223               		.loc 2 122 0
 224               		.cfi_startproc
 225 009a CF93      		push r28
 226               	.LCFI12:
 227               		.cfi_def_cfa_offset 3
 228               		.cfi_offset 28, -2
 229 009c DF93      		push r29
 230               	.LCFI13:
 231               		.cfi_def_cfa_offset 4
 232               		.cfi_offset 29, -3
 233 009e CDB7      		in r28,__SP_L__
 234 00a0 DEB7      		in r29,__SP_H__
 235               	.LCFI14:
 236               		.cfi_def_cfa_register 28
 237 00a2 6E97      		sbiw r28,30
 238               	.LCFI15:
 239               		.cfi_def_cfa_offset 34
 240 00a4 0FB6      		in __tmp_reg__,__SREG__
 241 00a6 F894      		cli
 242 00a8 DEBF      		out __SP_H__,r29
 243 00aa 0FBE      		out __SREG__,__tmp_reg__
 244 00ac CDBF      		out __SP_L__,r28
 245               	/* prologue: function */
 246               	/* frame size = 30 */
 247               	/* stack size = 32 */
 248               	.L__stack_usage = 32
 249 00ae 6F8B      		std Y+23,r22
 250 00b0 788F      		std Y+24,r23
 251 00b2 898F      		std Y+25,r24
 252 00b4 9A8F      		std Y+26,r25
 253 00b6 5C8F      		std Y+28,r21
 254 00b8 4B8F      		std Y+27,r20
 255 00ba 3E8F      		std Y+30,r19
 256 00bc 2D8F      		std Y+29,r18
 123:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	uint8_t temp;
 124:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	uint8_t write_length = length;
 257               		.loc 2 124 0
 258 00be 8B8D      		ldd r24,Y+27
 259 00c0 8D83      		std Y+5,r24
 125:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	uint16_t start_offset = (flash_addr % SPM_PAGESIZE);
 260               		.loc 2 125 0
 261 00c2 8F89      		ldd r24,Y+23
 262 00c4 988D      		ldd r25,Y+24
 263 00c6 9927      		clr r25
 264 00c8 9A83      		std Y+2,r25
 265 00ca 8983      		std Y+1,r24
 126:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 127:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	/* For even address we can directly write a word to the address.
 128:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	 * For odd address the previous byte has to be copied and written
 129:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	 * together as a word */
 130:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	if (start_offset % 2) { /* odd address */
 266               		.loc 2 130 0
 267 00cc 8981      		ldd r24,Y+1
 268 00ce 9A81      		ldd r25,Y+2
 269 00d0 8170      		andi r24,1
 270 00d2 9927      		clr r25
 271 00d4 892B      		or r24,r25
 272 00d6 01F4      		brne .+2
 273 00d8 00C0      		rjmp .L8
 274               	.LBB2:
 275               	.LBB3:
 131:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		temp = PGM_READ_BYTE_FAR(flash_addr - 1);
 276               		.loc 2 131 0
 277 00da 8F89      		ldd r24,Y+23
 278 00dc 988D      		ldd r25,Y+24
 279 00de A98D      		ldd r26,Y+25
 280 00e0 BA8D      		ldd r27,Y+26
 281 00e2 0197      		sbiw r24,1
 282 00e4 A109      		sbc r26,__zero_reg__
 283 00e6 B109      		sbc r27,__zero_reg__
 284 00e8 8E83      		std Y+6,r24
 285 00ea 9F83      		std Y+7,r25
 286 00ec A887      		std Y+8,r26
 287 00ee B987      		std Y+9,r27
 288 00f0 8E81      		ldd r24,Y+6
 289 00f2 9F81      		ldd r25,Y+7
 290 00f4 A885      		ldd r26,Y+8
 291 00f6 B985      		ldd r27,Y+9
 292               	/* #APP */
 293               	 ;  131 "../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c" 1
 294 00f8 ABBF      		out 59, r26
 295 00fa FC01      		movw r30, r24
 296 00fc 8791      		elpm r24, Z+
 297               		
 298               	 ;  0 "" 2
 299               	/* #NOAPP */
 300 00fe 8A87      		std Y+10,r24
 301 0100 8A85      		ldd r24,Y+10
 302               	.LBE3:
 303 0102 8B87      		std Y+11,r24
 132:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		uint16_t w = temp;
 304               		.loc 2 132 0
 305 0104 8B85      		ldd r24,Y+11
 306 0106 882F      		mov r24,r24
 307 0108 90E0      		ldi r25,0
 308 010a 9D87      		std Y+13,r25
 309 010c 8C87      		std Y+12,r24
 133:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		w += (*data++) << 8;
 310               		.loc 2 133 0
 311 010e 8D8D      		ldd r24,Y+29
 312 0110 9E8D      		ldd r25,Y+30
 313 0112 9C01      		movw r18,r24
 314 0114 2F5F      		subi r18,-1
 315 0116 3F4F      		sbci r19,-1
 316 0118 3E8F      		std Y+30,r19
 317 011a 2D8F      		std Y+29,r18
 318 011c FC01      		movw r30,r24
 319 011e 8081      		ld r24,Z
 320 0120 882F      		mov r24,r24
 321 0122 90E0      		ldi r25,0
 322 0124 982F      		mov r25,r24
 323 0126 8827      		clr r24
 324 0128 9C01      		movw r18,r24
 325 012a 8C85      		ldd r24,Y+12
 326 012c 9D85      		ldd r25,Y+13
 327 012e 820F      		add r24,r18
 328 0130 931F      		adc r25,r19
 329 0132 9D87      		std Y+13,r25
 330 0134 8C87      		std Y+12,r24
 134:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		FLASH_PAGE_FILL(start_offset++, w);
 331               		.loc 2 134 0
 332 0136 8981      		ldd r24,Y+1
 333 0138 9A81      		ldd r25,Y+2
 334 013a 9C01      		movw r18,r24
 335 013c 2F5F      		subi r18,-1
 336 013e 3F4F      		sbci r19,-1
 337 0140 3A83      		std Y+2,r19
 338 0142 2983      		std Y+1,r18
 339 0144 CC01      		movw r24,r24
 340 0146 A0E0      		ldi r26,0
 341 0148 B0E0      		ldi r27,0
 342 014a 41E0      		ldi r20,lo8(1)
 343 014c 2C85      		ldd r18,Y+12
 344 014e 3D85      		ldd r19,Y+13
 345               	/* #APP */
 346               	 ;  134 "../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c" 1
 347 0150 0901      		movw  r0, r18
 348 0152 FC01      		movw r30, r24
 349 0154 A093 5B00 		sts 91, r26
 350 0158 4093 5700 		sts 87, r20
 351 015c E895      		spm
 352 015e 1124      		clr  r1
 353               		
 354               	 ;  0 "" 2
 135:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		length--;
 355               		.loc 2 135 0
 356               	/* #NOAPP */
 357 0160 8B8D      		ldd r24,Y+27
 358 0162 9C8D      		ldd r25,Y+28
 359 0164 0197      		sbiw r24,1
 360 0166 9C8F      		std Y+28,r25
 361 0168 8B8F      		std Y+27,r24
 362               	.L8:
 363               	.LBE2:
 364               	.LBB4:
 136:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	}
 137:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 138:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	for (uint16_t i = start_offset; i < length + start_offset; i += 2) {
 365               		.loc 2 138 0
 366 016a 8981      		ldd r24,Y+1
 367 016c 9A81      		ldd r25,Y+2
 368 016e 9C83      		std Y+4,r25
 369 0170 8B83      		std Y+3,r24
 370 0172 00C0      		rjmp .L9
 371               	.L12:
 139:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		/* If the last address to be written is odd ,then copy the
 140:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		 * adjacent byte and push it as a word */
 141:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		if (((length + start_offset) - i) == 1) {
 372               		.loc 2 141 0
 373 0174 2B8D      		ldd r18,Y+27
 374 0176 3C8D      		ldd r19,Y+28
 375 0178 8981      		ldd r24,Y+1
 376 017a 9A81      		ldd r25,Y+2
 377 017c 280F      		add r18,r24
 378 017e 391F      		adc r19,r25
 379 0180 8B81      		ldd r24,Y+3
 380 0182 9C81      		ldd r25,Y+4
 381 0184 A901      		movw r20,r18
 382 0186 481B      		sub r20,r24
 383 0188 590B      		sbc r21,r25
 384 018a CA01      		movw r24,r20
 385 018c 0197      		sbiw r24,1
 386 018e 01F0      		breq .+2
 387 0190 00C0      		rjmp .L10
 388               	.LBB5:
 389               	.LBB6:
 142:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 			temp = PGM_READ_BYTE_FAR(flash_addr + write_length);
 390               		.loc 2 142 0
 391 0192 8D81      		ldd r24,Y+5
 392 0194 282F      		mov r18,r24
 393 0196 30E0      		ldi r19,0
 394 0198 40E0      		ldi r20,0
 395 019a 50E0      		ldi r21,0
 396 019c 8F89      		ldd r24,Y+23
 397 019e 988D      		ldd r25,Y+24
 398 01a0 A98D      		ldd r26,Y+25
 399 01a2 BA8D      		ldd r27,Y+26
 400 01a4 820F      		add r24,r18
 401 01a6 931F      		adc r25,r19
 402 01a8 A41F      		adc r26,r20
 403 01aa B51F      		adc r27,r21
 404 01ac 8E87      		std Y+14,r24
 405 01ae 9F87      		std Y+15,r25
 406 01b0 A88B      		std Y+16,r26
 407 01b2 B98B      		std Y+17,r27
 408 01b4 8E85      		ldd r24,Y+14
 409 01b6 9F85      		ldd r25,Y+15
 410 01b8 A889      		ldd r26,Y+16
 411 01ba B989      		ldd r27,Y+17
 412               	/* #APP */
 413               	 ;  142 "../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c" 1
 414 01bc ABBF      		out 59, r26
 415 01be FC01      		movw r30, r24
 416 01c0 8791      		elpm r24, Z+
 417               		
 418               	 ;  0 "" 2
 419               	/* #NOAPP */
 420 01c2 8A8B      		std Y+18,r24
 421 01c4 8A89      		ldd r24,Y+18
 422               	.LBE6:
 423 01c6 8B87      		std Y+11,r24
 143:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 			uint16_t w = *data++;
 424               		.loc 2 143 0
 425 01c8 8D8D      		ldd r24,Y+29
 426 01ca 9E8D      		ldd r25,Y+30
 427 01cc 9C01      		movw r18,r24
 428 01ce 2F5F      		subi r18,-1
 429 01d0 3F4F      		sbci r19,-1
 430 01d2 3E8F      		std Y+30,r19
 431 01d4 2D8F      		std Y+29,r18
 432 01d6 FC01      		movw r30,r24
 433 01d8 8081      		ld r24,Z
 434 01da 882F      		mov r24,r24
 435 01dc 90E0      		ldi r25,0
 436 01de 9C8B      		std Y+20,r25
 437 01e0 8B8B      		std Y+19,r24
 144:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 			w += (temp) << 8;
 438               		.loc 2 144 0
 439 01e2 8B85      		ldd r24,Y+11
 440 01e4 882F      		mov r24,r24
 441 01e6 90E0      		ldi r25,0
 442 01e8 982F      		mov r25,r24
 443 01ea 8827      		clr r24
 444 01ec 9C01      		movw r18,r24
 445 01ee 8B89      		ldd r24,Y+19
 446 01f0 9C89      		ldd r25,Y+20
 447 01f2 820F      		add r24,r18
 448 01f4 931F      		adc r25,r19
 449 01f6 9C8B      		std Y+20,r25
 450 01f8 8B8B      		std Y+19,r24
 145:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 			FLASH_PAGE_FILL(i, w);
 451               		.loc 2 145 0
 452 01fa 8B81      		ldd r24,Y+3
 453 01fc 9C81      		ldd r25,Y+4
 454 01fe CC01      		movw r24,r24
 455 0200 A0E0      		ldi r26,0
 456 0202 B0E0      		ldi r27,0
 457 0204 41E0      		ldi r20,lo8(1)
 458 0206 2B89      		ldd r18,Y+19
 459 0208 3C89      		ldd r19,Y+20
 460               	/* #APP */
 461               	 ;  145 "../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c" 1
 462 020a 0901      		movw  r0, r18
 463 020c FC01      		movw r30, r24
 464 020e A093 5B00 		sts 91, r26
 465 0212 4093 5700 		sts 87, r20
 466 0216 E895      		spm
 467 0218 1124      		clr  r1
 468               		
 469               	 ;  0 "" 2
 470               	/* #NOAPP */
 471               	.LBE5:
 472 021a 00C0      		rjmp .L11
 473               	.L10:
 474               	.LBB7:
 146:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		} else {
 147:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 			uint16_t w = *data++;
 475               		.loc 2 147 0
 476 021c 8D8D      		ldd r24,Y+29
 477 021e 9E8D      		ldd r25,Y+30
 478 0220 9C01      		movw r18,r24
 479 0222 2F5F      		subi r18,-1
 480 0224 3F4F      		sbci r19,-1
 481 0226 3E8F      		std Y+30,r19
 482 0228 2D8F      		std Y+29,r18
 483 022a FC01      		movw r30,r24
 484 022c 8081      		ld r24,Z
 485 022e 882F      		mov r24,r24
 486 0230 90E0      		ldi r25,0
 487 0232 9E8B      		std Y+22,r25
 488 0234 8D8B      		std Y+21,r24
 148:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 			w += (*data++) << 8;
 489               		.loc 2 148 0
 490 0236 8D8D      		ldd r24,Y+29
 491 0238 9E8D      		ldd r25,Y+30
 492 023a 9C01      		movw r18,r24
 493 023c 2F5F      		subi r18,-1
 494 023e 3F4F      		sbci r19,-1
 495 0240 3E8F      		std Y+30,r19
 496 0242 2D8F      		std Y+29,r18
 497 0244 FC01      		movw r30,r24
 498 0246 8081      		ld r24,Z
 499 0248 882F      		mov r24,r24
 500 024a 90E0      		ldi r25,0
 501 024c 982F      		mov r25,r24
 502 024e 8827      		clr r24
 503 0250 9C01      		movw r18,r24
 504 0252 8D89      		ldd r24,Y+21
 505 0254 9E89      		ldd r25,Y+22
 506 0256 820F      		add r24,r18
 507 0258 931F      		adc r25,r19
 508 025a 9E8B      		std Y+22,r25
 509 025c 8D8B      		std Y+21,r24
 149:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 			FLASH_PAGE_FILL(i, w);
 510               		.loc 2 149 0
 511 025e 8B81      		ldd r24,Y+3
 512 0260 9C81      		ldd r25,Y+4
 513 0262 CC01      		movw r24,r24
 514 0264 A0E0      		ldi r26,0
 515 0266 B0E0      		ldi r27,0
 516 0268 41E0      		ldi r20,lo8(1)
 517 026a 2D89      		ldd r18,Y+21
 518 026c 3E89      		ldd r19,Y+22
 519               	/* #APP */
 520               	 ;  149 "../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c" 1
 521 026e 0901      		movw  r0, r18
 522 0270 FC01      		movw r30, r24
 523 0272 A093 5B00 		sts 91, r26
 524 0276 4093 5700 		sts 87, r20
 525 027a E895      		spm
 526 027c 1124      		clr  r1
 527               		
 528               	 ;  0 "" 2
 529               	/* #NOAPP */
 530               	.L11:
 531               	.LBE7:
 138:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		/* If the last address to be written is odd ,then copy the
 532               		.loc 2 138 0 discriminator 2
 533 027e 8B81      		ldd r24,Y+3
 534 0280 9C81      		ldd r25,Y+4
 535 0282 0296      		adiw r24,2
 536 0284 9C83      		std Y+4,r25
 537 0286 8B83      		std Y+3,r24
 538               	.L9:
 138:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		/* If the last address to be written is odd ,then copy the
 539               		.loc 2 138 0 is_stmt 0 discriminator 1
 540 0288 2B8D      		ldd r18,Y+27
 541 028a 3C8D      		ldd r19,Y+28
 542 028c 8981      		ldd r24,Y+1
 543 028e 9A81      		ldd r25,Y+2
 544 0290 280F      		add r18,r24
 545 0292 391F      		adc r19,r25
 546 0294 8B81      		ldd r24,Y+3
 547 0296 9C81      		ldd r25,Y+4
 548 0298 8217      		cp r24,r18
 549 029a 9307      		cpc r25,r19
 550 029c 00F4      		brsh .+2
 551 029e 00C0      		rjmp .L12
 552               	.LBE4:
 150:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		}
 151:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	}
 152:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** }
 553               		.loc 2 152 0 is_stmt 1
 554 02a0 0000      		nop
 555               	/* epilogue start */
 556 02a2 6E96      		adiw r28,30
 557 02a4 0FB6      		in __tmp_reg__,__SREG__
 558 02a6 F894      		cli
 559 02a8 DEBF      		out __SP_H__,r29
 560 02aa 0FBE      		out __SREG__,__tmp_reg__
 561 02ac CDBF      		out __SP_L__,r28
 562 02ae DF91      		pop r29
 563 02b0 CF91      		pop r28
 564 02b2 0895      		ret
 565               		.cfi_endproc
 566               	.LFE76:
 568               	.global	flash_program_page
 570               	flash_program_page:
 571               	.LFB77:
 153:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 154:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #ifdef __ICCAVR__
 155:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #pragma optimize = no_inline
 156:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** #endif
 157:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** void flash_program_page(uint32_t page_start_addr)
 158:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** {
 572               		.loc 2 158 0
 573               		.cfi_startproc
 574 02b4 CF93      		push r28
 575               	.LCFI16:
 576               		.cfi_def_cfa_offset 3
 577               		.cfi_offset 28, -2
 578 02b6 DF93      		push r29
 579               	.LCFI17:
 580               		.cfi_def_cfa_offset 4
 581               		.cfi_offset 29, -3
 582 02b8 00D0      		rcall .
 583 02ba 00D0      		rcall .
 584 02bc 1F92      		push __zero_reg__
 585               	.LCFI18:
 586               		.cfi_def_cfa_offset 9
 587 02be CDB7      		in r28,__SP_L__
 588 02c0 DEB7      		in r29,__SP_H__
 589               	.LCFI19:
 590               		.cfi_def_cfa_register 28
 591               	/* prologue: function */
 592               	/* frame size = 5 */
 593               	/* stack size = 7 */
 594               	.L__stack_usage = 7
 595 02c2 6A83      		std Y+2,r22
 596 02c4 7B83      		std Y+3,r23
 597 02c6 8C83      		std Y+4,r24
 598 02c8 9D83      		std Y+5,r25
 159:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	irqflags_t flags;
 160:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 161:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	flags = cpu_irq_save();
 599               		.loc 2 161 0
 600 02ca 0E94 0000 		call cpu_irq_save
 601 02ce 8983      		std Y+1,r24
 602               	.L14:
 162:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 163:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	EEPROM_BUSY_WAIT();
 603               		.loc 2 163 0 discriminator 1
 604 02d0 8FE3      		ldi r24,lo8(63)
 605 02d2 90E0      		ldi r25,0
 606 02d4 FC01      		movw r30,r24
 607 02d6 8081      		ld r24,Z
 608 02d8 882F      		mov r24,r24
 609 02da 90E0      		ldi r25,0
 610 02dc 8270      		andi r24,2
 611 02de 9927      		clr r25
 612 02e0 892B      		or r24,r25
 613 02e2 01F4      		brne .L14
 164:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 165:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	FLASH_ERASE(page_start_addr);
 614               		.loc 2 165 0
 615 02e4 23E0      		ldi r18,lo8(3)
 616 02e6 8A81      		ldd r24,Y+2
 617 02e8 9B81      		ldd r25,Y+3
 618 02ea AC81      		ldd r26,Y+4
 619 02ec BD81      		ldd r27,Y+5
 620               	/* #APP */
 621               	 ;  165 "../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c" 1
 622 02ee FC01      		movw r30, r24
 623 02f0 A093 5B00 		sts  91, r26
 624 02f4 2093 5700 		sts 87, r18
 625 02f8 E895      		spm
 626               		
 627               	 ;  0 "" 2
 628               	/* #NOAPP */
 629               	.L15:
 166:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	SPM_BUSY_WAIT(); /* Wait until the memory is erased. */
 630               		.loc 2 166 0 discriminator 1
 631 02fa 87E5      		ldi r24,lo8(87)
 632 02fc 90E0      		ldi r25,0
 633 02fe FC01      		movw r30,r24
 634 0300 8081      		ld r24,Z
 635 0302 882F      		mov r24,r24
 636 0304 90E0      		ldi r25,0
 637 0306 8170      		andi r24,1
 638 0308 9927      		clr r25
 639 030a 892B      		or r24,r25
 640 030c 01F4      		brne .L15
 167:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 168:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	FLASH_PAGE_WRITE(page_start_addr); /* Store buffer in flash page. */
 641               		.loc 2 168 0
 642 030e 25E0      		ldi r18,lo8(5)
 643 0310 8A81      		ldd r24,Y+2
 644 0312 9B81      		ldd r25,Y+3
 645 0314 AC81      		ldd r26,Y+4
 646 0316 BD81      		ldd r27,Y+5
 647               	/* #APP */
 648               	 ;  168 "../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c" 1
 649 0318 FC01      		movw r30, r24
 650 031a A093 5B00 		sts 91, r26
 651 031e 2093 5700 		sts 87, r18
 652 0322 E895      		spm
 653               		
 654               	 ;  0 "" 2
 655               	/* #NOAPP */
 656               	.L16:
 169:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	SPM_BUSY_WAIT(); /* Wait until the memory is written. */
 657               		.loc 2 169 0 discriminator 1
 658 0324 87E5      		ldi r24,lo8(87)
 659 0326 90E0      		ldi r25,0
 660 0328 FC01      		movw r30,r24
 661 032a 8081      		ld r24,Z
 662 032c 882F      		mov r24,r24
 663 032e 90E0      		ldi r25,0
 664 0330 8170      		andi r24,1
 665 0332 9927      		clr r25
 666 0334 892B      		or r24,r25
 667 0336 01F4      		brne .L16
 170:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 171:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	/* Reenable RWW-section again. */
 172:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	ENABLE_RWW_SECTION();
 668               		.loc 2 172 0
 669 0338 81E1      		ldi r24,lo8(17)
 670               	/* #APP */
 671               	 ;  172 "../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c" 1
 672 033a 8093 5700 		sts 87, r24
 673 033e E895      		spm
 674               		
 675               	 ;  0 "" 2
 173:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 174:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	cpu_irq_restore(flags);
 676               		.loc 2 174 0
 677               	/* #NOAPP */
 678 0340 8981      		ldd r24,Y+1
 679 0342 0E94 0000 		call cpu_irq_restore
 175:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** }
 680               		.loc 2 175 0
 681 0346 0000      		nop
 682               	/* epilogue start */
 683 0348 0F90      		pop __tmp_reg__
 684 034a 0F90      		pop __tmp_reg__
 685 034c 0F90      		pop __tmp_reg__
 686 034e 0F90      		pop __tmp_reg__
 687 0350 0F90      		pop __tmp_reg__
 688 0352 DF91      		pop r29
 689 0354 CF91      		pop r28
 690 0356 0895      		ret
 691               		.cfi_endproc
 692               	.LFE77:
 694               		.text
 695               	.global	flash_write
 697               	flash_write:
 698               	.LFB74:
  52:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	static uint8_t temp_buf[SPM_PAGESIZE];
 699               		.loc 2 52 0
 700               		.cfi_startproc
 701 0040 EF92      		push r14
 702               	.LCFI20:
 703               		.cfi_def_cfa_offset 3
 704               		.cfi_offset 14, -2
 705 0042 FF92      		push r15
 706               	.LCFI21:
 707               		.cfi_def_cfa_offset 4
 708               		.cfi_offset 15, -3
 709 0044 0F93      		push r16
 710               	.LCFI22:
 711               		.cfi_def_cfa_offset 5
 712               		.cfi_offset 16, -4
 713 0046 1F93      		push r17
 714               	.LCFI23:
 715               		.cfi_def_cfa_offset 6
 716               		.cfi_offset 17, -5
 717 0048 CF93      		push r28
 718               	.LCFI24:
 719               		.cfi_def_cfa_offset 7
 720               		.cfi_offset 28, -6
 721 004a DF93      		push r29
 722               	.LCFI25:
 723               		.cfi_def_cfa_offset 8
 724               		.cfi_offset 29, -7
 725 004c CDB7      		in r28,__SP_L__
 726 004e DEB7      		in r29,__SP_H__
 727               	.LCFI26:
 728               		.cfi_def_cfa_register 28
 729 0050 2C97      		sbiw r28,12
 730               	.LCFI27:
 731               		.cfi_def_cfa_offset 20
 732 0052 0FB6      		in __tmp_reg__,__SREG__
 733 0054 F894      		cli
 734 0056 DEBF      		out __SP_H__,r29
 735 0058 0FBE      		out __SREG__,__tmp_reg__
 736 005a CDBF      		out __SP_L__,r28
 737               	/* prologue: function */
 738               	/* frame size = 12 */
 739               	/* stack size = 18 */
 740               	.L__stack_usage = 18
 741 005c 6B83      		std Y+3,r22
 742 005e 7C83      		std Y+4,r23
 743 0060 8D83      		std Y+5,r24
 744 0062 9E83      		std Y+6,r25
 745 0064 2F83      		std Y+7,r18
 746 0066 3887      		std Y+8,r19
 747 0068 4987      		std Y+9,r20
 748 006a 5A87      		std Y+10,r21
 749 006c 1C87      		std Y+12,r17
 750 006e 0B87      		std Y+11,r16
  55:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	uint8_t *ptr = data;
 751               		.loc 2 55 0
 752 0070 8F81      		ldd r24,Y+7
 753 0072 9885      		ldd r25,Y+8
 754 0074 A985      		ldd r26,Y+9
 755 0076 BA85      		ldd r27,Y+10
 756 0078 8093 0000 		sts remaining_len.3222,r24
 757 007c 9093 0000 		sts remaining_len.3222+1,r25
 758 0080 A093 0000 		sts remaining_len.3222+2,r26
 759 0084 B093 0000 		sts remaining_len.3222+3,r27
  56:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	static uint32_t next_page_addr;
 760               		.loc 2 56 0
 761 0088 8B85      		ldd r24,Y+11
 762 008a 9C85      		ldd r25,Y+12
 763 008c 9A83      		std Y+2,r25
 764 008e 8983      		std Y+1,r24
 765               	.L20:
  62:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 766               		.loc 2 62 0
 767 0090 8B81      		ldd r24,Y+3
 768 0092 9C81      		ldd r25,Y+4
 769 0094 AD81      		ldd r26,Y+5
 770 0096 BE81      		ldd r27,Y+6
 771 0098 8827      		clr r24
 772 009a 9F5F      		subi r25,-1
 773 009c AF4F      		sbci r26,-1
 774 009e BF4F      		sbci r27,-1
  61:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 				SPM_PAGESIZE) - (flash_addr % SPM_PAGESIZE));
 775               		.loc 2 61 0
 776 00a0 8093 0000 		sts next_page_addr.3224,r24
 777 00a4 9093 0000 		sts next_page_addr.3224+1,r25
 778 00a8 A093 0000 		sts next_page_addr.3224+2,r26
 779 00ac B093 0000 		sts next_page_addr.3224+3,r27
  66:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 				SPM_PAGESIZE, temp_buf);
 780               		.loc 2 66 0
 781 00b0 8B81      		ldd r24,Y+3
 782 00b2 9C81      		ldd r25,Y+4
 783 00b4 AD81      		ldd r26,Y+5
 784 00b6 BE81      		ldd r27,Y+6
 785 00b8 8827      		clr r24
 786 00ba 00E0      		ldi r16,lo8(temp_buf.3221)
 787 00bc 10E0      		ldi r17,hi8(temp_buf.3221)
 788 00be 20E0      		ldi r18,0
 789 00c0 31E0      		ldi r19,lo8(1)
 790 00c2 40E0      		ldi r20,0
 791 00c4 50E0      		ldi r21,0
 792 00c6 BC01      		movw r22,r24
 793 00c8 CD01      		movw r24,r26
 794 00ca 0E94 0000 		call flash_read
  70:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 795               		.loc 2 70 0
 796 00ce 20E0      		ldi r18,lo8(temp_buf.3221)
 797 00d0 30E0      		ldi r19,hi8(temp_buf.3221)
 798 00d2 40E0      		ldi r20,0
 799 00d4 51E0      		ldi r21,lo8(1)
 800 00d6 60E0      		ldi r22,0
 801 00d8 70E0      		ldi r23,0
 802 00da CB01      		movw r24,r22
 803 00dc 0E94 0000 		call flash_fill_page_buffer
  76:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 			current_len = (next_page_addr - flash_addr);
 804               		.loc 2 76 0
 805 00e0 2091 0000 		lds r18,remaining_len.3222
 806 00e4 3091 0000 		lds r19,remaining_len.3222+1
 807 00e8 4091 0000 		lds r20,remaining_len.3222+2
 808 00ec 5091 0000 		lds r21,remaining_len.3222+3
 809 00f0 8B81      		ldd r24,Y+3
 810 00f2 9C81      		ldd r25,Y+4
 811 00f4 AD81      		ldd r26,Y+5
 812 00f6 BE81      		ldd r27,Y+6
 813 00f8 280F      		add r18,r24
 814 00fa 391F      		adc r19,r25
 815 00fc 4A1F      		adc r20,r26
 816 00fe 5B1F      		adc r21,r27
 817 0100 8091 0000 		lds r24,next_page_addr.3224
 818 0104 9091 0000 		lds r25,next_page_addr.3224+1
 819 0108 A091 0000 		lds r26,next_page_addr.3224+2
 820 010c B091 0000 		lds r27,next_page_addr.3224+3
 821 0110 8217      		cp r24,r18
 822 0112 9307      		cpc r25,r19
 823 0114 A407      		cpc r26,r20
 824 0116 B507      		cpc r27,r21
 825 0118 00F4      		brsh .L18
  77:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		} else {
 826               		.loc 2 77 0
 827 011a 8091 0000 		lds r24,next_page_addr.3224
 828 011e 9091 0000 		lds r25,next_page_addr.3224+1
 829 0122 A091 0000 		lds r26,next_page_addr.3224+2
 830 0126 B091 0000 		lds r27,next_page_addr.3224+3
 831 012a 9C01      		movw r18,r24
 832 012c 8B81      		ldd r24,Y+3
 833 012e 9C81      		ldd r25,Y+4
 834 0130 7901      		movw r14,r18
 835 0132 E81A      		sub r14,r24
 836 0134 F90A      		sbc r15,r25
 837 0136 C701      		movw r24,r14
 838 0138 9093 0000 		sts current_len.3225+1,r25
 839 013c 8093 0000 		sts current_len.3225,r24
 840 0140 00C0      		rjmp .L19
 841               	.L18:
  79:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		}
 842               		.loc 2 79 0
 843 0142 8091 0000 		lds r24,remaining_len.3222
 844 0146 9091 0000 		lds r25,remaining_len.3222+1
 845 014a A091 0000 		lds r26,remaining_len.3222+2
 846 014e B091 0000 		lds r27,remaining_len.3222+3
 847 0152 9093 0000 		sts current_len.3225+1,r25
 848 0156 8093 0000 		sts current_len.3225,r24
 849               	.L19:
  82:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 850               		.loc 2 82 0
 851 015a 2091 0000 		lds r18,remaining_len.3222
 852 015e 3091 0000 		lds r19,remaining_len.3222+1
 853 0162 4091 0000 		lds r20,remaining_len.3222+2
 854 0166 5091 0000 		lds r21,remaining_len.3222+3
 855 016a 8091 0000 		lds r24,current_len.3225
 856 016e 9091 0000 		lds r25,current_len.3225+1
 857 0172 CC01      		movw r24,r24
 858 0174 A0E0      		ldi r26,0
 859 0176 B0E0      		ldi r27,0
 860 0178 7901      		movw r14,r18
 861 017a 8A01      		movw r16,r20
 862 017c E81A      		sub r14,r24
 863 017e F90A      		sbc r15,r25
 864 0180 0A0B      		sbc r16,r26
 865 0182 1B0B      		sbc r17,r27
 866 0184 D801      		movw r26,r16
 867 0186 C701      		movw r24,r14
 868 0188 8093 0000 		sts remaining_len.3222,r24
 869 018c 9093 0000 		sts remaining_len.3222+1,r25
 870 0190 A093 0000 		sts remaining_len.3222+2,r26
 871 0194 B093 0000 		sts remaining_len.3222+3,r27
  86:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		/* Erase and program flash page */
 872               		.loc 2 86 0
 873 0198 4091 0000 		lds r20,current_len.3225
 874 019c 5091 0000 		lds r21,current_len.3225+1
 875 01a0 2981      		ldd r18,Y+1
 876 01a2 3A81      		ldd r19,Y+2
 877 01a4 8B81      		ldd r24,Y+3
 878 01a6 9C81      		ldd r25,Y+4
 879 01a8 AD81      		ldd r26,Y+5
 880 01aa BE81      		ldd r27,Y+6
 881 01ac BC01      		movw r22,r24
 882 01ae CD01      		movw r24,r26
 883 01b0 0E94 0000 		call flash_fill_page_buffer
  88:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		flash_addr = next_page_addr;
 884               		.loc 2 88 0
 885 01b4 8B81      		ldd r24,Y+3
 886 01b6 9C81      		ldd r25,Y+4
 887 01b8 AD81      		ldd r26,Y+5
 888 01ba BE81      		ldd r27,Y+6
 889 01bc BC01      		movw r22,r24
 890 01be CD01      		movw r24,r26
 891 01c0 0E94 0000 		call flash_program_page
  89:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		ptr += current_len;
 892               		.loc 2 89 0
 893 01c4 8091 0000 		lds r24,next_page_addr.3224
 894 01c8 9091 0000 		lds r25,next_page_addr.3224+1
 895 01cc A091 0000 		lds r26,next_page_addr.3224+2
 896 01d0 B091 0000 		lds r27,next_page_addr.3224+3
 897 01d4 8B83      		std Y+3,r24
 898 01d6 9C83      		std Y+4,r25
 899 01d8 AD83      		std Y+5,r26
 900 01da BE83      		std Y+6,r27
  90:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	} while (remaining_len != 0); /* Check if there is remaining  data  to
 901               		.loc 2 90 0
 902 01dc 8091 0000 		lds r24,current_len.3225
 903 01e0 9091 0000 		lds r25,current_len.3225+1
 904 01e4 2981      		ldd r18,Y+1
 905 01e6 3A81      		ldd r19,Y+2
 906 01e8 820F      		add r24,r18
 907 01ea 931F      		adc r25,r19
 908 01ec 9A83      		std Y+2,r25
 909 01ee 8983      		std Y+1,r24
  91:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	                               * be written to the next page */
 910               		.loc 2 91 0
 911 01f0 8091 0000 		lds r24,remaining_len.3222
 912 01f4 9091 0000 		lds r25,remaining_len.3222+1
 913 01f8 A091 0000 		lds r26,remaining_len.3222+2
 914 01fc B091 0000 		lds r27,remaining_len.3222+3
 915 0200 892B      		or r24,r25
 916 0202 8A2B      		or r24,r26
 917 0204 8B2B      		or r24,r27
 918 0206 01F0      		breq .+2
 919 0208 00C0      		rjmp .L20
  93:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 920               		.loc 2 93 0
 921 020a 0000      		nop
 922               	/* epilogue start */
 923 020c 2C96      		adiw r28,12
 924 020e 0FB6      		in __tmp_reg__,__SREG__
 925 0210 F894      		cli
 926 0212 DEBF      		out __SP_H__,r29
 927 0214 0FBE      		out __SREG__,__tmp_reg__
 928 0216 CDBF      		out __SP_L__,r28
 929 0218 DF91      		pop r29
 930 021a CF91      		pop r28
 931 021c 1F91      		pop r17
 932 021e 0F91      		pop r16
 933 0220 FF90      		pop r15
 934 0222 EF90      		pop r14
 935 0224 0895      		ret
 936               		.cfi_endproc
 937               	.LFE74:
 939               	.global	flash_read
 941               	flash_read:
 942               	.LFB78:
 176:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 177:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** void flash_read(uint32_t read_addr, uint32_t len, uint8_t *ret_buf)
 178:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** {
 943               		.loc 2 178 0
 944               		.cfi_startproc
 945 0226 0F93      		push r16
 946               	.LCFI28:
 947               		.cfi_def_cfa_offset 3
 948               		.cfi_offset 16, -2
 949 0228 1F93      		push r17
 950               	.LCFI29:
 951               		.cfi_def_cfa_offset 4
 952               		.cfi_offset 17, -3
 953 022a CF93      		push r28
 954               	.LCFI30:
 955               		.cfi_def_cfa_offset 5
 956               		.cfi_offset 28, -4
 957 022c DF93      		push r29
 958               	.LCFI31:
 959               		.cfi_def_cfa_offset 6
 960               		.cfi_offset 29, -5
 961 022e CDB7      		in r28,__SP_L__
 962 0230 DEB7      		in r29,__SP_H__
 963               	.LCFI32:
 964               		.cfi_def_cfa_register 28
 965 0232 6297      		sbiw r28,18
 966               	.LCFI33:
 967               		.cfi_def_cfa_offset 24
 968 0234 0FB6      		in __tmp_reg__,__SREG__
 969 0236 F894      		cli
 970 0238 DEBF      		out __SP_H__,r29
 971 023a 0FBE      		out __SREG__,__tmp_reg__
 972 023c CDBF      		out __SP_L__,r28
 973               	/* prologue: function */
 974               	/* frame size = 18 */
 975               	/* stack size = 22 */
 976               	.L__stack_usage = 22
 977 023e 6987      		std Y+9,r22
 978 0240 7A87      		std Y+10,r23
 979 0242 8B87      		std Y+11,r24
 980 0244 9C87      		std Y+12,r25
 981 0246 2D87      		std Y+13,r18
 982 0248 3E87      		std Y+14,r19
 983 024a 4F87      		std Y+15,r20
 984 024c 588B      		std Y+16,r21
 985 024e 1A8B      		std Y+18,r17
 986 0250 098B      		std Y+17,r16
 179:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	irqflags_t flags;
 180:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 181:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	flags = cpu_irq_save();
 987               		.loc 2 181 0
 988 0252 0E94 0000 		call cpu_irq_save
 989 0256 8B83      		std Y+3,r24
 990               	.LBB8:
 182:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 
 183:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	for (uint16_t k = 0; k < len; k++) {
 991               		.loc 2 183 0
 992 0258 1A82      		std Y+2,__zero_reg__
 993 025a 1982      		std Y+1,__zero_reg__
 994 025c 00C0      		rjmp .L22
 995               	.L23:
 184:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		/* copy a byte and push to the ret_buf */
 185:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		*(ret_buf + k) = PGM_READ_BYTE_FAR(read_addr++);
 996               		.loc 2 185 0 discriminator 3
 997 025e 2989      		ldd r18,Y+17
 998 0260 3A89      		ldd r19,Y+18
 999 0262 8981      		ldd r24,Y+1
 1000 0264 9A81      		ldd r25,Y+2
 1001 0266 B901      		movw r22,r18
 1002 0268 680F      		add r22,r24
 1003 026a 791F      		adc r23,r25
 1004               	.LBB9:
 1005 026c 8985      		ldd r24,Y+9
 1006 026e 9A85      		ldd r25,Y+10
 1007 0270 AB85      		ldd r26,Y+11
 1008 0272 BC85      		ldd r27,Y+12
 1009 0274 9C01      		movw r18,r24
 1010 0276 AD01      		movw r20,r26
 1011 0278 2F5F      		subi r18,-1
 1012 027a 3F4F      		sbci r19,-1
 1013 027c 4F4F      		sbci r20,-1
 1014 027e 5F4F      		sbci r21,-1
 1015 0280 2987      		std Y+9,r18
 1016 0282 3A87      		std Y+10,r19
 1017 0284 4B87      		std Y+11,r20
 1018 0286 5C87      		std Y+12,r21
 1019 0288 8C83      		std Y+4,r24
 1020 028a 9D83      		std Y+5,r25
 1021 028c AE83      		std Y+6,r26
 1022 028e BF83      		std Y+7,r27
 1023 0290 8C81      		ldd r24,Y+4
 1024 0292 9D81      		ldd r25,Y+5
 1025 0294 AE81      		ldd r26,Y+6
 1026 0296 BF81      		ldd r27,Y+7
 1027               	/* #APP */
 1028               	 ;  185 "../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c" 1
 1029 0298 ABBF      		out 59, r26
 1030 029a FC01      		movw r30, r24
 1031 029c 8791      		elpm r24, Z+
 1032               		
 1033               	 ;  0 "" 2
 1034               	/* #NOAPP */
 1035 029e 8887      		std Y+8,r24
 1036 02a0 8885      		ldd r24,Y+8
 1037               	.LBE9:
 1038 02a2 FB01      		movw r30,r22
 1039 02a4 8083      		st Z,r24
 183:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		/* copy a byte and push to the ret_buf */
 1040               		.loc 2 183 0 discriminator 3
 1041 02a6 8981      		ldd r24,Y+1
 1042 02a8 9A81      		ldd r25,Y+2
 1043 02aa 0196      		adiw r24,1
 1044 02ac 9A83      		std Y+2,r25
 1045 02ae 8983      		std Y+1,r24
 1046               	.L22:
 183:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 		/* copy a byte and push to the ret_buf */
 1047               		.loc 2 183 0 is_stmt 0 discriminator 1
 1048 02b0 8981      		ldd r24,Y+1
 1049 02b2 9A81      		ldd r25,Y+2
 1050 02b4 9C01      		movw r18,r24
 1051 02b6 40E0      		ldi r20,0
 1052 02b8 50E0      		ldi r21,0
 1053 02ba 8D85      		ldd r24,Y+13
 1054 02bc 9E85      		ldd r25,Y+14
 1055 02be AF85      		ldd r26,Y+15
 1056 02c0 B889      		ldd r27,Y+16
 1057 02c2 2817      		cp r18,r24
 1058 02c4 3907      		cpc r19,r25
 1059 02c6 4A07      		cpc r20,r26
 1060 02c8 5B07      		cpc r21,r27
 1061 02ca 00F0      		brlo .L23
 1062               	.LBE8:
 186:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	}
 187:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** 	cpu_irq_restore(flags);
 1063               		.loc 2 187 0 is_stmt 1
 1064 02cc 8B81      		ldd r24,Y+3
 1065 02ce 0E94 0000 		call cpu_irq_restore
 188:../../../stack/LwMesh/TDMA/services/mega_rf/drivers/flash/flash.c **** }
 1066               		.loc 2 188 0
 1067 02d2 0000      		nop
 1068               	/* epilogue start */
 1069 02d4 6296      		adiw r28,18
 1070 02d6 0FB6      		in __tmp_reg__,__SREG__
 1071 02d8 F894      		cli
 1072 02da DEBF      		out __SP_H__,r29
 1073 02dc 0FBE      		out __SREG__,__tmp_reg__
 1074 02de CDBF      		out __SP_L__,r28
 1075 02e0 DF91      		pop r29
 1076 02e2 CF91      		pop r28
 1077 02e4 1F91      		pop r17
 1078 02e6 0F91      		pop r16
 1079 02e8 0895      		ret
 1080               		.cfi_endproc
 1081               	.LFE78:
 1083               		.section	.bss.remaining_len.3222,"aw",@nobits
 1086               	remaining_len.3222:
 1087 0000 0000 0000 		.zero	4
 1088               		.section	.bss.next_page_addr.3224,"aw",@nobits
 1091               	next_page_addr.3224:
 1092 0000 0000 0000 		.zero	4
 1093               		.section	.bss.temp_buf.3221,"aw",@nobits
 1096               	temp_buf.3221:
 1097 0000 0000 0000 		.zero	256
 1097      0000 0000 
 1097      0000 0000 
 1097      0000 0000 
 1097      0000 0000 
 1098               		.section	.bss.current_len.3225,"aw",@nobits
 1101               	current_len.3225:
 1102 0000 0000      		.zero	2
 1103               		.text
 1104               	.Letext0:
 1105               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
DEFINED SYMBOLS
                            *ABS*:00000000 flash.c
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:12     .text:00000000 cpu_irq_save
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:60     .text:00000020 cpu_irq_restore
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:104    .bootloader:00000000 flash_erase_page
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:221    .bootloader:0000009a flash_fill_page_buffer
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:570    .bootloader:000002b4 flash_program_page
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:697    .text:00000040 flash_write
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:1086   .bss.remaining_len.3222:00000000 remaining_len.3222
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:1091   .bss.next_page_addr.3224:00000000 next_page_addr.3224
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:1096   .bss.temp_buf.3221:00000000 temp_buf.3221
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:941    .text:00000226 flash_read
C:\Users\GUILHE~1\AppData\Local\Temp\ccVqPJHN.s:1101   .bss.current_len.3225:00000000 current_len.3225

UNDEFINED SYMBOLS
__do_clear_bss
