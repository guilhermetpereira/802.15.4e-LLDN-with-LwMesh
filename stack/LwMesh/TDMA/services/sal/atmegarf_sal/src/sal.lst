   1               		.file	"sal.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.bss.dec_initialized,"aw",@nobits
  14               	dec_initialized:
  15 0000 00        		.zero	1
  16               		.section	.bss.mode_byte,"aw",@nobits
  19               	mode_byte:
  20 0000 00        		.zero	1
  21               		.section	.data.last_dir,"aw",@progbits
  24               	last_dir:
  25 0000 02        		.byte	2
  26               		.section	.bss.enc_key,"aw",@nobits
  29               	enc_key:
  30 0000 0000 0000 		.zero	16
  30      0000 0000 
  30      0000 0000 
  30      0000 0000 
  31               		.section	.bss.dec_key,"aw",@nobits
  34               	dec_key:
  35 0000 0000 0000 		.zero	16
  35      0000 0000 
  35      0000 0000 
  35      0000 0000 
  36               		.text
  37               	.global	sal_init
  39               	sal_init:
  40               	.LFB0:
  41               		.file 1 "../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c"
   1:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /**
   2:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @file sal.c
   3:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
   4:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @brief Low-level crypto API for an AES unit implemented in AT86RFA1
   5:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
   6:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * Copyright (c) 2013-2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
   8:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
  10:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \page License
  11:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
  12:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * Redistribution and use in source and binary forms, with or without
  13:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * modification, are permitted provided that the following conditions are met:
  14:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
  15:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *    this list of conditions and the following disclaimer.
  17:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
  18:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *    and/or other materials provided with the distribution.
  21:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
  22:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *    from this software without specific prior written permission.
  24:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
  25:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *    Atmel microcontroller product.
  27:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
  28:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
  40:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \asf_license_stop
  41:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  */
  42:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
  43:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /**
  44:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @author
  45:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *      Atmel Corporation: http://www.atmel.com
  46:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *      Support email: avr@atmel.com
  47:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  */
  48:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
  49:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /*
  50:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * Copyright (c) 2013-2014, Atmel Corporation All rights reserved.
  51:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
  52:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  53:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  */
  54:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
  55:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /* === Includes ============================================================ */
  56:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
  57:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #include "sal_types.h"
  58:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #if (SAL_TYPE == ATMEGARF_SAL)
  59:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #include "sal.h"
  60:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #include <string.h>
  61:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
  62:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /* === Macros ============================================================== */
  63:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
  64:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /* values for SR_AES_DIR */
  65:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define AES_DIR_VOID      (AES_DIR_ENCRYPT + AES_DIR_DECRYPT + 1)
  66:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /* Must be different from both summands */
  67:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
  68:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /* value for SR_AES_CON */
  69:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define AES_START         (1)
  70:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
  71:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define _SR_MASK(addr, mask, pos, val)     (((uint8_t)val << pos) & mask)
  72:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define SR_MASK(SR, val)                   _SR_MASK(SR, val)
  73:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
  74:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /* === Types =============================================================== */
  75:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
  76:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /* === Data ============================================================= */
  77:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
  78:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /* True if decryption key is actual and was computed. */
  79:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** static bool dec_initialized = false;
  80:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /* Encryption mode with flags. */
  81:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** static uint8_t mode_byte;
  82:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /* Last value of "dir" parameter in sal_aes_setup(). */
  83:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** static uint8_t last_dir = AES_DIR_VOID;
  84:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /* Actual encryption key. */
  85:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** static uint8_t enc_key[AES_KEYSIZE];
  86:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /* Actual decryption key (valid if last_dir == AES_DIR_DECRYPT). */
  87:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** static uint8_t dec_key[AES_KEYSIZE];
  88:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Offset for register AES_CTRL */
  89:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define RG_AES_CTRL                     (0x13C)
  90:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Sub-registers of Register @ref RG_AES_CTRL */
  91:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Access parameters for sub-register AES_IM in register @ref RG_AES_CTRL */
  92:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define SR_AES_IM                       0x13C, 0x04, 2
  93:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Access parameters for sub-register AES_DIR in register @ref RG_AES_CTRL */
  94:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define SR_AES_DIR                      0x13C, 0x08, 3
  95:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
  96:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Constant AES_DIR_DECRYPT for sub-register @ref SR_AES_DIR in register
  97:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * AES_CTRL */
  98:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define AES_DIR_DECRYPT                 (1)
  99:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 100:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Constant AES_DIR_ENCRYPT for sub-register @ref SR_AES_DIR in register
 101:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * AES_CTRL */
 102:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define AES_DIR_ENCRYPT                 (0)
 103:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Access parameters for sub-register AES_MODE in register @ref RG_AES_CTRL */
 104:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define SR_AES_MODE                     0x13C, 0x20, 5
 105:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 106:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Access parameters for sub-register AES_REQUEST in register @ref RG_AES_CTRL
 107:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** **/
 108:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define SR_AES_REQUEST                  0x13C, 0x80, 7
 109:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 110:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Constant AES_START for sub-register @ref SR_AES_REQUEST in register AES_CTRL
 111:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** **/
 112:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define AES_START                       (1)
 113:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 114:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Offset for register AES_STATUS */
 115:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define RG_AES_STATUS                   (0x13D)
 116:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Sub-registers of Register @ref RG_AES_STATUS */
 117:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 118:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Access parameters for sub-register AES_DONE in register @ref RG_AES_STATUS
 119:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** **/
 120:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define SR_AES_DONE                     0x13D, 0x01, 0
 121:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 122:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Constant AES_COMPLETED for sub-register @ref SR_AES_DONE in register
 123:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * AES_STATUS */
 124:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define AES_COMPLETED                   (1)
 125:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 126:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Constant AES_NOT_COMPLETED for sub-register @ref SR_AES_DONE in register
 127:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * AES_STATUS */
 128:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define AES_NOT_COMPLETED               (0)
 129:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Access parameters for sub-register AES_ER in register @ref RG_AES_STATUS */
 130:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define SR_AES_ER                       0x13D, 0x80, 7
 131:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 132:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Offset for register AES_STATE */
 133:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define RG_AES_STATE                    (0x13E)
 134:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 135:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Offset for register AES_KEY */
 136:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define RG_AES_KEY                      (0x13F)
 137:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 138:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /** Offset for register TRX_STATUS */
 139:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define RG_TRX_STATUS                   (0x141)
 140:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 141:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /* State of trx before AES use; use to re-store trx state. */
 142:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 143:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /**
 144:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \brief Writes data into a transceiver register
 145:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 146:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * This macro writes a value into transceiver register.
 147:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 148:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \param addr Address of the trx register
 149:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \param data Data to be written to trx register
 150:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \ingroup group_trx_access
 151:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  */
 152:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define trx_reg_write(addr, data) \
 153:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	(*(volatile uint8_t *)(addr)) = (data)
 154:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 155:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define _trx_bit_read(addr, mask, pos) \
 156:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	(((*(volatile uint8_t *)(addr)) & (mask)) >> (pos))
 157:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 158:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /**
 159:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \brief Subregister read
 160:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 161:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \param   arg Subregister
 162:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 163:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \return  Value of the read subregister
 164:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \ingroup group_trx_access
 165:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  */
 166:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define trx_bit_read(arg) \
 167:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	_trx_bit_read(arg)
 168:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 169:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /**
 170:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \brief Reads current value from a transceiver register
 171:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 172:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * This macro reads the current value from a transceiver register.
 173:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 174:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \param addr Specifies the address of the trx register
 175:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * from which the data shall be read
 176:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \ingroup group_trx_access
 177:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * \return value of the register read
 178:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  */
 179:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** #define trx_reg_read(addr) \
 180:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	(*(volatile uint8_t *)(addr))
 181:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 182:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /* === Implementation ====================================================== */
 183:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 184:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /**
 185:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @brief Initialization of SAL.
 186:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 187:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * This functions initializes the SAL.
 188:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  */
 189:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** void sal_init(void)
 190:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** {
  42               		.loc 1 190 0
  43               		.cfi_startproc
  44 0000 CF93      		push r28
  45               	.LCFI0:
  46               		.cfi_def_cfa_offset 3
  47               		.cfi_offset 28, -2
  48 0002 DF93      		push r29
  49               	.LCFI1:
  50               		.cfi_def_cfa_offset 4
  51               		.cfi_offset 29, -3
  52 0004 CDB7      		in r28,__SP_L__
  53 0006 DEB7      		in r29,__SP_H__
  54               	.LCFI2:
  55               		.cfi_def_cfa_register 28
  56               	/* prologue: function */
  57               	/* frame size = 0 */
  58               	/* stack size = 2 */
  59               	.L__stack_usage = 2
 191:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** }
  60               		.loc 1 191 0
  61 0008 0000      		nop
  62               	/* epilogue start */
  63 000a DF91      		pop r29
  64 000c CF91      		pop r28
  65 000e 0895      		ret
  66               		.cfi_endproc
  67               	.LFE0:
  69               	.global	sal_aes_setup
  71               	sal_aes_setup:
  72               	.LFB1:
 192:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 193:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /**
 194:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @brief Setup AES unit
 195:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 196:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * This function perform the following tasks as part of the setup of the
 197:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * AES unit: key initialization, set encryption direction and encryption mode.
 198:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 199:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * In general, the contents of SRAM buffer is destroyed. When using
 200:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * sal_aes_wrrd(), sal_aes_read() needs to be called in order to get the result
 201:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * of the last AES operation before you may call sal_aes_setup() again.
 202:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 203:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @param[in] key AES key or NULL (NULL: use last key)
 204:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @param[in] enc_mode  AES_MODE_ECB or AES_MODE_CBC
 205:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @param[in] dir AES_DIR_ENCRYPT or AES_DIR_DECRYPT
 206:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 207:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @return  False if some parameter was illegal, true else
 208:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  */
 209:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** bool sal_aes_setup(uint8_t *key,
 210:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		uint8_t enc_mode,
 211:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		uint8_t dir)
 212:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** {
  73               		.loc 1 212 0
  74               		.cfi_startproc
  75 0010 CF93      		push r28
  76               	.LCFI3:
  77               		.cfi_def_cfa_offset 3
  78               		.cfi_offset 28, -2
  79 0012 DF93      		push r29
  80               	.LCFI4:
  81               		.cfi_def_cfa_offset 4
  82               		.cfi_offset 29, -3
  83 0014 CDB7      		in r28,__SP_L__
  84 0016 DEB7      		in r29,__SP_H__
  85               	.LCFI5:
  86               		.cfi_def_cfa_register 28
  87 0018 6597      		sbiw r28,21
  88               	.LCFI6:
  89               		.cfi_def_cfa_offset 25
  90 001a 0FB6      		in __tmp_reg__,__SREG__
  91 001c F894      		cli
  92 001e DEBF      		out __SP_H__,r29
  93 0020 0FBE      		out __SREG__,__tmp_reg__
  94 0022 CDBF      		out __SP_L__,r28
  95               	/* prologue: function */
  96               	/* frame size = 21 */
  97               	/* stack size = 23 */
  98               	.L__stack_usage = 23
  99 0024 9B8B      		std Y+19,r25
 100 0026 8A8B      		std Y+18,r24
 101 0028 6C8B      		std Y+20,r22
 102 002a 4D8B      		std Y+21,r20
 213:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	uint8_t i;
 214:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 215:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	if (key != NULL) {
 103               		.loc 1 215 0
 104 002c 8A89      		ldd r24,Y+18
 105 002e 9B89      		ldd r25,Y+19
 106 0030 892B      		or r24,r25
 107 0032 01F0      		breq .L3
 216:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		/* Setup key. */
 217:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		dec_initialized = false;
 108               		.loc 1 217 0
 109 0034 1092 0000 		sts dec_initialized,__zero_reg__
 218:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 219:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		last_dir = AES_DIR_VOID;
 110               		.loc 1 219 0
 111 0038 82E0      		ldi r24,lo8(2)
 112 003a 8093 0000 		sts last_dir,r24
 220:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 221:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		/* Save key for later use after decryption or sleep. */
 222:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		memcpy(enc_key, key, AES_KEYSIZE);
 113               		.loc 1 222 0
 114 003e 8A89      		ldd r24,Y+18
 115 0040 9B89      		ldd r25,Y+19
 116 0042 20E1      		ldi r18,lo8(16)
 117 0044 FC01      		movw r30,r24
 118 0046 A0E0      		ldi r26,lo8(enc_key)
 119 0048 B0E0      		ldi r27,hi8(enc_key)
 120               		0:
 121 004a 0190      		ld r0,Z+
 122 004c 0D92      		st X+,r0
 123 004e 2A95      		dec r18
 124 0050 01F4      		brne 0b
 223:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 224:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		/* fill in key */
 225:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		for (i = 0; i < AES_BLOCKSIZE; ++i) {
 125               		.loc 1 225 0
 126 0052 1982      		std Y+1,__zero_reg__
 127 0054 00C0      		rjmp .L4
 128               	.L5:
 226:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			trx_reg_write(RG_AES_KEY, key[i]);
 129               		.loc 1 226 0 discriminator 3
 130 0056 8FE3      		ldi r24,lo8(63)
 131 0058 91E0      		ldi r25,lo8(1)
 132 005a 2981      		ldd r18,Y+1
 133 005c 222F      		mov r18,r18
 134 005e 30E0      		ldi r19,0
 135 0060 4A89      		ldd r20,Y+18
 136 0062 5B89      		ldd r21,Y+19
 137 0064 240F      		add r18,r20
 138 0066 351F      		adc r19,r21
 139 0068 F901      		movw r30,r18
 140 006a 2081      		ld r18,Z
 141 006c FC01      		movw r30,r24
 142 006e 2083      		st Z,r18
 225:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			trx_reg_write(RG_AES_KEY, key[i]);
 143               		.loc 1 225 0 discriminator 3
 144 0070 8981      		ldd r24,Y+1
 145 0072 8F5F      		subi r24,lo8(-(1))
 146 0074 8983      		std Y+1,r24
 147               	.L4:
 225:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			trx_reg_write(RG_AES_KEY, key[i]);
 148               		.loc 1 225 0 is_stmt 0 discriminator 1
 149 0076 8981      		ldd r24,Y+1
 150 0078 8031      		cpi r24,lo8(16)
 151 007a 00F0      		brlo .L5
 152               	.L3:
 227:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		}
 228:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	}
 229:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 230:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	/* Set encryption direction. */
 231:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	switch (dir) {
 153               		.loc 1 231 0 is_stmt 1
 154 007c 8D89      		ldd r24,Y+21
 155 007e 882F      		mov r24,r24
 156 0080 90E0      		ldi r25,0
 157 0082 0097      		sbiw r24,0
 158 0084 01F0      		breq .L7
 159 0086 0197      		sbiw r24,1
 160 0088 01F0      		breq .L8
 161 008a 00C0      		rjmp .L6
 162               	.L7:
 232:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	case AES_DIR_ENCRYPT:
 233:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		if (last_dir == AES_DIR_DECRYPT) {
 163               		.loc 1 233 0
 164 008c 8091 0000 		lds r24,last_dir
 165 0090 8130      		cpi r24,lo8(1)
 166 0092 01F0      		breq .+2
 167 0094 00C0      		rjmp .L22
 234:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			/*
 235:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			 * If the last operation was decryption, the encryption
 236:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			 * key must be stored in enc_key, so re-initialize it.
 237:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			 */
 238:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			for (i = 0; i < AES_BLOCKSIZE; ++i) {
 168               		.loc 1 238 0
 169 0096 1982      		std Y+1,__zero_reg__
 170 0098 00C0      		rjmp .L10
 171               	.L11:
 239:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				trx_reg_write(RG_AES_KEY, enc_key[i]);
 172               		.loc 1 239 0 discriminator 3
 173 009a 8FE3      		ldi r24,lo8(63)
 174 009c 91E0      		ldi r25,lo8(1)
 175 009e 2981      		ldd r18,Y+1
 176 00a0 222F      		mov r18,r18
 177 00a2 30E0      		ldi r19,0
 178 00a4 2050      		subi r18,lo8(-(enc_key))
 179 00a6 3040      		sbci r19,hi8(-(enc_key))
 180 00a8 F901      		movw r30,r18
 181 00aa 2081      		ld r18,Z
 182 00ac FC01      		movw r30,r24
 183 00ae 2083      		st Z,r18
 238:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				trx_reg_write(RG_AES_KEY, enc_key[i]);
 184               		.loc 1 238 0 discriminator 3
 185 00b0 8981      		ldd r24,Y+1
 186 00b2 8F5F      		subi r24,lo8(-(1))
 187 00b4 8983      		std Y+1,r24
 188               	.L10:
 238:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				trx_reg_write(RG_AES_KEY, enc_key[i]);
 189               		.loc 1 238 0 is_stmt 0 discriminator 1
 190 00b6 8981      		ldd r24,Y+1
 191 00b8 8031      		cpi r24,lo8(16)
 192 00ba 00F0      		brlo .L11
 240:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			}
 241:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		}
 242:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 243:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		break;
 193               		.loc 1 243 0 is_stmt 1
 194 00bc 00C0      		rjmp .L22
 195               	.L8:
 244:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 245:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	case AES_DIR_DECRYPT:
 246:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		if (last_dir != AES_DIR_DECRYPT) {
 196               		.loc 1 246 0
 197 00be 8091 0000 		lds r24,last_dir
 198 00c2 8130      		cpi r24,lo8(1)
 199 00c4 01F0      		breq .L6
 247:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			if (!dec_initialized) {
 200               		.loc 1 247 0
 201 00c6 9091 0000 		lds r25,dec_initialized
 202 00ca 81E0      		ldi r24,lo8(1)
 203 00cc 8927      		eor r24,r25
 204 00ce 8823      		tst r24
 205 00d0 01F0      		breq .L13
 206               	.LBB2:
 248:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				uint8_t dummy[AES_BLOCKSIZE];
 249:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 250:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				/* Compute decryption key and initialize unit
 251:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				 * with it. */
 252:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 253:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				/* Dummy ECB encryption. */
 254:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				mode_byte = SR_MASK(SR_AES_MODE, AES_MODE_ECB) |
 207               		.loc 1 254 0
 208 00d2 1092 0000 		sts mode_byte,__zero_reg__
 255:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 						SR_MASK(SR_AES_DIR,
 256:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 						AES_DIR_ENCRYPT);
 257:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				trx_reg_write(RG_AES_CTRL, mode_byte);
 209               		.loc 1 257 0
 210 00d6 8CE3      		ldi r24,lo8(60)
 211 00d8 91E0      		ldi r25,lo8(1)
 212 00da 2091 0000 		lds r18,mode_byte
 213 00de FC01      		movw r30,r24
 214 00e0 2083      		st Z,r18
 258:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				sal_aes_exec(dummy);
 215               		.loc 1 258 0
 216 00e2 CE01      		movw r24,r28
 217 00e4 0296      		adiw r24,2
 218 00e6 0E94 0000 		call sal_aes_exec
 259:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 260:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				/* Read last round key. */
 261:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				for (i = 0; i < AES_BLOCKSIZE; ++i) {
 219               		.loc 1 261 0
 220 00ea 1982      		std Y+1,__zero_reg__
 221 00ec 00C0      		rjmp .L14
 222               	.L15:
 262:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 					dec_key[i]
 223               		.loc 1 262 0 discriminator 3
 224 00ee 8981      		ldd r24,Y+1
 225 00f0 882F      		mov r24,r24
 226 00f2 90E0      		ldi r25,0
 263:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 						= trx_reg_read(RG_AES_KEY);
 227               		.loc 1 263 0 discriminator 3
 228 00f4 2FE3      		ldi r18,lo8(63)
 229 00f6 31E0      		ldi r19,lo8(1)
 230 00f8 F901      		movw r30,r18
 231 00fa 2081      		ld r18,Z
 232 00fc 8050      		subi r24,lo8(-(dec_key))
 233 00fe 9040      		sbci r25,hi8(-(dec_key))
 234 0100 FC01      		movw r30,r24
 235 0102 2083      		st Z,r18
 261:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 					dec_key[i]
 236               		.loc 1 261 0 discriminator 3
 237 0104 8981      		ldd r24,Y+1
 238 0106 8F5F      		subi r24,lo8(-(1))
 239 0108 8983      		std Y+1,r24
 240               	.L14:
 261:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 					dec_key[i]
 241               		.loc 1 261 0 is_stmt 0 discriminator 1
 242 010a 8981      		ldd r24,Y+1
 243 010c 8031      		cpi r24,lo8(16)
 244 010e 00F0      		brlo .L15
 264:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				}
 265:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 266:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				dec_initialized = true;
 245               		.loc 1 266 0 is_stmt 1
 246 0110 81E0      		ldi r24,lo8(1)
 247 0112 8093 0000 		sts dec_initialized,r24
 248               	.L13:
 249               	.LBE2:
 267:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			}
 268:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 269:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			/* Initialize the key. */
 270:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			for (i = 0; i < AES_BLOCKSIZE; ++i) {
 250               		.loc 1 270 0
 251 0116 1982      		std Y+1,__zero_reg__
 252 0118 00C0      		rjmp .L16
 253               	.L17:
 271:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				trx_reg_write(RG_AES_KEY, dec_key[i]);
 254               		.loc 1 271 0 discriminator 3
 255 011a 8FE3      		ldi r24,lo8(63)
 256 011c 91E0      		ldi r25,lo8(1)
 257 011e 2981      		ldd r18,Y+1
 258 0120 222F      		mov r18,r18
 259 0122 30E0      		ldi r19,0
 260 0124 2050      		subi r18,lo8(-(dec_key))
 261 0126 3040      		sbci r19,hi8(-(dec_key))
 262 0128 F901      		movw r30,r18
 263 012a 2081      		ld r18,Z
 264 012c FC01      		movw r30,r24
 265 012e 2083      		st Z,r18
 270:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				trx_reg_write(RG_AES_KEY, dec_key[i]);
 266               		.loc 1 270 0 discriminator 3
 267 0130 8981      		ldd r24,Y+1
 268 0132 8F5F      		subi r24,lo8(-(1))
 269 0134 8983      		std Y+1,r24
 270               	.L16:
 270:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				trx_reg_write(RG_AES_KEY, dec_key[i]);
 271               		.loc 1 270 0 is_stmt 0 discriminator 1
 272 0136 8981      		ldd r24,Y+1
 273 0138 8031      		cpi r24,lo8(16)
 274 013a 00F0      		brlo .L17
 272:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			}
 273:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 274:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			break;
 275               		.loc 1 274 0 is_stmt 1
 276 013c 00C0      		rjmp .L12
 277               	.L6:
 275:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		}
 276:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 277:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	default:
 278:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		return false;
 278               		.loc 1 278 0
 279 013e 80E0      		ldi r24,0
 280 0140 00C0      		rjmp .L18
 281               	.L22:
 243:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 282               		.loc 1 243 0
 283 0142 0000      		nop
 284               	.L12:
 279:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	}
 280:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 281:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	last_dir = dir;
 285               		.loc 1 281 0
 286 0144 8D89      		ldd r24,Y+21
 287 0146 8093 0000 		sts last_dir,r24
 282:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 283:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	/* Set encryption mode. */
 284:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	switch (enc_mode) {
 288               		.loc 1 284 0
 289 014a 8C89      		ldd r24,Y+20
 290 014c 882F      		mov r24,r24
 291 014e 90E0      		ldi r25,0
 292 0150 0297      		sbiw r24,2
 293 0152 00F4      		brsh .L19
 285:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	case AES_MODE_ECB:
 286:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	case AES_MODE_CBC:
 287:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		mode_byte
 288:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			= SR_MASK(SR_AES_MODE, enc_mode) | SR_MASK(SR_AES_DIR,
 294               		.loc 1 288 0
 295 0154 8C89      		ldd r24,Y+20
 296 0156 882F      		mov r24,r24
 297 0158 90E0      		ldi r25,0
 298 015a 880F      		lsl r24
 299 015c 991F      		rol r25
 300 015e 8295      		swap r24
 301 0160 9295      		swap r25
 302 0162 907F      		andi r25,0xf0
 303 0164 9827      		eor r25,r24
 304 0166 807F      		andi r24,0xf0
 305 0168 9827      		eor r25,r24
 306 016a 282F      		mov r18,r24
 307 016c 2072      		andi r18,lo8(32)
 308 016e 8D89      		ldd r24,Y+21
 309 0170 882F      		mov r24,r24
 310 0172 90E0      		ldi r25,0
 311 0174 880F      		lsl r24
 312 0176 991F      		rol r25
 313 0178 880F      		lsl r24
 314 017a 991F      		rol r25
 315 017c 880F      		lsl r24
 316 017e 991F      		rol r25
 317 0180 8870      		andi r24,lo8(8)
 318 0182 822B      		or r24,r18
 319 0184 8093 0000 		sts mode_byte,r24
 289:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 				dir);
 290:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		break;
 320               		.loc 1 290 0
 321 0188 0000      		nop
 291:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 292:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	default:
 293:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		return (false);
 294:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	}
 295:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 296:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	/* set mode and direction */
 297:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 298:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	trx_reg_write(RG_AES_CTRL, mode_byte);
 322               		.loc 1 298 0
 323 018a 8CE3      		ldi r24,lo8(60)
 324 018c 91E0      		ldi r25,lo8(1)
 325 018e 2091 0000 		lds r18,mode_byte
 326 0192 FC01      		movw r30,r24
 327 0194 2083      		st Z,r18
 299:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 300:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	return (true);
 328               		.loc 1 300 0
 329 0196 81E0      		ldi r24,lo8(1)
 330 0198 00C0      		rjmp .L18
 331               	.L19:
 293:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	}
 332               		.loc 1 293 0
 333 019a 80E0      		ldi r24,0
 334               	.L18:
 335               	/* epilogue start */
 301:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** }
 336               		.loc 1 301 0
 337 019c 6596      		adiw r28,21
 338 019e 0FB6      		in __tmp_reg__,__SREG__
 339 01a0 F894      		cli
 340 01a2 DEBF      		out __SP_H__,r29
 341 01a4 0FBE      		out __SREG__,__tmp_reg__
 342 01a6 CDBF      		out __SP_L__,r28
 343 01a8 DF91      		pop r29
 344 01aa CF91      		pop r28
 345 01ac 0895      		ret
 346               		.cfi_endproc
 347               	.LFE1:
 349               	.global	sal_aes_restart
 351               	sal_aes_restart:
 352               	.LFB2:
 302:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 303:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /**
 304:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @brief Re-inits key and state after a sleep or TRX reset
 305:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 306:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * This function re-initializes the AES key and the state of the
 307:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * AES engine after TRX sleep or reset.
 308:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * The contents of AES register AES_CON is restored,
 309:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * the next AES operation started with sal_aes_exec()
 310:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * will be executed correctly.
 311:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  */
 312:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** void sal_aes_restart(void)
 313:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** {
 353               		.loc 1 313 0
 354               		.cfi_startproc
 355 01ae CF93      		push r28
 356               	.LCFI7:
 357               		.cfi_def_cfa_offset 3
 358               		.cfi_offset 28, -2
 359 01b0 DF93      		push r29
 360               	.LCFI8:
 361               		.cfi_def_cfa_offset 4
 362               		.cfi_offset 29, -3
 363 01b2 00D0      		rcall .
 364 01b4 1F92      		push __zero_reg__
 365               	.LCFI9:
 366               		.cfi_def_cfa_offset 7
 367 01b6 CDB7      		in r28,__SP_L__
 368 01b8 DEB7      		in r29,__SP_H__
 369               	.LCFI10:
 370               		.cfi_def_cfa_register 28
 371               	/* prologue: function */
 372               	/* frame size = 3 */
 373               	/* stack size = 5 */
 374               	.L__stack_usage = 5
 314:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	uint8_t i;
 315:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	uint8_t *keyp;
 316:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 317:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	if (last_dir == AES_DIR_ENCRYPT) {
 375               		.loc 1 317 0
 376 01ba 8091 0000 		lds r24,last_dir
 377 01be 8823      		tst r24
 378 01c0 01F4      		brne .L24
 318:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		keyp = enc_key;
 379               		.loc 1 318 0
 380 01c2 80E0      		ldi r24,lo8(enc_key)
 381 01c4 90E0      		ldi r25,hi8(enc_key)
 382 01c6 9B83      		std Y+3,r25
 383 01c8 8A83      		std Y+2,r24
 384 01ca 00C0      		rjmp .L25
 385               	.L24:
 319:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	} else {
 320:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		keyp = dec_key;
 386               		.loc 1 320 0
 387 01cc 80E0      		ldi r24,lo8(dec_key)
 388 01ce 90E0      		ldi r25,hi8(dec_key)
 389 01d0 9B83      		std Y+3,r25
 390 01d2 8A83      		std Y+2,r24
 391               	.L25:
 321:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	}
 322:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 323:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	/* fill in key */
 324:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	for (i = 0; i < AES_BLOCKSIZE; ++i) {
 392               		.loc 1 324 0
 393 01d4 1982      		std Y+1,__zero_reg__
 394 01d6 00C0      		rjmp .L26
 395               	.L27:
 325:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		trx_reg_write(RG_AES_KEY, *keyp++);
 396               		.loc 1 325 0 discriminator 3
 397 01d8 2FE3      		ldi r18,lo8(63)
 398 01da 31E0      		ldi r19,lo8(1)
 399 01dc 8A81      		ldd r24,Y+2
 400 01de 9B81      		ldd r25,Y+3
 401 01e0 AC01      		movw r20,r24
 402 01e2 4F5F      		subi r20,-1
 403 01e4 5F4F      		sbci r21,-1
 404 01e6 5B83      		std Y+3,r21
 405 01e8 4A83      		std Y+2,r20
 406 01ea FC01      		movw r30,r24
 407 01ec 8081      		ld r24,Z
 408 01ee F901      		movw r30,r18
 409 01f0 8083      		st Z,r24
 324:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		trx_reg_write(RG_AES_KEY, *keyp++);
 410               		.loc 1 324 0 discriminator 3
 411 01f2 8981      		ldd r24,Y+1
 412 01f4 8F5F      		subi r24,lo8(-(1))
 413 01f6 8983      		std Y+1,r24
 414               	.L26:
 324:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		trx_reg_write(RG_AES_KEY, *keyp++);
 415               		.loc 1 324 0 is_stmt 0 discriminator 1
 416 01f8 8981      		ldd r24,Y+1
 417 01fa 8031      		cpi r24,lo8(16)
 418 01fc 00F0      		brlo .L27
 326:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	}
 327:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 328:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	trx_reg_write(RG_AES_CTRL, mode_byte);
 419               		.loc 1 328 0 is_stmt 1
 420 01fe 8CE3      		ldi r24,lo8(60)
 421 0200 91E0      		ldi r25,lo8(1)
 422 0202 2091 0000 		lds r18,mode_byte
 423 0206 FC01      		movw r30,r24
 424 0208 2083      		st Z,r18
 329:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** }
 425               		.loc 1 329 0
 426 020a 0000      		nop
 427               	/* epilogue start */
 428 020c 0F90      		pop __tmp_reg__
 429 020e 0F90      		pop __tmp_reg__
 430 0210 0F90      		pop __tmp_reg__
 431 0212 DF91      		pop r29
 432 0214 CF91      		pop r28
 433 0216 0895      		ret
 434               		.cfi_endproc
 435               	.LFE2:
 437               	.global	_sal_aes_clean_up
 439               	_sal_aes_clean_up:
 440               	.LFB3:
 330:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 331:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /**
 332:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @brief Cleans up the SAL/AES after STB has been finished
 333:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  */
 334:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** void _sal_aes_clean_up(void)
 335:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** {
 441               		.loc 1 335 0
 442               		.cfi_startproc
 443 0218 CF93      		push r28
 444               	.LCFI11:
 445               		.cfi_def_cfa_offset 3
 446               		.cfi_offset 28, -2
 447 021a DF93      		push r29
 448               	.LCFI12:
 449               		.cfi_def_cfa_offset 4
 450               		.cfi_offset 29, -3
 451 021c CDB7      		in r28,__SP_L__
 452 021e DEB7      		in r29,__SP_H__
 453               	.LCFI13:
 454               		.cfi_def_cfa_register 28
 455               	/* prologue: function */
 456               	/* frame size = 0 */
 457               	/* stack size = 2 */
 458               	.L__stack_usage = 2
 336:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** }
 459               		.loc 1 336 0
 460 0220 0000      		nop
 461               	/* epilogue start */
 462 0222 DF91      		pop r29
 463 0224 CF91      		pop r28
 464 0226 0895      		ret
 465               		.cfi_endproc
 466               	.LFE3:
 468               	.global	sal_aes_exec
 470               	sal_aes_exec:
 471               	.LFB4:
 337:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 338:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /**
 339:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @brief En/decrypt one AES block.
 340:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 341:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * The function returns after the AES operation is finished.
 342:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 343:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @param[in]  data  AES block to be en/decrypted
 344:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  */
 345:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** void sal_aes_exec(uint8_t *data)
 346:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** {
 472               		.loc 1 346 0
 473               		.cfi_startproc
 474 0228 CF93      		push r28
 475               	.LCFI14:
 476               		.cfi_def_cfa_offset 3
 477               		.cfi_offset 28, -2
 478 022a DF93      		push r29
 479               	.LCFI15:
 480               		.cfi_def_cfa_offset 4
 481               		.cfi_offset 29, -3
 482 022c 00D0      		rcall .
 483 022e 1F92      		push __zero_reg__
 484               	.LCFI16:
 485               		.cfi_def_cfa_offset 7
 486 0230 CDB7      		in r28,__SP_L__
 487 0232 DEB7      		in r29,__SP_H__
 488               	.LCFI17:
 489               		.cfi_def_cfa_register 28
 490               	/* prologue: function */
 491               	/* frame size = 3 */
 492               	/* stack size = 5 */
 493               	.L__stack_usage = 5
 494 0234 9B83      		std Y+3,r25
 495 0236 8A83      		std Y+2,r24
 347:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	uint8_t i;
 348:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 349:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	for (i = 0; i < AES_BLOCKSIZE; ++i) {
 496               		.loc 1 349 0
 497 0238 1982      		std Y+1,__zero_reg__
 498 023a 00C0      		rjmp .L30
 499               	.L31:
 350:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		trx_reg_write(RG_AES_STATE, *data++);
 500               		.loc 1 350 0 discriminator 3
 501 023c 2EE3      		ldi r18,lo8(62)
 502 023e 31E0      		ldi r19,lo8(1)
 503 0240 8A81      		ldd r24,Y+2
 504 0242 9B81      		ldd r25,Y+3
 505 0244 AC01      		movw r20,r24
 506 0246 4F5F      		subi r20,-1
 507 0248 5F4F      		sbci r21,-1
 508 024a 5B83      		std Y+3,r21
 509 024c 4A83      		std Y+2,r20
 510 024e FC01      		movw r30,r24
 511 0250 8081      		ld r24,Z
 512 0252 F901      		movw r30,r18
 513 0254 8083      		st Z,r24
 349:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		trx_reg_write(RG_AES_STATE, *data++);
 514               		.loc 1 349 0 discriminator 3
 515 0256 8981      		ldd r24,Y+1
 516 0258 8F5F      		subi r24,lo8(-(1))
 517 025a 8983      		std Y+1,r24
 518               	.L30:
 349:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		trx_reg_write(RG_AES_STATE, *data++);
 519               		.loc 1 349 0 is_stmt 0 discriminator 1
 520 025c 8981      		ldd r24,Y+1
 521 025e 8031      		cpi r24,lo8(16)
 522 0260 00F0      		brlo .L31
 351:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	}
 352:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 353:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	trx_reg_write(RG_AES_CTRL,
 523               		.loc 1 353 0 is_stmt 1
 524 0262 8CE3      		ldi r24,lo8(60)
 525 0264 91E0      		ldi r25,lo8(1)
 526 0266 2091 0000 		lds r18,mode_byte
 527 026a 2068      		ori r18,lo8(-128)
 528 026c FC01      		movw r30,r24
 529 026e 2083      		st Z,r18
 354:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 			mode_byte | SR_MASK(SR_AES_REQUEST, AES_START));
 355:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 356:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	/* Wait for the operation to finish - poll RG_AES_RY. */
 357:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	while (!trx_bit_read(SR_AES_DONE)) {
 530               		.loc 1 357 0
 531 0270 0000      		nop
 532               	.L32:
 533               		.loc 1 357 0 is_stmt 0 discriminator 1
 534 0272 8DE3      		ldi r24,lo8(61)
 535 0274 91E0      		ldi r25,lo8(1)
 536 0276 FC01      		movw r30,r24
 537 0278 8081      		ld r24,Z
 538 027a 882F      		mov r24,r24
 539 027c 90E0      		ldi r25,0
 540 027e 8170      		andi r24,1
 541 0280 9927      		clr r25
 542 0282 892B      		or r24,r25
 543 0284 01F0      		breq .L32
 358:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	}
 359:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** }
 544               		.loc 1 359 0 is_stmt 1
 545 0286 0000      		nop
 546               	/* epilogue start */
 547 0288 0F90      		pop __tmp_reg__
 548 028a 0F90      		pop __tmp_reg__
 549 028c 0F90      		pop __tmp_reg__
 550 028e DF91      		pop r29
 551 0290 CF91      		pop r28
 552 0292 0895      		ret
 553               		.cfi_endproc
 554               	.LFE4:
 556               	.global	sal_aes_read
 558               	sal_aes_read:
 559               	.LFB5:
 360:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 361:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** /**
 362:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @brief Reads the result of previous AES en/decryption
 363:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 364:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * This function returns the result of the previous AES operation,
 365:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * so this function is needed in order to get the last result
 366:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * of a series of sal_aes_wrrd() calls.
 367:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  *
 368:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  * @param[out] data     - result of previous operation
 369:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c ****  */
 370:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** void sal_aes_read(uint8_t *data)
 371:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** {
 560               		.loc 1 371 0
 561               		.cfi_startproc
 562 0294 CF93      		push r28
 563               	.LCFI18:
 564               		.cfi_def_cfa_offset 3
 565               		.cfi_offset 28, -2
 566 0296 DF93      		push r29
 567               	.LCFI19:
 568               		.cfi_def_cfa_offset 4
 569               		.cfi_offset 29, -3
 570 0298 00D0      		rcall .
 571 029a 1F92      		push __zero_reg__
 572               	.LCFI20:
 573               		.cfi_def_cfa_offset 7
 574 029c CDB7      		in r28,__SP_L__
 575 029e DEB7      		in r29,__SP_H__
 576               	.LCFI21:
 577               		.cfi_def_cfa_register 28
 578               	/* prologue: function */
 579               	/* frame size = 3 */
 580               	/* stack size = 5 */
 581               	.L__stack_usage = 5
 582 02a0 9B83      		std Y+3,r25
 583 02a2 8A83      		std Y+2,r24
 372:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	uint8_t i;
 373:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 
 374:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	for (i = 0; i < AES_BLOCKSIZE; ++i) {
 584               		.loc 1 374 0
 585 02a4 1982      		std Y+1,__zero_reg__
 586 02a6 00C0      		rjmp .L34
 587               	.L35:
 375:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		*data++ = trx_reg_read(RG_AES_STATE);
 588               		.loc 1 375 0 discriminator 3
 589 02a8 8A81      		ldd r24,Y+2
 590 02aa 9B81      		ldd r25,Y+3
 591 02ac 9C01      		movw r18,r24
 592 02ae 2F5F      		subi r18,-1
 593 02b0 3F4F      		sbci r19,-1
 594 02b2 3B83      		std Y+3,r19
 595 02b4 2A83      		std Y+2,r18
 596 02b6 2EE3      		ldi r18,lo8(62)
 597 02b8 31E0      		ldi r19,lo8(1)
 598 02ba F901      		movw r30,r18
 599 02bc 2081      		ld r18,Z
 600 02be FC01      		movw r30,r24
 601 02c0 2083      		st Z,r18
 374:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		*data++ = trx_reg_read(RG_AES_STATE);
 602               		.loc 1 374 0 discriminator 3
 603 02c2 8981      		ldd r24,Y+1
 604 02c4 8F5F      		subi r24,lo8(-(1))
 605 02c6 8983      		std Y+1,r24
 606               	.L34:
 374:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 		*data++ = trx_reg_read(RG_AES_STATE);
 607               		.loc 1 374 0 is_stmt 0 discriminator 1
 608 02c8 8981      		ldd r24,Y+1
 609 02ca 8031      		cpi r24,lo8(16)
 610 02cc 00F0      		brlo .L35
 376:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** 	}
 377:../../../stack/LwMesh/TDMA/services/sal/atmegarf_sal/src/sal.c **** }
 611               		.loc 1 377 0 is_stmt 1
 612 02ce 0000      		nop
 613               	/* epilogue start */
 614 02d0 0F90      		pop __tmp_reg__
 615 02d2 0F90      		pop __tmp_reg__
 616 02d4 0F90      		pop __tmp_reg__
 617 02d6 DF91      		pop r29
 618 02d8 CF91      		pop r28
 619 02da 0895      		ret
 620               		.cfi_endproc
 621               	.LFE5:
 623               	.Letext0:
 624               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
DEFINED SYMBOLS
                            *ABS*:00000000 sal.c
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:14     .bss.dec_initialized:00000000 dec_initialized
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:19     .bss.mode_byte:00000000 mode_byte
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:24     .data.last_dir:00000000 last_dir
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:29     .bss.enc_key:00000000 enc_key
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:34     .bss.dec_key:00000000 dec_key
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:39     .text:00000000 sal_init
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:71     .text:00000010 sal_aes_setup
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:470    .text:00000228 sal_aes_exec
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:351    .text:000001ae sal_aes_restart
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:439    .text:00000218 _sal_aes_clean_up
C:\Users\GUILHE~1\AppData\Local\Temp\cczDj2n8.s:558    .text:00000294 sal_aes_read

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
