   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "trx_access.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .align 1
  16              	 .syntax unified
  17              	 .thumb
  18              	 .thumb_func
  19              	 .fpu softvfp
  21              	NVIC_EnableIRQ:
  22              	.LFB96:
  23              	 .file 1 "../../../platform/thirdparty/CMSIS/include/core_cm4.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @file     core_cm4.h
   3:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @date     03. February 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * within development tools that are supporting such ARM based processors.
  14:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if defined ( __ICCARM__ )
  24:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  25:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
  26:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifdef __cplusplus
  28:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  extern "C" {
  29:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
  30:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  31:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  34:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  35:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  36:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   
  37:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  38:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'. 
  39:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  40:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  41:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****      Unions are used for effective representation of core registers.
  42:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****    
  43:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  44:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****      Function-like macros are used to allow more efficient code. 
  45:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
  46:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  47:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  48:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*******************************************************************************
  49:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *                 CMSIS definitions
  50:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  ******************************************************************************/
  51:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup Cortex_M4
  52:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
  53:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
  54:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  55:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*  CMSIS CM4 definitions */
  56:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x03)                                   /*!< [31:16] CMSIS HAL m
  57:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x00)                                   /*!< [15:0]  CMSIS HAL s
  58:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  59:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  60:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  61:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  62:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  63:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  64:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if   defined ( __CC_ARM )
  65:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  66:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  67:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  68:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  69:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __ICCARM__ )
  70:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  71:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  72:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  73:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  74:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __TMS470__ )
  75:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  76:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  77:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  78:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __GNUC__ )
  79:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  80:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  81:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  82:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  83:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __TASKING__ )
  84:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
  85:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
  86:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  87:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  88:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
  89:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  90:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not. For this, __FPU_PRESENT has to be checked p
  91:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** */
  92:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if defined ( __CC_ARM )
  93:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  94:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
  95:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1
  96:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #else
  97:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  98:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0
  99:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #endif
 100:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #else
 101:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 102:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 103:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 104:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __ICCARM__ )
 105:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #if defined __ARMVFP__
 106:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 107:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1
 108:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #else
 109:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 110:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0
 111:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #endif
 112:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #else
 113:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 114:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 115:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 116:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __TMS470__ )
 117:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 118:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 119:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1
 120:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #else
 121:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 122:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0
 123:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #endif
 124:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #else
 125:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 126:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 127:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 128:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __GNUC__ )
 129:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 130:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 131:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1
 132:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #else
 133:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 134:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0
 135:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #endif
 136:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #else
 137:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 138:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 139:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 140:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __TASKING__ )
 141:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     /* add preprocessor checks to define __FPU_USED */
 142:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 143:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 144:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 145:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 146:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 147:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 148:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #include <core_cm4_simd.h>               /* Compiler specific SIMD Intrinsics               */
 149:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 150:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 151:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 152:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 153:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 154:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 155:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 156:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 157:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* check device defines and use defaults */
 158:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 159:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __CM4_REV
 160:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __CM4_REV               0x0000
 161:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 162:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 163:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 164:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __FPU_PRESENT
 165:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_PRESENT             0
 166:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 167:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 168:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 169:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __MPU_PRESENT
 170:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __MPU_PRESENT             0
 171:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 172:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 173:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 174:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 175:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 176:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 177:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 178:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 179:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 180:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 181:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 182:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 183:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 184:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 185:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 186:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /**
 187:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 188:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  
 189:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 190:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \li to specify the access to peripheral variables.
 191:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 192:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** */
 193:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifdef __cplusplus
 194:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 195:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #else
 196:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 197:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 198:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 199:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 200:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 201:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group Cortex_M4 */
 202:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 203:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 205:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*******************************************************************************
 206:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *                 Register Abstraction
 207:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   Core Register contain:
 208:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core Register
 209:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core NVIC Register
 210:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core SCB Register
 211:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core SysTick Register
 212:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core Debug Register
 213:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core MPU Register
 214:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core FPU Register
 215:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  ******************************************************************************/
 216:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 217:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 218:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** */
 219:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 220:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 221:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 222:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief  Core Register type definitions.
 223:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 224:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 225:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 226:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 227:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 228:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef union
 229:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 230:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   struct
 231:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 232:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 233:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 234:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #else
 235:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 236:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 237:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 238:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 239:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 240:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 241:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 242:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 243:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 244:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 245:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 246:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } APSR_Type;
 247:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 248:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 249:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 250:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 251:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef union
 252:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 253:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   struct
 254:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 255:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 256:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 257:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 258:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 259:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } IPSR_Type;
 260:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 261:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 262:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 263:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 264:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef union
 265:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 266:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   struct
 267:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 268:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 269:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 270:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 271:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #else
 272:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 273:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 274:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 275:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 276:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 277:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 278:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 279:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 280:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 281:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 282:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 283:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 284:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 285:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } xPSR_Type;
 286:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 287:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 288:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 289:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 290:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef union
 291:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 292:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   struct
 293:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 294:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 295:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 296:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 297:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 298:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 299:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 300:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } CONTROL_Type;
 301:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 302:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 303:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 304:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 306:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 308:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 309:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 310:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 311:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 312:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 313:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 314:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 315:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 316:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[24];
 317:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 318:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RSERVED1[24];
 319:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 320:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED2[24];
 321:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 322:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED3[24];
 323:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 324:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED4[56];
 325:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 326:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED5[644];
 327:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 328:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }  NVIC_Type;
 329:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 330:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 331:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 332:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 333:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 334:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 335:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 336:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 337:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 338:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 339:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 340:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 341:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 342:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 343:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 344:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 345:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 346:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 347:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 348:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 349:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 350:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 351:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 352:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 353:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 354:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 355:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 356:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 357:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 358:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 359:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 360:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 361:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 362:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 363:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 364:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 365:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 366:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[5];
 367:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 368:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } SCB_Type;
 369:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 370:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB CPUID Register Definitions */
 371:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 372:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 373:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 374:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 375:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 376:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 377:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 378:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 379:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 380:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 381:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 382:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 383:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 384:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 385:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 386:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 387:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 388:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 389:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 390:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 391:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 392:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 393:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 394:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 395:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 396:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 397:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 398:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 399:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 400:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 401:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 402:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 403:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 404:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 405:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 406:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 407:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 408:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 409:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 410:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 411:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 412:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 413:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 414:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 415:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 416:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 417:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 418:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 419:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 420:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 421:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 422:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 423:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 424:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 425:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 426:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 427:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 428:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 429:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 430:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 431:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 432:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 433:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 434:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 435:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 436:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 437:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 438:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 439:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 440:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 441:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 442:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 443:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB System Control Register Definitions */
 444:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 445:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 446:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 447:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 448:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 449:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 450:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 451:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 452:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 453:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 454:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 455:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 456:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 457:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 458:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 459:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 460:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 461:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 462:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 463:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 464:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 465:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 466:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 467:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 468:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 469:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 470:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 471:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 472:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 473:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 474:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 475:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 476:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 477:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 478:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 479:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 480:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 481:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 482:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 483:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 484:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 485:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 486:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 487:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 488:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 489:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 490:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 491:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 492:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 493:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 494:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 495:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 496:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 497:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 498:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 499:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 500:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 501:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 502:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 503:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 504:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 505:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 506:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 507:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 508:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 509:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 510:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 511:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 512:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 513:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 514:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 515:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 516:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 517:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 518:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 519:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 520:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 521:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 522:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 523:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 524:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 525:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 526:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 527:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 528:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 529:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 530:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 531:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 532:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 533:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 534:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 535:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 536:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 537:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 538:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 539:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 540:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 541:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 542:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 543:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 544:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 545:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 546:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 547:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 548:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 549:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 550:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 551:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 552:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 553:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 554:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 555:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 556:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 557:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 558:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 559:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 560:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 561:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 562:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 563:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 564:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[1];
 565:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 566:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 567:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } SCnSCB_Type;
 568:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 569:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 570:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 571:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 572:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 573:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 574:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 575:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 576:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 577:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 578:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 579:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 580:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 581:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 582:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 583:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 584:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 585:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 586:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 587:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 588:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 589:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 590:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 591:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 592:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 593:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 594:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 595:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 596:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 597:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 598:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 599:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 600:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 601:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 602:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 603:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 604:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 605:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 606:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } SysTick_Type;
 607:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 608:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 609:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 610:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 611:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 612:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 613:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 614:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 615:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 616:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 617:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 618:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 619:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 620:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 621:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SysTick Reload Register Definitions */
 622:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 623:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 624:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 625:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SysTick Current Register Definitions */
 626:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 627:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 628:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 629:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 630:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 631:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 632:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 633:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 634:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 635:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 636:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 637:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 638:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 639:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 640:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 641:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 642:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 643:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 644:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 645:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 646:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 647:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 648:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 649:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 650:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 651:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 652:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __O  union
 653:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 654:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 655:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 656:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 657:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 658:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[864];
 659:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 660:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED1[15];
 661:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 662:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED2[15];
 663:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 664:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } ITM_Type;
 665:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 666:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 667:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                          /*!< ITM TPR
 668:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)             /*!< ITM TPR
 669:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 670:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 671:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                          /*!< ITM TCR
 672:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                   /*!< ITM TCR
 673:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 674:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                          /*!< ITM TCR
 675:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)          /*!< ITM TCR
 676:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 677:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                          /*!< ITM TCR
 678:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                /*!< ITM TCR
 679:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 680:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                          /*!< ITM TCR
 681:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)             /*!< ITM TCR
 682:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 683:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                          /*!< ITM TCR
 684:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                 /*!< ITM TCR
 685:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 686:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TXENA_Pos                   3                                          /*!< ITM TCR
 687:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TXENA_Msk                  (1UL << ITM_TCR_TXENA_Pos)                  /*!< ITM TCR
 688:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 689:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                          /*!< ITM TCR
 690:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                /*!< ITM TCR
 691:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 692:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                          /*!< ITM TCR
 693:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                  /*!< ITM TCR
 694:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 695:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                          /*!< ITM TCR
 696:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                 /*!< ITM TCR
 697:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 698:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 699:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 700:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 701:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 702:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 703:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 704:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 705:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 706:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 707:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 708:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 709:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 710:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 711:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 712:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 713:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 714:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 715:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 716:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 717:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 718:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 719:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 720:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 721:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 722:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[1];
 723:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 724:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 725:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 726:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED1[1];
 727:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 728:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 729:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 730:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED2[1];
 731:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 732:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 733:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 734:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } DWT_Type;
 735:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 736:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Control Register Definitions */
 737:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 738:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 739:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 740:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 741:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 742:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 743:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 744:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 745:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 746:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 747:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 748:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 749:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 750:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 751:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 752:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 753:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 754:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 755:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 756:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 757:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 758:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 759:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 760:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 761:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 762:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 763:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 764:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 765:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 766:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 767:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 768:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 769:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 770:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 771:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 772:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 773:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 774:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 775:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 776:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 777:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 778:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 779:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 780:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 781:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 782:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 783:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 784:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 785:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 786:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 787:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 788:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 789:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL << DWT_CTRL_CYCCNTENA_Pos)           /*!< DWT CTR
 790:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 791:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 792:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 793:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL << DWT_CPICNT_CPICNT_Pos)           /*!< DWT CPI
 794:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 795:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 796:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 797:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL << DWT_EXCCNT_EXCCNT_Pos)           /*!< DWT EXC
 798:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 799:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 800:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 801:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL << DWT_SLEEPCNT_SLEEPCNT_Pos)       /*!< DWT SLE
 802:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 803:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 804:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 805:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL << DWT_LSUCNT_LSUCNT_Pos)           /*!< DWT LSU
 806:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 807:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 808:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 809:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL << DWT_FOLDCNT_FOLDCNT_Pos)         /*!< DWT FOL
 810:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 811:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 812:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 813:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL << DWT_MASK_MASK_Pos)               /*!< DWT MAS
 814:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 815:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 816:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 817:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 818:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 819:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 820:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 821:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 822:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 823:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 824:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 825:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 826:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 827:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 828:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 829:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 830:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 831:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 832:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 833:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 834:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 835:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 836:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 837:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 838:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 839:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 840:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 841:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL << DWT_FUNCTION_FUNCTION_Pos)        /*!< DWT FUN
 842:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 843:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 844:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 845:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 846:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 847:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 848:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 849:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 850:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 851:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 852:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 853:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 854:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 855:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 856:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 857:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 858:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[2];
 859:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 860:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED1[55];
 861:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 862:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED2[131];
 863:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 864:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 865:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 866:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED3[759];
 867:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 868:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 869:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 870:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED4[1];
 871:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 872:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
 873:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 874:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED5[39];
 875:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 876:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
 877:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED7[8];
 878:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
 879:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 880:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } TPI_Type;
 881:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 882:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 883:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
 884:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL << TPI_ACPR_PRESCALER_Pos)        /*!< TPI ACP
 885:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 886:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
 887:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
 888:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL << TPI_SPPR_TXMODE_Pos)              /*!< TPI SPP
 889:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 890:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
 891:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
 892:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 893:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 894:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
 895:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 896:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 897:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
 898:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 899:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 900:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
 901:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL << TPI_FFSR_FlInProg_Pos)            /*!< TPI FFS
 902:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 903:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
 904:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
 905:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 906:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 907:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
 908:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
 909:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 910:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
 911:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
 912:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL << TPI_TRIGGER_TRIGGER_Pos)          /*!< TPI TRI
 913:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 914:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
 915:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 916:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
 917:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 918:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 919:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
 920:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 921:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 922:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
 923:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 924:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 925:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
 926:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 927:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
 928:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
 929:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 930:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
 931:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
 932:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 933:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
 934:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL << TPI_FIFO0_ETM0_Pos)              /*!< TPI FIF
 935:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 936:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
 937:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
 938:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL << TPI_ITATBCTR2_ATREADY_Pos)        /*!< TPI ITA
 939:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 940:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
 941:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 942:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
 943:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 944:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 945:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
 946:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 947:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 948:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
 949:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 950:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 951:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
 952:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 953:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
 954:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
 955:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 956:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
 957:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
 958:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 959:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
 960:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL << TPI_FIFO1_ITM0_Pos)              /*!< TPI FIF
 961:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 962:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
 963:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
 964:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL << TPI_ITATBCTR0_ATREADY_Pos)        /*!< TPI ITA
 965:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 966:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
 967:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
 968:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL << TPI_ITCTRL_Mode_Pos)              /*!< TPI ITC
 969:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 970:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI DEVID Register Definitions */
 971:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
 972:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
 973:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 974:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
 975:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
 976:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 977:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
 978:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
 979:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 980:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
 981:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
 982:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 983:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
 984:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
 985:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 986:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
 987:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL << TPI_DEVID_NrTraceInput_Pos)      /*!< TPI DEV
 988:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 989:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
 990:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
 991:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL << TPI_DEVTYPE_SubType_Pos)          /*!< TPI DEV
 992:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 993:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
 994:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
 995:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 996:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
 997:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 998:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 999:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1000:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1001:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1002:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1003:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
1004:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1005:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1006:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1007:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1008:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
1009:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1010:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1011:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1012:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1013:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1014:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1015:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1016:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1017:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1018:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1019:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1020:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1021:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } MPU_Type;
1022:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1023:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Type Register */
1024:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1025:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1026:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1027:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1028:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1029:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1030:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1031:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
1032:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1033:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Control Register */
1034:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1035:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1036:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1037:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1038:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1039:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1040:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1041:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
1042:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1043:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Region Number Register */
1044:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1045:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
1046:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1047:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Region Base Address Register */
1048:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1049:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1050:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1051:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1052:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1053:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1054:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1055:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
1056:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1057:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Region Attribute and Size Register */
1058:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1059:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1060:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1061:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1062:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1063:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1064:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1065:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1066:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1067:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1068:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
1069:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1070:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1071:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
1072:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1073:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1074:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1075:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1076:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1077:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1078:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
1079:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1080:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1081:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1082:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1083:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
1084:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1085:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[1];
1086:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1087:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1088:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1089:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1090:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1091:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } FPU_Type;
1092:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1093:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Floating-Point Context Control Register */
1094:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1095:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1096:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1097:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1098:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1099:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1100:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1101:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1102:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1103:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1104:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1105:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1106:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1107:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1108:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1109:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1110:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1111:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1112:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1113:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1114:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1115:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1116:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1117:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1118:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1119:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
1120:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1121:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Floating-Point Context Address Register */
1122:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1123:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1124:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1125:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Floating-Point Default Status Control Register */
1126:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1127:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1128:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1129:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1130:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1131:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1132:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1133:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1134:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1135:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1136:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1137:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1138:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Media and FP Feature Register 0 */
1139:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1140:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1141:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1142:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1143:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1144:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1145:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1146:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1147:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1148:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1149:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1150:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1151:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1152:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1153:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1154:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1155:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1156:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1157:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1158:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1159:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1160:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1161:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
1162:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1163:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Media and FP Feature Register 1 */
1164:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1165:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1166:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1167:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1168:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1169:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1170:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1171:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1172:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1173:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1174:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
1175:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1176:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1177:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
1178:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1179:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1180:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1181:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1182:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1183:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
1184:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1185:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1186:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1187:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1188:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
1189:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1190:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1191:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1192:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1193:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1194:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } CoreDebug_Type;
1195:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1196:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Debug Halting Control and Status Register */
1197:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1198:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1199:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1200:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1201:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1202:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1203:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1204:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1205:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1206:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1207:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1208:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1209:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1210:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1211:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1212:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1213:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1214:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1215:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1216:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1217:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1218:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1219:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1220:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1221:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1222:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1223:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1224:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1225:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1226:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1227:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1228:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1229:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1230:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1231:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
1232:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1233:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Debug Core Register Selector Register */
1234:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1235:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1236:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1237:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1238:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
1239:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1240:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1241:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1242:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1243:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1244:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1245:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1246:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1247:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1248:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1249:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1250:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1251:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1252:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1253:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1254:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1255:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1256:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1257:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1258:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1259:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1260:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1261:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1262:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1263:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1264:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1265:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1266:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1267:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1268:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1269:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1270:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1271:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1272:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1273:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1274:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1275:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1276:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1277:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1278:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
1279:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1280:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1281:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1282:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1283:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup    CMSIS_core_register
1284:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1285:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1286:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
1287:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1288:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1289:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1290:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1291:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1292:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1293:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1294:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1295:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1296:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1297:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1298:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1299:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1300:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1301:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1302:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1303:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1304:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1305:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1306:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1307:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1308:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1309:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1310:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1311:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
1312:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1313:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1314:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1315:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1316:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
1317:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1318:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} */
1319:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1320:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1321:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1322:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*******************************************************************************
1323:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *                Hardware Abstraction Layer
1324:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   Core Function Interface contains:
1325:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core NVIC Functions
1326:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core SysTick Functions
1327:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core Debug Functions
1328:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core Register Access Functions
1329:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  ******************************************************************************/
1330:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1331:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** */
1332:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1333:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1334:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1335:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1336:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1337:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1338:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1339:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     @{
1340:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1341:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1342:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Set Priority Grouping
1343:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1344:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1345:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1346:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   Only values from 0..7 are used.
1347:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   In case of a conflict between priority grouping and available
1348:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1349:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1350:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1351:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1352:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1353:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1354:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t reg_value;
1355:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
1356:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1357:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1358:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1359:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   reg_value  =  (reg_value                                 |
1360:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1361:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1362:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1363:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
1364:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1365:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1366:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Get Priority Grouping
1367:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1368:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1369:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1370:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1371:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1372:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1373:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1374:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1375:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
1376:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1377:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1378:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Enable External Interrupt
1379:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1380:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1381:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1382:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1383:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1384:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1385:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
  24              	 .loc 1 1385 0
  25              	 .cfi_startproc
  26              	 
  27              	 
  28              	 
  29 0000 80B4     	 push {r7}
  30              	.LCFI0:
  31              	 .cfi_def_cfa_offset 4
  32              	 .cfi_offset 7,-4
  33 0002 83B0     	 sub sp,sp,#12
  34              	.LCFI1:
  35              	 .cfi_def_cfa_offset 16
  36 0004 00AF     	 add r7,sp,#0
  37              	.LCFI2:
  38              	 .cfi_def_cfa_register 7
  39 0006 0346     	 mov r3,r0
  40 0008 FB71     	 strb r3,[r7,#7]
1386:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
1387:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32
  41              	 .loc 1 1387 0
  42 000a 0849     	 ldr r1,.L2
  43 000c 97F90730 	 ldrsb r3,[r7,#7]
  44 0010 5B09     	 lsrs r3,r3,#5
  45 0012 FA79     	 ldrb r2,[r7,#7]
  46 0014 02F01F02 	 and r2,r2,#31
  47 0018 0120     	 movs r0,#1
  48 001a 00FA02F2 	 lsl r2,r0,r2
  49 001e 41F82320 	 str r2,[r1,r3,lsl#2]
1388:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
  50              	 .loc 1 1388 0
  51 0022 00BF     	 nop
  52 0024 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0026 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 0028 80BC     	 pop {r7}
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 002a 7047     	 bx lr
  64              	.L3:
  65              	 .align 2
  66              	.L2:
  67 002c 00E100E0 	 .word -536813312
  68              	 .cfi_endproc
  69              	.LFE96:
  71              	 .align 1
  72              	 .syntax unified
  73              	 .thumb
  74              	 .thumb_func
  75              	 .fpu softvfp
  77              	NVIC_DisableIRQ:
  78              	.LFB97:
1389:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1390:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1391:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Disable External Interrupt
1392:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1393:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1394:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1395:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1396:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1397:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1398:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
  79              	 .loc 1 1398 0
  80              	 .cfi_startproc
  81              	 
  82              	 
  83              	 
  84 0030 80B4     	 push {r7}
  85              	.LCFI6:
  86              	 .cfi_def_cfa_offset 4
  87              	 .cfi_offset 7,-4
  88 0032 83B0     	 sub sp,sp,#12
  89              	.LCFI7:
  90              	 .cfi_def_cfa_offset 16
  91 0034 00AF     	 add r7,sp,#0
  92              	.LCFI8:
  93              	 .cfi_def_cfa_register 7
  94 0036 0346     	 mov r3,r0
  95 0038 FB71     	 strb r3,[r7,#7]
1399:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  96              	 .loc 1 1399 0
  97 003a 0949     	 ldr r1,.L5
  98 003c 97F90730 	 ldrsb r3,[r7,#7]
  99 0040 5B09     	 lsrs r3,r3,#5
 100 0042 FA79     	 ldrb r2,[r7,#7]
 101 0044 02F01F02 	 and r2,r2,#31
 102 0048 0120     	 movs r0,#1
 103 004a 00FA02F2 	 lsl r2,r0,r2
 104 004e 2033     	 adds r3,r3,#32
 105 0050 41F82320 	 str r2,[r1,r3,lsl#2]
1400:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
 106              	 .loc 1 1400 0
 107 0054 00BF     	 nop
 108 0056 0C37     	 adds r7,r7,#12
 109              	.LCFI9:
 110              	 .cfi_def_cfa_offset 4
 111 0058 BD46     	 mov sp,r7
 112              	.LCFI10:
 113              	 .cfi_def_cfa_register 13
 114              	 
 115 005a 80BC     	 pop {r7}
 116              	.LCFI11:
 117              	 .cfi_restore 7
 118              	 .cfi_def_cfa_offset 0
 119 005c 7047     	 bx lr
 120              	.L6:
 121 005e 00BF     	 .align 2
 122              	.L5:
 123 0060 00E100E0 	 .word -536813312
 124              	 .cfi_endproc
 125              	.LFE97:
 127              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
 128              	 .align 2
 131              	cpu_irq_critical_section_counter:
 132 0000 00000000 	 .space 4
 133              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
 136              	cpu_irq_prev_interrupt_state:
 137 0000 00       	 .space 1
 138              	 .text
 139              	 .align 1
 140              	 .syntax unified
 141              	 .thumb
 142              	 .thumb_func
 143              	 .fpu softvfp
 145              	cpu_irq_save:
 146              	.LFB112:
 147              	 .file 2 "../../../platform/common/utils/interrupt/interrupt_sam_nvic.h"
   1:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
   2:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \file
   3:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
   4:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Global interrupt management for SAM D20, SAM3 and SAM4 (NVIC based)
   5:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
   6:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Copyright (c) 2012-2013 Atmel Corporation. All rights reserved.
   7:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
   8:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \asf_license_start
   9:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  10:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \page License
  11:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  12:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  15:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  18:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  22:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  25:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  28:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  40:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \asf_license_stop
  41:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  42:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  43:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  44:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #ifndef UTILS_INTERRUPT_INTERRUPT_H
  45:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #define UTILS_INTERRUPT_INTERRUPT_H
  46:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  47:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #include <compiler.h>
  48:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #include <parts.h>
  49:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  50:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  51:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \weakgroup interrupt_group
  52:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  53:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * @{
  54:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  55:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  56:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  57:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \name Interrupt Service Routine definition
  58:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  59:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * @{
  60:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  61:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  62:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  63:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Define service routine
  64:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  65:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \note For NVIC devices the interrupt service routines are predefined to
  66:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *       add to vector table in binary generation, so there is no service
  67:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *       register at run time. The routine collections are in exceptions.h.
  68:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  69:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Usage:
  70:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \code
  71:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * ISR(foo_irq_handler)
  72:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * {
  73:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *      // Function definition
  74:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *      ...
  75:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * }
  76:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \endcode
  77:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  78:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \param func Name for the function.
  79:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  80:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define ISR(func)   \
  81:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	void func (void)
  82:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  83:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  84:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Initialize interrupt vectors
  85:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  86:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * For NVIC the interrupt vectors are put in vector table. So nothing
  87:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * to do to initialize them, except defined the vector function with
  88:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * right name.
  89:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  90:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * This must be called prior to \ref irq_register_handler.
  91:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  92:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define irq_initialize_vectors()   \
  93:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	do {                             \
  94:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	} while(0)
  95:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  96:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  97:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Register handler for interrupt
  98:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  99:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * For NVIC the interrupt vectors are put in vector table. So nothing
 100:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * to do to register them, except defined the vector function with
 101:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * right name.
 102:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
 103:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Usage:
 104:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \code
 105:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * irq_initialize_vectors();
 106:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * irq_register_handler(foo_irq_handler);
 107:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \endcode
 108:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
 109:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \note The function \a func must be defined with the \ref ISR macro.
 110:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \note The functions prototypes can be found in the device exception header
 111:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *       files (exceptions.h).
 112:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
 113:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define irq_register_handler(int_num, int_prio)                      \
 114:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	NVIC_ClearPendingIRQ(    (IRQn_Type)int_num);                      \
 115:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	NVIC_SetPriority(    (IRQn_Type)int_num, int_prio);                \
 116:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	NVIC_EnableIRQ(      (IRQn_Type)int_num);                          \
 117:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 118:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** //@}
 119:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 120:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define cpu_irq_enable()                     \
 121:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	do {                                       \
 122:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		g_interrupt_enabled = true;            \
 123:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__DMB();                               \
 124:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__enable_irq();                        \
 125:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	} while (0)
 126:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define cpu_irq_disable()                    \
 127:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	do {                                       \
 128:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__disable_irq();                       \
 129:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__DMB();                               \
 130:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		g_interrupt_enabled = false;           \
 131:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	} while (0)
 132:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 133:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** typedef uint32_t irqflags_t;
 134:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 135:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #if !defined(__DOXYGEN__)
 136:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** extern volatile bool g_interrupt_enabled;
 137:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #endif
 138:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 139:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #define cpu_irq_is_enabled()    (__get_PRIMASK() == 0)
 140:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 141:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static volatile uint32_t cpu_irq_critical_section_counter;
 142:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static volatile bool     cpu_irq_prev_interrupt_state;
 143:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 144:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static inline irqflags_t cpu_irq_save(void)
 145:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** {
 148              	 .loc 2 145 0
 149              	 .cfi_startproc
 150              	 
 151              	 
 152              	 
 153 0064 80B4     	 push {r7}
 154              	.LCFI12:
 155              	 .cfi_def_cfa_offset 4
 156              	 .cfi_offset 7,-4
 157 0066 83B0     	 sub sp,sp,#12
 158              	.LCFI13:
 159              	 .cfi_def_cfa_offset 16
 160 0068 00AF     	 add r7,sp,#0
 161              	.LCFI14:
 162              	 .cfi_def_cfa_register 7
 163              	.LBB160:
 164              	.LBB161:
 165              	 .file 3 "../../../platform/thirdparty/CMSIS/include/core_cmFunc.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @file     core_cmFunc.h
   3:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @brief    CMSIS Cortex-M Core Function Access Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @date     19. January 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * within development tools that are supporting such ARM based processors. 
  14:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  24:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #ifndef __CORE_CMFUNC_H
  25:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __CORE_CMFUNC_H
  26:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* ###########################  Core Function Access  ########################### */
  28:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \ingroup  CMSIS_Core_FunctionInterface   
  29:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  30:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   @{
  31:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  32:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  33:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  34:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* ARM armcc specific functions */
  35:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  36:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__ARMCC_VERSION < 400677)
  37:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  38:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
  39:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  40:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* intrinsic void __enable_irq();     */
  41:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* intrinsic void __disable_irq();    */
  42:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  43:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Control Register
  44:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  45:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the Control Register.
  46:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  47:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Control Register value
  48:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  49:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_CONTROL(void)
  50:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  51:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  52:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regControl);
  53:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  54:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  55:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  56:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Control Register
  57:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  58:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function writes the given value to the Control Register.
  59:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  60:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    control  Control Register value to set
  61:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  62:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_CONTROL(uint32_t control)
  63:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  64:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  65:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regControl = control;
  66:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  67:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  68:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  69:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get IPSR Register
  70:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  71:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the IPSR Register.
  72:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  73:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               IPSR Register value
  74:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  75:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_IPSR(void)
  76:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  77:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regIPSR          __ASM("ipsr");
  78:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regIPSR);
  79:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  80:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  81:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  82:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get APSR Register
  83:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  84:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the APSR Register.
  85:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  86:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               APSR Register value
  87:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  88:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_APSR(void)
  89:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  90:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regAPSR          __ASM("apsr");
  91:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regAPSR);
  92:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  93:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  94:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  95:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get xPSR Register
  96:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  97:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the xPSR Register.
  98:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  99:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               xPSR Register value
 100:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 101:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_xPSR(void)
 102:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 103:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regXPSR          __ASM("xpsr");
 104:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regXPSR);
 105:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 106:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 107:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 108:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 109:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 110:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 111:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 112:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               PSP Register value
 113:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 114:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PSP(void)
 115:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 116:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 117:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regProcessStackPointer);
 118:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 119:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 120:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 121:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 122:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 123:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 124:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 125:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 126:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 127:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 128:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 129:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 130:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regProcessStackPointer = topOfProcStack;
 131:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 132:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 133:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 134:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 135:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 136:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 137:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 138:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               MSP Register value
 139:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 140:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_MSP(void)
 141:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 142:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 143:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regMainStackPointer);
 144:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 145:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 146:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 147:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 148:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 149:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 150:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 151:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 152:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 153:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 154:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 155:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 156:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regMainStackPointer = topOfMainStack;
 157:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 158:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 159:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 160:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Priority Mask
 161:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 162:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 163:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 164:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Priority Mask value
 165:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 166:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PRIMASK(void)
 167:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 168:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 169:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regPriMask);
 170:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 171:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 172:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 173:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Priority Mask
 174:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 175:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Priority Mask Register.
 176:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 177:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    priMask  Priority Mask
 178:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 179:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 180:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 181:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 182:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regPriMask = (priMask);
 183:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 184:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 185:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 186:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if       (__CORTEX_M >= 0x03)
 187:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 188:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Enable FIQ
 189:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 190:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function enables FIQ interrupts by clearing the F-bit in the CPSR.
 191:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     Can only be executed in Privileged modes.
 192:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 193:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __enable_fault_irq                __enable_fiq
 194:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 195:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 196:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Disable FIQ
 197:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 198:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function disables FIQ interrupts by setting the F-bit in the CPSR.
 199:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     Can only be executed in Privileged modes.
 200:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 201:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __disable_fault_irq               __disable_fiq
 202:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 203:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Base Priority
 205:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 206:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Base Priority register.
 207:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 208:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Base Priority register value
 209:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 210:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t  __get_BASEPRI(void)
 211:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 212:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 213:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regBasePri);
 214:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 215:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 216:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 217:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Base Priority
 218:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 219:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Base Priority register.
 220:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 221:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    basePri  Base Priority value to set
 222:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 223:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 224:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 225:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 226:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regBasePri = (basePri & 0xff);
 227:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 228:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 229:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 230:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Fault Mask
 231:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 232:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Fault Mask register.
 233:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 234:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Fault Mask register value
 235:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 236:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 237:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 238:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 239:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regFaultMask);
 240:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 241:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 242:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 243:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Fault Mask
 244:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 245:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Fault Mask register.
 246:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 247:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    faultMask  Fault Mask value to set
 248:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 249:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 250:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 251:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 252:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regFaultMask = (faultMask & (uint32_t)1);
 253:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 254:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 255:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif /* (__CORTEX_M >= 0x03) */
 256:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 257:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 258:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if       (__CORTEX_M == 0x04)
 259:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 260:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get FPSCR
 261:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 262:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Floating Point Status/Control register.
 263:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 264:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Floating Point Status/Control register value
 265:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 266:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FPSCR(void)
 267:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 268:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 269:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 270:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regfpscr);
 271:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #else
 272:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****    return(0);
 273:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
 274:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 275:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 276:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 277:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set FPSCR
 278:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 279:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Floating Point Status/Control register.
 280:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 281:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    fpscr  Floating Point Status/Control value to set
 282:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 283:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 284:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 285:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 286:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 287:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regfpscr = (fpscr);
 288:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
 289:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 290:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 291:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif /* (__CORTEX_M == 0x04) */
 292:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 293:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 294:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 295:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* IAR iccarm specific functions */
 296:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 297:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #include <cmsis_iar.h>
 298:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 299:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 300:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 301:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* TI CCS specific functions */
 302:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 303:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #include <cmsis_ccs.h>
 304:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 306:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 307:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* GNU gcc specific functions */
 308:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 309:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Enable IRQ Interrupts
 310:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 311:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   This function enables IRQ interrupts by clearing the I-bit in the CPSR.
 312:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   Can only be executed in Privileged modes.
 313:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 314:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
 315:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 316:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("cpsie i");
 317:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 318:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 319:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 320:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Disable IRQ Interrupts
 321:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 322:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   This function disables IRQ interrupts by setting the I-bit in the CPSR.
 323:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   Can only be executed in Privileged modes.
 324:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 325:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 326:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 327:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("cpsid i");
 328:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 329:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 330:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 331:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Control Register
 332:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 333:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the Control Register.
 334:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 335:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Control Register value
 336:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 337:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
 338:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 339:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 340:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 341:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 342:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 343:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 344:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 345:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 346:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Control Register
 347:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 348:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function writes the given value to the Control Register.
 349:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 350:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    control  Control Register value to set
 351:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 352:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 353:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 354:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) );
 355:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 356:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 357:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 358:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get IPSR Register
 359:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 360:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the IPSR Register.
 361:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 362:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               IPSR Register value
 363:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 364:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 365:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 366:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 367:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 368:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 369:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 370:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 371:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 372:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 373:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get APSR Register
 374:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 375:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the APSR Register.
 376:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 377:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               APSR Register value
 378:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 379:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 380:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 381:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 382:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 383:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 384:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 385:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 386:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 387:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 388:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get xPSR Register
 389:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 390:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the xPSR Register.
 391:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 392:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               xPSR Register value
 393:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 394:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 395:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 396:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 397:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 398:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 399:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 400:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 401:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 402:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 403:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 404:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 405:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 406:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 407:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               PSP Register value
 408:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 409:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 410:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 411:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t result;
 412:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 413:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 414:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 415:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 416:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 417:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 418:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 419:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 420:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 421:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 422:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 423:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 424:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 425:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 426:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) );
 427:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 428:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 429:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 430:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 431:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 432:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 433:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 434:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               MSP Register value
 435:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 436:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 437:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 438:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t result;
 439:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 440:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 441:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 442:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 443:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 444:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 445:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 446:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 447:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 448:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 449:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 450:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 451:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 452:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 453:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) );
 454:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 455:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 456:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 457:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Priority Mask
 458:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 459:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 460:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 461:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Priority Mask value
 462:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 463:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 464:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 465:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 466:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 467:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 166              	 .loc 3 467 0
 167              	 .syntax unified
 168              	
 169 006a EFF31083 	 MRS r3,primask
 170              	
 171              	 .thumb
 172              	 .syntax unified
 173 006e 3B60     	 str r3,[r7]
 468:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 174              	 .loc 3 468 0
 175 0070 3B68     	 ldr r3,[r7]
 176              	.LBE161:
 177              	.LBE160:
 146:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	irqflags_t flags = cpu_irq_is_enabled();
 178              	 .loc 2 146 0
 179 0072 002B     	 cmp r3,#0
 180 0074 0CBF     	 ite eq
 181 0076 0123     	 moveq r3,#1
 182 0078 0023     	 movne r3,#0
 183 007a DBB2     	 uxtb r3,r3
 184 007c 7B60     	 str r3,[r7,#4]
 185              	.LBB162:
 186              	.LBB163:
 327:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 187              	 .loc 3 327 0
 188              	 .syntax unified
 189              	
 190 007e 72B6     	 cpsid i
 191              	
 192              	 .thumb
 193              	 .syntax unified
 194              	.LBE163:
 195              	.LBE162:
 196              	.LBB164:
 197              	.LBB165:
 198              	 .file 4 "../../../platform/thirdparty/CMSIS/include/core_cmInstr.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @date     07. February 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors.
  14:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  24:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  28:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   Access to dedicated instructions
  31:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   @{
  32:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** */
  33:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  34:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* ARM armcc specific functions */
  36:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  37:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #endif
  40:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  41:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  42:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  No Operation
  43:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  44:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  46:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __NOP                             __nop
  47:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  48:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  49:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  51:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     until one of a number of events occurs.
  53:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  54:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __WFI                             __wfi
  55:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  56:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  57:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Event
  58:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  59:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  62:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __WFE                             __wfe
  63:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  64:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  65:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Send Event
  66:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  67:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  69:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __SEV                             __sev
  70:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  71:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  72:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  74:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  75:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  76:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  78:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  80:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  81:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  83:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  84:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  86:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  88:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  89:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  91:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
  92:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  94:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  96:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  97:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  99:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 101:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 103:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 104:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __REV                             __rev
 105:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 106:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 107:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 109:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 111:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 113:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 114:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 115:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 116:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   rev16 r0, r0
 117:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   bx lr
 118:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 119:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 120:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 121:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 123:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 125:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 127:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 128:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 129:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 130:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   revsh r0, r0
 131:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   bx lr
 132:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 133:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 134:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 135:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 136:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 137:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 138:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 139:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 140:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 141:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Rotated value
 142:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 143:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __ROR                             __ror
 144:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 145:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 146:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 147:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 148:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 149:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 150:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 151:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 152:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 153:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 154:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 155:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __RBIT                            __rbit
 156:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 157:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 158:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 159:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 160:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 161:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 162:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 163:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 164:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 165:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 166:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 167:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 168:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 169:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 170:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 171:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 172:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 173:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 174:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 175:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 176:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 177:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 178:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 179:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 180:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 181:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 182:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 183:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 184:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 185:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 186:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 187:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 188:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 189:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 190:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 191:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 192:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 193:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 194:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 195:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 196:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 197:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 198:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 199:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 200:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 201:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 202:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 203:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 205:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 206:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 207:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 208:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 209:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 210:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 211:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 212:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 213:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 214:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 215:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 216:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 217:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 218:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 219:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 220:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 221:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 222:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 223:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 224:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 225:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 226:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 227:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 228:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 229:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CLREX                           __clrex
 230:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 231:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 232:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Signed Saturate
 233:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 234:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function saturates a signed value.
 235:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 236:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 238:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             Saturated value
 239:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 240:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __SSAT                            __ssat
 241:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 242:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 243:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 244:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 245:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function saturates an unsigned value.
 246:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 247:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 248:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 249:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             Saturated value
 250:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 251:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __USAT                            __usat
 252:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 253:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 254:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Count leading zeros
 255:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 256:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 257:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 258:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 259:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             number of leading zeros in value
 260:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 261:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CLZ                             __clz
 262:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 263:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 264:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 265:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 266:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 267:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 268:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* IAR iccarm specific functions */
 269:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 270:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #include <cmsis_iar.h>
 271:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 272:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 273:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 274:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* TI CCS specific functions */
 275:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 276:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #include <cmsis_ccs.h>
 277:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 278:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 279:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 280:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* GNU gcc specific functions */
 281:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 282:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  No Operation
 283:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 284:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 285:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 286:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 287:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 288:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("nop");
 289:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 290:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 291:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 292:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 293:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 294:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 295:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     until one of a number of events occurs.
 296:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 297:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
 298:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 299:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("wfi");
 300:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 301:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 302:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 303:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Event
 304:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 306:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 307:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 308:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFE(void)
 309:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 310:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("wfe");
 311:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 312:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 313:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 314:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Send Event
 315:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 316:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 317:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 318:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __SEV(void)
 319:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 320:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("sev");
 321:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 322:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 323:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 324:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 325:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 326:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 327:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 328:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     memory, after the instruction has been completed.
 329:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 330:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __ISB(void)
 331:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 332:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("isb");
 333:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 334:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 335:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 336:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 337:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 338:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 339:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 340:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 341:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
 342:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 343:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("dsb");
 344:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 345:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 346:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 347:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 348:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 349:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 350:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 351:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 352:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
 353:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 354:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("dmb");
 199              	 .loc 4 354 0
 200              	 .syntax unified
 201              	
 202 0080 BFF35F8F 	 dmb
 203              	
 204              	 .thumb
 205              	 .syntax unified
 206              	.LBE165:
 207              	.LBE164:
 147:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	cpu_irq_disable();
 208              	 .loc 2 147 0
 209 0084 044B     	 ldr r3,.L10
 210 0086 0022     	 movs r2,#0
 211 0088 1A70     	 strb r2,[r3]
 148:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	return flags;
 212              	 .loc 2 148 0
 213 008a 7B68     	 ldr r3,[r7,#4]
 149:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** }
 214              	 .loc 2 149 0
 215 008c 1846     	 mov r0,r3
 216 008e 0C37     	 adds r7,r7,#12
 217              	.LCFI15:
 218              	 .cfi_def_cfa_offset 4
 219 0090 BD46     	 mov sp,r7
 220              	.LCFI16:
 221              	 .cfi_def_cfa_register 13
 222              	 
 223 0092 80BC     	 pop {r7}
 224              	.LCFI17:
 225              	 .cfi_restore 7
 226              	 .cfi_def_cfa_offset 0
 227 0094 7047     	 bx lr
 228              	.L11:
 229 0096 00BF     	 .align 2
 230              	.L10:
 231 0098 00000000 	 .word g_interrupt_enabled
 232              	 .cfi_endproc
 233              	.LFE112:
 235              	 .align 1
 236              	 .syntax unified
 237              	 .thumb
 238              	 .thumb_func
 239              	 .fpu softvfp
 241              	cpu_irq_is_enabled_flags:
 242              	.LFB113:
 150:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 151:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static inline bool cpu_irq_is_enabled_flags(irqflags_t flags)
 152:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** {
 243              	 .loc 2 152 0
 244              	 .cfi_startproc
 245              	 
 246              	 
 247              	 
 248 009c 80B4     	 push {r7}
 249              	.LCFI18:
 250              	 .cfi_def_cfa_offset 4
 251              	 .cfi_offset 7,-4
 252 009e 83B0     	 sub sp,sp,#12
 253              	.LCFI19:
 254              	 .cfi_def_cfa_offset 16
 255 00a0 00AF     	 add r7,sp,#0
 256              	.LCFI20:
 257              	 .cfi_def_cfa_register 7
 258 00a2 7860     	 str r0,[r7,#4]
 153:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	return (flags);
 259              	 .loc 2 153 0
 260 00a4 7B68     	 ldr r3,[r7,#4]
 261 00a6 002B     	 cmp r3,#0
 262 00a8 14BF     	 ite ne
 263 00aa 0123     	 movne r3,#1
 264 00ac 0023     	 moveq r3,#0
 265 00ae DBB2     	 uxtb r3,r3
 154:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** }
 266              	 .loc 2 154 0
 267 00b0 1846     	 mov r0,r3
 268 00b2 0C37     	 adds r7,r7,#12
 269              	.LCFI21:
 270              	 .cfi_def_cfa_offset 4
 271 00b4 BD46     	 mov sp,r7
 272              	.LCFI22:
 273              	 .cfi_def_cfa_register 13
 274              	 
 275 00b6 80BC     	 pop {r7}
 276              	.LCFI23:
 277              	 .cfi_restore 7
 278              	 .cfi_def_cfa_offset 0
 279 00b8 7047     	 bx lr
 280              	 .cfi_endproc
 281              	.LFE113:
 283              	 .align 1
 284              	 .syntax unified
 285              	 .thumb
 286              	 .thumb_func
 287              	 .fpu softvfp
 289              	cpu_irq_restore:
 290              	.LFB114:
 155:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 156:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static inline void cpu_irq_restore(irqflags_t flags)
 157:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** {
 291              	 .loc 2 157 0
 292              	 .cfi_startproc
 293              	 
 294              	 
 295 00ba 80B5     	 push {r7,lr}
 296              	.LCFI24:
 297              	 .cfi_def_cfa_offset 8
 298              	 .cfi_offset 7,-8
 299              	 .cfi_offset 14,-4
 300 00bc 82B0     	 sub sp,sp,#8
 301              	.LCFI25:
 302              	 .cfi_def_cfa_offset 16
 303 00be 00AF     	 add r7,sp,#0
 304              	.LCFI26:
 305              	 .cfi_def_cfa_register 7
 306 00c0 7860     	 str r0,[r7,#4]
 158:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	if (cpu_irq_is_enabled_flags(flags))
 307              	 .loc 2 158 0
 308 00c2 7868     	 ldr r0,[r7,#4]
 309 00c4 FFF7EAFF 	 bl cpu_irq_is_enabled_flags
 310 00c8 0346     	 mov r3,r0
 311 00ca 002B     	 cmp r3,#0
 312 00cc 05D0     	 beq .L16
 159:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		cpu_irq_enable();
 313              	 .loc 2 159 0
 314 00ce 054B     	 ldr r3,.L17
 315 00d0 0122     	 movs r2,#1
 316 00d2 1A70     	 strb r2,[r3]
 317              	.LBB166:
 318              	.LBB167:
 319              	 .loc 4 354 0
 320              	 .syntax unified
 321              	
 322 00d4 BFF35F8F 	 dmb
 323              	
 324              	 .thumb
 325              	 .syntax unified
 326              	.LBE167:
 327              	.LBE166:
 328              	.LBB168:
 329              	.LBB169:
 316:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 330              	 .loc 3 316 0
 331              	 .syntax unified
 332              	
 333 00d8 62B6     	 cpsie i
 334              	
 335              	 .thumb
 336              	 .syntax unified
 337              	.L16:
 338              	.LBE169:
 339              	.LBE168:
 160:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** }
 340              	 .loc 2 160 0
 341 00da 00BF     	 nop
 342 00dc 0837     	 adds r7,r7,#8
 343              	.LCFI27:
 344              	 .cfi_def_cfa_offset 8
 345 00de BD46     	 mov sp,r7
 346              	.LCFI28:
 347              	 .cfi_def_cfa_register 13
 348              	 
 349 00e0 80BD     	 pop {r7,pc}
 350              	.L18:
 351 00e2 00BF     	 .align 2
 352              	.L17:
 353 00e4 00000000 	 .word g_interrupt_enabled
 354              	 .cfi_endproc
 355              	.LFE114:
 357              	 .comm n,1,1
 358              	 .section .bss.tTS,"aw",%nobits
 359              	 .align 2
 362              	tTS:
 363 0000 00000000 	 .space 4
 364              	 .text
 365              	 .align 1
 366              	 .syntax unified
 367              	 .thumb
 368              	 .thumb_func
 369              	 .fpu softvfp
 371              	spi_enable:
 372              	.LFB182:
 373              	 .file 5 "../../../platform/sam/drivers/spi/spi.h"
   1:../../../platform/sam/drivers/spi/spi.h **** /**
   2:../../../platform/sam/drivers/spi/spi.h ****  * \file
   3:../../../platform/sam/drivers/spi/spi.h ****  *
   4:../../../platform/sam/drivers/spi/spi.h ****  * \brief Serial Peripheral Interface (SPI) driver for SAM.
   5:../../../platform/sam/drivers/spi/spi.h ****  *
   6:../../../platform/sam/drivers/spi/spi.h ****  * Copyright (c) 2011-2014 Atmel Corporation. All rights reserved.
   7:../../../platform/sam/drivers/spi/spi.h ****  *
   8:../../../platform/sam/drivers/spi/spi.h ****  * \asf_license_start
   9:../../../platform/sam/drivers/spi/spi.h ****  *
  10:../../../platform/sam/drivers/spi/spi.h ****  * \page License
  11:../../../platform/sam/drivers/spi/spi.h ****  *
  12:../../../platform/sam/drivers/spi/spi.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/sam/drivers/spi/spi.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/sam/drivers/spi/spi.h ****  *
  15:../../../platform/sam/drivers/spi/spi.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/sam/drivers/spi/spi.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/sam/drivers/spi/spi.h ****  *
  18:../../../platform/sam/drivers/spi/spi.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/sam/drivers/spi/spi.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/sam/drivers/spi/spi.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/sam/drivers/spi/spi.h ****  *
  22:../../../platform/sam/drivers/spi/spi.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/sam/drivers/spi/spi.h ****  *    from this software without specific prior written permission.
  24:../../../platform/sam/drivers/spi/spi.h ****  *
  25:../../../platform/sam/drivers/spi/spi.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/sam/drivers/spi/spi.h ****  *    Atmel microcontroller product.
  27:../../../platform/sam/drivers/spi/spi.h ****  *
  28:../../../platform/sam/drivers/spi/spi.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/sam/drivers/spi/spi.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/sam/drivers/spi/spi.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/sam/drivers/spi/spi.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/sam/drivers/spi/spi.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/sam/drivers/spi/spi.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/sam/drivers/spi/spi.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/sam/drivers/spi/spi.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/sam/drivers/spi/spi.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/sam/drivers/spi/spi.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/sam/drivers/spi/spi.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/sam/drivers/spi/spi.h ****  *
  40:../../../platform/sam/drivers/spi/spi.h ****  * \asf_license_stop
  41:../../../platform/sam/drivers/spi/spi.h ****  *
  42:../../../platform/sam/drivers/spi/spi.h ****  */
  43:../../../platform/sam/drivers/spi/spi.h **** 
  44:../../../platform/sam/drivers/spi/spi.h **** #ifndef SPI_H_INCLUDED
  45:../../../platform/sam/drivers/spi/spi.h **** #define SPI_H_INCLUDED
  46:../../../platform/sam/drivers/spi/spi.h **** 
  47:../../../platform/sam/drivers/spi/spi.h **** #include "compiler.h"
  48:../../../platform/sam/drivers/spi/spi.h **** 
  49:../../../platform/sam/drivers/spi/spi.h **** /// @cond 0
  50:../../../platform/sam/drivers/spi/spi.h **** /**INDENT-OFF**/
  51:../../../platform/sam/drivers/spi/spi.h **** #ifdef __cplusplus
  52:../../../platform/sam/drivers/spi/spi.h **** extern "C" {
  53:../../../platform/sam/drivers/spi/spi.h **** #endif
  54:../../../platform/sam/drivers/spi/spi.h **** /**INDENT-ON**/
  55:../../../platform/sam/drivers/spi/spi.h **** /// @endcond
  56:../../../platform/sam/drivers/spi/spi.h **** 
  57:../../../platform/sam/drivers/spi/spi.h **** /** Time-out value (number of attempts). */
  58:../../../platform/sam/drivers/spi/spi.h **** #define SPI_TIMEOUT       15000
  59:../../../platform/sam/drivers/spi/spi.h **** 
  60:../../../platform/sam/drivers/spi/spi.h **** /** Status codes used by the SPI driver. */
  61:../../../platform/sam/drivers/spi/spi.h **** typedef enum
  62:../../../platform/sam/drivers/spi/spi.h **** {
  63:../../../platform/sam/drivers/spi/spi.h **** 	SPI_ERROR = -1,
  64:../../../platform/sam/drivers/spi/spi.h **** 	SPI_OK = 0,
  65:../../../platform/sam/drivers/spi/spi.h **** 	SPI_ERROR_TIMEOUT = 1,
  66:../../../platform/sam/drivers/spi/spi.h **** 	SPI_ERROR_ARGUMENT,
  67:../../../platform/sam/drivers/spi/spi.h **** 	SPI_ERROR_OVERRUN,
  68:../../../platform/sam/drivers/spi/spi.h **** 	SPI_ERROR_MODE_FAULT,
  69:../../../platform/sam/drivers/spi/spi.h **** 	SPI_ERROR_OVERRUN_AND_MODE_FAULT
  70:../../../platform/sam/drivers/spi/spi.h **** } spi_status_t;
  71:../../../platform/sam/drivers/spi/spi.h **** 
  72:../../../platform/sam/drivers/spi/spi.h **** /** SPI Chip Select behavior modes while transferring. */
  73:../../../platform/sam/drivers/spi/spi.h **** typedef enum spi_cs_behavior {
  74:../../../platform/sam/drivers/spi/spi.h **** 	/** CS does not rise until a new transfer is requested on different chip select. */
  75:../../../platform/sam/drivers/spi/spi.h **** 	SPI_CS_KEEP_LOW = SPI_CSR_CSAAT,
  76:../../../platform/sam/drivers/spi/spi.h **** 	/** CS rises if there is no more data to transfer. */
  77:../../../platform/sam/drivers/spi/spi.h **** 	SPI_CS_RISE_NO_TX = 0,
  78:../../../platform/sam/drivers/spi/spi.h **** 	/** CS is de-asserted systematically during a time DLYBCS. */
  79:../../../platform/sam/drivers/spi/spi.h **** 	SPI_CS_RISE_FORCED = SPI_CSR_CSNAAT
  80:../../../platform/sam/drivers/spi/spi.h **** } spi_cs_behavior_t;
  81:../../../platform/sam/drivers/spi/spi.h **** 
  82:../../../platform/sam/drivers/spi/spi.h **** /**
  83:../../../platform/sam/drivers/spi/spi.h ****  * \brief Generate Peripheral Chip Select Value from Chip Select ID
  84:../../../platform/sam/drivers/spi/spi.h ****  * \note When chip select n is working, PCS bit n is set to low level.
  85:../../../platform/sam/drivers/spi/spi.h ****  *
  86:../../../platform/sam/drivers/spi/spi.h ****  * \param chip_sel_id The chip select number used
  87:../../../platform/sam/drivers/spi/spi.h ****  */
  88:../../../platform/sam/drivers/spi/spi.h **** #define spi_get_pcs(chip_sel_id) ((~(1u<<(chip_sel_id)))&0xF)
  89:../../../platform/sam/drivers/spi/spi.h **** 
  90:../../../platform/sam/drivers/spi/spi.h **** /**
  91:../../../platform/sam/drivers/spi/spi.h ****  * \brief Reset SPI and set it to Slave mode.
  92:../../../platform/sam/drivers/spi/spi.h ****  *
  93:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
  94:../../../platform/sam/drivers/spi/spi.h ****  */
  95:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_reset(Spi *p_spi)
  96:../../../platform/sam/drivers/spi/spi.h **** {
  97:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_CR = SPI_CR_SWRST;
  98:../../../platform/sam/drivers/spi/spi.h **** }
  99:../../../platform/sam/drivers/spi/spi.h **** 
 100:../../../platform/sam/drivers/spi/spi.h **** /**
 101:../../../platform/sam/drivers/spi/spi.h ****  * \brief Enable SPI.
 102:../../../platform/sam/drivers/spi/spi.h ****  *
 103:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 104:../../../platform/sam/drivers/spi/spi.h ****  */
 105:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_enable(Spi *p_spi)
 106:../../../platform/sam/drivers/spi/spi.h **** {
 374              	 .loc 5 106 0
 375              	 .cfi_startproc
 376              	 
 377              	 
 378              	 
 379 00e8 80B4     	 push {r7}
 380              	.LCFI29:
 381              	 .cfi_def_cfa_offset 4
 382              	 .cfi_offset 7,-4
 383 00ea 83B0     	 sub sp,sp,#12
 384              	.LCFI30:
 385              	 .cfi_def_cfa_offset 16
 386 00ec 00AF     	 add r7,sp,#0
 387              	.LCFI31:
 388              	 .cfi_def_cfa_register 7
 389 00ee 7860     	 str r0,[r7,#4]
 107:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_CR = SPI_CR_SPIEN;
 390              	 .loc 5 107 0
 391 00f0 7B68     	 ldr r3,[r7,#4]
 392 00f2 0122     	 movs r2,#1
 393 00f4 1A60     	 str r2,[r3]
 108:../../../platform/sam/drivers/spi/spi.h **** }
 394              	 .loc 5 108 0
 395 00f6 00BF     	 nop
 396 00f8 0C37     	 adds r7,r7,#12
 397              	.LCFI32:
 398              	 .cfi_def_cfa_offset 4
 399 00fa BD46     	 mov sp,r7
 400              	.LCFI33:
 401              	 .cfi_def_cfa_register 13
 402              	 
 403 00fc 80BC     	 pop {r7}
 404              	.LCFI34:
 405              	 .cfi_restore 7
 406              	 .cfi_def_cfa_offset 0
 407 00fe 7047     	 bx lr
 408              	 .cfi_endproc
 409              	.LFE182:
 411              	 .align 1
 412              	 .syntax unified
 413              	 .thumb
 414              	 .thumb_func
 415              	 .fpu softvfp
 417              	spi_get:
 418              	.LFB205:
 109:../../../platform/sam/drivers/spi/spi.h **** 
 110:../../../platform/sam/drivers/spi/spi.h **** /**
 111:../../../platform/sam/drivers/spi/spi.h ****  * \brief Disable SPI.
 112:../../../platform/sam/drivers/spi/spi.h ****  *
 113:../../../platform/sam/drivers/spi/spi.h ****  * \note CS is de-asserted, which indicates that the last data is done, and user
 114:../../../platform/sam/drivers/spi/spi.h ****  * should check TX_EMPTY before disabling SPI.
 115:../../../platform/sam/drivers/spi/spi.h ****  *
 116:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 117:../../../platform/sam/drivers/spi/spi.h ****  */
 118:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_disable(Spi *p_spi)
 119:../../../platform/sam/drivers/spi/spi.h **** {
 120:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_CR = SPI_CR_SPIDIS;
 121:../../../platform/sam/drivers/spi/spi.h **** }
 122:../../../platform/sam/drivers/spi/spi.h **** 
 123:../../../platform/sam/drivers/spi/spi.h **** /**
 124:../../../platform/sam/drivers/spi/spi.h ****  * \brief Issue a LASTXFER command.
 125:../../../platform/sam/drivers/spi/spi.h ****  *  The next transfer is the last transfer and after that CS is de-asserted.
 126:../../../platform/sam/drivers/spi/spi.h ****  *
 127:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 128:../../../platform/sam/drivers/spi/spi.h ****  */
 129:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_set_lastxfer(Spi *p_spi)
 130:../../../platform/sam/drivers/spi/spi.h **** {
 131:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_CR = SPI_CR_LASTXFER;
 132:../../../platform/sam/drivers/spi/spi.h **** }
 133:../../../platform/sam/drivers/spi/spi.h **** 
 134:../../../platform/sam/drivers/spi/spi.h **** /**
 135:../../../platform/sam/drivers/spi/spi.h ****  * \brief Set SPI to Master mode.
 136:../../../platform/sam/drivers/spi/spi.h ****  *
 137:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 138:../../../platform/sam/drivers/spi/spi.h ****  */
 139:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_set_master_mode(Spi *p_spi)
 140:../../../platform/sam/drivers/spi/spi.h **** {
 141:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_MR |= SPI_MR_MSTR;
 142:../../../platform/sam/drivers/spi/spi.h **** }
 143:../../../platform/sam/drivers/spi/spi.h **** 
 144:../../../platform/sam/drivers/spi/spi.h **** /**
 145:../../../platform/sam/drivers/spi/spi.h ****  * \brief Set SPI to Slave mode.
 146:../../../platform/sam/drivers/spi/spi.h ****  *
 147:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 148:../../../platform/sam/drivers/spi/spi.h ****  */
 149:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_set_slave_mode(Spi *p_spi)
 150:../../../platform/sam/drivers/spi/spi.h **** {
 151:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_MR &= (~SPI_MR_MSTR);
 152:../../../platform/sam/drivers/spi/spi.h **** }
 153:../../../platform/sam/drivers/spi/spi.h **** 
 154:../../../platform/sam/drivers/spi/spi.h **** /**
 155:../../../platform/sam/drivers/spi/spi.h ****  * \brief Get SPI work mode.
 156:../../../platform/sam/drivers/spi/spi.h ****  *
 157:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 158:../../../platform/sam/drivers/spi/spi.h ****  *
 159:../../../platform/sam/drivers/spi/spi.h ****  * \return 1 for master mode, 0 for slave mode.
 160:../../../platform/sam/drivers/spi/spi.h ****  */
 161:../../../platform/sam/drivers/spi/spi.h **** static inline uint32_t spi_get_mode(Spi *p_spi)
 162:../../../platform/sam/drivers/spi/spi.h **** {
 163:../../../platform/sam/drivers/spi/spi.h **** 	if (p_spi->SPI_MR & SPI_MR_MSTR) {
 164:../../../platform/sam/drivers/spi/spi.h **** 		return 1;
 165:../../../platform/sam/drivers/spi/spi.h **** 	} else {
 166:../../../platform/sam/drivers/spi/spi.h **** 		return 0;
 167:../../../platform/sam/drivers/spi/spi.h **** 	}
 168:../../../platform/sam/drivers/spi/spi.h **** }
 169:../../../platform/sam/drivers/spi/spi.h **** 
 170:../../../platform/sam/drivers/spi/spi.h **** /**
 171:../../../platform/sam/drivers/spi/spi.h ****  * \brief Set Variable Peripheral Select.
 172:../../../platform/sam/drivers/spi/spi.h ****  * Peripheral Chip Select can be controlled by SPI_TDR.
 173:../../../platform/sam/drivers/spi/spi.h ****  *
 174:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 175:../../../platform/sam/drivers/spi/spi.h ****  */
 176:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_set_variable_peripheral_select(Spi *p_spi)
 177:../../../platform/sam/drivers/spi/spi.h **** {
 178:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_MR |= SPI_MR_PS;
 179:../../../platform/sam/drivers/spi/spi.h **** }
 180:../../../platform/sam/drivers/spi/spi.h **** 
 181:../../../platform/sam/drivers/spi/spi.h **** /**
 182:../../../platform/sam/drivers/spi/spi.h ****  * \brief Set Fixed Peripheral Select.
 183:../../../platform/sam/drivers/spi/spi.h ****  *  Peripheral Chip Select is controlled by SPI_MR.
 184:../../../platform/sam/drivers/spi/spi.h ****  *
 185:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 186:../../../platform/sam/drivers/spi/spi.h ****  */
 187:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_set_fixed_peripheral_select(Spi *p_spi)
 188:../../../platform/sam/drivers/spi/spi.h **** {
 189:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_MR &= (~SPI_MR_PS);
 190:../../../platform/sam/drivers/spi/spi.h **** }
 191:../../../platform/sam/drivers/spi/spi.h **** 
 192:../../../platform/sam/drivers/spi/spi.h **** /**
 193:../../../platform/sam/drivers/spi/spi.h ****  * \brief Get Peripheral Select mode.
 194:../../../platform/sam/drivers/spi/spi.h ****  *
 195:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 196:../../../platform/sam/drivers/spi/spi.h ****  *
 197:../../../platform/sam/drivers/spi/spi.h ****  * \return 1 for Variable mode, 0 for fixed mode.
 198:../../../platform/sam/drivers/spi/spi.h ****  */
 199:../../../platform/sam/drivers/spi/spi.h **** static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
 200:../../../platform/sam/drivers/spi/spi.h **** {
 201:../../../platform/sam/drivers/spi/spi.h **** 	if (p_spi->SPI_MR & SPI_MR_PS) {
 202:../../../platform/sam/drivers/spi/spi.h **** 		return 1;
 203:../../../platform/sam/drivers/spi/spi.h **** 	} else {
 204:../../../platform/sam/drivers/spi/spi.h **** 		return 0;
 205:../../../platform/sam/drivers/spi/spi.h **** 	}
 206:../../../platform/sam/drivers/spi/spi.h **** }
 207:../../../platform/sam/drivers/spi/spi.h **** 
 208:../../../platform/sam/drivers/spi/spi.h **** /**
 209:../../../platform/sam/drivers/spi/spi.h ****  * \brief Enable Peripheral Select Decode.
 210:../../../platform/sam/drivers/spi/spi.h ****  *
 211:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 212:../../../platform/sam/drivers/spi/spi.h ****  */
 213:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_enable_peripheral_select_decode(Spi *p_spi)
 214:../../../platform/sam/drivers/spi/spi.h **** {
 215:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_MR |= SPI_MR_PCSDEC;
 216:../../../platform/sam/drivers/spi/spi.h **** }
 217:../../../platform/sam/drivers/spi/spi.h **** 
 218:../../../platform/sam/drivers/spi/spi.h **** /**
 219:../../../platform/sam/drivers/spi/spi.h ****  * \brief Disable Peripheral Select Decode.
 220:../../../platform/sam/drivers/spi/spi.h ****  *
 221:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 222:../../../platform/sam/drivers/spi/spi.h ****  */
 223:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_disable_peripheral_select_decode(Spi *p_spi)
 224:../../../platform/sam/drivers/spi/spi.h **** {
 225:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_MR &= (~SPI_MR_PCSDEC);
 226:../../../platform/sam/drivers/spi/spi.h **** }
 227:../../../platform/sam/drivers/spi/spi.h **** 
 228:../../../platform/sam/drivers/spi/spi.h **** /**
 229:../../../platform/sam/drivers/spi/spi.h ****  * \brief Get Peripheral Select Decode mode.
 230:../../../platform/sam/drivers/spi/spi.h ****  *
 231:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 232:../../../platform/sam/drivers/spi/spi.h ****  *
 233:../../../platform/sam/drivers/spi/spi.h ****  * \return 1 for decode mode, 0 for direct mode.
 234:../../../platform/sam/drivers/spi/spi.h ****  */
 235:../../../platform/sam/drivers/spi/spi.h **** static inline uint32_t spi_get_peripheral_select_decode_setting(Spi *p_spi)
 236:../../../platform/sam/drivers/spi/spi.h **** {
 237:../../../platform/sam/drivers/spi/spi.h **** 	if (p_spi->SPI_MR & SPI_MR_PCSDEC) {
 238:../../../platform/sam/drivers/spi/spi.h **** 		return 1;
 239:../../../platform/sam/drivers/spi/spi.h **** 	} else {
 240:../../../platform/sam/drivers/spi/spi.h **** 		return 0;
 241:../../../platform/sam/drivers/spi/spi.h **** 	}
 242:../../../platform/sam/drivers/spi/spi.h **** }
 243:../../../platform/sam/drivers/spi/spi.h **** 
 244:../../../platform/sam/drivers/spi/spi.h **** /**
 245:../../../platform/sam/drivers/spi/spi.h ****  * \brief Enable Mode Fault Detection.
 246:../../../platform/sam/drivers/spi/spi.h ****  *
 247:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 248:../../../platform/sam/drivers/spi/spi.h ****  */
 249:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_enable_mode_fault_detect(Spi *p_spi)
 250:../../../platform/sam/drivers/spi/spi.h **** {
 251:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_MR &= (~SPI_MR_MODFDIS);
 252:../../../platform/sam/drivers/spi/spi.h **** }
 253:../../../platform/sam/drivers/spi/spi.h **** 
 254:../../../platform/sam/drivers/spi/spi.h **** /**
 255:../../../platform/sam/drivers/spi/spi.h ****  * \brief Disable Mode Fault Detection.
 256:../../../platform/sam/drivers/spi/spi.h ****  *
 257:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 258:../../../platform/sam/drivers/spi/spi.h ****  */
 259:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_disable_mode_fault_detect(Spi *p_spi)
 260:../../../platform/sam/drivers/spi/spi.h **** {
 261:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_MR |= SPI_MR_MODFDIS;
 262:../../../platform/sam/drivers/spi/spi.h **** }
 263:../../../platform/sam/drivers/spi/spi.h **** 
 264:../../../platform/sam/drivers/spi/spi.h **** /**
 265:../../../platform/sam/drivers/spi/spi.h ****  * \brief Check if mode fault detection is enabled.
 266:../../../platform/sam/drivers/spi/spi.h ****  *
 267:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 268:../../../platform/sam/drivers/spi/spi.h ****  *
 269:../../../platform/sam/drivers/spi/spi.h ****  * \return 1 for disabled, 0 for enabled.
 270:../../../platform/sam/drivers/spi/spi.h ****  */
 271:../../../platform/sam/drivers/spi/spi.h **** static inline uint32_t spi_get_mode_fault_detect_setting(Spi *p_spi)
 272:../../../platform/sam/drivers/spi/spi.h **** {
 273:../../../platform/sam/drivers/spi/spi.h **** 	if (p_spi->SPI_MR & SPI_MR_MODFDIS) {
 274:../../../platform/sam/drivers/spi/spi.h **** 		return 1;
 275:../../../platform/sam/drivers/spi/spi.h **** 	} else {
 276:../../../platform/sam/drivers/spi/spi.h **** 		return 0;
 277:../../../platform/sam/drivers/spi/spi.h **** 	}
 278:../../../platform/sam/drivers/spi/spi.h **** }
 279:../../../platform/sam/drivers/spi/spi.h **** 
 280:../../../platform/sam/drivers/spi/spi.h **** /**
 281:../../../platform/sam/drivers/spi/spi.h ****  * \brief Enable waiting RX_EMPTY before transfer starts.
 282:../../../platform/sam/drivers/spi/spi.h ****  *
 283:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 284:../../../platform/sam/drivers/spi/spi.h ****  */
 285:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_enable_tx_on_rx_empty(Spi *p_spi)
 286:../../../platform/sam/drivers/spi/spi.h **** {
 287:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_MR |= SPI_MR_WDRBT;
 288:../../../platform/sam/drivers/spi/spi.h **** }
 289:../../../platform/sam/drivers/spi/spi.h **** 
 290:../../../platform/sam/drivers/spi/spi.h **** /**
 291:../../../platform/sam/drivers/spi/spi.h ****  * \brief Disable waiting RX_EMPTY before transfer starts.
 292:../../../platform/sam/drivers/spi/spi.h ****  *
 293:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 294:../../../platform/sam/drivers/spi/spi.h ****  */
 295:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_disable_tx_on_rx_empty(Spi *p_spi)
 296:../../../platform/sam/drivers/spi/spi.h **** {
 297:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_MR &= (~SPI_MR_WDRBT);
 298:../../../platform/sam/drivers/spi/spi.h **** }
 299:../../../platform/sam/drivers/spi/spi.h **** 
 300:../../../platform/sam/drivers/spi/spi.h **** /**
 301:../../../platform/sam/drivers/spi/spi.h ****  * \brief Check if SPI waits RX_EMPTY before transfer starts.
 302:../../../platform/sam/drivers/spi/spi.h ****  *
 303:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 304:../../../platform/sam/drivers/spi/spi.h ****  *
 305:../../../platform/sam/drivers/spi/spi.h ****  * \return 1 for SPI waits, 0 for no wait.
 306:../../../platform/sam/drivers/spi/spi.h ****  */
 307:../../../platform/sam/drivers/spi/spi.h **** static inline uint32_t spi_get_tx_on_rx_empty_setting(Spi *p_spi)
 308:../../../platform/sam/drivers/spi/spi.h **** {
 309:../../../platform/sam/drivers/spi/spi.h **** 	if (p_spi->SPI_MR & SPI_MR_WDRBT) {
 310:../../../platform/sam/drivers/spi/spi.h **** 		return 1;
 311:../../../platform/sam/drivers/spi/spi.h **** 	} else {
 312:../../../platform/sam/drivers/spi/spi.h **** 		return 0;
 313:../../../platform/sam/drivers/spi/spi.h **** 	}
 314:../../../platform/sam/drivers/spi/spi.h **** }
 315:../../../platform/sam/drivers/spi/spi.h **** 
 316:../../../platform/sam/drivers/spi/spi.h **** /**
 317:../../../platform/sam/drivers/spi/spi.h ****  * \brief Enable loopback mode.
 318:../../../platform/sam/drivers/spi/spi.h ****  *
 319:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 320:../../../platform/sam/drivers/spi/spi.h ****  */
 321:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_enable_loopback(Spi *p_spi)
 322:../../../platform/sam/drivers/spi/spi.h **** {
 323:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_MR |= SPI_MR_LLB;
 324:../../../platform/sam/drivers/spi/spi.h **** }
 325:../../../platform/sam/drivers/spi/spi.h **** 
 326:../../../platform/sam/drivers/spi/spi.h **** /**
 327:../../../platform/sam/drivers/spi/spi.h ****  * \brief Disable loopback mode.
 328:../../../platform/sam/drivers/spi/spi.h ****  *
 329:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 330:../../../platform/sam/drivers/spi/spi.h ****  */
 331:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_disable_loopback(Spi *p_spi)
 332:../../../platform/sam/drivers/spi/spi.h **** {
 333:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_MR &= (~SPI_MR_LLB);
 334:../../../platform/sam/drivers/spi/spi.h **** }
 335:../../../platform/sam/drivers/spi/spi.h **** 
 336:../../../platform/sam/drivers/spi/spi.h **** void spi_enable_clock(Spi *p_spi);
 337:../../../platform/sam/drivers/spi/spi.h **** void spi_disable_clock(Spi *p_spi);
 338:../../../platform/sam/drivers/spi/spi.h **** void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value);
 339:../../../platform/sam/drivers/spi/spi.h **** void spi_set_delay_between_chip_select(Spi *p_spi, uint32_t ul_delay);
 340:../../../platform/sam/drivers/spi/spi.h **** spi_status_t spi_read(Spi *p_spi, uint16_t *us_data, uint8_t *p_pcs);
 341:../../../platform/sam/drivers/spi/spi.h **** spi_status_t spi_write(Spi *p_spi, uint16_t us_data, uint8_t uc_pcs,
 342:../../../platform/sam/drivers/spi/spi.h **** 		uint8_t uc_last);
 343:../../../platform/sam/drivers/spi/spi.h **** 
 344:../../../platform/sam/drivers/spi/spi.h **** /**
 345:../../../platform/sam/drivers/spi/spi.h ****  * \brief Read status register.
 346:../../../platform/sam/drivers/spi/spi.h ****  *
 347:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 348:../../../platform/sam/drivers/spi/spi.h ****  *
 349:../../../platform/sam/drivers/spi/spi.h ****  * \return SPI status register value.
 350:../../../platform/sam/drivers/spi/spi.h ****  */
 351:../../../platform/sam/drivers/spi/spi.h **** static inline uint32_t spi_read_status(Spi *p_spi)
 352:../../../platform/sam/drivers/spi/spi.h **** {
 353:../../../platform/sam/drivers/spi/spi.h **** 	return p_spi->SPI_SR;
 354:../../../platform/sam/drivers/spi/spi.h **** }
 355:../../../platform/sam/drivers/spi/spi.h **** 
 356:../../../platform/sam/drivers/spi/spi.h **** /**
 357:../../../platform/sam/drivers/spi/spi.h ****  * \brief Test if the SPI is enabled.
 358:../../../platform/sam/drivers/spi/spi.h ****  *
 359:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 360:../../../platform/sam/drivers/spi/spi.h ****  *
 361:../../../platform/sam/drivers/spi/spi.h ****  * \return 1 if the SPI is enabled, otherwise 0.
 362:../../../platform/sam/drivers/spi/spi.h ****  */
 363:../../../platform/sam/drivers/spi/spi.h **** static inline uint32_t spi_is_enabled(Spi *p_spi)
 364:../../../platform/sam/drivers/spi/spi.h **** {
 365:../../../platform/sam/drivers/spi/spi.h **** 	if (p_spi->SPI_SR & SPI_SR_SPIENS) {
 366:../../../platform/sam/drivers/spi/spi.h **** 		return 1;
 367:../../../platform/sam/drivers/spi/spi.h **** 	} else {
 368:../../../platform/sam/drivers/spi/spi.h **** 		return 0;
 369:../../../platform/sam/drivers/spi/spi.h **** 	}
 370:../../../platform/sam/drivers/spi/spi.h **** }
 371:../../../platform/sam/drivers/spi/spi.h **** 
 372:../../../platform/sam/drivers/spi/spi.h **** /**
 373:../../../platform/sam/drivers/spi/spi.h ****  * \brief Put one data to a SPI peripheral.
 374:../../../platform/sam/drivers/spi/spi.h ****  *
 375:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Base address of the SPI instance.
 376:../../../platform/sam/drivers/spi/spi.h ****  * \param data The data byte to be loaded
 377:../../../platform/sam/drivers/spi/spi.h ****  *
 378:../../../platform/sam/drivers/spi/spi.h ****  */
 379:../../../platform/sam/drivers/spi/spi.h **** static inline void spi_put(Spi *p_spi, uint16_t data)
 380:../../../platform/sam/drivers/spi/spi.h **** {
 381:../../../platform/sam/drivers/spi/spi.h **** 	p_spi->SPI_TDR = SPI_TDR_TD(data);
 382:../../../platform/sam/drivers/spi/spi.h **** }
 383:../../../platform/sam/drivers/spi/spi.h **** 
 384:../../../platform/sam/drivers/spi/spi.h **** /** \brief Get one data to a SPI peripheral.
 385:../../../platform/sam/drivers/spi/spi.h ****  *
 386:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Base address of the SPI instance.
 387:../../../platform/sam/drivers/spi/spi.h ****  * \return The data byte
 388:../../../platform/sam/drivers/spi/spi.h ****  *
 389:../../../platform/sam/drivers/spi/spi.h ****  */
 390:../../../platform/sam/drivers/spi/spi.h **** static inline uint16_t spi_get(Spi *p_spi)
 391:../../../platform/sam/drivers/spi/spi.h **** {
 419              	 .loc 5 391 0
 420              	 .cfi_startproc
 421              	 
 422              	 
 423              	 
 424 0100 80B4     	 push {r7}
 425              	.LCFI35:
 426              	 .cfi_def_cfa_offset 4
 427              	 .cfi_offset 7,-4
 428 0102 83B0     	 sub sp,sp,#12
 429              	.LCFI36:
 430              	 .cfi_def_cfa_offset 16
 431 0104 00AF     	 add r7,sp,#0
 432              	.LCFI37:
 433              	 .cfi_def_cfa_register 7
 434 0106 7860     	 str r0,[r7,#4]
 392:../../../platform/sam/drivers/spi/spi.h **** 	return (p_spi->SPI_RDR & SPI_RDR_RD_Msk);
 435              	 .loc 5 392 0
 436 0108 7B68     	 ldr r3,[r7,#4]
 437 010a 9B68     	 ldr r3,[r3,#8]
 438 010c 9BB2     	 uxth r3,r3
 393:../../../platform/sam/drivers/spi/spi.h **** }
 439              	 .loc 5 393 0
 440 010e 1846     	 mov r0,r3
 441 0110 0C37     	 adds r7,r7,#12
 442              	.LCFI38:
 443              	 .cfi_def_cfa_offset 4
 444 0112 BD46     	 mov sp,r7
 445              	.LCFI39:
 446              	 .cfi_def_cfa_register 13
 447              	 
 448 0114 80BC     	 pop {r7}
 449              	.LCFI40:
 450              	 .cfi_restore 7
 451              	 .cfi_def_cfa_offset 0
 452 0116 7047     	 bx lr
 453              	 .cfi_endproc
 454              	.LFE205:
 456              	 .align 1
 457              	 .syntax unified
 458              	 .thumb
 459              	 .thumb_func
 460              	 .fpu softvfp
 462              	spi_is_tx_empty:
 463              	.LFB206:
 394:../../../platform/sam/drivers/spi/spi.h **** 
 395:../../../platform/sam/drivers/spi/spi.h **** /**
 396:../../../platform/sam/drivers/spi/spi.h ****  * \brief Check if all transmissions are complete.
 397:../../../platform/sam/drivers/spi/spi.h ****  *
 398:../../../platform/sam/drivers/spi/spi.h ****  * \param p_spi Pointer to an SPI instance.
 399:../../../platform/sam/drivers/spi/spi.h ****  *
 400:../../../platform/sam/drivers/spi/spi.h ****  * \retval 1 if transmissions are complete.
 401:../../../platform/sam/drivers/spi/spi.h ****  * \retval 0 if transmissions are not complete.
 402:../../../platform/sam/drivers/spi/spi.h ****  */
 403:../../../platform/sam/drivers/spi/spi.h **** static inline uint32_t spi_is_tx_empty(Spi *p_spi)
 404:../../../platform/sam/drivers/spi/spi.h **** {
 464              	 .loc 5 404 0
 465              	 .cfi_startproc
 466              	 
 467              	 
 468              	 
 469 0118 80B4     	 push {r7}
 470              	.LCFI41:
 471              	 .cfi_def_cfa_offset 4
 472              	 .cfi_offset 7,-4
 473 011a 83B0     	 sub sp,sp,#12
 474              	.LCFI42:
 475              	 .cfi_def_cfa_offset 16
 476 011c 00AF     	 add r7,sp,#0
 477              	.LCFI43:
 478              	 .cfi_def_cfa_register 7
 479 011e 7860     	 str r0,[r7,#4]
 405:../../../platform/sam/drivers/spi/spi.h **** 	if (p_spi->SPI_SR & SPI_SR_TXEMPTY) {
 480              	 .loc 5 405 0
 481 0120 7B68     	 ldr r3,[r7,#4]
 482 0122 1B69     	 ldr r3,[r3,#16]
 483 0124 03F40073 	 and r3,r3,#512
 484 0128 002B     	 cmp r3,#0
 485 012a 01D0     	 beq .L23
 406:../../../platform/sam/drivers/spi/spi.h **** 		return 1;
 486              	 .loc 5 406 0
 487 012c 0123     	 movs r3,#1
 488 012e 00E0     	 b .L24
 489              	.L23:
 407:../../../platform/sam/drivers/spi/spi.h **** 	} else {
 408:../../../platform/sam/drivers/spi/spi.h **** 		return 0;
 490              	 .loc 5 408 0
 491 0130 0023     	 movs r3,#0
 492              	.L24:
 409:../../../platform/sam/drivers/spi/spi.h **** 	}
 410:../../../platform/sam/drivers/spi/spi.h **** }
 493              	 .loc 5 410 0
 494 0132 1846     	 mov r0,r3
 495 0134 0C37     	 adds r7,r7,#12
 496              	.LCFI44:
 497              	 .cfi_def_cfa_offset 4
 498 0136 BD46     	 mov sp,r7
 499              	.LCFI45:
 500              	 .cfi_def_cfa_register 13
 501              	 
 502 0138 80BC     	 pop {r7}
 503              	.LCFI46:
 504              	 .cfi_restore 7
 505              	 .cfi_def_cfa_offset 0
 506 013a 7047     	 bx lr
 507              	 .cfi_endproc
 508              	.LFE206:
 510              	 .align 1
 511              	 .syntax unified
 512              	 .thumb
 513              	 .thumb_func
 514              	 .fpu softvfp
 516              	spi_read_single:
 517              	.LFB214:
 518              	 .file 6 "../../../platform/common/services/spi/sam_spi/spi_master.h"
   1:../../../platform/common/services/spi/sam_spi/spi_master.h **** /**
   2:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \file
   3:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
   4:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \brief SPI master common service for SAM.
   5:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
   6:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * Copyright (c) 2011-2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
   8:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \asf_license_start
   9:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
  10:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \page License
  11:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
  12:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
  15:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
  18:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
  22:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
  25:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
  28:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
  40:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \asf_license_stop
  41:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
  42:../../../platform/common/services/spi/sam_spi/spi_master.h ****  */
  43:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
  44:../../../platform/common/services/spi/sam_spi/spi_master.h **** #ifndef _SPI_MASTER_H_
  45:../../../platform/common/services/spi/sam_spi/spi_master.h **** #define _SPI_MASTER_H_
  46:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
  47:../../../platform/common/services/spi/sam_spi/spi_master.h **** #include "compiler.h"
  48:../../../platform/common/services/spi/sam_spi/spi_master.h **** #include "sysclk.h"
  49:../../../platform/common/services/spi/sam_spi/spi_master.h **** #include "status_codes.h"
  50:../../../platform/common/services/spi/sam_spi/spi_master.h **** #include "spi.h"
  51:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
  52:../../../platform/common/services/spi/sam_spi/spi_master.h **** /*! \name SPI Master Management Configuration */
  53:../../../platform/common/services/spi/sam_spi/spi_master.h **** //! @{
  54:../../../platform/common/services/spi/sam_spi/spi_master.h **** #include "conf_spi_master.h"
  55:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
  56:../../../platform/common/services/spi/sam_spi/spi_master.h **** //! Default Configuration of SPI Master Delay BCS
  57:../../../platform/common/services/spi/sam_spi/spi_master.h **** #ifndef CONFIG_SPI_MASTER_DELAY_BCS
  58:../../../platform/common/services/spi/sam_spi/spi_master.h **** #define CONFIG_SPI_MASTER_DELAY_BCS          0
  59:../../../platform/common/services/spi/sam_spi/spi_master.h **** #endif
  60:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
  61:../../../platform/common/services/spi/sam_spi/spi_master.h **** //! Default Configuration of SPI Master Bits per Transfer Definition
  62:../../../platform/common/services/spi/sam_spi/spi_master.h **** #ifndef CONFIG_SPI_MASTER_BITS_PER_TRANSFER
  63:../../../platform/common/services/spi/sam_spi/spi_master.h **** #define CONFIG_SPI_MASTER_BITS_PER_TRANSFER  SPI_CSR_BITS_8_BIT
  64:../../../platform/common/services/spi/sam_spi/spi_master.h **** #endif
  65:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
  66:../../../platform/common/services/spi/sam_spi/spi_master.h **** //! Default Configuration of SPI Master Delay BCT
  67:../../../platform/common/services/spi/sam_spi/spi_master.h **** #ifndef CONFIG_SPI_MASTER_DELAY_BCT
  68:../../../platform/common/services/spi/sam_spi/spi_master.h **** #define CONFIG_SPI_MASTER_DELAY_BCT          0
  69:../../../platform/common/services/spi/sam_spi/spi_master.h **** #endif
  70:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
  71:../../../platform/common/services/spi/sam_spi/spi_master.h **** //! Default Configuration of SPI Master Delay BS
  72:../../../platform/common/services/spi/sam_spi/spi_master.h **** #ifndef CONFIG_SPI_MASTER_DELAY_BS
  73:../../../platform/common/services/spi/sam_spi/spi_master.h **** #define CONFIG_SPI_MASTER_DELAY_BS           0
  74:../../../platform/common/services/spi/sam_spi/spi_master.h **** #endif
  75:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
  76:../../../platform/common/services/spi/sam_spi/spi_master.h **** //! Default Configuration of SPI Master Dummy Field
  77:../../../platform/common/services/spi/sam_spi/spi_master.h **** #ifndef CONFIG_SPI_MASTER_DUMMY
  78:../../../platform/common/services/spi/sam_spi/spi_master.h **** #define CONFIG_SPI_MASTER_DUMMY              0xFF
  79:../../../platform/common/services/spi/sam_spi/spi_master.h **** #endif
  80:../../../platform/common/services/spi/sam_spi/spi_master.h **** //! @}
  81:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
  82:../../../platform/common/services/spi/sam_spi/spi_master.h **** /**
  83:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \brief Clock phase.
  84:../../../platform/common/services/spi/sam_spi/spi_master.h ****  */
  85:../../../platform/common/services/spi/sam_spi/spi_master.h **** #define SPI_CPHA  (1 << 0)
  86:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
  87:../../../platform/common/services/spi/sam_spi/spi_master.h **** /**
  88:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \brief Clock polarity.
  89:../../../platform/common/services/spi/sam_spi/spi_master.h ****  */
  90:../../../platform/common/services/spi/sam_spi/spi_master.h **** #define SPI_CPOL  (1 << 1)
  91:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
  92:../../../platform/common/services/spi/sam_spi/spi_master.h **** /**
  93:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \brief SPI mode 0.
  94:../../../platform/common/services/spi/sam_spi/spi_master.h ****  */
  95:../../../platform/common/services/spi/sam_spi/spi_master.h **** #define SPI_MODE_0  0
  96:../../../platform/common/services/spi/sam_spi/spi_master.h **** /**
  97:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \brief SPI mode 1.
  98:../../../platform/common/services/spi/sam_spi/spi_master.h ****  */
  99:../../../platform/common/services/spi/sam_spi/spi_master.h **** #define SPI_MODE_1  (SPI_CPHA)
 100:../../../platform/common/services/spi/sam_spi/spi_master.h **** /**
 101:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \brief SPI mode 2.
 102:../../../platform/common/services/spi/sam_spi/spi_master.h ****  */
 103:../../../platform/common/services/spi/sam_spi/spi_master.h **** #define SPI_MODE_2  (SPI_CPOL)
 104:../../../platform/common/services/spi/sam_spi/spi_master.h **** /**
 105:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \brief SPI mode 3.
 106:../../../platform/common/services/spi/sam_spi/spi_master.h ****  */
 107:../../../platform/common/services/spi/sam_spi/spi_master.h **** #define SPI_MODE_3  (SPI_CPOL | SPI_CPHA)
 108:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
 109:../../../platform/common/services/spi/sam_spi/spi_master.h **** #ifndef SPI_TYPE_DEFS
 110:../../../platform/common/services/spi/sam_spi/spi_master.h **** #define SPI_TYPE_DEFS
 111:../../../platform/common/services/spi/sam_spi/spi_master.h **** //! SPI Flags Definition
 112:../../../platform/common/services/spi/sam_spi/spi_master.h **** typedef uint8_t spi_flags_t;
 113:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
 114:../../../platform/common/services/spi/sam_spi/spi_master.h **** //! Board SPI Select Id Definition
 115:../../../platform/common/services/spi/sam_spi/spi_master.h **** typedef uint32_t board_spi_select_id_t;
 116:../../../platform/common/services/spi/sam_spi/spi_master.h **** #endif
 117:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
 118:../../../platform/common/services/spi/sam_spi/spi_master.h **** //! \brief Polled SPI device definition.
 119:../../../platform/common/services/spi/sam_spi/spi_master.h **** struct spi_device {
 120:../../../platform/common/services/spi/sam_spi/spi_master.h **** 	//! Board specific select id
 121:../../../platform/common/services/spi/sam_spi/spi_master.h **** 	board_spi_select_id_t id;
 122:../../../platform/common/services/spi/sam_spi/spi_master.h **** };
 123:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
 124:../../../platform/common/services/spi/sam_spi/spi_master.h **** /** \brief Initialize the SPI in master mode.
 125:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 126:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param p_spi Base address of the SPI instance.
 127:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 128:../../../platform/common/services/spi/sam_spi/spi_master.h ****  */
 129:../../../platform/common/services/spi/sam_spi/spi_master.h **** extern void spi_master_init(Spi *p_spi);
 130:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
 131:../../../platform/common/services/spi/sam_spi/spi_master.h **** /**
 132:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \brief Set up an SPI device.
 133:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 134:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * The returned device descriptor structure must be passed to the driver
 135:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * whenever that device should be used as current slave device.
 136:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 137:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param p_spi     Base address of the SPI instance.
 138:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param device    Pointer to SPI device struct that should be initialized.
 139:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param flags     SPI configuration flags. Common flags for all
 140:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *                  implementations are the SPI modes SPI_MODE_0 ...
 141:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *                  SPI_MODE_3.
 142:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param baud_rate Baud rate for communication with slave device in Hz.
 143:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param sel_id    Board specific select id.
 144:../../../platform/common/services/spi/sam_spi/spi_master.h ****  */
 145:../../../platform/common/services/spi/sam_spi/spi_master.h **** extern void spi_master_setup_device(Spi *p_spi, struct spi_device *device,
 146:../../../platform/common/services/spi/sam_spi/spi_master.h **** 		spi_flags_t flags, uint32_t baud_rate, board_spi_select_id_t sel_id);
 147:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
 148:../../../platform/common/services/spi/sam_spi/spi_master.h **** /**
 149:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \brief Select the given device on the SPI bus.
 150:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 151:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * Set device specific setting and call board chip select.
 152:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 153:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param p_spi  Base address of the SPI instance.
 154:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param device SPI device.
 155:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 156:../../../platform/common/services/spi/sam_spi/spi_master.h ****  */
 157:../../../platform/common/services/spi/sam_spi/spi_master.h **** extern void spi_select_device(Spi *p_spi, struct spi_device *device);
 158:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
 159:../../../platform/common/services/spi/sam_spi/spi_master.h **** /**
 160:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \brief Deselect the given device on the SPI bus.
 161:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 162:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * Call board chip deselect.
 163:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 164:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param p_spi  Base address of the SPI instance.
 165:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param device SPI device.
 166:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 167:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \pre SPI device must be selected with spi_select_device() first.
 168:../../../platform/common/services/spi/sam_spi/spi_master.h ****  */
 169:../../../platform/common/services/spi/sam_spi/spi_master.h **** extern void spi_deselect_device(Spi *p_spi, struct spi_device *device);
 170:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
 171:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
 172:../../../platform/common/services/spi/sam_spi/spi_master.h **** /** \brief Write one byte to an SPI device.
 173:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 174:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param p_spi     Base address of the SPI instance.
 175:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param data      Data to write.
 176:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 177:../../../platform/common/services/spi/sam_spi/spi_master.h ****  */
 178:../../../platform/common/services/spi/sam_spi/spi_master.h **** static inline void spi_write_single(Spi *p_spi, uint8_t data)
 179:../../../platform/common/services/spi/sam_spi/spi_master.h **** {
 180:../../../platform/common/services/spi/sam_spi/spi_master.h **** 	spi_put(p_spi, (uint16_t)data);
 181:../../../platform/common/services/spi/sam_spi/spi_master.h **** }
 182:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
 183:../../../platform/common/services/spi/sam_spi/spi_master.h **** /**
 184:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \brief Send a sequence of bytes to an SPI device.
 185:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 186:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * Received bytes on the SPI bus are discarded.
 187:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 188:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param p_spi     Base address of the SPI instance.
 189:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param data      Data buffer to write.
 190:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param len       Length of data to be written.
 191:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 192:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \pre SPI device must be selected with spi_select_device() first.
 193:../../../platform/common/services/spi/sam_spi/spi_master.h ****  */
 194:../../../platform/common/services/spi/sam_spi/spi_master.h **** extern status_code_t spi_write_packet(Spi *p_spi,
 195:../../../platform/common/services/spi/sam_spi/spi_master.h **** 		const uint8_t *data, size_t len);
 196:../../../platform/common/services/spi/sam_spi/spi_master.h **** 
 197:../../../platform/common/services/spi/sam_spi/spi_master.h **** /** \brief Receive one byte from an SPI device.
 198:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 199:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param p_spi     Base address of the SPI instance.
 200:../../../platform/common/services/spi/sam_spi/spi_master.h ****  * \param data      Data to read.
 201:../../../platform/common/services/spi/sam_spi/spi_master.h ****  *
 202:../../../platform/common/services/spi/sam_spi/spi_master.h ****  */
 203:../../../platform/common/services/spi/sam_spi/spi_master.h **** static inline void spi_read_single(Spi *p_spi, uint8_t *data)
 204:../../../platform/common/services/spi/sam_spi/spi_master.h **** {
 519              	 .loc 6 204 0
 520              	 .cfi_startproc
 521              	 
 522              	 
 523 013c 80B5     	 push {r7,lr}
 524              	.LCFI47:
 525              	 .cfi_def_cfa_offset 8
 526              	 .cfi_offset 7,-8
 527              	 .cfi_offset 14,-4
 528 013e 82B0     	 sub sp,sp,#8
 529              	.LCFI48:
 530              	 .cfi_def_cfa_offset 16
 531 0140 00AF     	 add r7,sp,#0
 532              	.LCFI49:
 533              	 .cfi_def_cfa_register 7
 534 0142 7860     	 str r0,[r7,#4]
 535 0144 3960     	 str r1,[r7]
 205:../../../platform/common/services/spi/sam_spi/spi_master.h **** 	*data = (uint8_t)spi_get(p_spi);
 536              	 .loc 6 205 0
 537 0146 7868     	 ldr r0,[r7,#4]
 538 0148 FFF7DAFF 	 bl spi_get
 539 014c 0346     	 mov r3,r0
 540 014e DAB2     	 uxtb r2,r3
 541 0150 3B68     	 ldr r3,[r7]
 542 0152 1A70     	 strb r2,[r3]
 206:../../../platform/common/services/spi/sam_spi/spi_master.h **** }
 543              	 .loc 6 206 0
 544 0154 00BF     	 nop
 545 0156 0837     	 adds r7,r7,#8
 546              	.LCFI50:
 547              	 .cfi_def_cfa_offset 8
 548 0158 BD46     	 mov sp,r7
 549              	.LCFI51:
 550              	 .cfi_def_cfa_register 13
 551              	 
 552 015a 80BD     	 pop {r7,pc}
 553              	 .cfi_endproc
 554              	.LFE214:
 556              	 .align 1
 557              	 .syntax unified
 558              	 .thumb
 559              	 .thumb_func
 560              	 .fpu softvfp
 562              	ioport_set_pin_dir:
 563              	.LFB246:
 564              	 .file 7 "../../../platform/common/services/ioport/ioport.h"
   1:../../../platform/common/services/ioport/ioport.h **** /**
   2:../../../platform/common/services/ioport/ioport.h ****  * \file
   3:../../../platform/common/services/ioport/ioport.h ****  *
   4:../../../platform/common/services/ioport/ioport.h ****  * \brief Common IOPORT service main header file for AVR, UC3 and ARM
   5:../../../platform/common/services/ioport/ioport.h ****  *        architectures.
   6:../../../platform/common/services/ioport/ioport.h ****  *
   7:../../../platform/common/services/ioport/ioport.h ****  * Copyright (c) 2012 Atmel Corporation. All rights reserved.
   8:../../../platform/common/services/ioport/ioport.h ****  *
   9:../../../platform/common/services/ioport/ioport.h ****  * \asf_license_start
  10:../../../platform/common/services/ioport/ioport.h ****  *
  11:../../../platform/common/services/ioport/ioport.h ****  * \page License
  12:../../../platform/common/services/ioport/ioport.h ****  *
  13:../../../platform/common/services/ioport/ioport.h ****  * Redistribution and use in source and binary forms, with or without
  14:../../../platform/common/services/ioport/ioport.h ****  * modification, are permitted provided that the following conditions are met:
  15:../../../platform/common/services/ioport/ioport.h ****  *
  16:../../../platform/common/services/ioport/ioport.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  17:../../../platform/common/services/ioport/ioport.h ****  *    this list of conditions and the following disclaimer.
  18:../../../platform/common/services/ioport/ioport.h ****  *
  19:../../../platform/common/services/ioport/ioport.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  20:../../../platform/common/services/ioport/ioport.h ****  *    this list of conditions and the following disclaimer in the documentation
  21:../../../platform/common/services/ioport/ioport.h ****  *    and/or other materials provided with the distribution.
  22:../../../platform/common/services/ioport/ioport.h ****  *
  23:../../../platform/common/services/ioport/ioport.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  24:../../../platform/common/services/ioport/ioport.h ****  *    from this software without specific prior written permission.
  25:../../../platform/common/services/ioport/ioport.h ****  *
  26:../../../platform/common/services/ioport/ioport.h ****  * 4. This software may only be redistributed and used in connection with an
  27:../../../platform/common/services/ioport/ioport.h ****  *    Atmel microcontroller product.
  28:../../../platform/common/services/ioport/ioport.h ****  *
  29:../../../platform/common/services/ioport/ioport.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  30:../../../platform/common/services/ioport/ioport.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  31:../../../platform/common/services/ioport/ioport.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  32:../../../platform/common/services/ioport/ioport.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  33:../../../platform/common/services/ioport/ioport.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:../../../platform/common/services/ioport/ioport.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  35:../../../platform/common/services/ioport/ioport.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  36:../../../platform/common/services/ioport/ioport.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  37:../../../platform/common/services/ioport/ioport.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  38:../../../platform/common/services/ioport/ioport.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  39:../../../platform/common/services/ioport/ioport.h ****  * POSSIBILITY OF SUCH DAMAGE.
  40:../../../platform/common/services/ioport/ioport.h ****  *
  41:../../../platform/common/services/ioport/ioport.h ****  * \asf_license_stop
  42:../../../platform/common/services/ioport/ioport.h ****  *
  43:../../../platform/common/services/ioport/ioport.h ****  */
  44:../../../platform/common/services/ioport/ioport.h **** #ifndef IOPORT_H
  45:../../../platform/common/services/ioport/ioport.h **** #define IOPORT_H
  46:../../../platform/common/services/ioport/ioport.h **** 
  47:../../../platform/common/services/ioport/ioport.h **** #ifdef __cplusplus
  48:../../../platform/common/services/ioport/ioport.h **** extern "C" {
  49:../../../platform/common/services/ioport/ioport.h **** #endif
  50:../../../platform/common/services/ioport/ioport.h **** 
  51:../../../platform/common/services/ioport/ioport.h **** #include <parts.h>
  52:../../../platform/common/services/ioport/ioport.h **** #include <compiler.h>
  53:../../../platform/common/services/ioport/ioport.h **** 
  54:../../../platform/common/services/ioport/ioport.h **** /**
  55:../../../platform/common/services/ioport/ioport.h ****  * \defgroup ioport_group Common IOPORT API
  56:../../../platform/common/services/ioport/ioport.h ****  *
  57:../../../platform/common/services/ioport/ioport.h ****  * See \ref ioport_quickstart.
  58:../../../platform/common/services/ioport/ioport.h ****  *
  59:../../../platform/common/services/ioport/ioport.h ****  * This is common IOPORT service for GPIO pin configuration and control in a
  60:../../../platform/common/services/ioport/ioport.h ****  * standardized manner across the MEGA, MEGA_RF, XMEGA, UC3 and ARM devices.
  61:../../../platform/common/services/ioport/ioport.h ****  *
  62:../../../platform/common/services/ioport/ioport.h ****  * Port pin control code is optimized for each platform, and should produce
  63:../../../platform/common/services/ioport/ioport.h ****  * both compact and fast execution times when used with constant values.
  64:../../../platform/common/services/ioport/ioport.h ****  *
  65:../../../platform/common/services/ioport/ioport.h ****  * \section dependencies Dependencies
  66:../../../platform/common/services/ioport/ioport.h ****  * This driver depends on the following modules:
  67:../../../platform/common/services/ioport/ioport.h ****  * - \ref sysclk_group for clock speed and functions.
  68:../../../platform/common/services/ioport/ioport.h ****  * @{
  69:../../../platform/common/services/ioport/ioport.h ****  */
  70:../../../platform/common/services/ioport/ioport.h **** 
  71:../../../platform/common/services/ioport/ioport.h **** /**
  72:../../../platform/common/services/ioport/ioport.h ****  * \def IOPORT_CREATE_PIN(port, pin)
  73:../../../platform/common/services/ioport/ioport.h ****  * \brief Create IOPORT pin number
  74:../../../platform/common/services/ioport/ioport.h ****  *
  75:../../../platform/common/services/ioport/ioport.h ****  * Create a IOPORT pin number for use with the IOPORT functions.
  76:../../../platform/common/services/ioport/ioport.h ****  *
  77:../../../platform/common/services/ioport/ioport.h ****  * \param port IOPORT port (e.g. PORTA, PA or PIOA depending on chosen
  78:../../../platform/common/services/ioport/ioport.h ****  *             architecture)
  79:../../../platform/common/services/ioport/ioport.h ****  * \param pin IOPORT zero-based index of the I/O pin
  80:../../../platform/common/services/ioport/ioport.h ****  */
  81:../../../platform/common/services/ioport/ioport.h **** 
  82:../../../platform/common/services/ioport/ioport.h **** /** \brief IOPORT pin directions */
  83:../../../platform/common/services/ioport/ioport.h **** enum ioport_direction {
  84:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_DIR_INPUT,  /*!< IOPORT input direction */
  85:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_DIR_OUTPUT, /*!< IOPORT output direction */
  86:../../../platform/common/services/ioport/ioport.h **** };
  87:../../../platform/common/services/ioport/ioport.h **** 
  88:../../../platform/common/services/ioport/ioport.h **** /** \brief IOPORT levels */
  89:../../../platform/common/services/ioport/ioport.h **** enum ioport_value {
  90:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_PIN_LEVEL_LOW,  /*!< IOPORT pin value low */
  91:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_PIN_LEVEL_HIGH, /*!< IOPORT pin value high */
  92:../../../platform/common/services/ioport/ioport.h **** };
  93:../../../platform/common/services/ioport/ioport.h **** 
  94:../../../platform/common/services/ioport/ioport.h **** #if MEGA_RF
  95:../../../platform/common/services/ioport/ioport.h **** /** \brief IOPORT edge sense modes */
  96:../../../platform/common/services/ioport/ioport.h **** enum ioport_sense {
  97:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_SENSE_LEVEL,     /*!< IOPORT sense low level  */
  98:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_SENSE_BOTHEDGES, /*!< IOPORT sense both rising and falling edges */
  99:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_SENSE_FALLING,   /*!< IOPORT sense falling edges */
 100:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_SENSE_RISING,    /*!< IOPORT sense rising edges */
 101:../../../platform/common/services/ioport/ioport.h **** };
 102:../../../platform/common/services/ioport/ioport.h **** #elif SAM && !SAM4L
 103:../../../platform/common/services/ioport/ioport.h **** /** \brief IOPORT edge sense modes */
 104:../../../platform/common/services/ioport/ioport.h **** enum ioport_sense {
 105:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_SENSE_BOTHEDGES, /*!< IOPORT sense both rising and falling edges */
 106:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_SENSE_FALLING,   /*!< IOPORT sense falling edges */
 107:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_SENSE_RISING,    /*!< IOPORT sense rising edges */
 108:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_SENSE_LEVEL_LOW, /*!< IOPORT sense low level  */
 109:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_SENSE_LEVEL_HIGH,/*!< IOPORT sense High level  */
 110:../../../platform/common/services/ioport/ioport.h **** };
 111:../../../platform/common/services/ioport/ioport.h **** #else
 112:../../../platform/common/services/ioport/ioport.h **** enum ioport_sense {
 113:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_SENSE_BOTHEDGES, /*!< IOPORT sense both rising and falling edges */
 114:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_SENSE_RISING,    /*!< IOPORT sense rising edges */
 115:../../../platform/common/services/ioport/ioport.h **** 	IOPORT_SENSE_FALLING,   /*!< IOPORT sense falling edges */
 116:../../../platform/common/services/ioport/ioport.h **** };
 117:../../../platform/common/services/ioport/ioport.h **** #endif
 118:../../../platform/common/services/ioport/ioport.h **** 
 119:../../../platform/common/services/ioport/ioport.h **** 
 120:../../../platform/common/services/ioport/ioport.h **** #if XMEGA
 121:../../../platform/common/services/ioport/ioport.h **** # include "xmega/ioport.h"
 122:../../../platform/common/services/ioport/ioport.h **** # if defined(IOPORT_XMEGA_COMPAT)
 123:../../../platform/common/services/ioport/ioport.h **** #  include "xmega/ioport_compat.h"
 124:../../../platform/common/services/ioport/ioport.h **** # endif
 125:../../../platform/common/services/ioport/ioport.h **** #elif MEGA
 126:../../../platform/common/services/ioport/ioport.h **** #  include "mega_rf/ioport.h"
 127:../../../platform/common/services/ioport/ioport.h **** #elif UC3
 128:../../../platform/common/services/ioport/ioport.h **** # include "uc3/ioport.h"
 129:../../../platform/common/services/ioport/ioport.h **** #elif SAM
 130:../../../platform/common/services/ioport/ioport.h **** # if SAM4L
 131:../../../platform/common/services/ioport/ioport.h **** #  include "sam/ioport_gpio.h"
 132:../../../platform/common/services/ioport/ioport.h **** # elif SAMD20
 133:../../../platform/common/services/ioport/ioport.h **** #  include "sam0/ioport.h"
 134:../../../platform/common/services/ioport/ioport.h **** # else
 135:../../../platform/common/services/ioport/ioport.h **** #  include "sam/ioport_pio.h"
 136:../../../platform/common/services/ioport/ioport.h **** # endif
 137:../../../platform/common/services/ioport/ioport.h **** #endif
 138:../../../platform/common/services/ioport/ioport.h **** 
 139:../../../platform/common/services/ioport/ioport.h **** /**
 140:../../../platform/common/services/ioport/ioport.h ****  * \brief Initializes the IOPORT service, ready for use.
 141:../../../platform/common/services/ioport/ioport.h ****  *
 142:../../../platform/common/services/ioport/ioport.h ****  * This function must be called before using any other functions in the IOPORT
 143:../../../platform/common/services/ioport/ioport.h ****  * service.
 144:../../../platform/common/services/ioport/ioport.h ****  */
 145:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_init(void)
 146:../../../platform/common/services/ioport/ioport.h **** {
 147:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_init();
 148:../../../platform/common/services/ioport/ioport.h **** }
 149:../../../platform/common/services/ioport/ioport.h **** 
 150:../../../platform/common/services/ioport/ioport.h **** /**
 151:../../../platform/common/services/ioport/ioport.h ****  * \brief Enable an IOPORT pin, based on a pin created with \ref
 152:../../../platform/common/services/ioport/ioport.h ****  * IOPORT_CREATE_PIN().
 153:../../../platform/common/services/ioport/ioport.h ****  *
 154:../../../platform/common/services/ioport/ioport.h ****  * \param pin  IOPORT pin to enable
 155:../../../platform/common/services/ioport/ioport.h ****  */
 156:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_enable_pin(ioport_pin_t pin)
 157:../../../platform/common/services/ioport/ioport.h **** {
 158:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_enable_pin(pin);
 159:../../../platform/common/services/ioport/ioport.h **** }
 160:../../../platform/common/services/ioport/ioport.h **** 
 161:../../../platform/common/services/ioport/ioport.h **** /**
 162:../../../platform/common/services/ioport/ioport.h ****  * \brief Enable multiple pins in a single IOPORT port.
 163:../../../platform/common/services/ioport/ioport.h ****  *
 164:../../../platform/common/services/ioport/ioport.h ****  * \param port IOPORT port to enable
 165:../../../platform/common/services/ioport/ioport.h ****  * \param mask Mask of pins within the port to enable
 166:../../../platform/common/services/ioport/ioport.h ****  */
 167:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_enable_port(ioport_port_t port,
 168:../../../platform/common/services/ioport/ioport.h **** 		ioport_port_mask_t mask)
 169:../../../platform/common/services/ioport/ioport.h **** {
 170:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_enable_port(port, mask);
 171:../../../platform/common/services/ioport/ioport.h **** }
 172:../../../platform/common/services/ioport/ioport.h **** 
 173:../../../platform/common/services/ioport/ioport.h **** /**
 174:../../../platform/common/services/ioport/ioport.h ****  * \brief Disable IOPORT pin, based on a pin created with \ref
 175:../../../platform/common/services/ioport/ioport.h ****  *        IOPORT_CREATE_PIN().
 176:../../../platform/common/services/ioport/ioport.h ****  *
 177:../../../platform/common/services/ioport/ioport.h ****  * \param pin IOPORT pin to disable
 178:../../../platform/common/services/ioport/ioport.h ****  */
 179:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_disable_pin(ioport_pin_t pin)
 180:../../../platform/common/services/ioport/ioport.h **** {
 181:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_disable_pin(pin);
 182:../../../platform/common/services/ioport/ioport.h **** }
 183:../../../platform/common/services/ioport/ioport.h **** 
 184:../../../platform/common/services/ioport/ioport.h **** /**
 185:../../../platform/common/services/ioport/ioport.h ****  * \brief Disable multiple pins in a single IOPORT port.
 186:../../../platform/common/services/ioport/ioport.h ****  *
 187:../../../platform/common/services/ioport/ioport.h ****  * \param port IOPORT port to disable
 188:../../../platform/common/services/ioport/ioport.h ****  * \param mask Pin mask of pins to disable
 189:../../../platform/common/services/ioport/ioport.h ****  */
 190:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_disable_port(ioport_port_t port,
 191:../../../platform/common/services/ioport/ioport.h **** 		ioport_port_mask_t mask)
 192:../../../platform/common/services/ioport/ioport.h **** {
 193:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_disable_port(port, mask);
 194:../../../platform/common/services/ioport/ioport.h **** }
 195:../../../platform/common/services/ioport/ioport.h **** 
 196:../../../platform/common/services/ioport/ioport.h **** /**
 197:../../../platform/common/services/ioport/ioport.h ****  * \brief Set multiple pin modes in a single IOPORT port, such as pull-up,
 198:../../../platform/common/services/ioport/ioport.h ****  * pull-down, etc. configuration.
 199:../../../platform/common/services/ioport/ioport.h ****  *
 200:../../../platform/common/services/ioport/ioport.h ****  * \param port IOPORT port to configure
 201:../../../platform/common/services/ioport/ioport.h ****  * \param mask Pin mask of pins to configure
 202:../../../platform/common/services/ioport/ioport.h ****  * \param mode Mode masks to configure for the specified pins (\ref
 203:../../../platform/common/services/ioport/ioport.h ****  * ioport_modes)
 204:../../../platform/common/services/ioport/ioport.h ****  */
 205:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_set_port_mode(ioport_port_t port,
 206:../../../platform/common/services/ioport/ioport.h **** 		ioport_port_mask_t mask, ioport_mode_t mode)
 207:../../../platform/common/services/ioport/ioport.h **** {
 208:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_set_port_mode(port, mask, mode);
 209:../../../platform/common/services/ioport/ioport.h **** }
 210:../../../platform/common/services/ioport/ioport.h **** 
 211:../../../platform/common/services/ioport/ioport.h **** /**
 212:../../../platform/common/services/ioport/ioport.h ****  * \brief Set pin mode for one single IOPORT pin.
 213:../../../platform/common/services/ioport/ioport.h ****  *
 214:../../../platform/common/services/ioport/ioport.h ****  * \param pin IOPORT pin to configure
 215:../../../platform/common/services/ioport/ioport.h ****  * \param mode Mode masks to configure for the specified pin (\ref ioport_modes)
 216:../../../platform/common/services/ioport/ioport.h ****  */
 217:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_set_pin_mode(ioport_pin_t pin, ioport_mode_t mode)
 218:../../../platform/common/services/ioport/ioport.h **** {
 219:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_set_pin_mode(pin, mode);
 220:../../../platform/common/services/ioport/ioport.h **** }
 221:../../../platform/common/services/ioport/ioport.h **** 
 222:../../../platform/common/services/ioport/ioport.h **** /**
 223:../../../platform/common/services/ioport/ioport.h ****  * \brief Reset multiple pin modes in a specified IOPORT port to defaults.
 224:../../../platform/common/services/ioport/ioport.h ****  *
 225:../../../platform/common/services/ioport/ioport.h ****  * \param port IOPORT port to configure
 226:../../../platform/common/services/ioport/ioport.h ****  * \param mask Mask of pins whose mode configuration is to be reset
 227:../../../platform/common/services/ioport/ioport.h ****  */
 228:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_reset_port_mode(ioport_port_t port,
 229:../../../platform/common/services/ioport/ioport.h **** 		ioport_port_mask_t mask)
 230:../../../platform/common/services/ioport/ioport.h **** {
 231:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_set_port_mode(port, mask, 0);
 232:../../../platform/common/services/ioport/ioport.h **** }
 233:../../../platform/common/services/ioport/ioport.h **** 
 234:../../../platform/common/services/ioport/ioport.h **** /**
 235:../../../platform/common/services/ioport/ioport.h ****  * \brief Reset pin mode configuration for a single IOPORT pin
 236:../../../platform/common/services/ioport/ioport.h ****  *
 237:../../../platform/common/services/ioport/ioport.h ****  * \param pin IOPORT pin to configure
 238:../../../platform/common/services/ioport/ioport.h ****  */
 239:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_reset_pin_mode(ioport_pin_t pin)
 240:../../../platform/common/services/ioport/ioport.h **** {
 241:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_set_pin_mode(pin, 0);
 242:../../../platform/common/services/ioport/ioport.h **** }
 243:../../../platform/common/services/ioport/ioport.h **** 
 244:../../../platform/common/services/ioport/ioport.h **** /**
 245:../../../platform/common/services/ioport/ioport.h ****  * \brief Set I/O direction for a group of pins in a single IOPORT.
 246:../../../platform/common/services/ioport/ioport.h ****  *
 247:../../../platform/common/services/ioport/ioport.h ****  * \param port IOPORT port to configure
 248:../../../platform/common/services/ioport/ioport.h ****  * \param mask Pin mask of pins to configure
 249:../../../platform/common/services/ioport/ioport.h ****  * \param dir Direction to set for the specified pins (\ref ioport_direction)
 250:../../../platform/common/services/ioport/ioport.h ****  */
 251:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_set_port_dir(ioport_port_t port,
 252:../../../platform/common/services/ioport/ioport.h **** 		ioport_port_mask_t mask, enum ioport_direction dir)
 253:../../../platform/common/services/ioport/ioport.h **** {
 254:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_set_port_dir(port, mask, dir);
 255:../../../platform/common/services/ioport/ioport.h **** }
 256:../../../platform/common/services/ioport/ioport.h **** 
 257:../../../platform/common/services/ioport/ioport.h **** /**
 258:../../../platform/common/services/ioport/ioport.h ****  * \brief Set direction for a single IOPORT pin.
 259:../../../platform/common/services/ioport/ioport.h ****  *
 260:../../../platform/common/services/ioport/ioport.h ****  * \param pin IOPORT pin to configure
 261:../../../platform/common/services/ioport/ioport.h ****  * \param dir Direction to set for the specified pin (\ref ioport_direction)
 262:../../../platform/common/services/ioport/ioport.h ****  */
 263:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_set_pin_dir(ioport_pin_t pin,
 264:../../../platform/common/services/ioport/ioport.h **** 		enum ioport_direction dir)
 265:../../../platform/common/services/ioport/ioport.h **** {
 565              	 .loc 7 265 0
 566              	 .cfi_startproc
 567              	 
 568              	 
 569              	 
 570 015c 80B4     	 push {r7}
 571              	.LCFI52:
 572              	 .cfi_def_cfa_offset 4
 573              	 .cfi_offset 7,-4
 574 015e 95B0     	 sub sp,sp,#84
 575              	.LCFI53:
 576              	 .cfi_def_cfa_offset 88
 577 0160 00AF     	 add r7,sp,#0
 578              	.LCFI54:
 579              	 .cfi_def_cfa_register 7
 580 0162 7860     	 str r0,[r7,#4]
 581 0164 0B46     	 mov r3,r1
 582 0166 FB70     	 strb r3,[r7,#3]
 583 0168 7B68     	 ldr r3,[r7,#4]
 584 016a FB64     	 str r3,[r7,#76]
 585 016c FB78     	 ldrb r3,[r7,#3]
 586 016e 87F84B30 	 strb r3,[r7,#75]
 587              	.LBB170:
 588              	.LBB171:
 589              	 .file 8 "../../../platform/common/services/ioport/sam/ioport_gpio.h"
   1:../../../platform/common/services/ioport/sam/ioport_gpio.h **** /**
   2:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * \file
   3:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *
   4:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * \brief SAM architecture specific IOPORT service implementation header file.
   5:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *
   6:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * Copyright (c) 2012-2013 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *
   8:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * \asf_license_start
   9:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *
  10:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * \page License
  11:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *
  12:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *
  15:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *
  18:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *
  22:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *
  25:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *
  28:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *
  40:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * \asf_license_stop
  41:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *
  42:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  */
  43:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #ifndef IOPORT_SAM_H
  44:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_SAM_H
  45:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
  46:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #include <sysclk.h>
  47:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
  48:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_CREATE_PIN(port, pin) ((port) * 32 + (pin))
  49:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
  50:../../../platform/common/services/ioport/sam/ioport_gpio.h **** // Aliases
  51:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_GPIOA     0
  52:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_GPIOB     1
  53:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_GPIOC     2
  54:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_GPIOD     3
  55:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_GPIOE     4
  56:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_GPIOF     5
  57:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
  58:../../../platform/common/services/ioport/sam/ioport_gpio.h **** /**
  59:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * \weakgroup ioport_group
  60:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * \section ioport_modes IOPORT Modes
  61:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *
  62:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * For details on these please see the device datasheet.
  63:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  *
  64:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  * @{
  65:../../../platform/common/services/ioport/sam/ioport_gpio.h ****  */
  66:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
  67:../../../platform/common/services/ioport/sam/ioport_gpio.h **** /** \name IOPORT Mode bit definitions */
  68:../../../platform/common/services/ioport/sam/ioport_gpio.h **** /** @{ */
  69:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_MUX_MASK            (7 << 0) /*!< MUX bits mask */
  70:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_MUX_BIT0            (1 << 0) /*!< MUX BIT0 mask */
  71:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_MUX_BIT1            (1 << 1) /*!< MUX BIT1 mask */
  72:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_MUX_A               (0 << 0) /*!< MUX function A */
  73:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_MUX_B               (1 << 0) /*!< MUX function B */
  74:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_MUX_C               (2 << 0) /*!< MUX function C */
  75:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_MUX_D               (3 << 0) /*!< MUX function D */
  76:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
  77:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_MUX_BIT2            (1 << 2) /*!< MUX BIT2 mask */
  78:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_MUX_E               (4 << 0) /*!< MUX function E */
  79:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_MUX_F               (5 << 0) /*!< MUX function F */
  80:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_MUX_G               (6 << 0) /*!< MUX function G */
  81:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_MUX_H               (7 << 0) /*!< MUX function H */
  82:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
  83:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_PULLUP              (1 << 3) /*!< Pull-up */
  84:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_PULLDOWN            (1 << 4) /*!< Pull-down */
  85:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_GLITCH_FILTER       (1 << 6) /*!< Glitch filter */
  86:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #define IOPORT_MODE_DRIVE_STRENGTH      (1 << 7) /*!< Extra drive strength */
  87:../../../platform/common/services/ioport/sam/ioport_gpio.h **** /** @} */
  88:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
  89:../../../platform/common/services/ioport/sam/ioport_gpio.h **** /** @} */
  90:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
  91:../../../platform/common/services/ioport/sam/ioport_gpio.h **** typedef uint32_t ioport_mode_t;
  92:../../../platform/common/services/ioport/sam/ioport_gpio.h **** typedef uint32_t ioport_pin_t;
  93:../../../platform/common/services/ioport/sam/ioport_gpio.h **** typedef uint32_t ioport_port_t;
  94:../../../platform/common/services/ioport/sam/ioport_gpio.h **** typedef uint32_t ioport_port_mask_t;
  95:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
  96:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
  97:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
  98:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	return pin >> 5;
  99:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 100:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 101:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static volatile GpioPort *arch_ioport_port_to_base(
 102:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		ioport_port_t port)
 103:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 104:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	return (volatile GpioPort *)(GPIO_ADDR
 105:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		+ port * sizeof(GpioPort));
 106:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 107:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 108:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static volatile GpioPort *arch_ioport_pin_to_base(ioport_pin_t pin)
 109:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 110:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
 111:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 112:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 113:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
 114:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 115:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	return 1U << (pin & 0x1F);
 116:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 117:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 118:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static void arch_ioport_init(void)
 119:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 120:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	sysclk_enable_peripheral_clock(GPIO);
 121:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 122:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 123:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static void arch_ioport_enable_port(ioport_port_t port,
 124:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		ioport_port_mask_t mask)
 125:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 126:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	arch_ioport_port_to_base(port)->GPIO_GPERS = mask;
 127:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 128:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 129:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static void arch_ioport_disable_port(ioport_port_t port,
 130:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		ioport_port_mask_t mask)
 131:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 132:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	arch_ioport_port_to_base(port)->GPIO_GPERC = mask;
 133:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 134:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 135:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static void arch_ioport_enable_pin(ioport_pin_t pin)
 136:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 137:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	arch_ioport_enable_port(arch_ioport_pin_to_port_id(pin),
 138:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 			arch_ioport_pin_to_mask(pin));
 139:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 140:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 141:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static void arch_ioport_disable_pin(ioport_pin_t pin)
 142:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 143:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	arch_ioport_disable_port(arch_ioport_pin_to_port_id(pin),
 144:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 			arch_ioport_pin_to_mask(pin));
 145:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 146:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 147:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static void arch_ioport_set_port_mode(ioport_port_t port,
 148:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		ioport_port_mask_t mask, ioport_mode_t mode)
 149:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 150:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	volatile GpioPort *base = arch_ioport_port_to_base(port);
 151:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 152:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	if (mode & IOPORT_MODE_PULLUP) {
 153:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_PUERS = mask;
 154:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	} else {
 155:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_PUERC = mask;
 156:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	}
 157:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 158:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #ifdef IOPORT_MODE_PULLDOWN
 159:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	if (mode & IOPORT_MODE_PULLDOWN) {
 160:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_PDERS = mask;
 161:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	} else {
 162:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_PDERC = mask;
 163:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	}
 164:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #endif
 165:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 166:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	if (mode & IOPORT_MODE_GLITCH_FILTER) {
 167:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_GFERS = mask;
 168:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	} else {
 169:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_GFERC = mask;
 170:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	}
 171:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 172:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #ifdef IOPORT_MODE_DRIVE_STRENGTH
 173:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	if (mode & IOPORT_MODE_DRIVE_STRENGTH) {
 174:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_ODCR0S = mask;
 175:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	} else {
 176:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_ODCR0C = mask;
 177:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	}
 178:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #endif
 179:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 180:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	if (mode & IOPORT_MODE_MUX_BIT0) {
 181:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_PMR0S = mask;
 182:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	} else {
 183:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_PMR0C = mask;
 184:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	}
 185:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 186:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	if (mode & IOPORT_MODE_MUX_BIT1) {
 187:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_PMR1S = mask;
 188:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	} else {
 189:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_PMR1C = mask;
 190:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	}
 191:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 192:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #ifdef IOPORT_MODE_MUX_BIT2
 193:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	if (mode & IOPORT_MODE_MUX_BIT2) {
 194:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_PMR2S = mask;
 195:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	} else {
 196:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_PMR2C = mask;
 197:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	}
 198:../../../platform/common/services/ioport/sam/ioport_gpio.h **** #endif
 199:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 200:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 201:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static void arch_ioport_set_pin_mode(ioport_pin_t pin,
 202:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		ioport_mode_t mode)
 203:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 204:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	arch_ioport_set_port_mode(arch_ioport_pin_to_port_id(pin),
 205:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 			arch_ioport_pin_to_mask(pin), mode);
 206:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 207:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 208:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static void arch_ioport_set_port_dir(ioport_port_t port,
 209:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		ioport_port_mask_t mask, unsigned char group_direction)
 210:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 211:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	if (group_direction == IOPORT_DIR_OUTPUT) {
 212:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		arch_ioport_port_to_base(port)->GPIO_ODERS = mask;
 213:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		// Always disable the Schmitt trigger for output pins.
 214:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		arch_ioport_port_to_base(port)->GPIO_STERC = mask;
 215:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	} else if (group_direction == IOPORT_DIR_INPUT) {
 216:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		arch_ioport_port_to_base(port)->GPIO_ODERC = mask;
 217:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		// Always enable the Schmitt trigger for input pins.
 218:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		arch_ioport_port_to_base(port)->GPIO_STERS = mask;
 219:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	}
 220:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 221:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 222:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static void arch_ioport_set_pin_dir(ioport_pin_t pin,
 223:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		enum ioport_direction dir)
 224:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 225:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	if (dir == IOPORT_DIR_OUTPUT) {
 590              	 .loc 8 225 0
 591 0172 97F84B30 	 ldrb r3,[r7,#75]
 592 0176 012B     	 cmp r3,#1
 593 0178 2FD1     	 bne .L27
 594 017a FB6C     	 ldr r3,[r7,#76]
 595 017c 7B64     	 str r3,[r7,#68]
 596 017e 7B6C     	 ldr r3,[r7,#68]
 597 0180 3B64     	 str r3,[r7,#64]
 598              	.LBB172:
 599              	.LBB173:
 600              	.LBB174:
 601              	.LBB175:
  98:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 602              	 .loc 8 98 0
 603 0182 3B6C     	 ldr r3,[r7,#64]
 604 0184 5B09     	 lsrs r3,r3,#5
 605 0186 FB63     	 str r3,[r7,#60]
 606              	.LBE175:
 607              	.LBE174:
 608              	.LBB176:
 609              	.LBB177:
 105:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 610              	 .loc 8 105 0
 611 0188 FB6B     	 ldr r3,[r7,#60]
 612 018a 03F50013 	 add r3,r3,#2097152
 613 018e 03F5E163 	 add r3,r3,#1800
 614 0192 5B02     	 lsls r3,r3,#9
 104:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		+ port * sizeof(GpioPort));
 615              	 .loc 8 104 0
 616 0194 1946     	 mov r1,r3
 617 0196 FB6C     	 ldr r3,[r7,#76]
 618 0198 BB63     	 str r3,[r7,#56]
 619              	.LBE177:
 620              	.LBE176:
 621              	.LBE173:
 622              	.LBE172:
 623              	.LBB178:
 624              	.LBB179:
 115:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 625              	 .loc 8 115 0
 626 019a BB6B     	 ldr r3,[r7,#56]
 627 019c 03F01F03 	 and r3,r3,#31
 628 01a0 0122     	 movs r2,#1
 629 01a2 02FA03F3 	 lsl r3,r2,r3
 630              	.LBE179:
 631              	.LBE178:
 226:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		arch_ioport_pin_to_base(pin)->GPIO_ODERS = arch_ioport_pin_to_mask(pin);
 632              	 .loc 8 226 0
 633 01a6 4B64     	 str r3,[r1,#68]
 634 01a8 FB6C     	 ldr r3,[r7,#76]
 635 01aa 7B63     	 str r3,[r7,#52]
 636 01ac 7B6B     	 ldr r3,[r7,#52]
 637 01ae 3B63     	 str r3,[r7,#48]
 638              	.LBB180:
 639              	.LBB181:
 640              	.LBB182:
 641              	.LBB183:
  98:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 642              	 .loc 8 98 0
 643 01b0 3B6B     	 ldr r3,[r7,#48]
 644 01b2 5B09     	 lsrs r3,r3,#5
 645 01b4 FB62     	 str r3,[r7,#44]
 646              	.LBE183:
 647              	.LBE182:
 648              	.LBB184:
 649              	.LBB185:
 105:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 650              	 .loc 8 105 0
 651 01b6 FB6A     	 ldr r3,[r7,#44]
 652 01b8 03F50013 	 add r3,r3,#2097152
 653 01bc 03F5E163 	 add r3,r3,#1800
 654 01c0 5B02     	 lsls r3,r3,#9
 104:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		+ port * sizeof(GpioPort));
 655              	 .loc 8 104 0
 656 01c2 1946     	 mov r1,r3
 657 01c4 FB6C     	 ldr r3,[r7,#76]
 658 01c6 BB62     	 str r3,[r7,#40]
 659              	.LBE185:
 660              	.LBE184:
 661              	.LBE181:
 662              	.LBE180:
 663              	.LBB186:
 664              	.LBB187:
 115:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 665              	 .loc 8 115 0
 666 01c8 BB6A     	 ldr r3,[r7,#40]
 667 01ca 03F01F03 	 and r3,r3,#31
 668 01ce 0122     	 movs r2,#1
 669 01d0 02FA03F3 	 lsl r3,r2,r3
 670              	.LBE187:
 671              	.LBE186:
 227:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		// Always disable the Schmitt trigger for output pins.
 228:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		arch_ioport_pin_to_base(pin)->GPIO_STERC = arch_ioport_pin_to_mask(pin);
 672              	 .loc 8 228 0
 673 01d4 C1F86831 	 str r3,[r1,#360]
 674              	.LBE171:
 675              	.LBE170:
 266:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_set_pin_dir(pin, dir);
 267:../../../platform/common/services/ioport/ioport.h **** }
 676              	 .loc 7 267 0
 677 01d8 32E0     	 b .L45
 678              	.L27:
 679              	.LBB205:
 680              	.LBB204:
 229:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	} else if (dir == IOPORT_DIR_INPUT) {
 681              	 .loc 8 229 0
 682 01da 97F84B30 	 ldrb r3,[r7,#75]
 683 01de 002B     	 cmp r3,#0
 684 01e0 2ED1     	 bne .L45
 685 01e2 FB6C     	 ldr r3,[r7,#76]
 686 01e4 7B62     	 str r3,[r7,#36]
 687 01e6 7B6A     	 ldr r3,[r7,#36]
 688 01e8 3B62     	 str r3,[r7,#32]
 689              	.LBB188:
 690              	.LBB189:
 691              	.LBB190:
 692              	.LBB191:
  98:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 693              	 .loc 8 98 0
 694 01ea 3B6A     	 ldr r3,[r7,#32]
 695 01ec 5B09     	 lsrs r3,r3,#5
 696 01ee FB61     	 str r3,[r7,#28]
 697              	.LBE191:
 698              	.LBE190:
 699              	.LBB192:
 700              	.LBB193:
 105:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 701              	 .loc 8 105 0
 702 01f0 FB69     	 ldr r3,[r7,#28]
 703 01f2 03F50013 	 add r3,r3,#2097152
 704 01f6 03F5E163 	 add r3,r3,#1800
 705 01fa 5B02     	 lsls r3,r3,#9
 104:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		+ port * sizeof(GpioPort));
 706              	 .loc 8 104 0
 707 01fc 1946     	 mov r1,r3
 708 01fe FB6C     	 ldr r3,[r7,#76]
 709 0200 BB61     	 str r3,[r7,#24]
 710              	.LBE193:
 711              	.LBE192:
 712              	.LBE189:
 713              	.LBE188:
 714              	.LBB194:
 715              	.LBB195:
 115:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 716              	 .loc 8 115 0
 717 0202 BB69     	 ldr r3,[r7,#24]
 718 0204 03F01F03 	 and r3,r3,#31
 719 0208 0122     	 movs r2,#1
 720 020a 02FA03F3 	 lsl r3,r2,r3
 721              	.LBE195:
 722              	.LBE194:
 230:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		arch_ioport_pin_to_base(pin)->GPIO_ODERC = arch_ioport_pin_to_mask(pin);
 723              	 .loc 8 230 0
 724 020e 8B64     	 str r3,[r1,#72]
 725 0210 FB6C     	 ldr r3,[r7,#76]
 726 0212 7B61     	 str r3,[r7,#20]
 727 0214 7B69     	 ldr r3,[r7,#20]
 728 0216 3B61     	 str r3,[r7,#16]
 729              	.LBB196:
 730              	.LBB197:
 731              	.LBB198:
 732              	.LBB199:
  98:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 733              	 .loc 8 98 0
 734 0218 3B69     	 ldr r3,[r7,#16]
 735 021a 5B09     	 lsrs r3,r3,#5
 736 021c FB60     	 str r3,[r7,#12]
 737              	.LBE199:
 738              	.LBE198:
 739              	.LBB200:
 740              	.LBB201:
 105:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 741              	 .loc 8 105 0
 742 021e FB68     	 ldr r3,[r7,#12]
 743 0220 03F50013 	 add r3,r3,#2097152
 744 0224 03F5E163 	 add r3,r3,#1800
 745 0228 5B02     	 lsls r3,r3,#9
 104:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		+ port * sizeof(GpioPort));
 746              	 .loc 8 104 0
 747 022a 1946     	 mov r1,r3
 748 022c FB6C     	 ldr r3,[r7,#76]
 749 022e BB60     	 str r3,[r7,#8]
 750              	.LBE201:
 751              	.LBE200:
 752              	.LBE197:
 753              	.LBE196:
 754              	.LBB202:
 755              	.LBB203:
 115:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 756              	 .loc 8 115 0
 757 0230 BB68     	 ldr r3,[r7,#8]
 758 0232 03F01F03 	 and r3,r3,#31
 759 0236 0122     	 movs r2,#1
 760 0238 02FA03F3 	 lsl r3,r2,r3
 761              	.LBE203:
 762              	.LBE202:
 231:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		// Always enable the Schmitt trigger for input pins.
 232:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		arch_ioport_pin_to_base(pin)->GPIO_STERS = arch_ioport_pin_to_mask(pin);
 763              	 .loc 8 232 0
 764 023c C1F86431 	 str r3,[r1,#356]
 765              	.L45:
 766              	.LBE204:
 767              	.LBE205:
 768              	 .loc 7 267 0
 769 0240 00BF     	 nop
 770 0242 5437     	 adds r7,r7,#84
 771              	.LCFI55:
 772              	 .cfi_def_cfa_offset 4
 773 0244 BD46     	 mov sp,r7
 774              	.LCFI56:
 775              	 .cfi_def_cfa_register 13
 776              	 
 777 0246 80BC     	 pop {r7}
 778              	.LCFI57:
 779              	 .cfi_restore 7
 780              	 .cfi_def_cfa_offset 0
 781 0248 7047     	 bx lr
 782              	 .cfi_endproc
 783              	.LFE246:
 785              	 .align 1
 786              	 .syntax unified
 787              	 .thumb
 788              	 .thumb_func
 789              	 .fpu softvfp
 791              	ioport_set_pin_level:
 792              	.LFB247:
 268:../../../platform/common/services/ioport/ioport.h **** 
 269:../../../platform/common/services/ioport/ioport.h **** /**
 270:../../../platform/common/services/ioport/ioport.h ****  * \brief Set an IOPORT pin to a specified logical value.
 271:../../../platform/common/services/ioport/ioport.h ****  *
 272:../../../platform/common/services/ioport/ioport.h ****  * \param pin IOPORT pin to configure
 273:../../../platform/common/services/ioport/ioport.h ****  * \param level Logical value of the pin
 274:../../../platform/common/services/ioport/ioport.h ****  */
 275:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_set_pin_level(ioport_pin_t pin, bool level)
 276:../../../platform/common/services/ioport/ioport.h **** {
 793              	 .loc 7 276 0
 794              	 .cfi_startproc
 795              	 
 796              	 
 797              	 
 798 024a 80B4     	 push {r7}
 799              	.LCFI58:
 800              	 .cfi_def_cfa_offset 4
 801              	 .cfi_offset 7,-4
 802 024c 8DB0     	 sub sp,sp,#52
 803              	.LCFI59:
 804              	 .cfi_def_cfa_offset 56
 805 024e 00AF     	 add r7,sp,#0
 806              	.LCFI60:
 807              	 .cfi_def_cfa_register 7
 808 0250 7860     	 str r0,[r7,#4]
 809 0252 0B46     	 mov r3,r1
 810 0254 FB70     	 strb r3,[r7,#3]
 811 0256 7B68     	 ldr r3,[r7,#4]
 812 0258 FB62     	 str r3,[r7,#44]
 813 025a FB78     	 ldrb r3,[r7,#3]
 814 025c 87F82B30 	 strb r3,[r7,#43]
 815              	.LBB206:
 816              	.LBB207:
 233:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	}
 234:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 235:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 236:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
 237:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		bool level)
 238:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 239:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	if (level) {
 817              	 .loc 8 239 0
 818 0260 97F82B30 	 ldrb r3,[r7,#43]
 819 0264 002B     	 cmp r3,#0
 820 0266 17D0     	 beq .L47
 821 0268 FB6A     	 ldr r3,[r7,#44]
 822 026a 7B62     	 str r3,[r7,#36]
 823 026c 7B6A     	 ldr r3,[r7,#36]
 824 026e 3B62     	 str r3,[r7,#32]
 825              	.LBB208:
 826              	.LBB209:
 827              	.LBB210:
 828              	.LBB211:
  98:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 829              	 .loc 8 98 0
 830 0270 3B6A     	 ldr r3,[r7,#32]
 831 0272 5B09     	 lsrs r3,r3,#5
 832 0274 FB61     	 str r3,[r7,#28]
 833              	.LBE211:
 834              	.LBE210:
 835              	.LBB212:
 836              	.LBB213:
 105:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 837              	 .loc 8 105 0
 838 0276 FB69     	 ldr r3,[r7,#28]
 839 0278 03F50013 	 add r3,r3,#2097152
 840 027c 03F5E163 	 add r3,r3,#1800
 841 0280 5B02     	 lsls r3,r3,#9
 104:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		+ port * sizeof(GpioPort));
 842              	 .loc 8 104 0
 843 0282 1946     	 mov r1,r3
 844 0284 FB6A     	 ldr r3,[r7,#44]
 845 0286 BB61     	 str r3,[r7,#24]
 846              	.LBE213:
 847              	.LBE212:
 848              	.LBE209:
 849              	.LBE208:
 850              	.LBB214:
 851              	.LBB215:
 115:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 852              	 .loc 8 115 0
 853 0288 BB69     	 ldr r3,[r7,#24]
 854 028a 03F01F03 	 and r3,r3,#31
 855 028e 0122     	 movs r2,#1
 856 0290 02FA03F3 	 lsl r3,r2,r3
 857              	.LBE215:
 858              	.LBE214:
 240:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		arch_ioport_pin_to_base(pin)->GPIO_OVRS = arch_ioport_pin_to_mask(pin);
 859              	 .loc 8 240 0
 860 0294 4B65     	 str r3,[r1,#84]
 861              	.LBE207:
 862              	.LBE206:
 277:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_set_pin_level(pin, level);
 278:../../../platform/common/services/ioport/ioport.h **** }
 863              	 .loc 7 278 0
 864 0296 16E0     	 b .L57
 865              	.L47:
 866 0298 FB6A     	 ldr r3,[r7,#44]
 867 029a 7B61     	 str r3,[r7,#20]
 868 029c 7B69     	 ldr r3,[r7,#20]
 869 029e 3B61     	 str r3,[r7,#16]
 870              	.LBB225:
 871              	.LBB224:
 872              	.LBB216:
 873              	.LBB217:
 874              	.LBB218:
 875              	.LBB219:
  98:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 876              	 .loc 8 98 0
 877 02a0 3B69     	 ldr r3,[r7,#16]
 878 02a2 5B09     	 lsrs r3,r3,#5
 879 02a4 FB60     	 str r3,[r7,#12]
 880              	.LBE219:
 881              	.LBE218:
 882              	.LBB220:
 883              	.LBB221:
 105:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 884              	 .loc 8 105 0
 885 02a6 FB68     	 ldr r3,[r7,#12]
 886 02a8 03F50013 	 add r3,r3,#2097152
 887 02ac 03F5E163 	 add r3,r3,#1800
 888 02b0 5B02     	 lsls r3,r3,#9
 104:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		+ port * sizeof(GpioPort));
 889              	 .loc 8 104 0
 890 02b2 1946     	 mov r1,r3
 891 02b4 FB6A     	 ldr r3,[r7,#44]
 892 02b6 BB60     	 str r3,[r7,#8]
 893              	.LBE221:
 894              	.LBE220:
 895              	.LBE217:
 896              	.LBE216:
 897              	.LBB222:
 898              	.LBB223:
 115:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 899              	 .loc 8 115 0
 900 02b8 BB68     	 ldr r3,[r7,#8]
 901 02ba 03F01F03 	 and r3,r3,#31
 902 02be 0122     	 movs r2,#1
 903 02c0 02FA03F3 	 lsl r3,r2,r3
 904              	.LBE223:
 905              	.LBE222:
 241:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	} else {
 242:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		arch_ioport_pin_to_base(pin)->GPIO_OVRC = arch_ioport_pin_to_mask(pin);
 906              	 .loc 8 242 0
 907 02c4 8B65     	 str r3,[r1,#88]
 908              	.L57:
 909              	.LBE224:
 910              	.LBE225:
 911              	 .loc 7 278 0
 912 02c6 00BF     	 nop
 913 02c8 3437     	 adds r7,r7,#52
 914              	.LCFI61:
 915              	 .cfi_def_cfa_offset 4
 916 02ca BD46     	 mov sp,r7
 917              	.LCFI62:
 918              	 .cfi_def_cfa_register 13
 919              	 
 920 02cc 80BC     	 pop {r7}
 921              	.LCFI63:
 922              	 .cfi_restore 7
 923              	 .cfi_def_cfa_offset 0
 924 02ce 7047     	 bx lr
 925              	 .cfi_endproc
 926              	.LFE247:
 928              	 .align 1
 929              	 .syntax unified
 930              	 .thumb
 931              	 .thumb_func
 932              	 .fpu softvfp
 934              	ioport_set_pin_sense_mode:
 935              	.LFB253:
 279:../../../platform/common/services/ioport/ioport.h **** 
 280:../../../platform/common/services/ioport/ioport.h **** /**
 281:../../../platform/common/services/ioport/ioport.h ****  * \brief Set a group of IOPORT pins in a single port to a specified logical
 282:../../../platform/common/services/ioport/ioport.h ****  * value.
 283:../../../platform/common/services/ioport/ioport.h ****  *
 284:../../../platform/common/services/ioport/ioport.h ****  * \param port IOPORT port to write to
 285:../../../platform/common/services/ioport/ioport.h ****  * \param mask Pin mask of pins to modify
 286:../../../platform/common/services/ioport/ioport.h ****  * \param level Level of the pins to be modified
 287:../../../platform/common/services/ioport/ioport.h ****  */
 288:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_set_port_level(ioport_port_t port,
 289:../../../platform/common/services/ioport/ioport.h **** 		ioport_port_mask_t mask, ioport_port_mask_t level)
 290:../../../platform/common/services/ioport/ioport.h **** {
 291:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_set_port_level(port, mask, level);
 292:../../../platform/common/services/ioport/ioport.h **** }
 293:../../../platform/common/services/ioport/ioport.h **** 
 294:../../../platform/common/services/ioport/ioport.h **** /**
 295:../../../platform/common/services/ioport/ioport.h ****  * \brief Get current value of an IOPORT pin, which has been configured as an
 296:../../../platform/common/services/ioport/ioport.h ****  * input.
 297:../../../platform/common/services/ioport/ioport.h ****  *
 298:../../../platform/common/services/ioport/ioport.h ****  * \param pin IOPORT pin to read
 299:../../../platform/common/services/ioport/ioport.h ****  * \return Current logical value of the specified pin
 300:../../../platform/common/services/ioport/ioport.h ****  */
 301:../../../platform/common/services/ioport/ioport.h **** static inline bool ioport_get_pin_level(ioport_pin_t pin)
 302:../../../platform/common/services/ioport/ioport.h **** {
 303:../../../platform/common/services/ioport/ioport.h **** 	return arch_ioport_get_pin_level(pin);
 304:../../../platform/common/services/ioport/ioport.h **** }
 305:../../../platform/common/services/ioport/ioport.h **** 
 306:../../../platform/common/services/ioport/ioport.h **** /**
 307:../../../platform/common/services/ioport/ioport.h ****  * \brief Get current value of several IOPORT pins in a single port, which have
 308:../../../platform/common/services/ioport/ioport.h ****  * been configured as an inputs.
 309:../../../platform/common/services/ioport/ioport.h ****  *
 310:../../../platform/common/services/ioport/ioport.h ****  * \param port IOPORT port to read
 311:../../../platform/common/services/ioport/ioport.h ****  * \param mask Pin mask of pins to read
 312:../../../platform/common/services/ioport/ioport.h ****  * \return Logical levels of the specified pins from the read port, returned as
 313:../../../platform/common/services/ioport/ioport.h ****  * a mask.
 314:../../../platform/common/services/ioport/ioport.h ****  */
 315:../../../platform/common/services/ioport/ioport.h **** static inline ioport_port_mask_t ioport_get_port_level(ioport_pin_t port,
 316:../../../platform/common/services/ioport/ioport.h **** 		ioport_port_mask_t mask)
 317:../../../platform/common/services/ioport/ioport.h **** {
 318:../../../platform/common/services/ioport/ioport.h **** 	return arch_ioport_get_port_level(port, mask);
 319:../../../platform/common/services/ioport/ioport.h **** }
 320:../../../platform/common/services/ioport/ioport.h **** 
 321:../../../platform/common/services/ioport/ioport.h **** /**
 322:../../../platform/common/services/ioport/ioport.h ****  * \brief Toggle the value of an IOPORT pin, which has previously configured as
 323:../../../platform/common/services/ioport/ioport.h ****  * an output.
 324:../../../platform/common/services/ioport/ioport.h ****  *
 325:../../../platform/common/services/ioport/ioport.h ****  * \param pin IOPORT pin to toggle
 326:../../../platform/common/services/ioport/ioport.h ****  */
 327:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_toggle_pin_level(ioport_pin_t pin)
 328:../../../platform/common/services/ioport/ioport.h **** {
 329:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_toggle_pin_level(pin);
 330:../../../platform/common/services/ioport/ioport.h **** }
 331:../../../platform/common/services/ioport/ioport.h **** 
 332:../../../platform/common/services/ioport/ioport.h **** /**
 333:../../../platform/common/services/ioport/ioport.h ****  * \brief Toggle the values of several IOPORT pins located in a single port.
 334:../../../platform/common/services/ioport/ioport.h ****  *
 335:../../../platform/common/services/ioport/ioport.h ****  * \param port IOPORT port to modify
 336:../../../platform/common/services/ioport/ioport.h ****  * \param mask Pin mask of pins to toggle
 337:../../../platform/common/services/ioport/ioport.h ****  */
 338:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_toggle_port_level(ioport_port_t port,
 339:../../../platform/common/services/ioport/ioport.h **** 		ioport_port_mask_t mask)
 340:../../../platform/common/services/ioport/ioport.h **** {
 341:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_toggle_port_level(port, mask);
 342:../../../platform/common/services/ioport/ioport.h **** }
 343:../../../platform/common/services/ioport/ioport.h **** 
 344:../../../platform/common/services/ioport/ioport.h **** /**
 345:../../../platform/common/services/ioport/ioport.h ****  * \brief Set the pin sense mode of a single IOPORT pin.
 346:../../../platform/common/services/ioport/ioport.h ****  *
 347:../../../platform/common/services/ioport/ioport.h ****  * \param pin IOPORT pin to configure
 348:../../../platform/common/services/ioport/ioport.h ****  * \param pin_sense Edge to sense for the pin (\ref ioport_sense)
 349:../../../platform/common/services/ioport/ioport.h ****  */
 350:../../../platform/common/services/ioport/ioport.h **** static inline void ioport_set_pin_sense_mode(ioport_pin_t pin,
 351:../../../platform/common/services/ioport/ioport.h **** 		enum ioport_sense pin_sense)
 352:../../../platform/common/services/ioport/ioport.h **** {
 936              	 .loc 7 352 0
 937              	 .cfi_startproc
 938              	 
 939              	 
 940              	 
 941 02d0 80B4     	 push {r7}
 942              	.LCFI64:
 943              	 .cfi_def_cfa_offset 4
 944              	 .cfi_offset 7,-4
 945 02d2 8DB0     	 sub sp,sp,#52
 946              	.LCFI65:
 947              	 .cfi_def_cfa_offset 56
 948 02d4 00AF     	 add r7,sp,#0
 949              	.LCFI66:
 950              	 .cfi_def_cfa_register 7
 951 02d6 7860     	 str r0,[r7,#4]
 952 02d8 0B46     	 mov r3,r1
 953 02da FB70     	 strb r3,[r7,#3]
 954 02dc 7B68     	 ldr r3,[r7,#4]
 955 02de FB62     	 str r3,[r7,#44]
 956 02e0 FB78     	 ldrb r3,[r7,#3]
 957 02e2 87F82B30 	 strb r3,[r7,#43]
 958 02e6 FB6A     	 ldr r3,[r7,#44]
 959 02e8 7B62     	 str r3,[r7,#36]
 960              	.LBB226:
 961              	.LBB227:
 962              	.LBB228:
 963              	.LBB229:
  98:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 964              	 .loc 8 98 0
 965 02ea 7B6A     	 ldr r3,[r7,#36]
 966 02ec 5A09     	 lsrs r2,r3,#5
 967 02ee FB6A     	 ldr r3,[r7,#44]
 968 02f0 3B62     	 str r3,[r7,#32]
 969              	.LBE229:
 970              	.LBE228:
 971              	.LBB230:
 972              	.LBB231:
 115:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 973              	 .loc 8 115 0
 974 02f2 3B6A     	 ldr r3,[r7,#32]
 975 02f4 03F01F03 	 and r3,r3,#31
 976 02f8 0121     	 movs r1,#1
 977 02fa 01FA03F3 	 lsl r3,r1,r3
 978 02fe FA61     	 str r2,[r7,#28]
 979 0300 BB61     	 str r3,[r7,#24]
 980 0302 97F82B30 	 ldrb r3,[r7,#43]
 981 0306 FB75     	 strb r3,[r7,#23]
 982 0308 FB69     	 ldr r3,[r7,#28]
 983 030a 3B61     	 str r3,[r7,#16]
 984              	.LBE231:
 985              	.LBE230:
 986              	.LBB232:
 987              	.LBB233:
 988              	.LBB234:
 989              	.LBB235:
 105:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 990              	 .loc 8 105 0
 991 030c 3B69     	 ldr r3,[r7,#16]
 992 030e 03F50013 	 add r3,r3,#2097152
 993 0312 03F5E163 	 add r3,r3,#1800
 994 0316 5B02     	 lsls r3,r3,#9
 995              	.LBE235:
 996              	.LBE234:
 243:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	}
 244:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 245:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 246:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static void arch_ioport_set_port_level(ioport_port_t port,
 247:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		ioport_port_mask_t mask, ioport_port_mask_t level)
 248:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 249:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	volatile GpioPort *base = arch_ioport_port_to_base(port);
 250:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	if (level){
 251:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_OVRS |= mask;
 252:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_OVRC &= ~mask;		
 253:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	}
 254:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	else{
 255:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_OVRS &= ~mask;
 256:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_OVRC |= mask;
 257:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	}
 258:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 259:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 260:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
 261:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 262:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	return arch_ioport_pin_to_base(pin)->GPIO_PVR & arch_ioport_pin_to_mask(pin);
 263:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 264:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 265:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static ioport_port_mask_t arch_ioport_get_port_level(
 266:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		ioport_port_t port, ioport_port_mask_t mask)
 267:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 268:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	return arch_ioport_port_to_base(port)->GPIO_PVR & mask;
 269:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 270:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 271:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static void arch_ioport_toggle_pin_level(ioport_pin_t pin)
 272:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 273:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	arch_ioport_pin_to_base(pin)->GPIO_OVRT = arch_ioport_pin_to_mask(pin);
 274:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 275:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 276:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static void arch_ioport_toggle_port_level(ioport_port_t port,
 277:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		ioport_port_mask_t mask)
 278:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 279:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	arch_ioport_port_to_base(port)->GPIO_OVRT = mask;
 280:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 281:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 282:../../../platform/common/services/ioport/sam/ioport_gpio.h **** __always_inline static void arch_ioport_set_port_sense_mode(ioport_port_t port,
 283:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		ioport_port_mask_t mask, enum ioport_sense pin_sense)
 284:../../../platform/common/services/ioport/sam/ioport_gpio.h **** {
 285:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	volatile GpioPort *base = arch_ioport_port_to_base(port);
 997              	 .loc 8 285 0
 998 0318 FB60     	 str r3,[r7,#12]
 286:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 287:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	if (pin_sense & 0x01) {
 999              	 .loc 8 287 0
 1000 031a FB7D     	 ldrb r3,[r7,#23]
 1001 031c 03F00103 	 and r3,r3,#1
 1002 0320 002B     	 cmp r3,#0
 1003 0322 04D0     	 beq .L62
 288:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_IMR0S = mask;
 1004              	 .loc 8 288 0
 1005 0324 FB68     	 ldr r3,[r7,#12]
 1006 0326 BA69     	 ldr r2,[r7,#24]
 1007 0328 C3F8A420 	 str r2,[r3,#164]
 1008 032c 03E0     	 b .L63
 1009              	.L62:
 289:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	} else {
 290:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_IMR0C = mask;
 1010              	 .loc 8 290 0
 1011 032e FB68     	 ldr r3,[r7,#12]
 1012 0330 BA69     	 ldr r2,[r7,#24]
 1013 0332 C3F8A820 	 str r2,[r3,#168]
 1014              	.L63:
 291:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	}
 292:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 
 293:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	if (pin_sense & 0x02) {
 1015              	 .loc 8 293 0
 1016 0336 FB7D     	 ldrb r3,[r7,#23]
 1017 0338 03F00203 	 and r3,r3,#2
 1018 033c 002B     	 cmp r3,#0
 1019 033e 04D0     	 beq .L64
 294:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_IMR1S = mask;
 1020              	 .loc 8 294 0
 1021 0340 FB68     	 ldr r3,[r7,#12]
 1022 0342 BA69     	 ldr r2,[r7,#24]
 1023 0344 C3F8B420 	 str r2,[r3,#180]
 1024              	.LBE233:
 1025              	.LBE232:
 1026              	.LBE227:
 1027              	.LBE226:
 353:../../../platform/common/services/ioport/ioport.h **** 	arch_ioport_set_pin_sense_mode(pin, pin_sense);
 354:../../../platform/common/services/ioport/ioport.h **** }
 1028              	 .loc 7 354 0
 1029 0348 03E0     	 b .L66
 1030              	.L64:
 1031              	.LBB239:
 1032              	.LBB238:
 1033              	.LBB237:
 1034              	.LBB236:
 295:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 	} else {
 296:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		base->GPIO_IMR1C = mask;
 1035              	 .loc 8 296 0
 1036 034a FB68     	 ldr r3,[r7,#12]
 1037 034c BA69     	 ldr r2,[r7,#24]
 1038 034e C3F8B820 	 str r2,[r3,#184]
 1039              	.L66:
 1040              	.LBE236:
 1041              	.LBE237:
 1042              	.LBE238:
 1043              	.LBE239:
 1044              	 .loc 7 354 0
 1045 0352 00BF     	 nop
 1046 0354 3437     	 adds r7,r7,#52
 1047              	.LCFI67:
 1048              	 .cfi_def_cfa_offset 4
 1049 0356 BD46     	 mov sp,r7
 1050              	.LCFI68:
 1051              	 .cfi_def_cfa_register 13
 1052              	 
 1053 0358 80BC     	 pop {r7}
 1054              	.LCFI69:
 1055              	 .cfi_restore 7
 1056              	 .cfi_def_cfa_offset 0
 1057 035a 7047     	 bx lr
 1058              	 .cfi_endproc
 1059              	.LFE253:
 1061              	 .section .bss.irq_hdl_trx,"aw",%nobits
 1062              	 .align 2
 1065              	irq_hdl_trx:
 1066 0000 00000000 	 .space 4
 1067              	 .global SPI_AT86RFX_DEVICE
 1068              	 .section .data.SPI_AT86RFX_DEVICE,"aw",%progbits
 1069              	 .align 2
 1072              	SPI_AT86RFX_DEVICE:
 1073 0000 01000000 	 .word 1
 1074              	 .text
 1075              	 .align 1
 1076              	 .global GPIO_2_Handler
 1077              	 .syntax unified
 1078              	 .thumb
 1079              	 .thumb_func
 1080              	 .fpu softvfp
 1082              	GPIO_2_Handler:
 1083              	.LFB257:
 1084              	 .file 9 "../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c"
   1:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** /*
   2:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * @file trx_access.c
   3:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
   4:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * @brief Performs interface functionalities between the PHY layer and ASF
   5:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *drivers
   6:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *  Copyright (c) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
   8:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   9:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
  10:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * \asf_license_start
  11:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
  12:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * Redistribution and use in source and binary forms, with or without
  13:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * modification, are permitted provided that the following conditions are met:
  14:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
  15:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *    this list of conditions and the following disclaimer.
  17:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
  18:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *    and/or other materials provided with the distribution.
  21:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
  22:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *    from this software without specific prior written permission.
  24:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
  25:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *    Atmel microcontroller product.
  27:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
  28:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
  40:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * \asf_license_stop
  41:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
  42:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
  43:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  */
  44:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
  45:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** /*
  46:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  47:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
  48:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  49:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  */
  50:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
  51:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #include "board.h"
  52:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
  53:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #include "spi.h"
  54:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #else
  55:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #include "spi_master.h"
  56:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
  57:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #include "trx_access.h"
  58:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #include "delay.h"
  59:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #include "interrupt.h"
  60:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #include "conf_board.h"
  61:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #include "asf.h"
  62:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
  63:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** static irq_handler_t irq_hdl_trx = NULL;
  64:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
  65:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
  66:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** struct spi_slave_inst_config slave_dev_config;
  67:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** struct spi_config config;
  68:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** struct spi_module master;
  69:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** struct spi_slave_inst slave;
  70:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** uint16_t dummy_read;
  71:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #else
  72:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** struct spi_device SPI_AT86RFX_DEVICE = {
  73:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* ! Board specific select id */
  74:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	.id = AT86RFX_SPI_CS
  75:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** };
  76:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
  77:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
  78:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
  79:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** void AT86RFX_ISR(void);
  80:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
  81:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** void AT86RFX_ISR(void)
  82:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #else
  83:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** AT86RFX_ISR()
  84:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
  85:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
  86:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** {
 1085              	 .loc 9 86 0
 1086              	 .cfi_startproc
 1087              	 
 1088              	 
 1089 035c 80B5     	 push {r7,lr}
 1090              	.LCFI70:
 1091              	 .cfi_def_cfa_offset 8
 1092              	 .cfi_offset 7,-8
 1093              	 .cfi_offset 14,-4
 1094 035e 84B0     	 sub sp,sp,#16
 1095              	.LCFI71:
 1096              	 .cfi_def_cfa_offset 24
 1097 0360 00AF     	 add r7,sp,#0
 1098              	.LCFI72:
 1099              	 .cfi_def_cfa_register 7
 1100 0362 1423     	 movs r3,#20
 1101 0364 BB60     	 str r3,[r7,#8]
 1102 0366 BB68     	 ldr r3,[r7,#8]
 1103 0368 7B60     	 str r3,[r7,#4]
 1104              	.LBB240:
 1105              	.LBB241:
 1106              	.LBB242:
 1107              	.LBB243:
  98:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 1108              	 .loc 8 98 0
 1109 036a 7B68     	 ldr r3,[r7,#4]
 1110 036c 5B09     	 lsrs r3,r3,#5
 1111 036e 3B60     	 str r3,[r7]
 1112              	.LBE243:
 1113              	.LBE242:
 1114              	.LBB244:
 1115              	.LBB245:
 105:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 1116              	 .loc 8 105 0
 1117 0370 3B68     	 ldr r3,[r7]
 1118 0372 03F50013 	 add r3,r3,#2097152
 1119 0376 03F5E163 	 add r3,r3,#1800
 1120 037a 5B02     	 lsls r3,r3,#9
 104:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		+ port * sizeof(GpioPort));
 1121              	 .loc 8 104 0
 1122 037c 1946     	 mov r1,r3
 1123 037e 1423     	 movs r3,#20
 1124 0380 FB60     	 str r3,[r7,#12]
 1125              	.LBE245:
 1126              	.LBE244:
 1127              	.LBE241:
 1128              	.LBE240:
 1129              	.LBB246:
 1130              	.LBB247:
 115:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 1131              	 .loc 8 115 0
 1132 0382 FB68     	 ldr r3,[r7,#12]
 1133 0384 03F01F03 	 and r3,r3,#31
 1134 0388 0122     	 movs r2,#1
 1135 038a 02FA03F3 	 lsl r3,r2,r3
 1136              	.LBE247:
 1137              	.LBE246:
  87:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*Clearing the RF interrupt*/
  88:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	trx_irq_flag_clr();
 1138              	 .loc 9 88 0
 1139 038e C1F8D830 	 str r3,[r1,#216]
  89:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
  90:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*Calling the interrupt routines*/
  91:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	if (irq_hdl_trx) {
 1140              	 .loc 9 91 0
 1141 0392 054B     	 ldr r3,.L74
 1142 0394 1B68     	 ldr r3,[r3]
 1143 0396 002B     	 cmp r3,#0
 1144 0398 02D0     	 beq .L73
  92:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		irq_hdl_trx();
 1145              	 .loc 9 92 0
 1146 039a 034B     	 ldr r3,.L74
 1147 039c 1B68     	 ldr r3,[r3]
 1148 039e 9847     	 blx r3
 1149              	.LVL0:
 1150              	.L73:
  93:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
  94:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** }
 1151              	 .loc 9 94 0
 1152 03a0 00BF     	 nop
 1153 03a2 1037     	 adds r7,r7,#16
 1154              	.LCFI73:
 1155              	 .cfi_def_cfa_offset 8
 1156 03a4 BD46     	 mov sp,r7
 1157              	.LCFI74:
 1158              	 .cfi_def_cfa_register 13
 1159              	 
 1160 03a6 80BD     	 pop {r7,pc}
 1161              	.L75:
 1162              	 .align 2
 1163              	.L74:
 1164 03a8 00000000 	 .word irq_hdl_trx
 1165              	 .cfi_endproc
 1166              	.LFE257:
 1168              	 .align 1
 1169              	 .global trx_spi_init
 1170              	 .syntax unified
 1171              	 .thumb
 1172              	 .thumb_func
 1173              	 .fpu softvfp
 1175              	trx_spi_init:
 1176              	.LFB258:
  95:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
  96:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** void trx_spi_init(void)
  97:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** {
 1177              	 .loc 9 97 0
 1178              	 .cfi_startproc
 1179              	 
 1180              	 
 1181 03ac 90B5     	 push {r4,r7,lr}
 1182              	.LCFI75:
 1183              	 .cfi_def_cfa_offset 12
 1184              	 .cfi_offset 4,-12
 1185              	 .cfi_offset 7,-8
 1186              	 .cfi_offset 14,-4
 1187 03ae 8BB0     	 sub sp,sp,#44
 1188              	.LCFI76:
 1189              	 .cfi_def_cfa_offset 56
 1190 03b0 02AF     	 add r7,sp,#8
 1191              	.LCFI77:
 1192              	 .cfi_def_cfa 7,48
  98:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Initialize SPI in master mode to access the transceiver */
  99:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
 100:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_slave_inst_get_config_defaults(&slave_dev_config);
 101:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	slave_dev_config.ss_pin = AT86RFX_SPI_CS;
 102:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_attach_slave(&slave, &slave_dev_config);
 103:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_get_config_defaults(&config);
 104:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	AT86RFX_SPI_CONFIG(config);
 105:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_init(&master, AT86RFX_SPI, &config);
 106:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_enable(&master);
 107:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	AT86RFX_INTC_INIT();
 108:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #else
 109:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_master_init(AT86RFX_SPI);
 1193              	 .loc 9 109 0
 1194 03b2 2648     	 ldr r0,.L85
 1195 03b4 264B     	 ldr r3,.L85+4
 1196 03b6 9847     	 blx r3
 1197              	.LVL1:
 110:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_master_setup_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE, SPI_MODE_0,
 1198              	 .loc 9 110 0
 1199 03b8 0023     	 movs r3,#0
 1200 03ba 0093     	 str r3,[sp]
 1201 03bc 254B     	 ldr r3,.L85+8
 1202 03be 0022     	 movs r2,#0
 1203 03c0 2549     	 ldr r1,.L85+12
 1204 03c2 2248     	 ldr r0,.L85
 1205 03c4 254C     	 ldr r4,.L85+16
 1206 03c6 A047     	 blx r4
 1207              	.LVL2:
 111:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 			AT86RFX_SPI_BAUDRATE, 0);
 112:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_enable(AT86RFX_SPI);
 1208              	 .loc 9 112 0
 1209 03c8 2048     	 ldr r0,.L85
 1210 03ca FFF78DFE 	 bl spi_enable
 113:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	AT86RFX_INTC_INIT();
 1211              	 .loc 9 113 0
 1212 03ce 0021     	 movs r1,#0
 1213 03d0 1420     	 movs r0,#20
 1214 03d2 FFF7C3FE 	 bl ioport_set_pin_dir
 1215 03d6 0121     	 movs r1,#1
 1216 03d8 1420     	 movs r0,#20
 1217 03da FFF779FF 	 bl ioport_set_pin_sense_mode
 1218 03de 1423     	 movs r3,#20
 1219 03e0 BB60     	 str r3,[r7,#8]
 1220 03e2 BB68     	 ldr r3,[r7,#8]
 1221 03e4 7B60     	 str r3,[r7,#4]
 1222              	.LBB248:
 1223              	.LBB249:
 1224              	.LBB250:
 1225              	.LBB251:
  98:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 1226              	 .loc 8 98 0
 1227 03e6 7B68     	 ldr r3,[r7,#4]
 1228 03e8 5B09     	 lsrs r3,r3,#5
 1229 03ea 3B60     	 str r3,[r7]
 1230              	.LBE251:
 1231              	.LBE250:
 1232              	.LBB252:
 1233              	.LBB253:
 105:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 1234              	 .loc 8 105 0
 1235 03ec 3B68     	 ldr r3,[r7]
 1236 03ee 03F50013 	 add r3,r3,#2097152
 1237 03f2 03F5E163 	 add r3,r3,#1800
 1238 03f6 5B02     	 lsls r3,r3,#9
 104:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		+ port * sizeof(GpioPort));
 1239              	 .loc 8 104 0
 1240 03f8 1946     	 mov r1,r3
 1241 03fa 1423     	 movs r3,#20
 1242 03fc FB60     	 str r3,[r7,#12]
 1243              	.LBE253:
 1244              	.LBE252:
 1245              	.LBE249:
 1246              	.LBE248:
 1247              	.LBB254:
 1248              	.LBB255:
 115:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 1249              	 .loc 8 115 0
 1250 03fe FB68     	 ldr r3,[r7,#12]
 1251 0400 03F01F03 	 and r3,r3,#31
 1252 0404 0122     	 movs r2,#1
 1253 0406 02FA03F3 	 lsl r3,r2,r3
 1254              	.LBE255:
 1255              	.LBE254:
 1256              	 .loc 9 113 0
 1257 040a C1F89430 	 str r3,[r1,#148]
 1258 040e 1423     	 movs r3,#20
 1259 0410 BB61     	 str r3,[r7,#24]
 1260 0412 BB69     	 ldr r3,[r7,#24]
 1261 0414 7B61     	 str r3,[r7,#20]
 1262              	.LBB256:
 1263              	.LBB257:
 1264              	.LBB258:
 1265              	.LBB259:
  98:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 1266              	 .loc 8 98 0
 1267 0416 7B69     	 ldr r3,[r7,#20]
 1268 0418 5B09     	 lsrs r3,r3,#5
 1269 041a 3B61     	 str r3,[r7,#16]
 1270              	.LBE259:
 1271              	.LBE258:
 1272              	.LBB260:
 1273              	.LBB261:
 105:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 1274              	 .loc 8 105 0
 1275 041c 3B69     	 ldr r3,[r7,#16]
 1276 041e 03F50013 	 add r3,r3,#2097152
 1277 0422 03F5E163 	 add r3,r3,#1800
 1278 0426 5B02     	 lsls r3,r3,#9
 104:../../../platform/common/services/ioport/sam/ioport_gpio.h **** 		+ port * sizeof(GpioPort));
 1279              	 .loc 8 104 0
 1280 0428 1946     	 mov r1,r3
 1281 042a 1423     	 movs r3,#20
 1282 042c FB61     	 str r3,[r7,#28]
 1283              	.LBE261:
 1284              	.LBE260:
 1285              	.LBE257:
 1286              	.LBE256:
 1287              	.LBB262:
 1288              	.LBB263:
 115:../../../platform/common/services/ioport/sam/ioport_gpio.h **** }
 1289              	 .loc 8 115 0
 1290 042e FB69     	 ldr r3,[r7,#28]
 1291 0430 03F01F03 	 and r3,r3,#31
 1292 0434 0122     	 movs r2,#1
 1293 0436 02FA03F3 	 lsl r3,r2,r3
 1294              	.LBE263:
 1295              	.LBE262:
 1296              	 .loc 9 113 0
 1297 043a C1F8A430 	 str r3,[r1,#164]
 1298 043e 1B20     	 movs r0,#27
 1299 0440 FFF7DEFD 	 bl NVIC_EnableIRQ
 114:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
 115:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** }
 1300              	 .loc 9 115 0
 1301 0444 00BF     	 nop
 1302 0446 2437     	 adds r7,r7,#36
 1303              	.LCFI78:
 1304              	 .cfi_def_cfa_offset 12
 1305 0448 BD46     	 mov sp,r7
 1306              	.LCFI79:
 1307              	 .cfi_def_cfa_register 13
 1308              	 
 1309 044a 90BD     	 pop {r4,r7,pc}
 1310              	.L86:
 1311              	 .align 2
 1312              	.L85:
 1313 044c 00800040 	 .word 1073774592
 1314 0450 00000000 	 .word spi_master_init
 1315 0454 C0C62D00 	 .word 3000000
 1316 0458 00000000 	 .word SPI_AT86RFX_DEVICE
 1317 045c 00000000 	 .word spi_master_setup_device
 1318              	 .cfi_endproc
 1319              	.LFE258:
 1321              	 .align 1
 1322              	 .global PhyReset
 1323              	 .syntax unified
 1324              	 .thumb
 1325              	 .thumb_func
 1326              	 .fpu softvfp
 1328              	PhyReset:
 1329              	.LFB259:
 116:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 117:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** void PhyReset(void)
 118:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** {
 1330              	 .loc 9 118 0
 1331              	 .cfi_startproc
 1332              	 
 1333              	 
 1334 0460 80B5     	 push {r7,lr}
 1335              	.LCFI80:
 1336              	 .cfi_def_cfa_offset 8
 1337              	 .cfi_offset 7,-8
 1338              	 .cfi_offset 14,-4
 1339 0462 00AF     	 add r7,sp,#0
 1340              	.LCFI81:
 1341              	 .cfi_def_cfa_register 7
 119:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Ensure control lines have correct levels. */
 120:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	RST_HIGH();
 1342              	 .loc 9 120 0
 1343 0464 0121     	 movs r1,#1
 1344 0466 0A20     	 movs r0,#10
 1345 0468 FFF7EFFE 	 bl ioport_set_pin_level
 121:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	SLP_TR_LOW();
 1346              	 .loc 9 121 0
 1347 046c 0021     	 movs r1,#0
 1348 046e 0920     	 movs r0,#9
 1349 0470 FFF7EBFE 	 bl ioport_set_pin_level
 122:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 123:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Wait typical time of timer TR1. */
 124:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	delay_us(330);
 1350              	 .loc 9 124 0
 1351 0474 40F26C40 	 movw r0,#1132
 1352 0478 074B     	 ldr r3,.L88
 1353 047a 9847     	 blx r3
 1354              	.LVL3:
 125:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 126:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	RST_LOW();
 1355              	 .loc 9 126 0
 1356 047c 0021     	 movs r1,#0
 1357 047e 0A20     	 movs r0,#10
 1358 0480 FFF7E3FE 	 bl ioport_set_pin_level
 127:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	delay_us(10);
 1359              	 .loc 9 127 0
 1360 0484 2320     	 movs r0,#35
 1361 0486 044B     	 ldr r3,.L88
 1362 0488 9847     	 blx r3
 1363              	.LVL4:
 128:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	RST_HIGH();
 1364              	 .loc 9 128 0
 1365 048a 0121     	 movs r1,#1
 1366 048c 0A20     	 movs r0,#10
 1367 048e FFF7DCFE 	 bl ioport_set_pin_level
 129:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** }
 1368              	 .loc 9 129 0
 1369 0492 00BF     	 nop
 1370 0494 80BD     	 pop {r7,pc}
 1371              	.L89:
 1372 0496 00BF     	 .align 2
 1373              	.L88:
 1374 0498 00000000 	 .word portable_delay_cycles
 1375              	 .cfi_endproc
 1376              	.LFE259:
 1378              	 .align 1
 1379              	 .global trx_reg_read
 1380              	 .syntax unified
 1381              	 .thumb
 1382              	 .thumb_func
 1383              	 .fpu softvfp
 1385              	trx_reg_read:
 1386              	.LFB260:
 130:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 131:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** uint8_t trx_reg_read(uint8_t addr)
 132:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** {
 1387              	 .loc 9 132 0
 1388              	 .cfi_startproc
 1389              	 
 1390              	 
 1391 049c 80B5     	 push {r7,lr}
 1392              	.LCFI82:
 1393              	 .cfi_def_cfa_offset 8
 1394              	 .cfi_offset 7,-8
 1395              	 .cfi_offset 14,-4
 1396 049e 84B0     	 sub sp,sp,#16
 1397              	.LCFI83:
 1398              	 .cfi_def_cfa_offset 24
 1399 04a0 00AF     	 add r7,sp,#0
 1400              	.LCFI84:
 1401              	 .cfi_def_cfa_register 7
 1402 04a2 0346     	 mov r3,r0
 1403 04a4 FB71     	 strb r3,[r7,#7]
 133:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
 134:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	uint16_t register_value = 0;
 135:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #else
 136:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	uint8_t register_value = 0;
 1404              	 .loc 9 136 0
 1405 04a6 0023     	 movs r3,#0
 1406 04a8 BB73     	 strb r3,[r7,#14]
 1407              	.LBB264:
 137:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
 138:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 139:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*Saving the current interrupt status & disabling the global interrupt
 140:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 **/
 141:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	ENTER_TRX_CRITICAL_REGION();
 1408              	 .loc 9 141 0
 1409 04aa FFF7DBFD 	 bl cpu_irq_save
 1410 04ae 0346     	 mov r3,r0
 1411 04b0 FB73     	 strb r3,[r7,#15]
 142:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 143:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Prepare the command byte */
 144:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	addr |= READ_ACCESS_COMMAND;
 1412              	 .loc 9 144 0
 1413 04b2 FB79     	 ldrb r3,[r7,#7]
 1414 04b4 63F07F03 	 orn r3,r3,#127
 1415 04b8 DBB2     	 uxtb r3,r3
 1416 04ba FB71     	 strb r3,[r7,#7]
 145:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 146:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
 147:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Start SPI transaction by pulling SEL low */
 148:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_slave(&master, &slave, true);
 149:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 150:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the Read command byte */
 151:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_write(&master)) {
 152:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 153:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write(&master, addr);
 154:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_write_complete(&master)) {
 155:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 156:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Dummy read since SPI RX is double buffered */
 157:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_read(&master)) {
 158:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 159:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, &dummy_read);
 160:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 161:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_write(&master)) {
 162:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 163:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write(&master, 0);
 164:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_write_complete(&master)) {
 165:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 166:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_read(&master)) {
 167:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 168:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, &register_value);
 169:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 170:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Stop the SPI transaction by setting SEL high */
 171:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_slave(&master, &slave, false);
 172:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 173:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #else
 174:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Start SPI transaction by pulling SEL low */
 175:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE);
 1417              	 .loc 9 175 0
 1418 04bc 0E49     	 ldr r1,.L92
 1419 04be 0F48     	 ldr r0,.L92+4
 1420 04c0 0F4B     	 ldr r3,.L92+8
 1421 04c2 9847     	 blx r3
 1422              	.LVL5:
 176:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 177:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the Read command byte */
 178:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write_packet(AT86RFX_SPI, &addr, 1);
 1423              	 .loc 9 178 0
 1424 04c4 FB1D     	 adds r3,r7,#7
 1425 04c6 0122     	 movs r2,#1
 1426 04c8 1946     	 mov r1,r3
 1427 04ca 0C48     	 ldr r0,.L92+4
 1428 04cc 0D4B     	 ldr r3,.L92+12
 1429 04ce 9847     	 blx r3
 1430              	.LVL6:
 179:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 180:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Do dummy read for initiating SPI read */
 181:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read_packet(AT86RFX_SPI, &register_value, 1);
 1431              	 .loc 9 181 0
 1432 04d0 07F10E03 	 add r3,r7,#14
 1433 04d4 0122     	 movs r2,#1
 1434 04d6 1946     	 mov r1,r3
 1435 04d8 0848     	 ldr r0,.L92+4
 1436 04da 0B4B     	 ldr r3,.L92+16
 1437 04dc 9847     	 blx r3
 1438              	.LVL7:
 182:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 183:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Stop the SPI transaction by setting SEL high */
 184:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_deselect_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE);
 1439              	 .loc 9 184 0
 1440 04de 0649     	 ldr r1,.L92
 1441 04e0 0648     	 ldr r0,.L92+4
 1442 04e2 0A4B     	 ldr r3,.L92+20
 1443 04e4 9847     	 blx r3
 1444              	.LVL8:
 185:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
 186:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*Restoring the interrupt status which was stored & enabling the global
 187:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 *interrupt */
 188:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	LEAVE_TRX_CRITICAL_REGION();
 1445              	 .loc 9 188 0
 1446 04e6 FB7B     	 ldrb r3,[r7,#15]
 1447 04e8 1846     	 mov r0,r3
 1448 04ea FFF7E6FD 	 bl cpu_irq_restore
 1449              	.LBE264:
 189:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 190:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	return register_value;
 1450              	 .loc 9 190 0
 1451 04ee BB7B     	 ldrb r3,[r7,#14]
 191:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** }
 1452              	 .loc 9 191 0
 1453 04f0 1846     	 mov r0,r3
 1454 04f2 1037     	 adds r7,r7,#16
 1455              	.LCFI85:
 1456              	 .cfi_def_cfa_offset 8
 1457 04f4 BD46     	 mov sp,r7
 1458              	.LCFI86:
 1459              	 .cfi_def_cfa_register 13
 1460              	 
 1461 04f6 80BD     	 pop {r7,pc}
 1462              	.L93:
 1463              	 .align 2
 1464              	.L92:
 1465 04f8 00000000 	 .word SPI_AT86RFX_DEVICE
 1466 04fc 00800040 	 .word 1073774592
 1467 0500 00000000 	 .word spi_select_device
 1468 0504 00000000 	 .word spi_write_packet
 1469 0508 00000000 	 .word spi_read_packet
 1470 050c 00000000 	 .word spi_deselect_device
 1471              	 .cfi_endproc
 1472              	.LFE260:
 1474              	 .align 1
 1475              	 .global trx_reg_write
 1476              	 .syntax unified
 1477              	 .thumb
 1478              	 .thumb_func
 1479              	 .fpu softvfp
 1481              	trx_reg_write:
 1482              	.LFB261:
 192:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 193:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** void trx_reg_write(uint8_t addr, uint8_t data)
 194:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** {
 1483              	 .loc 9 194 0
 1484              	 .cfi_startproc
 1485              	 
 1486              	 
 1487 0510 80B5     	 push {r7,lr}
 1488              	.LCFI87:
 1489              	 .cfi_def_cfa_offset 8
 1490              	 .cfi_offset 7,-8
 1491              	 .cfi_offset 14,-4
 1492 0512 84B0     	 sub sp,sp,#16
 1493              	.LCFI88:
 1494              	 .cfi_def_cfa_offset 24
 1495 0514 00AF     	 add r7,sp,#0
 1496              	.LCFI89:
 1497              	 .cfi_def_cfa_register 7
 1498 0516 0346     	 mov r3,r0
 1499 0518 0A46     	 mov r2,r1
 1500 051a FB71     	 strb r3,[r7,#7]
 1501 051c 1346     	 mov r3,r2
 1502 051e BB71     	 strb r3,[r7,#6]
 1503              	.LBB265:
 195:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*Saving the current interrupt status & disabling the global interrupt
 196:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 **/
 197:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	ENTER_TRX_CRITICAL_REGION();
 1504              	 .loc 9 197 0
 1505 0520 FFF7A0FD 	 bl cpu_irq_save
 1506 0524 0346     	 mov r3,r0
 1507 0526 FB73     	 strb r3,[r7,#15]
 198:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 199:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Prepare the command byte */
 200:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	addr |= WRITE_ACCESS_COMMAND;
 1508              	 .loc 9 200 0
 1509 0528 FB79     	 ldrb r3,[r7,#7]
 1510 052a 63F03F03 	 orn r3,r3,#63
 1511 052e DBB2     	 uxtb r3,r3
 1512 0530 FB71     	 strb r3,[r7,#7]
 201:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 202:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
 203:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Start SPI transaction by pulling SEL low */
 204:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_slave(&master, &slave, true);
 205:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 206:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the Read command byte */
 207:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_write(&master)) {
 208:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 209:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write(&master, addr);
 210:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_write_complete(&master)) {
 211:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 212:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Dummy read since SPI RX is double buffered */
 213:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_read(&master)) {
 214:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 215:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, &dummy_read);
 216:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 217:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Write the byte in the transceiver data register */
 218:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_write(&master)) {
 219:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 220:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write(&master, data);
 221:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_write_complete(&master)) {
 222:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 223:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Dummy read since SPI RX is double buffered */
 224:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_read(&master)) {
 225:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 226:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, &dummy_read);
 227:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 228:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Stop the SPI transaction by setting SEL high */
 229:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_slave(&master, &slave, false);
 230:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #else
 231:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Start SPI transaction by pulling SEL low */
 232:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE);
 1513              	 .loc 9 232 0
 1514 0532 0E49     	 ldr r1,.L95
 1515 0534 0E48     	 ldr r0,.L95+4
 1516 0536 0F4B     	 ldr r3,.L95+8
 1517 0538 9847     	 blx r3
 1518              	.LVL9:
 233:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 234:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the Read command byte */
 235:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write_packet(AT86RFX_SPI, &addr, 1);
 1519              	 .loc 9 235 0
 1520 053a FB1D     	 adds r3,r7,#7
 1521 053c 0122     	 movs r2,#1
 1522 053e 1946     	 mov r1,r3
 1523 0540 0B48     	 ldr r0,.L95+4
 1524 0542 0D4B     	 ldr r3,.L95+12
 1525 0544 9847     	 blx r3
 1526              	.LVL10:
 236:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 237:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Write the byte in the transceiver data register */
 238:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write_packet(AT86RFX_SPI, &data, 1);
 1527              	 .loc 9 238 0
 1528 0546 BB1D     	 adds r3,r7,#6
 1529 0548 0122     	 movs r2,#1
 1530 054a 1946     	 mov r1,r3
 1531 054c 0848     	 ldr r0,.L95+4
 1532 054e 0A4B     	 ldr r3,.L95+12
 1533 0550 9847     	 blx r3
 1534              	.LVL11:
 239:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 240:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Stop the SPI transaction by setting SEL high */
 241:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_deselect_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE);
 1535              	 .loc 9 241 0
 1536 0552 0649     	 ldr r1,.L95
 1537 0554 0648     	 ldr r0,.L95+4
 1538 0556 094B     	 ldr r3,.L95+16
 1539 0558 9847     	 blx r3
 1540              	.LVL12:
 242:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
 243:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*Restoring the interrupt status which was stored & enabling the global
 244:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 *interrupt */
 245:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	LEAVE_TRX_CRITICAL_REGION();
 1541              	 .loc 9 245 0
 1542 055a FB7B     	 ldrb r3,[r7,#15]
 1543 055c 1846     	 mov r0,r3
 1544 055e FFF7ACFD 	 bl cpu_irq_restore
 1545              	.LBE265:
 246:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** }
 1546              	 .loc 9 246 0
 1547 0562 00BF     	 nop
 1548 0564 1037     	 adds r7,r7,#16
 1549              	.LCFI90:
 1550              	 .cfi_def_cfa_offset 8
 1551 0566 BD46     	 mov sp,r7
 1552              	.LCFI91:
 1553              	 .cfi_def_cfa_register 13
 1554              	 
 1555 0568 80BD     	 pop {r7,pc}
 1556              	.L96:
 1557 056a 00BF     	 .align 2
 1558              	.L95:
 1559 056c 00000000 	 .word SPI_AT86RFX_DEVICE
 1560 0570 00800040 	 .word 1073774592
 1561 0574 00000000 	 .word spi_select_device
 1562 0578 00000000 	 .word spi_write_packet
 1563 057c 00000000 	 .word spi_deselect_device
 1564              	 .cfi_endproc
 1565              	.LFE261:
 1567              	 .align 1
 1568              	 .global trx_irq_init
 1569              	 .syntax unified
 1570              	 .thumb
 1571              	 .thumb_func
 1572              	 .fpu softvfp
 1574              	trx_irq_init:
 1575              	.LFB262:
 247:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 248:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** void trx_irq_init(FUNC_PTR trx_irq_cb)
 249:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** {
 1576              	 .loc 9 249 0
 1577              	 .cfi_startproc
 1578              	 
 1579              	 
 1580              	 
 1581 0580 80B4     	 push {r7}
 1582              	.LCFI92:
 1583              	 .cfi_def_cfa_offset 4
 1584              	 .cfi_offset 7,-4
 1585 0582 83B0     	 sub sp,sp,#12
 1586              	.LCFI93:
 1587              	 .cfi_def_cfa_offset 16
 1588 0584 00AF     	 add r7,sp,#0
 1589              	.LCFI94:
 1590              	 .cfi_def_cfa_register 7
 1591 0586 7860     	 str r0,[r7,#4]
 250:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*
 251:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 * Set the handler function.
 252:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 * The handler is set before enabling the interrupt to prepare for
 253:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 *spurious
 254:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 * interrupts, that can pop up the moment they are enabled
 255:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 */
 256:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	irq_hdl_trx = (irq_handler_t)trx_irq_cb;
 1592              	 .loc 9 256 0
 1593 0588 7B68     	 ldr r3,[r7,#4]
 1594 058a 034A     	 ldr r2,.L98
 1595 058c 1360     	 str r3,[r2]
 257:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** }
 1596              	 .loc 9 257 0
 1597 058e 00BF     	 nop
 1598 0590 0C37     	 adds r7,r7,#12
 1599              	.LCFI95:
 1600              	 .cfi_def_cfa_offset 4
 1601 0592 BD46     	 mov sp,r7
 1602              	.LCFI96:
 1603              	 .cfi_def_cfa_register 13
 1604              	 
 1605 0594 80BC     	 pop {r7}
 1606              	.LCFI97:
 1607              	 .cfi_restore 7
 1608              	 .cfi_def_cfa_offset 0
 1609 0596 7047     	 bx lr
 1610              	.L99:
 1611              	 .align 2
 1612              	.L98:
 1613 0598 00000000 	 .word irq_hdl_trx
 1614              	 .cfi_endproc
 1615              	.LFE262:
 1617              	 .align 1
 1618              	 .global trx_bit_read
 1619              	 .syntax unified
 1620              	 .thumb
 1621              	 .thumb_func
 1622              	 .fpu softvfp
 1624              	trx_bit_read:
 1625              	.LFB263:
 258:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 259:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** uint8_t trx_bit_read(uint8_t addr, uint8_t mask, uint8_t pos)
 260:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** {
 1626              	 .loc 9 260 0
 1627              	 .cfi_startproc
 1628              	 
 1629              	 
 1630 059c 80B5     	 push {r7,lr}
 1631              	.LCFI98:
 1632              	 .cfi_def_cfa_offset 8
 1633              	 .cfi_offset 7,-8
 1634              	 .cfi_offset 14,-4
 1635 059e 84B0     	 sub sp,sp,#16
 1636              	.LCFI99:
 1637              	 .cfi_def_cfa_offset 24
 1638 05a0 00AF     	 add r7,sp,#0
 1639              	.LCFI100:
 1640              	 .cfi_def_cfa_register 7
 1641 05a2 0346     	 mov r3,r0
 1642 05a4 FB71     	 strb r3,[r7,#7]
 1643 05a6 0B46     	 mov r3,r1
 1644 05a8 BB71     	 strb r3,[r7,#6]
 1645 05aa 1346     	 mov r3,r2
 1646 05ac 7B71     	 strb r3,[r7,#5]
 261:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	uint8_t ret;
 262:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	ret = trx_reg_read(addr);
 1647              	 .loc 9 262 0
 1648 05ae FB79     	 ldrb r3,[r7,#7]
 1649 05b0 1846     	 mov r0,r3
 1650 05b2 FFF7FEFF 	 bl trx_reg_read
 1651 05b6 0346     	 mov r3,r0
 1652 05b8 FB73     	 strb r3,[r7,#15]
 263:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	ret &= mask;
 1653              	 .loc 9 263 0
 1654 05ba FA7B     	 ldrb r2,[r7,#15]
 1655 05bc BB79     	 ldrb r3,[r7,#6]
 1656 05be 1340     	 ands r3,r3,r2
 1657 05c0 FB73     	 strb r3,[r7,#15]
 264:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	ret >>= pos;
 1658              	 .loc 9 264 0
 1659 05c2 FA7B     	 ldrb r2,[r7,#15]
 1660 05c4 7B79     	 ldrb r3,[r7,#5]
 1661 05c6 42FA03F3 	 asr r3,r2,r3
 1662 05ca FB73     	 strb r3,[r7,#15]
 265:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	return ret;
 1663              	 .loc 9 265 0
 1664 05cc FB7B     	 ldrb r3,[r7,#15]
 266:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** }
 1665              	 .loc 9 266 0
 1666 05ce 1846     	 mov r0,r3
 1667 05d0 1037     	 adds r7,r7,#16
 1668              	.LCFI101:
 1669              	 .cfi_def_cfa_offset 8
 1670 05d2 BD46     	 mov sp,r7
 1671              	.LCFI102:
 1672              	 .cfi_def_cfa_register 13
 1673              	 
 1674 05d4 80BD     	 pop {r7,pc}
 1675              	 .cfi_endproc
 1676              	.LFE263:
 1678              	 .align 1
 1679              	 .global trx_bit_write
 1680              	 .syntax unified
 1681              	 .thumb
 1682              	 .thumb_func
 1683              	 .fpu softvfp
 1685              	trx_bit_write:
 1686              	.LFB264:
 267:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 268:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** void trx_bit_write(uint8_t reg_addr, uint8_t mask, uint8_t pos,
 269:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		uint8_t new_value)
 270:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** {
 1687              	 .loc 9 270 0
 1688              	 .cfi_startproc
 1689              	 
 1690              	 
 1691 05d6 90B5     	 push {r4,r7,lr}
 1692              	.LCFI103:
 1693              	 .cfi_def_cfa_offset 12
 1694              	 .cfi_offset 4,-12
 1695              	 .cfi_offset 7,-8
 1696              	 .cfi_offset 14,-4
 1697 05d8 85B0     	 sub sp,sp,#20
 1698              	.LCFI104:
 1699              	 .cfi_def_cfa_offset 32
 1700 05da 00AF     	 add r7,sp,#0
 1701              	.LCFI105:
 1702              	 .cfi_def_cfa_register 7
 1703 05dc 0446     	 mov r4,r0
 1704 05de 0846     	 mov r0,r1
 1705 05e0 1146     	 mov r1,r2
 1706 05e2 1A46     	 mov r2,r3
 1707 05e4 2346     	 mov r3,r4
 1708 05e6 FB71     	 strb r3,[r7,#7]
 1709 05e8 0346     	 mov r3,r0
 1710 05ea BB71     	 strb r3,[r7,#6]
 1711 05ec 0B46     	 mov r3,r1
 1712 05ee 7B71     	 strb r3,[r7,#5]
 1713 05f0 1346     	 mov r3,r2
 1714 05f2 3B71     	 strb r3,[r7,#4]
 271:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	uint8_t current_reg_value;
 272:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	current_reg_value = trx_reg_read(reg_addr);
 1715              	 .loc 9 272 0
 1716 05f4 FB79     	 ldrb r3,[r7,#7]
 1717 05f6 1846     	 mov r0,r3
 1718 05f8 FFF7FEFF 	 bl trx_reg_read
 1719 05fc 0346     	 mov r3,r0
 1720 05fe FB73     	 strb r3,[r7,#15]
 273:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	current_reg_value &= ~mask;
 1721              	 .loc 9 273 0
 1722 0600 97F90630 	 ldrsb r3,[r7,#6]
 1723 0604 DB43     	 mvns r3,r3
 1724 0606 5AB2     	 sxtb r2,r3
 1725 0608 97F90F30 	 ldrsb r3,[r7,#15]
 1726 060c 1340     	 ands r3,r3,r2
 1727 060e 5BB2     	 sxtb r3,r3
 1728 0610 FB73     	 strb r3,[r7,#15]
 274:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	new_value <<= pos;
 1729              	 .loc 9 274 0
 1730 0612 3A79     	 ldrb r2,[r7,#4]
 1731 0614 7B79     	 ldrb r3,[r7,#5]
 1732 0616 02FA03F3 	 lsl r3,r2,r3
 1733 061a 3B71     	 strb r3,[r7,#4]
 275:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	new_value &= mask;
 1734              	 .loc 9 275 0
 1735 061c 3A79     	 ldrb r2,[r7,#4]
 1736 061e BB79     	 ldrb r3,[r7,#6]
 1737 0620 1340     	 ands r3,r3,r2
 1738 0622 3B71     	 strb r3,[r7,#4]
 276:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	new_value |= current_reg_value;
 1739              	 .loc 9 276 0
 1740 0624 3A79     	 ldrb r2,[r7,#4]
 1741 0626 FB7B     	 ldrb r3,[r7,#15]
 1742 0628 1343     	 orrs r3,r3,r2
 1743 062a 3B71     	 strb r3,[r7,#4]
 277:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	trx_reg_write(reg_addr, new_value);
 1744              	 .loc 9 277 0
 1745 062c 3A79     	 ldrb r2,[r7,#4]
 1746 062e FB79     	 ldrb r3,[r7,#7]
 1747 0630 1146     	 mov r1,r2
 1748 0632 1846     	 mov r0,r3
 1749 0634 FFF7FEFF 	 bl trx_reg_write
 278:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** }
 1750              	 .loc 9 278 0
 1751 0638 00BF     	 nop
 1752 063a 1437     	 adds r7,r7,#20
 1753              	.LCFI106:
 1754              	 .cfi_def_cfa_offset 12
 1755 063c BD46     	 mov sp,r7
 1756              	.LCFI107:
 1757              	 .cfi_def_cfa_register 13
 1758              	 
 1759 063e 90BD     	 pop {r4,r7,pc}
 1760              	 .cfi_endproc
 1761              	.LFE264:
 1763              	 .align 1
 1764              	 .global trx_frame_read
 1765              	 .syntax unified
 1766              	 .thumb
 1767              	 .thumb_func
 1768              	 .fpu softvfp
 1770              	trx_frame_read:
 1771              	.LFB265:
 279:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 280:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** void trx_frame_read(uint8_t *data, uint8_t length)
 281:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** {
 1772              	 .loc 9 281 0
 1773              	 .cfi_startproc
 1774              	 
 1775              	 
 1776 0640 80B5     	 push {r7,lr}
 1777              	.LCFI108:
 1778              	 .cfi_def_cfa_offset 8
 1779              	 .cfi_offset 7,-8
 1780              	 .cfi_offset 14,-4
 1781 0642 84B0     	 sub sp,sp,#16
 1782              	.LCFI109:
 1783              	 .cfi_def_cfa_offset 24
 1784 0644 00AF     	 add r7,sp,#0
 1785              	.LCFI110:
 1786              	 .cfi_def_cfa_register 7
 1787 0646 7860     	 str r0,[r7,#4]
 1788 0648 0B46     	 mov r3,r1
 1789 064a FB70     	 strb r3,[r7,#3]
 1790              	.LBB266:
 282:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*Saving the current interrupt status & disabling the global interrupt
 283:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 **/
 284:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	ENTER_TRX_CRITICAL_REGION();
 1791              	 .loc 9 284 0
 1792 064c FFF70AFD 	 bl cpu_irq_save
 1793 0650 0346     	 mov r3,r0
 1794 0652 FB73     	 strb r3,[r7,#15]
 285:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 286:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
 287:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	uint16_t temp;
 288:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Start SPI transaction by pulling SEL low */
 289:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_slave(&master, &slave, true);
 290:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 291:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	temp = TRX_CMD_FR;
 292:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 293:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the command byte */
 294:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_write(&master)) {
 295:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 296:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write(&master, temp);
 297:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_write_complete(&master)) {
 298:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 299:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Dummy read since SPI RX is double buffered */
 300:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_read(&master)) {
 301:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 302:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, &dummy_read);
 303:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 304:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (length--) {
 305:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_ready_to_write(&master)) {
 306:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 307:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		spi_write(&master, 0);
 308:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_write_complete(&master)) {
 309:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 310:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		/* Dummy read since SPI RX is double buffered */
 311:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_ready_to_read(&master)) {
 312:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 313:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		spi_read(&master, &temp);
 314:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		*data = temp;
 315:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		data++;
 316:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 317:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 318:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Stop the SPI transaction by setting SEL high */
 319:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_slave(&master, &slave, false);
 320:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #else
 321:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	uint8_t temp;
 322:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Start SPI transaction by pulling SEL low */
 323:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE);
 1795              	 .loc 9 323 0
 1796 0654 0F49     	 ldr r1,.L104
 1797 0656 1048     	 ldr r0,.L104+4
 1798 0658 104B     	 ldr r3,.L104+8
 1799 065a 9847     	 blx r3
 1800              	.LVL13:
 324:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 325:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	temp = TRX_CMD_FR;
 1801              	 .loc 9 325 0
 1802 065c 2023     	 movs r3,#32
 1803 065e BB73     	 strb r3,[r7,#14]
 326:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 327:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the command byte */
 328:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write_packet(AT86RFX_SPI, &temp, 1);
 1804              	 .loc 9 328 0
 1805 0660 07F10E03 	 add r3,r7,#14
 1806 0664 0122     	 movs r2,#1
 1807 0666 1946     	 mov r1,r3
 1808 0668 0B48     	 ldr r0,.L104+4
 1809 066a 0D4B     	 ldr r3,.L104+12
 1810 066c 9847     	 blx r3
 1811              	.LVL14:
 329:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 330:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read_packet(AT86RFX_SPI, data, length);
 1812              	 .loc 9 330 0
 1813 066e FB78     	 ldrb r3,[r7,#3]
 1814 0670 1A46     	 mov r2,r3
 1815 0672 7968     	 ldr r1,[r7,#4]
 1816 0674 0848     	 ldr r0,.L104+4
 1817 0676 0B4B     	 ldr r3,.L104+16
 1818 0678 9847     	 blx r3
 1819              	.LVL15:
 331:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 332:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Stop the SPI transaction by setting SEL high */
 333:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_deselect_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE);
 1820              	 .loc 9 333 0
 1821 067a 0649     	 ldr r1,.L104
 1822 067c 0648     	 ldr r0,.L104+4
 1823 067e 0A4B     	 ldr r3,.L104+20
 1824 0680 9847     	 blx r3
 1825              	.LVL16:
 334:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
 335:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*Restoring the interrupt status which was stored & enabling the global
 336:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 *interrupt */
 337:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	LEAVE_TRX_CRITICAL_REGION();
 1826              	 .loc 9 337 0
 1827 0682 FB7B     	 ldrb r3,[r7,#15]
 1828 0684 1846     	 mov r0,r3
 1829 0686 FFF718FD 	 bl cpu_irq_restore
 1830              	.LBE266:
 338:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** }
 1831              	 .loc 9 338 0
 1832 068a 00BF     	 nop
 1833 068c 1037     	 adds r7,r7,#16
 1834              	.LCFI111:
 1835              	 .cfi_def_cfa_offset 8
 1836 068e BD46     	 mov sp,r7
 1837              	.LCFI112:
 1838              	 .cfi_def_cfa_register 13
 1839              	 
 1840 0690 80BD     	 pop {r7,pc}
 1841              	.L105:
 1842 0692 00BF     	 .align 2
 1843              	.L104:
 1844 0694 00000000 	 .word SPI_AT86RFX_DEVICE
 1845 0698 00800040 	 .word 1073774592
 1846 069c 00000000 	 .word spi_select_device
 1847 06a0 00000000 	 .word spi_write_packet
 1848 06a4 00000000 	 .word spi_read_packet
 1849 06a8 00000000 	 .word spi_deselect_device
 1850              	 .cfi_endproc
 1851              	.LFE265:
 1853              	 .align 1
 1854              	 .global trx_frame_write
 1855              	 .syntax unified
 1856              	 .thumb
 1857              	 .thumb_func
 1858              	 .fpu softvfp
 1860              	trx_frame_write:
 1861              	.LFB266:
 339:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 340:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** void trx_frame_write(uint8_t *data, uint8_t length)
 341:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** {
 1862              	 .loc 9 341 0
 1863              	 .cfi_startproc
 1864              	 
 1865              	 
 1866 06ac 80B5     	 push {r7,lr}
 1867              	.LCFI113:
 1868              	 .cfi_def_cfa_offset 8
 1869              	 .cfi_offset 7,-8
 1870              	 .cfi_offset 14,-4
 1871 06ae 84B0     	 sub sp,sp,#16
 1872              	.LCFI114:
 1873              	 .cfi_def_cfa_offset 24
 1874 06b0 00AF     	 add r7,sp,#0
 1875              	.LCFI115:
 1876              	 .cfi_def_cfa_register 7
 1877 06b2 7860     	 str r0,[r7,#4]
 1878 06b4 0B46     	 mov r3,r1
 1879 06b6 FB70     	 strb r3,[r7,#3]
 1880              	.LBB267:
 342:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	uint8_t temp;
 343:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*Saving the current interrupt status & disabling the global interrupt
 344:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 **/
 345:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	ENTER_TRX_CRITICAL_REGION();
 1881              	 .loc 9 345 0
 1882 06b8 FFF7D4FC 	 bl cpu_irq_save
 1883 06bc 0346     	 mov r3,r0
 1884 06be FB73     	 strb r3,[r7,#15]
 346:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 347:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
 348:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Start SPI transaction by pulling SEL low */
 349:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_slave(&master, &slave, true);
 350:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 351:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	temp = TRX_CMD_FW;
 352:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 353:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the command byte */
 354:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_write(&master)) {
 355:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 356:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write(&master, temp);
 357:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_write_complete(&master)) {
 358:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 359:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Dummy read since SPI RX is double buffered */
 360:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_read(&master)) {
 361:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 362:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, &dummy_read);
 363:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (length--) {
 364:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_ready_to_write(&master)) {
 365:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 366:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		spi_write(&master, *data++);
 367:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_write_complete(&master)) {
 368:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 369:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		/* Dummy read since SPI RX is double buffered */
 370:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_ready_to_read(&master)) {
 371:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 372:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		spi_read(&master, &dummy_read);
 373:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 374:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 375:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Stop the SPI transaction by setting SEL high */
 376:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_slave(&master, &slave, false);
 377:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #else
 378:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Start SPI transaction by pulling SEL low */
 379:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE);
 1885              	 .loc 9 379 0
 1886 06c0 0F49     	 ldr r1,.L107
 1887 06c2 1048     	 ldr r0,.L107+4
 1888 06c4 104B     	 ldr r3,.L107+8
 1889 06c6 9847     	 blx r3
 1890              	.LVL17:
 380:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 381:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	temp = TRX_CMD_FW;
 1891              	 .loc 9 381 0
 1892 06c8 6023     	 movs r3,#96
 1893 06ca BB73     	 strb r3,[r7,#14]
 382:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 383:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the command byte */
 384:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write_packet(AT86RFX_SPI, &temp, 1);
 1894              	 .loc 9 384 0
 1895 06cc 07F10E03 	 add r3,r7,#14
 1896 06d0 0122     	 movs r2,#1
 1897 06d2 1946     	 mov r1,r3
 1898 06d4 0B48     	 ldr r0,.L107+4
 1899 06d6 0D4B     	 ldr r3,.L107+12
 1900 06d8 9847     	 blx r3
 1901              	.LVL18:
 385:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write_packet(AT86RFX_SPI, data, length);
 1902              	 .loc 9 385 0
 1903 06da FB78     	 ldrb r3,[r7,#3]
 1904 06dc 1A46     	 mov r2,r3
 1905 06de 7968     	 ldr r1,[r7,#4]
 1906 06e0 0848     	 ldr r0,.L107+4
 1907 06e2 0A4B     	 ldr r3,.L107+12
 1908 06e4 9847     	 blx r3
 1909              	.LVL19:
 386:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 387:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Stop the SPI transaction by setting SEL high */
 388:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_deselect_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE);
 1910              	 .loc 9 388 0
 1911 06e6 0649     	 ldr r1,.L107
 1912 06e8 0648     	 ldr r0,.L107+4
 1913 06ea 094B     	 ldr r3,.L107+16
 1914 06ec 9847     	 blx r3
 1915              	.LVL20:
 389:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
 390:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*Restoring the interrupt status which was stored & enabling the global
 391:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 *interrupt */
 392:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	LEAVE_TRX_CRITICAL_REGION();
 1916              	 .loc 9 392 0
 1917 06ee FB7B     	 ldrb r3,[r7,#15]
 1918 06f0 1846     	 mov r0,r3
 1919 06f2 FFF7E2FC 	 bl cpu_irq_restore
 1920              	.LBE267:
 393:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** }
 1921              	 .loc 9 393 0
 1922 06f6 00BF     	 nop
 1923 06f8 1037     	 adds r7,r7,#16
 1924              	.LCFI116:
 1925              	 .cfi_def_cfa_offset 8
 1926 06fa BD46     	 mov sp,r7
 1927              	.LCFI117:
 1928              	 .cfi_def_cfa_register 13
 1929              	 
 1930 06fc 80BD     	 pop {r7,pc}
 1931              	.L108:
 1932 06fe 00BF     	 .align 2
 1933              	.L107:
 1934 0700 00000000 	 .word SPI_AT86RFX_DEVICE
 1935 0704 00800040 	 .word 1073774592
 1936 0708 00000000 	 .word spi_select_device
 1937 070c 00000000 	 .word spi_write_packet
 1938 0710 00000000 	 .word spi_deselect_device
 1939              	 .cfi_endproc
 1940              	.LFE266:
 1942              	 .align 1
 1943              	 .global trx_sram_write
 1944              	 .syntax unified
 1945              	 .thumb
 1946              	 .thumb_func
 1947              	 .fpu softvfp
 1949              	trx_sram_write:
 1950              	.LFB267:
 394:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 395:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** /**
 396:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * @brief Writes data into SRAM of the transceiver
 397:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
 398:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * This function writes data into the SRAM of the transceiver
 399:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
 400:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * @param addr Start address in the SRAM for the write operation
 401:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * @param data Pointer to the data to be written into SRAM
 402:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * @param length Number of bytes to be written into SRAM
 403:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  */
 404:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** void trx_sram_write(uint8_t addr, uint8_t *data, uint8_t length)
 405:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** {
 1951              	 .loc 9 405 0
 1952              	 .cfi_startproc
 1953              	 
 1954              	 
 1955 0714 80B5     	 push {r7,lr}
 1956              	.LCFI118:
 1957              	 .cfi_def_cfa_offset 8
 1958              	 .cfi_offset 7,-8
 1959              	 .cfi_offset 14,-4
 1960 0716 84B0     	 sub sp,sp,#16
 1961              	.LCFI119:
 1962              	 .cfi_def_cfa_offset 24
 1963 0718 00AF     	 add r7,sp,#0
 1964              	.LCFI120:
 1965              	 .cfi_def_cfa_register 7
 1966 071a 0346     	 mov r3,r0
 1967 071c 3960     	 str r1,[r7]
 1968 071e FB71     	 strb r3,[r7,#7]
 1969 0720 1346     	 mov r3,r2
 1970 0722 BB71     	 strb r3,[r7,#6]
 1971              	.LBB268:
 406:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	uint8_t temp;
 407:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*Saving the current interrupt status & disabling the global interrupt
 408:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 **/
 409:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	ENTER_TRX_CRITICAL_REGION();
 1972              	 .loc 9 409 0
 1973 0724 FFF79EFC 	 bl cpu_irq_save
 1974 0728 0346     	 mov r3,r0
 1975 072a FB73     	 strb r3,[r7,#15]
 410:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 411:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
 412:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Start SPI transaction by pulling SEL low */
 413:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_slave(&master, &slave, true);
 414:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 415:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the command byte */
 416:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	temp = TRX_CMD_SW;
 417:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 418:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the command byte */
 419:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_write(&master)) {
 420:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 421:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write(&master, temp);
 422:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_write_complete(&master)) {
 423:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 424:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Dummy read since SPI RX is double buffered */
 425:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_read(&master)) {
 426:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 427:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, &dummy_read);
 428:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 429:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the address from which the write operation should start */
 430:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_write(&master)) {
 431:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 432:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write(&master, addr);
 433:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_write_complete(&master)) {
 434:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 435:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Dummy read since SPI RX is double buffered */
 436:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_read(&master)) {
 437:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 438:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, &dummy_read);
 439:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 440:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (length--) {
 441:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_ready_to_write(&master)) {
 442:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 443:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		spi_write(&master, *data++);
 444:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_write_complete(&master)) {
 445:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 446:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		/* Dummy read since SPI RX is double buffered */
 447:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_ready_to_read(&master)) {
 448:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 449:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		spi_read(&master, &dummy_read);
 450:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 451:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 452:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Stop the SPI transaction by setting SEL high */
 453:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_slave(&master, &slave, false);
 454:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #else
 455:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Start SPI transaction by pulling SEL low */
 456:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE);
 1976              	 .loc 9 456 0
 1977 072c 1949     	 ldr r1,.L112
 1978 072e 1A48     	 ldr r0,.L112+4
 1979 0730 1A4B     	 ldr r3,.L112+8
 1980 0732 9847     	 blx r3
 1981              	.LVL21:
 457:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 458:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the command byte */
 459:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	temp = TRX_CMD_SW;
 1982              	 .loc 9 459 0
 1983 0734 4023     	 movs r3,#64
 1984 0736 BB73     	 strb r3,[r7,#14]
 460:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 461:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the command byte */
 462:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write_packet(AT86RFX_SPI, &temp, 1);
 1985              	 .loc 9 462 0
 1986 0738 07F10E03 	 add r3,r7,#14
 1987 073c 0122     	 movs r2,#1
 1988 073e 1946     	 mov r1,r3
 1989 0740 1548     	 ldr r0,.L112+4
 1990 0742 174B     	 ldr r3,.L112+12
 1991 0744 9847     	 blx r3
 1992              	.LVL22:
 463:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_tx_empty(AT86RFX_SPI)) {
 1993              	 .loc 9 463 0
 1994 0746 00BF     	 nop
 1995              	.L110:
 1996              	 .loc 9 463 0 is_stmt 0 discriminator 1
 1997 0748 1348     	 ldr r0,.L112+4
 1998 074a FFF7E5FC 	 bl spi_is_tx_empty
 1999 074e 0346     	 mov r3,r0
 2000 0750 002B     	 cmp r3,#0
 2001 0752 F9D0     	 beq .L110
 464:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 465:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 466:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the address from which the write operation should start */
 467:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write_packet(AT86RFX_SPI, &addr, 1);
 2002              	 .loc 9 467 0 is_stmt 1
 2003 0754 FB1D     	 adds r3,r7,#7
 2004 0756 0122     	 movs r2,#1
 2005 0758 1946     	 mov r1,r3
 2006 075a 0F48     	 ldr r0,.L112+4
 2007 075c 104B     	 ldr r3,.L112+12
 2008 075e 9847     	 blx r3
 2009              	.LVL23:
 468:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_tx_empty(AT86RFX_SPI)) {
 2010              	 .loc 9 468 0
 2011 0760 00BF     	 nop
 2012              	.L111:
 2013              	 .loc 9 468 0 is_stmt 0 discriminator 1
 2014 0762 0D48     	 ldr r0,.L112+4
 2015 0764 FFF7D8FC 	 bl spi_is_tx_empty
 2016 0768 0346     	 mov r3,r0
 2017 076a 002B     	 cmp r3,#0
 2018 076c F9D0     	 beq .L111
 469:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 470:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 471:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write_packet(AT86RFX_SPI, data, length);
 2019              	 .loc 9 471 0 is_stmt 1
 2020 076e BB79     	 ldrb r3,[r7,#6]
 2021 0770 1A46     	 mov r2,r3
 2022 0772 3968     	 ldr r1,[r7]
 2023 0774 0848     	 ldr r0,.L112+4
 2024 0776 0A4B     	 ldr r3,.L112+12
 2025 0778 9847     	 blx r3
 2026              	.LVL24:
 472:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 473:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Stop the SPI transaction by setting SEL high */
 474:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_deselect_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE);
 2027              	 .loc 9 474 0
 2028 077a 0649     	 ldr r1,.L112
 2029 077c 0648     	 ldr r0,.L112+4
 2030 077e 094B     	 ldr r3,.L112+16
 2031 0780 9847     	 blx r3
 2032              	.LVL25:
 475:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
 476:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*Restoring the interrupt status which was stored & enabling the global
 477:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 *interrupt */
 478:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	LEAVE_TRX_CRITICAL_REGION();
 2033              	 .loc 9 478 0
 2034 0782 FB7B     	 ldrb r3,[r7,#15]
 2035 0784 1846     	 mov r0,r3
 2036 0786 FFF798FC 	 bl cpu_irq_restore
 2037              	.LBE268:
 479:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** }
 2038              	 .loc 9 479 0
 2039 078a 00BF     	 nop
 2040 078c 1037     	 adds r7,r7,#16
 2041              	.LCFI121:
 2042              	 .cfi_def_cfa_offset 8
 2043 078e BD46     	 mov sp,r7
 2044              	.LCFI122:
 2045              	 .cfi_def_cfa_register 13
 2046              	 
 2047 0790 80BD     	 pop {r7,pc}
 2048              	.L113:
 2049 0792 00BF     	 .align 2
 2050              	.L112:
 2051 0794 00000000 	 .word SPI_AT86RFX_DEVICE
 2052 0798 00800040 	 .word 1073774592
 2053 079c 00000000 	 .word spi_select_device
 2054 07a0 00000000 	 .word spi_write_packet
 2055 07a4 00000000 	 .word spi_deselect_device
 2056              	 .cfi_endproc
 2057              	.LFE267:
 2059              	 .align 1
 2060              	 .global trx_sram_read
 2061              	 .syntax unified
 2062              	 .thumb
 2063              	 .thumb_func
 2064              	 .fpu softvfp
 2066              	trx_sram_read:
 2067              	.LFB268:
 480:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 481:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** /**
 482:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * @brief Reads data from SRAM of the transceiver
 483:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
 484:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * This function reads from the SRAM of the transceiver
 485:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
 486:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * @param[in] addr Start address in SRAM for read operation
 487:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * @param[out] data Pointer to the location where data stored
 488:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * @param[in] length Number of bytes to be read from SRAM
 489:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  */
 490:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** void trx_sram_read(uint8_t addr, uint8_t *data, uint8_t length)
 491:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** {
 2068              	 .loc 9 491 0
 2069              	 .cfi_startproc
 2070              	 
 2071              	 
 2072 07a8 80B5     	 push {r7,lr}
 2073              	.LCFI123:
 2074              	 .cfi_def_cfa_offset 8
 2075              	 .cfi_offset 7,-8
 2076              	 .cfi_offset 14,-4
 2077 07aa 84B0     	 sub sp,sp,#16
 2078              	.LCFI124:
 2079              	 .cfi_def_cfa_offset 24
 2080 07ac 00AF     	 add r7,sp,#0
 2081              	.LCFI125:
 2082              	 .cfi_def_cfa_register 7
 2083 07ae 0346     	 mov r3,r0
 2084 07b0 3960     	 str r1,[r7]
 2085 07b2 FB71     	 strb r3,[r7,#7]
 2086 07b4 1346     	 mov r3,r2
 2087 07b6 BB71     	 strb r3,[r7,#6]
 492:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	delay_us(1); /* wap_rf4ce */
 2088              	 .loc 9 492 0
 2089 07b8 0420     	 movs r0,#4
 2090 07ba 1C4B     	 ldr r3,.L117
 2091 07bc 9847     	 blx r3
 2092              	.LVL26:
 2093              	.LBB269:
 493:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 494:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*Saving the current interrupt status & disabling the global interrupt
 495:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 **/
 496:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	ENTER_TRX_CRITICAL_REGION();
 2094              	 .loc 9 496 0
 2095 07be FFF751FC 	 bl cpu_irq_save
 2096 07c2 0346     	 mov r3,r0
 2097 07c4 FB73     	 strb r3,[r7,#15]
 497:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
 498:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	uint16_t temp;
 499:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Start SPI transaction by pulling SEL low */
 500:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_slave(&master, &slave, true);
 501:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 502:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	temp = TRX_CMD_SR;
 503:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 504:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the command byte */
 505:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_write(&master)) {
 506:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 507:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write(&master, temp);
 508:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_write_complete(&master)) {
 509:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 510:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Dummy read since SPI RX is double buffered */
 511:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_read(&master)) {
 512:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 513:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, &dummy_read);
 514:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 515:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the address from which the read operation should start */
 516:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_write(&master)) {
 517:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 518:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write(&master, addr);
 519:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_write_complete(&master)) {
 520:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 521:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Dummy read since SPI RX is double buffered */
 522:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_read(&master)) {
 523:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 524:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, &dummy_read);
 525:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 526:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Upload the received byte in the user provided location */
 527:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (length--) {
 528:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_ready_to_write(&master)) {
 529:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 530:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		spi_write(&master, 0);
 531:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_write_complete(&master)) {
 532:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 533:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		/* Dummy read since SPI RX is double buffered */
 534:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_ready_to_read(&master)) {
 535:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 536:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		spi_read(&master, &temp);
 537:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		*data = temp;
 538:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		data++;
 539:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 540:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 541:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Stop the SPI transaction by setting SEL high */
 542:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_slave(&master, &slave, false);
 543:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #else
 544:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	uint8_t temp;
 545:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Start SPI transaction by pulling SEL low */
 546:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE);
 2098              	 .loc 9 546 0
 2099 07c6 1A49     	 ldr r1,.L117+4
 2100 07c8 1A48     	 ldr r0,.L117+8
 2101 07ca 1B4B     	 ldr r3,.L117+12
 2102 07cc 9847     	 blx r3
 2103              	.LVL27:
 547:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 548:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	temp = TRX_CMD_SR;
 2104              	 .loc 9 548 0
 2105 07ce 0023     	 movs r3,#0
 2106 07d0 BB73     	 strb r3,[r7,#14]
 549:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 550:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the command byte */
 551:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write_packet(AT86RFX_SPI, &temp, 1);
 2107              	 .loc 9 551 0
 2108 07d2 07F10E03 	 add r3,r7,#14
 2109 07d6 0122     	 movs r2,#1
 2110 07d8 1946     	 mov r1,r3
 2111 07da 1648     	 ldr r0,.L117+8
 2112 07dc 174B     	 ldr r3,.L117+16
 2113 07de 9847     	 blx r3
 2114              	.LVL28:
 552:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_tx_empty(AT86RFX_SPI)) {
 2115              	 .loc 9 552 0
 2116 07e0 00BF     	 nop
 2117              	.L115:
 2118              	 .loc 9 552 0 is_stmt 0 discriminator 1
 2119 07e2 1448     	 ldr r0,.L117+8
 2120 07e4 FFF798FC 	 bl spi_is_tx_empty
 2121 07e8 0346     	 mov r3,r0
 2122 07ea 002B     	 cmp r3,#0
 2123 07ec F9D0     	 beq .L115
 553:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 554:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 555:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the command byte */
 556:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write_packet(AT86RFX_SPI, &addr, 1);
 2124              	 .loc 9 556 0 is_stmt 1
 2125 07ee FB1D     	 adds r3,r7,#7
 2126 07f0 0122     	 movs r2,#1
 2127 07f2 1946     	 mov r1,r3
 2128 07f4 0F48     	 ldr r0,.L117+8
 2129 07f6 114B     	 ldr r3,.L117+16
 2130 07f8 9847     	 blx r3
 2131              	.LVL29:
 557:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_tx_empty(AT86RFX_SPI)) {
 2132              	 .loc 9 557 0
 2133 07fa 00BF     	 nop
 2134              	.L116:
 2135              	 .loc 9 557 0 is_stmt 0 discriminator 1
 2136 07fc 0D48     	 ldr r0,.L117+8
 2137 07fe FFF78BFC 	 bl spi_is_tx_empty
 2138 0802 0346     	 mov r3,r0
 2139 0804 002B     	 cmp r3,#0
 2140 0806 F9D0     	 beq .L116
 558:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 559:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 560:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the address from which the read operation should start */
 561:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Upload the received byte in the user provided location */
 562:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read_packet(AT86RFX_SPI, data, length);
 2141              	 .loc 9 562 0 is_stmt 1
 2142 0808 BB79     	 ldrb r3,[r7,#6]
 2143 080a 1A46     	 mov r2,r3
 2144 080c 3968     	 ldr r1,[r7]
 2145 080e 0948     	 ldr r0,.L117+8
 2146 0810 0B4B     	 ldr r3,.L117+20
 2147 0812 9847     	 blx r3
 2148              	.LVL30:
 563:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 564:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Stop the SPI transaction by setting SEL high */
 565:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_deselect_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE);
 2149              	 .loc 9 565 0
 2150 0814 0649     	 ldr r1,.L117+4
 2151 0816 0748     	 ldr r0,.L117+8
 2152 0818 0A4B     	 ldr r3,.L117+24
 2153 081a 9847     	 blx r3
 2154              	.LVL31:
 566:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
 567:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/*Restoring the interrupt status which was stored & enabling the global
 568:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	 *interrupt */
 569:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	LEAVE_TRX_CRITICAL_REGION();
 2155              	 .loc 9 569 0
 2156 081c FB7B     	 ldrb r3,[r7,#15]
 2157 081e 1846     	 mov r0,r3
 2158 0820 FFF74BFC 	 bl cpu_irq_restore
 2159              	.LBE269:
 570:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** }
 2160              	 .loc 9 570 0
 2161 0824 00BF     	 nop
 2162 0826 1037     	 adds r7,r7,#16
 2163              	.LCFI126:
 2164              	 .cfi_def_cfa_offset 8
 2165 0828 BD46     	 mov sp,r7
 2166              	.LCFI127:
 2167              	 .cfi_def_cfa_register 13
 2168              	 
 2169 082a 80BD     	 pop {r7,pc}
 2170              	.L118:
 2171              	 .align 2
 2172              	.L117:
 2173 082c 00000000 	 .word portable_delay_cycles
 2174 0830 00000000 	 .word SPI_AT86RFX_DEVICE
 2175 0834 00800040 	 .word 1073774592
 2176 0838 00000000 	 .word spi_select_device
 2177 083c 00000000 	 .word spi_write_packet
 2178 0840 00000000 	 .word spi_read_packet
 2179 0844 00000000 	 .word spi_deselect_device
 2180              	 .cfi_endproc
 2181              	.LFE268:
 2183              	 .align 1
 2184              	 .global trx_aes_wrrd
 2185              	 .syntax unified
 2186              	 .thumb
 2187              	 .thumb_func
 2188              	 .fpu softvfp
 2190              	trx_aes_wrrd:
 2191              	.LFB269:
 571:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 572:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** /**
 573:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * @brief Writes and reads data into/from SRAM of the transceiver
 574:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
 575:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * This function writes data into the SRAM of the transceiver and
 576:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * simultaneously reads the bytes.
 577:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  *
 578:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * @param addr Start address in the SRAM for the write operation
 579:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * @param idata Pointer to the data written/read into/from SRAM
 580:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  * @param length Number of bytes written/read into/from SRAM
 581:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c ****  */
 582:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** void trx_aes_wrrd(uint8_t addr, uint8_t *idata, uint8_t length)
 583:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** {
 2192              	 .loc 9 583 0
 2193              	 .cfi_startproc
 2194              	 
 2195              	 
 2196 0848 80B5     	 push {r7,lr}
 2197              	.LCFI128:
 2198              	 .cfi_def_cfa_offset 8
 2199              	 .cfi_offset 7,-8
 2200              	 .cfi_offset 14,-4
 2201 084a 84B0     	 sub sp,sp,#16
 2202              	.LCFI129:
 2203              	 .cfi_def_cfa_offset 24
 2204 084c 00AF     	 add r7,sp,#0
 2205              	.LCFI130:
 2206              	 .cfi_def_cfa_register 7
 2207 084e 0346     	 mov r3,r0
 2208 0850 3960     	 str r1,[r7]
 2209 0852 FB71     	 strb r3,[r7,#7]
 2210 0854 1346     	 mov r3,r2
 2211 0856 BB71     	 strb r3,[r7,#6]
 584:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	uint8_t *odata;
 585:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
 586:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	uint16_t odata_var = 0;
 587:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
 588:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	uint8_t temp;
 589:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 590:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	delay_us(1); /* wap_rf4ce */
 2212              	 .loc 9 590 0
 2213 0858 0420     	 movs r0,#4
 2214 085a 2E4B     	 ldr r3,.L125
 2215 085c 9847     	 blx r3
 2216              	.LVL32:
 591:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 592:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	ENTER_TRX_REGION();
 2217              	 .loc 9 592 0
 2218 085e 1B20     	 movs r0,#27
 2219 0860 FFF7E6FB 	 bl NVIC_DisableIRQ
 593:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 594:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #ifdef NON_BLOCKING_SPI
 595:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (spi_state != SPI_IDLE) {
 596:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		/* wait until SPI gets available */
 597:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 598:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
 599:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
 600:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Start SPI transaction by pulling SEL low */
 601:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_slave(&master, &slave, true);
 602:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 603:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the command byte */
 604:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	temp = TRX_CMD_SW;
 605:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 606:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_write(&master)) {
 607:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 608:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write(&master, temp);
 609:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_write_complete(&master)) {
 610:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 611:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Dummy read since SPI RX is double buffered */
 612:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_read(&master)) {
 613:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 614:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, &dummy_read);
 615:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 616:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* write SRAM start address */
 617:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_write(&master)) {
 618:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 619:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write(&master, addr);
 620:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_write_complete(&master)) {
 621:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 622:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Dummy read since SPI RX is double buffered */
 623:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_read(&master)) {
 624:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 625:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, &dummy_read);
 626:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 627:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* now transfer data */
 628:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	odata = idata;
 629:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 630:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* write data byte 0 - the obtained value in SPDR is meaningless */
 631:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_write(&master)) {
 632:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 633:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write(&master, *idata++);
 634:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_write_complete(&master)) {
 635:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 636:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Dummy read since SPI RX is double buffered */
 637:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_read(&master)) {
 638:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 639:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, &dummy_read);
 640:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 641:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Reading Spi Data for the length specified */
 642:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (length > 0) {
 643:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_ready_to_write(&master)) {
 644:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 645:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		spi_write(&master, *idata++);
 646:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_write_complete(&master)) {
 647:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 648:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_ready_to_read(&master)) {
 649:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 650:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 651:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
 652:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		spi_read(&master, &odata_var);
 653:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		*odata++ = (uint8_t)odata_var;
 654:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #else
 655:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		spi_read(&master, (uint16_t *)odata++);
 656:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
 657:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		length--;
 658:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 659:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 660:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* To get the last data byte, write some dummy byte */
 661:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_write(&master)) {
 662:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 663:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write(&master, 0);
 664:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_write_complete(&master)) {
 665:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 666:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_ready_to_read(&master)) {
 667:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 668:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #if SAMD || SAMR21
 669:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, &odata_var);
 670:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	*odata = (uint8_t)odata_var;
 671:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #else
 672:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read(&master, (uint16_t *)odata);
 673:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
 674:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 675:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Stop the SPI transaction by setting SEL high */
 676:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_slave(&master, &slave, false);
 677:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #else
 678:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Start SPI transaction by pulling SEL low */
 679:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_select_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE);
 2220              	 .loc 9 679 0
 2221 0864 2C49     	 ldr r1,.L125+4
 2222 0866 2D48     	 ldr r0,.L125+8
 2223 0868 2D4B     	 ldr r3,.L125+12
 2224 086a 9847     	 blx r3
 2225              	.LVL33:
 680:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 681:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Send the command byte */
 682:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	temp = TRX_CMD_SW;
 2226              	 .loc 9 682 0
 2227 086c 4023     	 movs r3,#64
 2228 086e FB72     	 strb r3,[r7,#11]
 683:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write_packet(AT86RFX_SPI, &temp, 1);
 2229              	 .loc 9 683 0
 2230 0870 07F10B03 	 add r3,r7,#11
 2231 0874 0122     	 movs r2,#1
 2232 0876 1946     	 mov r1,r3
 2233 0878 2848     	 ldr r0,.L125+8
 2234 087a 2A4B     	 ldr r3,.L125+16
 2235 087c 9847     	 blx r3
 2236              	.LVL34:
 684:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_tx_empty(AT86RFX_SPI)) {
 2237              	 .loc 9 684 0
 2238 087e 00BF     	 nop
 2239              	.L120:
 2240              	 .loc 9 684 0 is_stmt 0 discriminator 1
 2241 0880 2648     	 ldr r0,.L125+8
 2242 0882 FFF749FC 	 bl spi_is_tx_empty
 2243 0886 0346     	 mov r3,r0
 2244 0888 002B     	 cmp r3,#0
 2245 088a F9D0     	 beq .L120
 685:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 686:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 687:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* write SRAM start address */
 688:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write_packet(AT86RFX_SPI, &addr, 1);
 2246              	 .loc 9 688 0 is_stmt 1
 2247 088c FB1D     	 adds r3,r7,#7
 2248 088e 0122     	 movs r2,#1
 2249 0890 1946     	 mov r1,r3
 2250 0892 2248     	 ldr r0,.L125+8
 2251 0894 234B     	 ldr r3,.L125+16
 2252 0896 9847     	 blx r3
 2253              	.LVL35:
 689:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (!spi_is_tx_empty(AT86RFX_SPI)) {
 2254              	 .loc 9 689 0
 2255 0898 00BF     	 nop
 2256              	.L121:
 2257              	 .loc 9 689 0 is_stmt 0 discriminator 1
 2258 089a 2048     	 ldr r0,.L125+8
 2259 089c FFF73CFC 	 bl spi_is_tx_empty
 2260 08a0 0346     	 mov r3,r0
 2261 08a2 002B     	 cmp r3,#0
 2262 08a4 F9D0     	 beq .L121
 690:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 691:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 692:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* now transfer data */
 693:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	odata = idata;
 2263              	 .loc 9 693 0 is_stmt 1
 2264 08a6 3B68     	 ldr r3,[r7]
 2265 08a8 FB60     	 str r3,[r7,#12]
 694:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 695:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* write data byte 0 - the obtained value in SPDR is meaningless */
 696:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_write_packet(AT86RFX_SPI, idata++, 1);
 2266              	 .loc 9 696 0
 2267 08aa 3B68     	 ldr r3,[r7]
 2268 08ac 5A1C     	 adds r2,r3,#1
 2269 08ae 3A60     	 str r2,[r7]
 2270 08b0 0122     	 movs r2,#1
 2271 08b2 1946     	 mov r1,r3
 2272 08b4 1948     	 ldr r0,.L125+8
 2273 08b6 1B4B     	 ldr r3,.L125+16
 2274 08b8 9847     	 blx r3
 2275              	.LVL36:
 697:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 698:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Reading Spi Data for the length specified */
 699:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	while (length > 0) {
 2276              	 .loc 9 699 0
 2277 08ba 18E0     	 b .L122
 2278              	.L124:
 700:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		spi_write_packet(AT86RFX_SPI, idata++, 1);
 2279              	 .loc 9 700 0
 2280 08bc 3B68     	 ldr r3,[r7]
 2281 08be 5A1C     	 adds r2,r3,#1
 2282 08c0 3A60     	 str r2,[r7]
 2283 08c2 0122     	 movs r2,#1
 2284 08c4 1946     	 mov r1,r3
 2285 08c6 1548     	 ldr r0,.L125+8
 2286 08c8 164B     	 ldr r3,.L125+16
 2287 08ca 9847     	 blx r3
 2288              	.LVL37:
 701:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		while (!spi_is_tx_empty(AT86RFX_SPI)) {
 2289              	 .loc 9 701 0
 2290 08cc 00BF     	 nop
 2291              	.L123:
 2292              	 .loc 9 701 0 is_stmt 0 discriminator 1
 2293 08ce 1348     	 ldr r0,.L125+8
 2294 08d0 FFF722FC 	 bl spi_is_tx_empty
 2295 08d4 0346     	 mov r3,r0
 2296 08d6 002B     	 cmp r3,#0
 2297 08d8 F9D0     	 beq .L123
 702:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		}
 703:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		spi_read_single(AT86RFX_SPI, odata++);
 2298              	 .loc 9 703 0 is_stmt 1
 2299 08da FB68     	 ldr r3,[r7,#12]
 2300 08dc 5A1C     	 adds r2,r3,#1
 2301 08de FA60     	 str r2,[r7,#12]
 2302 08e0 1946     	 mov r1,r3
 2303 08e2 0E48     	 ldr r0,.L125+8
 2304 08e4 FFF72AFC 	 bl spi_read_single
 704:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		length--;
 2305              	 .loc 9 704 0
 2306 08e8 BB79     	 ldrb r3,[r7,#6]
 2307 08ea 013B     	 subs r3,r3,#1
 2308 08ec BB71     	 strb r3,[r7,#6]
 2309              	.L122:
 699:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 		spi_write_packet(AT86RFX_SPI, idata++, 1);
 2310              	 .loc 9 699 0
 2311 08ee BB79     	 ldrb r3,[r7,#6]
 2312 08f0 002B     	 cmp r3,#0
 2313 08f2 E3D1     	 bne .L124
 705:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	}
 706:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 707:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* To get the last data byte, write some dummy byte */
 708:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_read_packet(AT86RFX_SPI, odata, 1);
 2314              	 .loc 9 708 0
 2315 08f4 0122     	 movs r2,#1
 2316 08f6 F968     	 ldr r1,[r7,#12]
 2317 08f8 0848     	 ldr r0,.L125+8
 2318 08fa 0B4B     	 ldr r3,.L125+20
 2319 08fc 9847     	 blx r3
 2320              	.LVL38:
 709:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 
 710:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	/* Stop the SPI transaction by setting SEL high */
 711:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	spi_deselect_device(AT86RFX_SPI, &SPI_AT86RFX_DEVICE);
 2321              	 .loc 9 711 0
 2322 08fe 0649     	 ldr r1,.L125+4
 2323 0900 0648     	 ldr r0,.L125+8
 2324 0902 0A4B     	 ldr r3,.L125+24
 2325 0904 9847     	 blx r3
 2326              	.LVL39:
 712:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** #endif
 713:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** 	LEAVE_TRX_REGION();
 2327              	 .loc 9 713 0
 2328 0906 1B20     	 movs r0,#27
 2329 0908 FFF77AFB 	 bl NVIC_EnableIRQ
 714:../../../stack/LwMesh/TDMA/services/trx_access/trx_access.c **** }
 2330              	 .loc 9 714 0
 2331 090c 00BF     	 nop
 2332 090e 1037     	 adds r7,r7,#16
 2333              	.LCFI131:
 2334              	 .cfi_def_cfa_offset 8
 2335 0910 BD46     	 mov sp,r7
 2336              	.LCFI132:
 2337              	 .cfi_def_cfa_register 13
 2338              	 
 2339 0912 80BD     	 pop {r7,pc}
 2340              	.L126:
 2341              	 .align 2
 2342              	.L125:
 2343 0914 00000000 	 .word portable_delay_cycles
 2344 0918 00000000 	 .word SPI_AT86RFX_DEVICE
 2345 091c 00800040 	 .word 1073774592
 2346 0920 00000000 	 .word spi_select_device
 2347 0924 00000000 	 .word spi_write_packet
 2348 0928 00000000 	 .word spi_read_packet
 2349 092c 00000000 	 .word spi_deselect_device
 2350              	 .cfi_endproc
 2351              	.LFE269:
 2353              	.Letext0:
 2354              	 .file 10 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 2355              	 .file 11 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 2356              	 .file 12 "../../../platform/sam/utils/cmsis/sam4l/include/sam4lc4b.h"
 2357              	 .file 13 "../../../platform/sam/utils/cmsis/sam4l/source/templates/system_sam4l.h"
 2358              	 .file 14 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_gpio.h"
 2359              	 .file 15 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_spi.h"
 2360              	 .file 16 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 2361              	 .file 17 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 2362              	 .file 18 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 2363              	 .file 19 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 2364              	 .file 20 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdlib.h"
 2365              	 .file 21 "../../../platform/sam/utils/compiler.h"
 2366              	 .file 22 "../../../platform/common/services/usb/usb_protocol.h"
 2367              	 .file 23 "../../../platform/common/services/usb/udc/udi.h"
 2368              	 .file 24 "../../../platform/common/services/usb/udc/udc_desc.h"
 2369              	 .file 25 "../../../platform/common/services/usb/udc/udd.h"
 2370              	 .file 26 "../../../platform/common/services/usb/class/cdc/device/udi_cdc.h"
 2371              	 .file 27 "../../../platform/common/utils/stdio/stdio_usb/stdio_usb.h"
 2372              	 .file 28 "../../../stack/LwMesh/TDMA/services/trx_access/trx_access.h"
 2373              	 .file 29 "config/config.h"
 2374              	 .file 30 "../../../platform/common/services/delay/sam/cycle_counter.h"
DEFINED SYMBOLS
                            *ABS*:00000000 trx_access.c
    {standard input}:15     .text:00000000 $t
    {standard input}:21     .text:00000000 NVIC_EnableIRQ
    {standard input}:67     .text:0000002c $d
    {standard input}:71     .text:00000030 $t
    {standard input}:77     .text:00000030 NVIC_DisableIRQ
    {standard input}:123    .text:00000060 $d
    {standard input}:128    .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:131    .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:136    .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:137    .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:139    .text:00000064 $t
    {standard input}:145    .text:00000064 cpu_irq_save
    {standard input}:231    .text:00000098 $d
    {standard input}:235    .text:0000009c $t
    {standard input}:241    .text:0000009c cpu_irq_is_enabled_flags
    {standard input}:289    .text:000000ba cpu_irq_restore
    {standard input}:353    .text:000000e4 $d
                            *COM*:00000001 n
    {standard input}:359    .bss.tTS:00000000 $d
    {standard input}:362    .bss.tTS:00000000 tTS
    {standard input}:365    .text:000000e8 $t
    {standard input}:371    .text:000000e8 spi_enable
    {standard input}:417    .text:00000100 spi_get
    {standard input}:462    .text:00000118 spi_is_tx_empty
    {standard input}:516    .text:0000013c spi_read_single
    {standard input}:562    .text:0000015c ioport_set_pin_dir
    {standard input}:791    .text:0000024a ioport_set_pin_level
    {standard input}:934    .text:000002d0 ioport_set_pin_sense_mode
    {standard input}:1062   .bss.irq_hdl_trx:00000000 $d
    {standard input}:1065   .bss.irq_hdl_trx:00000000 irq_hdl_trx
    {standard input}:1072   .data.SPI_AT86RFX_DEVICE:00000000 SPI_AT86RFX_DEVICE
    {standard input}:1069   .data.SPI_AT86RFX_DEVICE:00000000 $d
    {standard input}:1082   .text:0000035c GPIO_2_Handler
    {standard input}:1164   .text:000003a8 $d
    {standard input}:1168   .text:000003ac $t
    {standard input}:1175   .text:000003ac trx_spi_init
    {standard input}:1313   .text:0000044c $d
    {standard input}:1321   .text:00000460 $t
    {standard input}:1328   .text:00000460 PhyReset
    {standard input}:1374   .text:00000498 $d
    {standard input}:1378   .text:0000049c $t
    {standard input}:1385   .text:0000049c trx_reg_read
    {standard input}:1465   .text:000004f8 $d
    {standard input}:1474   .text:00000510 $t
    {standard input}:1481   .text:00000510 trx_reg_write
    {standard input}:1559   .text:0000056c $d
    {standard input}:1567   .text:00000580 $t
    {standard input}:1574   .text:00000580 trx_irq_init
    {standard input}:1613   .text:00000598 $d
    {standard input}:1617   .text:0000059c $t
    {standard input}:1624   .text:0000059c trx_bit_read
    {standard input}:1685   .text:000005d6 trx_bit_write
    {standard input}:1770   .text:00000640 trx_frame_read
    {standard input}:1844   .text:00000694 $d
    {standard input}:1853   .text:000006ac $t
    {standard input}:1860   .text:000006ac trx_frame_write
    {standard input}:1934   .text:00000700 $d
    {standard input}:1942   .text:00000714 $t
    {standard input}:1949   .text:00000714 trx_sram_write
    {standard input}:2051   .text:00000794 $d
    {standard input}:2059   .text:000007a8 $t
    {standard input}:2066   .text:000007a8 trx_sram_read
    {standard input}:2173   .text:0000082c $d
    {standard input}:2183   .text:00000848 $t
    {standard input}:2190   .text:00000848 trx_aes_wrrd
    {standard input}:2343   .text:00000914 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
g_interrupt_enabled
spi_master_init
spi_master_setup_device
portable_delay_cycles
spi_select_device
spi_write_packet
spi_read_packet
spi_deselect_device
