   1               		.file	"phy.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	sysclk_enable_peripheral_clock:
  13               	.LFB69:
  14               		.file 1 "../../../platform/common/services/clock/mega/sysclk.h"
   1:../../../platform/common/services/clock/mega/sysclk.h **** /**
   2:../../../platform/common/services/clock/mega/sysclk.h ****  * \file
   3:../../../platform/common/services/clock/mega/sysclk.h ****  *
   4:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Chip-specific system clock management functions
   5:../../../platform/common/services/clock/mega/sysclk.h ****  *
   6:../../../platform/common/services/clock/mega/sysclk.h ****  * Copyright (c) 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/mega/sysclk.h ****  *
   8:../../../platform/common/services/clock/mega/sysclk.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/mega/sysclk.h ****  *
  10:../../../platform/common/services/clock/mega/sysclk.h ****  * \page License
  11:../../../platform/common/services/clock/mega/sysclk.h ****  *
  12:../../../platform/common/services/clock/mega/sysclk.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/mega/sysclk.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/mega/sysclk.h ****  *
  15:../../../platform/common/services/clock/mega/sysclk.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/mega/sysclk.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/mega/sysclk.h ****  *
  18:../../../platform/common/services/clock/mega/sysclk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/mega/sysclk.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/mega/sysclk.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/mega/sysclk.h ****  *
  22:../../../platform/common/services/clock/mega/sysclk.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/mega/sysclk.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/mega/sysclk.h ****  *
  25:../../../platform/common/services/clock/mega/sysclk.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/mega/sysclk.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/mega/sysclk.h ****  *
  28:../../../platform/common/services/clock/mega/sysclk.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/mega/sysclk.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/mega/sysclk.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/mega/sysclk.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/mega/sysclk.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/mega/sysclk.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/mega/sysclk.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/mega/sysclk.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/mega/sysclk.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/mega/sysclk.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/mega/sysclk.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/mega/sysclk.h ****  *
  40:../../../platform/common/services/clock/mega/sysclk.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/mega/sysclk.h ****  *
  42:../../../platform/common/services/clock/mega/sysclk.h ****  */
  43:../../../platform/common/services/clock/mega/sysclk.h **** #ifndef MEGA_SYSCLK_H_INCLUDED
  44:../../../platform/common/services/clock/mega/sysclk.h **** #define MEGA_SYSCLK_H_INCLUDED
  45:../../../platform/common/services/clock/mega/sysclk.h **** 
  46:../../../platform/common/services/clock/mega/sysclk.h **** #include <board.h>
  47:../../../platform/common/services/clock/mega/sysclk.h **** #include <compiler.h>
  48:../../../platform/common/services/clock/mega/sysclk.h **** #include <parts.h>
  49:../../../platform/common/services/clock/mega/sysclk.h **** 
  50:../../../platform/common/services/clock/mega/sysclk.h **** /* Include clock configuration for the project. */
  51:../../../platform/common/services/clock/mega/sysclk.h **** #include <conf_clock.h>
  52:../../../platform/common/services/clock/mega/sysclk.h **** 
  53:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef __cplusplus
  54:../../../platform/common/services/clock/mega/sysclk.h **** extern "C" {
  55:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  56:../../../platform/common/services/clock/mega/sysclk.h **** #define ASM __asm__
  57:../../../platform/common/services/clock/mega/sysclk.h **** 
  58:../../../platform/common/services/clock/mega/sysclk.h **** /* CONFIG_SYSCLK_PSDIV  to use default if not defined*/
  59:../../../platform/common/services/clock/mega/sysclk.h **** #ifndef CONFIG_SYSCLK_PSDIV
  60:../../../platform/common/services/clock/mega/sysclk.h **** # define CONFIG_SYSCLK_PSDIV    SYSCLK_PSDIV_8
  61:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  62:../../../platform/common/services/clock/mega/sysclk.h **** 
  63:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Prescaler Setting (relative to CLKsys) */
  64:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
  65:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_1      0   /* !< Do not prescale */
  66:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_2      1   /* !< Prescale CLKper4 by 2 */
  67:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_4      2   /* !< Prescale CLKper4 by 4 */
  68:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_8      3   /* !< Prescale CLKper4 by 8 */
  69:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_16     4   /* !< Prescale CLKper4 by 16 */
  70:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_32     5   /* !< Prescale CLKper4 by 32 */
  71:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_64     6   /* !< Prescale CLKper4 by 64 */
  72:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_128    7   /* !< Prescale CLKper4 by 128 */
  73:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_256    8   /* !< Prescale CLKper4 by 256 */
  74:../../../platform/common/services/clock/mega/sysclk.h **** 
  75:../../../platform/common/services/clock/mega/sysclk.h **** /* @} */
  76:../../../platform/common/services/clock/mega/sysclk.h **** 
  77:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF || MEGA_XX0_1 || MEGA_XX4 || MEGA_XX4_A
  78:../../../platform/common/services/clock/mega/sysclk.h **** 
  79:../../../platform/common/services/clock/mega/sysclk.h **** #define NUMBER_OF_POWER_REG       2
  80:../../../platform/common/services/clock/mega/sysclk.h **** /*Starting Address for power reduction*/
  81:../../../platform/common/services/clock/mega/sysclk.h **** #define POWER_REG_ADD             PRR0
  82:../../../platform/common/services/clock/mega/sysclk.h **** 
  83:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Power Reduction  Clock Port Numbers */
  84:../../../platform/common/services/clock/mega/sysclk.h **** enum power_red_id {
  85:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG0,     /* !< Devices on PRR0 */
  86:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX4 || !MEGA_XX4_A || MEGA_XX0_1
  87:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG1,     /* !< Devices on PRR1 */
  88:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  89:../../../platform/common/services/clock/mega/sysclk.h **** };
  90:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  91:../../../platform/common/services/clock/mega/sysclk.h **** 
  92:../../../platform/common/services/clock/mega/sysclk.h **** /****************************************************
  93:../../../platform/common/services/clock/mega/sysclk.h ****  * Given a dummy type but not used for these groups
  94:../../../platform/common/services/clock/mega/sysclk.h ****  * to support for otherthen megaRF device.
  95:../../../platform/common/services/clock/mega/sysclk.h ****  **************************************************/
  96:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX8 || MEGA_XX8_A || MEGA_UNSPECIFIED
  97:../../../platform/common/services/clock/mega/sysclk.h **** #define NUMBER_OF_POWER_REG       1
  98:../../../platform/common/services/clock/mega/sysclk.h **** /*Starting Address for power reduction*/
  99:../../../platform/common/services/clock/mega/sysclk.h **** #define POWER_REG_ADD             PRR
 100:../../../platform/common/services/clock/mega/sysclk.h **** 
 101:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Power Reduction  Clock Port Numbers */
 102:../../../platform/common/services/clock/mega/sysclk.h **** enum power_red_id {
 103:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG0,     /* !< Devices on PRR */
 104:../../../platform/common/services/clock/mega/sysclk.h **** };
 105:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 106:../../../platform/common/services/clock/mega/sysclk.h **** 
 107:../../../platform/common/services/clock/mega/sysclk.h **** /* Bit mask for the power reduction register based on */
 108:../../../platform/common/services/clock/mega/sysclk.h **** /*   MCU ARCH.                                        */
 109:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 110:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for PRR2 */
 111:../../../platform/common/services/clock/mega/sysclk.h **** 
 112:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM0_bm                       1 << PRRAM0
 113:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM1_bm                       1 << PRRAM1
 114:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM2_bm                       1 << PRRAM2
 115:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM3_bm                       1 << PRRAM3
 116:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 117:../../../platform/common/services/clock/mega/sysclk.h **** 
 118:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for the power reduction 0 or PRR*/
 119:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN0 && !MEGA_XX_UN0
 120:../../../platform/common/services/clock/mega/sysclk.h **** #define PRADC_bm                        1 << PRADC
 121:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART0_bm                     1 << PRUSART0
 122:../../../platform/common/services/clock/mega/sysclk.h **** #define PRSPI_bm                        1 << PRSPI
 123:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM1_bm                       1 << PRTIM1
 124:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 125:../../../platform/common/services/clock/mega/sysclk.h **** 
 126:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 127:../../../platform/common/services/clock/mega/sysclk.h **** #define PRPGA_bm                        1 << PRPGA
 128:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 129:../../../platform/common/services/clock/mega/sysclk.h **** 
 130:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_UNSPECIFIED
 131:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM0_bm                       1 << PRTIM0
 132:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM2_bm                       1 << PRTIM2
 133:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTWI_bm                        1 << PRTWI
 134:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 135:../../../platform/common/services/clock/mega/sysclk.h **** 
 136:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX_UN2
 137:../../../platform/common/services/clock/mega/sysclk.h **** #define PRLCD_bm                        1 << PRLCD
 138:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 139:../../../platform/common/services/clock/mega/sysclk.h **** 
 140:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for  PRR1  */
 141:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef PRR1
 142:../../../platform/common/services/clock/mega/sysclk.h **** #if (MEGA_XX4 || MEGA_XX4_A)
 143:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM3_bm                       1 << PRTIM3
 144:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 145:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 146:../../../platform/common/services/clock/mega/sysclk.h **** 
 147:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF || MEGA_XX4 || MEGA_XX4_A
 148:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART1_bm                     1 << PRUSART1
 149:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART2_bm                     1 << PRUSART2
 150:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART3_bm                     1 << PRUSART3
 151:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM3_bm                       1 << PRTIM3
 152:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM4_bm                       1 << PRTIM4
 153:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM5_bm                       1 << PRTIM5
 154:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 155:../../../platform/common/services/clock/mega/sysclk.h **** 
 156:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 157:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTRX24_bm                      1 << PRTRX24
 158:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 159:../../../platform/common/services/clock/mega/sysclk.h **** 
 160:../../../platform/common/services/clock/mega/sysclk.h **** /**
 161:../../../platform/common/services/clock/mega/sysclk.h ****  * \name Querying the system clock and its derived clocks
 162:../../../platform/common/services/clock/mega/sysclk.h ****  */
 163:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
 164:../../../platform/common/services/clock/mega/sysclk.h **** 
 165:../../../platform/common/services/clock/mega/sysclk.h **** /**
 166:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the main system clock
 167:../../../platform/common/services/clock/mega/sysclk.h ****  * To know the clock value at what frequency the main clock is running
 168:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the main system clock, in Hz.
 169:../../../platform/common/services/clock/mega/sysclk.h ****  * \todo : please initialize the SYSCLK_SOURCE in conf_clock.h file for
 170:../../../platform/common/services/clock/mega/sysclk.h ****  * configured source clock using fuses.
 171:../../../platform/common/services/clock/mega/sysclk.h ****  * \eg. #define SYSCLK_SOURCE SYSCLK_SRC_RC16MHZ to use internal RC
 172:../../../platform/common/services/clock/mega/sysclk.h ****  * oscillator for clock source.
 173:../../../platform/common/services/clock/mega/sysclk.h ****  */
 174:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_main_hz(void)
 175:../../../platform/common/services/clock/mega/sysclk.h **** {
 176:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (SYSCLK_SOURCE) {
 177:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_RC16MHZ:
 178:../../../platform/common/services/clock/mega/sysclk.h **** 		return 16000000UL;
 179:../../../platform/common/services/clock/mega/sysclk.h **** 
 180:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_RC128KHZ:
 181:../../../platform/common/services/clock/mega/sysclk.h **** 		return 128000UL;
 182:../../../platform/common/services/clock/mega/sysclk.h **** 
 183:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 184:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_TRS16MHZ:
 185:../../../platform/common/services/clock/mega/sysclk.h **** 		return 16000000UL;
 186:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 187:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef BOARD_EXTERNAL_CLK
 188:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_EXTERNAL:
 189:../../../platform/common/services/clock/mega/sysclk.h **** 		return BOARD_EXTERNAL_CLK;
 190:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 191:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 192:../../../platform/common/services/clock/mega/sysclk.h **** 
 193:../../../platform/common/services/clock/mega/sysclk.h **** 		return 1000000UL;
 194:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 195:../../../platform/common/services/clock/mega/sysclk.h **** }
 196:../../../platform/common/services/clock/mega/sysclk.h **** 
 197:../../../platform/common/services/clock/mega/sysclk.h **** /**
 198:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of source clock in Hz.
 199:../../../platform/common/services/clock/mega/sysclk.h ****  *
 200:../../../platform/common/services/clock/mega/sysclk.h ****  * This clock always runs at the same rate as the CPU clock unless the divider
 201:../../../platform/common/services/clock/mega/sysclk.h ****  * is set.
 202:../../../platform/common/services/clock/mega/sysclk.h ****  *
 203:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the system clock, in Hz.
 204:../../../platform/common/services/clock/mega/sysclk.h ****  */
 205:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_source_clock_hz(void)
 206:../../../platform/common/services/clock/mega/sysclk.h **** {
 207:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (CONFIG_SYSCLK_PSDIV) {
 208:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_1: /* Fall through */
 209:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 210:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 211:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 212:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 213:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz();
 214:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 215:../../../platform/common/services/clock/mega/sysclk.h **** 
 216:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_2:
 217:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 218:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 219:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 220:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 221:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 222:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 223:../../../platform/common/services/clock/mega/sysclk.h **** 
 224:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_4:
 225:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 226:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 227:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 228:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 229:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 230:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 231:../../../platform/common/services/clock/mega/sysclk.h **** 
 232:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_8:
 233:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 234:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 235:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 236:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 237:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 238:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 239:../../../platform/common/services/clock/mega/sysclk.h **** 
 240:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_16:
 241:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 242:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 243:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 244:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 245:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 246:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 247:../../../platform/common/services/clock/mega/sysclk.h **** 
 248:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_32:
 249:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 250:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 251:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 252:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 253:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 254:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 255:../../../platform/common/services/clock/mega/sysclk.h **** 
 256:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_64:
 257:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 258:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 259:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 260:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 261:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 262:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 263:../../../platform/common/services/clock/mega/sysclk.h **** 
 264:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_128:
 265:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 266:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 267:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 268:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 269:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 270:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 271:../../../platform/common/services/clock/mega/sysclk.h **** 
 272:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_256:
 273:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 274:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 275:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 512;
 276:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 277:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 278:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 279:../../../platform/common/services/clock/mega/sysclk.h **** 
 280:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 281:../../../platform/common/services/clock/mega/sysclk.h **** 		/*Invalide case*/
 282:../../../platform/common/services/clock/mega/sysclk.h **** 		return 0;
 283:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 284:../../../platform/common/services/clock/mega/sysclk.h **** }
 285:../../../platform/common/services/clock/mega/sysclk.h **** 
 286:../../../platform/common/services/clock/mega/sysclk.h **** /**
 287:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the CPU clock.
 288:../../../platform/common/services/clock/mega/sysclk.h ****  *
 289:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 290:../../../platform/common/services/clock/mega/sysclk.h ****  */
 291:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_cpu_hz(void)
 292:../../../platform/common/services/clock/mega/sysclk.h **** {
 293:../../../platform/common/services/clock/mega/sysclk.h **** 	return sysclk_get_source_clock_hz();
 294:../../../platform/common/services/clock/mega/sysclk.h **** }
 295:../../../platform/common/services/clock/mega/sysclk.h **** 
 296:../../../platform/common/services/clock/mega/sysclk.h **** /**
 297:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the clock from internal oscillator
 298:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 299:../../../platform/common/services/clock/mega/sysclk.h ****  */
 300:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_rc_osc_hz(void)
 301:../../../platform/common/services/clock/mega/sysclk.h **** {
 302:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (CONFIG_SYSCLK_PSDIV) {
 303:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_1:
 304:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 305:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 306:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 307:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 308:../../../platform/common/services/clock/mega/sysclk.h **** 
 309:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_2:
 310:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 311:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 312:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 313:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 314:../../../platform/common/services/clock/mega/sysclk.h **** 
 315:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_4:
 316:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 317:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 318:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 319:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 320:../../../platform/common/services/clock/mega/sysclk.h **** 
 321:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_8:
 322:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 323:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 324:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 325:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 326:../../../platform/common/services/clock/mega/sysclk.h **** 
 327:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_16:
 328:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 329:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 330:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 331:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 332:../../../platform/common/services/clock/mega/sysclk.h **** 
 333:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_32:
 334:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 335:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 336:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 337:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 338:../../../platform/common/services/clock/mega/sysclk.h **** 
 339:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_64:
 340:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 341:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 342:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 343:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 344:../../../platform/common/services/clock/mega/sysclk.h **** 
 345:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_128:
 346:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 347:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 348:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 349:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 350:../../../platform/common/services/clock/mega/sysclk.h **** 
 351:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_256:
 352:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 353:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 354:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 512;
 355:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 356:../../../platform/common/services/clock/mega/sysclk.h **** 
 357:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 358:../../../platform/common/services/clock/mega/sysclk.h **** 		return 0;
 359:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 360:../../../platform/common/services/clock/mega/sysclk.h **** }
 361:../../../platform/common/services/clock/mega/sysclk.h **** 
 362:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Enabling and disabling synchronous clocks */
 363:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
 364:../../../platform/common/services/clock/mega/sysclk.h **** 
 365:../../../platform/common/services/clock/mega/sysclk.h **** /**
 366:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Enable the clock to peripheral \a id on port \a port
 367:../../../platform/common/services/clock/mega/sysclk.h ****  *
 368:../../../platform/common/services/clock/mega/sysclk.h ****  * \param port ID of the port to which the module is connected (one of
 369:../../../platform/common/services/clock/mega/sysclk.h ****  * the \c power_red_id *definitions).
 370:../../../platform/common/services/clock/mega/sysclk.h ****  * \param id The ID (bitmask) of the peripheral module to be disabled.*
 371:../../../platform/common/services/clock/mega/sysclk.h ****  */
 372:../../../platform/common/services/clock/mega/sysclk.h **** extern void sysclk_enable_module(enum power_red_id port, uint8_t id);
 373:../../../platform/common/services/clock/mega/sysclk.h **** 
 374:../../../platform/common/services/clock/mega/sysclk.h **** /**
 375:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Disable the clock to peripheral \a id on port \a port
 376:../../../platform/common/services/clock/mega/sysclk.h ****  *
 377:../../../platform/common/services/clock/mega/sysclk.h ****  * \param port ID of the port to which the module is connected (one of
 378:../../../platform/common/services/clock/mega/sysclk.h ****  * the \c power_red_id *definitions).
 379:../../../platform/common/services/clock/mega/sysclk.h ****  * \param id The ID (bit mask) of the peripheral module to be disabled.
 380:../../../platform/common/services/clock/mega/sysclk.h ****  */
 381:../../../platform/common/services/clock/mega/sysclk.h **** extern void sysclk_disable_module(enum power_red_id port, uint8_t id);
 382:../../../platform/common/services/clock/mega/sysclk.h **** 
 383:../../../platform/common/services/clock/mega/sysclk.h **** /**
 384:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Enable a peripherals clock from its base address.
 385:../../../platform/common/services/clock/mega/sysclk.h ****  *
 386:../../../platform/common/services/clock/mega/sysclk.h ****  *  Enables the clock to a peripheral, given its base address. If the peripheral
 387:../../../platform/common/services/clock/mega/sysclk.h ****  *  has an associated clock on the HSB bus, this will be enabled also.
 388:../../../platform/common/services/clock/mega/sysclk.h ****  *
 389:../../../platform/common/services/clock/mega/sysclk.h ****  * \param module Pointer to the module's base address.
 390:../../../platform/common/services/clock/mega/sysclk.h ****  */
 391:../../../platform/common/services/clock/mega/sysclk.h **** static inline void sysclk_enable_peripheral_clock(const volatile void *module)
 392:../../../platform/common/services/clock/mega/sysclk.h **** {
  15               		.loc 1 392 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25 0004 00D0      		rcall .
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 6
  28 0006 CDB7      		in r28,__SP_L__
  29 0008 DEB7      		in r29,__SP_H__
  30               	.LCFI3:
  31               		.cfi_def_cfa_register 28
  32               	/* prologue: function */
  33               	/* frame size = 2 */
  34               	/* stack size = 4 */
  35               	.L__stack_usage = 4
  36 000a 9A83      		std Y+2,r25
  37 000c 8983      		std Y+1,r24
 393:../../../platform/common/services/clock/mega/sysclk.h **** 	if (module == NULL) {
  38               		.loc 1 393 0
  39 000e 8981      		ldd r24,Y+1
  40 0010 9A81      		ldd r25,Y+2
  41 0012 892B      		or r24,r25
  42 0014 01F4      		brne .+2
  43 0016 00C0      		rjmp .L14
 394:../../../platform/common/services/clock/mega/sysclk.h **** 		Assert(false);
 395:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 396:../../../platform/common/services/clock/mega/sysclk.h **** 
 397:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN0 && !MEGA_XX_UN1
 398:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &ADC) {
  44               		.loc 1 398 0
  45 0018 8981      		ldd r24,Y+1
  46 001a 9A81      		ldd r25,Y+2
  47 001c 8837      		cpi r24,120
  48 001e 9105      		cpc r25,__zero_reg__
  49 0020 01F4      		brne .L3
 399:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRADC_bm);
  50               		.loc 1 399 0
  51 0022 61E0      		ldi r22,lo8(1)
  52 0024 80E0      		ldi r24,0
  53 0026 0E94 0000 		call sysclk_enable_module
 400:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 401:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRPGA_bm);
  54               		.loc 1 401 0
  55 002a 60E1      		ldi r22,lo8(16)
  56 002c 80E0      		ldi r24,0
  57 002e 0E94 0000 		call sysclk_enable_module
 402:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 403:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &UCSR0A) {
 404:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRUSART0_bm);
 405:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 406:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 407:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &SPCR) {
 408:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRSPI_bm);
 409:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 410:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 411:../../../platform/common/services/clock/mega/sysclk.h **** 
 412:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &TCCR1A) {
 413:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM1_bm);
 414:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 415:../../../platform/common/services/clock/mega/sysclk.h **** 
 416:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX_UN2
 417:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &LCDCRA) {
 418:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRLCD_bm);
 419:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 420:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 421:../../../platform/common/services/clock/mega/sysclk.h **** 
 422:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN2
 423:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &TCCR0A) {
 424:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM0_bm);
 425:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR2A) {
 426:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM2_bm);
 427:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TWBR) {
 428:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTWI_bm);
 429:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 430:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 431:../../../platform/common/services/clock/mega/sysclk.h **** 
 432:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 433:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &UCSR1A) {
 434:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRUSART1_bm);
 435:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR3A) {
 436:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM3_bm);
 437:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR4A) {
 438:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM4_bm);
 439:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR5A) {
 440:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM5_bm);
 441:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TRX_CTRL_0) {
 442:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTRX24_bm);
 443:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 444:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 445:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 446:../../../platform/common/services/clock/mega/sysclk.h **** 	else {
 447:../../../platform/common/services/clock/mega/sysclk.h **** 		Assert(false);
 448:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 449:../../../platform/common/services/clock/mega/sysclk.h **** }
  58               		.loc 1 449 0
  59 0032 00C0      		rjmp .L14
  60               	.L3:
 403:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRUSART0_bm);
  61               		.loc 1 403 0
  62 0034 8981      		ldd r24,Y+1
  63 0036 9A81      		ldd r25,Y+2
  64 0038 803C      		cpi r24,-64
  65 003a 9105      		cpc r25,__zero_reg__
  66 003c 01F4      		brne .L4
 404:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  67               		.loc 1 404 0
  68 003e 62E0      		ldi r22,lo8(2)
  69 0040 80E0      		ldi r24,0
  70 0042 0E94 0000 		call sysclk_enable_module
  71               		.loc 1 449 0
  72 0046 00C0      		rjmp .L14
  73               	.L4:
 407:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRSPI_bm);
  74               		.loc 1 407 0
  75 0048 8981      		ldd r24,Y+1
  76 004a 9A81      		ldd r25,Y+2
  77 004c 8C34      		cpi r24,76
  78 004e 9105      		cpc r25,__zero_reg__
  79 0050 01F4      		brne .L5
 408:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  80               		.loc 1 408 0
  81 0052 64E0      		ldi r22,lo8(4)
  82 0054 80E0      		ldi r24,0
  83 0056 0E94 0000 		call sysclk_enable_module
  84               		.loc 1 449 0
  85 005a 00C0      		rjmp .L14
  86               	.L5:
 412:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM1_bm);
  87               		.loc 1 412 0
  88 005c 8981      		ldd r24,Y+1
  89 005e 9A81      		ldd r25,Y+2
  90 0060 8038      		cpi r24,-128
  91 0062 9105      		cpc r25,__zero_reg__
  92 0064 01F4      		brne .L6
 413:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  93               		.loc 1 413 0
  94 0066 68E0      		ldi r22,lo8(8)
  95 0068 80E0      		ldi r24,0
  96 006a 0E94 0000 		call sysclk_enable_module
  97               		.loc 1 449 0
  98 006e 00C0      		rjmp .L14
  99               	.L6:
 423:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM0_bm);
 100               		.loc 1 423 0
 101 0070 8981      		ldd r24,Y+1
 102 0072 9A81      		ldd r25,Y+2
 103 0074 8434      		cpi r24,68
 104 0076 9105      		cpc r25,__zero_reg__
 105 0078 01F4      		brne .L7
 424:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR2A) {
 106               		.loc 1 424 0
 107 007a 60E2      		ldi r22,lo8(32)
 108 007c 80E0      		ldi r24,0
 109 007e 0E94 0000 		call sysclk_enable_module
 110               		.loc 1 449 0
 111 0082 00C0      		rjmp .L14
 112               	.L7:
 425:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM2_bm);
 113               		.loc 1 425 0
 114 0084 8981      		ldd r24,Y+1
 115 0086 9A81      		ldd r25,Y+2
 116 0088 803B      		cpi r24,-80
 117 008a 9105      		cpc r25,__zero_reg__
 118 008c 01F4      		brne .L8
 426:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TWBR) {
 119               		.loc 1 426 0
 120 008e 60E4      		ldi r22,lo8(64)
 121 0090 80E0      		ldi r24,0
 122 0092 0E94 0000 		call sysclk_enable_module
 123               		.loc 1 449 0
 124 0096 00C0      		rjmp .L14
 125               	.L8:
 427:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTWI_bm);
 126               		.loc 1 427 0
 127 0098 8981      		ldd r24,Y+1
 128 009a 9A81      		ldd r25,Y+2
 129 009c 883B      		cpi r24,-72
 130 009e 9105      		cpc r25,__zero_reg__
 131 00a0 01F4      		brne .L9
 428:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 132               		.loc 1 428 0
 133 00a2 60E8      		ldi r22,lo8(-128)
 134 00a4 80E0      		ldi r24,0
 135 00a6 0E94 0000 		call sysclk_enable_module
 136               		.loc 1 449 0
 137 00aa 00C0      		rjmp .L14
 138               	.L9:
 433:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRUSART1_bm);
 139               		.loc 1 433 0
 140 00ac 8981      		ldd r24,Y+1
 141 00ae 9A81      		ldd r25,Y+2
 142 00b0 883C      		cpi r24,-56
 143 00b2 9105      		cpc r25,__zero_reg__
 144 00b4 01F4      		brne .L10
 434:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR3A) {
 145               		.loc 1 434 0
 146 00b6 61E0      		ldi r22,lo8(1)
 147 00b8 81E0      		ldi r24,lo8(1)
 148 00ba 0E94 0000 		call sysclk_enable_module
 149               		.loc 1 449 0
 150 00be 00C0      		rjmp .L14
 151               	.L10:
 435:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM3_bm);
 152               		.loc 1 435 0
 153 00c0 8981      		ldd r24,Y+1
 154 00c2 9A81      		ldd r25,Y+2
 155 00c4 8039      		cpi r24,-112
 156 00c6 9105      		cpc r25,__zero_reg__
 157 00c8 01F4      		brne .L11
 436:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR4A) {
 158               		.loc 1 436 0
 159 00ca 68E0      		ldi r22,lo8(8)
 160 00cc 81E0      		ldi r24,lo8(1)
 161 00ce 0E94 0000 		call sysclk_enable_module
 162               		.loc 1 449 0
 163 00d2 00C0      		rjmp .L14
 164               	.L11:
 437:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM4_bm);
 165               		.loc 1 437 0
 166 00d4 8981      		ldd r24,Y+1
 167 00d6 9A81      		ldd r25,Y+2
 168 00d8 803A      		cpi r24,-96
 169 00da 9105      		cpc r25,__zero_reg__
 170 00dc 01F4      		brne .L12
 438:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR5A) {
 171               		.loc 1 438 0
 172 00de 60E1      		ldi r22,lo8(16)
 173 00e0 81E0      		ldi r24,lo8(1)
 174 00e2 0E94 0000 		call sysclk_enable_module
 175               		.loc 1 449 0
 176 00e6 00C0      		rjmp .L14
 177               	.L12:
 439:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM5_bm);
 178               		.loc 1 439 0
 179 00e8 8981      		ldd r24,Y+1
 180 00ea 9A81      		ldd r25,Y+2
 181 00ec 8032      		cpi r24,32
 182 00ee 9140      		sbci r25,1
 183 00f0 01F4      		brne .L13
 440:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TRX_CTRL_0) {
 184               		.loc 1 440 0
 185 00f2 60E2      		ldi r22,lo8(32)
 186 00f4 81E0      		ldi r24,lo8(1)
 187 00f6 0E94 0000 		call sysclk_enable_module
 188               		.loc 1 449 0
 189 00fa 00C0      		rjmp .L14
 190               	.L13:
 441:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTRX24_bm);
 191               		.loc 1 441 0
 192 00fc 8981      		ldd r24,Y+1
 193 00fe 9A81      		ldd r25,Y+2
 194 0100 8334      		cpi r24,67
 195 0102 9140      		sbci r25,1
 196 0104 01F4      		brne .L14
 442:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 197               		.loc 1 442 0
 198 0106 60E4      		ldi r22,lo8(64)
 199 0108 81E0      		ldi r24,lo8(1)
 200 010a 0E94 0000 		call sysclk_enable_module
 201               	.L14:
 202               		.loc 1 449 0
 203 010e 0000      		nop
 204               	/* epilogue start */
 205 0110 0F90      		pop __tmp_reg__
 206 0112 0F90      		pop __tmp_reg__
 207 0114 DF91      		pop r29
 208 0116 CF91      		pop r28
 209 0118 0895      		ret
 210               		.cfi_endproc
 211               	.LFE69:
 214               	__portable_avr_delay_cycles:
 215               	.LFB74:
 216               		.file 2 "../../../platform/common/services/delay/mega_rf/cycle_counter.h"
   1:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
   2:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \file
   3:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   4:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \brief AVR functions for busy-wait delay loops
   5:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   6:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Copyright (c) 2011 - 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   8:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_start
   9:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  10:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \page License
  11:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  12:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  15:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  18:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  22:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  25:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  28:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  40:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_stop
  41:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  42:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  43:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifndef _cycle_counter_h_
  44:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #define _cycle_counter_h_
  45:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  46:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifdef __cplusplus
  47:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** extern "C" {
  48:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #endif
  49:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  50:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #include <compiler.h>
  51:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  52:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
  53:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @name Convenience functions for busy-wait delay loops
  54:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  55:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def delay_cycles
  56:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of CPU cycles.
  57:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param n number of CPU cycles to wait
  58:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  59:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_ms
  60:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of milliseconds.
  61:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of milliseconds to wait
  62:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  63:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  64:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_us
  65:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of microseconds.
  66:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of microseconds to wait
  67:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  68:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  69:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_ms_2_cy
  70:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert milli-seconds into CPU cycles.
  71:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of milliseconds
  72:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  73:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  74:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  75:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_us_2_cy
  76:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert micro-seconds into CPU cycles.
  77:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of microseconds
  78:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  79:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  80:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  81:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @{
  82:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  83:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** __always_optimize
  84:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** static inline void __portable_avr_delay_cycles(unsigned long n)
  85:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** {
 217               		.loc 2 85 0
 218               		.cfi_startproc
 219               	/* prologue: function */
 220               	/* frame size = 0 */
 221               	/* stack size = 0 */
 222               	.L__stack_usage = 0
 223               	.L16:
  86:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 	do { barrier(); } while (--n);
 224               		.loc 2 86 0 discriminator 1
 225 011a 6150      		subi r22,1
 226 011c 7109      		sbc r23,__zero_reg__
 227 011e 8109      		sbc r24,__zero_reg__
 228 0120 9109      		sbc r25,__zero_reg__
 229 0122 01F4      		brne .L16
 230               	/* epilogue start */
  87:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** }
 231               		.loc 2 87 0
 232 0124 0895      		ret
 233               		.cfi_endproc
 234               	.LFE74:
 236               		.section	.bss.phyState,"aw",@nobits
 239               	phyState:
 240 0000 00        		.zero	1
 241               		.section	.bss.phyRxBuffer,"aw",@nobits
 244               	phyRxBuffer:
 245 0000 0000 0000 		.zero	128
 245      0000 0000 
 245      0000 0000 
 245      0000 0000 
 245      0000 0000 
 246               		.section	.bss.phyRxState,"aw",@nobits
 249               	phyRxState:
 250 0000 00        		.zero	1
 251               		.text
 252               	.global	PHY_Init
 254               	PHY_Init:
 255               	.LFB75:
 256               		.file 3 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c"
   1:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /**
   2:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \file phy.c
   3:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   4:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \brief ATMEGAxxxRFA1 PHY implementation
   5:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   6:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * Copyright (C) 2014, Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   8:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  10:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  13:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  16:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  20:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  23:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  26:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  38:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  40:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  41:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  */
  42:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  43:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ATMEGARFA1
  44:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  45:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Includes ---------------------------------------------------------------*/
  46:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "phy.h"
  47:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "delay.h"
  48:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "sal.h"
  49:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "atmegarfa1.h"
  50:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  51:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Definitions ------------------------------------------------------------*/
  52:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #define PHY_CRC_SIZE          2
  53:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #define IRQ_CLEAR_VALUE       0xff
  54:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Types ------------------------------------------------------------------*/
  55:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** typedef enum {
  56:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_INITIAL,
  57:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_IDLE,
  58:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_SLEEP,
  59:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_TX_WAIT_END,
  60:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** } PhyState_t;
  61:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  62:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Prototypes -------------------------------------------------------------*/
  63:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phySetRxState(void);
  64:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  65:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Variables --------------------------------------------------------------*/
  66:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static PhyState_t phyState = PHY_STATE_INITIAL;
  67:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static uint8_t phyRxBuffer[128];
  68:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static bool phyRxState;
  69:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  70:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Implementations --------------------------------------------------------*/
  71:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  72:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
  73:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
  74:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Init(void)
  75:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 257               		.loc 3 75 0
 258               		.cfi_startproc
 259 0126 CF93      		push r28
 260               	.LCFI4:
 261               		.cfi_def_cfa_offset 3
 262               		.cfi_offset 28, -2
 263 0128 DF93      		push r29
 264               	.LCFI5:
 265               		.cfi_def_cfa_offset 4
 266               		.cfi_offset 29, -3
 267 012a CDB7      		in r28,__SP_L__
 268 012c DEB7      		in r29,__SP_H__
 269               	.LCFI6:
 270               		.cfi_def_cfa_register 28
 271               	/* prologue: function */
 272               	/* frame size = 0 */
 273               	/* stack size = 2 */
 274               	.L__stack_usage = 2
  76:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sysclk_enable_peripheral_clock(&TRX_CTRL_0);
 275               		.loc 3 76 0
 276 012e 83E4      		ldi r24,lo8(67)
 277 0130 91E0      		ldi r25,lo8(1)
 278 0132 0E94 0000 		call sysclk_enable_peripheral_clock
  77:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  78:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.trxrst = 1;
 279               		.loc 3 78 0
 280 0136 89E3      		ldi r24,lo8(57)
 281 0138 91E0      		ldi r25,lo8(1)
 282 013a FC01      		movw r30,r24
 283 013c 2081      		ld r18,Z
 284 013e 2160      		ori r18,lo8(1)
 285 0140 FC01      		movw r30,r24
 286 0142 2083      		st Z,r18
  79:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  80:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyRxState = false;
 287               		.loc 3 80 0
 288 0144 1092 0000 		sts phyRxState,__zero_reg__
  81:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_IDLE;
 289               		.loc 3 81 0
 290 0148 81E0      		ldi r24,lo8(1)
 291 014a 8093 0000 		sts phyState,r24
  82:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  83:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 292               		.loc 3 83 0
 293 014e 88E0      		ldi r24,lo8(8)
 294 0150 0E94 0000 		call phyTrxSetState
  84:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  85:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_2_REG_s.rxSafeMode = 1;
 295               		.loc 3 85 0
 296 0154 8CE4      		ldi r24,lo8(76)
 297 0156 91E0      		ldi r25,lo8(1)
 298 0158 FC01      		movw r30,r24
 299 015a 2081      		ld r18,Z
 300 015c 2068      		ori r18,lo8(-128)
 301 015e FC01      		movw r30,r24
 302 0160 2083      		st Z,r18
  86:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  87:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
  88:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = (uint8_t)PHY_RandomReq();
  89:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
  90:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  91:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
  92:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antCtrl = 2;
  93:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	RX_CTRL_REG_s.pdtThres = 0x03;
  94:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 1;
  95:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 1;
  96:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #else
  97:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DEFAULT != 0)
  98:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
  99:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antCtrl = ANTENNA_DEFAULT;
 100:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DEFAULT
 101:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // ANTENNA_DIVERSITY
 102:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 103:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 1;
 104:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 105:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 303               		.loc 3 105 0
 304 0162 0000      		nop
 305               	/* epilogue start */
 306 0164 DF91      		pop r29
 307 0166 CF91      		pop r28
 308 0168 0895      		ret
 309               		.cfi_endproc
 310               	.LFE75:
 312               	.global	PHY_ResetRadio
 314               	PHY_ResetRadio:
 315               	.LFB76:
 106:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 107:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_ResetRadio(void)
 108:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 316               		.loc 3 108 0
 317               		.cfi_startproc
 318 016a CF93      		push r28
 319               	.LCFI7:
 320               		.cfi_def_cfa_offset 3
 321               		.cfi_offset 28, -2
 322 016c DF93      		push r29
 323               	.LCFI8:
 324               		.cfi_def_cfa_offset 4
 325               		.cfi_offset 29, -3
 326 016e CDB7      		in r28,__SP_L__
 327 0170 DEB7      		in r29,__SP_H__
 328               	.LCFI9:
 329               		.cfi_def_cfa_register 28
 330               	/* prologue: function */
 331               	/* frame size = 0 */
 332               	/* stack size = 2 */
 333               	.L__stack_usage = 2
 109:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.trxrst = 1;
 334               		.loc 3 109 0
 335 0172 89E3      		ldi r24,lo8(57)
 336 0174 91E0      		ldi r25,lo8(1)
 337 0176 FC01      		movw r30,r24
 338 0178 2081      		ld r18,Z
 339 017a 2160      		ori r18,lo8(1)
 340 017c FC01      		movw r30,r24
 341 017e 2083      		st Z,r18
 110:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 342               		.loc 3 110 0
 343 0180 0000      		nop
 344               	/* epilogue start */
 345 0182 DF91      		pop r29
 346 0184 CF91      		pop r28
 347 0186 0895      		ret
 348               		.cfi_endproc
 349               	.LFE76:
 351               	.global	PHY_SetTdmaMode
 353               	PHY_SetTdmaMode:
 354               	.LFB77:
 111:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 112:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetTdmaMode(bool mode)
 113:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 355               		.loc 3 113 0
 356               		.cfi_startproc
 357 0188 CF93      		push r28
 358               	.LCFI10:
 359               		.cfi_def_cfa_offset 3
 360               		.cfi_offset 28, -2
 361 018a DF93      		push r29
 362               	.LCFI11:
 363               		.cfi_def_cfa_offset 4
 364               		.cfi_offset 29, -3
 365 018c 1F92      		push __zero_reg__
 366               	.LCFI12:
 367               		.cfi_def_cfa_offset 5
 368 018e CDB7      		in r28,__SP_L__
 369 0190 DEB7      		in r29,__SP_H__
 370               	.LCFI13:
 371               		.cfi_def_cfa_register 28
 372               	/* prologue: function */
 373               	/* frame size = 1 */
 374               	/* stack size = 3 */
 375               	.L__stack_usage = 3
 376 0192 8983      		std Y+1,r24
 114:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(mode)
 377               		.loc 3 114 0
 378 0194 8981      		ldd r24,Y+1
 379 0196 8823      		tst r24
 380 0198 01F0      		breq .L22
 115:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 116:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 0;
 381               		.loc 3 116 0
 382 019a 8CE6      		ldi r24,lo8(108)
 383 019c 91E0      		ldi r25,lo8(1)
 384 019e FC01      		movw r30,r24
 385 01a0 2081      		ld r18,Z
 386 01a2 2F70      		andi r18,lo8(15)
 387 01a4 FC01      		movw r30,r24
 388 01a6 2083      		st Z,r18
 117:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 7;
 389               		.loc 3 117 0
 390 01a8 8CE6      		ldi r24,lo8(108)
 391 01aa 91E0      		ldi r25,lo8(1)
 392 01ac FC01      		movw r30,r24
 393 01ae 2081      		ld r18,Z
 394 01b0 2E60      		ori r18,lo8(14)
 395 01b2 FC01      		movw r30,r24
 396 01b4 2083      		st Z,r18
 118:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	
 119:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;	// Disable ACK even if requested		
 397               		.loc 3 119 0
 398 01b6 8EE6      		ldi r24,lo8(110)
 399 01b8 91E0      		ldi r25,lo8(1)
 400 01ba FC01      		movw r30,r24
 401 01bc 2081      		ld r18,Z
 402 01be 2061      		ori r18,lo8(16)
 403 01c0 FC01      		movw r30,r24
 404 01c2 2083      		st Z,r18
 120:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 121:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	else
 122:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 123:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 3;
 124:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 125:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		
 126:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 127:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 128:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 405               		.loc 3 128 0
 406 01c4 00C0      		rjmp .L24
 407               	.L22:
 123:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 408               		.loc 3 123 0
 409 01c6 8CE6      		ldi r24,lo8(108)
 410 01c8 91E0      		ldi r25,lo8(1)
 411 01ca FC01      		movw r30,r24
 412 01cc 2081      		ld r18,Z
 413 01ce 2F70      		andi r18,lo8(15)
 414 01d0 2063      		ori r18,lo8(48)
 415 01d2 FC01      		movw r30,r24
 416 01d4 2083      		st Z,r18
 124:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		
 417               		.loc 3 124 0
 418 01d6 8CE6      		ldi r24,lo8(108)
 419 01d8 91E0      		ldi r25,lo8(1)
 420 01da FC01      		movw r30,r24
 421 01dc 2081      		ld r18,Z
 422 01de 217F      		andi r18,lo8(-15)
 423 01e0 2860      		ori r18,lo8(8)
 424 01e2 FC01      		movw r30,r24
 425 01e4 2083      		st Z,r18
 126:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 426               		.loc 3 126 0
 427 01e6 8EE6      		ldi r24,lo8(110)
 428 01e8 91E0      		ldi r25,lo8(1)
 429 01ea FC01      		movw r30,r24
 430 01ec 2081      		ld r18,Z
 431 01ee 2F7E      		andi r18,lo8(-17)
 432 01f0 FC01      		movw r30,r24
 433 01f2 2083      		st Z,r18
 434               	.L24:
 435               		.loc 3 128 0
 436 01f4 0000      		nop
 437               	/* epilogue start */
 438 01f6 0F90      		pop __tmp_reg__
 439 01f8 DF91      		pop r29
 440 01fa CF91      		pop r28
 441 01fc 0895      		ret
 442               		.cfi_endproc
 443               	.LFE77:
 445               	.global	PHY_SetPromiscuousMode
 447               	PHY_SetPromiscuousMode:
 448               	.LFB78:
 129:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 130:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPromiscuousMode(bool mode)
 131:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 449               		.loc 3 131 0
 450               		.cfi_startproc
 451 01fe CF93      		push r28
 452               	.LCFI14:
 453               		.cfi_def_cfa_offset 3
 454               		.cfi_offset 28, -2
 455 0200 DF93      		push r29
 456               	.LCFI15:
 457               		.cfi_def_cfa_offset 4
 458               		.cfi_offset 29, -3
 459 0202 CDB7      		in r28,__SP_L__
 460 0204 DEB7      		in r29,__SP_H__
 461               	.LCFI16:
 462               		.cfi_def_cfa_register 28
 463 0206 2997      		sbiw r28,9
 464               	.LCFI17:
 465               		.cfi_def_cfa_offset 13
 466 0208 0FB6      		in __tmp_reg__,__SREG__
 467 020a F894      		cli
 468 020c DEBF      		out __SP_H__,r29
 469 020e 0FBE      		out __SREG__,__tmp_reg__
 470 0210 CDBF      		out __SP_L__,r28
 471               	/* prologue: function */
 472               	/* frame size = 9 */
 473               	/* stack size = 11 */
 474               	.L__stack_usage = 11
 475 0212 8987      		std Y+9,r24
 132:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t ieee_address[] = { 0, 0, 0, 0, 0, 0, 0, 0 };
 476               		.loc 3 132 0
 477 0214 28E0      		ldi r18,lo8(8)
 478 0216 CE01      		movw r24,r28
 479 0218 0196      		adiw r24,1
 480 021a FC01      		movw r30,r24
 481 021c 322F      		mov r19,r18
 482               		0:
 483 021e 1192      		st Z+,__zero_reg__
 484 0220 3A95      		dec r19
 485 0222 01F4      		brne 0b
 133:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 134:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(mode)
 486               		.loc 3 134 0
 487 0224 8985      		ldd r24,Y+9
 488 0226 8823      		tst r24
 489 0228 01F0      		breq .L26
 135:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 136:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetShortAddr(0);
 490               		.loc 3 136 0
 491 022a 80E0      		ldi r24,0
 492 022c 90E0      		ldi r25,0
 493 022e 0E94 0000 		call PHY_SetShortAddr
 137:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetPanId(0);
 494               		.loc 3 137 0
 495 0232 80E0      		ldi r24,0
 496 0234 90E0      		ldi r25,0
 497 0236 0E94 0000 		call PHY_SetPanId
 138:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetIEEEAddr(ieee_address);
 498               		.loc 3 138 0
 499 023a CE01      		movw r24,r28
 500 023c 0196      		adiw r24,1
 501 023e 0E94 0000 		call PHY_SetIEEEAddr
 139:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 140:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** // AACK_UPLD_RES_FT = 1, AACK_FLT_RES_FT = 0:
 141:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	Any non-corrupted frame with a reserved frame type is indicated by a
 142:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	TRX24_RX_END interrupt. No further address filtering is applied on those frames.
 143:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	A TRX24_AMI interrupt is never generated and the acknowledgment subfield is
 144:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	ignored.
 145:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 146:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackPromMode = 1;	// Enable promiscuous mode
 502               		.loc 3 146 0
 503 0242 87E5      		ldi r24,lo8(87)
 504 0244 91E0      		ldi r25,lo8(1)
 505 0246 FC01      		movw r30,r24
 506 0248 2081      		ld r18,Z
 507 024a 2260      		ori r18,lo8(2)
 508 024c FC01      		movw r30,r24
 509 024e 2083      		st Z,r18
 147:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackUpldResFt = 1;	// Enable reserved frame type reception ; this was changed to
 510               		.loc 3 147 0
 511 0250 87E5      		ldi r24,lo8(87)
 512 0252 91E0      		ldi r25,lo8(1)
 513 0254 FC01      		movw r30,r24
 514 0256 2081      		ld r18,Z
 515 0258 2061      		ori r18,lo8(16)
 516 025a FC01      		movw r30,r24
 517 025c 2083      		st Z,r18
 148:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****                                         // so that the addres isn't checked by filter
 149:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackFltrResFt = 0;	// Disable filter of reserved frame types
 518               		.loc 3 149 0
 519 025e 87E5      		ldi r24,lo8(87)
 520 0260 91E0      		ldi r25,lo8(1)
 521 0262 FC01      		movw r30,r24
 522 0264 2081      		ld r18,Z
 523 0266 2F7D      		andi r18,lo8(-33)
 524 0268 FC01      		movw r30,r24
 525 026a 2083      		st Z,r18
 150:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;		// Disable generation of acknowledgment
 526               		.loc 3 150 0
 527 026c 8EE6      		ldi r24,lo8(110)
 528 026e 91E0      		ldi r25,lo8(1)
 529 0270 FC01      		movw r30,r24
 530 0272 2081      		ld r18,Z
 531 0274 2061      		ori r18,lo8(16)
 532 0276 FC01      		movw r30,r24
 533 0278 2083      		st Z,r18
 151:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 152:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	else
 153:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 154:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG = 0;
 155:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 156:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 157:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 534               		.loc 3 157 0
 535 027a 00C0      		rjmp .L28
 536               	.L26:
 154:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 537               		.loc 3 154 0
 538 027c 87E5      		ldi r24,lo8(87)
 539 027e 91E0      		ldi r25,lo8(1)
 540 0280 FC01      		movw r30,r24
 541 0282 1082      		st Z,__zero_reg__
 155:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 542               		.loc 3 155 0
 543 0284 8EE6      		ldi r24,lo8(110)
 544 0286 91E0      		ldi r25,lo8(1)
 545 0288 FC01      		movw r30,r24
 546 028a 2081      		ld r18,Z
 547 028c 2F7E      		andi r18,lo8(-17)
 548 028e FC01      		movw r30,r24
 549 0290 2083      		st Z,r18
 550               	.L28:
 551               		.loc 3 157 0
 552 0292 0000      		nop
 553               	/* epilogue start */
 554 0294 2996      		adiw r28,9
 555 0296 0FB6      		in __tmp_reg__,__SREG__
 556 0298 F894      		cli
 557 029a DEBF      		out __SP_H__,r29
 558 029c 0FBE      		out __SREG__,__tmp_reg__
 559 029e CDBF      		out __SP_L__,r28
 560 02a0 DF91      		pop r29
 561 02a2 CF91      		pop r28
 562 02a4 0895      		ret
 563               		.cfi_endproc
 564               	.LFE78:
 566               	.global	PHY_SetOptimizedCSMAValues
 568               	PHY_SetOptimizedCSMAValues:
 569               	.LFB79:
 158:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 159:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetOptimizedCSMAValues(void)
 160:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 570               		.loc 3 160 0
 571               		.cfi_startproc
 572 02a6 0F93      		push r16
 573               	.LCFI18:
 574               		.cfi_def_cfa_offset 3
 575               		.cfi_offset 16, -2
 576 02a8 1F93      		push r17
 577               	.LCFI19:
 578               		.cfi_def_cfa_offset 4
 579               		.cfi_offset 17, -3
 580 02aa CF93      		push r28
 581               	.LCFI20:
 582               		.cfi_def_cfa_offset 5
 583               		.cfi_offset 28, -4
 584 02ac DF93      		push r29
 585               	.LCFI21:
 586               		.cfi_def_cfa_offset 6
 587               		.cfi_offset 29, -5
 588 02ae CDB7      		in r28,__SP_L__
 589 02b0 DEB7      		in r29,__SP_H__
 590               	.LCFI22:
 591               		.cfi_def_cfa_register 28
 592               	/* prologue: function */
 593               	/* frame size = 0 */
 594               	/* stack size = 4 */
 595               	.L__stack_usage = 4
 161:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_BE_REG_s.minBe = 0x03;
 596               		.loc 3 161 0
 597 02b2 8FE6      		ldi r24,lo8(111)
 598 02b4 91E0      		ldi r25,lo8(1)
 599 02b6 FC01      		movw r30,r24
 600 02b8 2081      		ld r18,Z
 601 02ba 207F      		andi r18,lo8(-16)
 602 02bc 2360      		ori r18,lo8(3)
 603 02be FC01      		movw r30,r24
 604 02c0 2083      		st Z,r18
 162:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_BE_REG_s.maxBe = 0x08;
 605               		.loc 3 162 0
 606 02c2 8FE6      		ldi r24,lo8(111)
 607 02c4 91E0      		ldi r25,lo8(1)
 608 02c6 FC01      		movw r30,r24
 609 02c8 2081      		ld r18,Z
 610 02ca 2F70      		andi r18,lo8(15)
 611 02cc 2068      		ori r18,lo8(-128)
 612 02ce FC01      		movw r30,r24
 613 02d0 2083      		st Z,r18
 163:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = (uint8_t)PHY_RandomReq();
 614               		.loc 3 163 0
 615 02d2 0DE6      		ldi r16,lo8(109)
 616 02d4 11E0      		ldi r17,lo8(1)
 617 02d6 0E94 0000 		call PHY_RandomReq
 618 02da F801      		movw r30,r16
 619 02dc 8083      		st Z,r24
 164:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 620               		.loc 3 164 0
 621 02de 0000      		nop
 622               	/* epilogue start */
 623 02e0 DF91      		pop r29
 624 02e2 CF91      		pop r28
 625 02e4 1F91      		pop r17
 626 02e6 0F91      		pop r16
 627 02e8 0895      		ret
 628               		.cfi_endproc
 629               	.LFE79:
 631               	.global	PHY_SetRxState
 633               	PHY_SetRxState:
 634               	.LFB80:
 165:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 166:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 167:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 168:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetRxState(bool rx)
 169:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 635               		.loc 3 169 0
 636               		.cfi_startproc
 637 02ea CF93      		push r28
 638               	.LCFI23:
 639               		.cfi_def_cfa_offset 3
 640               		.cfi_offset 28, -2
 641 02ec DF93      		push r29
 642               	.LCFI24:
 643               		.cfi_def_cfa_offset 4
 644               		.cfi_offset 29, -3
 645 02ee 1F92      		push __zero_reg__
 646               	.LCFI25:
 647               		.cfi_def_cfa_offset 5
 648 02f0 CDB7      		in r28,__SP_L__
 649 02f2 DEB7      		in r29,__SP_H__
 650               	.LCFI26:
 651               		.cfi_def_cfa_register 28
 652               	/* prologue: function */
 653               	/* frame size = 1 */
 654               	/* stack size = 3 */
 655               	.L__stack_usage = 3
 656 02f4 8983      		std Y+1,r24
 170:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyRxState = rx;
 657               		.loc 3 170 0
 658 02f6 8981      		ldd r24,Y+1
 659 02f8 8093 0000 		sts phyRxState,r24
 171:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 660               		.loc 3 171 0
 661 02fc 0E94 0000 		call phySetRxState
 172:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 662               		.loc 3 172 0
 663 0300 0000      		nop
 664               	/* epilogue start */
 665 0302 0F90      		pop __tmp_reg__
 666 0304 DF91      		pop r29
 667 0306 CF91      		pop r28
 668 0308 0895      		ret
 669               		.cfi_endproc
 670               	.LFE80:
 672               	.global	PHY_SetChannel
 674               	PHY_SetChannel:
 675               	.LFB81:
 173:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 174:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 175:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 176:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetChannel(uint8_t channel)
 177:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 676               		.loc 3 177 0
 677               		.cfi_startproc
 678 030a CF93      		push r28
 679               	.LCFI27:
 680               		.cfi_def_cfa_offset 3
 681               		.cfi_offset 28, -2
 682 030c DF93      		push r29
 683               	.LCFI28:
 684               		.cfi_def_cfa_offset 4
 685               		.cfi_offset 29, -3
 686 030e 1F92      		push __zero_reg__
 687               	.LCFI29:
 688               		.cfi_def_cfa_offset 5
 689 0310 CDB7      		in r28,__SP_L__
 690 0312 DEB7      		in r29,__SP_H__
 691               	.LCFI30:
 692               		.cfi_def_cfa_register 28
 693               	/* prologue: function */
 694               	/* frame size = 1 */
 695               	/* stack size = 3 */
 696               	.L__stack_usage = 3
 697 0314 8983      		std Y+1,r24
 178:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_CC_CCA_REG_s.channel = channel;
 698               		.loc 3 178 0
 699 0316 88E4      		ldi r24,lo8(72)
 700 0318 91E0      		ldi r25,lo8(1)
 701 031a 2981      		ldd r18,Y+1
 702 031c 2F71      		andi r18,lo8(31)
 703 031e 2F71      		andi r18,lo8(31)
 704 0320 FC01      		movw r30,r24
 705 0322 3081      		ld r19,Z
 706 0324 307E      		andi r19,lo8(-32)
 707 0326 232B      		or r18,r19
 708 0328 FC01      		movw r30,r24
 709 032a 2083      		st Z,r18
 179:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 710               		.loc 3 179 0
 711 032c 0000      		nop
 712               	/* epilogue start */
 713 032e 0F90      		pop __tmp_reg__
 714 0330 DF91      		pop r29
 715 0332 CF91      		pop r28
 716 0334 0895      		ret
 717               		.cfi_endproc
 718               	.LFE81:
 720               	.global	PHY_SetPanId
 722               	PHY_SetPanId:
 723               	.LFB82:
 180:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 181:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 182:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 183:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPanId(uint16_t panId)
 184:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 724               		.loc 3 184 0
 725               		.cfi_startproc
 726 0336 CF93      		push r28
 727               	.LCFI31:
 728               		.cfi_def_cfa_offset 3
 729               		.cfi_offset 28, -2
 730 0338 DF93      		push r29
 731               	.LCFI32:
 732               		.cfi_def_cfa_offset 4
 733               		.cfi_offset 29, -3
 734 033a 00D0      		rcall .
 735 033c 00D0      		rcall .
 736               	.LCFI33:
 737               		.cfi_def_cfa_offset 8
 738 033e CDB7      		in r28,__SP_L__
 739 0340 DEB7      		in r29,__SP_H__
 740               	.LCFI34:
 741               		.cfi_def_cfa_register 28
 742               	/* prologue: function */
 743               	/* frame size = 4 */
 744               	/* stack size = 6 */
 745               	.L__stack_usage = 6
 746 0342 9C83      		std Y+4,r25
 747 0344 8B83      		std Y+3,r24
 185:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *d = (uint8_t *)&panId;
 748               		.loc 3 185 0
 749 0346 CE01      		movw r24,r28
 750 0348 0396      		adiw r24,3
 751 034a 9A83      		std Y+2,r25
 752 034c 8983      		std Y+1,r24
 186:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 187:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PAN_ID_0_REG = d[0];
 753               		.loc 3 187 0
 754 034e 82E6      		ldi r24,lo8(98)
 755 0350 91E0      		ldi r25,lo8(1)
 756 0352 2981      		ldd r18,Y+1
 757 0354 3A81      		ldd r19,Y+2
 758 0356 F901      		movw r30,r18
 759 0358 2081      		ld r18,Z
 760 035a FC01      		movw r30,r24
 761 035c 2083      		st Z,r18
 188:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PAN_ID_1_REG = d[1];
 762               		.loc 3 188 0
 763 035e 83E6      		ldi r24,lo8(99)
 764 0360 91E0      		ldi r25,lo8(1)
 765 0362 2981      		ldd r18,Y+1
 766 0364 3A81      		ldd r19,Y+2
 767 0366 F901      		movw r30,r18
 768 0368 2181      		ldd r18,Z+1
 769 036a FC01      		movw r30,r24
 770 036c 2083      		st Z,r18
 189:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 771               		.loc 3 189 0
 772 036e 0000      		nop
 773               	/* epilogue start */
 774 0370 0F90      		pop __tmp_reg__
 775 0372 0F90      		pop __tmp_reg__
 776 0374 0F90      		pop __tmp_reg__
 777 0376 0F90      		pop __tmp_reg__
 778 0378 DF91      		pop r29
 779 037a CF91      		pop r28
 780 037c 0895      		ret
 781               		.cfi_endproc
 782               	.LFE82:
 784               	.global	PHY_SetShortAddr
 786               	PHY_SetShortAddr:
 787               	.LFB83:
 190:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 191:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 192:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 193:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetShortAddr(uint16_t addr)
 194:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 788               		.loc 3 194 0
 789               		.cfi_startproc
 790 037e CF93      		push r28
 791               	.LCFI35:
 792               		.cfi_def_cfa_offset 3
 793               		.cfi_offset 28, -2
 794 0380 DF93      		push r29
 795               	.LCFI36:
 796               		.cfi_def_cfa_offset 4
 797               		.cfi_offset 29, -3
 798 0382 00D0      		rcall .
 799 0384 00D0      		rcall .
 800               	.LCFI37:
 801               		.cfi_def_cfa_offset 8
 802 0386 CDB7      		in r28,__SP_L__
 803 0388 DEB7      		in r29,__SP_H__
 804               	.LCFI38:
 805               		.cfi_def_cfa_register 28
 806               	/* prologue: function */
 807               	/* frame size = 4 */
 808               	/* stack size = 6 */
 809               	.L__stack_usage = 6
 810 038a 9C83      		std Y+4,r25
 811 038c 8B83      		std Y+3,r24
 195:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *d = (uint8_t *)&addr;
 812               		.loc 3 195 0
 813 038e CE01      		movw r24,r28
 814 0390 0396      		adiw r24,3
 815 0392 9A83      		std Y+2,r25
 816 0394 8983      		std Y+1,r24
 196:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 197:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	SHORT_ADDR_0_REG = d[0];
 817               		.loc 3 197 0
 818 0396 80E6      		ldi r24,lo8(96)
 819 0398 91E0      		ldi r25,lo8(1)
 820 039a 2981      		ldd r18,Y+1
 821 039c 3A81      		ldd r19,Y+2
 822 039e F901      		movw r30,r18
 823 03a0 2081      		ld r18,Z
 824 03a2 FC01      		movw r30,r24
 825 03a4 2083      		st Z,r18
 198:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	SHORT_ADDR_1_REG = d[1];
 826               		.loc 3 198 0
 827 03a6 81E6      		ldi r24,lo8(97)
 828 03a8 91E0      		ldi r25,lo8(1)
 829 03aa 2981      		ldd r18,Y+1
 830 03ac 3A81      		ldd r19,Y+2
 831 03ae F901      		movw r30,r18
 832 03b0 2181      		ldd r18,Z+1
 833 03b2 FC01      		movw r30,r24
 834 03b4 2083      		st Z,r18
 199:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 200:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifndef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
 201:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = d[0] + d[1];
 835               		.loc 3 201 0
 836 03b6 8DE6      		ldi r24,lo8(109)
 837 03b8 91E0      		ldi r25,lo8(1)
 838 03ba 2981      		ldd r18,Y+1
 839 03bc 3A81      		ldd r19,Y+2
 840 03be F901      		movw r30,r18
 841 03c0 4081      		ld r20,Z
 842 03c2 2981      		ldd r18,Y+1
 843 03c4 3A81      		ldd r19,Y+2
 844 03c6 2F5F      		subi r18,-1
 845 03c8 3F4F      		sbci r19,-1
 846 03ca F901      		movw r30,r18
 847 03cc 2081      		ld r18,Z
 848 03ce 240F      		add r18,r20
 849 03d0 FC01      		movw r30,r24
 850 03d2 2083      		st Z,r18
 202:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
 203:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 851               		.loc 3 203 0
 852 03d4 0000      		nop
 853               	/* epilogue start */
 854 03d6 0F90      		pop __tmp_reg__
 855 03d8 0F90      		pop __tmp_reg__
 856 03da 0F90      		pop __tmp_reg__
 857 03dc 0F90      		pop __tmp_reg__
 858 03de DF91      		pop r29
 859 03e0 CF91      		pop r28
 860 03e2 0895      		ret
 861               		.cfi_endproc
 862               	.LFE83:
 864               	.global	PHY_SetTxPower
 866               	PHY_SetTxPower:
 867               	.LFB84:
 204:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 205:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 206:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 207:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetTxPower(uint8_t txPower)
 208:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 868               		.loc 3 208 0
 869               		.cfi_startproc
 870 03e4 CF93      		push r28
 871               	.LCFI39:
 872               		.cfi_def_cfa_offset 3
 873               		.cfi_offset 28, -2
 874 03e6 DF93      		push r29
 875               	.LCFI40:
 876               		.cfi_def_cfa_offset 4
 877               		.cfi_offset 29, -3
 878 03e8 1F92      		push __zero_reg__
 879               	.LCFI41:
 880               		.cfi_def_cfa_offset 5
 881 03ea CDB7      		in r28,__SP_L__
 882 03ec DEB7      		in r29,__SP_H__
 883               	.LCFI42:
 884               		.cfi_def_cfa_register 28
 885               	/* prologue: function */
 886               	/* frame size = 1 */
 887               	/* stack size = 3 */
 888               	.L__stack_usage = 3
 889 03ee 8983      		std Y+1,r24
 209:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_TX_PWR_REG_s.txPwr = txPower;
 890               		.loc 3 209 0
 891 03f0 85E4      		ldi r24,lo8(69)
 892 03f2 91E0      		ldi r25,lo8(1)
 893 03f4 2981      		ldd r18,Y+1
 894 03f6 2F70      		andi r18,lo8(15)
 895 03f8 2F70      		andi r18,lo8(15)
 896 03fa FC01      		movw r30,r24
 897 03fc 3081      		ld r19,Z
 898 03fe 307F      		andi r19,lo8(-16)
 899 0400 232B      		or r18,r19
 900 0402 FC01      		movw r30,r24
 901 0404 2083      		st Z,r18
 210:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 902               		.loc 3 210 0
 903 0406 0000      		nop
 904               	/* epilogue start */
 905 0408 0F90      		pop __tmp_reg__
 906 040a DF91      		pop r29
 907 040c CF91      		pop r28
 908 040e 0895      		ret
 909               		.cfi_endproc
 910               	.LFE84:
 912               	.global	PHY_Sleep
 914               	PHY_Sleep:
 915               	.LFB85:
 211:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 212:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 213:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 214:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Sleep(void)
 215:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 916               		.loc 3 215 0
 917               		.cfi_startproc
 918 0410 CF93      		push r28
 919               	.LCFI43:
 920               		.cfi_def_cfa_offset 3
 921               		.cfi_offset 28, -2
 922 0412 DF93      		push r29
 923               	.LCFI44:
 924               		.cfi_def_cfa_offset 4
 925               		.cfi_offset 29, -3
 926 0414 CDB7      		in r28,__SP_L__
 927 0416 DEB7      		in r29,__SP_H__
 928               	.LCFI45:
 929               		.cfi_def_cfa_register 28
 930               	/* prologue: function */
 931               	/* frame size = 0 */
 932               	/* stack size = 2 */
 933               	.L__stack_usage = 2
 216:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(phyState != PHY_STATE_SLEEP)
 934               		.loc 3 216 0
 935 0418 8091 0000 		lds r24,phyState
 936 041c 8230      		cpi r24,lo8(2)
 937 041e 01F0      		breq .L37
 217:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 218:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyTrxSetState(TRX_CMD_TRX_OFF);
 938               		.loc 3 218 0
 939 0420 88E0      		ldi r24,lo8(8)
 940 0422 0E94 0000 		call phyTrxSetState
 219:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRXPR_REG_s.slptr = 1;
 941               		.loc 3 219 0
 942 0426 89E3      		ldi r24,lo8(57)
 943 0428 91E0      		ldi r25,lo8(1)
 944 042a FC01      		movw r30,r24
 945 042c 2081      		ld r18,Z
 946 042e 2260      		ori r18,lo8(2)
 947 0430 FC01      		movw r30,r24
 948 0432 2083      		st Z,r18
 220:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyState = PHY_STATE_SLEEP;		
 949               		.loc 3 220 0
 950 0434 82E0      		ldi r24,lo8(2)
 951 0436 8093 0000 		sts phyState,r24
 952               	.L37:
 221:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 222:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	
 223:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
 224:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 0;
 225:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 0;
 226:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #else
 227:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DEFAULT != 0)
 228:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 0;
 229:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antCtrl = 0;
 230:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DEFAULT
 231:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // ANTENNA_DIVERSITY
 232:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 233:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 0;
 234:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 235:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 953               		.loc 3 235 0
 954 043a 0000      		nop
 955               	/* epilogue start */
 956 043c DF91      		pop r29
 957 043e CF91      		pop r28
 958 0440 0895      		ret
 959               		.cfi_endproc
 960               	.LFE85:
 962               	.global	PHY_Wakeup
 964               	PHY_Wakeup:
 965               	.LFB86:
 236:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 237:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 238:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 239:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Wakeup(void)
 240:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 966               		.loc 3 240 0
 967               		.cfi_startproc
 968 0442 CF93      		push r28
 969               	.LCFI46:
 970               		.cfi_def_cfa_offset 3
 971               		.cfi_offset 28, -2
 972 0444 DF93      		push r29
 973               	.LCFI47:
 974               		.cfi_def_cfa_offset 4
 975               		.cfi_offset 29, -3
 976 0446 CDB7      		in r28,__SP_L__
 977 0448 DEB7      		in r29,__SP_H__
 978               	.LCFI48:
 979               		.cfi_def_cfa_register 28
 980               	/* prologue: function */
 981               	/* frame size = 0 */
 982               	/* stack size = 2 */
 983               	.L__stack_usage = 2
 241:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.slptr = 0;
 984               		.loc 3 241 0
 985 044a 89E3      		ldi r24,lo8(57)
 986 044c 91E0      		ldi r25,lo8(1)
 987 044e FC01      		movw r30,r24
 988 0450 2081      		ld r18,Z
 989 0452 2D7F      		andi r18,lo8(-3)
 990 0454 FC01      		movw r30,r24
 991 0456 2083      		st Z,r18
 242:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 992               		.loc 3 242 0
 993 0458 0E94 0000 		call phySetRxState
 243:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_IDLE;
 994               		.loc 3 243 0
 995 045c 81E0      		ldi r24,lo8(1)
 996 045e 8093 0000 		sts phyState,r24
 244:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 997               		.loc 3 244 0
 998 0462 0000      		nop
 999               	/* epilogue start */
 1000 0464 DF91      		pop r29
 1001 0466 CF91      		pop r28
 1002 0468 0895      		ret
 1003               		.cfi_endproc
 1004               	.LFE86:
 1006               		.section	.rodata.str1.1,"aMS",@progbits,1
 1007               	.LC0:
 1008 0000 0A25 6868 		.string	"\n%hhx"
 1008      7800 
 1009               		.text
 1010               	.global	PHY_DataReq
 1012               	PHY_DataReq:
 1013               	.LFB87:
 245:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 246:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 247:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 248:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*
 249:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_DataReq(uint8_t *data)
 250:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 251:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TX_ARET_ON);
 252:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 253:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_FRAME_BUFFER(0) = data[0] + PHY_CRC_SIZE;
 254:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	for (uint8_t i = 0; i < data[0]; i++) {
 255:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_FRAME_BUFFER(i + 1) = data[i + 1];
 256:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 257:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 258:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_TX_WAIT_END;
 259:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_STATE_REG = TRX_CMD_TX_START;
 260:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 261:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** */
 262:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_DataReq(uint8_t *data, uint8_t size)
 263:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1014               		.loc 3 263 0
 1015               		.cfi_startproc
 1016 046a CF93      		push r28
 1017               	.LCFI49:
 1018               		.cfi_def_cfa_offset 3
 1019               		.cfi_offset 28, -2
 1020 046c DF93      		push r29
 1021               	.LCFI50:
 1022               		.cfi_def_cfa_offset 4
 1023               		.cfi_offset 29, -3
 1024 046e 00D0      		rcall .
 1025 0470 00D0      		rcall .
 1026               	.LCFI51:
 1027               		.cfi_def_cfa_offset 8
 1028 0472 CDB7      		in r28,__SP_L__
 1029 0474 DEB7      		in r29,__SP_H__
 1030               	.LCFI52:
 1031               		.cfi_def_cfa_register 28
 1032               	/* prologue: function */
 1033               	/* frame size = 4 */
 1034               	/* stack size = 6 */
 1035               	.L__stack_usage = 6
 1036 0476 9B83      		std Y+3,r25
 1037 0478 8A83      		std Y+2,r24
 1038 047a 6C83      		std Y+4,r22
 264:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyTrxSetState(TRX_CMD_TX_ARET_ON);
 1039               		.loc 3 264 0
 1040 047c 89E1      		ldi r24,lo8(25)
 1041 047e 0E94 0000 		call phyTrxSetState
 265:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 266:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1042               		.loc 3 266 0
 1043 0482 8FE4      		ldi r24,lo8(79)
 1044 0484 91E0      		ldi r25,lo8(1)
 1045 0486 2FEF      		ldi r18,lo8(-1)
 1046 0488 FC01      		movw r30,r24
 1047 048a 2083      		st Z,r18
 267:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 268:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_FRAME_BUFFER(0) = size + PHY_CRC_SIZE;
 1048               		.loc 3 268 0
 1049 048c 80E8      		ldi r24,lo8(-128)
 1050 048e 91E0      		ldi r25,lo8(1)
 1051 0490 2C81      		ldd r18,Y+4
 1052 0492 2E5F      		subi r18,lo8(-(2))
 1053 0494 FC01      		movw r30,r24
 1054 0496 2083      		st Z,r18
 1055               	.LBB2:
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1056               		.loc 3 269 0
 1057 0498 1982      		std Y+1,__zero_reg__
 1058 049a 00C0      		rjmp .L40
 1059               	.L41:
 1060               	.LBB3:
 270:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   {
 271:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	printf("\n%hhx", data[i]);
 1061               		.loc 3 271 0 discriminator 3
 1062 049c 8981      		ldd r24,Y+1
 1063 049e 882F      		mov r24,r24
 1064 04a0 90E0      		ldi r25,0
 1065 04a2 2A81      		ldd r18,Y+2
 1066 04a4 3B81      		ldd r19,Y+3
 1067 04a6 820F      		add r24,r18
 1068 04a8 931F      		adc r25,r19
 1069 04aa FC01      		movw r30,r24
 1070 04ac 8081      		ld r24,Z
 1071 04ae 882F      		mov r24,r24
 1072 04b0 90E0      		ldi r25,0
 1073 04b2 292F      		mov r18,r25
 1074 04b4 2F93      		push r18
 1075 04b6 8F93      		push r24
 1076 04b8 80E0      		ldi r24,lo8(.LC0)
 1077 04ba 90E0      		ldi r25,hi8(.LC0)
 1078 04bc 892F      		mov r24,r25
 1079 04be 8F93      		push r24
 1080 04c0 80E0      		ldi r24,lo8(.LC0)
 1081 04c2 90E0      		ldi r25,hi8(.LC0)
 1082 04c4 8F93      		push r24
 1083 04c6 0E94 0000 		call printf
 1084 04ca 0F90      		pop __tmp_reg__
 1085 04cc 0F90      		pop __tmp_reg__
 1086 04ce 0F90      		pop __tmp_reg__
 1087 04d0 0F90      		pop __tmp_reg__
 272:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     TRX_FRAME_BUFFER(i+1) = data[i];
 1088               		.loc 3 272 0 discriminator 3
 1089 04d2 8981      		ldd r24,Y+1
 1090 04d4 882F      		mov r24,r24
 1091 04d6 90E0      		ldi r25,0
 1092 04d8 8F57      		subi r24,127
 1093 04da 9E4F      		sbci r25,-2
 1094 04dc AC01      		movw r20,r24
 1095 04de 8981      		ldd r24,Y+1
 1096 04e0 882F      		mov r24,r24
 1097 04e2 90E0      		ldi r25,0
 1098 04e4 2A81      		ldd r18,Y+2
 1099 04e6 3B81      		ldd r19,Y+3
 1100 04e8 820F      		add r24,r18
 1101 04ea 931F      		adc r25,r19
 1102 04ec FC01      		movw r30,r24
 1103 04ee 8081      		ld r24,Z
 1104 04f0 FA01      		movw r30,r20
 1105 04f2 8083      		st Z,r24
 1106               	.LBE3:
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1107               		.loc 3 269 0 discriminator 3
 1108 04f4 8981      		ldd r24,Y+1
 1109 04f6 8F5F      		subi r24,lo8(-(1))
 1110 04f8 8983      		std Y+1,r24
 1111               	.L40:
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1112               		.loc 3 269 0 is_stmt 0 discriminator 1
 1113 04fa 9981      		ldd r25,Y+1
 1114 04fc 8C81      		ldd r24,Y+4
 1115 04fe 9817      		cp r25,r24
 1116 0500 00F0      		brlo .L41
 1117               	.LBE2:
 273:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   }
 274:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyState = PHY_STATE_TX_WAIT_END;
 1118               		.loc 3 274 0 is_stmt 1
 1119 0502 83E0      		ldi r24,lo8(3)
 1120 0504 8093 0000 		sts phyState,r24
 275:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_STATE_REG = TRX_CMD_TX_START;
 1121               		.loc 3 275 0
 1122 0508 82E4      		ldi r24,lo8(66)
 1123 050a 91E0      		ldi r25,lo8(1)
 1124 050c 22E0      		ldi r18,lo8(2)
 1125 050e FC01      		movw r30,r24
 1126 0510 2083      		st Z,r18
 276:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1127               		.loc 3 276 0
 1128 0512 0000      		nop
 1129               	/* epilogue start */
 1130 0514 0F90      		pop __tmp_reg__
 1131 0516 0F90      		pop __tmp_reg__
 1132 0518 0F90      		pop __tmp_reg__
 1133 051a 0F90      		pop __tmp_reg__
 1134 051c DF91      		pop r29
 1135 051e CF91      		pop r28
 1136 0520 0895      		ret
 1137               		.cfi_endproc
 1138               	.LFE87:
 1140               	.global	PHY_RandomReq
 1142               	PHY_RandomReq:
 1143               	.LFB88:
 277:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 278:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 279:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 280:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 281:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** uint16_t PHY_RandomReq(void)
 282:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1144               		.loc 3 282 0
 1145               		.cfi_startproc
 1146 0522 CF93      		push r28
 1147               	.LCFI53:
 1148               		.cfi_def_cfa_offset 3
 1149               		.cfi_offset 28, -2
 1150 0524 DF93      		push r29
 1151               	.LCFI54:
 1152               		.cfi_def_cfa_offset 4
 1153               		.cfi_offset 29, -3
 1154 0526 00D0      		rcall .
 1155 0528 1F92      		push __zero_reg__
 1156               	.LCFI55:
 1157               		.cfi_def_cfa_offset 7
 1158 052a CDB7      		in r28,__SP_L__
 1159 052c DEB7      		in r29,__SP_H__
 1160               	.LCFI56:
 1161               		.cfi_def_cfa_register 28
 1162               	/* prologue: function */
 1163               	/* frame size = 3 */
 1164               	/* stack size = 5 */
 1165               	.L__stack_usage = 5
 283:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint16_t rnd = 0;
 1166               		.loc 3 283 0
 1167 052e 1A82      		std Y+2,__zero_reg__
 1168 0530 1982      		std Y+1,__zero_reg__
 284:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 285:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_RX_ON);
 1169               		.loc 3 285 0
 1170 0532 86E0      		ldi r24,lo8(6)
 1171 0534 0E94 0000 		call phyTrxSetState
 1172               	.LBB4:
 286:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 287:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	for (uint8_t i = 0; i < 16; i += 2) {
 1173               		.loc 3 287 0
 1174 0538 1B82      		std Y+3,__zero_reg__
 1175 053a 00C0      		rjmp .L43
 1176               	.L44:
 288:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1177               		.loc 3 288 0 discriminator 3
 1178 053c 62E0      		ldi r22,lo8(2)
 1179 053e 70E0      		ldi r23,0
 1180 0540 80E0      		ldi r24,0
 1181 0542 90E0      		ldi r25,0
 1182 0544 0E94 0000 		call __portable_avr_delay_cycles
 289:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		rnd |= PHY_RSSI_REG_s.rndValue << i;
 1183               		.loc 3 289 0 discriminator 3
 1184 0548 86E4      		ldi r24,lo8(70)
 1185 054a 91E0      		ldi r25,lo8(1)
 1186 054c FC01      		movw r30,r24
 1187 054e 8081      		ld r24,Z
 1188 0550 8295      		swap r24
 1189 0552 8695      		lsr r24
 1190 0554 8770      		andi r24,lo8(7)
 1191 0556 8370      		andi r24,lo8(3)
 1192 0558 882F      		mov r24,r24
 1193 055a 90E0      		ldi r25,0
 1194 055c 2B81      		ldd r18,Y+3
 1195 055e 222F      		mov r18,r18
 1196 0560 30E0      		ldi r19,0
 1197 0562 00C0      		rjmp 2f
 1198               		1:
 1199 0564 880F      		lsl r24
 1200 0566 991F      		rol r25
 1201               		2:
 1202 0568 2A95      		dec r18
 1203 056a 02F4      		brpl 1b
 1204 056c 9C01      		movw r18,r24
 1205 056e 8981      		ldd r24,Y+1
 1206 0570 9A81      		ldd r25,Y+2
 1207 0572 822B      		or r24,r18
 1208 0574 932B      		or r25,r19
 1209 0576 9A83      		std Y+2,r25
 1210 0578 8983      		std Y+1,r24
 287:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1211               		.loc 3 287 0 discriminator 3
 1212 057a 8B81      		ldd r24,Y+3
 1213 057c 8E5F      		subi r24,lo8(-(2))
 1214 057e 8B83      		std Y+3,r24
 1215               	.L43:
 287:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1216               		.loc 3 287 0 is_stmt 0 discriminator 1
 1217 0580 8B81      		ldd r24,Y+3
 1218 0582 8031      		cpi r24,lo8(16)
 1219 0584 00F0      		brlo .L44
 1220               	.LBE4:
 290:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 291:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 292:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1221               		.loc 3 292 0 is_stmt 1
 1222 0586 0E94 0000 		call phySetRxState
 293:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 294:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	return rnd;
 1223               		.loc 3 294 0
 1224 058a 8981      		ldd r24,Y+1
 1225 058c 9A81      		ldd r25,Y+2
 1226               	/* epilogue start */
 295:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1227               		.loc 3 295 0
 1228 058e 0F90      		pop __tmp_reg__
 1229 0590 0F90      		pop __tmp_reg__
 1230 0592 0F90      		pop __tmp_reg__
 1231 0594 DF91      		pop r29
 1232 0596 CF91      		pop r28
 1233 0598 0895      		ret
 1234               		.cfi_endproc
 1235               	.LFE88:
 1237               	.global	PHY_EncryptReq
 1239               	PHY_EncryptReq:
 1240               	.LFB89:
 296:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 297:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 298:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 299:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_EncryptReq(uint8_t *text, uint8_t *key)
 300:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1241               		.loc 3 300 0
 1242               		.cfi_startproc
 1243 059a CF93      		push r28
 1244               	.LCFI57:
 1245               		.cfi_def_cfa_offset 3
 1246               		.cfi_offset 28, -2
 1247 059c DF93      		push r29
 1248               	.LCFI58:
 1249               		.cfi_def_cfa_offset 4
 1250               		.cfi_offset 29, -3
 1251 059e 00D0      		rcall .
 1252 05a0 00D0      		rcall .
 1253               	.LCFI59:
 1254               		.cfi_def_cfa_offset 8
 1255 05a2 CDB7      		in r28,__SP_L__
 1256 05a4 DEB7      		in r29,__SP_H__
 1257               	.LCFI60:
 1258               		.cfi_def_cfa_register 28
 1259               	/* prologue: function */
 1260               	/* frame size = 4 */
 1261               	/* stack size = 6 */
 1262               	.L__stack_usage = 6
 1263 05a6 9A83      		std Y+2,r25
 1264 05a8 8983      		std Y+1,r24
 1265 05aa 7C83      		std Y+4,r23
 1266 05ac 6B83      		std Y+3,r22
 301:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_setup(key, AES_MODE_ECB, AES_DIR_ENCRYPT);
 1267               		.loc 3 301 0
 1268 05ae 8B81      		ldd r24,Y+3
 1269 05b0 9C81      		ldd r25,Y+4
 1270 05b2 40E0      		ldi r20,0
 1271 05b4 60E0      		ldi r22,0
 1272 05b6 0E94 0000 		call sal_aes_setup
 302:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_exec(text);
 1273               		.loc 3 302 0
 1274 05ba 8981      		ldd r24,Y+1
 1275 05bc 9A81      		ldd r25,Y+2
 1276 05be 0E94 0000 		call sal_aes_exec
 303:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_read(text);
 1277               		.loc 3 303 0
 1278 05c2 8981      		ldd r24,Y+1
 1279 05c4 9A81      		ldd r25,Y+2
 1280 05c6 0E94 0000 		call sal_aes_read
 304:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1281               		.loc 3 304 0
 1282 05ca 0000      		nop
 1283               	/* epilogue start */
 1284 05cc 0F90      		pop __tmp_reg__
 1285 05ce 0F90      		pop __tmp_reg__
 1286 05d0 0F90      		pop __tmp_reg__
 1287 05d2 0F90      		pop __tmp_reg__
 1288 05d4 DF91      		pop r29
 1289 05d6 CF91      		pop r28
 1290 05d8 0895      		ret
 1291               		.cfi_endproc
 1292               	.LFE89:
 1294               	.global	PHY_EdReq
 1296               	PHY_EdReq:
 1297               	.LFB90:
 305:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 306:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 307:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 308:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** int8_t PHY_EdReq(void)
 309:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1298               		.loc 3 309 0
 1299               		.cfi_startproc
 1300 05da CF93      		push r28
 1301               	.LCFI61:
 1302               		.cfi_def_cfa_offset 3
 1303               		.cfi_offset 28, -2
 1304 05dc DF93      		push r29
 1305               	.LCFI62:
 1306               		.cfi_def_cfa_offset 4
 1307               		.cfi_offset 29, -3
 1308 05de 1F92      		push __zero_reg__
 1309               	.LCFI63:
 1310               		.cfi_def_cfa_offset 5
 1311 05e0 CDB7      		in r28,__SP_L__
 1312 05e2 DEB7      		in r29,__SP_H__
 1313               	.LCFI64:
 1314               		.cfi_def_cfa_register 28
 1315               	/* prologue: function */
 1316               	/* frame size = 1 */
 1317               	/* stack size = 3 */
 1318               	.L__stack_usage = 3
 310:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	int8_t ed;
 311:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 312:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_RX_ON);
 1319               		.loc 3 312 0
 1320 05e4 86E0      		ldi r24,lo8(6)
 1321 05e6 0E94 0000 		call phyTrxSetState
 313:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 314:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IRQ_STATUS_REG_s.ccaEdDone = 1;
 1322               		.loc 3 314 0
 1323 05ea 8FE4      		ldi r24,lo8(79)
 1324 05ec 91E0      		ldi r25,lo8(1)
 1325 05ee FC01      		movw r30,r24
 1326 05f0 2081      		ld r18,Z
 1327 05f2 2061      		ori r18,lo8(16)
 1328 05f4 FC01      		movw r30,r24
 1329 05f6 2083      		st Z,r18
 315:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_ED_LEVEL_REG = 0;
 1330               		.loc 3 315 0
 1331 05f8 87E4      		ldi r24,lo8(71)
 1332 05fa 91E0      		ldi r25,lo8(1)
 1333 05fc FC01      		movw r30,r24
 1334 05fe 1082      		st Z,__zero_reg__
 316:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	while (0 == IRQ_STATUS_REG_s.ccaEdDone) {
 1335               		.loc 3 316 0
 1336 0600 0000      		nop
 1337               	.L48:
 1338               		.loc 3 316 0 is_stmt 0 discriminator 1
 1339 0602 8FE4      		ldi r24,lo8(79)
 1340 0604 91E0      		ldi r25,lo8(1)
 1341 0606 FC01      		movw r30,r24
 1342 0608 8081      		ld r24,Z
 1343 060a 8295      		swap r24
 1344 060c 8170      		andi r24,1
 1345 060e 8823      		tst r24
 1346 0610 01F0      		breq .L48
 317:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 318:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 319:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ed = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1347               		.loc 3 319 0 is_stmt 1
 1348 0612 87E4      		ldi r24,lo8(71)
 1349 0614 91E0      		ldi r25,lo8(1)
 1350 0616 FC01      		movw r30,r24
 1351 0618 8081      		ld r24,Z
 1352 061a 8A55      		subi r24,lo8(-(-90))
 1353 061c 8983      		std Y+1,r24
 320:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 321:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1354               		.loc 3 321 0
 1355 061e 0E94 0000 		call phySetRxState
 322:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 323:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	return ed;
 1356               		.loc 3 323 0
 1357 0622 8981      		ldd r24,Y+1
 1358               	/* epilogue start */
 324:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1359               		.loc 3 324 0
 1360 0624 0F90      		pop __tmp_reg__
 1361 0626 DF91      		pop r29
 1362 0628 CF91      		pop r28
 1363 062a 0895      		ret
 1364               		.cfi_endproc
 1365               	.LFE90:
 1368               	phySetRxState:
 1369               	.LFB91:
 325:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 326:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 327:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 328:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phySetRxState(void)
 329:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1370               		.loc 3 329 0
 1371               		.cfi_startproc
 1372 062c CF93      		push r28
 1373               	.LCFI65:
 1374               		.cfi_def_cfa_offset 3
 1375               		.cfi_offset 28, -2
 1376 062e DF93      		push r29
 1377               	.LCFI66:
 1378               		.cfi_def_cfa_offset 4
 1379               		.cfi_offset 29, -3
 1380 0630 CDB7      		in r28,__SP_L__
 1381 0632 DEB7      		in r29,__SP_H__
 1382               	.LCFI67:
 1383               		.cfi_def_cfa_register 28
 1384               	/* prologue: function */
 1385               	/* frame size = 0 */
 1386               	/* stack size = 2 */
 1387               	.L__stack_usage = 2
 330:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 1388               		.loc 3 330 0
 1389 0634 88E0      		ldi r24,lo8(8)
 1390 0636 0E94 0000 		call phyTrxSetState
 331:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 332:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1391               		.loc 3 332 0
 1392 063a 8FE4      		ldi r24,lo8(79)
 1393 063c 91E0      		ldi r25,lo8(1)
 1394 063e 2FEF      		ldi r18,lo8(-1)
 1395 0640 FC01      		movw r30,r24
 1396 0642 2083      		st Z,r18
 333:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 334:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (phyRxState) {
 1397               		.loc 3 334 0
 1398 0644 8091 0000 		lds r24,phyRxState
 1399 0648 8823      		tst r24
 1400 064a 01F0      		breq .L52
 335:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyTrxSetState(TRX_CMD_RX_AACK_ON);
 1401               		.loc 3 335 0
 1402 064c 86E1      		ldi r24,lo8(22)
 1403 064e 0E94 0000 		call phyTrxSetState
 1404               	.L52:
 336:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 337:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1405               		.loc 3 337 0
 1406 0652 0000      		nop
 1407               	/* epilogue start */
 1408 0654 DF91      		pop r29
 1409 0656 CF91      		pop r28
 1410 0658 0895      		ret
 1411               		.cfi_endproc
 1412               	.LFE91:
 1414               	.global	phyTrxSetState
 1416               	phyTrxSetState:
 1417               	.LFB92:
 338:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 339:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 340:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 341:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void phyTrxSetState(uint8_t state)
 342:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1418               		.loc 3 342 0
 1419               		.cfi_startproc
 1420 065a CF93      		push r28
 1421               	.LCFI68:
 1422               		.cfi_def_cfa_offset 3
 1423               		.cfi_offset 28, -2
 1424 065c DF93      		push r29
 1425               	.LCFI69:
 1426               		.cfi_def_cfa_offset 4
 1427               		.cfi_offset 29, -3
 1428 065e 1F92      		push __zero_reg__
 1429               	.LCFI70:
 1430               		.cfi_def_cfa_offset 5
 1431 0660 CDB7      		in r28,__SP_L__
 1432 0662 DEB7      		in r29,__SP_H__
 1433               	.LCFI71:
 1434               		.cfi_def_cfa_register 28
 1435               	/* prologue: function */
 1436               	/* frame size = 1 */
 1437               	/* stack size = 3 */
 1438               	.L__stack_usage = 3
 1439 0664 8983      		std Y+1,r24
 1440               	.L54:
 343:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1) || defined(EXT_RF_FRONT_END_CTRL)
 344:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(phyState == PHY_STATE_SLEEP)
 345:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 346:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DIVERSITY == 1)
 347:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antDivEn = 1;
 348:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
 349:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#else
 350:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		#if (ANTENNA_DEFAULT != 0)
 351:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			ANT_DIV_REG_s.antExtSwEn = 1;
 352:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			ANT_DIV_REG_s.antCtrl = ANTENNA_DEFAULT;
 353:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		#endif // ANTENNA_DEFAULT
 354:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DIVERSITY
 355:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#ifdef EXT_RF_FRONT_END_CTRL
 356:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_1_REG_s.paExtEn = 1;
 357:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // EXT_RF_FRONT_END_CTRL
 358:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 359:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // PLATFORM_WM100
 360:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 361:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	do {TRX_STATE_REG = TRX_CMD_FORCE_TRX_OFF;
 1441               		.loc 3 361 0 discriminator 1
 1442 0666 82E4      		ldi r24,lo8(66)
 1443 0668 91E0      		ldi r25,lo8(1)
 1444 066a 23E0      		ldi r18,lo8(3)
 1445 066c FC01      		movw r30,r24
 1446 066e 2083      		st Z,r18
 362:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	} while (TRX_STATUS_TRX_OFF !=
 363:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1447               		.loc 3 363 0 discriminator 1
 1448 0670 81E4      		ldi r24,lo8(65)
 1449 0672 91E0      		ldi r25,lo8(1)
 1450 0674 FC01      		movw r30,r24
 1451 0676 8081      		ld r24,Z
 1452 0678 8F71      		andi r24,lo8(31)
 1453 067a 8830      		cpi r24,lo8(8)
 1454 067c 01F4      		brne .L54
 1455               	.L55:
 364:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 365:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	do {TRX_STATE_REG = state; } while (state !=
 1456               		.loc 3 365 0 discriminator 1
 1457 067e 82E4      		ldi r24,lo8(66)
 1458 0680 91E0      		ldi r25,lo8(1)
 1459 0682 2981      		ldd r18,Y+1
 1460 0684 FC01      		movw r30,r24
 1461 0686 2083      		st Z,r18
 366:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1462               		.loc 3 366 0 discriminator 1
 1463 0688 81E4      		ldi r24,lo8(65)
 1464 068a 91E0      		ldi r25,lo8(1)
 1465 068c FC01      		movw r30,r24
 1466 068e 8081      		ld r24,Z
 1467 0690 8F71      		andi r24,lo8(31)
 365:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1468               		.loc 3 365 0 discriminator 1
 1469 0692 982F      		mov r25,r24
 1470               		.loc 3 366 0 discriminator 1
 1471 0694 8981      		ldd r24,Y+1
 1472 0696 9817      		cp r25,r24
 1473 0698 01F4      		brne .L55
 367:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1474               		.loc 3 367 0
 1475 069a 0000      		nop
 1476               	/* epilogue start */
 1477 069c 0F90      		pop __tmp_reg__
 1478 069e DF91      		pop r29
 1479 06a0 CF91      		pop r28
 1480 06a2 0895      		ret
 1481               		.cfi_endproc
 1482               	.LFE92:
 1484               	.global	PHY_SetIEEEAddr
 1486               	PHY_SetIEEEAddr:
 1487               	.LFB93:
 368:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 369:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 370:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 371:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 372:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetIEEEAddr(uint8_t *ieee_addr)
 373:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1488               		.loc 3 373 0
 1489               		.cfi_startproc
 1490 06a4 CF93      		push r28
 1491               	.LCFI72:
 1492               		.cfi_def_cfa_offset 3
 1493               		.cfi_offset 28, -2
 1494 06a6 DF93      		push r29
 1495               	.LCFI73:
 1496               		.cfi_def_cfa_offset 4
 1497               		.cfi_offset 29, -3
 1498 06a8 00D0      		rcall .
 1499 06aa 00D0      		rcall .
 1500               	.LCFI74:
 1501               		.cfi_def_cfa_offset 8
 1502 06ac CDB7      		in r28,__SP_L__
 1503 06ae DEB7      		in r29,__SP_H__
 1504               	.LCFI75:
 1505               		.cfi_def_cfa_register 28
 1506               	/* prologue: function */
 1507               	/* frame size = 4 */
 1508               	/* stack size = 6 */
 1509               	.L__stack_usage = 6
 1510 06b0 9C83      		std Y+4,r25
 1511 06b2 8B83      		std Y+3,r24
 374:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *ptr_to_reg = ieee_addr;
 1512               		.loc 3 374 0
 1513 06b4 8B81      		ldd r24,Y+3
 1514 06b6 9C81      		ldd r25,Y+4
 1515 06b8 9A83      		std Y+2,r25
 1516 06ba 8983      		std Y+1,r24
 375:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_0_REG = *ptr_to_reg++;
 1517               		.loc 3 375 0
 1518 06bc 24E6      		ldi r18,lo8(100)
 1519 06be 31E0      		ldi r19,lo8(1)
 1520 06c0 8981      		ldd r24,Y+1
 1521 06c2 9A81      		ldd r25,Y+2
 1522 06c4 AC01      		movw r20,r24
 1523 06c6 4F5F      		subi r20,-1
 1524 06c8 5F4F      		sbci r21,-1
 1525 06ca 5A83      		std Y+2,r21
 1526 06cc 4983      		std Y+1,r20
 1527 06ce FC01      		movw r30,r24
 1528 06d0 8081      		ld r24,Z
 1529 06d2 F901      		movw r30,r18
 1530 06d4 8083      		st Z,r24
 376:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_1_REG = *ptr_to_reg++;
 1531               		.loc 3 376 0
 1532 06d6 25E6      		ldi r18,lo8(101)
 1533 06d8 31E0      		ldi r19,lo8(1)
 1534 06da 8981      		ldd r24,Y+1
 1535 06dc 9A81      		ldd r25,Y+2
 1536 06de AC01      		movw r20,r24
 1537 06e0 4F5F      		subi r20,-1
 1538 06e2 5F4F      		sbci r21,-1
 1539 06e4 5A83      		std Y+2,r21
 1540 06e6 4983      		std Y+1,r20
 1541 06e8 FC01      		movw r30,r24
 1542 06ea 8081      		ld r24,Z
 1543 06ec F901      		movw r30,r18
 1544 06ee 8083      		st Z,r24
 377:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_2_REG = *ptr_to_reg++;
 1545               		.loc 3 377 0
 1546 06f0 26E6      		ldi r18,lo8(102)
 1547 06f2 31E0      		ldi r19,lo8(1)
 1548 06f4 8981      		ldd r24,Y+1
 1549 06f6 9A81      		ldd r25,Y+2
 1550 06f8 AC01      		movw r20,r24
 1551 06fa 4F5F      		subi r20,-1
 1552 06fc 5F4F      		sbci r21,-1
 1553 06fe 5A83      		std Y+2,r21
 1554 0700 4983      		std Y+1,r20
 1555 0702 FC01      		movw r30,r24
 1556 0704 8081      		ld r24,Z
 1557 0706 F901      		movw r30,r18
 1558 0708 8083      		st Z,r24
 378:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_3_REG = *ptr_to_reg++;
 1559               		.loc 3 378 0
 1560 070a 27E6      		ldi r18,lo8(103)
 1561 070c 31E0      		ldi r19,lo8(1)
 1562 070e 8981      		ldd r24,Y+1
 1563 0710 9A81      		ldd r25,Y+2
 1564 0712 AC01      		movw r20,r24
 1565 0714 4F5F      		subi r20,-1
 1566 0716 5F4F      		sbci r21,-1
 1567 0718 5A83      		std Y+2,r21
 1568 071a 4983      		std Y+1,r20
 1569 071c FC01      		movw r30,r24
 1570 071e 8081      		ld r24,Z
 1571 0720 F901      		movw r30,r18
 1572 0722 8083      		st Z,r24
 379:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_4_REG = *ptr_to_reg++;
 1573               		.loc 3 379 0
 1574 0724 28E6      		ldi r18,lo8(104)
 1575 0726 31E0      		ldi r19,lo8(1)
 1576 0728 8981      		ldd r24,Y+1
 1577 072a 9A81      		ldd r25,Y+2
 1578 072c AC01      		movw r20,r24
 1579 072e 4F5F      		subi r20,-1
 1580 0730 5F4F      		sbci r21,-1
 1581 0732 5A83      		std Y+2,r21
 1582 0734 4983      		std Y+1,r20
 1583 0736 FC01      		movw r30,r24
 1584 0738 8081      		ld r24,Z
 1585 073a F901      		movw r30,r18
 1586 073c 8083      		st Z,r24
 380:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_5_REG = *ptr_to_reg++;
 1587               		.loc 3 380 0
 1588 073e 29E6      		ldi r18,lo8(105)
 1589 0740 31E0      		ldi r19,lo8(1)
 1590 0742 8981      		ldd r24,Y+1
 1591 0744 9A81      		ldd r25,Y+2
 1592 0746 AC01      		movw r20,r24
 1593 0748 4F5F      		subi r20,-1
 1594 074a 5F4F      		sbci r21,-1
 1595 074c 5A83      		std Y+2,r21
 1596 074e 4983      		std Y+1,r20
 1597 0750 FC01      		movw r30,r24
 1598 0752 8081      		ld r24,Z
 1599 0754 F901      		movw r30,r18
 1600 0756 8083      		st Z,r24
 381:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_6_REG = *ptr_to_reg++;
 1601               		.loc 3 381 0
 1602 0758 2AE6      		ldi r18,lo8(106)
 1603 075a 31E0      		ldi r19,lo8(1)
 1604 075c 8981      		ldd r24,Y+1
 1605 075e 9A81      		ldd r25,Y+2
 1606 0760 AC01      		movw r20,r24
 1607 0762 4F5F      		subi r20,-1
 1608 0764 5F4F      		sbci r21,-1
 1609 0766 5A83      		std Y+2,r21
 1610 0768 4983      		std Y+1,r20
 1611 076a FC01      		movw r30,r24
 1612 076c 8081      		ld r24,Z
 1613 076e F901      		movw r30,r18
 1614 0770 8083      		st Z,r24
 382:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_7_REG = *ptr_to_reg;
 1615               		.loc 3 382 0
 1616 0772 8BE6      		ldi r24,lo8(107)
 1617 0774 91E0      		ldi r25,lo8(1)
 1618 0776 2981      		ldd r18,Y+1
 1619 0778 3A81      		ldd r19,Y+2
 1620 077a F901      		movw r30,r18
 1621 077c 2081      		ld r18,Z
 1622 077e FC01      		movw r30,r24
 1623 0780 2083      		st Z,r18
 383:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1624               		.loc 3 383 0
 1625 0782 0000      		nop
 1626               	/* epilogue start */
 1627 0784 0F90      		pop __tmp_reg__
 1628 0786 0F90      		pop __tmp_reg__
 1629 0788 0F90      		pop __tmp_reg__
 1630 078a 0F90      		pop __tmp_reg__
 1631 078c DF91      		pop r29
 1632 078e CF91      		pop r28
 1633 0790 0895      		ret
 1634               		.cfi_endproc
 1635               	.LFE93:
 1637               	.global	PHY_TaskHandler
 1639               	PHY_TaskHandler:
 1640               	.LFB94:
 384:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 385:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 386:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 387:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_TaskHandler(void)
 388:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1641               		.loc 3 388 0
 1642               		.cfi_startproc
 1643 0792 CF93      		push r28
 1644               	.LCFI76:
 1645               		.cfi_def_cfa_offset 3
 1646               		.cfi_offset 28, -2
 1647 0794 DF93      		push r29
 1648               	.LCFI77:
 1649               		.cfi_def_cfa_offset 4
 1650               		.cfi_offset 29, -3
 1651 0796 CDB7      		in r28,__SP_L__
 1652 0798 DEB7      		in r29,__SP_H__
 1653               	.LCFI78:
 1654               		.cfi_def_cfa_register 28
 1655 079a 2897      		sbiw r28,8
 1656               	.LCFI79:
 1657               		.cfi_def_cfa_offset 12
 1658 079c 0FB6      		in __tmp_reg__,__SREG__
 1659 079e F894      		cli
 1660 07a0 DEBF      		out __SP_H__,r29
 1661 07a2 0FBE      		out __SREG__,__tmp_reg__
 1662 07a4 CDBF      		out __SP_L__,r28
 1663               	/* prologue: function */
 1664               	/* frame size = 8 */
 1665               	/* stack size = 10 */
 1666               	.L__stack_usage = 10
 389:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (PHY_STATE_SLEEP == phyState) {
 1667               		.loc 3 389 0
 1668 07a6 8091 0000 		lds r24,phyState
 1669 07aa 8230      		cpi r24,lo8(2)
 1670 07ac 01F4      		brne .+2
 1671 07ae 00C0      		rjmp .L69
 390:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		return;
 391:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 392:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 393:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (IRQ_STATUS_REG_s.rxEnd) {
 1672               		.loc 3 393 0
 1673 07b0 8FE4      		ldi r24,lo8(79)
 1674 07b2 91E0      		ldi r25,lo8(1)
 1675 07b4 FC01      		movw r30,r24
 1676 07b6 8081      		ld r24,Z
 1677 07b8 83FB      		bst r24,3
 1678 07ba 8827      		clr r24
 1679 07bc 80F9      		bld r24,0
 1680 07be 8823      		tst r24
 1681 07c0 01F4      		brne .+2
 1682 07c2 00C0      		rjmp .L60
 1683               	.LBB5:
 394:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_DataInd_t ind;
 395:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		uint8_t size = TST_RX_LENGTH_REG;
 1684               		.loc 3 395 0
 1685 07c4 8BE7      		ldi r24,lo8(123)
 1686 07c6 91E0      		ldi r25,lo8(1)
 1687 07c8 FC01      		movw r30,r24
 1688 07ca 8081      		ld r24,Z
 1689 07cc 8B83      		std Y+3,r24
 1690               	.LBB6:
 396:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 397:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		for (uint8_t i = 0; i < size + 1 /*lqi*/; i++) {
 1691               		.loc 3 397 0
 1692 07ce 1982      		std Y+1,__zero_reg__
 1693 07d0 00C0      		rjmp .L61
 1694               	.L62:
 398:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1695               		.loc 3 398 0 discriminator 3
 1696 07d2 8981      		ldd r24,Y+1
 1697 07d4 882F      		mov r24,r24
 1698 07d6 90E0      		ldi r25,0
 1699 07d8 2981      		ldd r18,Y+1
 1700 07da 222F      		mov r18,r18
 1701 07dc 30E0      		ldi r19,0
 1702 07de 2058      		subi r18,-128
 1703 07e0 3E4F      		sbci r19,-2
 1704 07e2 F901      		movw r30,r18
 1705 07e4 2081      		ld r18,Z
 1706 07e6 8050      		subi r24,lo8(-(phyRxBuffer))
 1707 07e8 9040      		sbci r25,hi8(-(phyRxBuffer))
 1708 07ea FC01      		movw r30,r24
 1709 07ec 2083      		st Z,r18
 397:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1710               		.loc 3 397 0 discriminator 3
 1711 07ee 8981      		ldd r24,Y+1
 1712 07f0 8F5F      		subi r24,lo8(-(1))
 1713 07f2 8983      		std Y+1,r24
 1714               	.L61:
 397:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1715               		.loc 3 397 0 is_stmt 0 discriminator 1
 1716 07f4 8981      		ldd r24,Y+1
 1717 07f6 282F      		mov r18,r24
 1718 07f8 30E0      		ldi r19,0
 1719 07fa 8B81      		ldd r24,Y+3
 1720 07fc 882F      		mov r24,r24
 1721 07fe 90E0      		ldi r25,0
 1722 0800 0196      		adiw r24,1
 1723 0802 2817      		cp r18,r24
 1724 0804 3907      		cpc r19,r25
 1725 0806 04F0      		brlt .L62
 1726               	.LBE6:
 399:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 400:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 401:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.data = phyRxBuffer;
 1727               		.loc 3 401 0 is_stmt 1
 1728 0808 80E0      		ldi r24,lo8(phyRxBuffer)
 1729 080a 90E0      		ldi r25,hi8(phyRxBuffer)
 1730 080c 9D83      		std Y+5,r25
 1731 080e 8C83      		std Y+4,r24
 402:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.size = size - PHY_CRC_SIZE;
 1732               		.loc 3 402 0
 1733 0810 8B81      		ldd r24,Y+3
 1734 0812 8250      		subi r24,lo8(-(-2))
 1735 0814 8E83      		std Y+6,r24
 403:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.lqi  = phyRxBuffer[size];
 1736               		.loc 3 403 0
 1737 0816 8B81      		ldd r24,Y+3
 1738 0818 882F      		mov r24,r24
 1739 081a 90E0      		ldi r25,0
 1740 081c 8050      		subi r24,lo8(-(phyRxBuffer))
 1741 081e 9040      		sbci r25,hi8(-(phyRxBuffer))
 1742 0820 FC01      		movw r30,r24
 1743 0822 8081      		ld r24,Z
 1744 0824 8F83      		std Y+7,r24
 404:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.rssi = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1745               		.loc 3 404 0
 1746 0826 87E4      		ldi r24,lo8(71)
 1747 0828 91E0      		ldi r25,lo8(1)
 1748 082a FC01      		movw r30,r24
 1749 082c 8081      		ld r24,Z
 1750 082e 8A55      		subi r24,lo8(-(-90))
 1751 0830 8887      		std Y+8,r24
 405:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_DataInd(&ind);
 1752               		.loc 3 405 0
 1753 0832 CE01      		movw r24,r28
 1754 0834 0496      		adiw r24,4
 1755 0836 0E94 0000 		call PHY_DataInd
 406:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 407:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		while (TRX_STATUS_RX_AACK_ON != TRX_STATUS_REG_s.trxStatus) {
 1756               		.loc 3 407 0
 1757 083a 0000      		nop
 1758               	.L63:
 1759               		.loc 3 407 0 is_stmt 0 discriminator 1
 1760 083c 81E4      		ldi r24,lo8(65)
 1761 083e 91E0      		ldi r25,lo8(1)
 1762 0840 FC01      		movw r30,r24
 1763 0842 8081      		ld r24,Z
 1764 0844 8F71      		andi r24,lo8(31)
 1765 0846 8631      		cpi r24,lo8(22)
 1766 0848 01F4      		brne .L63
 408:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 409:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 410:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		IRQ_STATUS_REG_s.rxEnd = 1;
 1767               		.loc 3 410 0 is_stmt 1 discriminator 2
 1768 084a 8FE4      		ldi r24,lo8(79)
 1769 084c 91E0      		ldi r25,lo8(1)
 1770 084e FC01      		movw r30,r24
 1771 0850 2081      		ld r18,Z
 1772 0852 2860      		ori r18,lo8(8)
 1773 0854 FC01      		movw r30,r24
 1774 0856 2083      		st Z,r18
 411:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_2_REG_s.rxSafeMode = 0;
 1775               		.loc 3 411 0 discriminator 2
 1776 0858 8CE4      		ldi r24,lo8(76)
 1777 085a 91E0      		ldi r25,lo8(1)
 1778 085c FC01      		movw r30,r24
 1779 085e 2081      		ld r18,Z
 1780 0860 2F77      		andi r18,lo8(127)
 1781 0862 FC01      		movw r30,r24
 1782 0864 2083      		st Z,r18
 412:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_2_REG_s.rxSafeMode = 1;
 1783               		.loc 3 412 0 discriminator 2
 1784 0866 8CE4      		ldi r24,lo8(76)
 1785 0868 91E0      		ldi r25,lo8(1)
 1786 086a FC01      		movw r30,r24
 1787 086c 2081      		ld r18,Z
 1788 086e 2068      		ori r18,lo8(-128)
 1789 0870 FC01      		movw r30,r24
 1790 0872 2083      		st Z,r18
 1791               	.LBE5:
 1792 0874 00C0      		rjmp .L57
 1793               	.L60:
 413:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	} else if (IRQ_STATUS_REG_s.txEnd) {
 1794               		.loc 3 413 0
 1795 0876 8FE4      		ldi r24,lo8(79)
 1796 0878 91E0      		ldi r25,lo8(1)
 1797 087a FC01      		movw r30,r24
 1798 087c 8081      		ld r24,Z
 1799 087e 86FB      		bst r24,6
 1800 0880 8827      		clr r24
 1801 0882 80F9      		bld r24,0
 1802 0884 8823      		tst r24
 1803 0886 01F0      		breq .L57
 414:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		if (TRX_STATUS_TX_ARET_ON == TRX_STATUS_REG_s.trxStatus) {
 1804               		.loc 3 414 0
 1805 0888 81E4      		ldi r24,lo8(65)
 1806 088a 91E0      		ldi r25,lo8(1)
 1807 088c FC01      		movw r30,r24
 1808 088e 8081      		ld r24,Z
 1809 0890 8F71      		andi r24,lo8(31)
 1810 0892 8931      		cpi r24,lo8(25)
 1811 0894 01F4      		brne .L64
 1812               	.LBB7:
 415:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			uint8_t status = TRX_STATE_REG_s.tracStatus;
 1813               		.loc 3 415 0
 1814 0896 82E4      		ldi r24,lo8(66)
 1815 0898 91E0      		ldi r25,lo8(1)
 1816 089a FC01      		movw r30,r24
 1817 089c 8081      		ld r24,Z
 1818 089e 8295      		swap r24
 1819 08a0 8695      		lsr r24
 1820 08a2 8770      		andi r24,lo8(7)
 1821 08a4 8A83      		std Y+2,r24
 416:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 417:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			if (TRAC_STATUS_SUCCESS == status) {
 1822               		.loc 3 417 0
 1823 08a6 8A81      		ldd r24,Y+2
 1824 08a8 8823      		tst r24
 1825 08aa 01F4      		brne .L65
 418:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_SUCCESS;
 1826               		.loc 3 418 0
 1827 08ac 1A82      		std Y+2,__zero_reg__
 1828 08ae 00C0      		rjmp .L66
 1829               	.L65:
 419:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else if (TRAC_STATUS_CHANNEL_ACCESS_FAILURE ==
 1830               		.loc 3 419 0
 1831 08b0 8A81      		ldd r24,Y+2
 1832 08b2 8330      		cpi r24,lo8(3)
 1833 08b4 01F4      		brne .L67
 420:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 					status) {
 421:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_CHANNEL_ACCESS_FAILURE;
 1834               		.loc 3 421 0
 1835 08b6 81E0      		ldi r24,lo8(1)
 1836 08b8 8A83      		std Y+2,r24
 1837 08ba 00C0      		rjmp .L66
 1838               	.L67:
 422:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else if (TRAC_STATUS_NO_ACK == status) {
 1839               		.loc 3 422 0
 1840 08bc 8A81      		ldd r24,Y+2
 1841 08be 8530      		cpi r24,lo8(5)
 1842 08c0 01F4      		brne .L68
 423:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_NO_ACK;
 1843               		.loc 3 423 0
 1844 08c2 82E0      		ldi r24,lo8(2)
 1845 08c4 8A83      		std Y+2,r24
 1846 08c6 00C0      		rjmp .L66
 1847               	.L68:
 424:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else {
 425:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_ERROR;
 1848               		.loc 3 425 0
 1849 08c8 83E0      		ldi r24,lo8(3)
 1850 08ca 8A83      		std Y+2,r24
 1851               	.L66:
 426:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			}
 427:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 428:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phySetRxState();
 1852               		.loc 3 428 0
 1853 08cc 0E94 0000 		call phySetRxState
 429:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyState = PHY_STATE_IDLE;
 1854               		.loc 3 429 0
 1855 08d0 81E0      		ldi r24,lo8(1)
 1856 08d2 8093 0000 		sts phyState,r24
 430:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 431:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			PHY_DataConf(status);
 1857               		.loc 3 431 0
 1858 08d6 8A81      		ldd r24,Y+2
 1859 08d8 0E94 0000 		call PHY_DataConf
 1860               	.L64:
 1861               	.LBE7:
 432:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 433:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 434:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		IRQ_STATUS_REG_s.txEnd = 1;
 1862               		.loc 3 434 0
 1863 08dc 8FE4      		ldi r24,lo8(79)
 1864 08de 91E0      		ldi r25,lo8(1)
 1865 08e0 FC01      		movw r30,r24
 1866 08e2 2081      		ld r18,Z
 1867 08e4 2064      		ori r18,lo8(64)
 1868 08e6 FC01      		movw r30,r24
 1869 08e8 2083      		st Z,r18
 1870 08ea 00C0      		rjmp .L57
 1871               	.L69:
 390:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 1872               		.loc 3 390 0
 1873 08ec 0000      		nop
 1874               	.L57:
 1875               	/* epilogue start */
 435:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 436:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1876               		.loc 3 436 0
 1877 08ee 2896      		adiw r28,8
 1878 08f0 0FB6      		in __tmp_reg__,__SREG__
 1879 08f2 F894      		cli
 1880 08f4 DEBF      		out __SP_H__,r29
 1881 08f6 0FBE      		out __SREG__,__tmp_reg__
 1882 08f8 CDBF      		out __SP_L__,r28
 1883 08fa DF91      		pop r29
 1884 08fc CF91      		pop r28
 1885 08fe 0895      		ret
 1886               		.cfi_endproc
 1887               	.LFE94:
 1889               	.Letext0:
 1890               		.file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 1891               		.file 5 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 1892               		.file 6 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/atmegarfa1.h"
 1893               		.file 7 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 phy.c
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:12     .text:00000000 sysclk_enable_peripheral_clock
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:214    .text:0000011a __portable_avr_delay_cycles
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:239    .bss.phyState:00000000 phyState
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:244    .bss.phyRxBuffer:00000000 phyRxBuffer
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:249    .bss.phyRxState:00000000 phyRxState
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:254    .text:00000126 PHY_Init
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:1416   .text:0000065a phyTrxSetState
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:314    .text:0000016a PHY_ResetRadio
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:353    .text:00000188 PHY_SetTdmaMode
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:447    .text:000001fe PHY_SetPromiscuousMode
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:786    .text:0000037e PHY_SetShortAddr
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:722    .text:00000336 PHY_SetPanId
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:1486   .text:000006a4 PHY_SetIEEEAddr
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:568    .text:000002a6 PHY_SetOptimizedCSMAValues
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:1142   .text:00000522 PHY_RandomReq
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:633    .text:000002ea PHY_SetRxState
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:1368   .text:0000062c phySetRxState
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:674    .text:0000030a PHY_SetChannel
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:866    .text:000003e4 PHY_SetTxPower
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:914    .text:00000410 PHY_Sleep
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:964    .text:00000442 PHY_Wakeup
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:1012   .text:0000046a PHY_DataReq
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:1239   .text:0000059a PHY_EncryptReq
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:1296   .text:000005da PHY_EdReq
C:\Users\GUILHE~1\AppData\Local\Temp\ccatQLtG.s:1639   .text:00000792 PHY_TaskHandler

UNDEFINED SYMBOLS
sysclk_enable_module
printf
sal_aes_setup
sal_aes_exec
sal_aes_read
PHY_DataInd
PHY_DataConf
__do_copy_data
__do_clear_bss
