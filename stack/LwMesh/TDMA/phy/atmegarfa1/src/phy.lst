   1               		.file	"phy.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	sysclk_enable_peripheral_clock:
  13               	.LFB69:
  14               		.file 1 "../../../platform/common/services/clock/mega/sysclk.h"
   1:../../../platform/common/services/clock/mega/sysclk.h **** /**
   2:../../../platform/common/services/clock/mega/sysclk.h ****  * \file
   3:../../../platform/common/services/clock/mega/sysclk.h ****  *
   4:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Chip-specific system clock management functions
   5:../../../platform/common/services/clock/mega/sysclk.h ****  *
   6:../../../platform/common/services/clock/mega/sysclk.h ****  * Copyright (c) 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/mega/sysclk.h ****  *
   8:../../../platform/common/services/clock/mega/sysclk.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/mega/sysclk.h ****  *
  10:../../../platform/common/services/clock/mega/sysclk.h ****  * \page License
  11:../../../platform/common/services/clock/mega/sysclk.h ****  *
  12:../../../platform/common/services/clock/mega/sysclk.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/mega/sysclk.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/mega/sysclk.h ****  *
  15:../../../platform/common/services/clock/mega/sysclk.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/mega/sysclk.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/mega/sysclk.h ****  *
  18:../../../platform/common/services/clock/mega/sysclk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/mega/sysclk.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/mega/sysclk.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/mega/sysclk.h ****  *
  22:../../../platform/common/services/clock/mega/sysclk.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/mega/sysclk.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/mega/sysclk.h ****  *
  25:../../../platform/common/services/clock/mega/sysclk.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/mega/sysclk.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/mega/sysclk.h ****  *
  28:../../../platform/common/services/clock/mega/sysclk.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/mega/sysclk.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/mega/sysclk.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/mega/sysclk.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/mega/sysclk.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/mega/sysclk.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/mega/sysclk.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/mega/sysclk.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/mega/sysclk.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/mega/sysclk.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/mega/sysclk.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/mega/sysclk.h ****  *
  40:../../../platform/common/services/clock/mega/sysclk.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/mega/sysclk.h ****  *
  42:../../../platform/common/services/clock/mega/sysclk.h ****  */
  43:../../../platform/common/services/clock/mega/sysclk.h **** #ifndef MEGA_SYSCLK_H_INCLUDED
  44:../../../platform/common/services/clock/mega/sysclk.h **** #define MEGA_SYSCLK_H_INCLUDED
  45:../../../platform/common/services/clock/mega/sysclk.h **** 
  46:../../../platform/common/services/clock/mega/sysclk.h **** #include <board.h>
  47:../../../platform/common/services/clock/mega/sysclk.h **** #include <compiler.h>
  48:../../../platform/common/services/clock/mega/sysclk.h **** #include <parts.h>
  49:../../../platform/common/services/clock/mega/sysclk.h **** 
  50:../../../platform/common/services/clock/mega/sysclk.h **** /* Include clock configuration for the project. */
  51:../../../platform/common/services/clock/mega/sysclk.h **** #include <conf_clock.h>
  52:../../../platform/common/services/clock/mega/sysclk.h **** 
  53:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef __cplusplus
  54:../../../platform/common/services/clock/mega/sysclk.h **** extern "C" {
  55:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  56:../../../platform/common/services/clock/mega/sysclk.h **** #define ASM __asm__
  57:../../../platform/common/services/clock/mega/sysclk.h **** 
  58:../../../platform/common/services/clock/mega/sysclk.h **** /* CONFIG_SYSCLK_PSDIV  to use default if not defined*/
  59:../../../platform/common/services/clock/mega/sysclk.h **** #ifndef CONFIG_SYSCLK_PSDIV
  60:../../../platform/common/services/clock/mega/sysclk.h **** # define CONFIG_SYSCLK_PSDIV    SYSCLK_PSDIV_8
  61:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  62:../../../platform/common/services/clock/mega/sysclk.h **** 
  63:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Prescaler Setting (relative to CLKsys) */
  64:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
  65:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_1      0   /* !< Do not prescale */
  66:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_2      1   /* !< Prescale CLKper4 by 2 */
  67:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_4      2   /* !< Prescale CLKper4 by 4 */
  68:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_8      3   /* !< Prescale CLKper4 by 8 */
  69:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_16     4   /* !< Prescale CLKper4 by 16 */
  70:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_32     5   /* !< Prescale CLKper4 by 32 */
  71:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_64     6   /* !< Prescale CLKper4 by 64 */
  72:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_128    7   /* !< Prescale CLKper4 by 128 */
  73:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_256    8   /* !< Prescale CLKper4 by 256 */
  74:../../../platform/common/services/clock/mega/sysclk.h **** 
  75:../../../platform/common/services/clock/mega/sysclk.h **** /* @} */
  76:../../../platform/common/services/clock/mega/sysclk.h **** 
  77:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF || MEGA_XX0_1 || MEGA_XX4 || MEGA_XX4_A
  78:../../../platform/common/services/clock/mega/sysclk.h **** 
  79:../../../platform/common/services/clock/mega/sysclk.h **** #define NUMBER_OF_POWER_REG       2
  80:../../../platform/common/services/clock/mega/sysclk.h **** /*Starting Address for power reduction*/
  81:../../../platform/common/services/clock/mega/sysclk.h **** #define POWER_REG_ADD             PRR0
  82:../../../platform/common/services/clock/mega/sysclk.h **** 
  83:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Power Reduction  Clock Port Numbers */
  84:../../../platform/common/services/clock/mega/sysclk.h **** enum power_red_id {
  85:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG0,     /* !< Devices on PRR0 */
  86:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX4 || !MEGA_XX4_A || MEGA_XX0_1
  87:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG1,     /* !< Devices on PRR1 */
  88:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  89:../../../platform/common/services/clock/mega/sysclk.h **** };
  90:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  91:../../../platform/common/services/clock/mega/sysclk.h **** 
  92:../../../platform/common/services/clock/mega/sysclk.h **** /****************************************************
  93:../../../platform/common/services/clock/mega/sysclk.h ****  * Given a dummy type but not used for these groups
  94:../../../platform/common/services/clock/mega/sysclk.h ****  * to support for otherthen megaRF device.
  95:../../../platform/common/services/clock/mega/sysclk.h ****  **************************************************/
  96:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX8 || MEGA_XX8_A || MEGA_UNSPECIFIED
  97:../../../platform/common/services/clock/mega/sysclk.h **** #define NUMBER_OF_POWER_REG       1
  98:../../../platform/common/services/clock/mega/sysclk.h **** /*Starting Address for power reduction*/
  99:../../../platform/common/services/clock/mega/sysclk.h **** #define POWER_REG_ADD             PRR
 100:../../../platform/common/services/clock/mega/sysclk.h **** 
 101:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Power Reduction  Clock Port Numbers */
 102:../../../platform/common/services/clock/mega/sysclk.h **** enum power_red_id {
 103:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG0,     /* !< Devices on PRR */
 104:../../../platform/common/services/clock/mega/sysclk.h **** };
 105:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 106:../../../platform/common/services/clock/mega/sysclk.h **** 
 107:../../../platform/common/services/clock/mega/sysclk.h **** /* Bit mask for the power reduction register based on */
 108:../../../platform/common/services/clock/mega/sysclk.h **** /*   MCU ARCH.                                        */
 109:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 110:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for PRR2 */
 111:../../../platform/common/services/clock/mega/sysclk.h **** 
 112:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM0_bm                       1 << PRRAM0
 113:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM1_bm                       1 << PRRAM1
 114:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM2_bm                       1 << PRRAM2
 115:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM3_bm                       1 << PRRAM3
 116:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 117:../../../platform/common/services/clock/mega/sysclk.h **** 
 118:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for the power reduction 0 or PRR*/
 119:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN0 && !MEGA_XX_UN0
 120:../../../platform/common/services/clock/mega/sysclk.h **** #define PRADC_bm                        1 << PRADC
 121:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART0_bm                     1 << PRUSART0
 122:../../../platform/common/services/clock/mega/sysclk.h **** #define PRSPI_bm                        1 << PRSPI
 123:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM1_bm                       1 << PRTIM1
 124:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 125:../../../platform/common/services/clock/mega/sysclk.h **** 
 126:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 127:../../../platform/common/services/clock/mega/sysclk.h **** #define PRPGA_bm                        1 << PRPGA
 128:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 129:../../../platform/common/services/clock/mega/sysclk.h **** 
 130:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_UNSPECIFIED
 131:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM0_bm                       1 << PRTIM0
 132:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM2_bm                       1 << PRTIM2
 133:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTWI_bm                        1 << PRTWI
 134:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 135:../../../platform/common/services/clock/mega/sysclk.h **** 
 136:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX_UN2
 137:../../../platform/common/services/clock/mega/sysclk.h **** #define PRLCD_bm                        1 << PRLCD
 138:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 139:../../../platform/common/services/clock/mega/sysclk.h **** 
 140:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for  PRR1  */
 141:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef PRR1
 142:../../../platform/common/services/clock/mega/sysclk.h **** #if (MEGA_XX4 || MEGA_XX4_A)
 143:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM3_bm                       1 << PRTIM3
 144:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 145:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 146:../../../platform/common/services/clock/mega/sysclk.h **** 
 147:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF || MEGA_XX4 || MEGA_XX4_A
 148:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART1_bm                     1 << PRUSART1
 149:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART2_bm                     1 << PRUSART2
 150:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART3_bm                     1 << PRUSART3
 151:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM3_bm                       1 << PRTIM3
 152:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM4_bm                       1 << PRTIM4
 153:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM5_bm                       1 << PRTIM5
 154:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 155:../../../platform/common/services/clock/mega/sysclk.h **** 
 156:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 157:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTRX24_bm                      1 << PRTRX24
 158:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 159:../../../platform/common/services/clock/mega/sysclk.h **** 
 160:../../../platform/common/services/clock/mega/sysclk.h **** /**
 161:../../../platform/common/services/clock/mega/sysclk.h ****  * \name Querying the system clock and its derived clocks
 162:../../../platform/common/services/clock/mega/sysclk.h ****  */
 163:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
 164:../../../platform/common/services/clock/mega/sysclk.h **** 
 165:../../../platform/common/services/clock/mega/sysclk.h **** /**
 166:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the main system clock
 167:../../../platform/common/services/clock/mega/sysclk.h ****  * To know the clock value at what frequency the main clock is running
 168:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the main system clock, in Hz.
 169:../../../platform/common/services/clock/mega/sysclk.h ****  * \todo : please initialize the SYSCLK_SOURCE in conf_clock.h file for
 170:../../../platform/common/services/clock/mega/sysclk.h ****  * configured source clock using fuses.
 171:../../../platform/common/services/clock/mega/sysclk.h ****  * \eg. #define SYSCLK_SOURCE SYSCLK_SRC_RC16MHZ to use internal RC
 172:../../../platform/common/services/clock/mega/sysclk.h ****  * oscillator for clock source.
 173:../../../platform/common/services/clock/mega/sysclk.h ****  */
 174:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_main_hz(void)
 175:../../../platform/common/services/clock/mega/sysclk.h **** {
 176:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (SYSCLK_SOURCE) {
 177:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_RC16MHZ:
 178:../../../platform/common/services/clock/mega/sysclk.h **** 		return 16000000UL;
 179:../../../platform/common/services/clock/mega/sysclk.h **** 
 180:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_RC128KHZ:
 181:../../../platform/common/services/clock/mega/sysclk.h **** 		return 128000UL;
 182:../../../platform/common/services/clock/mega/sysclk.h **** 
 183:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 184:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_TRS16MHZ:
 185:../../../platform/common/services/clock/mega/sysclk.h **** 		return 16000000UL;
 186:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 187:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef BOARD_EXTERNAL_CLK
 188:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_EXTERNAL:
 189:../../../platform/common/services/clock/mega/sysclk.h **** 		return BOARD_EXTERNAL_CLK;
 190:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 191:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 192:../../../platform/common/services/clock/mega/sysclk.h **** 
 193:../../../platform/common/services/clock/mega/sysclk.h **** 		return 1000000UL;
 194:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 195:../../../platform/common/services/clock/mega/sysclk.h **** }
 196:../../../platform/common/services/clock/mega/sysclk.h **** 
 197:../../../platform/common/services/clock/mega/sysclk.h **** /**
 198:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of source clock in Hz.
 199:../../../platform/common/services/clock/mega/sysclk.h ****  *
 200:../../../platform/common/services/clock/mega/sysclk.h ****  * This clock always runs at the same rate as the CPU clock unless the divider
 201:../../../platform/common/services/clock/mega/sysclk.h ****  * is set.
 202:../../../platform/common/services/clock/mega/sysclk.h ****  *
 203:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the system clock, in Hz.
 204:../../../platform/common/services/clock/mega/sysclk.h ****  */
 205:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_source_clock_hz(void)
 206:../../../platform/common/services/clock/mega/sysclk.h **** {
 207:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (CONFIG_SYSCLK_PSDIV) {
 208:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_1: /* Fall through */
 209:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 210:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 211:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 212:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 213:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz();
 214:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 215:../../../platform/common/services/clock/mega/sysclk.h **** 
 216:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_2:
 217:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 218:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 219:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 220:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 221:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 222:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 223:../../../platform/common/services/clock/mega/sysclk.h **** 
 224:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_4:
 225:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 226:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 227:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 228:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 229:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 230:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 231:../../../platform/common/services/clock/mega/sysclk.h **** 
 232:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_8:
 233:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 234:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 235:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 236:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 237:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 238:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 239:../../../platform/common/services/clock/mega/sysclk.h **** 
 240:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_16:
 241:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 242:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 243:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 244:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 245:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 246:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 247:../../../platform/common/services/clock/mega/sysclk.h **** 
 248:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_32:
 249:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 250:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 251:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 252:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 253:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 254:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 255:../../../platform/common/services/clock/mega/sysclk.h **** 
 256:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_64:
 257:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 258:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 259:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 260:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 261:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 262:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 263:../../../platform/common/services/clock/mega/sysclk.h **** 
 264:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_128:
 265:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 266:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 267:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 268:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 269:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 270:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 271:../../../platform/common/services/clock/mega/sysclk.h **** 
 272:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_256:
 273:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 274:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 275:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 512;
 276:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 277:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 278:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 279:../../../platform/common/services/clock/mega/sysclk.h **** 
 280:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 281:../../../platform/common/services/clock/mega/sysclk.h **** 		/*Invalide case*/
 282:../../../platform/common/services/clock/mega/sysclk.h **** 		return 0;
 283:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 284:../../../platform/common/services/clock/mega/sysclk.h **** }
 285:../../../platform/common/services/clock/mega/sysclk.h **** 
 286:../../../platform/common/services/clock/mega/sysclk.h **** /**
 287:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the CPU clock.
 288:../../../platform/common/services/clock/mega/sysclk.h ****  *
 289:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 290:../../../platform/common/services/clock/mega/sysclk.h ****  */
 291:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_cpu_hz(void)
 292:../../../platform/common/services/clock/mega/sysclk.h **** {
 293:../../../platform/common/services/clock/mega/sysclk.h **** 	return sysclk_get_source_clock_hz();
 294:../../../platform/common/services/clock/mega/sysclk.h **** }
 295:../../../platform/common/services/clock/mega/sysclk.h **** 
 296:../../../platform/common/services/clock/mega/sysclk.h **** /**
 297:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the clock from internal oscillator
 298:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 299:../../../platform/common/services/clock/mega/sysclk.h ****  */
 300:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_rc_osc_hz(void)
 301:../../../platform/common/services/clock/mega/sysclk.h **** {
 302:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (CONFIG_SYSCLK_PSDIV) {
 303:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_1:
 304:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 305:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 306:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 307:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 308:../../../platform/common/services/clock/mega/sysclk.h **** 
 309:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_2:
 310:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 311:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 312:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 313:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 314:../../../platform/common/services/clock/mega/sysclk.h **** 
 315:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_4:
 316:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 317:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 318:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 319:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 320:../../../platform/common/services/clock/mega/sysclk.h **** 
 321:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_8:
 322:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 323:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 324:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 325:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 326:../../../platform/common/services/clock/mega/sysclk.h **** 
 327:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_16:
 328:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 329:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 330:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 331:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 332:../../../platform/common/services/clock/mega/sysclk.h **** 
 333:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_32:
 334:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 335:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 336:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 337:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 338:../../../platform/common/services/clock/mega/sysclk.h **** 
 339:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_64:
 340:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 341:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 342:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 343:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 344:../../../platform/common/services/clock/mega/sysclk.h **** 
 345:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_128:
 346:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 347:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 348:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 349:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 350:../../../platform/common/services/clock/mega/sysclk.h **** 
 351:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_256:
 352:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 353:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 354:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 512;
 355:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 356:../../../platform/common/services/clock/mega/sysclk.h **** 
 357:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 358:../../../platform/common/services/clock/mega/sysclk.h **** 		return 0;
 359:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 360:../../../platform/common/services/clock/mega/sysclk.h **** }
 361:../../../platform/common/services/clock/mega/sysclk.h **** 
 362:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Enabling and disabling synchronous clocks */
 363:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
 364:../../../platform/common/services/clock/mega/sysclk.h **** 
 365:../../../platform/common/services/clock/mega/sysclk.h **** /**
 366:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Enable the clock to peripheral \a id on port \a port
 367:../../../platform/common/services/clock/mega/sysclk.h ****  *
 368:../../../platform/common/services/clock/mega/sysclk.h ****  * \param port ID of the port to which the module is connected (one of
 369:../../../platform/common/services/clock/mega/sysclk.h ****  * the \c power_red_id *definitions).
 370:../../../platform/common/services/clock/mega/sysclk.h ****  * \param id The ID (bitmask) of the peripheral module to be disabled.*
 371:../../../platform/common/services/clock/mega/sysclk.h ****  */
 372:../../../platform/common/services/clock/mega/sysclk.h **** extern void sysclk_enable_module(enum power_red_id port, uint8_t id);
 373:../../../platform/common/services/clock/mega/sysclk.h **** 
 374:../../../platform/common/services/clock/mega/sysclk.h **** /**
 375:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Disable the clock to peripheral \a id on port \a port
 376:../../../platform/common/services/clock/mega/sysclk.h ****  *
 377:../../../platform/common/services/clock/mega/sysclk.h ****  * \param port ID of the port to which the module is connected (one of
 378:../../../platform/common/services/clock/mega/sysclk.h ****  * the \c power_red_id *definitions).
 379:../../../platform/common/services/clock/mega/sysclk.h ****  * \param id The ID (bit mask) of the peripheral module to be disabled.
 380:../../../platform/common/services/clock/mega/sysclk.h ****  */
 381:../../../platform/common/services/clock/mega/sysclk.h **** extern void sysclk_disable_module(enum power_red_id port, uint8_t id);
 382:../../../platform/common/services/clock/mega/sysclk.h **** 
 383:../../../platform/common/services/clock/mega/sysclk.h **** /**
 384:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Enable a peripherals clock from its base address.
 385:../../../platform/common/services/clock/mega/sysclk.h ****  *
 386:../../../platform/common/services/clock/mega/sysclk.h ****  *  Enables the clock to a peripheral, given its base address. If the peripheral
 387:../../../platform/common/services/clock/mega/sysclk.h ****  *  has an associated clock on the HSB bus, this will be enabled also.
 388:../../../platform/common/services/clock/mega/sysclk.h ****  *
 389:../../../platform/common/services/clock/mega/sysclk.h ****  * \param module Pointer to the module's base address.
 390:../../../platform/common/services/clock/mega/sysclk.h ****  */
 391:../../../platform/common/services/clock/mega/sysclk.h **** static inline void sysclk_enable_peripheral_clock(const volatile void *module)
 392:../../../platform/common/services/clock/mega/sysclk.h **** {
  15               		.loc 1 392 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25 0004 00D0      		rcall .
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 6
  28 0006 CDB7      		in r28,__SP_L__
  29 0008 DEB7      		in r29,__SP_H__
  30               	.LCFI3:
  31               		.cfi_def_cfa_register 28
  32               	/* prologue: function */
  33               	/* frame size = 2 */
  34               	/* stack size = 4 */
  35               	.L__stack_usage = 4
  36 000a 9A83      		std Y+2,r25
  37 000c 8983      		std Y+1,r24
 393:../../../platform/common/services/clock/mega/sysclk.h **** 	if (module == NULL) {
  38               		.loc 1 393 0
  39 000e 8981      		ldd r24,Y+1
  40 0010 9A81      		ldd r25,Y+2
  41 0012 892B      		or r24,r25
  42 0014 01F4      		brne .+2
  43 0016 00C0      		rjmp .L14
 394:../../../platform/common/services/clock/mega/sysclk.h **** 		Assert(false);
 395:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 396:../../../platform/common/services/clock/mega/sysclk.h **** 
 397:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN0 && !MEGA_XX_UN1
 398:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &ADC) {
  44               		.loc 1 398 0
  45 0018 8981      		ldd r24,Y+1
  46 001a 9A81      		ldd r25,Y+2
  47 001c 8837      		cpi r24,120
  48 001e 9105      		cpc r25,__zero_reg__
  49 0020 01F4      		brne .L3
 399:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRADC_bm);
  50               		.loc 1 399 0
  51 0022 61E0      		ldi r22,lo8(1)
  52 0024 80E0      		ldi r24,0
  53 0026 0E94 0000 		call sysclk_enable_module
 400:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 401:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRPGA_bm);
  54               		.loc 1 401 0
  55 002a 60E1      		ldi r22,lo8(16)
  56 002c 80E0      		ldi r24,0
  57 002e 0E94 0000 		call sysclk_enable_module
 402:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 403:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &UCSR0A) {
 404:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRUSART0_bm);
 405:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 406:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 407:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &SPCR) {
 408:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRSPI_bm);
 409:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 410:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 411:../../../platform/common/services/clock/mega/sysclk.h **** 
 412:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &TCCR1A) {
 413:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM1_bm);
 414:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 415:../../../platform/common/services/clock/mega/sysclk.h **** 
 416:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX_UN2
 417:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &LCDCRA) {
 418:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRLCD_bm);
 419:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 420:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 421:../../../platform/common/services/clock/mega/sysclk.h **** 
 422:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN2
 423:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &TCCR0A) {
 424:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM0_bm);
 425:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR2A) {
 426:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM2_bm);
 427:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TWBR) {
 428:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTWI_bm);
 429:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 430:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 431:../../../platform/common/services/clock/mega/sysclk.h **** 
 432:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 433:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &UCSR1A) {
 434:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRUSART1_bm);
 435:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR3A) {
 436:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM3_bm);
 437:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR4A) {
 438:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM4_bm);
 439:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR5A) {
 440:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM5_bm);
 441:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TRX_CTRL_0) {
 442:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTRX24_bm);
 443:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 444:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 445:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 446:../../../platform/common/services/clock/mega/sysclk.h **** 	else {
 447:../../../platform/common/services/clock/mega/sysclk.h **** 		Assert(false);
 448:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 449:../../../platform/common/services/clock/mega/sysclk.h **** }
  58               		.loc 1 449 0
  59 0032 00C0      		rjmp .L14
  60               	.L3:
 403:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRUSART0_bm);
  61               		.loc 1 403 0
  62 0034 8981      		ldd r24,Y+1
  63 0036 9A81      		ldd r25,Y+2
  64 0038 803C      		cpi r24,-64
  65 003a 9105      		cpc r25,__zero_reg__
  66 003c 01F4      		brne .L4
 404:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  67               		.loc 1 404 0
  68 003e 62E0      		ldi r22,lo8(2)
  69 0040 80E0      		ldi r24,0
  70 0042 0E94 0000 		call sysclk_enable_module
  71               		.loc 1 449 0
  72 0046 00C0      		rjmp .L14
  73               	.L4:
 407:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRSPI_bm);
  74               		.loc 1 407 0
  75 0048 8981      		ldd r24,Y+1
  76 004a 9A81      		ldd r25,Y+2
  77 004c 8C34      		cpi r24,76
  78 004e 9105      		cpc r25,__zero_reg__
  79 0050 01F4      		brne .L5
 408:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  80               		.loc 1 408 0
  81 0052 64E0      		ldi r22,lo8(4)
  82 0054 80E0      		ldi r24,0
  83 0056 0E94 0000 		call sysclk_enable_module
  84               		.loc 1 449 0
  85 005a 00C0      		rjmp .L14
  86               	.L5:
 412:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM1_bm);
  87               		.loc 1 412 0
  88 005c 8981      		ldd r24,Y+1
  89 005e 9A81      		ldd r25,Y+2
  90 0060 8038      		cpi r24,-128
  91 0062 9105      		cpc r25,__zero_reg__
  92 0064 01F4      		brne .L6
 413:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  93               		.loc 1 413 0
  94 0066 68E0      		ldi r22,lo8(8)
  95 0068 80E0      		ldi r24,0
  96 006a 0E94 0000 		call sysclk_enable_module
  97               		.loc 1 449 0
  98 006e 00C0      		rjmp .L14
  99               	.L6:
 423:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM0_bm);
 100               		.loc 1 423 0
 101 0070 8981      		ldd r24,Y+1
 102 0072 9A81      		ldd r25,Y+2
 103 0074 8434      		cpi r24,68
 104 0076 9105      		cpc r25,__zero_reg__
 105 0078 01F4      		brne .L7
 424:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR2A) {
 106               		.loc 1 424 0
 107 007a 60E2      		ldi r22,lo8(32)
 108 007c 80E0      		ldi r24,0
 109 007e 0E94 0000 		call sysclk_enable_module
 110               		.loc 1 449 0
 111 0082 00C0      		rjmp .L14
 112               	.L7:
 425:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM2_bm);
 113               		.loc 1 425 0
 114 0084 8981      		ldd r24,Y+1
 115 0086 9A81      		ldd r25,Y+2
 116 0088 803B      		cpi r24,-80
 117 008a 9105      		cpc r25,__zero_reg__
 118 008c 01F4      		brne .L8
 426:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TWBR) {
 119               		.loc 1 426 0
 120 008e 60E4      		ldi r22,lo8(64)
 121 0090 80E0      		ldi r24,0
 122 0092 0E94 0000 		call sysclk_enable_module
 123               		.loc 1 449 0
 124 0096 00C0      		rjmp .L14
 125               	.L8:
 427:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTWI_bm);
 126               		.loc 1 427 0
 127 0098 8981      		ldd r24,Y+1
 128 009a 9A81      		ldd r25,Y+2
 129 009c 883B      		cpi r24,-72
 130 009e 9105      		cpc r25,__zero_reg__
 131 00a0 01F4      		brne .L9
 428:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 132               		.loc 1 428 0
 133 00a2 60E8      		ldi r22,lo8(-128)
 134 00a4 80E0      		ldi r24,0
 135 00a6 0E94 0000 		call sysclk_enable_module
 136               		.loc 1 449 0
 137 00aa 00C0      		rjmp .L14
 138               	.L9:
 433:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRUSART1_bm);
 139               		.loc 1 433 0
 140 00ac 8981      		ldd r24,Y+1
 141 00ae 9A81      		ldd r25,Y+2
 142 00b0 883C      		cpi r24,-56
 143 00b2 9105      		cpc r25,__zero_reg__
 144 00b4 01F4      		brne .L10
 434:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR3A) {
 145               		.loc 1 434 0
 146 00b6 61E0      		ldi r22,lo8(1)
 147 00b8 81E0      		ldi r24,lo8(1)
 148 00ba 0E94 0000 		call sysclk_enable_module
 149               		.loc 1 449 0
 150 00be 00C0      		rjmp .L14
 151               	.L10:
 435:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM3_bm);
 152               		.loc 1 435 0
 153 00c0 8981      		ldd r24,Y+1
 154 00c2 9A81      		ldd r25,Y+2
 155 00c4 8039      		cpi r24,-112
 156 00c6 9105      		cpc r25,__zero_reg__
 157 00c8 01F4      		brne .L11
 436:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR4A) {
 158               		.loc 1 436 0
 159 00ca 68E0      		ldi r22,lo8(8)
 160 00cc 81E0      		ldi r24,lo8(1)
 161 00ce 0E94 0000 		call sysclk_enable_module
 162               		.loc 1 449 0
 163 00d2 00C0      		rjmp .L14
 164               	.L11:
 437:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM4_bm);
 165               		.loc 1 437 0
 166 00d4 8981      		ldd r24,Y+1
 167 00d6 9A81      		ldd r25,Y+2
 168 00d8 803A      		cpi r24,-96
 169 00da 9105      		cpc r25,__zero_reg__
 170 00dc 01F4      		brne .L12
 438:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR5A) {
 171               		.loc 1 438 0
 172 00de 60E1      		ldi r22,lo8(16)
 173 00e0 81E0      		ldi r24,lo8(1)
 174 00e2 0E94 0000 		call sysclk_enable_module
 175               		.loc 1 449 0
 176 00e6 00C0      		rjmp .L14
 177               	.L12:
 439:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM5_bm);
 178               		.loc 1 439 0
 179 00e8 8981      		ldd r24,Y+1
 180 00ea 9A81      		ldd r25,Y+2
 181 00ec 8032      		cpi r24,32
 182 00ee 9140      		sbci r25,1
 183 00f0 01F4      		brne .L13
 440:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TRX_CTRL_0) {
 184               		.loc 1 440 0
 185 00f2 60E2      		ldi r22,lo8(32)
 186 00f4 81E0      		ldi r24,lo8(1)
 187 00f6 0E94 0000 		call sysclk_enable_module
 188               		.loc 1 449 0
 189 00fa 00C0      		rjmp .L14
 190               	.L13:
 441:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTRX24_bm);
 191               		.loc 1 441 0
 192 00fc 8981      		ldd r24,Y+1
 193 00fe 9A81      		ldd r25,Y+2
 194 0100 8334      		cpi r24,67
 195 0102 9140      		sbci r25,1
 196 0104 01F4      		brne .L14
 442:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 197               		.loc 1 442 0
 198 0106 60E4      		ldi r22,lo8(64)
 199 0108 81E0      		ldi r24,lo8(1)
 200 010a 0E94 0000 		call sysclk_enable_module
 201               	.L14:
 202               		.loc 1 449 0
 203 010e 0000      		nop
 204               	/* epilogue start */
 205 0110 0F90      		pop __tmp_reg__
 206 0112 0F90      		pop __tmp_reg__
 207 0114 DF91      		pop r29
 208 0116 CF91      		pop r28
 209 0118 0895      		ret
 210               		.cfi_endproc
 211               	.LFE69:
 214               	__portable_avr_delay_cycles:
 215               	.LFB74:
 216               		.file 2 "../../../platform/common/services/delay/mega_rf/cycle_counter.h"
   1:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
   2:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \file
   3:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   4:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \brief AVR functions for busy-wait delay loops
   5:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   6:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Copyright (c) 2011 - 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   8:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_start
   9:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  10:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \page License
  11:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  12:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  15:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  18:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  22:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  25:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  28:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  40:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_stop
  41:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  42:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  43:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifndef _cycle_counter_h_
  44:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #define _cycle_counter_h_
  45:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  46:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifdef __cplusplus
  47:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** extern "C" {
  48:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #endif
  49:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  50:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #include <compiler.h>
  51:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  52:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
  53:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @name Convenience functions for busy-wait delay loops
  54:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  55:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def delay_cycles
  56:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of CPU cycles.
  57:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param n number of CPU cycles to wait
  58:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  59:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_ms
  60:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of milliseconds.
  61:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of milliseconds to wait
  62:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  63:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  64:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_us
  65:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of microseconds.
  66:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of microseconds to wait
  67:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  68:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  69:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_ms_2_cy
  70:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert milli-seconds into CPU cycles.
  71:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of milliseconds
  72:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  73:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  74:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  75:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_us_2_cy
  76:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert micro-seconds into CPU cycles.
  77:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of microseconds
  78:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  79:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  80:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  81:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @{
  82:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  83:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** __always_optimize
  84:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** static inline void __portable_avr_delay_cycles(unsigned long n)
  85:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** {
 217               		.loc 2 85 0
 218               		.cfi_startproc
 219               	/* prologue: function */
 220               	/* frame size = 0 */
 221               	/* stack size = 0 */
 222               	.L__stack_usage = 0
 223               	.L16:
  86:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 	do { barrier(); } while (--n);
 224               		.loc 2 86 0 discriminator 1
 225 011a 6150      		subi r22,1
 226 011c 7109      		sbc r23,__zero_reg__
 227 011e 8109      		sbc r24,__zero_reg__
 228 0120 9109      		sbc r25,__zero_reg__
 229 0122 01F4      		brne .L16
 230               	/* epilogue start */
  87:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** }
 231               		.loc 2 87 0
 232 0124 0895      		ret
 233               		.cfi_endproc
 234               	.LFE74:
 236               		.section	.bss.phyState,"aw",@nobits
 239               	phyState:
 240 0000 00        		.zero	1
 241               		.section	.bss.phyRxBuffer,"aw",@nobits
 244               	phyRxBuffer:
 245 0000 0000 0000 		.zero	128
 245      0000 0000 
 245      0000 0000 
 245      0000 0000 
 245      0000 0000 
 246               		.section	.bss.phyRxState,"aw",@nobits
 249               	phyRxState:
 250 0000 00        		.zero	1
 251               		.text
 252               	.global	PHY_Init
 254               	PHY_Init:
 255               	.LFB97:
 256               		.file 3 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c"
   1:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /**
   2:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \file phy.c
   3:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   4:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \brief ATMEGAxxxRFA1 PHY implementation
   5:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   6:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * Copyright (C) 2014, Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   8:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  10:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  13:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  16:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  20:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  23:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  26:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  38:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  40:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  41:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  */
  42:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  43:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ATMEGARFA1
  44:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  45:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Includes ---------------------------------------------------------------*/
  46:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "phy.h"
  47:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "delay.h"
  48:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "sal.h"
  49:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "atmegarfa1.h"
  50:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  51:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "macsc_megarf.h"
  52:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  53:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Definitions ------------------------------------------------------------*/
  54:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #define PHY_CRC_SIZE          2
  55:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #define IRQ_CLEAR_VALUE       0xff
  56:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Types ------------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** typedef enum {
  58:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_INITIAL,
  59:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_IDLE,
  60:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_SLEEP,
  61:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_TX_WAIT_END,
  62:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** } PhyState_t;
  63:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  64:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Prototypes -------------------------------------------------------------*/
  65:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phySetRxState(void);
  66:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  67:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Variables --------------------------------------------------------------*/
  68:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static PhyState_t phyState = PHY_STATE_INITIAL;
  69:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static uint8_t phyRxBuffer[128];
  70:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static bool phyRxState;
  71:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  72:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Implementations --------------------------------------------------------*/
  73:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  74:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
  75:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
  76:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Init(void)
  77:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 257               		.loc 3 77 0
 258               		.cfi_startproc
 259 0126 0F93      		push r16
 260               	.LCFI4:
 261               		.cfi_def_cfa_offset 3
 262               		.cfi_offset 16, -2
 263 0128 1F93      		push r17
 264               	.LCFI5:
 265               		.cfi_def_cfa_offset 4
 266               		.cfi_offset 17, -3
 267 012a CF93      		push r28
 268               	.LCFI6:
 269               		.cfi_def_cfa_offset 5
 270               		.cfi_offset 28, -4
 271 012c DF93      		push r29
 272               	.LCFI7:
 273               		.cfi_def_cfa_offset 6
 274               		.cfi_offset 29, -5
 275 012e CDB7      		in r28,__SP_L__
 276 0130 DEB7      		in r29,__SP_H__
 277               	.LCFI8:
 278               		.cfi_def_cfa_register 28
 279               	/* prologue: function */
 280               	/* frame size = 0 */
 281               	/* stack size = 4 */
 282               	.L__stack_usage = 4
  78:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sysclk_enable_peripheral_clock(&TRX_CTRL_0);
 283               		.loc 3 78 0
 284 0132 83E4      		ldi r24,lo8(67)
 285 0134 91E0      		ldi r25,lo8(1)
 286 0136 0E94 0000 		call sysclk_enable_peripheral_clock
  79:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  80:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.trxrst = 1;
 287               		.loc 3 80 0
 288 013a 89E3      		ldi r24,lo8(57)
 289 013c 91E0      		ldi r25,lo8(1)
 290 013e FC01      		movw r30,r24
 291 0140 2081      		ld r18,Z
 292 0142 2160      		ori r18,lo8(1)
 293 0144 FC01      		movw r30,r24
 294 0146 2083      		st Z,r18
  81:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  82:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyRxState = false;
 295               		.loc 3 82 0
 296 0148 1092 0000 		sts phyRxState,__zero_reg__
  83:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_IDLE;
 297               		.loc 3 83 0
 298 014c 81E0      		ldi r24,lo8(1)
 299 014e 8093 0000 		sts phyState,r24
  84:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  85:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 300               		.loc 3 85 0
 301 0152 88E0      		ldi r24,lo8(8)
 302 0154 0E94 0000 		call phyTrxSetState
  86:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  87:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_2_REG_s.rxSafeMode = 1;
 303               		.loc 3 87 0
 304 0158 8CE4      		ldi r24,lo8(76)
 305 015a 91E0      		ldi r25,lo8(1)
 306 015c FC01      		movw r30,r24
 307 015e 2081      		ld r18,Z
 308 0160 2068      		ori r18,lo8(-128)
 309 0162 FC01      		movw r30,r24
 310 0164 2083      		st Z,r18
  88:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  89:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
  90:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = (uint8_t)PHY_RandomReq();
 311               		.loc 3 90 0
 312 0166 0DE6      		ldi r16,lo8(109)
 313 0168 11E0      		ldi r17,lo8(1)
 314 016a 0E94 0000 		call PHY_RandomReq
 315 016e F801      		movw r30,r16
 316 0170 8083      		st Z,r24
  91:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
  92:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  93:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
  94:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antCtrl = 2;
 317               		.loc 3 94 0
 318 0172 8DE4      		ldi r24,lo8(77)
 319 0174 91E0      		ldi r25,lo8(1)
 320 0176 FC01      		movw r30,r24
 321 0178 2081      		ld r18,Z
 322 017a 2C7F      		andi r18,lo8(-4)
 323 017c 2260      		ori r18,lo8(2)
 324 017e FC01      		movw r30,r24
 325 0180 2083      		st Z,r18
  95:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	RX_CTRL_REG_s.pdtThres = 0x03;
 326               		.loc 3 95 0
 327 0182 8AE4      		ldi r24,lo8(74)
 328 0184 91E0      		ldi r25,lo8(1)
 329 0186 FC01      		movw r30,r24
 330 0188 2081      		ld r18,Z
 331 018a 207F      		andi r18,lo8(-16)
 332 018c 2360      		ori r18,lo8(3)
 333 018e FC01      		movw r30,r24
 334 0190 2083      		st Z,r18
  96:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 1;
 335               		.loc 3 96 0
 336 0192 8DE4      		ldi r24,lo8(77)
 337 0194 91E0      		ldi r25,lo8(1)
 338 0196 FC01      		movw r30,r24
 339 0198 2081      		ld r18,Z
 340 019a 2860      		ori r18,lo8(8)
 341 019c FC01      		movw r30,r24
 342 019e 2083      		st Z,r18
  97:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 1;
 343               		.loc 3 97 0
 344 01a0 8DE4      		ldi r24,lo8(77)
 345 01a2 91E0      		ldi r25,lo8(1)
 346 01a4 FC01      		movw r30,r24
 347 01a6 2081      		ld r18,Z
 348 01a8 2460      		ori r18,lo8(4)
 349 01aa FC01      		movw r30,r24
 350 01ac 2083      		st Z,r18
  98:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #else
  99:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DEFAULT != 0)
 100:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
 101:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antCtrl = ANTENNA_DEFAULT;
 102:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DEFAULT
 103:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // ANTENNA_DIVERSITY
 104:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 105:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 1;
 351               		.loc 3 105 0
 352 01ae 84E4      		ldi r24,lo8(68)
 353 01b0 91E0      		ldi r25,lo8(1)
 354 01b2 FC01      		movw r30,r24
 355 01b4 2081      		ld r18,Z
 356 01b6 2068      		ori r18,lo8(-128)
 357 01b8 FC01      		movw r30,r24
 358 01ba 2083      		st Z,r18
 106:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 107:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 359               		.loc 3 107 0
 360 01bc 0000      		nop
 361               	/* epilogue start */
 362 01be DF91      		pop r29
 363 01c0 CF91      		pop r28
 364 01c2 1F91      		pop r17
 365 01c4 0F91      		pop r16
 366 01c6 0895      		ret
 367               		.cfi_endproc
 368               	.LFE97:
 370               	.global	PHY_ResetRadio
 372               	PHY_ResetRadio:
 373               	.LFB98:
 108:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 109:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_ResetRadio(void)
 110:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 374               		.loc 3 110 0
 375               		.cfi_startproc
 376 01c8 CF93      		push r28
 377               	.LCFI9:
 378               		.cfi_def_cfa_offset 3
 379               		.cfi_offset 28, -2
 380 01ca DF93      		push r29
 381               	.LCFI10:
 382               		.cfi_def_cfa_offset 4
 383               		.cfi_offset 29, -3
 384 01cc CDB7      		in r28,__SP_L__
 385 01ce DEB7      		in r29,__SP_H__
 386               	.LCFI11:
 387               		.cfi_def_cfa_register 28
 388               	/* prologue: function */
 389               	/* frame size = 0 */
 390               	/* stack size = 2 */
 391               	.L__stack_usage = 2
 111:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.trxrst = 1;
 392               		.loc 3 111 0
 393 01d0 89E3      		ldi r24,lo8(57)
 394 01d2 91E0      		ldi r25,lo8(1)
 395 01d4 FC01      		movw r30,r24
 396 01d6 2081      		ld r18,Z
 397 01d8 2160      		ori r18,lo8(1)
 398 01da FC01      		movw r30,r24
 399 01dc 2083      		st Z,r18
 112:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 400               		.loc 3 112 0
 401 01de 0000      		nop
 402               	/* epilogue start */
 403 01e0 DF91      		pop r29
 404 01e2 CF91      		pop r28
 405 01e4 0895      		ret
 406               		.cfi_endproc
 407               	.LFE98:
 409               	.global	PHY_SetTdmaMode
 411               	PHY_SetTdmaMode:
 412               	.LFB99:
 113:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 114:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetTdmaMode(bool mode)
 115:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 413               		.loc 3 115 0
 414               		.cfi_startproc
 415 01e6 CF93      		push r28
 416               	.LCFI12:
 417               		.cfi_def_cfa_offset 3
 418               		.cfi_offset 28, -2
 419 01e8 DF93      		push r29
 420               	.LCFI13:
 421               		.cfi_def_cfa_offset 4
 422               		.cfi_offset 29, -3
 423 01ea 1F92      		push __zero_reg__
 424               	.LCFI14:
 425               		.cfi_def_cfa_offset 5
 426 01ec CDB7      		in r28,__SP_L__
 427 01ee DEB7      		in r29,__SP_H__
 428               	.LCFI15:
 429               		.cfi_def_cfa_register 28
 430               	/* prologue: function */
 431               	/* frame size = 1 */
 432               	/* stack size = 3 */
 433               	.L__stack_usage = 3
 434 01f0 8983      		std Y+1,r24
 116:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(mode)
 435               		.loc 3 116 0
 436 01f2 8981      		ldd r24,Y+1
 437 01f4 8823      		tst r24
 438 01f6 01F0      		breq .L22
 117:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 118:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 0;
 439               		.loc 3 118 0
 440 01f8 8CE6      		ldi r24,lo8(108)
 441 01fa 91E0      		ldi r25,lo8(1)
 442 01fc FC01      		movw r30,r24
 443 01fe 2081      		ld r18,Z
 444 0200 2F70      		andi r18,lo8(15)
 445 0202 FC01      		movw r30,r24
 446 0204 2083      		st Z,r18
 119:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 7;
 447               		.loc 3 119 0
 448 0206 8CE6      		ldi r24,lo8(108)
 449 0208 91E0      		ldi r25,lo8(1)
 450 020a FC01      		movw r30,r24
 451 020c 2081      		ld r18,Z
 452 020e 2E60      		ori r18,lo8(14)
 453 0210 FC01      		movw r30,r24
 454 0212 2083      		st Z,r18
 120:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	
 121:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;	// Disable ACK even if requested		
 455               		.loc 3 121 0
 456 0214 8EE6      		ldi r24,lo8(110)
 457 0216 91E0      		ldi r25,lo8(1)
 458 0218 FC01      		movw r30,r24
 459 021a 2081      		ld r18,Z
 460 021c 2061      		ori r18,lo8(16)
 461 021e FC01      		movw r30,r24
 462 0220 2083      		st Z,r18
 122:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 123:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	else
 124:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 125:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 3;
 126:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 127:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		
 128:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 129:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 130:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 463               		.loc 3 130 0
 464 0222 00C0      		rjmp .L24
 465               	.L22:
 125:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 466               		.loc 3 125 0
 467 0224 8CE6      		ldi r24,lo8(108)
 468 0226 91E0      		ldi r25,lo8(1)
 469 0228 FC01      		movw r30,r24
 470 022a 2081      		ld r18,Z
 471 022c 2F70      		andi r18,lo8(15)
 472 022e 2063      		ori r18,lo8(48)
 473 0230 FC01      		movw r30,r24
 474 0232 2083      		st Z,r18
 126:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		
 475               		.loc 3 126 0
 476 0234 8CE6      		ldi r24,lo8(108)
 477 0236 91E0      		ldi r25,lo8(1)
 478 0238 FC01      		movw r30,r24
 479 023a 2081      		ld r18,Z
 480 023c 217F      		andi r18,lo8(-15)
 481 023e 2860      		ori r18,lo8(8)
 482 0240 FC01      		movw r30,r24
 483 0242 2083      		st Z,r18
 128:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 484               		.loc 3 128 0
 485 0244 8EE6      		ldi r24,lo8(110)
 486 0246 91E0      		ldi r25,lo8(1)
 487 0248 FC01      		movw r30,r24
 488 024a 2081      		ld r18,Z
 489 024c 2F7E      		andi r18,lo8(-17)
 490 024e FC01      		movw r30,r24
 491 0250 2083      		st Z,r18
 492               	.L24:
 493               		.loc 3 130 0
 494 0252 0000      		nop
 495               	/* epilogue start */
 496 0254 0F90      		pop __tmp_reg__
 497 0256 DF91      		pop r29
 498 0258 CF91      		pop r28
 499 025a 0895      		ret
 500               		.cfi_endproc
 501               	.LFE99:
 503               	.global	PHY_SetPromiscuousMode
 505               	PHY_SetPromiscuousMode:
 506               	.LFB100:
 131:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 132:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPromiscuousMode(bool mode)
 133:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 507               		.loc 3 133 0
 508               		.cfi_startproc
 509 025c CF93      		push r28
 510               	.LCFI16:
 511               		.cfi_def_cfa_offset 3
 512               		.cfi_offset 28, -2
 513 025e DF93      		push r29
 514               	.LCFI17:
 515               		.cfi_def_cfa_offset 4
 516               		.cfi_offset 29, -3
 517 0260 CDB7      		in r28,__SP_L__
 518 0262 DEB7      		in r29,__SP_H__
 519               	.LCFI18:
 520               		.cfi_def_cfa_register 28
 521 0264 2997      		sbiw r28,9
 522               	.LCFI19:
 523               		.cfi_def_cfa_offset 13
 524 0266 0FB6      		in __tmp_reg__,__SREG__
 525 0268 F894      		cli
 526 026a DEBF      		out __SP_H__,r29
 527 026c 0FBE      		out __SREG__,__tmp_reg__
 528 026e CDBF      		out __SP_L__,r28
 529               	/* prologue: function */
 530               	/* frame size = 9 */
 531               	/* stack size = 11 */
 532               	.L__stack_usage = 11
 533 0270 8987      		std Y+9,r24
 134:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t ieee_address[] = { 0, 0, 0, 0, 0, 0, 0, 0 };
 534               		.loc 3 134 0
 535 0272 28E0      		ldi r18,lo8(8)
 536 0274 CE01      		movw r24,r28
 537 0276 0196      		adiw r24,1
 538 0278 FC01      		movw r30,r24
 539 027a 322F      		mov r19,r18
 540               		0:
 541 027c 1192      		st Z+,__zero_reg__
 542 027e 3A95      		dec r19
 543 0280 01F4      		brne 0b
 135:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 136:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(mode)
 544               		.loc 3 136 0
 545 0282 8985      		ldd r24,Y+9
 546 0284 8823      		tst r24
 547 0286 01F0      		breq .L26
 137:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 138:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetShortAddr(0);
 548               		.loc 3 138 0
 549 0288 80E0      		ldi r24,0
 550 028a 90E0      		ldi r25,0
 551 028c 0E94 0000 		call PHY_SetShortAddr
 139:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetPanId(0);
 552               		.loc 3 139 0
 553 0290 80E0      		ldi r24,0
 554 0292 90E0      		ldi r25,0
 555 0294 0E94 0000 		call PHY_SetPanId
 140:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetIEEEAddr(ieee_address);
 556               		.loc 3 140 0
 557 0298 CE01      		movw r24,r28
 558 029a 0196      		adiw r24,1
 559 029c 0E94 0000 		call PHY_SetIEEEAddr
 141:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 142:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** // AACK_UPLD_RES_FT = 1, AACK_FLT_RES_FT = 0:
 143:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	Any non-corrupted frame with a reserved frame type is indicated by a
 144:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	TRX24_RX_END interrupt. No further address filtering is applied on those frames.
 145:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	A TRX24_AMI interrupt is never generated and the acknowledgment subfield is
 146:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	ignored.
 147:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 148:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackPromMode = 1;	// Enable promiscuous mode
 560               		.loc 3 148 0
 561 02a0 87E5      		ldi r24,lo8(87)
 562 02a2 91E0      		ldi r25,lo8(1)
 563 02a4 FC01      		movw r30,r24
 564 02a6 2081      		ld r18,Z
 565 02a8 2260      		ori r18,lo8(2)
 566 02aa FC01      		movw r30,r24
 567 02ac 2083      		st Z,r18
 149:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackUpldResFt = 1;	// Enable reserved frame type reception ; this was changed to
 568               		.loc 3 149 0
 569 02ae 87E5      		ldi r24,lo8(87)
 570 02b0 91E0      		ldi r25,lo8(1)
 571 02b2 FC01      		movw r30,r24
 572 02b4 2081      		ld r18,Z
 573 02b6 2061      		ori r18,lo8(16)
 574 02b8 FC01      		movw r30,r24
 575 02ba 2083      		st Z,r18
 150:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****                                         // so that the addres isn't checked by filter
 151:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackFltrResFt = 0;	// Disable filter of reserved frame types
 576               		.loc 3 151 0
 577 02bc 87E5      		ldi r24,lo8(87)
 578 02be 91E0      		ldi r25,lo8(1)
 579 02c0 FC01      		movw r30,r24
 580 02c2 2081      		ld r18,Z
 581 02c4 2F7D      		andi r18,lo8(-33)
 582 02c6 FC01      		movw r30,r24
 583 02c8 2083      		st Z,r18
 152:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;		// Disable generation of acknowledgment
 584               		.loc 3 152 0
 585 02ca 8EE6      		ldi r24,lo8(110)
 586 02cc 91E0      		ldi r25,lo8(1)
 587 02ce FC01      		movw r30,r24
 588 02d0 2081      		ld r18,Z
 589 02d2 2061      		ori r18,lo8(16)
 590 02d4 FC01      		movw r30,r24
 591 02d6 2083      		st Z,r18
 153:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 154:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	else
 155:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 156:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG = 0;
 157:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 158:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 159:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 592               		.loc 3 159 0
 593 02d8 00C0      		rjmp .L28
 594               	.L26:
 156:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 595               		.loc 3 156 0
 596 02da 87E5      		ldi r24,lo8(87)
 597 02dc 91E0      		ldi r25,lo8(1)
 598 02de FC01      		movw r30,r24
 599 02e0 1082      		st Z,__zero_reg__
 157:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 600               		.loc 3 157 0
 601 02e2 8EE6      		ldi r24,lo8(110)
 602 02e4 91E0      		ldi r25,lo8(1)
 603 02e6 FC01      		movw r30,r24
 604 02e8 2081      		ld r18,Z
 605 02ea 2F7E      		andi r18,lo8(-17)
 606 02ec FC01      		movw r30,r24
 607 02ee 2083      		st Z,r18
 608               	.L28:
 609               		.loc 3 159 0
 610 02f0 0000      		nop
 611               	/* epilogue start */
 612 02f2 2996      		adiw r28,9
 613 02f4 0FB6      		in __tmp_reg__,__SREG__
 614 02f6 F894      		cli
 615 02f8 DEBF      		out __SP_H__,r29
 616 02fa 0FBE      		out __SREG__,__tmp_reg__
 617 02fc CDBF      		out __SP_L__,r28
 618 02fe DF91      		pop r29
 619 0300 CF91      		pop r28
 620 0302 0895      		ret
 621               		.cfi_endproc
 622               	.LFE100:
 624               	.global	PHY_SetOptimizedCSMAValues
 626               	PHY_SetOptimizedCSMAValues:
 627               	.LFB101:
 160:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 161:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetOptimizedCSMAValues(void)
 162:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 628               		.loc 3 162 0
 629               		.cfi_startproc
 630 0304 0F93      		push r16
 631               	.LCFI20:
 632               		.cfi_def_cfa_offset 3
 633               		.cfi_offset 16, -2
 634 0306 1F93      		push r17
 635               	.LCFI21:
 636               		.cfi_def_cfa_offset 4
 637               		.cfi_offset 17, -3
 638 0308 CF93      		push r28
 639               	.LCFI22:
 640               		.cfi_def_cfa_offset 5
 641               		.cfi_offset 28, -4
 642 030a DF93      		push r29
 643               	.LCFI23:
 644               		.cfi_def_cfa_offset 6
 645               		.cfi_offset 29, -5
 646 030c CDB7      		in r28,__SP_L__
 647 030e DEB7      		in r29,__SP_H__
 648               	.LCFI24:
 649               		.cfi_def_cfa_register 28
 650               	/* prologue: function */
 651               	/* frame size = 0 */
 652               	/* stack size = 4 */
 653               	.L__stack_usage = 4
 163:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_BE_REG_s.minBe = 0x03;
 654               		.loc 3 163 0
 655 0310 8FE6      		ldi r24,lo8(111)
 656 0312 91E0      		ldi r25,lo8(1)
 657 0314 FC01      		movw r30,r24
 658 0316 2081      		ld r18,Z
 659 0318 207F      		andi r18,lo8(-16)
 660 031a 2360      		ori r18,lo8(3)
 661 031c FC01      		movw r30,r24
 662 031e 2083      		st Z,r18
 164:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_BE_REG_s.maxBe = 0x08;
 663               		.loc 3 164 0
 664 0320 8FE6      		ldi r24,lo8(111)
 665 0322 91E0      		ldi r25,lo8(1)
 666 0324 FC01      		movw r30,r24
 667 0326 2081      		ld r18,Z
 668 0328 2F70      		andi r18,lo8(15)
 669 032a 2068      		ori r18,lo8(-128)
 670 032c FC01      		movw r30,r24
 671 032e 2083      		st Z,r18
 165:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = (uint8_t)PHY_RandomReq();
 672               		.loc 3 165 0
 673 0330 0DE6      		ldi r16,lo8(109)
 674 0332 11E0      		ldi r17,lo8(1)
 675 0334 0E94 0000 		call PHY_RandomReq
 676 0338 F801      		movw r30,r16
 677 033a 8083      		st Z,r24
 166:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 678               		.loc 3 166 0
 679 033c 0000      		nop
 680               	/* epilogue start */
 681 033e DF91      		pop r29
 682 0340 CF91      		pop r28
 683 0342 1F91      		pop r17
 684 0344 0F91      		pop r16
 685 0346 0895      		ret
 686               		.cfi_endproc
 687               	.LFE101:
 689               	.global	PHY_SetRxState
 691               	PHY_SetRxState:
 692               	.LFB102:
 167:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 168:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 169:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 170:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetRxState(bool rx)
 171:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 693               		.loc 3 171 0
 694               		.cfi_startproc
 695 0348 CF93      		push r28
 696               	.LCFI25:
 697               		.cfi_def_cfa_offset 3
 698               		.cfi_offset 28, -2
 699 034a DF93      		push r29
 700               	.LCFI26:
 701               		.cfi_def_cfa_offset 4
 702               		.cfi_offset 29, -3
 703 034c 1F92      		push __zero_reg__
 704               	.LCFI27:
 705               		.cfi_def_cfa_offset 5
 706 034e CDB7      		in r28,__SP_L__
 707 0350 DEB7      		in r29,__SP_H__
 708               	.LCFI28:
 709               		.cfi_def_cfa_register 28
 710               	/* prologue: function */
 711               	/* frame size = 1 */
 712               	/* stack size = 3 */
 713               	.L__stack_usage = 3
 714 0352 8983      		std Y+1,r24
 172:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyRxState = rx;
 715               		.loc 3 172 0
 716 0354 8981      		ldd r24,Y+1
 717 0356 8093 0000 		sts phyRxState,r24
 173:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 718               		.loc 3 173 0
 719 035a 0E94 0000 		call phySetRxState
 174:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 720               		.loc 3 174 0
 721 035e 0000      		nop
 722               	/* epilogue start */
 723 0360 0F90      		pop __tmp_reg__
 724 0362 DF91      		pop r29
 725 0364 CF91      		pop r28
 726 0366 0895      		ret
 727               		.cfi_endproc
 728               	.LFE102:
 730               	.global	PHY_SetChannel
 732               	PHY_SetChannel:
 733               	.LFB103:
 175:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 176:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 177:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 178:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetChannel(uint8_t channel)
 179:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 734               		.loc 3 179 0
 735               		.cfi_startproc
 736 0368 CF93      		push r28
 737               	.LCFI29:
 738               		.cfi_def_cfa_offset 3
 739               		.cfi_offset 28, -2
 740 036a DF93      		push r29
 741               	.LCFI30:
 742               		.cfi_def_cfa_offset 4
 743               		.cfi_offset 29, -3
 744 036c 1F92      		push __zero_reg__
 745               	.LCFI31:
 746               		.cfi_def_cfa_offset 5
 747 036e CDB7      		in r28,__SP_L__
 748 0370 DEB7      		in r29,__SP_H__
 749               	.LCFI32:
 750               		.cfi_def_cfa_register 28
 751               	/* prologue: function */
 752               	/* frame size = 1 */
 753               	/* stack size = 3 */
 754               	.L__stack_usage = 3
 755 0372 8983      		std Y+1,r24
 180:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_CC_CCA_REG_s.channel = channel;
 756               		.loc 3 180 0
 757 0374 88E4      		ldi r24,lo8(72)
 758 0376 91E0      		ldi r25,lo8(1)
 759 0378 2981      		ldd r18,Y+1
 760 037a 2F71      		andi r18,lo8(31)
 761 037c 2F71      		andi r18,lo8(31)
 762 037e FC01      		movw r30,r24
 763 0380 3081      		ld r19,Z
 764 0382 307E      		andi r19,lo8(-32)
 765 0384 232B      		or r18,r19
 766 0386 FC01      		movw r30,r24
 767 0388 2083      		st Z,r18
 181:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 768               		.loc 3 181 0
 769 038a 0000      		nop
 770               	/* epilogue start */
 771 038c 0F90      		pop __tmp_reg__
 772 038e DF91      		pop r29
 773 0390 CF91      		pop r28
 774 0392 0895      		ret
 775               		.cfi_endproc
 776               	.LFE103:
 778               	.global	PHY_SetPanId
 780               	PHY_SetPanId:
 781               	.LFB104:
 182:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 183:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 184:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 185:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPanId(uint16_t panId)
 186:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 782               		.loc 3 186 0
 783               		.cfi_startproc
 784 0394 CF93      		push r28
 785               	.LCFI33:
 786               		.cfi_def_cfa_offset 3
 787               		.cfi_offset 28, -2
 788 0396 DF93      		push r29
 789               	.LCFI34:
 790               		.cfi_def_cfa_offset 4
 791               		.cfi_offset 29, -3
 792 0398 00D0      		rcall .
 793 039a 00D0      		rcall .
 794               	.LCFI35:
 795               		.cfi_def_cfa_offset 8
 796 039c CDB7      		in r28,__SP_L__
 797 039e DEB7      		in r29,__SP_H__
 798               	.LCFI36:
 799               		.cfi_def_cfa_register 28
 800               	/* prologue: function */
 801               	/* frame size = 4 */
 802               	/* stack size = 6 */
 803               	.L__stack_usage = 6
 804 03a0 9C83      		std Y+4,r25
 805 03a2 8B83      		std Y+3,r24
 187:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *d = (uint8_t *)&panId;
 806               		.loc 3 187 0
 807 03a4 CE01      		movw r24,r28
 808 03a6 0396      		adiw r24,3
 809 03a8 9A83      		std Y+2,r25
 810 03aa 8983      		std Y+1,r24
 188:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 189:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PAN_ID_0_REG = d[0];
 811               		.loc 3 189 0
 812 03ac 82E6      		ldi r24,lo8(98)
 813 03ae 91E0      		ldi r25,lo8(1)
 814 03b0 2981      		ldd r18,Y+1
 815 03b2 3A81      		ldd r19,Y+2
 816 03b4 F901      		movw r30,r18
 817 03b6 2081      		ld r18,Z
 818 03b8 FC01      		movw r30,r24
 819 03ba 2083      		st Z,r18
 190:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PAN_ID_1_REG = d[1];
 820               		.loc 3 190 0
 821 03bc 83E6      		ldi r24,lo8(99)
 822 03be 91E0      		ldi r25,lo8(1)
 823 03c0 2981      		ldd r18,Y+1
 824 03c2 3A81      		ldd r19,Y+2
 825 03c4 F901      		movw r30,r18
 826 03c6 2181      		ldd r18,Z+1
 827 03c8 FC01      		movw r30,r24
 828 03ca 2083      		st Z,r18
 191:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 829               		.loc 3 191 0
 830 03cc 0000      		nop
 831               	/* epilogue start */
 832 03ce 0F90      		pop __tmp_reg__
 833 03d0 0F90      		pop __tmp_reg__
 834 03d2 0F90      		pop __tmp_reg__
 835 03d4 0F90      		pop __tmp_reg__
 836 03d6 DF91      		pop r29
 837 03d8 CF91      		pop r28
 838 03da 0895      		ret
 839               		.cfi_endproc
 840               	.LFE104:
 842               	.global	PHY_SetShortAddr
 844               	PHY_SetShortAddr:
 845               	.LFB105:
 192:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 193:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 194:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 195:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetShortAddr(uint16_t addr)
 196:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 846               		.loc 3 196 0
 847               		.cfi_startproc
 848 03dc CF93      		push r28
 849               	.LCFI37:
 850               		.cfi_def_cfa_offset 3
 851               		.cfi_offset 28, -2
 852 03de DF93      		push r29
 853               	.LCFI38:
 854               		.cfi_def_cfa_offset 4
 855               		.cfi_offset 29, -3
 856 03e0 00D0      		rcall .
 857 03e2 00D0      		rcall .
 858               	.LCFI39:
 859               		.cfi_def_cfa_offset 8
 860 03e4 CDB7      		in r28,__SP_L__
 861 03e6 DEB7      		in r29,__SP_H__
 862               	.LCFI40:
 863               		.cfi_def_cfa_register 28
 864               	/* prologue: function */
 865               	/* frame size = 4 */
 866               	/* stack size = 6 */
 867               	.L__stack_usage = 6
 868 03e8 9C83      		std Y+4,r25
 869 03ea 8B83      		std Y+3,r24
 197:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *d = (uint8_t *)&addr;
 870               		.loc 3 197 0
 871 03ec CE01      		movw r24,r28
 872 03ee 0396      		adiw r24,3
 873 03f0 9A83      		std Y+2,r25
 874 03f2 8983      		std Y+1,r24
 198:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 199:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	SHORT_ADDR_0_REG = d[0];
 875               		.loc 3 199 0
 876 03f4 80E6      		ldi r24,lo8(96)
 877 03f6 91E0      		ldi r25,lo8(1)
 878 03f8 2981      		ldd r18,Y+1
 879 03fa 3A81      		ldd r19,Y+2
 880 03fc F901      		movw r30,r18
 881 03fe 2081      		ld r18,Z
 882 0400 FC01      		movw r30,r24
 883 0402 2083      		st Z,r18
 200:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	SHORT_ADDR_1_REG = d[1];
 884               		.loc 3 200 0
 885 0404 81E6      		ldi r24,lo8(97)
 886 0406 91E0      		ldi r25,lo8(1)
 887 0408 2981      		ldd r18,Y+1
 888 040a 3A81      		ldd r19,Y+2
 889 040c F901      		movw r30,r18
 890 040e 2181      		ldd r18,Z+1
 891 0410 FC01      		movw r30,r24
 892 0412 2083      		st Z,r18
 201:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 202:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifndef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
 203:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = d[0] + d[1];
 204:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
 205:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 893               		.loc 3 205 0
 894 0414 0000      		nop
 895               	/* epilogue start */
 896 0416 0F90      		pop __tmp_reg__
 897 0418 0F90      		pop __tmp_reg__
 898 041a 0F90      		pop __tmp_reg__
 899 041c 0F90      		pop __tmp_reg__
 900 041e DF91      		pop r29
 901 0420 CF91      		pop r28
 902 0422 0895      		ret
 903               		.cfi_endproc
 904               	.LFE105:
 906               	.global	PHY_SetTxPower
 908               	PHY_SetTxPower:
 909               	.LFB106:
 206:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 207:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 208:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 209:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetTxPower(uint8_t txPower)
 210:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 910               		.loc 3 210 0
 911               		.cfi_startproc
 912 0424 CF93      		push r28
 913               	.LCFI41:
 914               		.cfi_def_cfa_offset 3
 915               		.cfi_offset 28, -2
 916 0426 DF93      		push r29
 917               	.LCFI42:
 918               		.cfi_def_cfa_offset 4
 919               		.cfi_offset 29, -3
 920 0428 1F92      		push __zero_reg__
 921               	.LCFI43:
 922               		.cfi_def_cfa_offset 5
 923 042a CDB7      		in r28,__SP_L__
 924 042c DEB7      		in r29,__SP_H__
 925               	.LCFI44:
 926               		.cfi_def_cfa_register 28
 927               	/* prologue: function */
 928               	/* frame size = 1 */
 929               	/* stack size = 3 */
 930               	.L__stack_usage = 3
 931 042e 8983      		std Y+1,r24
 211:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_TX_PWR_REG_s.txPwr = txPower;
 932               		.loc 3 211 0
 933 0430 85E4      		ldi r24,lo8(69)
 934 0432 91E0      		ldi r25,lo8(1)
 935 0434 2981      		ldd r18,Y+1
 936 0436 2F70      		andi r18,lo8(15)
 937 0438 2F70      		andi r18,lo8(15)
 938 043a FC01      		movw r30,r24
 939 043c 3081      		ld r19,Z
 940 043e 307F      		andi r19,lo8(-16)
 941 0440 232B      		or r18,r19
 942 0442 FC01      		movw r30,r24
 943 0444 2083      		st Z,r18
 212:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 944               		.loc 3 212 0
 945 0446 0000      		nop
 946               	/* epilogue start */
 947 0448 0F90      		pop __tmp_reg__
 948 044a DF91      		pop r29
 949 044c CF91      		pop r28
 950 044e 0895      		ret
 951               		.cfi_endproc
 952               	.LFE106:
 954               	.global	PHY_Sleep
 956               	PHY_Sleep:
 957               	.LFB107:
 213:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 214:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 215:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 216:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Sleep(void)
 217:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 958               		.loc 3 217 0
 959               		.cfi_startproc
 960 0450 CF93      		push r28
 961               	.LCFI45:
 962               		.cfi_def_cfa_offset 3
 963               		.cfi_offset 28, -2
 964 0452 DF93      		push r29
 965               	.LCFI46:
 966               		.cfi_def_cfa_offset 4
 967               		.cfi_offset 29, -3
 968 0454 CDB7      		in r28,__SP_L__
 969 0456 DEB7      		in r29,__SP_H__
 970               	.LCFI47:
 971               		.cfi_def_cfa_register 28
 972               	/* prologue: function */
 973               	/* frame size = 0 */
 974               	/* stack size = 2 */
 975               	.L__stack_usage = 2
 218:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(phyState != PHY_STATE_SLEEP)
 976               		.loc 3 218 0
 977 0458 8091 0000 		lds r24,phyState
 978 045c 8230      		cpi r24,lo8(2)
 979 045e 01F0      		breq .L36
 219:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 220:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyTrxSetState(TRX_CMD_TRX_OFF);
 980               		.loc 3 220 0
 981 0460 88E0      		ldi r24,lo8(8)
 982 0462 0E94 0000 		call phyTrxSetState
 221:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRXPR_REG_s.slptr = 1;
 983               		.loc 3 221 0
 984 0466 89E3      		ldi r24,lo8(57)
 985 0468 91E0      		ldi r25,lo8(1)
 986 046a FC01      		movw r30,r24
 987 046c 2081      		ld r18,Z
 988 046e 2260      		ori r18,lo8(2)
 989 0470 FC01      		movw r30,r24
 990 0472 2083      		st Z,r18
 222:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyState = PHY_STATE_SLEEP;		
 991               		.loc 3 222 0
 992 0474 82E0      		ldi r24,lo8(2)
 993 0476 8093 0000 		sts phyState,r24
 994               	.L36:
 223:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 224:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	
 225:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
 226:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 0;
 995               		.loc 3 226 0
 996 047a 8DE4      		ldi r24,lo8(77)
 997 047c 91E0      		ldi r25,lo8(1)
 998 047e FC01      		movw r30,r24
 999 0480 2081      		ld r18,Z
 1000 0482 2B7F      		andi r18,lo8(-5)
 1001 0484 FC01      		movw r30,r24
 1002 0486 2083      		st Z,r18
 227:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 0;
 1003               		.loc 3 227 0
 1004 0488 8DE4      		ldi r24,lo8(77)
 1005 048a 91E0      		ldi r25,lo8(1)
 1006 048c FC01      		movw r30,r24
 1007 048e 2081      		ld r18,Z
 1008 0490 277F      		andi r18,lo8(-9)
 1009 0492 FC01      		movw r30,r24
 1010 0494 2083      		st Z,r18
 228:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #else
 229:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DEFAULT != 0)
 230:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 0;
 231:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antCtrl = 0;
 232:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DEFAULT
 233:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // ANTENNA_DIVERSITY
 234:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 235:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 0;
 1011               		.loc 3 235 0
 1012 0496 84E4      		ldi r24,lo8(68)
 1013 0498 91E0      		ldi r25,lo8(1)
 1014 049a FC01      		movw r30,r24
 1015 049c 2081      		ld r18,Z
 1016 049e 2F77      		andi r18,lo8(127)
 1017 04a0 FC01      		movw r30,r24
 1018 04a2 2083      		st Z,r18
 236:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 237:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1019               		.loc 3 237 0
 1020 04a4 0000      		nop
 1021               	/* epilogue start */
 1022 04a6 DF91      		pop r29
 1023 04a8 CF91      		pop r28
 1024 04aa 0895      		ret
 1025               		.cfi_endproc
 1026               	.LFE107:
 1028               	.global	PHY_Wakeup
 1030               	PHY_Wakeup:
 1031               	.LFB108:
 238:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 239:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 240:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 241:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Wakeup(void)
 242:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1032               		.loc 3 242 0
 1033               		.cfi_startproc
 1034 04ac CF93      		push r28
 1035               	.LCFI48:
 1036               		.cfi_def_cfa_offset 3
 1037               		.cfi_offset 28, -2
 1038 04ae DF93      		push r29
 1039               	.LCFI49:
 1040               		.cfi_def_cfa_offset 4
 1041               		.cfi_offset 29, -3
 1042 04b0 CDB7      		in r28,__SP_L__
 1043 04b2 DEB7      		in r29,__SP_H__
 1044               	.LCFI50:
 1045               		.cfi_def_cfa_register 28
 1046               	/* prologue: function */
 1047               	/* frame size = 0 */
 1048               	/* stack size = 2 */
 1049               	.L__stack_usage = 2
 243:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.slptr = 0;
 1050               		.loc 3 243 0
 1051 04b4 89E3      		ldi r24,lo8(57)
 1052 04b6 91E0      		ldi r25,lo8(1)
 1053 04b8 FC01      		movw r30,r24
 1054 04ba 2081      		ld r18,Z
 1055 04bc 2D7F      		andi r18,lo8(-3)
 1056 04be FC01      		movw r30,r24
 1057 04c0 2083      		st Z,r18
 244:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1058               		.loc 3 244 0
 1059 04c2 0E94 0000 		call phySetRxState
 245:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_IDLE;
 1060               		.loc 3 245 0
 1061 04c6 81E0      		ldi r24,lo8(1)
 1062 04c8 8093 0000 		sts phyState,r24
 246:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1063               		.loc 3 246 0
 1064 04cc 0000      		nop
 1065               	/* epilogue start */
 1066 04ce DF91      		pop r29
 1067 04d0 CF91      		pop r28
 1068 04d2 0895      		ret
 1069               		.cfi_endproc
 1070               	.LFE108:
 1072               	.global	PHY_DataReq
 1074               	PHY_DataReq:
 1075               	.LFB109:
 247:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 248:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 249:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 250:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*
 251:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_DataReq(uint8_t *data)
 252:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 253:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TX_ARET_ON);
 254:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 255:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_FRAME_BUFFER(0) = data[0] + PHY_CRC_SIZE;
 256:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	for (uint8_t i = 0; i < data[0]; i++) {
 257:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_FRAME_BUFFER(i + 1) = data[i + 1];
 258:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 259:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 260:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_TX_WAIT_END;
 261:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_STATE_REG = TRX_CMD_TX_START;
 262:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 263:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** */
 264:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_DataReq(uint8_t *data, uint8_t size)
 265:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1076               		.loc 3 265 0
 1077               		.cfi_startproc
 1078 04d4 CF93      		push r28
 1079               	.LCFI51:
 1080               		.cfi_def_cfa_offset 3
 1081               		.cfi_offset 28, -2
 1082 04d6 DF93      		push r29
 1083               	.LCFI52:
 1084               		.cfi_def_cfa_offset 4
 1085               		.cfi_offset 29, -3
 1086 04d8 00D0      		rcall .
 1087 04da 00D0      		rcall .
 1088               	.LCFI53:
 1089               		.cfi_def_cfa_offset 8
 1090 04dc CDB7      		in r28,__SP_L__
 1091 04de DEB7      		in r29,__SP_H__
 1092               	.LCFI54:
 1093               		.cfi_def_cfa_register 28
 1094               	/* prologue: function */
 1095               	/* frame size = 4 */
 1096               	/* stack size = 6 */
 1097               	.L__stack_usage = 6
 1098 04e0 9B83      		std Y+3,r25
 1099 04e2 8A83      		std Y+2,r24
 1100 04e4 6C83      		std Y+4,r22
 266:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyTrxSetState(TRX_CMD_TX_ARET_ON);
 1101               		.loc 3 266 0
 1102 04e6 89E1      		ldi r24,lo8(25)
 1103 04e8 0E94 0000 		call phyTrxSetState
 267:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 268:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1104               		.loc 3 268 0
 1105 04ec 8FE4      		ldi r24,lo8(79)
 1106 04ee 91E0      		ldi r25,lo8(1)
 1107 04f0 2FEF      		ldi r18,lo8(-1)
 1108 04f2 FC01      		movw r30,r24
 1109 04f4 2083      		st Z,r18
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 270:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_FRAME_BUFFER(0) = size + PHY_CRC_SIZE;
 1110               		.loc 3 270 0
 1111 04f6 80E8      		ldi r24,lo8(-128)
 1112 04f8 91E0      		ldi r25,lo8(1)
 1113 04fa 2C81      		ldd r18,Y+4
 1114 04fc 2E5F      		subi r18,lo8(-(2))
 1115 04fe FC01      		movw r30,r24
 1116 0500 2083      		st Z,r18
 1117               	.LBB2:
 271:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1118               		.loc 3 271 0
 1119 0502 1982      		std Y+1,__zero_reg__
 1120 0504 00C0      		rjmp .L39
 1121               	.L40:
 272:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     TRX_FRAME_BUFFER(i+1) = data[i];
 1122               		.loc 3 272 0 discriminator 3
 1123 0506 8981      		ldd r24,Y+1
 1124 0508 882F      		mov r24,r24
 1125 050a 90E0      		ldi r25,0
 1126 050c 8F57      		subi r24,127
 1127 050e 9E4F      		sbci r25,-2
 1128 0510 AC01      		movw r20,r24
 1129 0512 8981      		ldd r24,Y+1
 1130 0514 882F      		mov r24,r24
 1131 0516 90E0      		ldi r25,0
 1132 0518 2A81      		ldd r18,Y+2
 1133 051a 3B81      		ldd r19,Y+3
 1134 051c 820F      		add r24,r18
 1135 051e 931F      		adc r25,r19
 1136 0520 FC01      		movw r30,r24
 1137 0522 8081      		ld r24,Z
 1138 0524 FA01      		movw r30,r20
 1139 0526 8083      		st Z,r24
 271:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1140               		.loc 3 271 0 discriminator 3
 1141 0528 8981      		ldd r24,Y+1
 1142 052a 8F5F      		subi r24,lo8(-(1))
 1143 052c 8983      		std Y+1,r24
 1144               	.L39:
 271:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1145               		.loc 3 271 0 is_stmt 0 discriminator 1
 1146 052e 9981      		ldd r25,Y+1
 1147 0530 8C81      		ldd r24,Y+4
 1148 0532 9817      		cp r25,r24
 1149 0534 00F0      		brlo .L40
 1150               	.LBE2:
 273:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	
 274:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyState = PHY_STATE_TX_WAIT_END;
 1151               		.loc 3 274 0 is_stmt 1
 1152 0536 83E0      		ldi r24,lo8(3)
 1153 0538 8093 0000 		sts phyState,r24
 275:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_STATE_REG = TRX_CMD_TX_START;
 1154               		.loc 3 275 0
 1155 053c 82E4      		ldi r24,lo8(66)
 1156 053e 91E0      		ldi r25,lo8(1)
 1157 0540 22E0      		ldi r18,lo8(2)
 1158 0542 FC01      		movw r30,r24
 1159 0544 2083      		st Z,r18
 276:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1160               		.loc 3 276 0
 1161 0546 0000      		nop
 1162               	/* epilogue start */
 1163 0548 0F90      		pop __tmp_reg__
 1164 054a 0F90      		pop __tmp_reg__
 1165 054c 0F90      		pop __tmp_reg__
 1166 054e 0F90      		pop __tmp_reg__
 1167 0550 DF91      		pop r29
 1168 0552 CF91      		pop r28
 1169 0554 0895      		ret
 1170               		.cfi_endproc
 1171               	.LFE109:
 1173               	.global	PHY_RandomReq
 1175               	PHY_RandomReq:
 1176               	.LFB110:
 277:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 278:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 279:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 280:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 281:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** uint16_t PHY_RandomReq(void)
 282:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1177               		.loc 3 282 0
 1178               		.cfi_startproc
 1179 0556 CF93      		push r28
 1180               	.LCFI55:
 1181               		.cfi_def_cfa_offset 3
 1182               		.cfi_offset 28, -2
 1183 0558 DF93      		push r29
 1184               	.LCFI56:
 1185               		.cfi_def_cfa_offset 4
 1186               		.cfi_offset 29, -3
 1187 055a 00D0      		rcall .
 1188 055c 1F92      		push __zero_reg__
 1189               	.LCFI57:
 1190               		.cfi_def_cfa_offset 7
 1191 055e CDB7      		in r28,__SP_L__
 1192 0560 DEB7      		in r29,__SP_H__
 1193               	.LCFI58:
 1194               		.cfi_def_cfa_register 28
 1195               	/* prologue: function */
 1196               	/* frame size = 3 */
 1197               	/* stack size = 5 */
 1198               	.L__stack_usage = 5
 283:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint16_t rnd = 0;
 1199               		.loc 3 283 0
 1200 0562 1A82      		std Y+2,__zero_reg__
 1201 0564 1982      		std Y+1,__zero_reg__
 284:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 285:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_RX_ON);
 1202               		.loc 3 285 0
 1203 0566 86E0      		ldi r24,lo8(6)
 1204 0568 0E94 0000 		call phyTrxSetState
 1205               	.LBB3:
 286:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 287:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	for (uint8_t i = 0; i < 16; i += 2) {
 1206               		.loc 3 287 0
 1207 056c 1B82      		std Y+3,__zero_reg__
 1208 056e 00C0      		rjmp .L42
 1209               	.L43:
 288:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1210               		.loc 3 288 0 discriminator 3
 1211 0570 62E0      		ldi r22,lo8(2)
 1212 0572 70E0      		ldi r23,0
 1213 0574 80E0      		ldi r24,0
 1214 0576 90E0      		ldi r25,0
 1215 0578 0E94 0000 		call __portable_avr_delay_cycles
 289:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		rnd |= PHY_RSSI_REG_s.rndValue << i;
 1216               		.loc 3 289 0 discriminator 3
 1217 057c 86E4      		ldi r24,lo8(70)
 1218 057e 91E0      		ldi r25,lo8(1)
 1219 0580 FC01      		movw r30,r24
 1220 0582 8081      		ld r24,Z
 1221 0584 8295      		swap r24
 1222 0586 8695      		lsr r24
 1223 0588 8770      		andi r24,lo8(7)
 1224 058a 8370      		andi r24,lo8(3)
 1225 058c 882F      		mov r24,r24
 1226 058e 90E0      		ldi r25,0
 1227 0590 2B81      		ldd r18,Y+3
 1228 0592 222F      		mov r18,r18
 1229 0594 30E0      		ldi r19,0
 1230 0596 00C0      		rjmp 2f
 1231               		1:
 1232 0598 880F      		lsl r24
 1233 059a 991F      		rol r25
 1234               		2:
 1235 059c 2A95      		dec r18
 1236 059e 02F4      		brpl 1b
 1237 05a0 9C01      		movw r18,r24
 1238 05a2 8981      		ldd r24,Y+1
 1239 05a4 9A81      		ldd r25,Y+2
 1240 05a6 822B      		or r24,r18
 1241 05a8 932B      		or r25,r19
 1242 05aa 9A83      		std Y+2,r25
 1243 05ac 8983      		std Y+1,r24
 287:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1244               		.loc 3 287 0 discriminator 3
 1245 05ae 8B81      		ldd r24,Y+3
 1246 05b0 8E5F      		subi r24,lo8(-(2))
 1247 05b2 8B83      		std Y+3,r24
 1248               	.L42:
 287:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1249               		.loc 3 287 0 is_stmt 0 discriminator 1
 1250 05b4 8B81      		ldd r24,Y+3
 1251 05b6 8031      		cpi r24,lo8(16)
 1252 05b8 00F0      		brlo .L43
 1253               	.LBE3:
 290:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 291:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 292:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1254               		.loc 3 292 0 is_stmt 1
 1255 05ba 0E94 0000 		call phySetRxState
 293:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 294:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	return rnd;
 1256               		.loc 3 294 0
 1257 05be 8981      		ldd r24,Y+1
 1258 05c0 9A81      		ldd r25,Y+2
 1259               	/* epilogue start */
 295:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1260               		.loc 3 295 0
 1261 05c2 0F90      		pop __tmp_reg__
 1262 05c4 0F90      		pop __tmp_reg__
 1263 05c6 0F90      		pop __tmp_reg__
 1264 05c8 DF91      		pop r29
 1265 05ca CF91      		pop r28
 1266 05cc 0895      		ret
 1267               		.cfi_endproc
 1268               	.LFE110:
 1270               	.global	PHY_EncryptReq
 1272               	PHY_EncryptReq:
 1273               	.LFB111:
 296:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 297:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 298:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 299:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_EncryptReq(uint8_t *text, uint8_t *key)
 300:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1274               		.loc 3 300 0
 1275               		.cfi_startproc
 1276 05ce CF93      		push r28
 1277               	.LCFI59:
 1278               		.cfi_def_cfa_offset 3
 1279               		.cfi_offset 28, -2
 1280 05d0 DF93      		push r29
 1281               	.LCFI60:
 1282               		.cfi_def_cfa_offset 4
 1283               		.cfi_offset 29, -3
 1284 05d2 00D0      		rcall .
 1285 05d4 00D0      		rcall .
 1286               	.LCFI61:
 1287               		.cfi_def_cfa_offset 8
 1288 05d6 CDB7      		in r28,__SP_L__
 1289 05d8 DEB7      		in r29,__SP_H__
 1290               	.LCFI62:
 1291               		.cfi_def_cfa_register 28
 1292               	/* prologue: function */
 1293               	/* frame size = 4 */
 1294               	/* stack size = 6 */
 1295               	.L__stack_usage = 6
 1296 05da 9A83      		std Y+2,r25
 1297 05dc 8983      		std Y+1,r24
 1298 05de 7C83      		std Y+4,r23
 1299 05e0 6B83      		std Y+3,r22
 301:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_setup(key, AES_MODE_ECB, AES_DIR_ENCRYPT);
 1300               		.loc 3 301 0
 1301 05e2 8B81      		ldd r24,Y+3
 1302 05e4 9C81      		ldd r25,Y+4
 1303 05e6 40E0      		ldi r20,0
 1304 05e8 60E0      		ldi r22,0
 1305 05ea 0E94 0000 		call sal_aes_setup
 302:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_exec(text);
 1306               		.loc 3 302 0
 1307 05ee 8981      		ldd r24,Y+1
 1308 05f0 9A81      		ldd r25,Y+2
 1309 05f2 0E94 0000 		call sal_aes_exec
 303:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_read(text);
 1310               		.loc 3 303 0
 1311 05f6 8981      		ldd r24,Y+1
 1312 05f8 9A81      		ldd r25,Y+2
 1313 05fa 0E94 0000 		call sal_aes_read
 304:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1314               		.loc 3 304 0
 1315 05fe 0000      		nop
 1316               	/* epilogue start */
 1317 0600 0F90      		pop __tmp_reg__
 1318 0602 0F90      		pop __tmp_reg__
 1319 0604 0F90      		pop __tmp_reg__
 1320 0606 0F90      		pop __tmp_reg__
 1321 0608 DF91      		pop r29
 1322 060a CF91      		pop r28
 1323 060c 0895      		ret
 1324               		.cfi_endproc
 1325               	.LFE111:
 1327               	.global	PHY_EdReq
 1329               	PHY_EdReq:
 1330               	.LFB112:
 305:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 306:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 307:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 308:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** int8_t PHY_EdReq(void)
 309:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1331               		.loc 3 309 0
 1332               		.cfi_startproc
 1333 060e CF93      		push r28
 1334               	.LCFI63:
 1335               		.cfi_def_cfa_offset 3
 1336               		.cfi_offset 28, -2
 1337 0610 DF93      		push r29
 1338               	.LCFI64:
 1339               		.cfi_def_cfa_offset 4
 1340               		.cfi_offset 29, -3
 1341 0612 1F92      		push __zero_reg__
 1342               	.LCFI65:
 1343               		.cfi_def_cfa_offset 5
 1344 0614 CDB7      		in r28,__SP_L__
 1345 0616 DEB7      		in r29,__SP_H__
 1346               	.LCFI66:
 1347               		.cfi_def_cfa_register 28
 1348               	/* prologue: function */
 1349               	/* frame size = 1 */
 1350               	/* stack size = 3 */
 1351               	.L__stack_usage = 3
 310:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	int8_t ed;
 311:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 312:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_RX_ON);
 1352               		.loc 3 312 0
 1353 0618 86E0      		ldi r24,lo8(6)
 1354 061a 0E94 0000 		call phyTrxSetState
 313:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 314:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IRQ_STATUS_REG_s.ccaEdDone = 1;
 1355               		.loc 3 314 0
 1356 061e 8FE4      		ldi r24,lo8(79)
 1357 0620 91E0      		ldi r25,lo8(1)
 1358 0622 FC01      		movw r30,r24
 1359 0624 2081      		ld r18,Z
 1360 0626 2061      		ori r18,lo8(16)
 1361 0628 FC01      		movw r30,r24
 1362 062a 2083      		st Z,r18
 315:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_ED_LEVEL_REG = 0;
 1363               		.loc 3 315 0
 1364 062c 87E4      		ldi r24,lo8(71)
 1365 062e 91E0      		ldi r25,lo8(1)
 1366 0630 FC01      		movw r30,r24
 1367 0632 1082      		st Z,__zero_reg__
 316:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	while (0 == IRQ_STATUS_REG_s.ccaEdDone) {
 1368               		.loc 3 316 0
 1369 0634 0000      		nop
 1370               	.L47:
 1371               		.loc 3 316 0 is_stmt 0 discriminator 1
 1372 0636 8FE4      		ldi r24,lo8(79)
 1373 0638 91E0      		ldi r25,lo8(1)
 1374 063a FC01      		movw r30,r24
 1375 063c 8081      		ld r24,Z
 1376 063e 8295      		swap r24
 1377 0640 8170      		andi r24,1
 1378 0642 8823      		tst r24
 1379 0644 01F0      		breq .L47
 317:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 318:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 319:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ed = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1380               		.loc 3 319 0 is_stmt 1
 1381 0646 87E4      		ldi r24,lo8(71)
 1382 0648 91E0      		ldi r25,lo8(1)
 1383 064a FC01      		movw r30,r24
 1384 064c 8081      		ld r24,Z
 1385 064e 8A55      		subi r24,lo8(-(-90))
 1386 0650 8983      		std Y+1,r24
 320:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 321:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1387               		.loc 3 321 0
 1388 0652 0E94 0000 		call phySetRxState
 322:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 323:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	return ed;
 1389               		.loc 3 323 0
 1390 0656 8981      		ldd r24,Y+1
 1391               	/* epilogue start */
 324:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1392               		.loc 3 324 0
 1393 0658 0F90      		pop __tmp_reg__
 1394 065a DF91      		pop r29
 1395 065c CF91      		pop r28
 1396 065e 0895      		ret
 1397               		.cfi_endproc
 1398               	.LFE112:
 1401               	phySetRxState:
 1402               	.LFB113:
 325:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 326:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 327:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 328:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phySetRxState(void)
 329:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1403               		.loc 3 329 0
 1404               		.cfi_startproc
 1405 0660 CF93      		push r28
 1406               	.LCFI67:
 1407               		.cfi_def_cfa_offset 3
 1408               		.cfi_offset 28, -2
 1409 0662 DF93      		push r29
 1410               	.LCFI68:
 1411               		.cfi_def_cfa_offset 4
 1412               		.cfi_offset 29, -3
 1413 0664 CDB7      		in r28,__SP_L__
 1414 0666 DEB7      		in r29,__SP_H__
 1415               	.LCFI69:
 1416               		.cfi_def_cfa_register 28
 1417               	/* prologue: function */
 1418               	/* frame size = 0 */
 1419               	/* stack size = 2 */
 1420               	.L__stack_usage = 2
 330:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 1421               		.loc 3 330 0
 1422 0668 88E0      		ldi r24,lo8(8)
 1423 066a 0E94 0000 		call phyTrxSetState
 331:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 332:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1424               		.loc 3 332 0
 1425 066e 8FE4      		ldi r24,lo8(79)
 1426 0670 91E0      		ldi r25,lo8(1)
 1427 0672 2FEF      		ldi r18,lo8(-1)
 1428 0674 FC01      		movw r30,r24
 1429 0676 2083      		st Z,r18
 333:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 334:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (phyRxState) {
 1430               		.loc 3 334 0
 1431 0678 8091 0000 		lds r24,phyRxState
 1432 067c 8823      		tst r24
 1433 067e 01F0      		breq .L51
 335:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyTrxSetState(TRX_CMD_RX_AACK_ON);
 1434               		.loc 3 335 0
 1435 0680 86E1      		ldi r24,lo8(22)
 1436 0682 0E94 0000 		call phyTrxSetState
 1437               	.L51:
 336:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 337:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1438               		.loc 3 337 0
 1439 0686 0000      		nop
 1440               	/* epilogue start */
 1441 0688 DF91      		pop r29
 1442 068a CF91      		pop r28
 1443 068c 0895      		ret
 1444               		.cfi_endproc
 1445               	.LFE113:
 1447               	.global	phyTrxSetState
 1449               	phyTrxSetState:
 1450               	.LFB114:
 338:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 339:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 340:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 341:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void phyTrxSetState(uint8_t state)
 342:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1451               		.loc 3 342 0
 1452               		.cfi_startproc
 1453 068e CF93      		push r28
 1454               	.LCFI70:
 1455               		.cfi_def_cfa_offset 3
 1456               		.cfi_offset 28, -2
 1457 0690 DF93      		push r29
 1458               	.LCFI71:
 1459               		.cfi_def_cfa_offset 4
 1460               		.cfi_offset 29, -3
 1461 0692 1F92      		push __zero_reg__
 1462               	.LCFI72:
 1463               		.cfi_def_cfa_offset 5
 1464 0694 CDB7      		in r28,__SP_L__
 1465 0696 DEB7      		in r29,__SP_H__
 1466               	.LCFI73:
 1467               		.cfi_def_cfa_register 28
 1468               	/* prologue: function */
 1469               	/* frame size = 1 */
 1470               	/* stack size = 3 */
 1471               	.L__stack_usage = 3
 1472 0698 8983      		std Y+1,r24
 343:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1) || defined(EXT_RF_FRONT_END_CTRL)
 344:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(phyState == PHY_STATE_SLEEP)
 1473               		.loc 3 344 0
 1474 069a 8091 0000 		lds r24,phyState
 1475 069e 8230      		cpi r24,lo8(2)
 1476 06a0 01F4      		brne .L53
 345:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 346:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DIVERSITY == 1)
 347:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antDivEn = 1;
 1477               		.loc 3 347 0
 1478 06a2 8DE4      		ldi r24,lo8(77)
 1479 06a4 91E0      		ldi r25,lo8(1)
 1480 06a6 FC01      		movw r30,r24
 1481 06a8 2081      		ld r18,Z
 1482 06aa 2860      		ori r18,lo8(8)
 1483 06ac FC01      		movw r30,r24
 1484 06ae 2083      		st Z,r18
 348:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
 1485               		.loc 3 348 0
 1486 06b0 8DE4      		ldi r24,lo8(77)
 1487 06b2 91E0      		ldi r25,lo8(1)
 1488 06b4 FC01      		movw r30,r24
 1489 06b6 2081      		ld r18,Z
 1490 06b8 2460      		ori r18,lo8(4)
 1491 06ba FC01      		movw r30,r24
 1492 06bc 2083      		st Z,r18
 349:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#else
 350:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		#if (ANTENNA_DEFAULT != 0)
 351:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			ANT_DIV_REG_s.antExtSwEn = 1;
 352:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			ANT_DIV_REG_s.antCtrl = ANTENNA_DEFAULT;
 353:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		#endif // ANTENNA_DEFAULT
 354:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DIVERSITY
 355:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#ifdef EXT_RF_FRONT_END_CTRL
 356:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_1_REG_s.paExtEn = 1;
 1493               		.loc 3 356 0
 1494 06be 84E4      		ldi r24,lo8(68)
 1495 06c0 91E0      		ldi r25,lo8(1)
 1496 06c2 FC01      		movw r30,r24
 1497 06c4 2081      		ld r18,Z
 1498 06c6 2068      		ori r18,lo8(-128)
 1499 06c8 FC01      		movw r30,r24
 1500 06ca 2083      		st Z,r18
 1501               	.L53:
 357:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // EXT_RF_FRONT_END_CTRL
 358:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 359:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // PLATFORM_WM100
 360:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 361:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	do {TRX_STATE_REG = TRX_CMD_FORCE_TRX_OFF;
 1502               		.loc 3 361 0 discriminator 1
 1503 06cc 82E4      		ldi r24,lo8(66)
 1504 06ce 91E0      		ldi r25,lo8(1)
 1505 06d0 23E0      		ldi r18,lo8(3)
 1506 06d2 FC01      		movw r30,r24
 1507 06d4 2083      		st Z,r18
 362:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	} while (TRX_STATUS_TRX_OFF !=
 363:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1508               		.loc 3 363 0 discriminator 1
 1509 06d6 81E4      		ldi r24,lo8(65)
 1510 06d8 91E0      		ldi r25,lo8(1)
 1511 06da FC01      		movw r30,r24
 1512 06dc 8081      		ld r24,Z
 1513 06de 8F71      		andi r24,lo8(31)
 1514 06e0 8830      		cpi r24,lo8(8)
 1515 06e2 01F4      		brne .L53
 1516               	.L54:
 364:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 365:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	do {TRX_STATE_REG = state; } while (state !=
 1517               		.loc 3 365 0 discriminator 1
 1518 06e4 82E4      		ldi r24,lo8(66)
 1519 06e6 91E0      		ldi r25,lo8(1)
 1520 06e8 2981      		ldd r18,Y+1
 1521 06ea FC01      		movw r30,r24
 1522 06ec 2083      		st Z,r18
 366:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1523               		.loc 3 366 0 discriminator 1
 1524 06ee 81E4      		ldi r24,lo8(65)
 1525 06f0 91E0      		ldi r25,lo8(1)
 1526 06f2 FC01      		movw r30,r24
 1527 06f4 8081      		ld r24,Z
 1528 06f6 8F71      		andi r24,lo8(31)
 365:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1529               		.loc 3 365 0 discriminator 1
 1530 06f8 982F      		mov r25,r24
 1531               		.loc 3 366 0 discriminator 1
 1532 06fa 8981      		ldd r24,Y+1
 1533 06fc 9817      		cp r25,r24
 1534 06fe 01F4      		brne .L54
 367:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1535               		.loc 3 367 0
 1536 0700 0000      		nop
 1537               	/* epilogue start */
 1538 0702 0F90      		pop __tmp_reg__
 1539 0704 DF91      		pop r29
 1540 0706 CF91      		pop r28
 1541 0708 0895      		ret
 1542               		.cfi_endproc
 1543               	.LFE114:
 1545               	.global	PHY_SetIEEEAddr
 1547               	PHY_SetIEEEAddr:
 1548               	.LFB115:
 368:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 369:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 370:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 371:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 372:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetIEEEAddr(uint8_t *ieee_addr)
 373:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1549               		.loc 3 373 0
 1550               		.cfi_startproc
 1551 070a CF93      		push r28
 1552               	.LCFI74:
 1553               		.cfi_def_cfa_offset 3
 1554               		.cfi_offset 28, -2
 1555 070c DF93      		push r29
 1556               	.LCFI75:
 1557               		.cfi_def_cfa_offset 4
 1558               		.cfi_offset 29, -3
 1559 070e 00D0      		rcall .
 1560 0710 00D0      		rcall .
 1561               	.LCFI76:
 1562               		.cfi_def_cfa_offset 8
 1563 0712 CDB7      		in r28,__SP_L__
 1564 0714 DEB7      		in r29,__SP_H__
 1565               	.LCFI77:
 1566               		.cfi_def_cfa_register 28
 1567               	/* prologue: function */
 1568               	/* frame size = 4 */
 1569               	/* stack size = 6 */
 1570               	.L__stack_usage = 6
 1571 0716 9C83      		std Y+4,r25
 1572 0718 8B83      		std Y+3,r24
 374:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *ptr_to_reg = ieee_addr;
 1573               		.loc 3 374 0
 1574 071a 8B81      		ldd r24,Y+3
 1575 071c 9C81      		ldd r25,Y+4
 1576 071e 9A83      		std Y+2,r25
 1577 0720 8983      		std Y+1,r24
 375:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_0_REG = *ptr_to_reg++;
 1578               		.loc 3 375 0
 1579 0722 24E6      		ldi r18,lo8(100)
 1580 0724 31E0      		ldi r19,lo8(1)
 1581 0726 8981      		ldd r24,Y+1
 1582 0728 9A81      		ldd r25,Y+2
 1583 072a AC01      		movw r20,r24
 1584 072c 4F5F      		subi r20,-1
 1585 072e 5F4F      		sbci r21,-1
 1586 0730 5A83      		std Y+2,r21
 1587 0732 4983      		std Y+1,r20
 1588 0734 FC01      		movw r30,r24
 1589 0736 8081      		ld r24,Z
 1590 0738 F901      		movw r30,r18
 1591 073a 8083      		st Z,r24
 376:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_1_REG = *ptr_to_reg++;
 1592               		.loc 3 376 0
 1593 073c 25E6      		ldi r18,lo8(101)
 1594 073e 31E0      		ldi r19,lo8(1)
 1595 0740 8981      		ldd r24,Y+1
 1596 0742 9A81      		ldd r25,Y+2
 1597 0744 AC01      		movw r20,r24
 1598 0746 4F5F      		subi r20,-1
 1599 0748 5F4F      		sbci r21,-1
 1600 074a 5A83      		std Y+2,r21
 1601 074c 4983      		std Y+1,r20
 1602 074e FC01      		movw r30,r24
 1603 0750 8081      		ld r24,Z
 1604 0752 F901      		movw r30,r18
 1605 0754 8083      		st Z,r24
 377:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_2_REG = *ptr_to_reg++;
 1606               		.loc 3 377 0
 1607 0756 26E6      		ldi r18,lo8(102)
 1608 0758 31E0      		ldi r19,lo8(1)
 1609 075a 8981      		ldd r24,Y+1
 1610 075c 9A81      		ldd r25,Y+2
 1611 075e AC01      		movw r20,r24
 1612 0760 4F5F      		subi r20,-1
 1613 0762 5F4F      		sbci r21,-1
 1614 0764 5A83      		std Y+2,r21
 1615 0766 4983      		std Y+1,r20
 1616 0768 FC01      		movw r30,r24
 1617 076a 8081      		ld r24,Z
 1618 076c F901      		movw r30,r18
 1619 076e 8083      		st Z,r24
 378:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_3_REG = *ptr_to_reg++;
 1620               		.loc 3 378 0
 1621 0770 27E6      		ldi r18,lo8(103)
 1622 0772 31E0      		ldi r19,lo8(1)
 1623 0774 8981      		ldd r24,Y+1
 1624 0776 9A81      		ldd r25,Y+2
 1625 0778 AC01      		movw r20,r24
 1626 077a 4F5F      		subi r20,-1
 1627 077c 5F4F      		sbci r21,-1
 1628 077e 5A83      		std Y+2,r21
 1629 0780 4983      		std Y+1,r20
 1630 0782 FC01      		movw r30,r24
 1631 0784 8081      		ld r24,Z
 1632 0786 F901      		movw r30,r18
 1633 0788 8083      		st Z,r24
 379:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_4_REG = *ptr_to_reg++;
 1634               		.loc 3 379 0
 1635 078a 28E6      		ldi r18,lo8(104)
 1636 078c 31E0      		ldi r19,lo8(1)
 1637 078e 8981      		ldd r24,Y+1
 1638 0790 9A81      		ldd r25,Y+2
 1639 0792 AC01      		movw r20,r24
 1640 0794 4F5F      		subi r20,-1
 1641 0796 5F4F      		sbci r21,-1
 1642 0798 5A83      		std Y+2,r21
 1643 079a 4983      		std Y+1,r20
 1644 079c FC01      		movw r30,r24
 1645 079e 8081      		ld r24,Z
 1646 07a0 F901      		movw r30,r18
 1647 07a2 8083      		st Z,r24
 380:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_5_REG = *ptr_to_reg++;
 1648               		.loc 3 380 0
 1649 07a4 29E6      		ldi r18,lo8(105)
 1650 07a6 31E0      		ldi r19,lo8(1)
 1651 07a8 8981      		ldd r24,Y+1
 1652 07aa 9A81      		ldd r25,Y+2
 1653 07ac AC01      		movw r20,r24
 1654 07ae 4F5F      		subi r20,-1
 1655 07b0 5F4F      		sbci r21,-1
 1656 07b2 5A83      		std Y+2,r21
 1657 07b4 4983      		std Y+1,r20
 1658 07b6 FC01      		movw r30,r24
 1659 07b8 8081      		ld r24,Z
 1660 07ba F901      		movw r30,r18
 1661 07bc 8083      		st Z,r24
 381:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_6_REG = *ptr_to_reg++;
 1662               		.loc 3 381 0
 1663 07be 2AE6      		ldi r18,lo8(106)
 1664 07c0 31E0      		ldi r19,lo8(1)
 1665 07c2 8981      		ldd r24,Y+1
 1666 07c4 9A81      		ldd r25,Y+2
 1667 07c6 AC01      		movw r20,r24
 1668 07c8 4F5F      		subi r20,-1
 1669 07ca 5F4F      		sbci r21,-1
 1670 07cc 5A83      		std Y+2,r21
 1671 07ce 4983      		std Y+1,r20
 1672 07d0 FC01      		movw r30,r24
 1673 07d2 8081      		ld r24,Z
 1674 07d4 F901      		movw r30,r18
 1675 07d6 8083      		st Z,r24
 382:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_7_REG = *ptr_to_reg;
 1676               		.loc 3 382 0
 1677 07d8 8BE6      		ldi r24,lo8(107)
 1678 07da 91E0      		ldi r25,lo8(1)
 1679 07dc 2981      		ldd r18,Y+1
 1680 07de 3A81      		ldd r19,Y+2
 1681 07e0 F901      		movw r30,r18
 1682 07e2 2081      		ld r18,Z
 1683 07e4 FC01      		movw r30,r24
 1684 07e6 2083      		st Z,r18
 383:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1685               		.loc 3 383 0
 1686 07e8 0000      		nop
 1687               	/* epilogue start */
 1688 07ea 0F90      		pop __tmp_reg__
 1689 07ec 0F90      		pop __tmp_reg__
 1690 07ee 0F90      		pop __tmp_reg__
 1691 07f0 0F90      		pop __tmp_reg__
 1692 07f2 DF91      		pop r29
 1693 07f4 CF91      		pop r28
 1694 07f6 0895      		ret
 1695               		.cfi_endproc
 1696               	.LFE115:
 1698               	.global	PHY_TaskHandler
 1700               	PHY_TaskHandler:
 1701               	.LFB116:
 384:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 385:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 386:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 387:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_TaskHandler(void)
 388:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1702               		.loc 3 388 0
 1703               		.cfi_startproc
 1704 07f8 CF93      		push r28
 1705               	.LCFI78:
 1706               		.cfi_def_cfa_offset 3
 1707               		.cfi_offset 28, -2
 1708 07fa DF93      		push r29
 1709               	.LCFI79:
 1710               		.cfi_def_cfa_offset 4
 1711               		.cfi_offset 29, -3
 1712 07fc CDB7      		in r28,__SP_L__
 1713 07fe DEB7      		in r29,__SP_H__
 1714               	.LCFI80:
 1715               		.cfi_def_cfa_register 28
 1716 0800 2897      		sbiw r28,8
 1717               	.LCFI81:
 1718               		.cfi_def_cfa_offset 12
 1719 0802 0FB6      		in __tmp_reg__,__SREG__
 1720 0804 F894      		cli
 1721 0806 DEBF      		out __SP_H__,r29
 1722 0808 0FBE      		out __SREG__,__tmp_reg__
 1723 080a CDBF      		out __SP_L__,r28
 1724               	/* prologue: function */
 1725               	/* frame size = 8 */
 1726               	/* stack size = 10 */
 1727               	.L__stack_usage = 10
 389:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (PHY_STATE_SLEEP == phyState) {
 1728               		.loc 3 389 0
 1729 080c 8091 0000 		lds r24,phyState
 1730 0810 8230      		cpi r24,lo8(2)
 1731 0812 01F4      		brne .+2
 1732 0814 00C0      		rjmp .L68
 390:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		return;
 391:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 392:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 393:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (IRQ_STATUS_REG_s.rxEnd) {
 1733               		.loc 3 393 0
 1734 0816 8FE4      		ldi r24,lo8(79)
 1735 0818 91E0      		ldi r25,lo8(1)
 1736 081a FC01      		movw r30,r24
 1737 081c 8081      		ld r24,Z
 1738 081e 83FB      		bst r24,3
 1739 0820 8827      		clr r24
 1740 0822 80F9      		bld r24,0
 1741 0824 8823      		tst r24
 1742 0826 01F4      		brne .+2
 1743 0828 00C0      		rjmp .L59
 1744               	.LBB4:
 394:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_DataInd_t ind;
 395:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		uint8_t size = TST_RX_LENGTH_REG;
 1745               		.loc 3 395 0
 1746 082a 8BE7      		ldi r24,lo8(123)
 1747 082c 91E0      		ldi r25,lo8(1)
 1748 082e FC01      		movw r30,r24
 1749 0830 8081      		ld r24,Z
 1750 0832 8B83      		std Y+3,r24
 1751               	.LBB5:
 396:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 397:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		for (uint8_t i = 0; i < size + 1 /*lqi*/; i++) {
 1752               		.loc 3 397 0
 1753 0834 1982      		std Y+1,__zero_reg__
 1754 0836 00C0      		rjmp .L60
 1755               	.L61:
 398:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1756               		.loc 3 398 0 discriminator 3
 1757 0838 8981      		ldd r24,Y+1
 1758 083a 882F      		mov r24,r24
 1759 083c 90E0      		ldi r25,0
 1760 083e 2981      		ldd r18,Y+1
 1761 0840 222F      		mov r18,r18
 1762 0842 30E0      		ldi r19,0
 1763 0844 2058      		subi r18,-128
 1764 0846 3E4F      		sbci r19,-2
 1765 0848 F901      		movw r30,r18
 1766 084a 2081      		ld r18,Z
 1767 084c 8050      		subi r24,lo8(-(phyRxBuffer))
 1768 084e 9040      		sbci r25,hi8(-(phyRxBuffer))
 1769 0850 FC01      		movw r30,r24
 1770 0852 2083      		st Z,r18
 397:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1771               		.loc 3 397 0 discriminator 3
 1772 0854 8981      		ldd r24,Y+1
 1773 0856 8F5F      		subi r24,lo8(-(1))
 1774 0858 8983      		std Y+1,r24
 1775               	.L60:
 397:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1776               		.loc 3 397 0 is_stmt 0 discriminator 1
 1777 085a 8981      		ldd r24,Y+1
 1778 085c 282F      		mov r18,r24
 1779 085e 30E0      		ldi r19,0
 1780 0860 8B81      		ldd r24,Y+3
 1781 0862 882F      		mov r24,r24
 1782 0864 90E0      		ldi r25,0
 1783 0866 0196      		adiw r24,1
 1784 0868 2817      		cp r18,r24
 1785 086a 3907      		cpc r19,r25
 1786 086c 04F0      		brlt .L61
 1787               	.LBE5:
 399:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 400:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 401:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.data = phyRxBuffer;
 1788               		.loc 3 401 0 is_stmt 1
 1789 086e 80E0      		ldi r24,lo8(phyRxBuffer)
 1790 0870 90E0      		ldi r25,hi8(phyRxBuffer)
 1791 0872 9D83      		std Y+5,r25
 1792 0874 8C83      		std Y+4,r24
 402:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.size = size - PHY_CRC_SIZE;
 1793               		.loc 3 402 0
 1794 0876 8B81      		ldd r24,Y+3
 1795 0878 8250      		subi r24,lo8(-(-2))
 1796 087a 8E83      		std Y+6,r24
 403:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.lqi  = phyRxBuffer[size];
 1797               		.loc 3 403 0
 1798 087c 8B81      		ldd r24,Y+3
 1799 087e 882F      		mov r24,r24
 1800 0880 90E0      		ldi r25,0
 1801 0882 8050      		subi r24,lo8(-(phyRxBuffer))
 1802 0884 9040      		sbci r25,hi8(-(phyRxBuffer))
 1803 0886 FC01      		movw r30,r24
 1804 0888 8081      		ld r24,Z
 1805 088a 8F83      		std Y+7,r24
 404:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.rssi = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1806               		.loc 3 404 0
 1807 088c 87E4      		ldi r24,lo8(71)
 1808 088e 91E0      		ldi r25,lo8(1)
 1809 0890 FC01      		movw r30,r24
 1810 0892 8081      		ld r24,Z
 1811 0894 8A55      		subi r24,lo8(-(-90))
 1812 0896 8887      		std Y+8,r24
 405:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_DataInd(&ind);
 1813               		.loc 3 405 0
 1814 0898 CE01      		movw r24,r28
 1815 089a 0496      		adiw r24,4
 1816 089c 0E94 0000 		call PHY_DataInd
 406:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 407:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		while (TRX_STATUS_RX_AACK_ON != TRX_STATUS_REG_s.trxStatus) {
 1817               		.loc 3 407 0
 1818 08a0 0000      		nop
 1819               	.L62:
 1820               		.loc 3 407 0 is_stmt 0 discriminator 1
 1821 08a2 81E4      		ldi r24,lo8(65)
 1822 08a4 91E0      		ldi r25,lo8(1)
 1823 08a6 FC01      		movw r30,r24
 1824 08a8 8081      		ld r24,Z
 1825 08aa 8F71      		andi r24,lo8(31)
 1826 08ac 8631      		cpi r24,lo8(22)
 1827 08ae 01F4      		brne .L62
 408:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 409:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 410:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		IRQ_STATUS_REG_s.rxEnd = 1;
 1828               		.loc 3 410 0 is_stmt 1 discriminator 2
 1829 08b0 8FE4      		ldi r24,lo8(79)
 1830 08b2 91E0      		ldi r25,lo8(1)
 1831 08b4 FC01      		movw r30,r24
 1832 08b6 2081      		ld r18,Z
 1833 08b8 2860      		ori r18,lo8(8)
 1834 08ba FC01      		movw r30,r24
 1835 08bc 2083      		st Z,r18
 411:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_2_REG_s.rxSafeMode = 0;
 1836               		.loc 3 411 0 discriminator 2
 1837 08be 8CE4      		ldi r24,lo8(76)
 1838 08c0 91E0      		ldi r25,lo8(1)
 1839 08c2 FC01      		movw r30,r24
 1840 08c4 2081      		ld r18,Z
 1841 08c6 2F77      		andi r18,lo8(127)
 1842 08c8 FC01      		movw r30,r24
 1843 08ca 2083      		st Z,r18
 412:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_2_REG_s.rxSafeMode = 1;
 1844               		.loc 3 412 0 discriminator 2
 1845 08cc 8CE4      		ldi r24,lo8(76)
 1846 08ce 91E0      		ldi r25,lo8(1)
 1847 08d0 FC01      		movw r30,r24
 1848 08d2 2081      		ld r18,Z
 1849 08d4 2068      		ori r18,lo8(-128)
 1850 08d6 FC01      		movw r30,r24
 1851 08d8 2083      		st Z,r18
 1852               	.LBE4:
 1853 08da 00C0      		rjmp .L56
 1854               	.L59:
 413:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	} else if (IRQ_STATUS_REG_s.txEnd) {
 1855               		.loc 3 413 0
 1856 08dc 8FE4      		ldi r24,lo8(79)
 1857 08de 91E0      		ldi r25,lo8(1)
 1858 08e0 FC01      		movw r30,r24
 1859 08e2 8081      		ld r24,Z
 1860 08e4 86FB      		bst r24,6
 1861 08e6 8827      		clr r24
 1862 08e8 80F9      		bld r24,0
 1863 08ea 8823      		tst r24
 1864 08ec 01F0      		breq .L56
 414:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		if (TRX_STATUS_TX_ARET_ON == TRX_STATUS_REG_s.trxStatus) {
 1865               		.loc 3 414 0
 1866 08ee 81E4      		ldi r24,lo8(65)
 1867 08f0 91E0      		ldi r25,lo8(1)
 1868 08f2 FC01      		movw r30,r24
 1869 08f4 8081      		ld r24,Z
 1870 08f6 8F71      		andi r24,lo8(31)
 1871 08f8 8931      		cpi r24,lo8(25)
 1872 08fa 01F4      		brne .L63
 1873               	.LBB6:
 415:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			uint8_t status = TRX_STATE_REG_s.tracStatus;
 1874               		.loc 3 415 0
 1875 08fc 82E4      		ldi r24,lo8(66)
 1876 08fe 91E0      		ldi r25,lo8(1)
 1877 0900 FC01      		movw r30,r24
 1878 0902 8081      		ld r24,Z
 1879 0904 8295      		swap r24
 1880 0906 8695      		lsr r24
 1881 0908 8770      		andi r24,lo8(7)
 1882 090a 8A83      		std Y+2,r24
 416:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 417:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			if (TRAC_STATUS_SUCCESS == status) {
 1883               		.loc 3 417 0
 1884 090c 8A81      		ldd r24,Y+2
 1885 090e 8823      		tst r24
 1886 0910 01F4      		brne .L64
 418:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_SUCCESS;
 1887               		.loc 3 418 0
 1888 0912 1A82      		std Y+2,__zero_reg__
 1889 0914 00C0      		rjmp .L65
 1890               	.L64:
 419:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else if (TRAC_STATUS_CHANNEL_ACCESS_FAILURE ==
 1891               		.loc 3 419 0
 1892 0916 8A81      		ldd r24,Y+2
 1893 0918 8330      		cpi r24,lo8(3)
 1894 091a 01F4      		brne .L66
 420:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 					status) {
 421:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_CHANNEL_ACCESS_FAILURE;
 1895               		.loc 3 421 0
 1896 091c 81E0      		ldi r24,lo8(1)
 1897 091e 8A83      		std Y+2,r24
 1898 0920 00C0      		rjmp .L65
 1899               	.L66:
 422:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else if (TRAC_STATUS_NO_ACK == status) {
 1900               		.loc 3 422 0
 1901 0922 8A81      		ldd r24,Y+2
 1902 0924 8530      		cpi r24,lo8(5)
 1903 0926 01F4      		brne .L67
 423:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_NO_ACK;
 1904               		.loc 3 423 0
 1905 0928 82E0      		ldi r24,lo8(2)
 1906 092a 8A83      		std Y+2,r24
 1907 092c 00C0      		rjmp .L65
 1908               	.L67:
 424:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else {
 425:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_ERROR;
 1909               		.loc 3 425 0
 1910 092e 83E0      		ldi r24,lo8(3)
 1911 0930 8A83      		std Y+2,r24
 1912               	.L65:
 426:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			}
 427:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 428:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phySetRxState();
 1913               		.loc 3 428 0
 1914 0932 0E94 0000 		call phySetRxState
 429:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyState = PHY_STATE_IDLE;
 1915               		.loc 3 429 0
 1916 0936 81E0      		ldi r24,lo8(1)
 1917 0938 8093 0000 		sts phyState,r24
 430:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 431:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			PHY_DataConf(status);
 1918               		.loc 3 431 0
 1919 093c 8A81      		ldd r24,Y+2
 1920 093e 0E94 0000 		call PHY_DataConf
 1921               	.L63:
 1922               	.LBE6:
 432:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 433:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 434:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		IRQ_STATUS_REG_s.txEnd = 1;
 1923               		.loc 3 434 0
 1924 0942 8FE4      		ldi r24,lo8(79)
 1925 0944 91E0      		ldi r25,lo8(1)
 1926 0946 FC01      		movw r30,r24
 1927 0948 2081      		ld r18,Z
 1928 094a 2064      		ori r18,lo8(64)
 1929 094c FC01      		movw r30,r24
 1930 094e 2083      		st Z,r18
 1931 0950 00C0      		rjmp .L56
 1932               	.L68:
 390:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 1933               		.loc 3 390 0
 1934 0952 0000      		nop
 1935               	.L56:
 1936               	/* epilogue start */
 435:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 436:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1937               		.loc 3 436 0
 1938 0954 2896      		adiw r28,8
 1939 0956 0FB6      		in __tmp_reg__,__SREG__
 1940 0958 F894      		cli
 1941 095a DEBF      		out __SP_H__,r29
 1942 095c 0FBE      		out __SREG__,__tmp_reg__
 1943 095e CDBF      		out __SP_L__,r28
 1944 0960 DF91      		pop r29
 1945 0962 CF91      		pop r28
 1946 0964 0895      		ret
 1947               		.cfi_endproc
 1948               	.LFE116:
 1950               	.Letext0:
 1951               		.file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 1952               		.file 5 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 1953               		.file 6 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/atmegarfa1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 phy.c
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:12     .text:00000000 sysclk_enable_peripheral_clock
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:214    .text:0000011a __portable_avr_delay_cycles
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:239    .bss.phyState:00000000 phyState
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:244    .bss.phyRxBuffer:00000000 phyRxBuffer
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:249    .bss.phyRxState:00000000 phyRxState
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:254    .text:00000126 PHY_Init
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:1449   .text:0000068e phyTrxSetState
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:1175   .text:00000556 PHY_RandomReq
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:372    .text:000001c8 PHY_ResetRadio
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:411    .text:000001e6 PHY_SetTdmaMode
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:505    .text:0000025c PHY_SetPromiscuousMode
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:844    .text:000003dc PHY_SetShortAddr
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:780    .text:00000394 PHY_SetPanId
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:1547   .text:0000070a PHY_SetIEEEAddr
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:626    .text:00000304 PHY_SetOptimizedCSMAValues
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:691    .text:00000348 PHY_SetRxState
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:1401   .text:00000660 phySetRxState
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:732    .text:00000368 PHY_SetChannel
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:908    .text:00000424 PHY_SetTxPower
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:956    .text:00000450 PHY_Sleep
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:1030   .text:000004ac PHY_Wakeup
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:1074   .text:000004d4 PHY_DataReq
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:1272   .text:000005ce PHY_EncryptReq
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:1329   .text:0000060e PHY_EdReq
C:\Users\GUILHE~1\AppData\Local\Temp\ccp6MWOq.s:1700   .text:000007f8 PHY_TaskHandler

UNDEFINED SYMBOLS
sysclk_enable_module
sal_aes_setup
sal_aes_exec
sal_aes_read
PHY_DataInd
PHY_DataConf
__do_clear_bss
