   1               		.file	"phy.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	sysclk_enable_peripheral_clock:
  13               	.LFB69:
  14               		.file 1 "../../../platform/common/services/clock/mega/sysclk.h"
   1:../../../platform/common/services/clock/mega/sysclk.h **** /**
   2:../../../platform/common/services/clock/mega/sysclk.h ****  * \file
   3:../../../platform/common/services/clock/mega/sysclk.h ****  *
   4:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Chip-specific system clock management functions
   5:../../../platform/common/services/clock/mega/sysclk.h ****  *
   6:../../../platform/common/services/clock/mega/sysclk.h ****  * Copyright (c) 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/mega/sysclk.h ****  *
   8:../../../platform/common/services/clock/mega/sysclk.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/mega/sysclk.h ****  *
  10:../../../platform/common/services/clock/mega/sysclk.h ****  * \page License
  11:../../../platform/common/services/clock/mega/sysclk.h ****  *
  12:../../../platform/common/services/clock/mega/sysclk.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/mega/sysclk.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/mega/sysclk.h ****  *
  15:../../../platform/common/services/clock/mega/sysclk.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/mega/sysclk.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/mega/sysclk.h ****  *
  18:../../../platform/common/services/clock/mega/sysclk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/mega/sysclk.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/mega/sysclk.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/mega/sysclk.h ****  *
  22:../../../platform/common/services/clock/mega/sysclk.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/mega/sysclk.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/mega/sysclk.h ****  *
  25:../../../platform/common/services/clock/mega/sysclk.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/mega/sysclk.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/mega/sysclk.h ****  *
  28:../../../platform/common/services/clock/mega/sysclk.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/mega/sysclk.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/mega/sysclk.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/mega/sysclk.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/mega/sysclk.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/mega/sysclk.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/mega/sysclk.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/mega/sysclk.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/mega/sysclk.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/mega/sysclk.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/mega/sysclk.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/mega/sysclk.h ****  *
  40:../../../platform/common/services/clock/mega/sysclk.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/mega/sysclk.h ****  *
  42:../../../platform/common/services/clock/mega/sysclk.h ****  */
  43:../../../platform/common/services/clock/mega/sysclk.h **** #ifndef MEGA_SYSCLK_H_INCLUDED
  44:../../../platform/common/services/clock/mega/sysclk.h **** #define MEGA_SYSCLK_H_INCLUDED
  45:../../../platform/common/services/clock/mega/sysclk.h **** 
  46:../../../platform/common/services/clock/mega/sysclk.h **** #include <board.h>
  47:../../../platform/common/services/clock/mega/sysclk.h **** #include <compiler.h>
  48:../../../platform/common/services/clock/mega/sysclk.h **** #include <parts.h>
  49:../../../platform/common/services/clock/mega/sysclk.h **** 
  50:../../../platform/common/services/clock/mega/sysclk.h **** /* Include clock configuration for the project. */
  51:../../../platform/common/services/clock/mega/sysclk.h **** #include <conf_clock.h>
  52:../../../platform/common/services/clock/mega/sysclk.h **** 
  53:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef __cplusplus
  54:../../../platform/common/services/clock/mega/sysclk.h **** extern "C" {
  55:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  56:../../../platform/common/services/clock/mega/sysclk.h **** #define ASM __asm__
  57:../../../platform/common/services/clock/mega/sysclk.h **** 
  58:../../../platform/common/services/clock/mega/sysclk.h **** /* CONFIG_SYSCLK_PSDIV  to use default if not defined*/
  59:../../../platform/common/services/clock/mega/sysclk.h **** #ifndef CONFIG_SYSCLK_PSDIV
  60:../../../platform/common/services/clock/mega/sysclk.h **** # define CONFIG_SYSCLK_PSDIV    SYSCLK_PSDIV_8
  61:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  62:../../../platform/common/services/clock/mega/sysclk.h **** 
  63:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Prescaler Setting (relative to CLKsys) */
  64:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
  65:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_1      0   /* !< Do not prescale */
  66:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_2      1   /* !< Prescale CLKper4 by 2 */
  67:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_4      2   /* !< Prescale CLKper4 by 4 */
  68:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_8      3   /* !< Prescale CLKper4 by 8 */
  69:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_16     4   /* !< Prescale CLKper4 by 16 */
  70:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_32     5   /* !< Prescale CLKper4 by 32 */
  71:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_64     6   /* !< Prescale CLKper4 by 64 */
  72:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_128    7   /* !< Prescale CLKper4 by 128 */
  73:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_256    8   /* !< Prescale CLKper4 by 256 */
  74:../../../platform/common/services/clock/mega/sysclk.h **** 
  75:../../../platform/common/services/clock/mega/sysclk.h **** /* @} */
  76:../../../platform/common/services/clock/mega/sysclk.h **** 
  77:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF || MEGA_XX0_1 || MEGA_XX4 || MEGA_XX4_A
  78:../../../platform/common/services/clock/mega/sysclk.h **** 
  79:../../../platform/common/services/clock/mega/sysclk.h **** #define NUMBER_OF_POWER_REG       2
  80:../../../platform/common/services/clock/mega/sysclk.h **** /*Starting Address for power reduction*/
  81:../../../platform/common/services/clock/mega/sysclk.h **** #define POWER_REG_ADD             PRR0
  82:../../../platform/common/services/clock/mega/sysclk.h **** 
  83:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Power Reduction  Clock Port Numbers */
  84:../../../platform/common/services/clock/mega/sysclk.h **** enum power_red_id {
  85:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG0,     /* !< Devices on PRR0 */
  86:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX4 || !MEGA_XX4_A || MEGA_XX0_1
  87:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG1,     /* !< Devices on PRR1 */
  88:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  89:../../../platform/common/services/clock/mega/sysclk.h **** };
  90:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  91:../../../platform/common/services/clock/mega/sysclk.h **** 
  92:../../../platform/common/services/clock/mega/sysclk.h **** /****************************************************
  93:../../../platform/common/services/clock/mega/sysclk.h ****  * Given a dummy type but not used for these groups
  94:../../../platform/common/services/clock/mega/sysclk.h ****  * to support for otherthen megaRF device.
  95:../../../platform/common/services/clock/mega/sysclk.h ****  **************************************************/
  96:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX8 || MEGA_XX8_A || MEGA_UNSPECIFIED
  97:../../../platform/common/services/clock/mega/sysclk.h **** #define NUMBER_OF_POWER_REG       1
  98:../../../platform/common/services/clock/mega/sysclk.h **** /*Starting Address for power reduction*/
  99:../../../platform/common/services/clock/mega/sysclk.h **** #define POWER_REG_ADD             PRR
 100:../../../platform/common/services/clock/mega/sysclk.h **** 
 101:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Power Reduction  Clock Port Numbers */
 102:../../../platform/common/services/clock/mega/sysclk.h **** enum power_red_id {
 103:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG0,     /* !< Devices on PRR */
 104:../../../platform/common/services/clock/mega/sysclk.h **** };
 105:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 106:../../../platform/common/services/clock/mega/sysclk.h **** 
 107:../../../platform/common/services/clock/mega/sysclk.h **** /* Bit mask for the power reduction register based on */
 108:../../../platform/common/services/clock/mega/sysclk.h **** /*   MCU ARCH.                                        */
 109:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 110:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for PRR2 */
 111:../../../platform/common/services/clock/mega/sysclk.h **** 
 112:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM0_bm                       1 << PRRAM0
 113:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM1_bm                       1 << PRRAM1
 114:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM2_bm                       1 << PRRAM2
 115:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM3_bm                       1 << PRRAM3
 116:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 117:../../../platform/common/services/clock/mega/sysclk.h **** 
 118:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for the power reduction 0 or PRR*/
 119:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN0 && !MEGA_XX_UN0
 120:../../../platform/common/services/clock/mega/sysclk.h **** #define PRADC_bm                        1 << PRADC
 121:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART0_bm                     1 << PRUSART0
 122:../../../platform/common/services/clock/mega/sysclk.h **** #define PRSPI_bm                        1 << PRSPI
 123:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM1_bm                       1 << PRTIM1
 124:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 125:../../../platform/common/services/clock/mega/sysclk.h **** 
 126:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 127:../../../platform/common/services/clock/mega/sysclk.h **** #define PRPGA_bm                        1 << PRPGA
 128:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 129:../../../platform/common/services/clock/mega/sysclk.h **** 
 130:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_UNSPECIFIED
 131:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM0_bm                       1 << PRTIM0
 132:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM2_bm                       1 << PRTIM2
 133:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTWI_bm                        1 << PRTWI
 134:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 135:../../../platform/common/services/clock/mega/sysclk.h **** 
 136:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX_UN2
 137:../../../platform/common/services/clock/mega/sysclk.h **** #define PRLCD_bm                        1 << PRLCD
 138:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 139:../../../platform/common/services/clock/mega/sysclk.h **** 
 140:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for  PRR1  */
 141:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef PRR1
 142:../../../platform/common/services/clock/mega/sysclk.h **** #if (MEGA_XX4 || MEGA_XX4_A)
 143:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM3_bm                       1 << PRTIM3
 144:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 145:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 146:../../../platform/common/services/clock/mega/sysclk.h **** 
 147:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF || MEGA_XX4 || MEGA_XX4_A
 148:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART1_bm                     1 << PRUSART1
 149:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART2_bm                     1 << PRUSART2
 150:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART3_bm                     1 << PRUSART3
 151:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM3_bm                       1 << PRTIM3
 152:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM4_bm                       1 << PRTIM4
 153:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM5_bm                       1 << PRTIM5
 154:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 155:../../../platform/common/services/clock/mega/sysclk.h **** 
 156:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 157:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTRX24_bm                      1 << PRTRX24
 158:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 159:../../../platform/common/services/clock/mega/sysclk.h **** 
 160:../../../platform/common/services/clock/mega/sysclk.h **** /**
 161:../../../platform/common/services/clock/mega/sysclk.h ****  * \name Querying the system clock and its derived clocks
 162:../../../platform/common/services/clock/mega/sysclk.h ****  */
 163:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
 164:../../../platform/common/services/clock/mega/sysclk.h **** 
 165:../../../platform/common/services/clock/mega/sysclk.h **** /**
 166:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the main system clock
 167:../../../platform/common/services/clock/mega/sysclk.h ****  * To know the clock value at what frequency the main clock is running
 168:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the main system clock, in Hz.
 169:../../../platform/common/services/clock/mega/sysclk.h ****  * \todo : please initialize the SYSCLK_SOURCE in conf_clock.h file for
 170:../../../platform/common/services/clock/mega/sysclk.h ****  * configured source clock using fuses.
 171:../../../platform/common/services/clock/mega/sysclk.h ****  * \eg. #define SYSCLK_SOURCE SYSCLK_SRC_RC16MHZ to use internal RC
 172:../../../platform/common/services/clock/mega/sysclk.h ****  * oscillator for clock source.
 173:../../../platform/common/services/clock/mega/sysclk.h ****  */
 174:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_main_hz(void)
 175:../../../platform/common/services/clock/mega/sysclk.h **** {
 176:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (SYSCLK_SOURCE) {
 177:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_RC16MHZ:
 178:../../../platform/common/services/clock/mega/sysclk.h **** 		return 16000000UL;
 179:../../../platform/common/services/clock/mega/sysclk.h **** 
 180:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_RC128KHZ:
 181:../../../platform/common/services/clock/mega/sysclk.h **** 		return 128000UL;
 182:../../../platform/common/services/clock/mega/sysclk.h **** 
 183:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 184:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_TRS16MHZ:
 185:../../../platform/common/services/clock/mega/sysclk.h **** 		return 16000000UL;
 186:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 187:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef BOARD_EXTERNAL_CLK
 188:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_EXTERNAL:
 189:../../../platform/common/services/clock/mega/sysclk.h **** 		return BOARD_EXTERNAL_CLK;
 190:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 191:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 192:../../../platform/common/services/clock/mega/sysclk.h **** 
 193:../../../platform/common/services/clock/mega/sysclk.h **** 		return 1000000UL;
 194:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 195:../../../platform/common/services/clock/mega/sysclk.h **** }
 196:../../../platform/common/services/clock/mega/sysclk.h **** 
 197:../../../platform/common/services/clock/mega/sysclk.h **** /**
 198:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of source clock in Hz.
 199:../../../platform/common/services/clock/mega/sysclk.h ****  *
 200:../../../platform/common/services/clock/mega/sysclk.h ****  * This clock always runs at the same rate as the CPU clock unless the divider
 201:../../../platform/common/services/clock/mega/sysclk.h ****  * is set.
 202:../../../platform/common/services/clock/mega/sysclk.h ****  *
 203:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the system clock, in Hz.
 204:../../../platform/common/services/clock/mega/sysclk.h ****  */
 205:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_source_clock_hz(void)
 206:../../../platform/common/services/clock/mega/sysclk.h **** {
 207:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (CONFIG_SYSCLK_PSDIV) {
 208:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_1: /* Fall through */
 209:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 210:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 211:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 212:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 213:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz();
 214:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 215:../../../platform/common/services/clock/mega/sysclk.h **** 
 216:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_2:
 217:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 218:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 219:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 220:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 221:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 222:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 223:../../../platform/common/services/clock/mega/sysclk.h **** 
 224:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_4:
 225:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 226:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 227:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 228:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 229:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 230:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 231:../../../platform/common/services/clock/mega/sysclk.h **** 
 232:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_8:
 233:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 234:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 235:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 236:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 237:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 238:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 239:../../../platform/common/services/clock/mega/sysclk.h **** 
 240:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_16:
 241:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 242:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 243:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 244:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 245:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 246:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 247:../../../platform/common/services/clock/mega/sysclk.h **** 
 248:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_32:
 249:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 250:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 251:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 252:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 253:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 254:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 255:../../../platform/common/services/clock/mega/sysclk.h **** 
 256:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_64:
 257:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 258:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 259:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 260:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 261:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 262:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 263:../../../platform/common/services/clock/mega/sysclk.h **** 
 264:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_128:
 265:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 266:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 267:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 268:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 269:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 270:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 271:../../../platform/common/services/clock/mega/sysclk.h **** 
 272:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_256:
 273:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 274:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 275:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 512;
 276:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 277:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 278:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 279:../../../platform/common/services/clock/mega/sysclk.h **** 
 280:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 281:../../../platform/common/services/clock/mega/sysclk.h **** 		/*Invalide case*/
 282:../../../platform/common/services/clock/mega/sysclk.h **** 		return 0;
 283:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 284:../../../platform/common/services/clock/mega/sysclk.h **** }
 285:../../../platform/common/services/clock/mega/sysclk.h **** 
 286:../../../platform/common/services/clock/mega/sysclk.h **** /**
 287:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the CPU clock.
 288:../../../platform/common/services/clock/mega/sysclk.h ****  *
 289:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 290:../../../platform/common/services/clock/mega/sysclk.h ****  */
 291:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_cpu_hz(void)
 292:../../../platform/common/services/clock/mega/sysclk.h **** {
 293:../../../platform/common/services/clock/mega/sysclk.h **** 	return sysclk_get_source_clock_hz();
 294:../../../platform/common/services/clock/mega/sysclk.h **** }
 295:../../../platform/common/services/clock/mega/sysclk.h **** 
 296:../../../platform/common/services/clock/mega/sysclk.h **** /**
 297:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the clock from internal oscillator
 298:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 299:../../../platform/common/services/clock/mega/sysclk.h ****  */
 300:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_rc_osc_hz(void)
 301:../../../platform/common/services/clock/mega/sysclk.h **** {
 302:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (CONFIG_SYSCLK_PSDIV) {
 303:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_1:
 304:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 305:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 306:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 307:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 308:../../../platform/common/services/clock/mega/sysclk.h **** 
 309:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_2:
 310:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 311:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 312:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 313:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 314:../../../platform/common/services/clock/mega/sysclk.h **** 
 315:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_4:
 316:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 317:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 318:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 319:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 320:../../../platform/common/services/clock/mega/sysclk.h **** 
 321:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_8:
 322:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 323:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 324:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 325:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 326:../../../platform/common/services/clock/mega/sysclk.h **** 
 327:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_16:
 328:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 329:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 330:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 331:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 332:../../../platform/common/services/clock/mega/sysclk.h **** 
 333:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_32:
 334:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 335:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 336:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 337:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 338:../../../platform/common/services/clock/mega/sysclk.h **** 
 339:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_64:
 340:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 341:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 342:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 343:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 344:../../../platform/common/services/clock/mega/sysclk.h **** 
 345:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_128:
 346:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 347:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 348:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 349:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 350:../../../platform/common/services/clock/mega/sysclk.h **** 
 351:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_256:
 352:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 353:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 354:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 512;
 355:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 356:../../../platform/common/services/clock/mega/sysclk.h **** 
 357:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 358:../../../platform/common/services/clock/mega/sysclk.h **** 		return 0;
 359:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 360:../../../platform/common/services/clock/mega/sysclk.h **** }
 361:../../../platform/common/services/clock/mega/sysclk.h **** 
 362:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Enabling and disabling synchronous clocks */
 363:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
 364:../../../platform/common/services/clock/mega/sysclk.h **** 
 365:../../../platform/common/services/clock/mega/sysclk.h **** /**
 366:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Enable the clock to peripheral \a id on port \a port
 367:../../../platform/common/services/clock/mega/sysclk.h ****  *
 368:../../../platform/common/services/clock/mega/sysclk.h ****  * \param port ID of the port to which the module is connected (one of
 369:../../../platform/common/services/clock/mega/sysclk.h ****  * the \c power_red_id *definitions).
 370:../../../platform/common/services/clock/mega/sysclk.h ****  * \param id The ID (bitmask) of the peripheral module to be disabled.*
 371:../../../platform/common/services/clock/mega/sysclk.h ****  */
 372:../../../platform/common/services/clock/mega/sysclk.h **** extern void sysclk_enable_module(enum power_red_id port, uint8_t id);
 373:../../../platform/common/services/clock/mega/sysclk.h **** 
 374:../../../platform/common/services/clock/mega/sysclk.h **** /**
 375:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Disable the clock to peripheral \a id on port \a port
 376:../../../platform/common/services/clock/mega/sysclk.h ****  *
 377:../../../platform/common/services/clock/mega/sysclk.h ****  * \param port ID of the port to which the module is connected (one of
 378:../../../platform/common/services/clock/mega/sysclk.h ****  * the \c power_red_id *definitions).
 379:../../../platform/common/services/clock/mega/sysclk.h ****  * \param id The ID (bit mask) of the peripheral module to be disabled.
 380:../../../platform/common/services/clock/mega/sysclk.h ****  */
 381:../../../platform/common/services/clock/mega/sysclk.h **** extern void sysclk_disable_module(enum power_red_id port, uint8_t id);
 382:../../../platform/common/services/clock/mega/sysclk.h **** 
 383:../../../platform/common/services/clock/mega/sysclk.h **** /**
 384:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Enable a peripherals clock from its base address.
 385:../../../platform/common/services/clock/mega/sysclk.h ****  *
 386:../../../platform/common/services/clock/mega/sysclk.h ****  *  Enables the clock to a peripheral, given its base address. If the peripheral
 387:../../../platform/common/services/clock/mega/sysclk.h ****  *  has an associated clock on the HSB bus, this will be enabled also.
 388:../../../platform/common/services/clock/mega/sysclk.h ****  *
 389:../../../platform/common/services/clock/mega/sysclk.h ****  * \param module Pointer to the module's base address.
 390:../../../platform/common/services/clock/mega/sysclk.h ****  */
 391:../../../platform/common/services/clock/mega/sysclk.h **** static inline void sysclk_enable_peripheral_clock(const volatile void *module)
 392:../../../platform/common/services/clock/mega/sysclk.h **** {
  15               		.loc 1 392 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25 0004 00D0      		rcall .
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 6
  28 0006 CDB7      		in r28,__SP_L__
  29 0008 DEB7      		in r29,__SP_H__
  30               	.LCFI3:
  31               		.cfi_def_cfa_register 28
  32               	/* prologue: function */
  33               	/* frame size = 2 */
  34               	/* stack size = 4 */
  35               	.L__stack_usage = 4
  36 000a 9A83      		std Y+2,r25
  37 000c 8983      		std Y+1,r24
 393:../../../platform/common/services/clock/mega/sysclk.h **** 	if (module == NULL) {
  38               		.loc 1 393 0
  39 000e 8981      		ldd r24,Y+1
  40 0010 9A81      		ldd r25,Y+2
  41 0012 892B      		or r24,r25
  42 0014 01F4      		brne .+2
  43 0016 00C0      		rjmp .L14
 394:../../../platform/common/services/clock/mega/sysclk.h **** 		Assert(false);
 395:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 396:../../../platform/common/services/clock/mega/sysclk.h **** 
 397:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN0 && !MEGA_XX_UN1
 398:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &ADC) {
  44               		.loc 1 398 0
  45 0018 8981      		ldd r24,Y+1
  46 001a 9A81      		ldd r25,Y+2
  47 001c 8837      		cpi r24,120
  48 001e 9105      		cpc r25,__zero_reg__
  49 0020 01F4      		brne .L3
 399:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRADC_bm);
  50               		.loc 1 399 0
  51 0022 61E0      		ldi r22,lo8(1)
  52 0024 80E0      		ldi r24,0
  53 0026 0E94 0000 		call sysclk_enable_module
 400:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 401:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRPGA_bm);
  54               		.loc 1 401 0
  55 002a 60E1      		ldi r22,lo8(16)
  56 002c 80E0      		ldi r24,0
  57 002e 0E94 0000 		call sysclk_enable_module
 402:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 403:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &UCSR0A) {
 404:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRUSART0_bm);
 405:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 406:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 407:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &SPCR) {
 408:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRSPI_bm);
 409:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 410:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 411:../../../platform/common/services/clock/mega/sysclk.h **** 
 412:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &TCCR1A) {
 413:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM1_bm);
 414:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 415:../../../platform/common/services/clock/mega/sysclk.h **** 
 416:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX_UN2
 417:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &LCDCRA) {
 418:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRLCD_bm);
 419:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 420:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 421:../../../platform/common/services/clock/mega/sysclk.h **** 
 422:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN2
 423:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &TCCR0A) {
 424:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM0_bm);
 425:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR2A) {
 426:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM2_bm);
 427:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TWBR) {
 428:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTWI_bm);
 429:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 430:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 431:../../../platform/common/services/clock/mega/sysclk.h **** 
 432:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 433:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &UCSR1A) {
 434:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRUSART1_bm);
 435:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR3A) {
 436:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM3_bm);
 437:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR4A) {
 438:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM4_bm);
 439:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR5A) {
 440:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM5_bm);
 441:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TRX_CTRL_0) {
 442:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTRX24_bm);
 443:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 444:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 445:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 446:../../../platform/common/services/clock/mega/sysclk.h **** 	else {
 447:../../../platform/common/services/clock/mega/sysclk.h **** 		Assert(false);
 448:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 449:../../../platform/common/services/clock/mega/sysclk.h **** }
  58               		.loc 1 449 0
  59 0032 00C0      		rjmp .L14
  60               	.L3:
 403:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRUSART0_bm);
  61               		.loc 1 403 0
  62 0034 8981      		ldd r24,Y+1
  63 0036 9A81      		ldd r25,Y+2
  64 0038 803C      		cpi r24,-64
  65 003a 9105      		cpc r25,__zero_reg__
  66 003c 01F4      		brne .L4
 404:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  67               		.loc 1 404 0
  68 003e 62E0      		ldi r22,lo8(2)
  69 0040 80E0      		ldi r24,0
  70 0042 0E94 0000 		call sysclk_enable_module
  71               		.loc 1 449 0
  72 0046 00C0      		rjmp .L14
  73               	.L4:
 407:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRSPI_bm);
  74               		.loc 1 407 0
  75 0048 8981      		ldd r24,Y+1
  76 004a 9A81      		ldd r25,Y+2
  77 004c 8C34      		cpi r24,76
  78 004e 9105      		cpc r25,__zero_reg__
  79 0050 01F4      		brne .L5
 408:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  80               		.loc 1 408 0
  81 0052 64E0      		ldi r22,lo8(4)
  82 0054 80E0      		ldi r24,0
  83 0056 0E94 0000 		call sysclk_enable_module
  84               		.loc 1 449 0
  85 005a 00C0      		rjmp .L14
  86               	.L5:
 412:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM1_bm);
  87               		.loc 1 412 0
  88 005c 8981      		ldd r24,Y+1
  89 005e 9A81      		ldd r25,Y+2
  90 0060 8038      		cpi r24,-128
  91 0062 9105      		cpc r25,__zero_reg__
  92 0064 01F4      		brne .L6
 413:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  93               		.loc 1 413 0
  94 0066 68E0      		ldi r22,lo8(8)
  95 0068 80E0      		ldi r24,0
  96 006a 0E94 0000 		call sysclk_enable_module
  97               		.loc 1 449 0
  98 006e 00C0      		rjmp .L14
  99               	.L6:
 423:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM0_bm);
 100               		.loc 1 423 0
 101 0070 8981      		ldd r24,Y+1
 102 0072 9A81      		ldd r25,Y+2
 103 0074 8434      		cpi r24,68
 104 0076 9105      		cpc r25,__zero_reg__
 105 0078 01F4      		brne .L7
 424:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR2A) {
 106               		.loc 1 424 0
 107 007a 60E2      		ldi r22,lo8(32)
 108 007c 80E0      		ldi r24,0
 109 007e 0E94 0000 		call sysclk_enable_module
 110               		.loc 1 449 0
 111 0082 00C0      		rjmp .L14
 112               	.L7:
 425:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM2_bm);
 113               		.loc 1 425 0
 114 0084 8981      		ldd r24,Y+1
 115 0086 9A81      		ldd r25,Y+2
 116 0088 803B      		cpi r24,-80
 117 008a 9105      		cpc r25,__zero_reg__
 118 008c 01F4      		brne .L8
 426:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TWBR) {
 119               		.loc 1 426 0
 120 008e 60E4      		ldi r22,lo8(64)
 121 0090 80E0      		ldi r24,0
 122 0092 0E94 0000 		call sysclk_enable_module
 123               		.loc 1 449 0
 124 0096 00C0      		rjmp .L14
 125               	.L8:
 427:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTWI_bm);
 126               		.loc 1 427 0
 127 0098 8981      		ldd r24,Y+1
 128 009a 9A81      		ldd r25,Y+2
 129 009c 883B      		cpi r24,-72
 130 009e 9105      		cpc r25,__zero_reg__
 131 00a0 01F4      		brne .L9
 428:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 132               		.loc 1 428 0
 133 00a2 60E8      		ldi r22,lo8(-128)
 134 00a4 80E0      		ldi r24,0
 135 00a6 0E94 0000 		call sysclk_enable_module
 136               		.loc 1 449 0
 137 00aa 00C0      		rjmp .L14
 138               	.L9:
 433:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRUSART1_bm);
 139               		.loc 1 433 0
 140 00ac 8981      		ldd r24,Y+1
 141 00ae 9A81      		ldd r25,Y+2
 142 00b0 883C      		cpi r24,-56
 143 00b2 9105      		cpc r25,__zero_reg__
 144 00b4 01F4      		brne .L10
 434:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR3A) {
 145               		.loc 1 434 0
 146 00b6 61E0      		ldi r22,lo8(1)
 147 00b8 81E0      		ldi r24,lo8(1)
 148 00ba 0E94 0000 		call sysclk_enable_module
 149               		.loc 1 449 0
 150 00be 00C0      		rjmp .L14
 151               	.L10:
 435:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM3_bm);
 152               		.loc 1 435 0
 153 00c0 8981      		ldd r24,Y+1
 154 00c2 9A81      		ldd r25,Y+2
 155 00c4 8039      		cpi r24,-112
 156 00c6 9105      		cpc r25,__zero_reg__
 157 00c8 01F4      		brne .L11
 436:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR4A) {
 158               		.loc 1 436 0
 159 00ca 68E0      		ldi r22,lo8(8)
 160 00cc 81E0      		ldi r24,lo8(1)
 161 00ce 0E94 0000 		call sysclk_enable_module
 162               		.loc 1 449 0
 163 00d2 00C0      		rjmp .L14
 164               	.L11:
 437:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM4_bm);
 165               		.loc 1 437 0
 166 00d4 8981      		ldd r24,Y+1
 167 00d6 9A81      		ldd r25,Y+2
 168 00d8 803A      		cpi r24,-96
 169 00da 9105      		cpc r25,__zero_reg__
 170 00dc 01F4      		brne .L12
 438:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR5A) {
 171               		.loc 1 438 0
 172 00de 60E1      		ldi r22,lo8(16)
 173 00e0 81E0      		ldi r24,lo8(1)
 174 00e2 0E94 0000 		call sysclk_enable_module
 175               		.loc 1 449 0
 176 00e6 00C0      		rjmp .L14
 177               	.L12:
 439:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM5_bm);
 178               		.loc 1 439 0
 179 00e8 8981      		ldd r24,Y+1
 180 00ea 9A81      		ldd r25,Y+2
 181 00ec 8032      		cpi r24,32
 182 00ee 9140      		sbci r25,1
 183 00f0 01F4      		brne .L13
 440:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TRX_CTRL_0) {
 184               		.loc 1 440 0
 185 00f2 60E2      		ldi r22,lo8(32)
 186 00f4 81E0      		ldi r24,lo8(1)
 187 00f6 0E94 0000 		call sysclk_enable_module
 188               		.loc 1 449 0
 189 00fa 00C0      		rjmp .L14
 190               	.L13:
 441:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTRX24_bm);
 191               		.loc 1 441 0
 192 00fc 8981      		ldd r24,Y+1
 193 00fe 9A81      		ldd r25,Y+2
 194 0100 8334      		cpi r24,67
 195 0102 9140      		sbci r25,1
 196 0104 01F4      		brne .L14
 442:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 197               		.loc 1 442 0
 198 0106 60E4      		ldi r22,lo8(64)
 199 0108 81E0      		ldi r24,lo8(1)
 200 010a 0E94 0000 		call sysclk_enable_module
 201               	.L14:
 202               		.loc 1 449 0
 203 010e 0000      		nop
 204               	/* epilogue start */
 205 0110 0F90      		pop __tmp_reg__
 206 0112 0F90      		pop __tmp_reg__
 207 0114 DF91      		pop r29
 208 0116 CF91      		pop r28
 209 0118 0895      		ret
 210               		.cfi_endproc
 211               	.LFE69:
 214               	__portable_avr_delay_cycles:
 215               	.LFB74:
 216               		.file 2 "../../../platform/common/services/delay/mega_rf/cycle_counter.h"
   1:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
   2:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \file
   3:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   4:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \brief AVR functions for busy-wait delay loops
   5:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   6:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Copyright (c) 2011 - 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   8:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_start
   9:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  10:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \page License
  11:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  12:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  15:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  18:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  22:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  25:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  28:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  40:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_stop
  41:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  42:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  43:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifndef _cycle_counter_h_
  44:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #define _cycle_counter_h_
  45:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  46:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifdef __cplusplus
  47:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** extern "C" {
  48:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #endif
  49:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  50:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #include <compiler.h>
  51:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  52:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
  53:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @name Convenience functions for busy-wait delay loops
  54:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  55:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def delay_cycles
  56:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of CPU cycles.
  57:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param n number of CPU cycles to wait
  58:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  59:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_ms
  60:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of milliseconds.
  61:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of milliseconds to wait
  62:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  63:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  64:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_us
  65:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of microseconds.
  66:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of microseconds to wait
  67:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  68:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  69:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_ms_2_cy
  70:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert milli-seconds into CPU cycles.
  71:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of milliseconds
  72:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  73:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  74:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  75:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_us_2_cy
  76:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert micro-seconds into CPU cycles.
  77:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of microseconds
  78:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  79:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  80:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  81:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @{
  82:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  83:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** __always_optimize
  84:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** static inline void __portable_avr_delay_cycles(unsigned long n)
  85:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** {
 217               		.loc 2 85 0
 218               		.cfi_startproc
 219               	/* prologue: function */
 220               	/* frame size = 0 */
 221               	/* stack size = 0 */
 222               	.L__stack_usage = 0
 223               	.L16:
  86:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 	do { barrier(); } while (--n);
 224               		.loc 2 86 0 discriminator 1
 225 011a 6150      		subi r22,1
 226 011c 7109      		sbc r23,__zero_reg__
 227 011e 8109      		sbc r24,__zero_reg__
 228 0120 9109      		sbc r25,__zero_reg__
 229 0122 01F4      		brne .L16
 230               	/* epilogue start */
  87:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** }
 231               		.loc 2 87 0
 232 0124 0895      		ret
 233               		.cfi_endproc
 234               	.LFE74:
 236               		.section	.bss.phyState,"aw",@nobits
 239               	phyState:
 240 0000 00        		.zero	1
 241               		.section	.bss.phyRxBuffer,"aw",@nobits
 244               	phyRxBuffer:
 245 0000 0000 0000 		.zero	128
 245      0000 0000 
 245      0000 0000 
 245      0000 0000 
 245      0000 0000 
 246               		.section	.bss.phyRxState,"aw",@nobits
 249               	phyRxState:
 250 0000 00        		.zero	1
 251               		.text
 252               	.global	PHY_Init
 254               	PHY_Init:
 255               	.LFB75:
 256               		.file 3 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c"
   1:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /**
   2:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \file phy.c
   3:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   4:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \brief ATMEGAxxxRFA1 PHY implementation
   5:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   6:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * Copyright (C) 2014, Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   8:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  10:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  13:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  16:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  20:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  23:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  26:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  38:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  40:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  41:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  */
  42:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  43:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ATMEGARFA1
  44:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  45:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Includes ---------------------------------------------------------------*/
  46:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "phy.h"
  47:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "delay.h"
  48:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "sal.h"
  49:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "atmegarfa1.h"
  50:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  51:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Definitions ------------------------------------------------------------*/
  52:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #define PHY_CRC_SIZE          2
  53:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #define IRQ_CLEAR_VALUE       0xff
  54:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Types ------------------------------------------------------------------*/
  55:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** typedef enum {
  56:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_INITIAL,
  57:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_IDLE,
  58:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_SLEEP,
  59:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_TX_WAIT_END,
  60:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** } PhyState_t;
  61:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  62:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Prototypes -------------------------------------------------------------*/
  63:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phySetRxState(void);
  64:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  65:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Variables --------------------------------------------------------------*/
  66:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static PhyState_t phyState = PHY_STATE_INITIAL;
  67:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static uint8_t phyRxBuffer[128];
  68:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static bool phyRxState;
  69:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  70:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Implementations --------------------------------------------------------*/
  71:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  72:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
  73:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
  74:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Init(void)
  75:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 257               		.loc 3 75 0
 258               		.cfi_startproc
 259 0126 CF93      		push r28
 260               	.LCFI4:
 261               		.cfi_def_cfa_offset 3
 262               		.cfi_offset 28, -2
 263 0128 DF93      		push r29
 264               	.LCFI5:
 265               		.cfi_def_cfa_offset 4
 266               		.cfi_offset 29, -3
 267 012a CDB7      		in r28,__SP_L__
 268 012c DEB7      		in r29,__SP_H__
 269               	.LCFI6:
 270               		.cfi_def_cfa_register 28
 271               	/* prologue: function */
 272               	/* frame size = 0 */
 273               	/* stack size = 2 */
 274               	.L__stack_usage = 2
  76:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sysclk_enable_peripheral_clock(&TRX_CTRL_0);
 275               		.loc 3 76 0
 276 012e 83E4      		ldi r24,lo8(67)
 277 0130 91E0      		ldi r25,lo8(1)
 278 0132 0E94 0000 		call sysclk_enable_peripheral_clock
  77:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  78:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.trxrst = 1;
 279               		.loc 3 78 0
 280 0136 89E3      		ldi r24,lo8(57)
 281 0138 91E0      		ldi r25,lo8(1)
 282 013a FC01      		movw r30,r24
 283 013c 2081      		ld r18,Z
 284 013e 2160      		ori r18,lo8(1)
 285 0140 FC01      		movw r30,r24
 286 0142 2083      		st Z,r18
  79:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  80:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyRxState = false;
 287               		.loc 3 80 0
 288 0144 1092 0000 		sts phyRxState,__zero_reg__
  81:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_IDLE;
 289               		.loc 3 81 0
 290 0148 81E0      		ldi r24,lo8(1)
 291 014a 8093 0000 		sts phyState,r24
  82:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  83:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 292               		.loc 3 83 0
 293 014e 88E0      		ldi r24,lo8(8)
 294 0150 0E94 0000 		call phyTrxSetState
  84:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  85:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_2_REG_s.rxSafeMode = 1;
 295               		.loc 3 85 0
 296 0154 8CE4      		ldi r24,lo8(76)
 297 0156 91E0      		ldi r25,lo8(1)
 298 0158 FC01      		movw r30,r24
 299 015a 2081      		ld r18,Z
 300 015c 2068      		ori r18,lo8(-128)
 301 015e FC01      		movw r30,r24
 302 0160 2083      		st Z,r18
  86:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  87:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
  88:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = (uint8_t)PHY_RandomReq();
  89:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
  90:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  91:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
  92:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antCtrl = 2;
  93:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	RX_CTRL_REG_s.pdtThres = 0x03;
  94:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 1;
  95:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 1;
  96:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #else
  97:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DEFAULT != 0)
  98:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
  99:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antCtrl = ANTENNA_DEFAULT;
 100:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DEFAULT
 101:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // ANTENNA_DIVERSITY
 102:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 103:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 1;
 104:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 105:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 303               		.loc 3 105 0
 304 0162 0000      		nop
 305               	/* epilogue start */
 306 0164 DF91      		pop r29
 307 0166 CF91      		pop r28
 308 0168 0895      		ret
 309               		.cfi_endproc
 310               	.LFE75:
 312               	.global	PHY_ResetRadio
 314               	PHY_ResetRadio:
 315               	.LFB76:
 106:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 107:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_ResetRadio(void)
 108:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 316               		.loc 3 108 0
 317               		.cfi_startproc
 318 016a CF93      		push r28
 319               	.LCFI7:
 320               		.cfi_def_cfa_offset 3
 321               		.cfi_offset 28, -2
 322 016c DF93      		push r29
 323               	.LCFI8:
 324               		.cfi_def_cfa_offset 4
 325               		.cfi_offset 29, -3
 326 016e CDB7      		in r28,__SP_L__
 327 0170 DEB7      		in r29,__SP_H__
 328               	.LCFI9:
 329               		.cfi_def_cfa_register 28
 330               	/* prologue: function */
 331               	/* frame size = 0 */
 332               	/* stack size = 2 */
 333               	.L__stack_usage = 2
 109:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.trxrst = 1;
 334               		.loc 3 109 0
 335 0172 89E3      		ldi r24,lo8(57)
 336 0174 91E0      		ldi r25,lo8(1)
 337 0176 FC01      		movw r30,r24
 338 0178 2081      		ld r18,Z
 339 017a 2160      		ori r18,lo8(1)
 340 017c FC01      		movw r30,r24
 341 017e 2083      		st Z,r18
 110:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 342               		.loc 3 110 0
 343 0180 0000      		nop
 344               	/* epilogue start */
 345 0182 DF91      		pop r29
 346 0184 CF91      		pop r28
 347 0186 0895      		ret
 348               		.cfi_endproc
 349               	.LFE76:
 351               	.global	PHY_SetTdmaMode
 353               	PHY_SetTdmaMode:
 354               	.LFB77:
 111:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 112:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetTdmaMode(bool mode)
 113:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 355               		.loc 3 113 0
 356               		.cfi_startproc
 357 0188 CF93      		push r28
 358               	.LCFI10:
 359               		.cfi_def_cfa_offset 3
 360               		.cfi_offset 28, -2
 361 018a DF93      		push r29
 362               	.LCFI11:
 363               		.cfi_def_cfa_offset 4
 364               		.cfi_offset 29, -3
 365 018c 1F92      		push __zero_reg__
 366               	.LCFI12:
 367               		.cfi_def_cfa_offset 5
 368 018e CDB7      		in r28,__SP_L__
 369 0190 DEB7      		in r29,__SP_H__
 370               	.LCFI13:
 371               		.cfi_def_cfa_register 28
 372               	/* prologue: function */
 373               	/* frame size = 1 */
 374               	/* stack size = 3 */
 375               	.L__stack_usage = 3
 376 0192 8983      		std Y+1,r24
 114:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(mode)
 377               		.loc 3 114 0
 378 0194 8981      		ldd r24,Y+1
 379 0196 8823      		tst r24
 380 0198 01F0      		breq .L22
 115:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 116:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 0;
 381               		.loc 3 116 0
 382 019a 8CE6      		ldi r24,lo8(108)
 383 019c 91E0      		ldi r25,lo8(1)
 384 019e FC01      		movw r30,r24
 385 01a0 2081      		ld r18,Z
 386 01a2 2F70      		andi r18,lo8(15)
 387 01a4 FC01      		movw r30,r24
 388 01a6 2083      		st Z,r18
 117:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 7;
 389               		.loc 3 117 0
 390 01a8 8CE6      		ldi r24,lo8(108)
 391 01aa 91E0      		ldi r25,lo8(1)
 392 01ac FC01      		movw r30,r24
 393 01ae 2081      		ld r18,Z
 394 01b0 2E60      		ori r18,lo8(14)
 395 01b2 FC01      		movw r30,r24
 396 01b4 2083      		st Z,r18
 118:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	
 119:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;	// Disable ACK even if requested		
 397               		.loc 3 119 0
 398 01b6 8EE6      		ldi r24,lo8(110)
 399 01b8 91E0      		ldi r25,lo8(1)
 400 01ba FC01      		movw r30,r24
 401 01bc 2081      		ld r18,Z
 402 01be 2061      		ori r18,lo8(16)
 403 01c0 FC01      		movw r30,r24
 404 01c2 2083      		st Z,r18
 120:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 121:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	else
 122:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 123:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 3;
 124:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 125:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		
 126:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 127:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 128:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 405               		.loc 3 128 0
 406 01c4 00C0      		rjmp .L24
 407               	.L22:
 123:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 408               		.loc 3 123 0
 409 01c6 8CE6      		ldi r24,lo8(108)
 410 01c8 91E0      		ldi r25,lo8(1)
 411 01ca FC01      		movw r30,r24
 412 01cc 2081      		ld r18,Z
 413 01ce 2F70      		andi r18,lo8(15)
 414 01d0 2063      		ori r18,lo8(48)
 415 01d2 FC01      		movw r30,r24
 416 01d4 2083      		st Z,r18
 124:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		
 417               		.loc 3 124 0
 418 01d6 8CE6      		ldi r24,lo8(108)
 419 01d8 91E0      		ldi r25,lo8(1)
 420 01da FC01      		movw r30,r24
 421 01dc 2081      		ld r18,Z
 422 01de 217F      		andi r18,lo8(-15)
 423 01e0 2860      		ori r18,lo8(8)
 424 01e2 FC01      		movw r30,r24
 425 01e4 2083      		st Z,r18
 126:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 426               		.loc 3 126 0
 427 01e6 8EE6      		ldi r24,lo8(110)
 428 01e8 91E0      		ldi r25,lo8(1)
 429 01ea FC01      		movw r30,r24
 430 01ec 2081      		ld r18,Z
 431 01ee 2F7E      		andi r18,lo8(-17)
 432 01f0 FC01      		movw r30,r24
 433 01f2 2083      		st Z,r18
 434               	.L24:
 435               		.loc 3 128 0
 436 01f4 0000      		nop
 437               	/* epilogue start */
 438 01f6 0F90      		pop __tmp_reg__
 439 01f8 DF91      		pop r29
 440 01fa CF91      		pop r28
 441 01fc 0895      		ret
 442               		.cfi_endproc
 443               	.LFE77:
 445               	.global	PHY_SetPromiscuousMode
 447               	PHY_SetPromiscuousMode:
 448               	.LFB78:
 129:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 130:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPromiscuousMode(bool mode)
 131:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 449               		.loc 3 131 0
 450               		.cfi_startproc
 451 01fe CF93      		push r28
 452               	.LCFI14:
 453               		.cfi_def_cfa_offset 3
 454               		.cfi_offset 28, -2
 455 0200 DF93      		push r29
 456               	.LCFI15:
 457               		.cfi_def_cfa_offset 4
 458               		.cfi_offset 29, -3
 459 0202 CDB7      		in r28,__SP_L__
 460 0204 DEB7      		in r29,__SP_H__
 461               	.LCFI16:
 462               		.cfi_def_cfa_register 28
 463 0206 2997      		sbiw r28,9
 464               	.LCFI17:
 465               		.cfi_def_cfa_offset 13
 466 0208 0FB6      		in __tmp_reg__,__SREG__
 467 020a F894      		cli
 468 020c DEBF      		out __SP_H__,r29
 469 020e 0FBE      		out __SREG__,__tmp_reg__
 470 0210 CDBF      		out __SP_L__,r28
 471               	/* prologue: function */
 472               	/* frame size = 9 */
 473               	/* stack size = 11 */
 474               	.L__stack_usage = 11
 475 0212 8987      		std Y+9,r24
 132:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t ieee_address[] = { 0, 0, 0, 0, 0, 0, 0, 0 };
 476               		.loc 3 132 0
 477 0214 28E0      		ldi r18,lo8(8)
 478 0216 CE01      		movw r24,r28
 479 0218 0196      		adiw r24,1
 480 021a FC01      		movw r30,r24
 481 021c 322F      		mov r19,r18
 482               		0:
 483 021e 1192      		st Z+,__zero_reg__
 484 0220 3A95      		dec r19
 485 0222 01F4      		brne 0b
 133:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 134:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(mode)
 486               		.loc 3 134 0
 487 0224 8985      		ldd r24,Y+9
 488 0226 8823      		tst r24
 489 0228 01F0      		breq .L26
 135:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 136:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetShortAddr(0);
 490               		.loc 3 136 0
 491 022a 80E0      		ldi r24,0
 492 022c 90E0      		ldi r25,0
 493 022e 0E94 0000 		call PHY_SetShortAddr
 137:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetPanId(0);
 494               		.loc 3 137 0
 495 0232 80E0      		ldi r24,0
 496 0234 90E0      		ldi r25,0
 497 0236 0E94 0000 		call PHY_SetPanId
 138:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetIEEEAddr(ieee_address);
 498               		.loc 3 138 0
 499 023a CE01      		movw r24,r28
 500 023c 0196      		adiw r24,1
 501 023e 0E94 0000 		call PHY_SetIEEEAddr
 139:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 140:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** // AACK_UPLD_RES_FT = 1, AACK_FLT_RES_FT = 0:
 141:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	Any non-corrupted frame with a reserved frame type is indicated by a
 142:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	TRX24_RX_END interrupt. No further address filtering is applied on those frames.
 143:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	A TRX24_AMI interrupt is never generated and the acknowledgment subfield is
 144:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	ignored.
 145:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 146:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackPromMode = 1;	// Enable promiscuous mode
 502               		.loc 3 146 0
 503 0242 87E5      		ldi r24,lo8(87)
 504 0244 91E0      		ldi r25,lo8(1)
 505 0246 FC01      		movw r30,r24
 506 0248 2081      		ld r18,Z
 507 024a 2260      		ori r18,lo8(2)
 508 024c FC01      		movw r30,r24
 509 024e 2083      		st Z,r18
 147:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackUpldResFt = 1;	// Enable reserved frame type reception ; this was changed to
 510               		.loc 3 147 0
 511 0250 87E5      		ldi r24,lo8(87)
 512 0252 91E0      		ldi r25,lo8(1)
 513 0254 FC01      		movw r30,r24
 514 0256 2081      		ld r18,Z
 515 0258 2061      		ori r18,lo8(16)
 516 025a FC01      		movw r30,r24
 517 025c 2083      		st Z,r18
 148:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****                                         // so that the addres isn't checked by filter
 149:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackFltrResFt = 0;	// Disable filter of reserved frame types
 518               		.loc 3 149 0
 519 025e 87E5      		ldi r24,lo8(87)
 520 0260 91E0      		ldi r25,lo8(1)
 521 0262 FC01      		movw r30,r24
 522 0264 2081      		ld r18,Z
 523 0266 2F7D      		andi r18,lo8(-33)
 524 0268 FC01      		movw r30,r24
 525 026a 2083      		st Z,r18
 150:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;		// Disable generation of acknowledgment
 526               		.loc 3 150 0
 527 026c 8EE6      		ldi r24,lo8(110)
 528 026e 91E0      		ldi r25,lo8(1)
 529 0270 FC01      		movw r30,r24
 530 0272 2081      		ld r18,Z
 531 0274 2061      		ori r18,lo8(16)
 532 0276 FC01      		movw r30,r24
 533 0278 2083      		st Z,r18
 151:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 152:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	else
 153:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 154:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG = 0;
 155:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 156:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 157:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 534               		.loc 3 157 0
 535 027a 00C0      		rjmp .L28
 536               	.L26:
 154:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 537               		.loc 3 154 0
 538 027c 87E5      		ldi r24,lo8(87)
 539 027e 91E0      		ldi r25,lo8(1)
 540 0280 FC01      		movw r30,r24
 541 0282 1082      		st Z,__zero_reg__
 155:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 542               		.loc 3 155 0
 543 0284 8EE6      		ldi r24,lo8(110)
 544 0286 91E0      		ldi r25,lo8(1)
 545 0288 FC01      		movw r30,r24
 546 028a 2081      		ld r18,Z
 547 028c 2F7E      		andi r18,lo8(-17)
 548 028e FC01      		movw r30,r24
 549 0290 2083      		st Z,r18
 550               	.L28:
 551               		.loc 3 157 0
 552 0292 0000      		nop
 553               	/* epilogue start */
 554 0294 2996      		adiw r28,9
 555 0296 0FB6      		in __tmp_reg__,__SREG__
 556 0298 F894      		cli
 557 029a DEBF      		out __SP_H__,r29
 558 029c 0FBE      		out __SREG__,__tmp_reg__
 559 029e CDBF      		out __SP_L__,r28
 560 02a0 DF91      		pop r29
 561 02a2 CF91      		pop r28
 562 02a4 0895      		ret
 563               		.cfi_endproc
 564               	.LFE78:
 566               	.global	PHY_SetOptimizedCSMAValues
 568               	PHY_SetOptimizedCSMAValues:
 569               	.LFB79:
 158:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 159:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetOptimizedCSMAValues(void)
 160:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 570               		.loc 3 160 0
 571               		.cfi_startproc
 572 02a6 0F93      		push r16
 573               	.LCFI18:
 574               		.cfi_def_cfa_offset 3
 575               		.cfi_offset 16, -2
 576 02a8 1F93      		push r17
 577               	.LCFI19:
 578               		.cfi_def_cfa_offset 4
 579               		.cfi_offset 17, -3
 580 02aa CF93      		push r28
 581               	.LCFI20:
 582               		.cfi_def_cfa_offset 5
 583               		.cfi_offset 28, -4
 584 02ac DF93      		push r29
 585               	.LCFI21:
 586               		.cfi_def_cfa_offset 6
 587               		.cfi_offset 29, -5
 588 02ae CDB7      		in r28,__SP_L__
 589 02b0 DEB7      		in r29,__SP_H__
 590               	.LCFI22:
 591               		.cfi_def_cfa_register 28
 592               	/* prologue: function */
 593               	/* frame size = 0 */
 594               	/* stack size = 4 */
 595               	.L__stack_usage = 4
 161:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_BE_REG_s.minBe = 0x03;
 596               		.loc 3 161 0
 597 02b2 8FE6      		ldi r24,lo8(111)
 598 02b4 91E0      		ldi r25,lo8(1)
 599 02b6 FC01      		movw r30,r24
 600 02b8 2081      		ld r18,Z
 601 02ba 207F      		andi r18,lo8(-16)
 602 02bc 2360      		ori r18,lo8(3)
 603 02be FC01      		movw r30,r24
 604 02c0 2083      		st Z,r18
 162:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_BE_REG_s.maxBe = 0x08;
 605               		.loc 3 162 0
 606 02c2 8FE6      		ldi r24,lo8(111)
 607 02c4 91E0      		ldi r25,lo8(1)
 608 02c6 FC01      		movw r30,r24
 609 02c8 2081      		ld r18,Z
 610 02ca 2F70      		andi r18,lo8(15)
 611 02cc 2068      		ori r18,lo8(-128)
 612 02ce FC01      		movw r30,r24
 613 02d0 2083      		st Z,r18
 163:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = (uint8_t)PHY_RandomReq();
 614               		.loc 3 163 0
 615 02d2 0DE6      		ldi r16,lo8(109)
 616 02d4 11E0      		ldi r17,lo8(1)
 617 02d6 0E94 0000 		call PHY_RandomReq
 618 02da F801      		movw r30,r16
 619 02dc 8083      		st Z,r24
 164:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 620               		.loc 3 164 0
 621 02de 0000      		nop
 622               	/* epilogue start */
 623 02e0 DF91      		pop r29
 624 02e2 CF91      		pop r28
 625 02e4 1F91      		pop r17
 626 02e6 0F91      		pop r16
 627 02e8 0895      		ret
 628               		.cfi_endproc
 629               	.LFE79:
 631               	.global	PHY_SetRxState
 633               	PHY_SetRxState:
 634               	.LFB80:
 165:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 166:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 167:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 168:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetRxState(bool rx)
 169:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 635               		.loc 3 169 0
 636               		.cfi_startproc
 637 02ea CF93      		push r28
 638               	.LCFI23:
 639               		.cfi_def_cfa_offset 3
 640               		.cfi_offset 28, -2
 641 02ec DF93      		push r29
 642               	.LCFI24:
 643               		.cfi_def_cfa_offset 4
 644               		.cfi_offset 29, -3
 645 02ee 1F92      		push __zero_reg__
 646               	.LCFI25:
 647               		.cfi_def_cfa_offset 5
 648 02f0 CDB7      		in r28,__SP_L__
 649 02f2 DEB7      		in r29,__SP_H__
 650               	.LCFI26:
 651               		.cfi_def_cfa_register 28
 652               	/* prologue: function */
 653               	/* frame size = 1 */
 654               	/* stack size = 3 */
 655               	.L__stack_usage = 3
 656 02f4 8983      		std Y+1,r24
 170:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyRxState = rx;
 657               		.loc 3 170 0
 658 02f6 8981      		ldd r24,Y+1
 659 02f8 8093 0000 		sts phyRxState,r24
 171:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 660               		.loc 3 171 0
 661 02fc 0E94 0000 		call phySetRxState
 172:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 662               		.loc 3 172 0
 663 0300 0000      		nop
 664               	/* epilogue start */
 665 0302 0F90      		pop __tmp_reg__
 666 0304 DF91      		pop r29
 667 0306 CF91      		pop r28
 668 0308 0895      		ret
 669               		.cfi_endproc
 670               	.LFE80:
 672               	.global	PHY_SetChannel
 674               	PHY_SetChannel:
 675               	.LFB81:
 173:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 174:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 175:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 176:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetChannel(uint8_t channel)
 177:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 676               		.loc 3 177 0
 677               		.cfi_startproc
 678 030a CF93      		push r28
 679               	.LCFI27:
 680               		.cfi_def_cfa_offset 3
 681               		.cfi_offset 28, -2
 682 030c DF93      		push r29
 683               	.LCFI28:
 684               		.cfi_def_cfa_offset 4
 685               		.cfi_offset 29, -3
 686 030e 1F92      		push __zero_reg__
 687               	.LCFI29:
 688               		.cfi_def_cfa_offset 5
 689 0310 CDB7      		in r28,__SP_L__
 690 0312 DEB7      		in r29,__SP_H__
 691               	.LCFI30:
 692               		.cfi_def_cfa_register 28
 693               	/* prologue: function */
 694               	/* frame size = 1 */
 695               	/* stack size = 3 */
 696               	.L__stack_usage = 3
 697 0314 8983      		std Y+1,r24
 178:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_CC_CCA_REG_s.channel = channel;
 698               		.loc 3 178 0
 699 0316 88E4      		ldi r24,lo8(72)
 700 0318 91E0      		ldi r25,lo8(1)
 701 031a 2981      		ldd r18,Y+1
 702 031c 2F71      		andi r18,lo8(31)
 703 031e 2F71      		andi r18,lo8(31)
 704 0320 FC01      		movw r30,r24
 705 0322 3081      		ld r19,Z
 706 0324 307E      		andi r19,lo8(-32)
 707 0326 232B      		or r18,r19
 708 0328 FC01      		movw r30,r24
 709 032a 2083      		st Z,r18
 179:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 710               		.loc 3 179 0
 711 032c 0000      		nop
 712               	/* epilogue start */
 713 032e 0F90      		pop __tmp_reg__
 714 0330 DF91      		pop r29
 715 0332 CF91      		pop r28
 716 0334 0895      		ret
 717               		.cfi_endproc
 718               	.LFE81:
 720               	.global	PHY_SetPanId
 722               	PHY_SetPanId:
 723               	.LFB82:
 180:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 181:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 182:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 183:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPanId(uint16_t panId)
 184:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 724               		.loc 3 184 0
 725               		.cfi_startproc
 726 0336 CF93      		push r28
 727               	.LCFI31:
 728               		.cfi_def_cfa_offset 3
 729               		.cfi_offset 28, -2
 730 0338 DF93      		push r29
 731               	.LCFI32:
 732               		.cfi_def_cfa_offset 4
 733               		.cfi_offset 29, -3
 734 033a 00D0      		rcall .
 735 033c 00D0      		rcall .
 736               	.LCFI33:
 737               		.cfi_def_cfa_offset 8
 738 033e CDB7      		in r28,__SP_L__
 739 0340 DEB7      		in r29,__SP_H__
 740               	.LCFI34:
 741               		.cfi_def_cfa_register 28
 742               	/* prologue: function */
 743               	/* frame size = 4 */
 744               	/* stack size = 6 */
 745               	.L__stack_usage = 6
 746 0342 9C83      		std Y+4,r25
 747 0344 8B83      		std Y+3,r24
 185:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *d = (uint8_t *)&panId;
 748               		.loc 3 185 0
 749 0346 CE01      		movw r24,r28
 750 0348 0396      		adiw r24,3
 751 034a 9A83      		std Y+2,r25
 752 034c 8983      		std Y+1,r24
 186:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 187:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PAN_ID_0_REG = d[0];
 753               		.loc 3 187 0
 754 034e 82E6      		ldi r24,lo8(98)
 755 0350 91E0      		ldi r25,lo8(1)
 756 0352 2981      		ldd r18,Y+1
 757 0354 3A81      		ldd r19,Y+2
 758 0356 F901      		movw r30,r18
 759 0358 2081      		ld r18,Z
 760 035a FC01      		movw r30,r24
 761 035c 2083      		st Z,r18
 188:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PAN_ID_1_REG = d[1];
 762               		.loc 3 188 0
 763 035e 83E6      		ldi r24,lo8(99)
 764 0360 91E0      		ldi r25,lo8(1)
 765 0362 2981      		ldd r18,Y+1
 766 0364 3A81      		ldd r19,Y+2
 767 0366 F901      		movw r30,r18
 768 0368 2181      		ldd r18,Z+1
 769 036a FC01      		movw r30,r24
 770 036c 2083      		st Z,r18
 189:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 771               		.loc 3 189 0
 772 036e 0000      		nop
 773               	/* epilogue start */
 774 0370 0F90      		pop __tmp_reg__
 775 0372 0F90      		pop __tmp_reg__
 776 0374 0F90      		pop __tmp_reg__
 777 0376 0F90      		pop __tmp_reg__
 778 0378 DF91      		pop r29
 779 037a CF91      		pop r28
 780 037c 0895      		ret
 781               		.cfi_endproc
 782               	.LFE82:
 784               	.global	PHY_SetShortAddr
 786               	PHY_SetShortAddr:
 787               	.LFB83:
 190:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 191:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 192:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 193:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetShortAddr(uint16_t addr)
 194:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 788               		.loc 3 194 0
 789               		.cfi_startproc
 790 037e CF93      		push r28
 791               	.LCFI35:
 792               		.cfi_def_cfa_offset 3
 793               		.cfi_offset 28, -2
 794 0380 DF93      		push r29
 795               	.LCFI36:
 796               		.cfi_def_cfa_offset 4
 797               		.cfi_offset 29, -3
 798 0382 00D0      		rcall .
 799 0384 00D0      		rcall .
 800               	.LCFI37:
 801               		.cfi_def_cfa_offset 8
 802 0386 CDB7      		in r28,__SP_L__
 803 0388 DEB7      		in r29,__SP_H__
 804               	.LCFI38:
 805               		.cfi_def_cfa_register 28
 806               	/* prologue: function */
 807               	/* frame size = 4 */
 808               	/* stack size = 6 */
 809               	.L__stack_usage = 6
 810 038a 9C83      		std Y+4,r25
 811 038c 8B83      		std Y+3,r24
 195:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *d = (uint8_t *)&addr;
 812               		.loc 3 195 0
 813 038e CE01      		movw r24,r28
 814 0390 0396      		adiw r24,3
 815 0392 9A83      		std Y+2,r25
 816 0394 8983      		std Y+1,r24
 196:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 197:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	SHORT_ADDR_0_REG = d[0];
 817               		.loc 3 197 0
 818 0396 80E6      		ldi r24,lo8(96)
 819 0398 91E0      		ldi r25,lo8(1)
 820 039a 2981      		ldd r18,Y+1
 821 039c 3A81      		ldd r19,Y+2
 822 039e F901      		movw r30,r18
 823 03a0 2081      		ld r18,Z
 824 03a2 FC01      		movw r30,r24
 825 03a4 2083      		st Z,r18
 198:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	SHORT_ADDR_1_REG = d[1];
 826               		.loc 3 198 0
 827 03a6 81E6      		ldi r24,lo8(97)
 828 03a8 91E0      		ldi r25,lo8(1)
 829 03aa 2981      		ldd r18,Y+1
 830 03ac 3A81      		ldd r19,Y+2
 831 03ae F901      		movw r30,r18
 832 03b0 2181      		ldd r18,Z+1
 833 03b2 FC01      		movw r30,r24
 834 03b4 2083      		st Z,r18
 199:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 200:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifndef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
 201:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = d[0] + d[1];
 835               		.loc 3 201 0
 836 03b6 8DE6      		ldi r24,lo8(109)
 837 03b8 91E0      		ldi r25,lo8(1)
 838 03ba 2981      		ldd r18,Y+1
 839 03bc 3A81      		ldd r19,Y+2
 840 03be F901      		movw r30,r18
 841 03c0 4081      		ld r20,Z
 842 03c2 2981      		ldd r18,Y+1
 843 03c4 3A81      		ldd r19,Y+2
 844 03c6 2F5F      		subi r18,-1
 845 03c8 3F4F      		sbci r19,-1
 846 03ca F901      		movw r30,r18
 847 03cc 2081      		ld r18,Z
 848 03ce 240F      		add r18,r20
 849 03d0 FC01      		movw r30,r24
 850 03d2 2083      		st Z,r18
 202:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
 203:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 851               		.loc 3 203 0
 852 03d4 0000      		nop
 853               	/* epilogue start */
 854 03d6 0F90      		pop __tmp_reg__
 855 03d8 0F90      		pop __tmp_reg__
 856 03da 0F90      		pop __tmp_reg__
 857 03dc 0F90      		pop __tmp_reg__
 858 03de DF91      		pop r29
 859 03e0 CF91      		pop r28
 860 03e2 0895      		ret
 861               		.cfi_endproc
 862               	.LFE83:
 864               	.global	PHY_SetTxPower
 866               	PHY_SetTxPower:
 867               	.LFB84:
 204:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 205:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 206:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 207:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetTxPower(uint8_t txPower)
 208:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 868               		.loc 3 208 0
 869               		.cfi_startproc
 870 03e4 CF93      		push r28
 871               	.LCFI39:
 872               		.cfi_def_cfa_offset 3
 873               		.cfi_offset 28, -2
 874 03e6 DF93      		push r29
 875               	.LCFI40:
 876               		.cfi_def_cfa_offset 4
 877               		.cfi_offset 29, -3
 878 03e8 1F92      		push __zero_reg__
 879               	.LCFI41:
 880               		.cfi_def_cfa_offset 5
 881 03ea CDB7      		in r28,__SP_L__
 882 03ec DEB7      		in r29,__SP_H__
 883               	.LCFI42:
 884               		.cfi_def_cfa_register 28
 885               	/* prologue: function */
 886               	/* frame size = 1 */
 887               	/* stack size = 3 */
 888               	.L__stack_usage = 3
 889 03ee 8983      		std Y+1,r24
 209:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_TX_PWR_REG_s.txPwr = txPower;
 890               		.loc 3 209 0
 891 03f0 85E4      		ldi r24,lo8(69)
 892 03f2 91E0      		ldi r25,lo8(1)
 893 03f4 2981      		ldd r18,Y+1
 894 03f6 2F70      		andi r18,lo8(15)
 895 03f8 2F70      		andi r18,lo8(15)
 896 03fa FC01      		movw r30,r24
 897 03fc 3081      		ld r19,Z
 898 03fe 307F      		andi r19,lo8(-16)
 899 0400 232B      		or r18,r19
 900 0402 FC01      		movw r30,r24
 901 0404 2083      		st Z,r18
 210:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 902               		.loc 3 210 0
 903 0406 0000      		nop
 904               	/* epilogue start */
 905 0408 0F90      		pop __tmp_reg__
 906 040a DF91      		pop r29
 907 040c CF91      		pop r28
 908 040e 0895      		ret
 909               		.cfi_endproc
 910               	.LFE84:
 912               	.global	PHY_Sleep
 914               	PHY_Sleep:
 915               	.LFB85:
 211:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 212:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 213:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 214:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Sleep(void)
 215:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 916               		.loc 3 215 0
 917               		.cfi_startproc
 918 0410 CF93      		push r28
 919               	.LCFI43:
 920               		.cfi_def_cfa_offset 3
 921               		.cfi_offset 28, -2
 922 0412 DF93      		push r29
 923               	.LCFI44:
 924               		.cfi_def_cfa_offset 4
 925               		.cfi_offset 29, -3
 926 0414 CDB7      		in r28,__SP_L__
 927 0416 DEB7      		in r29,__SP_H__
 928               	.LCFI45:
 929               		.cfi_def_cfa_register 28
 930               	/* prologue: function */
 931               	/* frame size = 0 */
 932               	/* stack size = 2 */
 933               	.L__stack_usage = 2
 216:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(phyState != PHY_STATE_SLEEP)
 934               		.loc 3 216 0
 935 0418 8091 0000 		lds r24,phyState
 936 041c 8230      		cpi r24,lo8(2)
 937 041e 01F0      		breq .L37
 217:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 218:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyTrxSetState(TRX_CMD_TRX_OFF);
 938               		.loc 3 218 0
 939 0420 88E0      		ldi r24,lo8(8)
 940 0422 0E94 0000 		call phyTrxSetState
 219:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRXPR_REG_s.slptr = 1;
 941               		.loc 3 219 0
 942 0426 89E3      		ldi r24,lo8(57)
 943 0428 91E0      		ldi r25,lo8(1)
 944 042a FC01      		movw r30,r24
 945 042c 2081      		ld r18,Z
 946 042e 2260      		ori r18,lo8(2)
 947 0430 FC01      		movw r30,r24
 948 0432 2083      		st Z,r18
 220:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyState = PHY_STATE_SLEEP;		
 949               		.loc 3 220 0
 950 0434 82E0      		ldi r24,lo8(2)
 951 0436 8093 0000 		sts phyState,r24
 952               	.L37:
 221:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 222:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	
 223:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
 224:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 0;
 225:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 0;
 226:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #else
 227:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DEFAULT != 0)
 228:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 0;
 229:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antCtrl = 0;
 230:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DEFAULT
 231:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // ANTENNA_DIVERSITY
 232:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 233:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 0;
 234:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 235:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 953               		.loc 3 235 0
 954 043a 0000      		nop
 955               	/* epilogue start */
 956 043c DF91      		pop r29
 957 043e CF91      		pop r28
 958 0440 0895      		ret
 959               		.cfi_endproc
 960               	.LFE85:
 962               	.global	PHY_Wakeup
 964               	PHY_Wakeup:
 965               	.LFB86:
 236:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 237:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 238:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 239:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Wakeup(void)
 240:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 966               		.loc 3 240 0
 967               		.cfi_startproc
 968 0442 CF93      		push r28
 969               	.LCFI46:
 970               		.cfi_def_cfa_offset 3
 971               		.cfi_offset 28, -2
 972 0444 DF93      		push r29
 973               	.LCFI47:
 974               		.cfi_def_cfa_offset 4
 975               		.cfi_offset 29, -3
 976 0446 CDB7      		in r28,__SP_L__
 977 0448 DEB7      		in r29,__SP_H__
 978               	.LCFI48:
 979               		.cfi_def_cfa_register 28
 980               	/* prologue: function */
 981               	/* frame size = 0 */
 982               	/* stack size = 2 */
 983               	.L__stack_usage = 2
 241:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.slptr = 0;
 984               		.loc 3 241 0
 985 044a 89E3      		ldi r24,lo8(57)
 986 044c 91E0      		ldi r25,lo8(1)
 987 044e FC01      		movw r30,r24
 988 0450 2081      		ld r18,Z
 989 0452 2D7F      		andi r18,lo8(-3)
 990 0454 FC01      		movw r30,r24
 991 0456 2083      		st Z,r18
 242:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 992               		.loc 3 242 0
 993 0458 0E94 0000 		call phySetRxState
 243:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_IDLE;
 994               		.loc 3 243 0
 995 045c 81E0      		ldi r24,lo8(1)
 996 045e 8093 0000 		sts phyState,r24
 244:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 997               		.loc 3 244 0
 998 0462 0000      		nop
 999               	/* epilogue start */
 1000 0464 DF91      		pop r29
 1001 0466 CF91      		pop r28
 1002 0468 0895      		ret
 1003               		.cfi_endproc
 1004               	.LFE86:
 1006               	.global	PHY_DataReq
 1008               	PHY_DataReq:
 1009               	.LFB87:
 245:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 246:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 247:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 248:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*
 249:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_DataReq(uint8_t *data)
 250:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 251:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TX_ARET_ON);
 252:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 253:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_FRAME_BUFFER(0) = data[0] + PHY_CRC_SIZE;
 254:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	for (uint8_t i = 0; i < data[0]; i++) {
 255:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_FRAME_BUFFER(i + 1) = data[i + 1];
 256:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 257:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 258:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_TX_WAIT_END;
 259:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_STATE_REG = TRX_CMD_TX_START;
 260:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 261:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** */
 262:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_DataReq(uint8_t *data, uint8_t size)
 263:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1010               		.loc 3 263 0
 1011               		.cfi_startproc
 1012 046a CF93      		push r28
 1013               	.LCFI49:
 1014               		.cfi_def_cfa_offset 3
 1015               		.cfi_offset 28, -2
 1016 046c DF93      		push r29
 1017               	.LCFI50:
 1018               		.cfi_def_cfa_offset 4
 1019               		.cfi_offset 29, -3
 1020 046e 00D0      		rcall .
 1021 0470 00D0      		rcall .
 1022               	.LCFI51:
 1023               		.cfi_def_cfa_offset 8
 1024 0472 CDB7      		in r28,__SP_L__
 1025 0474 DEB7      		in r29,__SP_H__
 1026               	.LCFI52:
 1027               		.cfi_def_cfa_register 28
 1028               	/* prologue: function */
 1029               	/* frame size = 4 */
 1030               	/* stack size = 6 */
 1031               	.L__stack_usage = 6
 1032 0476 9B83      		std Y+3,r25
 1033 0478 8A83      		std Y+2,r24
 1034 047a 6C83      		std Y+4,r22
 264:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyTrxSetState(TRX_CMD_TX_ARET_ON);
 1035               		.loc 3 264 0
 1036 047c 89E1      		ldi r24,lo8(25)
 1037 047e 0E94 0000 		call phyTrxSetState
 265:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 266:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1038               		.loc 3 266 0
 1039 0482 8FE4      		ldi r24,lo8(79)
 1040 0484 91E0      		ldi r25,lo8(1)
 1041 0486 2FEF      		ldi r18,lo8(-1)
 1042 0488 FC01      		movw r30,r24
 1043 048a 2083      		st Z,r18
 267:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 268:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_FRAME_BUFFER(0) = size + PHY_CRC_SIZE;
 1044               		.loc 3 268 0
 1045 048c 80E8      		ldi r24,lo8(-128)
 1046 048e 91E0      		ldi r25,lo8(1)
 1047 0490 2C81      		ldd r18,Y+4
 1048 0492 2E5F      		subi r18,lo8(-(2))
 1049 0494 FC01      		movw r30,r24
 1050 0496 2083      		st Z,r18
 1051               	.LBB2:
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1052               		.loc 3 269 0
 1053 0498 1982      		std Y+1,__zero_reg__
 1054 049a 00C0      		rjmp .L40
 1055               	.L41:
 270:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     TRX_FRAME_BUFFER(i+1) = data[i];
 1056               		.loc 3 270 0 discriminator 3
 1057 049c 8981      		ldd r24,Y+1
 1058 049e 882F      		mov r24,r24
 1059 04a0 90E0      		ldi r25,0
 1060 04a2 8F57      		subi r24,127
 1061 04a4 9E4F      		sbci r25,-2
 1062 04a6 AC01      		movw r20,r24
 1063 04a8 8981      		ldd r24,Y+1
 1064 04aa 882F      		mov r24,r24
 1065 04ac 90E0      		ldi r25,0
 1066 04ae 2A81      		ldd r18,Y+2
 1067 04b0 3B81      		ldd r19,Y+3
 1068 04b2 820F      		add r24,r18
 1069 04b4 931F      		adc r25,r19
 1070 04b6 FC01      		movw r30,r24
 1071 04b8 8081      		ld r24,Z
 1072 04ba FA01      		movw r30,r20
 1073 04bc 8083      		st Z,r24
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1074               		.loc 3 269 0 discriminator 3
 1075 04be 8981      		ldd r24,Y+1
 1076 04c0 8F5F      		subi r24,lo8(-(1))
 1077 04c2 8983      		std Y+1,r24
 1078               	.L40:
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1079               		.loc 3 269 0 is_stmt 0 discriminator 1
 1080 04c4 9981      		ldd r25,Y+1
 1081 04c6 8C81      		ldd r24,Y+4
 1082 04c8 9817      		cp r25,r24
 1083 04ca 00F0      		brlo .L41
 1084               	.LBE2:
 271:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	
 272:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyState = PHY_STATE_TX_WAIT_END;
 1085               		.loc 3 272 0 is_stmt 1
 1086 04cc 83E0      		ldi r24,lo8(3)
 1087 04ce 8093 0000 		sts phyState,r24
 273:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_STATE_REG = TRX_CMD_TX_START;
 1088               		.loc 3 273 0
 1089 04d2 82E4      		ldi r24,lo8(66)
 1090 04d4 91E0      		ldi r25,lo8(1)
 1091 04d6 22E0      		ldi r18,lo8(2)
 1092 04d8 FC01      		movw r30,r24
 1093 04da 2083      		st Z,r18
 274:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1094               		.loc 3 274 0
 1095 04dc 0000      		nop
 1096               	/* epilogue start */
 1097 04de 0F90      		pop __tmp_reg__
 1098 04e0 0F90      		pop __tmp_reg__
 1099 04e2 0F90      		pop __tmp_reg__
 1100 04e4 0F90      		pop __tmp_reg__
 1101 04e6 DF91      		pop r29
 1102 04e8 CF91      		pop r28
 1103 04ea 0895      		ret
 1104               		.cfi_endproc
 1105               	.LFE87:
 1107               	.global	PHY_RandomReq
 1109               	PHY_RandomReq:
 1110               	.LFB88:
 275:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 276:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 277:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 278:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 279:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** uint16_t PHY_RandomReq(void)
 280:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1111               		.loc 3 280 0
 1112               		.cfi_startproc
 1113 04ec CF93      		push r28
 1114               	.LCFI53:
 1115               		.cfi_def_cfa_offset 3
 1116               		.cfi_offset 28, -2
 1117 04ee DF93      		push r29
 1118               	.LCFI54:
 1119               		.cfi_def_cfa_offset 4
 1120               		.cfi_offset 29, -3
 1121 04f0 00D0      		rcall .
 1122 04f2 1F92      		push __zero_reg__
 1123               	.LCFI55:
 1124               		.cfi_def_cfa_offset 7
 1125 04f4 CDB7      		in r28,__SP_L__
 1126 04f6 DEB7      		in r29,__SP_H__
 1127               	.LCFI56:
 1128               		.cfi_def_cfa_register 28
 1129               	/* prologue: function */
 1130               	/* frame size = 3 */
 1131               	/* stack size = 5 */
 1132               	.L__stack_usage = 5
 281:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint16_t rnd = 0;
 1133               		.loc 3 281 0
 1134 04f8 1A82      		std Y+2,__zero_reg__
 1135 04fa 1982      		std Y+1,__zero_reg__
 282:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 283:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_RX_ON);
 1136               		.loc 3 283 0
 1137 04fc 86E0      		ldi r24,lo8(6)
 1138 04fe 0E94 0000 		call phyTrxSetState
 1139               	.LBB3:
 284:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 285:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	for (uint8_t i = 0; i < 16; i += 2) {
 1140               		.loc 3 285 0
 1141 0502 1B82      		std Y+3,__zero_reg__
 1142 0504 00C0      		rjmp .L43
 1143               	.L44:
 286:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1144               		.loc 3 286 0 discriminator 3
 1145 0506 62E0      		ldi r22,lo8(2)
 1146 0508 70E0      		ldi r23,0
 1147 050a 80E0      		ldi r24,0
 1148 050c 90E0      		ldi r25,0
 1149 050e 0E94 0000 		call __portable_avr_delay_cycles
 287:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		rnd |= PHY_RSSI_REG_s.rndValue << i;
 1150               		.loc 3 287 0 discriminator 3
 1151 0512 86E4      		ldi r24,lo8(70)
 1152 0514 91E0      		ldi r25,lo8(1)
 1153 0516 FC01      		movw r30,r24
 1154 0518 8081      		ld r24,Z
 1155 051a 8295      		swap r24
 1156 051c 8695      		lsr r24
 1157 051e 8770      		andi r24,lo8(7)
 1158 0520 8370      		andi r24,lo8(3)
 1159 0522 882F      		mov r24,r24
 1160 0524 90E0      		ldi r25,0
 1161 0526 2B81      		ldd r18,Y+3
 1162 0528 222F      		mov r18,r18
 1163 052a 30E0      		ldi r19,0
 1164 052c 00C0      		rjmp 2f
 1165               		1:
 1166 052e 880F      		lsl r24
 1167 0530 991F      		rol r25
 1168               		2:
 1169 0532 2A95      		dec r18
 1170 0534 02F4      		brpl 1b
 1171 0536 9C01      		movw r18,r24
 1172 0538 8981      		ldd r24,Y+1
 1173 053a 9A81      		ldd r25,Y+2
 1174 053c 822B      		or r24,r18
 1175 053e 932B      		or r25,r19
 1176 0540 9A83      		std Y+2,r25
 1177 0542 8983      		std Y+1,r24
 285:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1178               		.loc 3 285 0 discriminator 3
 1179 0544 8B81      		ldd r24,Y+3
 1180 0546 8E5F      		subi r24,lo8(-(2))
 1181 0548 8B83      		std Y+3,r24
 1182               	.L43:
 285:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1183               		.loc 3 285 0 is_stmt 0 discriminator 1
 1184 054a 8B81      		ldd r24,Y+3
 1185 054c 8031      		cpi r24,lo8(16)
 1186 054e 00F0      		brlo .L44
 1187               	.LBE3:
 288:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 289:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 290:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1188               		.loc 3 290 0 is_stmt 1
 1189 0550 0E94 0000 		call phySetRxState
 291:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 292:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	return rnd;
 1190               		.loc 3 292 0
 1191 0554 8981      		ldd r24,Y+1
 1192 0556 9A81      		ldd r25,Y+2
 1193               	/* epilogue start */
 293:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1194               		.loc 3 293 0
 1195 0558 0F90      		pop __tmp_reg__
 1196 055a 0F90      		pop __tmp_reg__
 1197 055c 0F90      		pop __tmp_reg__
 1198 055e DF91      		pop r29
 1199 0560 CF91      		pop r28
 1200 0562 0895      		ret
 1201               		.cfi_endproc
 1202               	.LFE88:
 1204               	.global	PHY_EncryptReq
 1206               	PHY_EncryptReq:
 1207               	.LFB89:
 294:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 295:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 296:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 297:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_EncryptReq(uint8_t *text, uint8_t *key)
 298:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1208               		.loc 3 298 0
 1209               		.cfi_startproc
 1210 0564 CF93      		push r28
 1211               	.LCFI57:
 1212               		.cfi_def_cfa_offset 3
 1213               		.cfi_offset 28, -2
 1214 0566 DF93      		push r29
 1215               	.LCFI58:
 1216               		.cfi_def_cfa_offset 4
 1217               		.cfi_offset 29, -3
 1218 0568 00D0      		rcall .
 1219 056a 00D0      		rcall .
 1220               	.LCFI59:
 1221               		.cfi_def_cfa_offset 8
 1222 056c CDB7      		in r28,__SP_L__
 1223 056e DEB7      		in r29,__SP_H__
 1224               	.LCFI60:
 1225               		.cfi_def_cfa_register 28
 1226               	/* prologue: function */
 1227               	/* frame size = 4 */
 1228               	/* stack size = 6 */
 1229               	.L__stack_usage = 6
 1230 0570 9A83      		std Y+2,r25
 1231 0572 8983      		std Y+1,r24
 1232 0574 7C83      		std Y+4,r23
 1233 0576 6B83      		std Y+3,r22
 299:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_setup(key, AES_MODE_ECB, AES_DIR_ENCRYPT);
 1234               		.loc 3 299 0
 1235 0578 8B81      		ldd r24,Y+3
 1236 057a 9C81      		ldd r25,Y+4
 1237 057c 40E0      		ldi r20,0
 1238 057e 60E0      		ldi r22,0
 1239 0580 0E94 0000 		call sal_aes_setup
 300:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_exec(text);
 1240               		.loc 3 300 0
 1241 0584 8981      		ldd r24,Y+1
 1242 0586 9A81      		ldd r25,Y+2
 1243 0588 0E94 0000 		call sal_aes_exec
 301:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_read(text);
 1244               		.loc 3 301 0
 1245 058c 8981      		ldd r24,Y+1
 1246 058e 9A81      		ldd r25,Y+2
 1247 0590 0E94 0000 		call sal_aes_read
 302:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1248               		.loc 3 302 0
 1249 0594 0000      		nop
 1250               	/* epilogue start */
 1251 0596 0F90      		pop __tmp_reg__
 1252 0598 0F90      		pop __tmp_reg__
 1253 059a 0F90      		pop __tmp_reg__
 1254 059c 0F90      		pop __tmp_reg__
 1255 059e DF91      		pop r29
 1256 05a0 CF91      		pop r28
 1257 05a2 0895      		ret
 1258               		.cfi_endproc
 1259               	.LFE89:
 1261               	.global	PHY_EdReq
 1263               	PHY_EdReq:
 1264               	.LFB90:
 303:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 304:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 305:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 306:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** int8_t PHY_EdReq(void)
 307:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1265               		.loc 3 307 0
 1266               		.cfi_startproc
 1267 05a4 CF93      		push r28
 1268               	.LCFI61:
 1269               		.cfi_def_cfa_offset 3
 1270               		.cfi_offset 28, -2
 1271 05a6 DF93      		push r29
 1272               	.LCFI62:
 1273               		.cfi_def_cfa_offset 4
 1274               		.cfi_offset 29, -3
 1275 05a8 1F92      		push __zero_reg__
 1276               	.LCFI63:
 1277               		.cfi_def_cfa_offset 5
 1278 05aa CDB7      		in r28,__SP_L__
 1279 05ac DEB7      		in r29,__SP_H__
 1280               	.LCFI64:
 1281               		.cfi_def_cfa_register 28
 1282               	/* prologue: function */
 1283               	/* frame size = 1 */
 1284               	/* stack size = 3 */
 1285               	.L__stack_usage = 3
 308:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	int8_t ed;
 309:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 310:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_RX_ON);
 1286               		.loc 3 310 0
 1287 05ae 86E0      		ldi r24,lo8(6)
 1288 05b0 0E94 0000 		call phyTrxSetState
 311:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 312:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IRQ_STATUS_REG_s.ccaEdDone = 1;
 1289               		.loc 3 312 0
 1290 05b4 8FE4      		ldi r24,lo8(79)
 1291 05b6 91E0      		ldi r25,lo8(1)
 1292 05b8 FC01      		movw r30,r24
 1293 05ba 2081      		ld r18,Z
 1294 05bc 2061      		ori r18,lo8(16)
 1295 05be FC01      		movw r30,r24
 1296 05c0 2083      		st Z,r18
 313:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_ED_LEVEL_REG = 0;
 1297               		.loc 3 313 0
 1298 05c2 87E4      		ldi r24,lo8(71)
 1299 05c4 91E0      		ldi r25,lo8(1)
 1300 05c6 FC01      		movw r30,r24
 1301 05c8 1082      		st Z,__zero_reg__
 314:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	while (0 == IRQ_STATUS_REG_s.ccaEdDone) {
 1302               		.loc 3 314 0
 1303 05ca 0000      		nop
 1304               	.L48:
 1305               		.loc 3 314 0 is_stmt 0 discriminator 1
 1306 05cc 8FE4      		ldi r24,lo8(79)
 1307 05ce 91E0      		ldi r25,lo8(1)
 1308 05d0 FC01      		movw r30,r24
 1309 05d2 8081      		ld r24,Z
 1310 05d4 8295      		swap r24
 1311 05d6 8170      		andi r24,1
 1312 05d8 8823      		tst r24
 1313 05da 01F0      		breq .L48
 315:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 316:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 317:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ed = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1314               		.loc 3 317 0 is_stmt 1
 1315 05dc 87E4      		ldi r24,lo8(71)
 1316 05de 91E0      		ldi r25,lo8(1)
 1317 05e0 FC01      		movw r30,r24
 1318 05e2 8081      		ld r24,Z
 1319 05e4 8A55      		subi r24,lo8(-(-90))
 1320 05e6 8983      		std Y+1,r24
 318:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 319:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1321               		.loc 3 319 0
 1322 05e8 0E94 0000 		call phySetRxState
 320:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 321:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	return ed;
 1323               		.loc 3 321 0
 1324 05ec 8981      		ldd r24,Y+1
 1325               	/* epilogue start */
 322:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1326               		.loc 3 322 0
 1327 05ee 0F90      		pop __tmp_reg__
 1328 05f0 DF91      		pop r29
 1329 05f2 CF91      		pop r28
 1330 05f4 0895      		ret
 1331               		.cfi_endproc
 1332               	.LFE90:
 1335               	phySetRxState:
 1336               	.LFB91:
 323:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 324:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 325:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 326:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phySetRxState(void)
 327:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1337               		.loc 3 327 0
 1338               		.cfi_startproc
 1339 05f6 CF93      		push r28
 1340               	.LCFI65:
 1341               		.cfi_def_cfa_offset 3
 1342               		.cfi_offset 28, -2
 1343 05f8 DF93      		push r29
 1344               	.LCFI66:
 1345               		.cfi_def_cfa_offset 4
 1346               		.cfi_offset 29, -3
 1347 05fa CDB7      		in r28,__SP_L__
 1348 05fc DEB7      		in r29,__SP_H__
 1349               	.LCFI67:
 1350               		.cfi_def_cfa_register 28
 1351               	/* prologue: function */
 1352               	/* frame size = 0 */
 1353               	/* stack size = 2 */
 1354               	.L__stack_usage = 2
 328:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 1355               		.loc 3 328 0
 1356 05fe 88E0      		ldi r24,lo8(8)
 1357 0600 0E94 0000 		call phyTrxSetState
 329:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 330:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1358               		.loc 3 330 0
 1359 0604 8FE4      		ldi r24,lo8(79)
 1360 0606 91E0      		ldi r25,lo8(1)
 1361 0608 2FEF      		ldi r18,lo8(-1)
 1362 060a FC01      		movw r30,r24
 1363 060c 2083      		st Z,r18
 331:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 332:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (phyRxState) {
 1364               		.loc 3 332 0
 1365 060e 8091 0000 		lds r24,phyRxState
 1366 0612 8823      		tst r24
 1367 0614 01F0      		breq .L52
 333:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyTrxSetState(TRX_CMD_RX_AACK_ON);
 1368               		.loc 3 333 0
 1369 0616 86E1      		ldi r24,lo8(22)
 1370 0618 0E94 0000 		call phyTrxSetState
 1371               	.L52:
 334:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 335:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1372               		.loc 3 335 0
 1373 061c 0000      		nop
 1374               	/* epilogue start */
 1375 061e DF91      		pop r29
 1376 0620 CF91      		pop r28
 1377 0622 0895      		ret
 1378               		.cfi_endproc
 1379               	.LFE91:
 1381               	.global	phyTrxSetState
 1383               	phyTrxSetState:
 1384               	.LFB92:
 336:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 337:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 338:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 339:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void phyTrxSetState(uint8_t state)
 340:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1385               		.loc 3 340 0
 1386               		.cfi_startproc
 1387 0624 CF93      		push r28
 1388               	.LCFI68:
 1389               		.cfi_def_cfa_offset 3
 1390               		.cfi_offset 28, -2
 1391 0626 DF93      		push r29
 1392               	.LCFI69:
 1393               		.cfi_def_cfa_offset 4
 1394               		.cfi_offset 29, -3
 1395 0628 1F92      		push __zero_reg__
 1396               	.LCFI70:
 1397               		.cfi_def_cfa_offset 5
 1398 062a CDB7      		in r28,__SP_L__
 1399 062c DEB7      		in r29,__SP_H__
 1400               	.LCFI71:
 1401               		.cfi_def_cfa_register 28
 1402               	/* prologue: function */
 1403               	/* frame size = 1 */
 1404               	/* stack size = 3 */
 1405               	.L__stack_usage = 3
 1406 062e 8983      		std Y+1,r24
 1407               	.L54:
 341:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1) || defined(EXT_RF_FRONT_END_CTRL)
 342:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(phyState == PHY_STATE_SLEEP)
 343:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 344:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DIVERSITY == 1)
 345:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antDivEn = 1;
 346:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
 347:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#else
 348:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		#if (ANTENNA_DEFAULT != 0)
 349:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			ANT_DIV_REG_s.antExtSwEn = 1;
 350:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			ANT_DIV_REG_s.antCtrl = ANTENNA_DEFAULT;
 351:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		#endif // ANTENNA_DEFAULT
 352:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DIVERSITY
 353:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#ifdef EXT_RF_FRONT_END_CTRL
 354:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_1_REG_s.paExtEn = 1;
 355:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // EXT_RF_FRONT_END_CTRL
 356:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 357:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // PLATFORM_WM100
 358:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 359:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	do {TRX_STATE_REG = TRX_CMD_FORCE_TRX_OFF;
 1408               		.loc 3 359 0 discriminator 1
 1409 0630 82E4      		ldi r24,lo8(66)
 1410 0632 91E0      		ldi r25,lo8(1)
 1411 0634 23E0      		ldi r18,lo8(3)
 1412 0636 FC01      		movw r30,r24
 1413 0638 2083      		st Z,r18
 360:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	} while (TRX_STATUS_TRX_OFF !=
 361:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1414               		.loc 3 361 0 discriminator 1
 1415 063a 81E4      		ldi r24,lo8(65)
 1416 063c 91E0      		ldi r25,lo8(1)
 1417 063e FC01      		movw r30,r24
 1418 0640 8081      		ld r24,Z
 1419 0642 8F71      		andi r24,lo8(31)
 1420 0644 8830      		cpi r24,lo8(8)
 1421 0646 01F4      		brne .L54
 1422               	.L55:
 362:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 363:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	do {TRX_STATE_REG = state; } while (state !=
 1423               		.loc 3 363 0 discriminator 1
 1424 0648 82E4      		ldi r24,lo8(66)
 1425 064a 91E0      		ldi r25,lo8(1)
 1426 064c 2981      		ldd r18,Y+1
 1427 064e FC01      		movw r30,r24
 1428 0650 2083      		st Z,r18
 364:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1429               		.loc 3 364 0 discriminator 1
 1430 0652 81E4      		ldi r24,lo8(65)
 1431 0654 91E0      		ldi r25,lo8(1)
 1432 0656 FC01      		movw r30,r24
 1433 0658 8081      		ld r24,Z
 1434 065a 8F71      		andi r24,lo8(31)
 363:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1435               		.loc 3 363 0 discriminator 1
 1436 065c 982F      		mov r25,r24
 1437               		.loc 3 364 0 discriminator 1
 1438 065e 8981      		ldd r24,Y+1
 1439 0660 9817      		cp r25,r24
 1440 0662 01F4      		brne .L55
 365:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1441               		.loc 3 365 0
 1442 0664 0000      		nop
 1443               	/* epilogue start */
 1444 0666 0F90      		pop __tmp_reg__
 1445 0668 DF91      		pop r29
 1446 066a CF91      		pop r28
 1447 066c 0895      		ret
 1448               		.cfi_endproc
 1449               	.LFE92:
 1451               	.global	PHY_SetIEEEAddr
 1453               	PHY_SetIEEEAddr:
 1454               	.LFB93:
 366:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 367:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 368:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 369:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 370:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetIEEEAddr(uint8_t *ieee_addr)
 371:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1455               		.loc 3 371 0
 1456               		.cfi_startproc
 1457 066e CF93      		push r28
 1458               	.LCFI72:
 1459               		.cfi_def_cfa_offset 3
 1460               		.cfi_offset 28, -2
 1461 0670 DF93      		push r29
 1462               	.LCFI73:
 1463               		.cfi_def_cfa_offset 4
 1464               		.cfi_offset 29, -3
 1465 0672 00D0      		rcall .
 1466 0674 00D0      		rcall .
 1467               	.LCFI74:
 1468               		.cfi_def_cfa_offset 8
 1469 0676 CDB7      		in r28,__SP_L__
 1470 0678 DEB7      		in r29,__SP_H__
 1471               	.LCFI75:
 1472               		.cfi_def_cfa_register 28
 1473               	/* prologue: function */
 1474               	/* frame size = 4 */
 1475               	/* stack size = 6 */
 1476               	.L__stack_usage = 6
 1477 067a 9C83      		std Y+4,r25
 1478 067c 8B83      		std Y+3,r24
 372:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *ptr_to_reg = ieee_addr;
 1479               		.loc 3 372 0
 1480 067e 8B81      		ldd r24,Y+3
 1481 0680 9C81      		ldd r25,Y+4
 1482 0682 9A83      		std Y+2,r25
 1483 0684 8983      		std Y+1,r24
 373:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_0_REG = *ptr_to_reg++;
 1484               		.loc 3 373 0
 1485 0686 24E6      		ldi r18,lo8(100)
 1486 0688 31E0      		ldi r19,lo8(1)
 1487 068a 8981      		ldd r24,Y+1
 1488 068c 9A81      		ldd r25,Y+2
 1489 068e AC01      		movw r20,r24
 1490 0690 4F5F      		subi r20,-1
 1491 0692 5F4F      		sbci r21,-1
 1492 0694 5A83      		std Y+2,r21
 1493 0696 4983      		std Y+1,r20
 1494 0698 FC01      		movw r30,r24
 1495 069a 8081      		ld r24,Z
 1496 069c F901      		movw r30,r18
 1497 069e 8083      		st Z,r24
 374:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_1_REG = *ptr_to_reg++;
 1498               		.loc 3 374 0
 1499 06a0 25E6      		ldi r18,lo8(101)
 1500 06a2 31E0      		ldi r19,lo8(1)
 1501 06a4 8981      		ldd r24,Y+1
 1502 06a6 9A81      		ldd r25,Y+2
 1503 06a8 AC01      		movw r20,r24
 1504 06aa 4F5F      		subi r20,-1
 1505 06ac 5F4F      		sbci r21,-1
 1506 06ae 5A83      		std Y+2,r21
 1507 06b0 4983      		std Y+1,r20
 1508 06b2 FC01      		movw r30,r24
 1509 06b4 8081      		ld r24,Z
 1510 06b6 F901      		movw r30,r18
 1511 06b8 8083      		st Z,r24
 375:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_2_REG = *ptr_to_reg++;
 1512               		.loc 3 375 0
 1513 06ba 26E6      		ldi r18,lo8(102)
 1514 06bc 31E0      		ldi r19,lo8(1)
 1515 06be 8981      		ldd r24,Y+1
 1516 06c0 9A81      		ldd r25,Y+2
 1517 06c2 AC01      		movw r20,r24
 1518 06c4 4F5F      		subi r20,-1
 1519 06c6 5F4F      		sbci r21,-1
 1520 06c8 5A83      		std Y+2,r21
 1521 06ca 4983      		std Y+1,r20
 1522 06cc FC01      		movw r30,r24
 1523 06ce 8081      		ld r24,Z
 1524 06d0 F901      		movw r30,r18
 1525 06d2 8083      		st Z,r24
 376:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_3_REG = *ptr_to_reg++;
 1526               		.loc 3 376 0
 1527 06d4 27E6      		ldi r18,lo8(103)
 1528 06d6 31E0      		ldi r19,lo8(1)
 1529 06d8 8981      		ldd r24,Y+1
 1530 06da 9A81      		ldd r25,Y+2
 1531 06dc AC01      		movw r20,r24
 1532 06de 4F5F      		subi r20,-1
 1533 06e0 5F4F      		sbci r21,-1
 1534 06e2 5A83      		std Y+2,r21
 1535 06e4 4983      		std Y+1,r20
 1536 06e6 FC01      		movw r30,r24
 1537 06e8 8081      		ld r24,Z
 1538 06ea F901      		movw r30,r18
 1539 06ec 8083      		st Z,r24
 377:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_4_REG = *ptr_to_reg++;
 1540               		.loc 3 377 0
 1541 06ee 28E6      		ldi r18,lo8(104)
 1542 06f0 31E0      		ldi r19,lo8(1)
 1543 06f2 8981      		ldd r24,Y+1
 1544 06f4 9A81      		ldd r25,Y+2
 1545 06f6 AC01      		movw r20,r24
 1546 06f8 4F5F      		subi r20,-1
 1547 06fa 5F4F      		sbci r21,-1
 1548 06fc 5A83      		std Y+2,r21
 1549 06fe 4983      		std Y+1,r20
 1550 0700 FC01      		movw r30,r24
 1551 0702 8081      		ld r24,Z
 1552 0704 F901      		movw r30,r18
 1553 0706 8083      		st Z,r24
 378:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_5_REG = *ptr_to_reg++;
 1554               		.loc 3 378 0
 1555 0708 29E6      		ldi r18,lo8(105)
 1556 070a 31E0      		ldi r19,lo8(1)
 1557 070c 8981      		ldd r24,Y+1
 1558 070e 9A81      		ldd r25,Y+2
 1559 0710 AC01      		movw r20,r24
 1560 0712 4F5F      		subi r20,-1
 1561 0714 5F4F      		sbci r21,-1
 1562 0716 5A83      		std Y+2,r21
 1563 0718 4983      		std Y+1,r20
 1564 071a FC01      		movw r30,r24
 1565 071c 8081      		ld r24,Z
 1566 071e F901      		movw r30,r18
 1567 0720 8083      		st Z,r24
 379:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_6_REG = *ptr_to_reg++;
 1568               		.loc 3 379 0
 1569 0722 2AE6      		ldi r18,lo8(106)
 1570 0724 31E0      		ldi r19,lo8(1)
 1571 0726 8981      		ldd r24,Y+1
 1572 0728 9A81      		ldd r25,Y+2
 1573 072a AC01      		movw r20,r24
 1574 072c 4F5F      		subi r20,-1
 1575 072e 5F4F      		sbci r21,-1
 1576 0730 5A83      		std Y+2,r21
 1577 0732 4983      		std Y+1,r20
 1578 0734 FC01      		movw r30,r24
 1579 0736 8081      		ld r24,Z
 1580 0738 F901      		movw r30,r18
 1581 073a 8083      		st Z,r24
 380:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_7_REG = *ptr_to_reg;
 1582               		.loc 3 380 0
 1583 073c 8BE6      		ldi r24,lo8(107)
 1584 073e 91E0      		ldi r25,lo8(1)
 1585 0740 2981      		ldd r18,Y+1
 1586 0742 3A81      		ldd r19,Y+2
 1587 0744 F901      		movw r30,r18
 1588 0746 2081      		ld r18,Z
 1589 0748 FC01      		movw r30,r24
 1590 074a 2083      		st Z,r18
 381:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1591               		.loc 3 381 0
 1592 074c 0000      		nop
 1593               	/* epilogue start */
 1594 074e 0F90      		pop __tmp_reg__
 1595 0750 0F90      		pop __tmp_reg__
 1596 0752 0F90      		pop __tmp_reg__
 1597 0754 0F90      		pop __tmp_reg__
 1598 0756 DF91      		pop r29
 1599 0758 CF91      		pop r28
 1600 075a 0895      		ret
 1601               		.cfi_endproc
 1602               	.LFE93:
 1604               	.global	PHY_TaskHandler
 1606               	PHY_TaskHandler:
 1607               	.LFB94:
 382:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 383:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 384:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 385:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_TaskHandler(void)
 386:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1608               		.loc 3 386 0
 1609               		.cfi_startproc
 1610 075c CF93      		push r28
 1611               	.LCFI76:
 1612               		.cfi_def_cfa_offset 3
 1613               		.cfi_offset 28, -2
 1614 075e DF93      		push r29
 1615               	.LCFI77:
 1616               		.cfi_def_cfa_offset 4
 1617               		.cfi_offset 29, -3
 1618 0760 CDB7      		in r28,__SP_L__
 1619 0762 DEB7      		in r29,__SP_H__
 1620               	.LCFI78:
 1621               		.cfi_def_cfa_register 28
 1622 0764 2897      		sbiw r28,8
 1623               	.LCFI79:
 1624               		.cfi_def_cfa_offset 12
 1625 0766 0FB6      		in __tmp_reg__,__SREG__
 1626 0768 F894      		cli
 1627 076a DEBF      		out __SP_H__,r29
 1628 076c 0FBE      		out __SREG__,__tmp_reg__
 1629 076e CDBF      		out __SP_L__,r28
 1630               	/* prologue: function */
 1631               	/* frame size = 8 */
 1632               	/* stack size = 10 */
 1633               	.L__stack_usage = 10
 387:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (PHY_STATE_SLEEP == phyState) {
 1634               		.loc 3 387 0
 1635 0770 8091 0000 		lds r24,phyState
 1636 0774 8230      		cpi r24,lo8(2)
 1637 0776 01F4      		brne .+2
 1638 0778 00C0      		rjmp .L69
 388:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		return;
 389:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 390:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 391:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (IRQ_STATUS_REG_s.rxEnd) {
 1639               		.loc 3 391 0
 1640 077a 8FE4      		ldi r24,lo8(79)
 1641 077c 91E0      		ldi r25,lo8(1)
 1642 077e FC01      		movw r30,r24
 1643 0780 8081      		ld r24,Z
 1644 0782 83FB      		bst r24,3
 1645 0784 8827      		clr r24
 1646 0786 80F9      		bld r24,0
 1647 0788 8823      		tst r24
 1648 078a 01F4      		brne .+2
 1649 078c 00C0      		rjmp .L60
 1650               	.LBB4:
 392:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_DataInd_t ind;
 393:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		uint8_t size = TST_RX_LENGTH_REG;
 1651               		.loc 3 393 0
 1652 078e 8BE7      		ldi r24,lo8(123)
 1653 0790 91E0      		ldi r25,lo8(1)
 1654 0792 FC01      		movw r30,r24
 1655 0794 8081      		ld r24,Z
 1656 0796 8B83      		std Y+3,r24
 1657               	.LBB5:
 394:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 395:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		for (uint8_t i = 0; i < size + 1 /*lqi*/; i++) {
 1658               		.loc 3 395 0
 1659 0798 1982      		std Y+1,__zero_reg__
 1660 079a 00C0      		rjmp .L61
 1661               	.L62:
 396:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1662               		.loc 3 396 0 discriminator 3
 1663 079c 8981      		ldd r24,Y+1
 1664 079e 882F      		mov r24,r24
 1665 07a0 90E0      		ldi r25,0
 1666 07a2 2981      		ldd r18,Y+1
 1667 07a4 222F      		mov r18,r18
 1668 07a6 30E0      		ldi r19,0
 1669 07a8 2058      		subi r18,-128
 1670 07aa 3E4F      		sbci r19,-2
 1671 07ac F901      		movw r30,r18
 1672 07ae 2081      		ld r18,Z
 1673 07b0 8050      		subi r24,lo8(-(phyRxBuffer))
 1674 07b2 9040      		sbci r25,hi8(-(phyRxBuffer))
 1675 07b4 FC01      		movw r30,r24
 1676 07b6 2083      		st Z,r18
 395:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1677               		.loc 3 395 0 discriminator 3
 1678 07b8 8981      		ldd r24,Y+1
 1679 07ba 8F5F      		subi r24,lo8(-(1))
 1680 07bc 8983      		std Y+1,r24
 1681               	.L61:
 395:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1682               		.loc 3 395 0 is_stmt 0 discriminator 1
 1683 07be 8981      		ldd r24,Y+1
 1684 07c0 282F      		mov r18,r24
 1685 07c2 30E0      		ldi r19,0
 1686 07c4 8B81      		ldd r24,Y+3
 1687 07c6 882F      		mov r24,r24
 1688 07c8 90E0      		ldi r25,0
 1689 07ca 0196      		adiw r24,1
 1690 07cc 2817      		cp r18,r24
 1691 07ce 3907      		cpc r19,r25
 1692 07d0 04F0      		brlt .L62
 1693               	.LBE5:
 397:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 398:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 399:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.data = phyRxBuffer;
 1694               		.loc 3 399 0 is_stmt 1
 1695 07d2 80E0      		ldi r24,lo8(phyRxBuffer)
 1696 07d4 90E0      		ldi r25,hi8(phyRxBuffer)
 1697 07d6 9D83      		std Y+5,r25
 1698 07d8 8C83      		std Y+4,r24
 400:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.size = size - PHY_CRC_SIZE;
 1699               		.loc 3 400 0
 1700 07da 8B81      		ldd r24,Y+3
 1701 07dc 8250      		subi r24,lo8(-(-2))
 1702 07de 8E83      		std Y+6,r24
 401:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.lqi  = phyRxBuffer[size];
 1703               		.loc 3 401 0
 1704 07e0 8B81      		ldd r24,Y+3
 1705 07e2 882F      		mov r24,r24
 1706 07e4 90E0      		ldi r25,0
 1707 07e6 8050      		subi r24,lo8(-(phyRxBuffer))
 1708 07e8 9040      		sbci r25,hi8(-(phyRxBuffer))
 1709 07ea FC01      		movw r30,r24
 1710 07ec 8081      		ld r24,Z
 1711 07ee 8F83      		std Y+7,r24
 402:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.rssi = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1712               		.loc 3 402 0
 1713 07f0 87E4      		ldi r24,lo8(71)
 1714 07f2 91E0      		ldi r25,lo8(1)
 1715 07f4 FC01      		movw r30,r24
 1716 07f6 8081      		ld r24,Z
 1717 07f8 8A55      		subi r24,lo8(-(-90))
 1718 07fa 8887      		std Y+8,r24
 403:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_DataInd(&ind);
 1719               		.loc 3 403 0
 1720 07fc CE01      		movw r24,r28
 1721 07fe 0496      		adiw r24,4
 1722 0800 0E94 0000 		call PHY_DataInd
 404:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 405:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		while (TRX_STATUS_RX_AACK_ON != TRX_STATUS_REG_s.trxStatus) {
 1723               		.loc 3 405 0
 1724 0804 0000      		nop
 1725               	.L63:
 1726               		.loc 3 405 0 is_stmt 0 discriminator 1
 1727 0806 81E4      		ldi r24,lo8(65)
 1728 0808 91E0      		ldi r25,lo8(1)
 1729 080a FC01      		movw r30,r24
 1730 080c 8081      		ld r24,Z
 1731 080e 8F71      		andi r24,lo8(31)
 1732 0810 8631      		cpi r24,lo8(22)
 1733 0812 01F4      		brne .L63
 406:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 407:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 408:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		IRQ_STATUS_REG_s.rxEnd = 1;
 1734               		.loc 3 408 0 is_stmt 1 discriminator 2
 1735 0814 8FE4      		ldi r24,lo8(79)
 1736 0816 91E0      		ldi r25,lo8(1)
 1737 0818 FC01      		movw r30,r24
 1738 081a 2081      		ld r18,Z
 1739 081c 2860      		ori r18,lo8(8)
 1740 081e FC01      		movw r30,r24
 1741 0820 2083      		st Z,r18
 409:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_2_REG_s.rxSafeMode = 0;
 1742               		.loc 3 409 0 discriminator 2
 1743 0822 8CE4      		ldi r24,lo8(76)
 1744 0824 91E0      		ldi r25,lo8(1)
 1745 0826 FC01      		movw r30,r24
 1746 0828 2081      		ld r18,Z
 1747 082a 2F77      		andi r18,lo8(127)
 1748 082c FC01      		movw r30,r24
 1749 082e 2083      		st Z,r18
 410:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_2_REG_s.rxSafeMode = 1;
 1750               		.loc 3 410 0 discriminator 2
 1751 0830 8CE4      		ldi r24,lo8(76)
 1752 0832 91E0      		ldi r25,lo8(1)
 1753 0834 FC01      		movw r30,r24
 1754 0836 2081      		ld r18,Z
 1755 0838 2068      		ori r18,lo8(-128)
 1756 083a FC01      		movw r30,r24
 1757 083c 2083      		st Z,r18
 1758               	.LBE4:
 1759 083e 00C0      		rjmp .L57
 1760               	.L60:
 411:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	} else if (IRQ_STATUS_REG_s.txEnd) {
 1761               		.loc 3 411 0
 1762 0840 8FE4      		ldi r24,lo8(79)
 1763 0842 91E0      		ldi r25,lo8(1)
 1764 0844 FC01      		movw r30,r24
 1765 0846 8081      		ld r24,Z
 1766 0848 86FB      		bst r24,6
 1767 084a 8827      		clr r24
 1768 084c 80F9      		bld r24,0
 1769 084e 8823      		tst r24
 1770 0850 01F0      		breq .L57
 412:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		if (TRX_STATUS_TX_ARET_ON == TRX_STATUS_REG_s.trxStatus) {
 1771               		.loc 3 412 0
 1772 0852 81E4      		ldi r24,lo8(65)
 1773 0854 91E0      		ldi r25,lo8(1)
 1774 0856 FC01      		movw r30,r24
 1775 0858 8081      		ld r24,Z
 1776 085a 8F71      		andi r24,lo8(31)
 1777 085c 8931      		cpi r24,lo8(25)
 1778 085e 01F4      		brne .L64
 1779               	.LBB6:
 413:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			uint8_t status = TRX_STATE_REG_s.tracStatus;
 1780               		.loc 3 413 0
 1781 0860 82E4      		ldi r24,lo8(66)
 1782 0862 91E0      		ldi r25,lo8(1)
 1783 0864 FC01      		movw r30,r24
 1784 0866 8081      		ld r24,Z
 1785 0868 8295      		swap r24
 1786 086a 8695      		lsr r24
 1787 086c 8770      		andi r24,lo8(7)
 1788 086e 8A83      		std Y+2,r24
 414:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 415:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			if (TRAC_STATUS_SUCCESS == status) {
 1789               		.loc 3 415 0
 1790 0870 8A81      		ldd r24,Y+2
 1791 0872 8823      		tst r24
 1792 0874 01F4      		brne .L65
 416:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_SUCCESS;
 1793               		.loc 3 416 0
 1794 0876 1A82      		std Y+2,__zero_reg__
 1795 0878 00C0      		rjmp .L66
 1796               	.L65:
 417:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else if (TRAC_STATUS_CHANNEL_ACCESS_FAILURE ==
 1797               		.loc 3 417 0
 1798 087a 8A81      		ldd r24,Y+2
 1799 087c 8330      		cpi r24,lo8(3)
 1800 087e 01F4      		brne .L67
 418:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 					status) {
 419:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_CHANNEL_ACCESS_FAILURE;
 1801               		.loc 3 419 0
 1802 0880 81E0      		ldi r24,lo8(1)
 1803 0882 8A83      		std Y+2,r24
 1804 0884 00C0      		rjmp .L66
 1805               	.L67:
 420:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else if (TRAC_STATUS_NO_ACK == status) {
 1806               		.loc 3 420 0
 1807 0886 8A81      		ldd r24,Y+2
 1808 0888 8530      		cpi r24,lo8(5)
 1809 088a 01F4      		brne .L68
 421:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_NO_ACK;
 1810               		.loc 3 421 0
 1811 088c 82E0      		ldi r24,lo8(2)
 1812 088e 8A83      		std Y+2,r24
 1813 0890 00C0      		rjmp .L66
 1814               	.L68:
 422:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else {
 423:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_ERROR;
 1815               		.loc 3 423 0
 1816 0892 83E0      		ldi r24,lo8(3)
 1817 0894 8A83      		std Y+2,r24
 1818               	.L66:
 424:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			}
 425:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 426:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phySetRxState();
 1819               		.loc 3 426 0
 1820 0896 0E94 0000 		call phySetRxState
 427:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyState = PHY_STATE_IDLE;
 1821               		.loc 3 427 0
 1822 089a 81E0      		ldi r24,lo8(1)
 1823 089c 8093 0000 		sts phyState,r24
 428:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 429:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			PHY_DataConf(status);
 1824               		.loc 3 429 0
 1825 08a0 8A81      		ldd r24,Y+2
 1826 08a2 0E94 0000 		call PHY_DataConf
 1827               	.L64:
 1828               	.LBE6:
 430:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 431:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 432:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		IRQ_STATUS_REG_s.txEnd = 1;
 1829               		.loc 3 432 0
 1830 08a6 8FE4      		ldi r24,lo8(79)
 1831 08a8 91E0      		ldi r25,lo8(1)
 1832 08aa FC01      		movw r30,r24
 1833 08ac 2081      		ld r18,Z
 1834 08ae 2064      		ori r18,lo8(64)
 1835 08b0 FC01      		movw r30,r24
 1836 08b2 2083      		st Z,r18
 1837 08b4 00C0      		rjmp .L57
 1838               	.L69:
 388:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 1839               		.loc 3 388 0
 1840 08b6 0000      		nop
 1841               	.L57:
 1842               	/* epilogue start */
 433:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 434:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1843               		.loc 3 434 0
 1844 08b8 2896      		adiw r28,8
 1845 08ba 0FB6      		in __tmp_reg__,__SREG__
 1846 08bc F894      		cli
 1847 08be DEBF      		out __SP_H__,r29
 1848 08c0 0FBE      		out __SREG__,__tmp_reg__
 1849 08c2 CDBF      		out __SP_L__,r28
 1850 08c4 DF91      		pop r29
 1851 08c6 CF91      		pop r28
 1852 08c8 0895      		ret
 1853               		.cfi_endproc
 1854               	.LFE94:
 1856               	.Letext0:
 1857               		.file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 1858               		.file 5 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 1859               		.file 6 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/atmegarfa1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 phy.c
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:12     .text:00000000 sysclk_enable_peripheral_clock
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:214    .text:0000011a __portable_avr_delay_cycles
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:239    .bss.phyState:00000000 phyState
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:244    .bss.phyRxBuffer:00000000 phyRxBuffer
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:249    .bss.phyRxState:00000000 phyRxState
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:254    .text:00000126 PHY_Init
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:1383   .text:00000624 phyTrxSetState
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:314    .text:0000016a PHY_ResetRadio
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:353    .text:00000188 PHY_SetTdmaMode
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:447    .text:000001fe PHY_SetPromiscuousMode
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:786    .text:0000037e PHY_SetShortAddr
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:722    .text:00000336 PHY_SetPanId
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:1453   .text:0000066e PHY_SetIEEEAddr
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:568    .text:000002a6 PHY_SetOptimizedCSMAValues
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:1109   .text:000004ec PHY_RandomReq
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:633    .text:000002ea PHY_SetRxState
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:1335   .text:000005f6 phySetRxState
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:674    .text:0000030a PHY_SetChannel
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:866    .text:000003e4 PHY_SetTxPower
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:914    .text:00000410 PHY_Sleep
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:964    .text:00000442 PHY_Wakeup
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:1008   .text:0000046a PHY_DataReq
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:1206   .text:00000564 PHY_EncryptReq
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:1263   .text:000005a4 PHY_EdReq
C:\Users\GUILHE~1\AppData\Local\Temp\cc71kQs6.s:1606   .text:0000075c PHY_TaskHandler

UNDEFINED SYMBOLS
sysclk_enable_module
sal_aes_setup
sal_aes_exec
sal_aes_read
PHY_DataInd
PHY_DataConf
__do_clear_bss
