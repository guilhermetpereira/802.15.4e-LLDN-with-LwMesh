   1               		.file	"phy.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	sysclk_enable_peripheral_clock:
  13               	.LFB69:
  14               		.file 1 "../../../platform/common/services/clock/mega/sysclk.h"
   1:../../../platform/common/services/clock/mega/sysclk.h **** /**
   2:../../../platform/common/services/clock/mega/sysclk.h ****  * \file
   3:../../../platform/common/services/clock/mega/sysclk.h ****  *
   4:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Chip-specific system clock management functions
   5:../../../platform/common/services/clock/mega/sysclk.h ****  *
   6:../../../platform/common/services/clock/mega/sysclk.h ****  * Copyright (c) 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/mega/sysclk.h ****  *
   8:../../../platform/common/services/clock/mega/sysclk.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/mega/sysclk.h ****  *
  10:../../../platform/common/services/clock/mega/sysclk.h ****  * \page License
  11:../../../platform/common/services/clock/mega/sysclk.h ****  *
  12:../../../platform/common/services/clock/mega/sysclk.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/mega/sysclk.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/mega/sysclk.h ****  *
  15:../../../platform/common/services/clock/mega/sysclk.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/mega/sysclk.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/mega/sysclk.h ****  *
  18:../../../platform/common/services/clock/mega/sysclk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/mega/sysclk.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/mega/sysclk.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/mega/sysclk.h ****  *
  22:../../../platform/common/services/clock/mega/sysclk.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/mega/sysclk.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/mega/sysclk.h ****  *
  25:../../../platform/common/services/clock/mega/sysclk.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/mega/sysclk.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/mega/sysclk.h ****  *
  28:../../../platform/common/services/clock/mega/sysclk.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/mega/sysclk.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/mega/sysclk.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/mega/sysclk.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/mega/sysclk.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/mega/sysclk.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/mega/sysclk.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/mega/sysclk.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/mega/sysclk.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/mega/sysclk.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/mega/sysclk.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/mega/sysclk.h ****  *
  40:../../../platform/common/services/clock/mega/sysclk.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/mega/sysclk.h ****  *
  42:../../../platform/common/services/clock/mega/sysclk.h ****  */
  43:../../../platform/common/services/clock/mega/sysclk.h **** #ifndef MEGA_SYSCLK_H_INCLUDED
  44:../../../platform/common/services/clock/mega/sysclk.h **** #define MEGA_SYSCLK_H_INCLUDED
  45:../../../platform/common/services/clock/mega/sysclk.h **** 
  46:../../../platform/common/services/clock/mega/sysclk.h **** #include <board.h>
  47:../../../platform/common/services/clock/mega/sysclk.h **** #include <compiler.h>
  48:../../../platform/common/services/clock/mega/sysclk.h **** #include <parts.h>
  49:../../../platform/common/services/clock/mega/sysclk.h **** 
  50:../../../platform/common/services/clock/mega/sysclk.h **** /* Include clock configuration for the project. */
  51:../../../platform/common/services/clock/mega/sysclk.h **** #include <conf_clock.h>
  52:../../../platform/common/services/clock/mega/sysclk.h **** 
  53:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef __cplusplus
  54:../../../platform/common/services/clock/mega/sysclk.h **** extern "C" {
  55:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  56:../../../platform/common/services/clock/mega/sysclk.h **** #define ASM __asm__
  57:../../../platform/common/services/clock/mega/sysclk.h **** 
  58:../../../platform/common/services/clock/mega/sysclk.h **** /* CONFIG_SYSCLK_PSDIV  to use default if not defined*/
  59:../../../platform/common/services/clock/mega/sysclk.h **** #ifndef CONFIG_SYSCLK_PSDIV
  60:../../../platform/common/services/clock/mega/sysclk.h **** # define CONFIG_SYSCLK_PSDIV    SYSCLK_PSDIV_8
  61:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  62:../../../platform/common/services/clock/mega/sysclk.h **** 
  63:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Prescaler Setting (relative to CLKsys) */
  64:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
  65:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_1      0   /* !< Do not prescale */
  66:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_2      1   /* !< Prescale CLKper4 by 2 */
  67:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_4      2   /* !< Prescale CLKper4 by 4 */
  68:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_8      3   /* !< Prescale CLKper4 by 8 */
  69:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_16     4   /* !< Prescale CLKper4 by 16 */
  70:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_32     5   /* !< Prescale CLKper4 by 32 */
  71:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_64     6   /* !< Prescale CLKper4 by 64 */
  72:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_128    7   /* !< Prescale CLKper4 by 128 */
  73:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_256    8   /* !< Prescale CLKper4 by 256 */
  74:../../../platform/common/services/clock/mega/sysclk.h **** 
  75:../../../platform/common/services/clock/mega/sysclk.h **** /* @} */
  76:../../../platform/common/services/clock/mega/sysclk.h **** 
  77:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF || MEGA_XX0_1 || MEGA_XX4 || MEGA_XX4_A
  78:../../../platform/common/services/clock/mega/sysclk.h **** 
  79:../../../platform/common/services/clock/mega/sysclk.h **** #define NUMBER_OF_POWER_REG       2
  80:../../../platform/common/services/clock/mega/sysclk.h **** /*Starting Address for power reduction*/
  81:../../../platform/common/services/clock/mega/sysclk.h **** #define POWER_REG_ADD             PRR0
  82:../../../platform/common/services/clock/mega/sysclk.h **** 
  83:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Power Reduction  Clock Port Numbers */
  84:../../../platform/common/services/clock/mega/sysclk.h **** enum power_red_id {
  85:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG0,     /* !< Devices on PRR0 */
  86:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX4 || !MEGA_XX4_A || MEGA_XX0_1
  87:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG1,     /* !< Devices on PRR1 */
  88:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  89:../../../platform/common/services/clock/mega/sysclk.h **** };
  90:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  91:../../../platform/common/services/clock/mega/sysclk.h **** 
  92:../../../platform/common/services/clock/mega/sysclk.h **** /****************************************************
  93:../../../platform/common/services/clock/mega/sysclk.h ****  * Given a dummy type but not used for these groups
  94:../../../platform/common/services/clock/mega/sysclk.h ****  * to support for otherthen megaRF device.
  95:../../../platform/common/services/clock/mega/sysclk.h ****  **************************************************/
  96:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX8 || MEGA_XX8_A || MEGA_UNSPECIFIED
  97:../../../platform/common/services/clock/mega/sysclk.h **** #define NUMBER_OF_POWER_REG       1
  98:../../../platform/common/services/clock/mega/sysclk.h **** /*Starting Address for power reduction*/
  99:../../../platform/common/services/clock/mega/sysclk.h **** #define POWER_REG_ADD             PRR
 100:../../../platform/common/services/clock/mega/sysclk.h **** 
 101:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Power Reduction  Clock Port Numbers */
 102:../../../platform/common/services/clock/mega/sysclk.h **** enum power_red_id {
 103:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG0,     /* !< Devices on PRR */
 104:../../../platform/common/services/clock/mega/sysclk.h **** };
 105:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 106:../../../platform/common/services/clock/mega/sysclk.h **** 
 107:../../../platform/common/services/clock/mega/sysclk.h **** /* Bit mask for the power reduction register based on */
 108:../../../platform/common/services/clock/mega/sysclk.h **** /*   MCU ARCH.                                        */
 109:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 110:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for PRR2 */
 111:../../../platform/common/services/clock/mega/sysclk.h **** 
 112:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM0_bm                       1 << PRRAM0
 113:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM1_bm                       1 << PRRAM1
 114:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM2_bm                       1 << PRRAM2
 115:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM3_bm                       1 << PRRAM3
 116:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 117:../../../platform/common/services/clock/mega/sysclk.h **** 
 118:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for the power reduction 0 or PRR*/
 119:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN0 && !MEGA_XX_UN0
 120:../../../platform/common/services/clock/mega/sysclk.h **** #define PRADC_bm                        1 << PRADC
 121:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART0_bm                     1 << PRUSART0
 122:../../../platform/common/services/clock/mega/sysclk.h **** #define PRSPI_bm                        1 << PRSPI
 123:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM1_bm                       1 << PRTIM1
 124:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 125:../../../platform/common/services/clock/mega/sysclk.h **** 
 126:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 127:../../../platform/common/services/clock/mega/sysclk.h **** #define PRPGA_bm                        1 << PRPGA
 128:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 129:../../../platform/common/services/clock/mega/sysclk.h **** 
 130:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_UNSPECIFIED
 131:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM0_bm                       1 << PRTIM0
 132:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM2_bm                       1 << PRTIM2
 133:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTWI_bm                        1 << PRTWI
 134:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 135:../../../platform/common/services/clock/mega/sysclk.h **** 
 136:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX_UN2
 137:../../../platform/common/services/clock/mega/sysclk.h **** #define PRLCD_bm                        1 << PRLCD
 138:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 139:../../../platform/common/services/clock/mega/sysclk.h **** 
 140:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for  PRR1  */
 141:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef PRR1
 142:../../../platform/common/services/clock/mega/sysclk.h **** #if (MEGA_XX4 || MEGA_XX4_A)
 143:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM3_bm                       1 << PRTIM3
 144:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 145:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 146:../../../platform/common/services/clock/mega/sysclk.h **** 
 147:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF || MEGA_XX4 || MEGA_XX4_A
 148:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART1_bm                     1 << PRUSART1
 149:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART2_bm                     1 << PRUSART2
 150:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART3_bm                     1 << PRUSART3
 151:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM3_bm                       1 << PRTIM3
 152:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM4_bm                       1 << PRTIM4
 153:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM5_bm                       1 << PRTIM5
 154:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 155:../../../platform/common/services/clock/mega/sysclk.h **** 
 156:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 157:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTRX24_bm                      1 << PRTRX24
 158:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 159:../../../platform/common/services/clock/mega/sysclk.h **** 
 160:../../../platform/common/services/clock/mega/sysclk.h **** /**
 161:../../../platform/common/services/clock/mega/sysclk.h ****  * \name Querying the system clock and its derived clocks
 162:../../../platform/common/services/clock/mega/sysclk.h ****  */
 163:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
 164:../../../platform/common/services/clock/mega/sysclk.h **** 
 165:../../../platform/common/services/clock/mega/sysclk.h **** /**
 166:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the main system clock
 167:../../../platform/common/services/clock/mega/sysclk.h ****  * To know the clock value at what frequency the main clock is running
 168:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the main system clock, in Hz.
 169:../../../platform/common/services/clock/mega/sysclk.h ****  * \todo : please initialize the SYSCLK_SOURCE in conf_clock.h file for
 170:../../../platform/common/services/clock/mega/sysclk.h ****  * configured source clock using fuses.
 171:../../../platform/common/services/clock/mega/sysclk.h ****  * \eg. #define SYSCLK_SOURCE SYSCLK_SRC_RC16MHZ to use internal RC
 172:../../../platform/common/services/clock/mega/sysclk.h ****  * oscillator for clock source.
 173:../../../platform/common/services/clock/mega/sysclk.h ****  */
 174:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_main_hz(void)
 175:../../../platform/common/services/clock/mega/sysclk.h **** {
 176:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (SYSCLK_SOURCE) {
 177:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_RC16MHZ:
 178:../../../platform/common/services/clock/mega/sysclk.h **** 		return 16000000UL;
 179:../../../platform/common/services/clock/mega/sysclk.h **** 
 180:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_RC128KHZ:
 181:../../../platform/common/services/clock/mega/sysclk.h **** 		return 128000UL;
 182:../../../platform/common/services/clock/mega/sysclk.h **** 
 183:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 184:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_TRS16MHZ:
 185:../../../platform/common/services/clock/mega/sysclk.h **** 		return 16000000UL;
 186:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 187:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef BOARD_EXTERNAL_CLK
 188:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_EXTERNAL:
 189:../../../platform/common/services/clock/mega/sysclk.h **** 		return BOARD_EXTERNAL_CLK;
 190:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 191:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 192:../../../platform/common/services/clock/mega/sysclk.h **** 
 193:../../../platform/common/services/clock/mega/sysclk.h **** 		return 1000000UL;
 194:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 195:../../../platform/common/services/clock/mega/sysclk.h **** }
 196:../../../platform/common/services/clock/mega/sysclk.h **** 
 197:../../../platform/common/services/clock/mega/sysclk.h **** /**
 198:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of source clock in Hz.
 199:../../../platform/common/services/clock/mega/sysclk.h ****  *
 200:../../../platform/common/services/clock/mega/sysclk.h ****  * This clock always runs at the same rate as the CPU clock unless the divider
 201:../../../platform/common/services/clock/mega/sysclk.h ****  * is set.
 202:../../../platform/common/services/clock/mega/sysclk.h ****  *
 203:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the system clock, in Hz.
 204:../../../platform/common/services/clock/mega/sysclk.h ****  */
 205:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_source_clock_hz(void)
 206:../../../platform/common/services/clock/mega/sysclk.h **** {
 207:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (CONFIG_SYSCLK_PSDIV) {
 208:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_1: /* Fall through */
 209:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 210:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 211:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 212:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 213:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz();
 214:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 215:../../../platform/common/services/clock/mega/sysclk.h **** 
 216:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_2:
 217:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 218:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 219:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 220:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 221:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 222:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 223:../../../platform/common/services/clock/mega/sysclk.h **** 
 224:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_4:
 225:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 226:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 227:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 228:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 229:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 230:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 231:../../../platform/common/services/clock/mega/sysclk.h **** 
 232:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_8:
 233:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 234:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 235:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 236:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 237:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 238:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 239:../../../platform/common/services/clock/mega/sysclk.h **** 
 240:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_16:
 241:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 242:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 243:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 244:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 245:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 246:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 247:../../../platform/common/services/clock/mega/sysclk.h **** 
 248:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_32:
 249:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 250:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 251:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 252:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 253:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 254:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 255:../../../platform/common/services/clock/mega/sysclk.h **** 
 256:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_64:
 257:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 258:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 259:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 260:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 261:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 262:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 263:../../../platform/common/services/clock/mega/sysclk.h **** 
 264:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_128:
 265:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 266:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 267:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 268:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 269:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 270:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 271:../../../platform/common/services/clock/mega/sysclk.h **** 
 272:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_256:
 273:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 274:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 275:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 512;
 276:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 277:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 278:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 279:../../../platform/common/services/clock/mega/sysclk.h **** 
 280:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 281:../../../platform/common/services/clock/mega/sysclk.h **** 		/*Invalide case*/
 282:../../../platform/common/services/clock/mega/sysclk.h **** 		return 0;
 283:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 284:../../../platform/common/services/clock/mega/sysclk.h **** }
 285:../../../platform/common/services/clock/mega/sysclk.h **** 
 286:../../../platform/common/services/clock/mega/sysclk.h **** /**
 287:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the CPU clock.
 288:../../../platform/common/services/clock/mega/sysclk.h ****  *
 289:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 290:../../../platform/common/services/clock/mega/sysclk.h ****  */
 291:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_cpu_hz(void)
 292:../../../platform/common/services/clock/mega/sysclk.h **** {
 293:../../../platform/common/services/clock/mega/sysclk.h **** 	return sysclk_get_source_clock_hz();
 294:../../../platform/common/services/clock/mega/sysclk.h **** }
 295:../../../platform/common/services/clock/mega/sysclk.h **** 
 296:../../../platform/common/services/clock/mega/sysclk.h **** /**
 297:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the clock from internal oscillator
 298:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 299:../../../platform/common/services/clock/mega/sysclk.h ****  */
 300:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_rc_osc_hz(void)
 301:../../../platform/common/services/clock/mega/sysclk.h **** {
 302:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (CONFIG_SYSCLK_PSDIV) {
 303:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_1:
 304:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 305:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 306:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 307:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 308:../../../platform/common/services/clock/mega/sysclk.h **** 
 309:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_2:
 310:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 311:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 312:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 313:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 314:../../../platform/common/services/clock/mega/sysclk.h **** 
 315:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_4:
 316:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 317:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 318:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 319:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 320:../../../platform/common/services/clock/mega/sysclk.h **** 
 321:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_8:
 322:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 323:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 324:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 325:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 326:../../../platform/common/services/clock/mega/sysclk.h **** 
 327:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_16:
 328:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 329:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 330:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 331:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 332:../../../platform/common/services/clock/mega/sysclk.h **** 
 333:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_32:
 334:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 335:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 336:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 337:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 338:../../../platform/common/services/clock/mega/sysclk.h **** 
 339:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_64:
 340:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 341:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 342:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 343:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 344:../../../platform/common/services/clock/mega/sysclk.h **** 
 345:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_128:
 346:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 347:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 348:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 349:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 350:../../../platform/common/services/clock/mega/sysclk.h **** 
 351:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_256:
 352:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 353:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 354:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 512;
 355:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 356:../../../platform/common/services/clock/mega/sysclk.h **** 
 357:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 358:../../../platform/common/services/clock/mega/sysclk.h **** 		return 0;
 359:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 360:../../../platform/common/services/clock/mega/sysclk.h **** }
 361:../../../platform/common/services/clock/mega/sysclk.h **** 
 362:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Enabling and disabling synchronous clocks */
 363:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
 364:../../../platform/common/services/clock/mega/sysclk.h **** 
 365:../../../platform/common/services/clock/mega/sysclk.h **** /**
 366:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Enable the clock to peripheral \a id on port \a port
 367:../../../platform/common/services/clock/mega/sysclk.h ****  *
 368:../../../platform/common/services/clock/mega/sysclk.h ****  * \param port ID of the port to which the module is connected (one of
 369:../../../platform/common/services/clock/mega/sysclk.h ****  * the \c power_red_id *definitions).
 370:../../../platform/common/services/clock/mega/sysclk.h ****  * \param id The ID (bitmask) of the peripheral module to be disabled.*
 371:../../../platform/common/services/clock/mega/sysclk.h ****  */
 372:../../../platform/common/services/clock/mega/sysclk.h **** extern void sysclk_enable_module(enum power_red_id port, uint8_t id);
 373:../../../platform/common/services/clock/mega/sysclk.h **** 
 374:../../../platform/common/services/clock/mega/sysclk.h **** /**
 375:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Disable the clock to peripheral \a id on port \a port
 376:../../../platform/common/services/clock/mega/sysclk.h ****  *
 377:../../../platform/common/services/clock/mega/sysclk.h ****  * \param port ID of the port to which the module is connected (one of
 378:../../../platform/common/services/clock/mega/sysclk.h ****  * the \c power_red_id *definitions).
 379:../../../platform/common/services/clock/mega/sysclk.h ****  * \param id The ID (bit mask) of the peripheral module to be disabled.
 380:../../../platform/common/services/clock/mega/sysclk.h ****  */
 381:../../../platform/common/services/clock/mega/sysclk.h **** extern void sysclk_disable_module(enum power_red_id port, uint8_t id);
 382:../../../platform/common/services/clock/mega/sysclk.h **** 
 383:../../../platform/common/services/clock/mega/sysclk.h **** /**
 384:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Enable a peripherals clock from its base address.
 385:../../../platform/common/services/clock/mega/sysclk.h ****  *
 386:../../../platform/common/services/clock/mega/sysclk.h ****  *  Enables the clock to a peripheral, given its base address. If the peripheral
 387:../../../platform/common/services/clock/mega/sysclk.h ****  *  has an associated clock on the HSB bus, this will be enabled also.
 388:../../../platform/common/services/clock/mega/sysclk.h ****  *
 389:../../../platform/common/services/clock/mega/sysclk.h ****  * \param module Pointer to the module's base address.
 390:../../../platform/common/services/clock/mega/sysclk.h ****  */
 391:../../../platform/common/services/clock/mega/sysclk.h **** static inline void sysclk_enable_peripheral_clock(const volatile void *module)
 392:../../../platform/common/services/clock/mega/sysclk.h **** {
  15               		.loc 1 392 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25 0004 00D0      		rcall .
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 6
  28 0006 CDB7      		in r28,__SP_L__
  29 0008 DEB7      		in r29,__SP_H__
  30               	.LCFI3:
  31               		.cfi_def_cfa_register 28
  32               	/* prologue: function */
  33               	/* frame size = 2 */
  34               	/* stack size = 4 */
  35               	.L__stack_usage = 4
  36 000a 9A83      		std Y+2,r25
  37 000c 8983      		std Y+1,r24
 393:../../../platform/common/services/clock/mega/sysclk.h **** 	if (module == NULL) {
  38               		.loc 1 393 0
  39 000e 8981      		ldd r24,Y+1
  40 0010 9A81      		ldd r25,Y+2
  41 0012 892B      		or r24,r25
  42 0014 01F4      		brne .+2
  43 0016 00C0      		rjmp .L14
 394:../../../platform/common/services/clock/mega/sysclk.h **** 		Assert(false);
 395:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 396:../../../platform/common/services/clock/mega/sysclk.h **** 
 397:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN0 && !MEGA_XX_UN1
 398:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &ADC) {
  44               		.loc 1 398 0
  45 0018 8981      		ldd r24,Y+1
  46 001a 9A81      		ldd r25,Y+2
  47 001c 8837      		cpi r24,120
  48 001e 9105      		cpc r25,__zero_reg__
  49 0020 01F4      		brne .L3
 399:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRADC_bm);
  50               		.loc 1 399 0
  51 0022 61E0      		ldi r22,lo8(1)
  52 0024 80E0      		ldi r24,0
  53 0026 0E94 0000 		call sysclk_enable_module
 400:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 401:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRPGA_bm);
  54               		.loc 1 401 0
  55 002a 60E1      		ldi r22,lo8(16)
  56 002c 80E0      		ldi r24,0
  57 002e 0E94 0000 		call sysclk_enable_module
 402:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 403:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &UCSR0A) {
 404:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRUSART0_bm);
 405:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 406:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 407:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &SPCR) {
 408:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRSPI_bm);
 409:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 410:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 411:../../../platform/common/services/clock/mega/sysclk.h **** 
 412:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &TCCR1A) {
 413:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM1_bm);
 414:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 415:../../../platform/common/services/clock/mega/sysclk.h **** 
 416:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX_UN2
 417:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &LCDCRA) {
 418:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRLCD_bm);
 419:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 420:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 421:../../../platform/common/services/clock/mega/sysclk.h **** 
 422:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN2
 423:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &TCCR0A) {
 424:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM0_bm);
 425:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR2A) {
 426:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM2_bm);
 427:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TWBR) {
 428:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTWI_bm);
 429:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 430:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 431:../../../platform/common/services/clock/mega/sysclk.h **** 
 432:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 433:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &UCSR1A) {
 434:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRUSART1_bm);
 435:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR3A) {
 436:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM3_bm);
 437:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR4A) {
 438:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM4_bm);
 439:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR5A) {
 440:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM5_bm);
 441:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TRX_CTRL_0) {
 442:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTRX24_bm);
 443:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 444:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 445:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 446:../../../platform/common/services/clock/mega/sysclk.h **** 	else {
 447:../../../platform/common/services/clock/mega/sysclk.h **** 		Assert(false);
 448:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 449:../../../platform/common/services/clock/mega/sysclk.h **** }
  58               		.loc 1 449 0
  59 0032 00C0      		rjmp .L14
  60               	.L3:
 403:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRUSART0_bm);
  61               		.loc 1 403 0
  62 0034 8981      		ldd r24,Y+1
  63 0036 9A81      		ldd r25,Y+2
  64 0038 803C      		cpi r24,-64
  65 003a 9105      		cpc r25,__zero_reg__
  66 003c 01F4      		brne .L4
 404:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  67               		.loc 1 404 0
  68 003e 62E0      		ldi r22,lo8(2)
  69 0040 80E0      		ldi r24,0
  70 0042 0E94 0000 		call sysclk_enable_module
  71               		.loc 1 449 0
  72 0046 00C0      		rjmp .L14
  73               	.L4:
 407:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRSPI_bm);
  74               		.loc 1 407 0
  75 0048 8981      		ldd r24,Y+1
  76 004a 9A81      		ldd r25,Y+2
  77 004c 8C34      		cpi r24,76
  78 004e 9105      		cpc r25,__zero_reg__
  79 0050 01F4      		brne .L5
 408:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  80               		.loc 1 408 0
  81 0052 64E0      		ldi r22,lo8(4)
  82 0054 80E0      		ldi r24,0
  83 0056 0E94 0000 		call sysclk_enable_module
  84               		.loc 1 449 0
  85 005a 00C0      		rjmp .L14
  86               	.L5:
 412:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM1_bm);
  87               		.loc 1 412 0
  88 005c 8981      		ldd r24,Y+1
  89 005e 9A81      		ldd r25,Y+2
  90 0060 8038      		cpi r24,-128
  91 0062 9105      		cpc r25,__zero_reg__
  92 0064 01F4      		brne .L6
 413:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  93               		.loc 1 413 0
  94 0066 68E0      		ldi r22,lo8(8)
  95 0068 80E0      		ldi r24,0
  96 006a 0E94 0000 		call sysclk_enable_module
  97               		.loc 1 449 0
  98 006e 00C0      		rjmp .L14
  99               	.L6:
 423:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM0_bm);
 100               		.loc 1 423 0
 101 0070 8981      		ldd r24,Y+1
 102 0072 9A81      		ldd r25,Y+2
 103 0074 8434      		cpi r24,68
 104 0076 9105      		cpc r25,__zero_reg__
 105 0078 01F4      		brne .L7
 424:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR2A) {
 106               		.loc 1 424 0
 107 007a 60E2      		ldi r22,lo8(32)
 108 007c 80E0      		ldi r24,0
 109 007e 0E94 0000 		call sysclk_enable_module
 110               		.loc 1 449 0
 111 0082 00C0      		rjmp .L14
 112               	.L7:
 425:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM2_bm);
 113               		.loc 1 425 0
 114 0084 8981      		ldd r24,Y+1
 115 0086 9A81      		ldd r25,Y+2
 116 0088 803B      		cpi r24,-80
 117 008a 9105      		cpc r25,__zero_reg__
 118 008c 01F4      		brne .L8
 426:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TWBR) {
 119               		.loc 1 426 0
 120 008e 60E4      		ldi r22,lo8(64)
 121 0090 80E0      		ldi r24,0
 122 0092 0E94 0000 		call sysclk_enable_module
 123               		.loc 1 449 0
 124 0096 00C0      		rjmp .L14
 125               	.L8:
 427:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTWI_bm);
 126               		.loc 1 427 0
 127 0098 8981      		ldd r24,Y+1
 128 009a 9A81      		ldd r25,Y+2
 129 009c 883B      		cpi r24,-72
 130 009e 9105      		cpc r25,__zero_reg__
 131 00a0 01F4      		brne .L9
 428:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 132               		.loc 1 428 0
 133 00a2 60E8      		ldi r22,lo8(-128)
 134 00a4 80E0      		ldi r24,0
 135 00a6 0E94 0000 		call sysclk_enable_module
 136               		.loc 1 449 0
 137 00aa 00C0      		rjmp .L14
 138               	.L9:
 433:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRUSART1_bm);
 139               		.loc 1 433 0
 140 00ac 8981      		ldd r24,Y+1
 141 00ae 9A81      		ldd r25,Y+2
 142 00b0 883C      		cpi r24,-56
 143 00b2 9105      		cpc r25,__zero_reg__
 144 00b4 01F4      		brne .L10
 434:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR3A) {
 145               		.loc 1 434 0
 146 00b6 61E0      		ldi r22,lo8(1)
 147 00b8 81E0      		ldi r24,lo8(1)
 148 00ba 0E94 0000 		call sysclk_enable_module
 149               		.loc 1 449 0
 150 00be 00C0      		rjmp .L14
 151               	.L10:
 435:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM3_bm);
 152               		.loc 1 435 0
 153 00c0 8981      		ldd r24,Y+1
 154 00c2 9A81      		ldd r25,Y+2
 155 00c4 8039      		cpi r24,-112
 156 00c6 9105      		cpc r25,__zero_reg__
 157 00c8 01F4      		brne .L11
 436:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR4A) {
 158               		.loc 1 436 0
 159 00ca 68E0      		ldi r22,lo8(8)
 160 00cc 81E0      		ldi r24,lo8(1)
 161 00ce 0E94 0000 		call sysclk_enable_module
 162               		.loc 1 449 0
 163 00d2 00C0      		rjmp .L14
 164               	.L11:
 437:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM4_bm);
 165               		.loc 1 437 0
 166 00d4 8981      		ldd r24,Y+1
 167 00d6 9A81      		ldd r25,Y+2
 168 00d8 803A      		cpi r24,-96
 169 00da 9105      		cpc r25,__zero_reg__
 170 00dc 01F4      		brne .L12
 438:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR5A) {
 171               		.loc 1 438 0
 172 00de 60E1      		ldi r22,lo8(16)
 173 00e0 81E0      		ldi r24,lo8(1)
 174 00e2 0E94 0000 		call sysclk_enable_module
 175               		.loc 1 449 0
 176 00e6 00C0      		rjmp .L14
 177               	.L12:
 439:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM5_bm);
 178               		.loc 1 439 0
 179 00e8 8981      		ldd r24,Y+1
 180 00ea 9A81      		ldd r25,Y+2
 181 00ec 8032      		cpi r24,32
 182 00ee 9140      		sbci r25,1
 183 00f0 01F4      		brne .L13
 440:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TRX_CTRL_0) {
 184               		.loc 1 440 0
 185 00f2 60E2      		ldi r22,lo8(32)
 186 00f4 81E0      		ldi r24,lo8(1)
 187 00f6 0E94 0000 		call sysclk_enable_module
 188               		.loc 1 449 0
 189 00fa 00C0      		rjmp .L14
 190               	.L13:
 441:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTRX24_bm);
 191               		.loc 1 441 0
 192 00fc 8981      		ldd r24,Y+1
 193 00fe 9A81      		ldd r25,Y+2
 194 0100 8334      		cpi r24,67
 195 0102 9140      		sbci r25,1
 196 0104 01F4      		brne .L14
 442:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 197               		.loc 1 442 0
 198 0106 60E4      		ldi r22,lo8(64)
 199 0108 81E0      		ldi r24,lo8(1)
 200 010a 0E94 0000 		call sysclk_enable_module
 201               	.L14:
 202               		.loc 1 449 0
 203 010e 0000      		nop
 204               	/* epilogue start */
 205 0110 0F90      		pop __tmp_reg__
 206 0112 0F90      		pop __tmp_reg__
 207 0114 DF91      		pop r29
 208 0116 CF91      		pop r28
 209 0118 0895      		ret
 210               		.cfi_endproc
 211               	.LFE69:
 214               	__portable_avr_delay_cycles:
 215               	.LFB74:
 216               		.file 2 "../../../platform/common/services/delay/mega_rf/cycle_counter.h"
   1:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
   2:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \file
   3:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   4:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \brief AVR functions for busy-wait delay loops
   5:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   6:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Copyright (c) 2011 - 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   8:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_start
   9:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  10:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \page License
  11:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  12:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  15:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  18:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  22:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  25:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  28:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  40:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_stop
  41:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  42:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  43:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifndef _cycle_counter_h_
  44:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #define _cycle_counter_h_
  45:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  46:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifdef __cplusplus
  47:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** extern "C" {
  48:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #endif
  49:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  50:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #include <compiler.h>
  51:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  52:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
  53:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @name Convenience functions for busy-wait delay loops
  54:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  55:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def delay_cycles
  56:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of CPU cycles.
  57:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param n number of CPU cycles to wait
  58:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  59:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_ms
  60:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of milliseconds.
  61:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of milliseconds to wait
  62:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  63:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  64:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_us
  65:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of microseconds.
  66:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of microseconds to wait
  67:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  68:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  69:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_ms_2_cy
  70:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert milli-seconds into CPU cycles.
  71:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of milliseconds
  72:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  73:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  74:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  75:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_us_2_cy
  76:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert micro-seconds into CPU cycles.
  77:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of microseconds
  78:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  79:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  80:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  81:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @{
  82:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  83:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** __always_optimize
  84:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** static inline void __portable_avr_delay_cycles(unsigned long n)
  85:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** {
 217               		.loc 2 85 0
 218               		.cfi_startproc
 219               	/* prologue: function */
 220               	/* frame size = 0 */
 221               	/* stack size = 0 */
 222               	.L__stack_usage = 0
 223               	.L16:
  86:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 	do { barrier(); } while (--n);
 224               		.loc 2 86 0 discriminator 1
 225 011a 6150      		subi r22,1
 226 011c 7109      		sbc r23,__zero_reg__
 227 011e 8109      		sbc r24,__zero_reg__
 228 0120 9109      		sbc r25,__zero_reg__
 229 0122 01F4      		brne .L16
 230               	/* epilogue start */
  87:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** }
 231               		.loc 2 87 0
 232 0124 0895      		ret
 233               		.cfi_endproc
 234               	.LFE74:
 236               		.section	.bss.phyState,"aw",@nobits
 239               	phyState:
 240 0000 00        		.zero	1
 241               		.section	.bss.phyRxBuffer,"aw",@nobits
 244               	phyRxBuffer:
 245 0000 0000 0000 		.zero	128
 245      0000 0000 
 245      0000 0000 
 245      0000 0000 
 245      0000 0000 
 246               		.section	.bss.phyRxState,"aw",@nobits
 249               	phyRxState:
 250 0000 00        		.zero	1
 251               		.text
 252               	.global	PHY_Init
 254               	PHY_Init:
 255               	.LFB75:
 256               		.file 3 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c"
   1:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /**
   2:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \file phy.c
   3:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   4:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \brief ATMEGAxxxRFA1 PHY implementation
   5:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   6:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * Copyright (C) 2014, Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   8:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  10:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  13:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  16:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  20:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  23:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  26:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  38:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  40:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  41:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  */
  42:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  43:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ATMEGARFA1
  44:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  45:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Includes ---------------------------------------------------------------*/
  46:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "phy.h"
  47:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "delay.h"
  48:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "sal.h"
  49:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "atmegarfa1.h"
  50:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  51:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Definitions ------------------------------------------------------------*/
  52:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #define PHY_CRC_SIZE          2
  53:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #define IRQ_CLEAR_VALUE       0xff
  54:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Types ------------------------------------------------------------------*/
  55:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** typedef enum {
  56:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_INITIAL,
  57:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_IDLE,
  58:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_SLEEP,
  59:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_TX_WAIT_END,
  60:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** } PhyState_t;
  61:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  62:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Prototypes -------------------------------------------------------------*/
  63:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phySetRxState(void);
  64:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  65:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Variables --------------------------------------------------------------*/
  66:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static PhyState_t phyState = PHY_STATE_INITIAL;
  67:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static uint8_t phyRxBuffer[128];
  68:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static bool phyRxState;
  69:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  70:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Implementations --------------------------------------------------------*/
  71:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  72:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
  73:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
  74:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Init(void)
  75:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 257               		.loc 3 75 0
 258               		.cfi_startproc
 259 0126 0F93      		push r16
 260               	.LCFI4:
 261               		.cfi_def_cfa_offset 3
 262               		.cfi_offset 16, -2
 263 0128 1F93      		push r17
 264               	.LCFI5:
 265               		.cfi_def_cfa_offset 4
 266               		.cfi_offset 17, -3
 267 012a CF93      		push r28
 268               	.LCFI6:
 269               		.cfi_def_cfa_offset 5
 270               		.cfi_offset 28, -4
 271 012c DF93      		push r29
 272               	.LCFI7:
 273               		.cfi_def_cfa_offset 6
 274               		.cfi_offset 29, -5
 275 012e CDB7      		in r28,__SP_L__
 276 0130 DEB7      		in r29,__SP_H__
 277               	.LCFI8:
 278               		.cfi_def_cfa_register 28
 279               	/* prologue: function */
 280               	/* frame size = 0 */
 281               	/* stack size = 4 */
 282               	.L__stack_usage = 4
  76:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sysclk_enable_peripheral_clock(&TRX_CTRL_0);
 283               		.loc 3 76 0
 284 0132 83E4      		ldi r24,lo8(67)
 285 0134 91E0      		ldi r25,lo8(1)
 286 0136 0E94 0000 		call sysclk_enable_peripheral_clock
  77:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  78:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.trxrst = 1;
 287               		.loc 3 78 0
 288 013a 89E3      		ldi r24,lo8(57)
 289 013c 91E0      		ldi r25,lo8(1)
 290 013e FC01      		movw r30,r24
 291 0140 2081      		ld r18,Z
 292 0142 2160      		ori r18,lo8(1)
 293 0144 FC01      		movw r30,r24
 294 0146 2083      		st Z,r18
  79:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  80:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyRxState = false;
 295               		.loc 3 80 0
 296 0148 1092 0000 		sts phyRxState,__zero_reg__
  81:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_IDLE;
 297               		.loc 3 81 0
 298 014c 81E0      		ldi r24,lo8(1)
 299 014e 8093 0000 		sts phyState,r24
  82:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  83:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 300               		.loc 3 83 0
 301 0152 88E0      		ldi r24,lo8(8)
 302 0154 0E94 0000 		call phyTrxSetState
  84:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  85:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_2_REG_s.rxSafeMode = 1;
 303               		.loc 3 85 0
 304 0158 8CE4      		ldi r24,lo8(76)
 305 015a 91E0      		ldi r25,lo8(1)
 306 015c FC01      		movw r30,r24
 307 015e 2081      		ld r18,Z
 308 0160 2068      		ori r18,lo8(-128)
 309 0162 FC01      		movw r30,r24
 310 0164 2083      		st Z,r18
  86:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  87:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
  88:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = (uint8_t)PHY_RandomReq();
 311               		.loc 3 88 0
 312 0166 0DE6      		ldi r16,lo8(109)
 313 0168 11E0      		ldi r17,lo8(1)
 314 016a 0E94 0000 		call PHY_RandomReq
 315 016e F801      		movw r30,r16
 316 0170 8083      		st Z,r24
  89:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
  90:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  91:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
  92:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antCtrl = 2;
 317               		.loc 3 92 0
 318 0172 8DE4      		ldi r24,lo8(77)
 319 0174 91E0      		ldi r25,lo8(1)
 320 0176 FC01      		movw r30,r24
 321 0178 2081      		ld r18,Z
 322 017a 2C7F      		andi r18,lo8(-4)
 323 017c 2260      		ori r18,lo8(2)
 324 017e FC01      		movw r30,r24
 325 0180 2083      		st Z,r18
  93:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	RX_CTRL_REG_s.pdtThres = 0x03;
 326               		.loc 3 93 0
 327 0182 8AE4      		ldi r24,lo8(74)
 328 0184 91E0      		ldi r25,lo8(1)
 329 0186 FC01      		movw r30,r24
 330 0188 2081      		ld r18,Z
 331 018a 207F      		andi r18,lo8(-16)
 332 018c 2360      		ori r18,lo8(3)
 333 018e FC01      		movw r30,r24
 334 0190 2083      		st Z,r18
  94:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 1;
 335               		.loc 3 94 0
 336 0192 8DE4      		ldi r24,lo8(77)
 337 0194 91E0      		ldi r25,lo8(1)
 338 0196 FC01      		movw r30,r24
 339 0198 2081      		ld r18,Z
 340 019a 2860      		ori r18,lo8(8)
 341 019c FC01      		movw r30,r24
 342 019e 2083      		st Z,r18
  95:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 1;
 343               		.loc 3 95 0
 344 01a0 8DE4      		ldi r24,lo8(77)
 345 01a2 91E0      		ldi r25,lo8(1)
 346 01a4 FC01      		movw r30,r24
 347 01a6 2081      		ld r18,Z
 348 01a8 2460      		ori r18,lo8(4)
 349 01aa FC01      		movw r30,r24
 350 01ac 2083      		st Z,r18
  96:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #else
  97:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DEFAULT != 0)
  98:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
  99:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antCtrl = ANTENNA_DEFAULT;
 100:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DEFAULT
 101:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // ANTENNA_DIVERSITY
 102:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 103:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 1;
 351               		.loc 3 103 0
 352 01ae 84E4      		ldi r24,lo8(68)
 353 01b0 91E0      		ldi r25,lo8(1)
 354 01b2 FC01      		movw r30,r24
 355 01b4 2081      		ld r18,Z
 356 01b6 2068      		ori r18,lo8(-128)
 357 01b8 FC01      		movw r30,r24
 358 01ba 2083      		st Z,r18
 104:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 105:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 359               		.loc 3 105 0
 360 01bc 0000      		nop
 361               	/* epilogue start */
 362 01be DF91      		pop r29
 363 01c0 CF91      		pop r28
 364 01c2 1F91      		pop r17
 365 01c4 0F91      		pop r16
 366 01c6 0895      		ret
 367               		.cfi_endproc
 368               	.LFE75:
 370               	.global	PHY_ResetRadio
 372               	PHY_ResetRadio:
 373               	.LFB76:
 106:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 107:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_ResetRadio(void)
 108:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 374               		.loc 3 108 0
 375               		.cfi_startproc
 376 01c8 CF93      		push r28
 377               	.LCFI9:
 378               		.cfi_def_cfa_offset 3
 379               		.cfi_offset 28, -2
 380 01ca DF93      		push r29
 381               	.LCFI10:
 382               		.cfi_def_cfa_offset 4
 383               		.cfi_offset 29, -3
 384 01cc CDB7      		in r28,__SP_L__
 385 01ce DEB7      		in r29,__SP_H__
 386               	.LCFI11:
 387               		.cfi_def_cfa_register 28
 388               	/* prologue: function */
 389               	/* frame size = 0 */
 390               	/* stack size = 2 */
 391               	.L__stack_usage = 2
 109:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.trxrst = 1;
 392               		.loc 3 109 0
 393 01d0 89E3      		ldi r24,lo8(57)
 394 01d2 91E0      		ldi r25,lo8(1)
 395 01d4 FC01      		movw r30,r24
 396 01d6 2081      		ld r18,Z
 397 01d8 2160      		ori r18,lo8(1)
 398 01da FC01      		movw r30,r24
 399 01dc 2083      		st Z,r18
 110:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 400               		.loc 3 110 0
 401 01de 0000      		nop
 402               	/* epilogue start */
 403 01e0 DF91      		pop r29
 404 01e2 CF91      		pop r28
 405 01e4 0895      		ret
 406               		.cfi_endproc
 407               	.LFE76:
 409               	.global	PHY_SetTdmaMode
 411               	PHY_SetTdmaMode:
 412               	.LFB77:
 111:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 112:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetTdmaMode(bool mode)
 113:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 413               		.loc 3 113 0
 414               		.cfi_startproc
 415 01e6 CF93      		push r28
 416               	.LCFI12:
 417               		.cfi_def_cfa_offset 3
 418               		.cfi_offset 28, -2
 419 01e8 DF93      		push r29
 420               	.LCFI13:
 421               		.cfi_def_cfa_offset 4
 422               		.cfi_offset 29, -3
 423 01ea 1F92      		push __zero_reg__
 424               	.LCFI14:
 425               		.cfi_def_cfa_offset 5
 426 01ec CDB7      		in r28,__SP_L__
 427 01ee DEB7      		in r29,__SP_H__
 428               	.LCFI15:
 429               		.cfi_def_cfa_register 28
 430               	/* prologue: function */
 431               	/* frame size = 1 */
 432               	/* stack size = 3 */
 433               	.L__stack_usage = 3
 434 01f0 8983      		std Y+1,r24
 114:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(mode)
 435               		.loc 3 114 0
 436 01f2 8981      		ldd r24,Y+1
 437 01f4 8823      		tst r24
 438 01f6 01F0      		breq .L22
 115:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 116:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 0;
 439               		.loc 3 116 0
 440 01f8 8CE6      		ldi r24,lo8(108)
 441 01fa 91E0      		ldi r25,lo8(1)
 442 01fc FC01      		movw r30,r24
 443 01fe 2081      		ld r18,Z
 444 0200 2F70      		andi r18,lo8(15)
 445 0202 FC01      		movw r30,r24
 446 0204 2083      		st Z,r18
 117:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 7;
 447               		.loc 3 117 0
 448 0206 8CE6      		ldi r24,lo8(108)
 449 0208 91E0      		ldi r25,lo8(1)
 450 020a FC01      		movw r30,r24
 451 020c 2081      		ld r18,Z
 452 020e 2E60      		ori r18,lo8(14)
 453 0210 FC01      		movw r30,r24
 454 0212 2083      		st Z,r18
 118:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	
 119:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;	// Disable ACK even if requested		
 455               		.loc 3 119 0
 456 0214 8EE6      		ldi r24,lo8(110)
 457 0216 91E0      		ldi r25,lo8(1)
 458 0218 FC01      		movw r30,r24
 459 021a 2081      		ld r18,Z
 460 021c 2061      		ori r18,lo8(16)
 461 021e FC01      		movw r30,r24
 462 0220 2083      		st Z,r18
 120:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 121:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	else
 122:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 123:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 3;
 124:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 125:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		
 126:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 127:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 128:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 463               		.loc 3 128 0
 464 0222 00C0      		rjmp .L24
 465               	.L22:
 123:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 466               		.loc 3 123 0
 467 0224 8CE6      		ldi r24,lo8(108)
 468 0226 91E0      		ldi r25,lo8(1)
 469 0228 FC01      		movw r30,r24
 470 022a 2081      		ld r18,Z
 471 022c 2F70      		andi r18,lo8(15)
 472 022e 2063      		ori r18,lo8(48)
 473 0230 FC01      		movw r30,r24
 474 0232 2083      		st Z,r18
 124:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		
 475               		.loc 3 124 0
 476 0234 8CE6      		ldi r24,lo8(108)
 477 0236 91E0      		ldi r25,lo8(1)
 478 0238 FC01      		movw r30,r24
 479 023a 2081      		ld r18,Z
 480 023c 217F      		andi r18,lo8(-15)
 481 023e 2860      		ori r18,lo8(8)
 482 0240 FC01      		movw r30,r24
 483 0242 2083      		st Z,r18
 126:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 484               		.loc 3 126 0
 485 0244 8EE6      		ldi r24,lo8(110)
 486 0246 91E0      		ldi r25,lo8(1)
 487 0248 FC01      		movw r30,r24
 488 024a 2081      		ld r18,Z
 489 024c 2F7E      		andi r18,lo8(-17)
 490 024e FC01      		movw r30,r24
 491 0250 2083      		st Z,r18
 492               	.L24:
 493               		.loc 3 128 0
 494 0252 0000      		nop
 495               	/* epilogue start */
 496 0254 0F90      		pop __tmp_reg__
 497 0256 DF91      		pop r29
 498 0258 CF91      		pop r28
 499 025a 0895      		ret
 500               		.cfi_endproc
 501               	.LFE77:
 503               	.global	PHY_SetPromiscuousMode
 505               	PHY_SetPromiscuousMode:
 506               	.LFB78:
 129:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 130:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPromiscuousMode(bool mode)
 131:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 507               		.loc 3 131 0
 508               		.cfi_startproc
 509 025c CF93      		push r28
 510               	.LCFI16:
 511               		.cfi_def_cfa_offset 3
 512               		.cfi_offset 28, -2
 513 025e DF93      		push r29
 514               	.LCFI17:
 515               		.cfi_def_cfa_offset 4
 516               		.cfi_offset 29, -3
 517 0260 CDB7      		in r28,__SP_L__
 518 0262 DEB7      		in r29,__SP_H__
 519               	.LCFI18:
 520               		.cfi_def_cfa_register 28
 521 0264 2997      		sbiw r28,9
 522               	.LCFI19:
 523               		.cfi_def_cfa_offset 13
 524 0266 0FB6      		in __tmp_reg__,__SREG__
 525 0268 F894      		cli
 526 026a DEBF      		out __SP_H__,r29
 527 026c 0FBE      		out __SREG__,__tmp_reg__
 528 026e CDBF      		out __SP_L__,r28
 529               	/* prologue: function */
 530               	/* frame size = 9 */
 531               	/* stack size = 11 */
 532               	.L__stack_usage = 11
 533 0270 8987      		std Y+9,r24
 132:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t ieee_address[] = { 0, 0, 0, 0, 0, 0, 0, 0 };
 534               		.loc 3 132 0
 535 0272 28E0      		ldi r18,lo8(8)
 536 0274 CE01      		movw r24,r28
 537 0276 0196      		adiw r24,1
 538 0278 FC01      		movw r30,r24
 539 027a 322F      		mov r19,r18
 540               		0:
 541 027c 1192      		st Z+,__zero_reg__
 542 027e 3A95      		dec r19
 543 0280 01F4      		brne 0b
 133:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 134:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(mode)
 544               		.loc 3 134 0
 545 0282 8985      		ldd r24,Y+9
 546 0284 8823      		tst r24
 547 0286 01F0      		breq .L26
 135:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 136:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetShortAddr(0);
 548               		.loc 3 136 0
 549 0288 80E0      		ldi r24,0
 550 028a 90E0      		ldi r25,0
 551 028c 0E94 0000 		call PHY_SetShortAddr
 137:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetPanId(0);
 552               		.loc 3 137 0
 553 0290 80E0      		ldi r24,0
 554 0292 90E0      		ldi r25,0
 555 0294 0E94 0000 		call PHY_SetPanId
 138:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetIEEEAddr(ieee_address);
 556               		.loc 3 138 0
 557 0298 CE01      		movw r24,r28
 558 029a 0196      		adiw r24,1
 559 029c 0E94 0000 		call PHY_SetIEEEAddr
 139:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 140:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** // AACK_UPLD_RES_FT = 1, AACK_FLT_RES_FT = 0:
 141:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	Any non-corrupted frame with a reserved frame type is indicated by a
 142:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	TRX24_RX_END interrupt. No further address filtering is applied on those frames.
 143:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	A TRX24_AMI interrupt is never generated and the acknowledgment subfield is
 144:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	ignored.
 145:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 146:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackPromMode = 1;	// Enable promiscuous mode
 560               		.loc 3 146 0
 561 02a0 87E5      		ldi r24,lo8(87)
 562 02a2 91E0      		ldi r25,lo8(1)
 563 02a4 FC01      		movw r30,r24
 564 02a6 2081      		ld r18,Z
 565 02a8 2260      		ori r18,lo8(2)
 566 02aa FC01      		movw r30,r24
 567 02ac 2083      		st Z,r18
 147:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackUpldResFt = 1;	// Enable reserved frame type reception ; this was changed to
 568               		.loc 3 147 0
 569 02ae 87E5      		ldi r24,lo8(87)
 570 02b0 91E0      		ldi r25,lo8(1)
 571 02b2 FC01      		movw r30,r24
 572 02b4 2081      		ld r18,Z
 573 02b6 2061      		ori r18,lo8(16)
 574 02b8 FC01      		movw r30,r24
 575 02ba 2083      		st Z,r18
 148:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****                                         // so that the addres isn't checked by filter
 149:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackFltrResFt = 0;	// Disable filter of reserved frame types
 576               		.loc 3 149 0
 577 02bc 87E5      		ldi r24,lo8(87)
 578 02be 91E0      		ldi r25,lo8(1)
 579 02c0 FC01      		movw r30,r24
 580 02c2 2081      		ld r18,Z
 581 02c4 2F7D      		andi r18,lo8(-33)
 582 02c6 FC01      		movw r30,r24
 583 02c8 2083      		st Z,r18
 150:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;		// Disable generation of acknowledgment
 584               		.loc 3 150 0
 585 02ca 8EE6      		ldi r24,lo8(110)
 586 02cc 91E0      		ldi r25,lo8(1)
 587 02ce FC01      		movw r30,r24
 588 02d0 2081      		ld r18,Z
 589 02d2 2061      		ori r18,lo8(16)
 590 02d4 FC01      		movw r30,r24
 591 02d6 2083      		st Z,r18
 151:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 152:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	else
 153:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 154:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG = 0;
 155:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 156:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 157:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 592               		.loc 3 157 0
 593 02d8 00C0      		rjmp .L28
 594               	.L26:
 154:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 595               		.loc 3 154 0
 596 02da 87E5      		ldi r24,lo8(87)
 597 02dc 91E0      		ldi r25,lo8(1)
 598 02de FC01      		movw r30,r24
 599 02e0 1082      		st Z,__zero_reg__
 155:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 600               		.loc 3 155 0
 601 02e2 8EE6      		ldi r24,lo8(110)
 602 02e4 91E0      		ldi r25,lo8(1)
 603 02e6 FC01      		movw r30,r24
 604 02e8 2081      		ld r18,Z
 605 02ea 2F7E      		andi r18,lo8(-17)
 606 02ec FC01      		movw r30,r24
 607 02ee 2083      		st Z,r18
 608               	.L28:
 609               		.loc 3 157 0
 610 02f0 0000      		nop
 611               	/* epilogue start */
 612 02f2 2996      		adiw r28,9
 613 02f4 0FB6      		in __tmp_reg__,__SREG__
 614 02f6 F894      		cli
 615 02f8 DEBF      		out __SP_H__,r29
 616 02fa 0FBE      		out __SREG__,__tmp_reg__
 617 02fc CDBF      		out __SP_L__,r28
 618 02fe DF91      		pop r29
 619 0300 CF91      		pop r28
 620 0302 0895      		ret
 621               		.cfi_endproc
 622               	.LFE78:
 624               	.global	PHY_SetOptimizedCSMAValues
 626               	PHY_SetOptimizedCSMAValues:
 627               	.LFB79:
 158:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 159:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetOptimizedCSMAValues(void)
 160:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 628               		.loc 3 160 0
 629               		.cfi_startproc
 630 0304 0F93      		push r16
 631               	.LCFI20:
 632               		.cfi_def_cfa_offset 3
 633               		.cfi_offset 16, -2
 634 0306 1F93      		push r17
 635               	.LCFI21:
 636               		.cfi_def_cfa_offset 4
 637               		.cfi_offset 17, -3
 638 0308 CF93      		push r28
 639               	.LCFI22:
 640               		.cfi_def_cfa_offset 5
 641               		.cfi_offset 28, -4
 642 030a DF93      		push r29
 643               	.LCFI23:
 644               		.cfi_def_cfa_offset 6
 645               		.cfi_offset 29, -5
 646 030c CDB7      		in r28,__SP_L__
 647 030e DEB7      		in r29,__SP_H__
 648               	.LCFI24:
 649               		.cfi_def_cfa_register 28
 650               	/* prologue: function */
 651               	/* frame size = 0 */
 652               	/* stack size = 4 */
 653               	.L__stack_usage = 4
 161:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	// CSMA_BE_REG_s.minBe = 0x08;
 162:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	// CSMA_BE_REG_s.maxBe = 0x08;
 163:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = (uint8_t)PHY_RandomReq();
 654               		.loc 3 163 0
 655 0310 0DE6      		ldi r16,lo8(109)
 656 0312 11E0      		ldi r17,lo8(1)
 657 0314 0E94 0000 		call PHY_RandomReq
 658 0318 F801      		movw r30,r16
 659 031a 8083      		st Z,r24
 164:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 660               		.loc 3 164 0
 661 031c 0000      		nop
 662               	/* epilogue start */
 663 031e DF91      		pop r29
 664 0320 CF91      		pop r28
 665 0322 1F91      		pop r17
 666 0324 0F91      		pop r16
 667 0326 0895      		ret
 668               		.cfi_endproc
 669               	.LFE79:
 671               	.global	PHY_SetRxState
 673               	PHY_SetRxState:
 674               	.LFB80:
 165:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 166:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 167:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 168:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetRxState(bool rx)
 169:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 675               		.loc 3 169 0
 676               		.cfi_startproc
 677 0328 CF93      		push r28
 678               	.LCFI25:
 679               		.cfi_def_cfa_offset 3
 680               		.cfi_offset 28, -2
 681 032a DF93      		push r29
 682               	.LCFI26:
 683               		.cfi_def_cfa_offset 4
 684               		.cfi_offset 29, -3
 685 032c 1F92      		push __zero_reg__
 686               	.LCFI27:
 687               		.cfi_def_cfa_offset 5
 688 032e CDB7      		in r28,__SP_L__
 689 0330 DEB7      		in r29,__SP_H__
 690               	.LCFI28:
 691               		.cfi_def_cfa_register 28
 692               	/* prologue: function */
 693               	/* frame size = 1 */
 694               	/* stack size = 3 */
 695               	.L__stack_usage = 3
 696 0332 8983      		std Y+1,r24
 170:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyRxState = rx;
 697               		.loc 3 170 0
 698 0334 8981      		ldd r24,Y+1
 699 0336 8093 0000 		sts phyRxState,r24
 171:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 700               		.loc 3 171 0
 701 033a 0E94 0000 		call phySetRxState
 172:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 702               		.loc 3 172 0
 703 033e 0000      		nop
 704               	/* epilogue start */
 705 0340 0F90      		pop __tmp_reg__
 706 0342 DF91      		pop r29
 707 0344 CF91      		pop r28
 708 0346 0895      		ret
 709               		.cfi_endproc
 710               	.LFE80:
 712               	.global	PHY_SetChannel
 714               	PHY_SetChannel:
 715               	.LFB81:
 173:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 174:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 175:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 176:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetChannel(uint8_t channel)
 177:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 716               		.loc 3 177 0
 717               		.cfi_startproc
 718 0348 CF93      		push r28
 719               	.LCFI29:
 720               		.cfi_def_cfa_offset 3
 721               		.cfi_offset 28, -2
 722 034a DF93      		push r29
 723               	.LCFI30:
 724               		.cfi_def_cfa_offset 4
 725               		.cfi_offset 29, -3
 726 034c 1F92      		push __zero_reg__
 727               	.LCFI31:
 728               		.cfi_def_cfa_offset 5
 729 034e CDB7      		in r28,__SP_L__
 730 0350 DEB7      		in r29,__SP_H__
 731               	.LCFI32:
 732               		.cfi_def_cfa_register 28
 733               	/* prologue: function */
 734               	/* frame size = 1 */
 735               	/* stack size = 3 */
 736               	.L__stack_usage = 3
 737 0352 8983      		std Y+1,r24
 178:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_CC_CCA_REG_s.channel = channel;
 738               		.loc 3 178 0
 739 0354 88E4      		ldi r24,lo8(72)
 740 0356 91E0      		ldi r25,lo8(1)
 741 0358 2981      		ldd r18,Y+1
 742 035a 2F71      		andi r18,lo8(31)
 743 035c 2F71      		andi r18,lo8(31)
 744 035e FC01      		movw r30,r24
 745 0360 3081      		ld r19,Z
 746 0362 307E      		andi r19,lo8(-32)
 747 0364 232B      		or r18,r19
 748 0366 FC01      		movw r30,r24
 749 0368 2083      		st Z,r18
 179:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 750               		.loc 3 179 0
 751 036a 0000      		nop
 752               	/* epilogue start */
 753 036c 0F90      		pop __tmp_reg__
 754 036e DF91      		pop r29
 755 0370 CF91      		pop r28
 756 0372 0895      		ret
 757               		.cfi_endproc
 758               	.LFE81:
 760               	.global	PHY_SetPanId
 762               	PHY_SetPanId:
 763               	.LFB82:
 180:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 181:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 182:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 183:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPanId(uint16_t panId)
 184:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 764               		.loc 3 184 0
 765               		.cfi_startproc
 766 0374 CF93      		push r28
 767               	.LCFI33:
 768               		.cfi_def_cfa_offset 3
 769               		.cfi_offset 28, -2
 770 0376 DF93      		push r29
 771               	.LCFI34:
 772               		.cfi_def_cfa_offset 4
 773               		.cfi_offset 29, -3
 774 0378 00D0      		rcall .
 775 037a 00D0      		rcall .
 776               	.LCFI35:
 777               		.cfi_def_cfa_offset 8
 778 037c CDB7      		in r28,__SP_L__
 779 037e DEB7      		in r29,__SP_H__
 780               	.LCFI36:
 781               		.cfi_def_cfa_register 28
 782               	/* prologue: function */
 783               	/* frame size = 4 */
 784               	/* stack size = 6 */
 785               	.L__stack_usage = 6
 786 0380 9C83      		std Y+4,r25
 787 0382 8B83      		std Y+3,r24
 185:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *d = (uint8_t *)&panId;
 788               		.loc 3 185 0
 789 0384 CE01      		movw r24,r28
 790 0386 0396      		adiw r24,3
 791 0388 9A83      		std Y+2,r25
 792 038a 8983      		std Y+1,r24
 186:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 187:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PAN_ID_0_REG = d[0];
 793               		.loc 3 187 0
 794 038c 82E6      		ldi r24,lo8(98)
 795 038e 91E0      		ldi r25,lo8(1)
 796 0390 2981      		ldd r18,Y+1
 797 0392 3A81      		ldd r19,Y+2
 798 0394 F901      		movw r30,r18
 799 0396 2081      		ld r18,Z
 800 0398 FC01      		movw r30,r24
 801 039a 2083      		st Z,r18
 188:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PAN_ID_1_REG = d[1];
 802               		.loc 3 188 0
 803 039c 83E6      		ldi r24,lo8(99)
 804 039e 91E0      		ldi r25,lo8(1)
 805 03a0 2981      		ldd r18,Y+1
 806 03a2 3A81      		ldd r19,Y+2
 807 03a4 F901      		movw r30,r18
 808 03a6 2181      		ldd r18,Z+1
 809 03a8 FC01      		movw r30,r24
 810 03aa 2083      		st Z,r18
 189:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 811               		.loc 3 189 0
 812 03ac 0000      		nop
 813               	/* epilogue start */
 814 03ae 0F90      		pop __tmp_reg__
 815 03b0 0F90      		pop __tmp_reg__
 816 03b2 0F90      		pop __tmp_reg__
 817 03b4 0F90      		pop __tmp_reg__
 818 03b6 DF91      		pop r29
 819 03b8 CF91      		pop r28
 820 03ba 0895      		ret
 821               		.cfi_endproc
 822               	.LFE82:
 824               	.global	PHY_SetShortAddr
 826               	PHY_SetShortAddr:
 827               	.LFB83:
 190:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 191:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 192:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 193:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetShortAddr(uint16_t addr)
 194:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 828               		.loc 3 194 0
 829               		.cfi_startproc
 830 03bc CF93      		push r28
 831               	.LCFI37:
 832               		.cfi_def_cfa_offset 3
 833               		.cfi_offset 28, -2
 834 03be DF93      		push r29
 835               	.LCFI38:
 836               		.cfi_def_cfa_offset 4
 837               		.cfi_offset 29, -3
 838 03c0 00D0      		rcall .
 839 03c2 00D0      		rcall .
 840               	.LCFI39:
 841               		.cfi_def_cfa_offset 8
 842 03c4 CDB7      		in r28,__SP_L__
 843 03c6 DEB7      		in r29,__SP_H__
 844               	.LCFI40:
 845               		.cfi_def_cfa_register 28
 846               	/* prologue: function */
 847               	/* frame size = 4 */
 848               	/* stack size = 6 */
 849               	.L__stack_usage = 6
 850 03c8 9C83      		std Y+4,r25
 851 03ca 8B83      		std Y+3,r24
 195:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *d = (uint8_t *)&addr;
 852               		.loc 3 195 0
 853 03cc CE01      		movw r24,r28
 854 03ce 0396      		adiw r24,3
 855 03d0 9A83      		std Y+2,r25
 856 03d2 8983      		std Y+1,r24
 196:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 197:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	SHORT_ADDR_0_REG = d[0];
 857               		.loc 3 197 0
 858 03d4 80E6      		ldi r24,lo8(96)
 859 03d6 91E0      		ldi r25,lo8(1)
 860 03d8 2981      		ldd r18,Y+1
 861 03da 3A81      		ldd r19,Y+2
 862 03dc F901      		movw r30,r18
 863 03de 2081      		ld r18,Z
 864 03e0 FC01      		movw r30,r24
 865 03e2 2083      		st Z,r18
 198:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	SHORT_ADDR_1_REG = d[1];
 866               		.loc 3 198 0
 867 03e4 81E6      		ldi r24,lo8(97)
 868 03e6 91E0      		ldi r25,lo8(1)
 869 03e8 2981      		ldd r18,Y+1
 870 03ea 3A81      		ldd r19,Y+2
 871 03ec F901      		movw r30,r18
 872 03ee 2181      		ldd r18,Z+1
 873 03f0 FC01      		movw r30,r24
 874 03f2 2083      		st Z,r18
 199:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 200:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifndef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
 201:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = d[0] + d[1];
 202:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
 203:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 875               		.loc 3 203 0
 876 03f4 0000      		nop
 877               	/* epilogue start */
 878 03f6 0F90      		pop __tmp_reg__
 879 03f8 0F90      		pop __tmp_reg__
 880 03fa 0F90      		pop __tmp_reg__
 881 03fc 0F90      		pop __tmp_reg__
 882 03fe DF91      		pop r29
 883 0400 CF91      		pop r28
 884 0402 0895      		ret
 885               		.cfi_endproc
 886               	.LFE83:
 888               	.global	PHY_SetTxPower
 890               	PHY_SetTxPower:
 891               	.LFB84:
 204:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 205:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 206:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 207:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetTxPower(uint8_t txPower)
 208:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 892               		.loc 3 208 0
 893               		.cfi_startproc
 894 0404 CF93      		push r28
 895               	.LCFI41:
 896               		.cfi_def_cfa_offset 3
 897               		.cfi_offset 28, -2
 898 0406 DF93      		push r29
 899               	.LCFI42:
 900               		.cfi_def_cfa_offset 4
 901               		.cfi_offset 29, -3
 902 0408 1F92      		push __zero_reg__
 903               	.LCFI43:
 904               		.cfi_def_cfa_offset 5
 905 040a CDB7      		in r28,__SP_L__
 906 040c DEB7      		in r29,__SP_H__
 907               	.LCFI44:
 908               		.cfi_def_cfa_register 28
 909               	/* prologue: function */
 910               	/* frame size = 1 */
 911               	/* stack size = 3 */
 912               	.L__stack_usage = 3
 913 040e 8983      		std Y+1,r24
 209:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_TX_PWR_REG_s.txPwr = txPower;
 914               		.loc 3 209 0
 915 0410 85E4      		ldi r24,lo8(69)
 916 0412 91E0      		ldi r25,lo8(1)
 917 0414 2981      		ldd r18,Y+1
 918 0416 2F70      		andi r18,lo8(15)
 919 0418 2F70      		andi r18,lo8(15)
 920 041a FC01      		movw r30,r24
 921 041c 3081      		ld r19,Z
 922 041e 307F      		andi r19,lo8(-16)
 923 0420 232B      		or r18,r19
 924 0422 FC01      		movw r30,r24
 925 0424 2083      		st Z,r18
 210:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 926               		.loc 3 210 0
 927 0426 0000      		nop
 928               	/* epilogue start */
 929 0428 0F90      		pop __tmp_reg__
 930 042a DF91      		pop r29
 931 042c CF91      		pop r28
 932 042e 0895      		ret
 933               		.cfi_endproc
 934               	.LFE84:
 936               	.global	PHY_Sleep
 938               	PHY_Sleep:
 939               	.LFB85:
 211:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 212:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 213:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 214:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Sleep(void)
 215:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 940               		.loc 3 215 0
 941               		.cfi_startproc
 942 0430 CF93      		push r28
 943               	.LCFI45:
 944               		.cfi_def_cfa_offset 3
 945               		.cfi_offset 28, -2
 946 0432 DF93      		push r29
 947               	.LCFI46:
 948               		.cfi_def_cfa_offset 4
 949               		.cfi_offset 29, -3
 950 0434 CDB7      		in r28,__SP_L__
 951 0436 DEB7      		in r29,__SP_H__
 952               	.LCFI47:
 953               		.cfi_def_cfa_register 28
 954               	/* prologue: function */
 955               	/* frame size = 0 */
 956               	/* stack size = 2 */
 957               	.L__stack_usage = 2
 216:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(phyState != PHY_STATE_SLEEP)
 958               		.loc 3 216 0
 959 0438 8091 0000 		lds r24,phyState
 960 043c 8230      		cpi r24,lo8(2)
 961 043e 01F0      		breq .L36
 217:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 218:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyTrxSetState(TRX_CMD_TRX_OFF);
 962               		.loc 3 218 0
 963 0440 88E0      		ldi r24,lo8(8)
 964 0442 0E94 0000 		call phyTrxSetState
 219:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRXPR_REG_s.slptr = 1;
 965               		.loc 3 219 0
 966 0446 89E3      		ldi r24,lo8(57)
 967 0448 91E0      		ldi r25,lo8(1)
 968 044a FC01      		movw r30,r24
 969 044c 2081      		ld r18,Z
 970 044e 2260      		ori r18,lo8(2)
 971 0450 FC01      		movw r30,r24
 972 0452 2083      		st Z,r18
 220:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyState = PHY_STATE_SLEEP;		
 973               		.loc 3 220 0
 974 0454 82E0      		ldi r24,lo8(2)
 975 0456 8093 0000 		sts phyState,r24
 976               	.L36:
 221:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 222:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	
 223:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
 224:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 0;
 977               		.loc 3 224 0
 978 045a 8DE4      		ldi r24,lo8(77)
 979 045c 91E0      		ldi r25,lo8(1)
 980 045e FC01      		movw r30,r24
 981 0460 2081      		ld r18,Z
 982 0462 2B7F      		andi r18,lo8(-5)
 983 0464 FC01      		movw r30,r24
 984 0466 2083      		st Z,r18
 225:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 0;
 985               		.loc 3 225 0
 986 0468 8DE4      		ldi r24,lo8(77)
 987 046a 91E0      		ldi r25,lo8(1)
 988 046c FC01      		movw r30,r24
 989 046e 2081      		ld r18,Z
 990 0470 277F      		andi r18,lo8(-9)
 991 0472 FC01      		movw r30,r24
 992 0474 2083      		st Z,r18
 226:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #else
 227:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DEFAULT != 0)
 228:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 0;
 229:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antCtrl = 0;
 230:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DEFAULT
 231:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // ANTENNA_DIVERSITY
 232:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 233:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 0;
 993               		.loc 3 233 0
 994 0476 84E4      		ldi r24,lo8(68)
 995 0478 91E0      		ldi r25,lo8(1)
 996 047a FC01      		movw r30,r24
 997 047c 2081      		ld r18,Z
 998 047e 2F77      		andi r18,lo8(127)
 999 0480 FC01      		movw r30,r24
 1000 0482 2083      		st Z,r18
 234:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 235:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1001               		.loc 3 235 0
 1002 0484 0000      		nop
 1003               	/* epilogue start */
 1004 0486 DF91      		pop r29
 1005 0488 CF91      		pop r28
 1006 048a 0895      		ret
 1007               		.cfi_endproc
 1008               	.LFE85:
 1010               	.global	PHY_Wakeup
 1012               	PHY_Wakeup:
 1013               	.LFB86:
 236:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 237:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 238:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 239:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Wakeup(void)
 240:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1014               		.loc 3 240 0
 1015               		.cfi_startproc
 1016 048c CF93      		push r28
 1017               	.LCFI48:
 1018               		.cfi_def_cfa_offset 3
 1019               		.cfi_offset 28, -2
 1020 048e DF93      		push r29
 1021               	.LCFI49:
 1022               		.cfi_def_cfa_offset 4
 1023               		.cfi_offset 29, -3
 1024 0490 CDB7      		in r28,__SP_L__
 1025 0492 DEB7      		in r29,__SP_H__
 1026               	.LCFI50:
 1027               		.cfi_def_cfa_register 28
 1028               	/* prologue: function */
 1029               	/* frame size = 0 */
 1030               	/* stack size = 2 */
 1031               	.L__stack_usage = 2
 241:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.slptr = 0;
 1032               		.loc 3 241 0
 1033 0494 89E3      		ldi r24,lo8(57)
 1034 0496 91E0      		ldi r25,lo8(1)
 1035 0498 FC01      		movw r30,r24
 1036 049a 2081      		ld r18,Z
 1037 049c 2D7F      		andi r18,lo8(-3)
 1038 049e FC01      		movw r30,r24
 1039 04a0 2083      		st Z,r18
 242:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1040               		.loc 3 242 0
 1041 04a2 0E94 0000 		call phySetRxState
 243:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_IDLE;
 1042               		.loc 3 243 0
 1043 04a6 81E0      		ldi r24,lo8(1)
 1044 04a8 8093 0000 		sts phyState,r24
 244:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1045               		.loc 3 244 0
 1046 04ac 0000      		nop
 1047               	/* epilogue start */
 1048 04ae DF91      		pop r29
 1049 04b0 CF91      		pop r28
 1050 04b2 0895      		ret
 1051               		.cfi_endproc
 1052               	.LFE86:
 1054               	.global	PHY_DataReq
 1056               	PHY_DataReq:
 1057               	.LFB87:
 245:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 246:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 247:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 248:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*
 249:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_DataReq(uint8_t *data)
 250:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 251:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TX_ARET_ON);
 252:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 253:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_FRAME_BUFFER(0) = data[0] + PHY_CRC_SIZE;
 254:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	for (uint8_t i = 0; i < data[0]; i++) {
 255:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_FRAME_BUFFER(i + 1) = data[i + 1];
 256:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 257:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 258:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_TX_WAIT_END;
 259:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_STATE_REG = TRX_CMD_TX_START;
 260:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 261:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** */
 262:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_DataReq(uint8_t *data, uint8_t size)
 263:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1058               		.loc 3 263 0
 1059               		.cfi_startproc
 1060 04b4 CF93      		push r28
 1061               	.LCFI51:
 1062               		.cfi_def_cfa_offset 3
 1063               		.cfi_offset 28, -2
 1064 04b6 DF93      		push r29
 1065               	.LCFI52:
 1066               		.cfi_def_cfa_offset 4
 1067               		.cfi_offset 29, -3
 1068 04b8 00D0      		rcall .
 1069 04ba 00D0      		rcall .
 1070               	.LCFI53:
 1071               		.cfi_def_cfa_offset 8
 1072 04bc CDB7      		in r28,__SP_L__
 1073 04be DEB7      		in r29,__SP_H__
 1074               	.LCFI54:
 1075               		.cfi_def_cfa_register 28
 1076               	/* prologue: function */
 1077               	/* frame size = 4 */
 1078               	/* stack size = 6 */
 1079               	.L__stack_usage = 6
 1080 04c0 9B83      		std Y+3,r25
 1081 04c2 8A83      		std Y+2,r24
 1082 04c4 6C83      		std Y+4,r22
 264:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyTrxSetState(TRX_CMD_TX_ARET_ON);
 1083               		.loc 3 264 0
 1084 04c6 89E1      		ldi r24,lo8(25)
 1085 04c8 0E94 0000 		call phyTrxSetState
 265:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 266:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1086               		.loc 3 266 0
 1087 04cc 8FE4      		ldi r24,lo8(79)
 1088 04ce 91E0      		ldi r25,lo8(1)
 1089 04d0 2FEF      		ldi r18,lo8(-1)
 1090 04d2 FC01      		movw r30,r24
 1091 04d4 2083      		st Z,r18
 267:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 268:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_FRAME_BUFFER(0) = size + PHY_CRC_SIZE;
 1092               		.loc 3 268 0
 1093 04d6 80E8      		ldi r24,lo8(-128)
 1094 04d8 91E0      		ldi r25,lo8(1)
 1095 04da 2C81      		ldd r18,Y+4
 1096 04dc 2E5F      		subi r18,lo8(-(2))
 1097 04de FC01      		movw r30,r24
 1098 04e0 2083      		st Z,r18
 1099               	.LBB2:
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1100               		.loc 3 269 0
 1101 04e2 1982      		std Y+1,__zero_reg__
 1102 04e4 00C0      		rjmp .L39
 1103               	.L40:
 270:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     TRX_FRAME_BUFFER(i+1) = data[i];
 1104               		.loc 3 270 0 discriminator 3
 1105 04e6 8981      		ldd r24,Y+1
 1106 04e8 882F      		mov r24,r24
 1107 04ea 90E0      		ldi r25,0
 1108 04ec 8F57      		subi r24,127
 1109 04ee 9E4F      		sbci r25,-2
 1110 04f0 AC01      		movw r20,r24
 1111 04f2 8981      		ldd r24,Y+1
 1112 04f4 882F      		mov r24,r24
 1113 04f6 90E0      		ldi r25,0
 1114 04f8 2A81      		ldd r18,Y+2
 1115 04fa 3B81      		ldd r19,Y+3
 1116 04fc 820F      		add r24,r18
 1117 04fe 931F      		adc r25,r19
 1118 0500 FC01      		movw r30,r24
 1119 0502 8081      		ld r24,Z
 1120 0504 FA01      		movw r30,r20
 1121 0506 8083      		st Z,r24
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1122               		.loc 3 269 0 discriminator 3
 1123 0508 8981      		ldd r24,Y+1
 1124 050a 8F5F      		subi r24,lo8(-(1))
 1125 050c 8983      		std Y+1,r24
 1126               	.L39:
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1127               		.loc 3 269 0 is_stmt 0 discriminator 1
 1128 050e 9981      		ldd r25,Y+1
 1129 0510 8C81      		ldd r24,Y+4
 1130 0512 9817      		cp r25,r24
 1131 0514 00F0      		brlo .L40
 1132               	.LBE2:
 271:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 272:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyState = PHY_STATE_TX_WAIT_END;
 1133               		.loc 3 272 0 is_stmt 1
 1134 0516 83E0      		ldi r24,lo8(3)
 1135 0518 8093 0000 		sts phyState,r24
 273:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_STATE_REG = TRX_CMD_TX_START;
 1136               		.loc 3 273 0
 1137 051c 82E4      		ldi r24,lo8(66)
 1138 051e 91E0      		ldi r25,lo8(1)
 1139 0520 22E0      		ldi r18,lo8(2)
 1140 0522 FC01      		movw r30,r24
 1141 0524 2083      		st Z,r18
 274:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1142               		.loc 3 274 0
 1143 0526 0000      		nop
 1144               	/* epilogue start */
 1145 0528 0F90      		pop __tmp_reg__
 1146 052a 0F90      		pop __tmp_reg__
 1147 052c 0F90      		pop __tmp_reg__
 1148 052e 0F90      		pop __tmp_reg__
 1149 0530 DF91      		pop r29
 1150 0532 CF91      		pop r28
 1151 0534 0895      		ret
 1152               		.cfi_endproc
 1153               	.LFE87:
 1155               	.global	PHY_RandomReq
 1157               	PHY_RandomReq:
 1158               	.LFB88:
 275:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 276:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 277:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 278:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 279:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** uint16_t PHY_RandomReq(void)
 280:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1159               		.loc 3 280 0
 1160               		.cfi_startproc
 1161 0536 CF93      		push r28
 1162               	.LCFI55:
 1163               		.cfi_def_cfa_offset 3
 1164               		.cfi_offset 28, -2
 1165 0538 DF93      		push r29
 1166               	.LCFI56:
 1167               		.cfi_def_cfa_offset 4
 1168               		.cfi_offset 29, -3
 1169 053a 00D0      		rcall .
 1170 053c 1F92      		push __zero_reg__
 1171               	.LCFI57:
 1172               		.cfi_def_cfa_offset 7
 1173 053e CDB7      		in r28,__SP_L__
 1174 0540 DEB7      		in r29,__SP_H__
 1175               	.LCFI58:
 1176               		.cfi_def_cfa_register 28
 1177               	/* prologue: function */
 1178               	/* frame size = 3 */
 1179               	/* stack size = 5 */
 1180               	.L__stack_usage = 5
 281:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint16_t rnd = 0;
 1181               		.loc 3 281 0
 1182 0542 1A82      		std Y+2,__zero_reg__
 1183 0544 1982      		std Y+1,__zero_reg__
 282:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 283:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_RX_ON);
 1184               		.loc 3 283 0
 1185 0546 86E0      		ldi r24,lo8(6)
 1186 0548 0E94 0000 		call phyTrxSetState
 1187               	.LBB3:
 284:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 285:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	for (uint8_t i = 0; i < 16; i += 2) {
 1188               		.loc 3 285 0
 1189 054c 1B82      		std Y+3,__zero_reg__
 1190 054e 00C0      		rjmp .L42
 1191               	.L43:
 286:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1192               		.loc 3 286 0 discriminator 3
 1193 0550 62E0      		ldi r22,lo8(2)
 1194 0552 70E0      		ldi r23,0
 1195 0554 80E0      		ldi r24,0
 1196 0556 90E0      		ldi r25,0
 1197 0558 0E94 0000 		call __portable_avr_delay_cycles
 287:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		rnd |= PHY_RSSI_REG_s.rndValue << i;
 1198               		.loc 3 287 0 discriminator 3
 1199 055c 86E4      		ldi r24,lo8(70)
 1200 055e 91E0      		ldi r25,lo8(1)
 1201 0560 FC01      		movw r30,r24
 1202 0562 8081      		ld r24,Z
 1203 0564 8295      		swap r24
 1204 0566 8695      		lsr r24
 1205 0568 8770      		andi r24,lo8(7)
 1206 056a 8370      		andi r24,lo8(3)
 1207 056c 882F      		mov r24,r24
 1208 056e 90E0      		ldi r25,0
 1209 0570 2B81      		ldd r18,Y+3
 1210 0572 222F      		mov r18,r18
 1211 0574 30E0      		ldi r19,0
 1212 0576 00C0      		rjmp 2f
 1213               		1:
 1214 0578 880F      		lsl r24
 1215 057a 991F      		rol r25
 1216               		2:
 1217 057c 2A95      		dec r18
 1218 057e 02F4      		brpl 1b
 1219 0580 9C01      		movw r18,r24
 1220 0582 8981      		ldd r24,Y+1
 1221 0584 9A81      		ldd r25,Y+2
 1222 0586 822B      		or r24,r18
 1223 0588 932B      		or r25,r19
 1224 058a 9A83      		std Y+2,r25
 1225 058c 8983      		std Y+1,r24
 285:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1226               		.loc 3 285 0 discriminator 3
 1227 058e 8B81      		ldd r24,Y+3
 1228 0590 8E5F      		subi r24,lo8(-(2))
 1229 0592 8B83      		std Y+3,r24
 1230               	.L42:
 285:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1231               		.loc 3 285 0 is_stmt 0 discriminator 1
 1232 0594 8B81      		ldd r24,Y+3
 1233 0596 8031      		cpi r24,lo8(16)
 1234 0598 00F0      		brlo .L43
 1235               	.LBE3:
 288:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 289:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 290:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1236               		.loc 3 290 0 is_stmt 1
 1237 059a 0E94 0000 		call phySetRxState
 291:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 292:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	return rnd;
 1238               		.loc 3 292 0
 1239 059e 8981      		ldd r24,Y+1
 1240 05a0 9A81      		ldd r25,Y+2
 1241               	/* epilogue start */
 293:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1242               		.loc 3 293 0
 1243 05a2 0F90      		pop __tmp_reg__
 1244 05a4 0F90      		pop __tmp_reg__
 1245 05a6 0F90      		pop __tmp_reg__
 1246 05a8 DF91      		pop r29
 1247 05aa CF91      		pop r28
 1248 05ac 0895      		ret
 1249               		.cfi_endproc
 1250               	.LFE88:
 1252               	.global	PHY_EncryptReq
 1254               	PHY_EncryptReq:
 1255               	.LFB89:
 294:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 295:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 296:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 297:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_EncryptReq(uint8_t *text, uint8_t *key)
 298:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1256               		.loc 3 298 0
 1257               		.cfi_startproc
 1258 05ae CF93      		push r28
 1259               	.LCFI59:
 1260               		.cfi_def_cfa_offset 3
 1261               		.cfi_offset 28, -2
 1262 05b0 DF93      		push r29
 1263               	.LCFI60:
 1264               		.cfi_def_cfa_offset 4
 1265               		.cfi_offset 29, -3
 1266 05b2 00D0      		rcall .
 1267 05b4 00D0      		rcall .
 1268               	.LCFI61:
 1269               		.cfi_def_cfa_offset 8
 1270 05b6 CDB7      		in r28,__SP_L__
 1271 05b8 DEB7      		in r29,__SP_H__
 1272               	.LCFI62:
 1273               		.cfi_def_cfa_register 28
 1274               	/* prologue: function */
 1275               	/* frame size = 4 */
 1276               	/* stack size = 6 */
 1277               	.L__stack_usage = 6
 1278 05ba 9A83      		std Y+2,r25
 1279 05bc 8983      		std Y+1,r24
 1280 05be 7C83      		std Y+4,r23
 1281 05c0 6B83      		std Y+3,r22
 299:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_setup(key, AES_MODE_ECB, AES_DIR_ENCRYPT);
 1282               		.loc 3 299 0
 1283 05c2 8B81      		ldd r24,Y+3
 1284 05c4 9C81      		ldd r25,Y+4
 1285 05c6 40E0      		ldi r20,0
 1286 05c8 60E0      		ldi r22,0
 1287 05ca 0E94 0000 		call sal_aes_setup
 300:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_exec(text);
 1288               		.loc 3 300 0
 1289 05ce 8981      		ldd r24,Y+1
 1290 05d0 9A81      		ldd r25,Y+2
 1291 05d2 0E94 0000 		call sal_aes_exec
 301:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_read(text);
 1292               		.loc 3 301 0
 1293 05d6 8981      		ldd r24,Y+1
 1294 05d8 9A81      		ldd r25,Y+2
 1295 05da 0E94 0000 		call sal_aes_read
 302:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1296               		.loc 3 302 0
 1297 05de 0000      		nop
 1298               	/* epilogue start */
 1299 05e0 0F90      		pop __tmp_reg__
 1300 05e2 0F90      		pop __tmp_reg__
 1301 05e4 0F90      		pop __tmp_reg__
 1302 05e6 0F90      		pop __tmp_reg__
 1303 05e8 DF91      		pop r29
 1304 05ea CF91      		pop r28
 1305 05ec 0895      		ret
 1306               		.cfi_endproc
 1307               	.LFE89:
 1309               	.global	PHY_EdReq
 1311               	PHY_EdReq:
 1312               	.LFB90:
 303:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 304:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 305:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 306:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** int8_t PHY_EdReq(void)
 307:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1313               		.loc 3 307 0
 1314               		.cfi_startproc
 1315 05ee CF93      		push r28
 1316               	.LCFI63:
 1317               		.cfi_def_cfa_offset 3
 1318               		.cfi_offset 28, -2
 1319 05f0 DF93      		push r29
 1320               	.LCFI64:
 1321               		.cfi_def_cfa_offset 4
 1322               		.cfi_offset 29, -3
 1323 05f2 1F92      		push __zero_reg__
 1324               	.LCFI65:
 1325               		.cfi_def_cfa_offset 5
 1326 05f4 CDB7      		in r28,__SP_L__
 1327 05f6 DEB7      		in r29,__SP_H__
 1328               	.LCFI66:
 1329               		.cfi_def_cfa_register 28
 1330               	/* prologue: function */
 1331               	/* frame size = 1 */
 1332               	/* stack size = 3 */
 1333               	.L__stack_usage = 3
 308:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	int8_t ed;
 309:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 310:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_RX_ON);
 1334               		.loc 3 310 0
 1335 05f8 86E0      		ldi r24,lo8(6)
 1336 05fa 0E94 0000 		call phyTrxSetState
 311:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 312:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IRQ_STATUS_REG_s.ccaEdDone = 1;
 1337               		.loc 3 312 0
 1338 05fe 8FE4      		ldi r24,lo8(79)
 1339 0600 91E0      		ldi r25,lo8(1)
 1340 0602 FC01      		movw r30,r24
 1341 0604 2081      		ld r18,Z
 1342 0606 2061      		ori r18,lo8(16)
 1343 0608 FC01      		movw r30,r24
 1344 060a 2083      		st Z,r18
 313:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_ED_LEVEL_REG = 0;
 1345               		.loc 3 313 0
 1346 060c 87E4      		ldi r24,lo8(71)
 1347 060e 91E0      		ldi r25,lo8(1)
 1348 0610 FC01      		movw r30,r24
 1349 0612 1082      		st Z,__zero_reg__
 314:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	while (0 == IRQ_STATUS_REG_s.ccaEdDone) {
 1350               		.loc 3 314 0
 1351 0614 0000      		nop
 1352               	.L47:
 1353               		.loc 3 314 0 is_stmt 0 discriminator 1
 1354 0616 8FE4      		ldi r24,lo8(79)
 1355 0618 91E0      		ldi r25,lo8(1)
 1356 061a FC01      		movw r30,r24
 1357 061c 8081      		ld r24,Z
 1358 061e 8295      		swap r24
 1359 0620 8170      		andi r24,1
 1360 0622 8823      		tst r24
 1361 0624 01F0      		breq .L47
 315:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 316:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 317:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ed = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1362               		.loc 3 317 0 is_stmt 1
 1363 0626 87E4      		ldi r24,lo8(71)
 1364 0628 91E0      		ldi r25,lo8(1)
 1365 062a FC01      		movw r30,r24
 1366 062c 8081      		ld r24,Z
 1367 062e 8A55      		subi r24,lo8(-(-90))
 1368 0630 8983      		std Y+1,r24
 318:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 319:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1369               		.loc 3 319 0
 1370 0632 0E94 0000 		call phySetRxState
 320:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 321:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	return ed;
 1371               		.loc 3 321 0
 1372 0636 8981      		ldd r24,Y+1
 1373               	/* epilogue start */
 322:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1374               		.loc 3 322 0
 1375 0638 0F90      		pop __tmp_reg__
 1376 063a DF91      		pop r29
 1377 063c CF91      		pop r28
 1378 063e 0895      		ret
 1379               		.cfi_endproc
 1380               	.LFE90:
 1383               	phySetRxState:
 1384               	.LFB91:
 323:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 324:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 325:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 326:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phySetRxState(void)
 327:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1385               		.loc 3 327 0
 1386               		.cfi_startproc
 1387 0640 CF93      		push r28
 1388               	.LCFI67:
 1389               		.cfi_def_cfa_offset 3
 1390               		.cfi_offset 28, -2
 1391 0642 DF93      		push r29
 1392               	.LCFI68:
 1393               		.cfi_def_cfa_offset 4
 1394               		.cfi_offset 29, -3
 1395 0644 CDB7      		in r28,__SP_L__
 1396 0646 DEB7      		in r29,__SP_H__
 1397               	.LCFI69:
 1398               		.cfi_def_cfa_register 28
 1399               	/* prologue: function */
 1400               	/* frame size = 0 */
 1401               	/* stack size = 2 */
 1402               	.L__stack_usage = 2
 328:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 1403               		.loc 3 328 0
 1404 0648 88E0      		ldi r24,lo8(8)
 1405 064a 0E94 0000 		call phyTrxSetState
 329:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 330:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1406               		.loc 3 330 0
 1407 064e 8FE4      		ldi r24,lo8(79)
 1408 0650 91E0      		ldi r25,lo8(1)
 1409 0652 2FEF      		ldi r18,lo8(-1)
 1410 0654 FC01      		movw r30,r24
 1411 0656 2083      		st Z,r18
 331:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 332:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (phyRxState) {
 1412               		.loc 3 332 0
 1413 0658 8091 0000 		lds r24,phyRxState
 1414 065c 8823      		tst r24
 1415 065e 01F0      		breq .L51
 333:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyTrxSetState(TRX_CMD_RX_AACK_ON);
 1416               		.loc 3 333 0
 1417 0660 86E1      		ldi r24,lo8(22)
 1418 0662 0E94 0000 		call phyTrxSetState
 1419               	.L51:
 334:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 335:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1420               		.loc 3 335 0
 1421 0666 0000      		nop
 1422               	/* epilogue start */
 1423 0668 DF91      		pop r29
 1424 066a CF91      		pop r28
 1425 066c 0895      		ret
 1426               		.cfi_endproc
 1427               	.LFE91:
 1429               	.global	phyTrxSetState
 1431               	phyTrxSetState:
 1432               	.LFB92:
 336:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 337:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 338:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 339:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void phyTrxSetState(uint8_t state)
 340:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1433               		.loc 3 340 0
 1434               		.cfi_startproc
 1435 066e CF93      		push r28
 1436               	.LCFI70:
 1437               		.cfi_def_cfa_offset 3
 1438               		.cfi_offset 28, -2
 1439 0670 DF93      		push r29
 1440               	.LCFI71:
 1441               		.cfi_def_cfa_offset 4
 1442               		.cfi_offset 29, -3
 1443 0672 1F92      		push __zero_reg__
 1444               	.LCFI72:
 1445               		.cfi_def_cfa_offset 5
 1446 0674 CDB7      		in r28,__SP_L__
 1447 0676 DEB7      		in r29,__SP_H__
 1448               	.LCFI73:
 1449               		.cfi_def_cfa_register 28
 1450               	/* prologue: function */
 1451               	/* frame size = 1 */
 1452               	/* stack size = 3 */
 1453               	.L__stack_usage = 3
 1454 0678 8983      		std Y+1,r24
 341:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1) || defined(EXT_RF_FRONT_END_CTRL)
 342:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(phyState == PHY_STATE_SLEEP)
 1455               		.loc 3 342 0
 1456 067a 8091 0000 		lds r24,phyState
 1457 067e 8230      		cpi r24,lo8(2)
 1458 0680 01F4      		brne .L53
 343:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 344:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DIVERSITY == 1)
 345:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antDivEn = 1;
 1459               		.loc 3 345 0
 1460 0682 8DE4      		ldi r24,lo8(77)
 1461 0684 91E0      		ldi r25,lo8(1)
 1462 0686 FC01      		movw r30,r24
 1463 0688 2081      		ld r18,Z
 1464 068a 2860      		ori r18,lo8(8)
 1465 068c FC01      		movw r30,r24
 1466 068e 2083      		st Z,r18
 346:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
 1467               		.loc 3 346 0
 1468 0690 8DE4      		ldi r24,lo8(77)
 1469 0692 91E0      		ldi r25,lo8(1)
 1470 0694 FC01      		movw r30,r24
 1471 0696 2081      		ld r18,Z
 1472 0698 2460      		ori r18,lo8(4)
 1473 069a FC01      		movw r30,r24
 1474 069c 2083      		st Z,r18
 347:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#else
 348:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		#if (ANTENNA_DEFAULT != 0)
 349:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			ANT_DIV_REG_s.antExtSwEn = 1;
 350:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			ANT_DIV_REG_s.antCtrl = ANTENNA_DEFAULT;
 351:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		#endif // ANTENNA_DEFAULT
 352:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DIVERSITY
 353:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#ifdef EXT_RF_FRONT_END_CTRL
 354:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_1_REG_s.paExtEn = 1;
 1475               		.loc 3 354 0
 1476 069e 84E4      		ldi r24,lo8(68)
 1477 06a0 91E0      		ldi r25,lo8(1)
 1478 06a2 FC01      		movw r30,r24
 1479 06a4 2081      		ld r18,Z
 1480 06a6 2068      		ori r18,lo8(-128)
 1481 06a8 FC01      		movw r30,r24
 1482 06aa 2083      		st Z,r18
 1483               	.L53:
 355:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // EXT_RF_FRONT_END_CTRL
 356:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 357:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // PLATFORM_WM100
 358:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 359:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	do {TRX_STATE_REG = TRX_CMD_FORCE_TRX_OFF;
 1484               		.loc 3 359 0 discriminator 1
 1485 06ac 82E4      		ldi r24,lo8(66)
 1486 06ae 91E0      		ldi r25,lo8(1)
 1487 06b0 23E0      		ldi r18,lo8(3)
 1488 06b2 FC01      		movw r30,r24
 1489 06b4 2083      		st Z,r18
 360:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	} while (TRX_STATUS_TRX_OFF !=
 361:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1490               		.loc 3 361 0 discriminator 1
 1491 06b6 81E4      		ldi r24,lo8(65)
 1492 06b8 91E0      		ldi r25,lo8(1)
 1493 06ba FC01      		movw r30,r24
 1494 06bc 8081      		ld r24,Z
 1495 06be 8F71      		andi r24,lo8(31)
 1496 06c0 8830      		cpi r24,lo8(8)
 1497 06c2 01F4      		brne .L53
 1498               	.L54:
 362:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 363:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	do {TRX_STATE_REG = state; } while (state !=
 1499               		.loc 3 363 0 discriminator 1
 1500 06c4 82E4      		ldi r24,lo8(66)
 1501 06c6 91E0      		ldi r25,lo8(1)
 1502 06c8 2981      		ldd r18,Y+1
 1503 06ca FC01      		movw r30,r24
 1504 06cc 2083      		st Z,r18
 364:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1505               		.loc 3 364 0 discriminator 1
 1506 06ce 81E4      		ldi r24,lo8(65)
 1507 06d0 91E0      		ldi r25,lo8(1)
 1508 06d2 FC01      		movw r30,r24
 1509 06d4 8081      		ld r24,Z
 1510 06d6 8F71      		andi r24,lo8(31)
 363:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1511               		.loc 3 363 0 discriminator 1
 1512 06d8 982F      		mov r25,r24
 1513               		.loc 3 364 0 discriminator 1
 1514 06da 8981      		ldd r24,Y+1
 1515 06dc 9817      		cp r25,r24
 1516 06de 01F4      		brne .L54
 365:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1517               		.loc 3 365 0
 1518 06e0 0000      		nop
 1519               	/* epilogue start */
 1520 06e2 0F90      		pop __tmp_reg__
 1521 06e4 DF91      		pop r29
 1522 06e6 CF91      		pop r28
 1523 06e8 0895      		ret
 1524               		.cfi_endproc
 1525               	.LFE92:
 1527               	.global	PHY_SetIEEEAddr
 1529               	PHY_SetIEEEAddr:
 1530               	.LFB93:
 366:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 367:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 368:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 369:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 370:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetIEEEAddr(uint8_t *ieee_addr)
 371:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1531               		.loc 3 371 0
 1532               		.cfi_startproc
 1533 06ea CF93      		push r28
 1534               	.LCFI74:
 1535               		.cfi_def_cfa_offset 3
 1536               		.cfi_offset 28, -2
 1537 06ec DF93      		push r29
 1538               	.LCFI75:
 1539               		.cfi_def_cfa_offset 4
 1540               		.cfi_offset 29, -3
 1541 06ee 00D0      		rcall .
 1542 06f0 00D0      		rcall .
 1543               	.LCFI76:
 1544               		.cfi_def_cfa_offset 8
 1545 06f2 CDB7      		in r28,__SP_L__
 1546 06f4 DEB7      		in r29,__SP_H__
 1547               	.LCFI77:
 1548               		.cfi_def_cfa_register 28
 1549               	/* prologue: function */
 1550               	/* frame size = 4 */
 1551               	/* stack size = 6 */
 1552               	.L__stack_usage = 6
 1553 06f6 9C83      		std Y+4,r25
 1554 06f8 8B83      		std Y+3,r24
 372:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *ptr_to_reg = ieee_addr;
 1555               		.loc 3 372 0
 1556 06fa 8B81      		ldd r24,Y+3
 1557 06fc 9C81      		ldd r25,Y+4
 1558 06fe 9A83      		std Y+2,r25
 1559 0700 8983      		std Y+1,r24
 373:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_0_REG = *ptr_to_reg++;
 1560               		.loc 3 373 0
 1561 0702 24E6      		ldi r18,lo8(100)
 1562 0704 31E0      		ldi r19,lo8(1)
 1563 0706 8981      		ldd r24,Y+1
 1564 0708 9A81      		ldd r25,Y+2
 1565 070a AC01      		movw r20,r24
 1566 070c 4F5F      		subi r20,-1
 1567 070e 5F4F      		sbci r21,-1
 1568 0710 5A83      		std Y+2,r21
 1569 0712 4983      		std Y+1,r20
 1570 0714 FC01      		movw r30,r24
 1571 0716 8081      		ld r24,Z
 1572 0718 F901      		movw r30,r18
 1573 071a 8083      		st Z,r24
 374:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_1_REG = *ptr_to_reg++;
 1574               		.loc 3 374 0
 1575 071c 25E6      		ldi r18,lo8(101)
 1576 071e 31E0      		ldi r19,lo8(1)
 1577 0720 8981      		ldd r24,Y+1
 1578 0722 9A81      		ldd r25,Y+2
 1579 0724 AC01      		movw r20,r24
 1580 0726 4F5F      		subi r20,-1
 1581 0728 5F4F      		sbci r21,-1
 1582 072a 5A83      		std Y+2,r21
 1583 072c 4983      		std Y+1,r20
 1584 072e FC01      		movw r30,r24
 1585 0730 8081      		ld r24,Z
 1586 0732 F901      		movw r30,r18
 1587 0734 8083      		st Z,r24
 375:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_2_REG = *ptr_to_reg++;
 1588               		.loc 3 375 0
 1589 0736 26E6      		ldi r18,lo8(102)
 1590 0738 31E0      		ldi r19,lo8(1)
 1591 073a 8981      		ldd r24,Y+1
 1592 073c 9A81      		ldd r25,Y+2
 1593 073e AC01      		movw r20,r24
 1594 0740 4F5F      		subi r20,-1
 1595 0742 5F4F      		sbci r21,-1
 1596 0744 5A83      		std Y+2,r21
 1597 0746 4983      		std Y+1,r20
 1598 0748 FC01      		movw r30,r24
 1599 074a 8081      		ld r24,Z
 1600 074c F901      		movw r30,r18
 1601 074e 8083      		st Z,r24
 376:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_3_REG = *ptr_to_reg++;
 1602               		.loc 3 376 0
 1603 0750 27E6      		ldi r18,lo8(103)
 1604 0752 31E0      		ldi r19,lo8(1)
 1605 0754 8981      		ldd r24,Y+1
 1606 0756 9A81      		ldd r25,Y+2
 1607 0758 AC01      		movw r20,r24
 1608 075a 4F5F      		subi r20,-1
 1609 075c 5F4F      		sbci r21,-1
 1610 075e 5A83      		std Y+2,r21
 1611 0760 4983      		std Y+1,r20
 1612 0762 FC01      		movw r30,r24
 1613 0764 8081      		ld r24,Z
 1614 0766 F901      		movw r30,r18
 1615 0768 8083      		st Z,r24
 377:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_4_REG = *ptr_to_reg++;
 1616               		.loc 3 377 0
 1617 076a 28E6      		ldi r18,lo8(104)
 1618 076c 31E0      		ldi r19,lo8(1)
 1619 076e 8981      		ldd r24,Y+1
 1620 0770 9A81      		ldd r25,Y+2
 1621 0772 AC01      		movw r20,r24
 1622 0774 4F5F      		subi r20,-1
 1623 0776 5F4F      		sbci r21,-1
 1624 0778 5A83      		std Y+2,r21
 1625 077a 4983      		std Y+1,r20
 1626 077c FC01      		movw r30,r24
 1627 077e 8081      		ld r24,Z
 1628 0780 F901      		movw r30,r18
 1629 0782 8083      		st Z,r24
 378:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_5_REG = *ptr_to_reg++;
 1630               		.loc 3 378 0
 1631 0784 29E6      		ldi r18,lo8(105)
 1632 0786 31E0      		ldi r19,lo8(1)
 1633 0788 8981      		ldd r24,Y+1
 1634 078a 9A81      		ldd r25,Y+2
 1635 078c AC01      		movw r20,r24
 1636 078e 4F5F      		subi r20,-1
 1637 0790 5F4F      		sbci r21,-1
 1638 0792 5A83      		std Y+2,r21
 1639 0794 4983      		std Y+1,r20
 1640 0796 FC01      		movw r30,r24
 1641 0798 8081      		ld r24,Z
 1642 079a F901      		movw r30,r18
 1643 079c 8083      		st Z,r24
 379:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_6_REG = *ptr_to_reg++;
 1644               		.loc 3 379 0
 1645 079e 2AE6      		ldi r18,lo8(106)
 1646 07a0 31E0      		ldi r19,lo8(1)
 1647 07a2 8981      		ldd r24,Y+1
 1648 07a4 9A81      		ldd r25,Y+2
 1649 07a6 AC01      		movw r20,r24
 1650 07a8 4F5F      		subi r20,-1
 1651 07aa 5F4F      		sbci r21,-1
 1652 07ac 5A83      		std Y+2,r21
 1653 07ae 4983      		std Y+1,r20
 1654 07b0 FC01      		movw r30,r24
 1655 07b2 8081      		ld r24,Z
 1656 07b4 F901      		movw r30,r18
 1657 07b6 8083      		st Z,r24
 380:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_7_REG = *ptr_to_reg;
 1658               		.loc 3 380 0
 1659 07b8 8BE6      		ldi r24,lo8(107)
 1660 07ba 91E0      		ldi r25,lo8(1)
 1661 07bc 2981      		ldd r18,Y+1
 1662 07be 3A81      		ldd r19,Y+2
 1663 07c0 F901      		movw r30,r18
 1664 07c2 2081      		ld r18,Z
 1665 07c4 FC01      		movw r30,r24
 1666 07c6 2083      		st Z,r18
 381:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1667               		.loc 3 381 0
 1668 07c8 0000      		nop
 1669               	/* epilogue start */
 1670 07ca 0F90      		pop __tmp_reg__
 1671 07cc 0F90      		pop __tmp_reg__
 1672 07ce 0F90      		pop __tmp_reg__
 1673 07d0 0F90      		pop __tmp_reg__
 1674 07d2 DF91      		pop r29
 1675 07d4 CF91      		pop r28
 1676 07d6 0895      		ret
 1677               		.cfi_endproc
 1678               	.LFE93:
 1680               	.global	PHY_TaskHandler
 1682               	PHY_TaskHandler:
 1683               	.LFB94:
 382:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 383:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 384:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 385:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_TaskHandler(void)
 386:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1684               		.loc 3 386 0
 1685               		.cfi_startproc
 1686 07d8 CF93      		push r28
 1687               	.LCFI78:
 1688               		.cfi_def_cfa_offset 3
 1689               		.cfi_offset 28, -2
 1690 07da DF93      		push r29
 1691               	.LCFI79:
 1692               		.cfi_def_cfa_offset 4
 1693               		.cfi_offset 29, -3
 1694 07dc CDB7      		in r28,__SP_L__
 1695 07de DEB7      		in r29,__SP_H__
 1696               	.LCFI80:
 1697               		.cfi_def_cfa_register 28
 1698 07e0 2897      		sbiw r28,8
 1699               	.LCFI81:
 1700               		.cfi_def_cfa_offset 12
 1701 07e2 0FB6      		in __tmp_reg__,__SREG__
 1702 07e4 F894      		cli
 1703 07e6 DEBF      		out __SP_H__,r29
 1704 07e8 0FBE      		out __SREG__,__tmp_reg__
 1705 07ea CDBF      		out __SP_L__,r28
 1706               	/* prologue: function */
 1707               	/* frame size = 8 */
 1708               	/* stack size = 10 */
 1709               	.L__stack_usage = 10
 387:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (PHY_STATE_SLEEP == phyState) {
 1710               		.loc 3 387 0
 1711 07ec 8091 0000 		lds r24,phyState
 1712 07f0 8230      		cpi r24,lo8(2)
 1713 07f2 01F4      		brne .+2
 1714 07f4 00C0      		rjmp .L68
 388:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		return;
 389:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 390:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 391:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (IRQ_STATUS_REG_s.rxEnd) {
 1715               		.loc 3 391 0
 1716 07f6 8FE4      		ldi r24,lo8(79)
 1717 07f8 91E0      		ldi r25,lo8(1)
 1718 07fa FC01      		movw r30,r24
 1719 07fc 8081      		ld r24,Z
 1720 07fe 83FB      		bst r24,3
 1721 0800 8827      		clr r24
 1722 0802 80F9      		bld r24,0
 1723 0804 8823      		tst r24
 1724 0806 01F4      		brne .+2
 1725 0808 00C0      		rjmp .L59
 1726               	.LBB4:
 392:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_DataInd_t ind;
 393:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		uint8_t size = TST_RX_LENGTH_REG;
 1727               		.loc 3 393 0
 1728 080a 8BE7      		ldi r24,lo8(123)
 1729 080c 91E0      		ldi r25,lo8(1)
 1730 080e FC01      		movw r30,r24
 1731 0810 8081      		ld r24,Z
 1732 0812 8B83      		std Y+3,r24
 1733               	.LBB5:
 394:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 395:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		for (uint8_t i = 0; i < size + 1 /*lqi*/; i++) {
 1734               		.loc 3 395 0
 1735 0814 1982      		std Y+1,__zero_reg__
 1736 0816 00C0      		rjmp .L60
 1737               	.L61:
 396:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1738               		.loc 3 396 0 discriminator 3
 1739 0818 8981      		ldd r24,Y+1
 1740 081a 882F      		mov r24,r24
 1741 081c 90E0      		ldi r25,0
 1742 081e 2981      		ldd r18,Y+1
 1743 0820 222F      		mov r18,r18
 1744 0822 30E0      		ldi r19,0
 1745 0824 2058      		subi r18,-128
 1746 0826 3E4F      		sbci r19,-2
 1747 0828 F901      		movw r30,r18
 1748 082a 2081      		ld r18,Z
 1749 082c 8050      		subi r24,lo8(-(phyRxBuffer))
 1750 082e 9040      		sbci r25,hi8(-(phyRxBuffer))
 1751 0830 FC01      		movw r30,r24
 1752 0832 2083      		st Z,r18
 395:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1753               		.loc 3 395 0 discriminator 3
 1754 0834 8981      		ldd r24,Y+1
 1755 0836 8F5F      		subi r24,lo8(-(1))
 1756 0838 8983      		std Y+1,r24
 1757               	.L60:
 395:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1758               		.loc 3 395 0 is_stmt 0 discriminator 1
 1759 083a 8981      		ldd r24,Y+1
 1760 083c 282F      		mov r18,r24
 1761 083e 30E0      		ldi r19,0
 1762 0840 8B81      		ldd r24,Y+3
 1763 0842 882F      		mov r24,r24
 1764 0844 90E0      		ldi r25,0
 1765 0846 0196      		adiw r24,1
 1766 0848 2817      		cp r18,r24
 1767 084a 3907      		cpc r19,r25
 1768 084c 04F0      		brlt .L61
 1769               	.LBE5:
 397:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 398:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 399:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.data = phyRxBuffer;
 1770               		.loc 3 399 0 is_stmt 1
 1771 084e 80E0      		ldi r24,lo8(phyRxBuffer)
 1772 0850 90E0      		ldi r25,hi8(phyRxBuffer)
 1773 0852 9D83      		std Y+5,r25
 1774 0854 8C83      		std Y+4,r24
 400:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.size = size - PHY_CRC_SIZE;
 1775               		.loc 3 400 0
 1776 0856 8B81      		ldd r24,Y+3
 1777 0858 8250      		subi r24,lo8(-(-2))
 1778 085a 8E83      		std Y+6,r24
 401:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.lqi  = phyRxBuffer[size];
 1779               		.loc 3 401 0
 1780 085c 8B81      		ldd r24,Y+3
 1781 085e 882F      		mov r24,r24
 1782 0860 90E0      		ldi r25,0
 1783 0862 8050      		subi r24,lo8(-(phyRxBuffer))
 1784 0864 9040      		sbci r25,hi8(-(phyRxBuffer))
 1785 0866 FC01      		movw r30,r24
 1786 0868 8081      		ld r24,Z
 1787 086a 8F83      		std Y+7,r24
 402:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.rssi = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1788               		.loc 3 402 0
 1789 086c 87E4      		ldi r24,lo8(71)
 1790 086e 91E0      		ldi r25,lo8(1)
 1791 0870 FC01      		movw r30,r24
 1792 0872 8081      		ld r24,Z
 1793 0874 8A55      		subi r24,lo8(-(-90))
 1794 0876 8887      		std Y+8,r24
 403:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_DataInd(&ind);
 1795               		.loc 3 403 0
 1796 0878 CE01      		movw r24,r28
 1797 087a 0496      		adiw r24,4
 1798 087c 0E94 0000 		call PHY_DataInd
 404:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 405:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		while (TRX_STATUS_RX_AACK_ON != TRX_STATUS_REG_s.trxStatus) {
 1799               		.loc 3 405 0
 1800 0880 0000      		nop
 1801               	.L62:
 1802               		.loc 3 405 0 is_stmt 0 discriminator 1
 1803 0882 81E4      		ldi r24,lo8(65)
 1804 0884 91E0      		ldi r25,lo8(1)
 1805 0886 FC01      		movw r30,r24
 1806 0888 8081      		ld r24,Z
 1807 088a 8F71      		andi r24,lo8(31)
 1808 088c 8631      		cpi r24,lo8(22)
 1809 088e 01F4      		brne .L62
 406:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 407:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 408:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		IRQ_STATUS_REG_s.rxEnd = 1;
 1810               		.loc 3 408 0 is_stmt 1 discriminator 2
 1811 0890 8FE4      		ldi r24,lo8(79)
 1812 0892 91E0      		ldi r25,lo8(1)
 1813 0894 FC01      		movw r30,r24
 1814 0896 2081      		ld r18,Z
 1815 0898 2860      		ori r18,lo8(8)
 1816 089a FC01      		movw r30,r24
 1817 089c 2083      		st Z,r18
 409:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_2_REG_s.rxSafeMode = 0;
 1818               		.loc 3 409 0 discriminator 2
 1819 089e 8CE4      		ldi r24,lo8(76)
 1820 08a0 91E0      		ldi r25,lo8(1)
 1821 08a2 FC01      		movw r30,r24
 1822 08a4 2081      		ld r18,Z
 1823 08a6 2F77      		andi r18,lo8(127)
 1824 08a8 FC01      		movw r30,r24
 1825 08aa 2083      		st Z,r18
 410:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_2_REG_s.rxSafeMode = 1;
 1826               		.loc 3 410 0 discriminator 2
 1827 08ac 8CE4      		ldi r24,lo8(76)
 1828 08ae 91E0      		ldi r25,lo8(1)
 1829 08b0 FC01      		movw r30,r24
 1830 08b2 2081      		ld r18,Z
 1831 08b4 2068      		ori r18,lo8(-128)
 1832 08b6 FC01      		movw r30,r24
 1833 08b8 2083      		st Z,r18
 1834               	.LBE4:
 1835 08ba 00C0      		rjmp .L56
 1836               	.L59:
 411:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	} else if (IRQ_STATUS_REG_s.txEnd) {
 1837               		.loc 3 411 0
 1838 08bc 8FE4      		ldi r24,lo8(79)
 1839 08be 91E0      		ldi r25,lo8(1)
 1840 08c0 FC01      		movw r30,r24
 1841 08c2 8081      		ld r24,Z
 1842 08c4 86FB      		bst r24,6
 1843 08c6 8827      		clr r24
 1844 08c8 80F9      		bld r24,0
 1845 08ca 8823      		tst r24
 1846 08cc 01F0      		breq .L56
 412:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		if (TRX_STATUS_TX_ARET_ON == TRX_STATUS_REG_s.trxStatus) {
 1847               		.loc 3 412 0
 1848 08ce 81E4      		ldi r24,lo8(65)
 1849 08d0 91E0      		ldi r25,lo8(1)
 1850 08d2 FC01      		movw r30,r24
 1851 08d4 8081      		ld r24,Z
 1852 08d6 8F71      		andi r24,lo8(31)
 1853 08d8 8931      		cpi r24,lo8(25)
 1854 08da 01F4      		brne .L63
 1855               	.LBB6:
 413:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			uint8_t status = TRX_STATE_REG_s.tracStatus;
 1856               		.loc 3 413 0
 1857 08dc 82E4      		ldi r24,lo8(66)
 1858 08de 91E0      		ldi r25,lo8(1)
 1859 08e0 FC01      		movw r30,r24
 1860 08e2 8081      		ld r24,Z
 1861 08e4 8295      		swap r24
 1862 08e6 8695      		lsr r24
 1863 08e8 8770      		andi r24,lo8(7)
 1864 08ea 8A83      		std Y+2,r24
 414:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 415:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			if (TRAC_STATUS_SUCCESS == status) {
 1865               		.loc 3 415 0
 1866 08ec 8A81      		ldd r24,Y+2
 1867 08ee 8823      		tst r24
 1868 08f0 01F4      		brne .L64
 416:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_SUCCESS;
 1869               		.loc 3 416 0
 1870 08f2 1A82      		std Y+2,__zero_reg__
 1871 08f4 00C0      		rjmp .L65
 1872               	.L64:
 417:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else if (TRAC_STATUS_CHANNEL_ACCESS_FAILURE ==
 1873               		.loc 3 417 0
 1874 08f6 8A81      		ldd r24,Y+2
 1875 08f8 8330      		cpi r24,lo8(3)
 1876 08fa 01F4      		brne .L66
 418:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 					status) {
 419:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_CHANNEL_ACCESS_FAILURE;
 1877               		.loc 3 419 0
 1878 08fc 81E0      		ldi r24,lo8(1)
 1879 08fe 8A83      		std Y+2,r24
 1880 0900 00C0      		rjmp .L65
 1881               	.L66:
 420:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else if (TRAC_STATUS_NO_ACK == status) {
 1882               		.loc 3 420 0
 1883 0902 8A81      		ldd r24,Y+2
 1884 0904 8530      		cpi r24,lo8(5)
 1885 0906 01F4      		brne .L67
 421:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_NO_ACK;
 1886               		.loc 3 421 0
 1887 0908 82E0      		ldi r24,lo8(2)
 1888 090a 8A83      		std Y+2,r24
 1889 090c 00C0      		rjmp .L65
 1890               	.L67:
 422:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else {
 423:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_ERROR;
 1891               		.loc 3 423 0
 1892 090e 83E0      		ldi r24,lo8(3)
 1893 0910 8A83      		std Y+2,r24
 1894               	.L65:
 424:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			}
 425:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 426:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phySetRxState();
 1895               		.loc 3 426 0
 1896 0912 0E94 0000 		call phySetRxState
 427:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyState = PHY_STATE_IDLE;
 1897               		.loc 3 427 0
 1898 0916 81E0      		ldi r24,lo8(1)
 1899 0918 8093 0000 		sts phyState,r24
 428:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 429:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			PHY_DataConf(status);
 1900               		.loc 3 429 0
 1901 091c 8A81      		ldd r24,Y+2
 1902 091e 0E94 0000 		call PHY_DataConf
 1903               	.L63:
 1904               	.LBE6:
 430:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 431:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 432:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		IRQ_STATUS_REG_s.txEnd = 1;
 1905               		.loc 3 432 0
 1906 0922 8FE4      		ldi r24,lo8(79)
 1907 0924 91E0      		ldi r25,lo8(1)
 1908 0926 FC01      		movw r30,r24
 1909 0928 2081      		ld r18,Z
 1910 092a 2064      		ori r18,lo8(64)
 1911 092c FC01      		movw r30,r24
 1912 092e 2083      		st Z,r18
 1913 0930 00C0      		rjmp .L56
 1914               	.L68:
 388:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 1915               		.loc 3 388 0
 1916 0932 0000      		nop
 1917               	.L56:
 1918               	/* epilogue start */
 433:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 434:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1919               		.loc 3 434 0
 1920 0934 2896      		adiw r28,8
 1921 0936 0FB6      		in __tmp_reg__,__SREG__
 1922 0938 F894      		cli
 1923 093a DEBF      		out __SP_H__,r29
 1924 093c 0FBE      		out __SREG__,__tmp_reg__
 1925 093e CDBF      		out __SP_L__,r28
 1926 0940 DF91      		pop r29
 1927 0942 CF91      		pop r28
 1928 0944 0895      		ret
 1929               		.cfi_endproc
 1930               	.LFE94:
 1932               	.Letext0:
 1933               		.file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 1934               		.file 5 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 1935               		.file 6 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/atmegarfa1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 phy.c
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:7      *ABS*:00000001 __zero_reg__
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:12     .text:00000000 sysclk_enable_peripheral_clock
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:214    .text:0000011a __portable_avr_delay_cycles
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:239    .bss.phyState:00000000 phyState
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:244    .bss.phyRxBuffer:00000000 phyRxBuffer
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:249    .bss.phyRxState:00000000 phyRxState
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:254    .text:00000126 PHY_Init
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:1431   .text:0000066e phyTrxSetState
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:1157   .text:00000536 PHY_RandomReq
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:372    .text:000001c8 PHY_ResetRadio
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:411    .text:000001e6 PHY_SetTdmaMode
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:505    .text:0000025c PHY_SetPromiscuousMode
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:826    .text:000003bc PHY_SetShortAddr
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:762    .text:00000374 PHY_SetPanId
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:1529   .text:000006ea PHY_SetIEEEAddr
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:626    .text:00000304 PHY_SetOptimizedCSMAValues
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:673    .text:00000328 PHY_SetRxState
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:1383   .text:00000640 phySetRxState
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:714    .text:00000348 PHY_SetChannel
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:890    .text:00000404 PHY_SetTxPower
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:938    .text:00000430 PHY_Sleep
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:1012   .text:0000048c PHY_Wakeup
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:1056   .text:000004b4 PHY_DataReq
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:1254   .text:000005ae PHY_EncryptReq
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:1311   .text:000005ee PHY_EdReq
C:\Users\guilh\AppData\Local\Temp\cc70vOCC.s:1682   .text:000007d8 PHY_TaskHandler

UNDEFINED SYMBOLS
sysclk_enable_module
sal_aes_setup
sal_aes_exec
sal_aes_read
PHY_DataInd
PHY_DataConf
__do_clear_bss
