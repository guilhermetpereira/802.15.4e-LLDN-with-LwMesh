   1               		.file	"phy.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	sysclk_enable_peripheral_clock:
  13               	.LFB69:
  14               		.file 1 "../../../platform/common/services/clock/mega/sysclk.h"
   1:../../../platform/common/services/clock/mega/sysclk.h **** /**
   2:../../../platform/common/services/clock/mega/sysclk.h ****  * \file
   3:../../../platform/common/services/clock/mega/sysclk.h ****  *
   4:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Chip-specific system clock management functions
   5:../../../platform/common/services/clock/mega/sysclk.h ****  *
   6:../../../platform/common/services/clock/mega/sysclk.h ****  * Copyright (c) 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/mega/sysclk.h ****  *
   8:../../../platform/common/services/clock/mega/sysclk.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/mega/sysclk.h ****  *
  10:../../../platform/common/services/clock/mega/sysclk.h ****  * \page License
  11:../../../platform/common/services/clock/mega/sysclk.h ****  *
  12:../../../platform/common/services/clock/mega/sysclk.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/mega/sysclk.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/mega/sysclk.h ****  *
  15:../../../platform/common/services/clock/mega/sysclk.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/mega/sysclk.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/mega/sysclk.h ****  *
  18:../../../platform/common/services/clock/mega/sysclk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/mega/sysclk.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/mega/sysclk.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/mega/sysclk.h ****  *
  22:../../../platform/common/services/clock/mega/sysclk.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/mega/sysclk.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/mega/sysclk.h ****  *
  25:../../../platform/common/services/clock/mega/sysclk.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/mega/sysclk.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/mega/sysclk.h ****  *
  28:../../../platform/common/services/clock/mega/sysclk.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/mega/sysclk.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/mega/sysclk.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/mega/sysclk.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/mega/sysclk.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/mega/sysclk.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/mega/sysclk.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/mega/sysclk.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/mega/sysclk.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/mega/sysclk.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/mega/sysclk.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/mega/sysclk.h ****  *
  40:../../../platform/common/services/clock/mega/sysclk.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/mega/sysclk.h ****  *
  42:../../../platform/common/services/clock/mega/sysclk.h ****  */
  43:../../../platform/common/services/clock/mega/sysclk.h **** #ifndef MEGA_SYSCLK_H_INCLUDED
  44:../../../platform/common/services/clock/mega/sysclk.h **** #define MEGA_SYSCLK_H_INCLUDED
  45:../../../platform/common/services/clock/mega/sysclk.h **** 
  46:../../../platform/common/services/clock/mega/sysclk.h **** #include <board.h>
  47:../../../platform/common/services/clock/mega/sysclk.h **** #include <compiler.h>
  48:../../../platform/common/services/clock/mega/sysclk.h **** #include <parts.h>
  49:../../../platform/common/services/clock/mega/sysclk.h **** 
  50:../../../platform/common/services/clock/mega/sysclk.h **** /* Include clock configuration for the project. */
  51:../../../platform/common/services/clock/mega/sysclk.h **** #include <conf_clock.h>
  52:../../../platform/common/services/clock/mega/sysclk.h **** 
  53:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef __cplusplus
  54:../../../platform/common/services/clock/mega/sysclk.h **** extern "C" {
  55:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  56:../../../platform/common/services/clock/mega/sysclk.h **** #define ASM __asm__
  57:../../../platform/common/services/clock/mega/sysclk.h **** 
  58:../../../platform/common/services/clock/mega/sysclk.h **** /* CONFIG_SYSCLK_PSDIV  to use default if not defined*/
  59:../../../platform/common/services/clock/mega/sysclk.h **** #ifndef CONFIG_SYSCLK_PSDIV
  60:../../../platform/common/services/clock/mega/sysclk.h **** # define CONFIG_SYSCLK_PSDIV    SYSCLK_PSDIV_8
  61:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  62:../../../platform/common/services/clock/mega/sysclk.h **** 
  63:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Prescaler Setting (relative to CLKsys) */
  64:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
  65:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_1      0   /* !< Do not prescale */
  66:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_2      1   /* !< Prescale CLKper4 by 2 */
  67:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_4      2   /* !< Prescale CLKper4 by 4 */
  68:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_8      3   /* !< Prescale CLKper4 by 8 */
  69:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_16     4   /* !< Prescale CLKper4 by 16 */
  70:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_32     5   /* !< Prescale CLKper4 by 32 */
  71:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_64     6   /* !< Prescale CLKper4 by 64 */
  72:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_128    7   /* !< Prescale CLKper4 by 128 */
  73:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_256    8   /* !< Prescale CLKper4 by 256 */
  74:../../../platform/common/services/clock/mega/sysclk.h **** 
  75:../../../platform/common/services/clock/mega/sysclk.h **** /* @} */
  76:../../../platform/common/services/clock/mega/sysclk.h **** 
  77:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF || MEGA_XX0_1 || MEGA_XX4 || MEGA_XX4_A
  78:../../../platform/common/services/clock/mega/sysclk.h **** 
  79:../../../platform/common/services/clock/mega/sysclk.h **** #define NUMBER_OF_POWER_REG       2
  80:../../../platform/common/services/clock/mega/sysclk.h **** /*Starting Address for power reduction*/
  81:../../../platform/common/services/clock/mega/sysclk.h **** #define POWER_REG_ADD             PRR0
  82:../../../platform/common/services/clock/mega/sysclk.h **** 
  83:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Power Reduction  Clock Port Numbers */
  84:../../../platform/common/services/clock/mega/sysclk.h **** enum power_red_id {
  85:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG0,     /* !< Devices on PRR0 */
  86:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX4 || !MEGA_XX4_A || MEGA_XX0_1
  87:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG1,     /* !< Devices on PRR1 */
  88:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  89:../../../platform/common/services/clock/mega/sysclk.h **** };
  90:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  91:../../../platform/common/services/clock/mega/sysclk.h **** 
  92:../../../platform/common/services/clock/mega/sysclk.h **** /****************************************************
  93:../../../platform/common/services/clock/mega/sysclk.h ****  * Given a dummy type but not used for these groups
  94:../../../platform/common/services/clock/mega/sysclk.h ****  * to support for otherthen megaRF device.
  95:../../../platform/common/services/clock/mega/sysclk.h ****  **************************************************/
  96:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX8 || MEGA_XX8_A || MEGA_UNSPECIFIED
  97:../../../platform/common/services/clock/mega/sysclk.h **** #define NUMBER_OF_POWER_REG       1
  98:../../../platform/common/services/clock/mega/sysclk.h **** /*Starting Address for power reduction*/
  99:../../../platform/common/services/clock/mega/sysclk.h **** #define POWER_REG_ADD             PRR
 100:../../../platform/common/services/clock/mega/sysclk.h **** 
 101:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Power Reduction  Clock Port Numbers */
 102:../../../platform/common/services/clock/mega/sysclk.h **** enum power_red_id {
 103:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG0,     /* !< Devices on PRR */
 104:../../../platform/common/services/clock/mega/sysclk.h **** };
 105:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 106:../../../platform/common/services/clock/mega/sysclk.h **** 
 107:../../../platform/common/services/clock/mega/sysclk.h **** /* Bit mask for the power reduction register based on */
 108:../../../platform/common/services/clock/mega/sysclk.h **** /*   MCU ARCH.                                        */
 109:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 110:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for PRR2 */
 111:../../../platform/common/services/clock/mega/sysclk.h **** 
 112:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM0_bm                       1 << PRRAM0
 113:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM1_bm                       1 << PRRAM1
 114:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM2_bm                       1 << PRRAM2
 115:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM3_bm                       1 << PRRAM3
 116:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 117:../../../platform/common/services/clock/mega/sysclk.h **** 
 118:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for the power reduction 0 or PRR*/
 119:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN0 && !MEGA_XX_UN0
 120:../../../platform/common/services/clock/mega/sysclk.h **** #define PRADC_bm                        1 << PRADC
 121:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART0_bm                     1 << PRUSART0
 122:../../../platform/common/services/clock/mega/sysclk.h **** #define PRSPI_bm                        1 << PRSPI
 123:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM1_bm                       1 << PRTIM1
 124:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 125:../../../platform/common/services/clock/mega/sysclk.h **** 
 126:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 127:../../../platform/common/services/clock/mega/sysclk.h **** #define PRPGA_bm                        1 << PRPGA
 128:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 129:../../../platform/common/services/clock/mega/sysclk.h **** 
 130:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_UNSPECIFIED
 131:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM0_bm                       1 << PRTIM0
 132:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM2_bm                       1 << PRTIM2
 133:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTWI_bm                        1 << PRTWI
 134:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 135:../../../platform/common/services/clock/mega/sysclk.h **** 
 136:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX_UN2
 137:../../../platform/common/services/clock/mega/sysclk.h **** #define PRLCD_bm                        1 << PRLCD
 138:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 139:../../../platform/common/services/clock/mega/sysclk.h **** 
 140:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for  PRR1  */
 141:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef PRR1
 142:../../../platform/common/services/clock/mega/sysclk.h **** #if (MEGA_XX4 || MEGA_XX4_A)
 143:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM3_bm                       1 << PRTIM3
 144:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 145:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 146:../../../platform/common/services/clock/mega/sysclk.h **** 
 147:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF || MEGA_XX4 || MEGA_XX4_A
 148:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART1_bm                     1 << PRUSART1
 149:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART2_bm                     1 << PRUSART2
 150:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART3_bm                     1 << PRUSART3
 151:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM3_bm                       1 << PRTIM3
 152:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM4_bm                       1 << PRTIM4
 153:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM5_bm                       1 << PRTIM5
 154:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 155:../../../platform/common/services/clock/mega/sysclk.h **** 
 156:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 157:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTRX24_bm                      1 << PRTRX24
 158:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 159:../../../platform/common/services/clock/mega/sysclk.h **** 
 160:../../../platform/common/services/clock/mega/sysclk.h **** /**
 161:../../../platform/common/services/clock/mega/sysclk.h ****  * \name Querying the system clock and its derived clocks
 162:../../../platform/common/services/clock/mega/sysclk.h ****  */
 163:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
 164:../../../platform/common/services/clock/mega/sysclk.h **** 
 165:../../../platform/common/services/clock/mega/sysclk.h **** /**
 166:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the main system clock
 167:../../../platform/common/services/clock/mega/sysclk.h ****  * To know the clock value at what frequency the main clock is running
 168:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the main system clock, in Hz.
 169:../../../platform/common/services/clock/mega/sysclk.h ****  * \todo : please initialize the SYSCLK_SOURCE in conf_clock.h file for
 170:../../../platform/common/services/clock/mega/sysclk.h ****  * configured source clock using fuses.
 171:../../../platform/common/services/clock/mega/sysclk.h ****  * \eg. #define SYSCLK_SOURCE SYSCLK_SRC_RC16MHZ to use internal RC
 172:../../../platform/common/services/clock/mega/sysclk.h ****  * oscillator for clock source.
 173:../../../platform/common/services/clock/mega/sysclk.h ****  */
 174:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_main_hz(void)
 175:../../../platform/common/services/clock/mega/sysclk.h **** {
 176:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (SYSCLK_SOURCE) {
 177:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_RC16MHZ:
 178:../../../platform/common/services/clock/mega/sysclk.h **** 		return 16000000UL;
 179:../../../platform/common/services/clock/mega/sysclk.h **** 
 180:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_RC128KHZ:
 181:../../../platform/common/services/clock/mega/sysclk.h **** 		return 128000UL;
 182:../../../platform/common/services/clock/mega/sysclk.h **** 
 183:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 184:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_TRS16MHZ:
 185:../../../platform/common/services/clock/mega/sysclk.h **** 		return 16000000UL;
 186:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 187:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef BOARD_EXTERNAL_CLK
 188:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_EXTERNAL:
 189:../../../platform/common/services/clock/mega/sysclk.h **** 		return BOARD_EXTERNAL_CLK;
 190:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 191:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 192:../../../platform/common/services/clock/mega/sysclk.h **** 
 193:../../../platform/common/services/clock/mega/sysclk.h **** 		return 1000000UL;
 194:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 195:../../../platform/common/services/clock/mega/sysclk.h **** }
 196:../../../platform/common/services/clock/mega/sysclk.h **** 
 197:../../../platform/common/services/clock/mega/sysclk.h **** /**
 198:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of source clock in Hz.
 199:../../../platform/common/services/clock/mega/sysclk.h ****  *
 200:../../../platform/common/services/clock/mega/sysclk.h ****  * This clock always runs at the same rate as the CPU clock unless the divider
 201:../../../platform/common/services/clock/mega/sysclk.h ****  * is set.
 202:../../../platform/common/services/clock/mega/sysclk.h ****  *
 203:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the system clock, in Hz.
 204:../../../platform/common/services/clock/mega/sysclk.h ****  */
 205:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_source_clock_hz(void)
 206:../../../platform/common/services/clock/mega/sysclk.h **** {
 207:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (CONFIG_SYSCLK_PSDIV) {
 208:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_1: /* Fall through */
 209:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 210:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 211:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 212:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 213:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz();
 214:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 215:../../../platform/common/services/clock/mega/sysclk.h **** 
 216:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_2:
 217:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 218:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 219:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 220:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 221:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 222:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 223:../../../platform/common/services/clock/mega/sysclk.h **** 
 224:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_4:
 225:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 226:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 227:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 228:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 229:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 230:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 231:../../../platform/common/services/clock/mega/sysclk.h **** 
 232:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_8:
 233:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 234:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 235:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 236:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 237:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 238:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 239:../../../platform/common/services/clock/mega/sysclk.h **** 
 240:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_16:
 241:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 242:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 243:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 244:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 245:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 246:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 247:../../../platform/common/services/clock/mega/sysclk.h **** 
 248:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_32:
 249:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 250:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 251:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 252:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 253:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 254:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 255:../../../platform/common/services/clock/mega/sysclk.h **** 
 256:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_64:
 257:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 258:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 259:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 260:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 261:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 262:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 263:../../../platform/common/services/clock/mega/sysclk.h **** 
 264:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_128:
 265:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 266:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 267:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 268:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 269:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 270:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 271:../../../platform/common/services/clock/mega/sysclk.h **** 
 272:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_256:
 273:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 274:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 275:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 512;
 276:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 277:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 278:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 279:../../../platform/common/services/clock/mega/sysclk.h **** 
 280:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 281:../../../platform/common/services/clock/mega/sysclk.h **** 		/*Invalide case*/
 282:../../../platform/common/services/clock/mega/sysclk.h **** 		return 0;
 283:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 284:../../../platform/common/services/clock/mega/sysclk.h **** }
 285:../../../platform/common/services/clock/mega/sysclk.h **** 
 286:../../../platform/common/services/clock/mega/sysclk.h **** /**
 287:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the CPU clock.
 288:../../../platform/common/services/clock/mega/sysclk.h ****  *
 289:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 290:../../../platform/common/services/clock/mega/sysclk.h ****  */
 291:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_cpu_hz(void)
 292:../../../platform/common/services/clock/mega/sysclk.h **** {
 293:../../../platform/common/services/clock/mega/sysclk.h **** 	return sysclk_get_source_clock_hz();
 294:../../../platform/common/services/clock/mega/sysclk.h **** }
 295:../../../platform/common/services/clock/mega/sysclk.h **** 
 296:../../../platform/common/services/clock/mega/sysclk.h **** /**
 297:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the clock from internal oscillator
 298:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 299:../../../platform/common/services/clock/mega/sysclk.h ****  */
 300:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_rc_osc_hz(void)
 301:../../../platform/common/services/clock/mega/sysclk.h **** {
 302:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (CONFIG_SYSCLK_PSDIV) {
 303:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_1:
 304:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 305:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 306:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 307:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 308:../../../platform/common/services/clock/mega/sysclk.h **** 
 309:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_2:
 310:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 311:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 312:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 313:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 314:../../../platform/common/services/clock/mega/sysclk.h **** 
 315:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_4:
 316:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 317:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 318:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 319:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 320:../../../platform/common/services/clock/mega/sysclk.h **** 
 321:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_8:
 322:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 323:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 324:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 325:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 326:../../../platform/common/services/clock/mega/sysclk.h **** 
 327:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_16:
 328:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 329:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 330:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 331:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 332:../../../platform/common/services/clock/mega/sysclk.h **** 
 333:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_32:
 334:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 335:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 336:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 337:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 338:../../../platform/common/services/clock/mega/sysclk.h **** 
 339:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_64:
 340:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 341:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 342:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 343:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 344:../../../platform/common/services/clock/mega/sysclk.h **** 
 345:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_128:
 346:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 347:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 348:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 349:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 350:../../../platform/common/services/clock/mega/sysclk.h **** 
 351:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_256:
 352:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 353:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 354:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 512;
 355:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 356:../../../platform/common/services/clock/mega/sysclk.h **** 
 357:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 358:../../../platform/common/services/clock/mega/sysclk.h **** 		return 0;
 359:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 360:../../../platform/common/services/clock/mega/sysclk.h **** }
 361:../../../platform/common/services/clock/mega/sysclk.h **** 
 362:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Enabling and disabling synchronous clocks */
 363:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
 364:../../../platform/common/services/clock/mega/sysclk.h **** 
 365:../../../platform/common/services/clock/mega/sysclk.h **** /**
 366:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Enable the clock to peripheral \a id on port \a port
 367:../../../platform/common/services/clock/mega/sysclk.h ****  *
 368:../../../platform/common/services/clock/mega/sysclk.h ****  * \param port ID of the port to which the module is connected (one of
 369:../../../platform/common/services/clock/mega/sysclk.h ****  * the \c power_red_id *definitions).
 370:../../../platform/common/services/clock/mega/sysclk.h ****  * \param id The ID (bitmask) of the peripheral module to be disabled.*
 371:../../../platform/common/services/clock/mega/sysclk.h ****  */
 372:../../../platform/common/services/clock/mega/sysclk.h **** extern void sysclk_enable_module(enum power_red_id port, uint8_t id);
 373:../../../platform/common/services/clock/mega/sysclk.h **** 
 374:../../../platform/common/services/clock/mega/sysclk.h **** /**
 375:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Disable the clock to peripheral \a id on port \a port
 376:../../../platform/common/services/clock/mega/sysclk.h ****  *
 377:../../../platform/common/services/clock/mega/sysclk.h ****  * \param port ID of the port to which the module is connected (one of
 378:../../../platform/common/services/clock/mega/sysclk.h ****  * the \c power_red_id *definitions).
 379:../../../platform/common/services/clock/mega/sysclk.h ****  * \param id The ID (bit mask) of the peripheral module to be disabled.
 380:../../../platform/common/services/clock/mega/sysclk.h ****  */
 381:../../../platform/common/services/clock/mega/sysclk.h **** extern void sysclk_disable_module(enum power_red_id port, uint8_t id);
 382:../../../platform/common/services/clock/mega/sysclk.h **** 
 383:../../../platform/common/services/clock/mega/sysclk.h **** /**
 384:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Enable a peripherals clock from its base address.
 385:../../../platform/common/services/clock/mega/sysclk.h ****  *
 386:../../../platform/common/services/clock/mega/sysclk.h ****  *  Enables the clock to a peripheral, given its base address. If the peripheral
 387:../../../platform/common/services/clock/mega/sysclk.h ****  *  has an associated clock on the HSB bus, this will be enabled also.
 388:../../../platform/common/services/clock/mega/sysclk.h ****  *
 389:../../../platform/common/services/clock/mega/sysclk.h ****  * \param module Pointer to the module's base address.
 390:../../../platform/common/services/clock/mega/sysclk.h ****  */
 391:../../../platform/common/services/clock/mega/sysclk.h **** static inline void sysclk_enable_peripheral_clock(const volatile void *module)
 392:../../../platform/common/services/clock/mega/sysclk.h **** {
  15               		.loc 1 392 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25 0004 00D0      		rcall .
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 6
  28 0006 CDB7      		in r28,__SP_L__
  29 0008 DEB7      		in r29,__SP_H__
  30               	.LCFI3:
  31               		.cfi_def_cfa_register 28
  32               	/* prologue: function */
  33               	/* frame size = 2 */
  34               	/* stack size = 4 */
  35               	.L__stack_usage = 4
  36 000a 9A83      		std Y+2,r25
  37 000c 8983      		std Y+1,r24
 393:../../../platform/common/services/clock/mega/sysclk.h **** 	if (module == NULL) {
  38               		.loc 1 393 0
  39 000e 8981      		ldd r24,Y+1
  40 0010 9A81      		ldd r25,Y+2
  41 0012 892B      		or r24,r25
  42 0014 01F4      		brne .+2
  43 0016 00C0      		rjmp .L14
 394:../../../platform/common/services/clock/mega/sysclk.h **** 		Assert(false);
 395:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 396:../../../platform/common/services/clock/mega/sysclk.h **** 
 397:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN0 && !MEGA_XX_UN1
 398:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &ADC) {
  44               		.loc 1 398 0
  45 0018 8981      		ldd r24,Y+1
  46 001a 9A81      		ldd r25,Y+2
  47 001c 8837      		cpi r24,120
  48 001e 9105      		cpc r25,__zero_reg__
  49 0020 01F4      		brne .L3
 399:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRADC_bm);
  50               		.loc 1 399 0
  51 0022 61E0      		ldi r22,lo8(1)
  52 0024 80E0      		ldi r24,0
  53 0026 0E94 0000 		call sysclk_enable_module
 400:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 401:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRPGA_bm);
  54               		.loc 1 401 0
  55 002a 60E1      		ldi r22,lo8(16)
  56 002c 80E0      		ldi r24,0
  57 002e 0E94 0000 		call sysclk_enable_module
 402:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 403:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &UCSR0A) {
 404:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRUSART0_bm);
 405:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 406:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 407:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &SPCR) {
 408:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRSPI_bm);
 409:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 410:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 411:../../../platform/common/services/clock/mega/sysclk.h **** 
 412:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &TCCR1A) {
 413:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM1_bm);
 414:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 415:../../../platform/common/services/clock/mega/sysclk.h **** 
 416:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX_UN2
 417:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &LCDCRA) {
 418:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRLCD_bm);
 419:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 420:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 421:../../../platform/common/services/clock/mega/sysclk.h **** 
 422:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN2
 423:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &TCCR0A) {
 424:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM0_bm);
 425:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR2A) {
 426:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM2_bm);
 427:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TWBR) {
 428:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTWI_bm);
 429:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 430:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 431:../../../platform/common/services/clock/mega/sysclk.h **** 
 432:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 433:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &UCSR1A) {
 434:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRUSART1_bm);
 435:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR3A) {
 436:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM3_bm);
 437:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR4A) {
 438:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM4_bm);
 439:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR5A) {
 440:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM5_bm);
 441:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TRX_CTRL_0) {
 442:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTRX24_bm);
 443:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 444:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 445:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 446:../../../platform/common/services/clock/mega/sysclk.h **** 	else {
 447:../../../platform/common/services/clock/mega/sysclk.h **** 		Assert(false);
 448:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 449:../../../platform/common/services/clock/mega/sysclk.h **** }
  58               		.loc 1 449 0
  59 0032 00C0      		rjmp .L14
  60               	.L3:
 403:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRUSART0_bm);
  61               		.loc 1 403 0
  62 0034 8981      		ldd r24,Y+1
  63 0036 9A81      		ldd r25,Y+2
  64 0038 803C      		cpi r24,-64
  65 003a 9105      		cpc r25,__zero_reg__
  66 003c 01F4      		brne .L4
 404:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  67               		.loc 1 404 0
  68 003e 62E0      		ldi r22,lo8(2)
  69 0040 80E0      		ldi r24,0
  70 0042 0E94 0000 		call sysclk_enable_module
  71               		.loc 1 449 0
  72 0046 00C0      		rjmp .L14
  73               	.L4:
 407:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRSPI_bm);
  74               		.loc 1 407 0
  75 0048 8981      		ldd r24,Y+1
  76 004a 9A81      		ldd r25,Y+2
  77 004c 8C34      		cpi r24,76
  78 004e 9105      		cpc r25,__zero_reg__
  79 0050 01F4      		brne .L5
 408:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  80               		.loc 1 408 0
  81 0052 64E0      		ldi r22,lo8(4)
  82 0054 80E0      		ldi r24,0
  83 0056 0E94 0000 		call sysclk_enable_module
  84               		.loc 1 449 0
  85 005a 00C0      		rjmp .L14
  86               	.L5:
 412:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM1_bm);
  87               		.loc 1 412 0
  88 005c 8981      		ldd r24,Y+1
  89 005e 9A81      		ldd r25,Y+2
  90 0060 8038      		cpi r24,-128
  91 0062 9105      		cpc r25,__zero_reg__
  92 0064 01F4      		brne .L6
 413:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  93               		.loc 1 413 0
  94 0066 68E0      		ldi r22,lo8(8)
  95 0068 80E0      		ldi r24,0
  96 006a 0E94 0000 		call sysclk_enable_module
  97               		.loc 1 449 0
  98 006e 00C0      		rjmp .L14
  99               	.L6:
 423:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM0_bm);
 100               		.loc 1 423 0
 101 0070 8981      		ldd r24,Y+1
 102 0072 9A81      		ldd r25,Y+2
 103 0074 8434      		cpi r24,68
 104 0076 9105      		cpc r25,__zero_reg__
 105 0078 01F4      		brne .L7
 424:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR2A) {
 106               		.loc 1 424 0
 107 007a 60E2      		ldi r22,lo8(32)
 108 007c 80E0      		ldi r24,0
 109 007e 0E94 0000 		call sysclk_enable_module
 110               		.loc 1 449 0
 111 0082 00C0      		rjmp .L14
 112               	.L7:
 425:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM2_bm);
 113               		.loc 1 425 0
 114 0084 8981      		ldd r24,Y+1
 115 0086 9A81      		ldd r25,Y+2
 116 0088 803B      		cpi r24,-80
 117 008a 9105      		cpc r25,__zero_reg__
 118 008c 01F4      		brne .L8
 426:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TWBR) {
 119               		.loc 1 426 0
 120 008e 60E4      		ldi r22,lo8(64)
 121 0090 80E0      		ldi r24,0
 122 0092 0E94 0000 		call sysclk_enable_module
 123               		.loc 1 449 0
 124 0096 00C0      		rjmp .L14
 125               	.L8:
 427:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTWI_bm);
 126               		.loc 1 427 0
 127 0098 8981      		ldd r24,Y+1
 128 009a 9A81      		ldd r25,Y+2
 129 009c 883B      		cpi r24,-72
 130 009e 9105      		cpc r25,__zero_reg__
 131 00a0 01F4      		brne .L9
 428:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 132               		.loc 1 428 0
 133 00a2 60E8      		ldi r22,lo8(-128)
 134 00a4 80E0      		ldi r24,0
 135 00a6 0E94 0000 		call sysclk_enable_module
 136               		.loc 1 449 0
 137 00aa 00C0      		rjmp .L14
 138               	.L9:
 433:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRUSART1_bm);
 139               		.loc 1 433 0
 140 00ac 8981      		ldd r24,Y+1
 141 00ae 9A81      		ldd r25,Y+2
 142 00b0 883C      		cpi r24,-56
 143 00b2 9105      		cpc r25,__zero_reg__
 144 00b4 01F4      		brne .L10
 434:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR3A) {
 145               		.loc 1 434 0
 146 00b6 61E0      		ldi r22,lo8(1)
 147 00b8 81E0      		ldi r24,lo8(1)
 148 00ba 0E94 0000 		call sysclk_enable_module
 149               		.loc 1 449 0
 150 00be 00C0      		rjmp .L14
 151               	.L10:
 435:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM3_bm);
 152               		.loc 1 435 0
 153 00c0 8981      		ldd r24,Y+1
 154 00c2 9A81      		ldd r25,Y+2
 155 00c4 8039      		cpi r24,-112
 156 00c6 9105      		cpc r25,__zero_reg__
 157 00c8 01F4      		brne .L11
 436:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR4A) {
 158               		.loc 1 436 0
 159 00ca 68E0      		ldi r22,lo8(8)
 160 00cc 81E0      		ldi r24,lo8(1)
 161 00ce 0E94 0000 		call sysclk_enable_module
 162               		.loc 1 449 0
 163 00d2 00C0      		rjmp .L14
 164               	.L11:
 437:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM4_bm);
 165               		.loc 1 437 0
 166 00d4 8981      		ldd r24,Y+1
 167 00d6 9A81      		ldd r25,Y+2
 168 00d8 803A      		cpi r24,-96
 169 00da 9105      		cpc r25,__zero_reg__
 170 00dc 01F4      		brne .L12
 438:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR5A) {
 171               		.loc 1 438 0
 172 00de 60E1      		ldi r22,lo8(16)
 173 00e0 81E0      		ldi r24,lo8(1)
 174 00e2 0E94 0000 		call sysclk_enable_module
 175               		.loc 1 449 0
 176 00e6 00C0      		rjmp .L14
 177               	.L12:
 439:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM5_bm);
 178               		.loc 1 439 0
 179 00e8 8981      		ldd r24,Y+1
 180 00ea 9A81      		ldd r25,Y+2
 181 00ec 8032      		cpi r24,32
 182 00ee 9140      		sbci r25,1
 183 00f0 01F4      		brne .L13
 440:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TRX_CTRL_0) {
 184               		.loc 1 440 0
 185 00f2 60E2      		ldi r22,lo8(32)
 186 00f4 81E0      		ldi r24,lo8(1)
 187 00f6 0E94 0000 		call sysclk_enable_module
 188               		.loc 1 449 0
 189 00fa 00C0      		rjmp .L14
 190               	.L13:
 441:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTRX24_bm);
 191               		.loc 1 441 0
 192 00fc 8981      		ldd r24,Y+1
 193 00fe 9A81      		ldd r25,Y+2
 194 0100 8334      		cpi r24,67
 195 0102 9140      		sbci r25,1
 196 0104 01F4      		brne .L14
 442:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 197               		.loc 1 442 0
 198 0106 60E4      		ldi r22,lo8(64)
 199 0108 81E0      		ldi r24,lo8(1)
 200 010a 0E94 0000 		call sysclk_enable_module
 201               	.L14:
 202               		.loc 1 449 0
 203 010e 0000      		nop
 204               	/* epilogue start */
 205 0110 0F90      		pop __tmp_reg__
 206 0112 0F90      		pop __tmp_reg__
 207 0114 DF91      		pop r29
 208 0116 CF91      		pop r28
 209 0118 0895      		ret
 210               		.cfi_endproc
 211               	.LFE69:
 214               	__portable_avr_delay_cycles:
 215               	.LFB74:
 216               		.file 2 "../../../platform/common/services/delay/mega_rf/cycle_counter.h"
   1:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
   2:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \file
   3:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   4:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \brief AVR functions for busy-wait delay loops
   5:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   6:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Copyright (c) 2011 - 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   8:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_start
   9:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  10:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \page License
  11:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  12:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  15:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  18:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  22:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  25:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  28:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  40:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_stop
  41:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  42:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  43:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifndef _cycle_counter_h_
  44:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #define _cycle_counter_h_
  45:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  46:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifdef __cplusplus
  47:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** extern "C" {
  48:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #endif
  49:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  50:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #include <compiler.h>
  51:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  52:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
  53:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @name Convenience functions for busy-wait delay loops
  54:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  55:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def delay_cycles
  56:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of CPU cycles.
  57:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param n number of CPU cycles to wait
  58:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  59:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_ms
  60:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of milliseconds.
  61:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of milliseconds to wait
  62:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  63:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  64:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_us
  65:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of microseconds.
  66:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of microseconds to wait
  67:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  68:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  69:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_ms_2_cy
  70:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert milli-seconds into CPU cycles.
  71:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of milliseconds
  72:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  73:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  74:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  75:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_us_2_cy
  76:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert micro-seconds into CPU cycles.
  77:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of microseconds
  78:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  79:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  80:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  81:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @{
  82:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  83:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** __always_optimize
  84:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** static inline void __portable_avr_delay_cycles(unsigned long n)
  85:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** {
 217               		.loc 2 85 0
 218               		.cfi_startproc
 219               	/* prologue: function */
 220               	/* frame size = 0 */
 221               	/* stack size = 0 */
 222               	.L__stack_usage = 0
 223               	.L16:
  86:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 	do { barrier(); } while (--n);
 224               		.loc 2 86 0 discriminator 1
 225 011a 6150      		subi r22,1
 226 011c 7109      		sbc r23,__zero_reg__
 227 011e 8109      		sbc r24,__zero_reg__
 228 0120 9109      		sbc r25,__zero_reg__
 229 0122 01F4      		brne .L16
 230               	/* epilogue start */
  87:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** }
 231               		.loc 2 87 0
 232 0124 0895      		ret
 233               		.cfi_endproc
 234               	.LFE74:
 236               		.section	.bss.phyState,"aw",@nobits
 239               	phyState:
 240 0000 00        		.zero	1
 241               		.section	.bss.phyRxBuffer,"aw",@nobits
 244               	phyRxBuffer:
 245 0000 0000 0000 		.zero	128
 245      0000 0000 
 245      0000 0000 
 245      0000 0000 
 245      0000 0000 
 246               		.section	.bss.phyRxState,"aw",@nobits
 249               	phyRxState:
 250 0000 00        		.zero	1
 251               		.text
 252               	.global	PHY_Init
 254               	PHY_Init:
 255               	.LFB75:
 256               		.file 3 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c"
   1:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /**
   2:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \file phy.c
   3:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   4:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \brief ATMEGAxxxRFA1 PHY implementation
   5:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   6:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * Copyright (C) 2014, Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   8:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  10:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  13:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  16:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  20:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  23:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  26:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  38:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  40:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  41:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  */
  42:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  43:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ATMEGARFA1
  44:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  45:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Includes ---------------------------------------------------------------*/
  46:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "phy.h"
  47:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "delay.h"
  48:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "sal.h"
  49:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "atmegarfa1.h"
  50:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  51:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Definitions ------------------------------------------------------------*/
  52:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #define PHY_CRC_SIZE          2
  53:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #define IRQ_CLEAR_VALUE       0xff
  54:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Types ------------------------------------------------------------------*/
  55:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** typedef enum {
  56:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_INITIAL,
  57:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_IDLE,
  58:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_SLEEP,
  59:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_TX_WAIT_END,
  60:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** } PhyState_t;
  61:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  62:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Prototypes -------------------------------------------------------------*/
  63:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phySetRxState(void);
  64:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  65:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Variables --------------------------------------------------------------*/
  66:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static PhyState_t phyState = PHY_STATE_INITIAL;
  67:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static uint8_t phyRxBuffer[128];
  68:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static bool phyRxState;
  69:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  70:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Implementations --------------------------------------------------------*/
  71:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  72:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
  73:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
  74:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Init(void)
  75:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 257               		.loc 3 75 0
 258               		.cfi_startproc
 259 0126 CF93      		push r28
 260               	.LCFI4:
 261               		.cfi_def_cfa_offset 3
 262               		.cfi_offset 28, -2
 263 0128 DF93      		push r29
 264               	.LCFI5:
 265               		.cfi_def_cfa_offset 4
 266               		.cfi_offset 29, -3
 267 012a CDB7      		in r28,__SP_L__
 268 012c DEB7      		in r29,__SP_H__
 269               	.LCFI6:
 270               		.cfi_def_cfa_register 28
 271               	/* prologue: function */
 272               	/* frame size = 0 */
 273               	/* stack size = 2 */
 274               	.L__stack_usage = 2
  76:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sysclk_enable_peripheral_clock(&TRX_CTRL_0);
 275               		.loc 3 76 0
 276 012e 83E4      		ldi r24,lo8(67)
 277 0130 91E0      		ldi r25,lo8(1)
 278 0132 0E94 0000 		call sysclk_enable_peripheral_clock
  77:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  78:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.trxrst = 1;
 279               		.loc 3 78 0
 280 0136 89E3      		ldi r24,lo8(57)
 281 0138 91E0      		ldi r25,lo8(1)
 282 013a FC01      		movw r30,r24
 283 013c 2081      		ld r18,Z
 284 013e 2160      		ori r18,lo8(1)
 285 0140 FC01      		movw r30,r24
 286 0142 2083      		st Z,r18
  79:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  80:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyRxState = false;
 287               		.loc 3 80 0
 288 0144 1092 0000 		sts phyRxState,__zero_reg__
  81:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_IDLE;
 289               		.loc 3 81 0
 290 0148 81E0      		ldi r24,lo8(1)
 291 014a 8093 0000 		sts phyState,r24
  82:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  83:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 292               		.loc 3 83 0
 293 014e 88E0      		ldi r24,lo8(8)
 294 0150 0E94 0000 		call phyTrxSetState
  84:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  85:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_2_REG_s.rxSafeMode = 1;
 295               		.loc 3 85 0
 296 0154 8CE4      		ldi r24,lo8(76)
 297 0156 91E0      		ldi r25,lo8(1)
 298 0158 FC01      		movw r30,r24
 299 015a 2081      		ld r18,Z
 300 015c 2068      		ori r18,lo8(-128)
 301 015e FC01      		movw r30,r24
 302 0160 2083      		st Z,r18
  86:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  87:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
  88:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = (uint8_t)PHY_RandomReq();
  89:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
  90:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  91:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
  92:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antCtrl = 2;
  93:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	RX_CTRL_REG_s.pdtThres = 0x03;
  94:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 1;
  95:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 1;
  96:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #else
  97:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DEFAULT != 0)
  98:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
  99:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antCtrl = ANTENNA_DEFAULT;
 100:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DEFAULT
 101:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // ANTENNA_DIVERSITY
 102:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 103:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 1;
 104:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 105:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 303               		.loc 3 105 0
 304 0162 0000      		nop
 305               	/* epilogue start */
 306 0164 DF91      		pop r29
 307 0166 CF91      		pop r28
 308 0168 0895      		ret
 309               		.cfi_endproc
 310               	.LFE75:
 312               	.global	PHY_ResetRadio
 314               	PHY_ResetRadio:
 315               	.LFB76:
 106:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 107:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_ResetRadio(void)
 108:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 316               		.loc 3 108 0
 317               		.cfi_startproc
 318 016a CF93      		push r28
 319               	.LCFI7:
 320               		.cfi_def_cfa_offset 3
 321               		.cfi_offset 28, -2
 322 016c DF93      		push r29
 323               	.LCFI8:
 324               		.cfi_def_cfa_offset 4
 325               		.cfi_offset 29, -3
 326 016e CDB7      		in r28,__SP_L__
 327 0170 DEB7      		in r29,__SP_H__
 328               	.LCFI9:
 329               		.cfi_def_cfa_register 28
 330               	/* prologue: function */
 331               	/* frame size = 0 */
 332               	/* stack size = 2 */
 333               	.L__stack_usage = 2
 109:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.trxrst = 1;
 334               		.loc 3 109 0
 335 0172 89E3      		ldi r24,lo8(57)
 336 0174 91E0      		ldi r25,lo8(1)
 337 0176 FC01      		movw r30,r24
 338 0178 2081      		ld r18,Z
 339 017a 2160      		ori r18,lo8(1)
 340 017c FC01      		movw r30,r24
 341 017e 2083      		st Z,r18
 110:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 342               		.loc 3 110 0
 343 0180 0000      		nop
 344               	/* epilogue start */
 345 0182 DF91      		pop r29
 346 0184 CF91      		pop r28
 347 0186 0895      		ret
 348               		.cfi_endproc
 349               	.LFE76:
 351               	.global	PHY_SetTdmaMode
 353               	PHY_SetTdmaMode:
 354               	.LFB77:
 111:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 112:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetTdmaMode(bool mode)
 113:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 355               		.loc 3 113 0
 356               		.cfi_startproc
 357 0188 CF93      		push r28
 358               	.LCFI10:
 359               		.cfi_def_cfa_offset 3
 360               		.cfi_offset 28, -2
 361 018a DF93      		push r29
 362               	.LCFI11:
 363               		.cfi_def_cfa_offset 4
 364               		.cfi_offset 29, -3
 365 018c 1F92      		push __zero_reg__
 366               	.LCFI12:
 367               		.cfi_def_cfa_offset 5
 368 018e CDB7      		in r28,__SP_L__
 369 0190 DEB7      		in r29,__SP_H__
 370               	.LCFI13:
 371               		.cfi_def_cfa_register 28
 372               	/* prologue: function */
 373               	/* frame size = 1 */
 374               	/* stack size = 3 */
 375               	.L__stack_usage = 3
 376 0192 8983      		std Y+1,r24
 114:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(mode)
 377               		.loc 3 114 0
 378 0194 8981      		ldd r24,Y+1
 379 0196 8823      		tst r24
 380 0198 01F0      		breq .L22
 115:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 116:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 0;
 381               		.loc 3 116 0
 382 019a 8CE6      		ldi r24,lo8(108)
 383 019c 91E0      		ldi r25,lo8(1)
 384 019e FC01      		movw r30,r24
 385 01a0 2081      		ld r18,Z
 386 01a2 2F70      		andi r18,lo8(15)
 387 01a4 FC01      		movw r30,r24
 388 01a6 2083      		st Z,r18
 117:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 7;
 389               		.loc 3 117 0
 390 01a8 8CE6      		ldi r24,lo8(108)
 391 01aa 91E0      		ldi r25,lo8(1)
 392 01ac FC01      		movw r30,r24
 393 01ae 2081      		ld r18,Z
 394 01b0 2E60      		ori r18,lo8(14)
 395 01b2 FC01      		movw r30,r24
 396 01b4 2083      		st Z,r18
 118:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	
 119:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;	// Disable ACK even if requested		
 397               		.loc 3 119 0
 398 01b6 8EE6      		ldi r24,lo8(110)
 399 01b8 91E0      		ldi r25,lo8(1)
 400 01ba FC01      		movw r30,r24
 401 01bc 2081      		ld r18,Z
 402 01be 2061      		ori r18,lo8(16)
 403 01c0 FC01      		movw r30,r24
 404 01c2 2083      		st Z,r18
 120:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 121:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	else
 122:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 123:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 3;
 124:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 125:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		
 126:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 127:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 128:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 405               		.loc 3 128 0
 406 01c4 00C0      		rjmp .L24
 407               	.L22:
 123:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 408               		.loc 3 123 0
 409 01c6 8CE6      		ldi r24,lo8(108)
 410 01c8 91E0      		ldi r25,lo8(1)
 411 01ca FC01      		movw r30,r24
 412 01cc 2081      		ld r18,Z
 413 01ce 2F70      		andi r18,lo8(15)
 414 01d0 2063      		ori r18,lo8(48)
 415 01d2 FC01      		movw r30,r24
 416 01d4 2083      		st Z,r18
 124:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		
 417               		.loc 3 124 0
 418 01d6 8CE6      		ldi r24,lo8(108)
 419 01d8 91E0      		ldi r25,lo8(1)
 420 01da FC01      		movw r30,r24
 421 01dc 2081      		ld r18,Z
 422 01de 217F      		andi r18,lo8(-15)
 423 01e0 2860      		ori r18,lo8(8)
 424 01e2 FC01      		movw r30,r24
 425 01e4 2083      		st Z,r18
 126:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 426               		.loc 3 126 0
 427 01e6 8EE6      		ldi r24,lo8(110)
 428 01e8 91E0      		ldi r25,lo8(1)
 429 01ea FC01      		movw r30,r24
 430 01ec 2081      		ld r18,Z
 431 01ee 2F7E      		andi r18,lo8(-17)
 432 01f0 FC01      		movw r30,r24
 433 01f2 2083      		st Z,r18
 434               	.L24:
 435               		.loc 3 128 0
 436 01f4 0000      		nop
 437               	/* epilogue start */
 438 01f6 0F90      		pop __tmp_reg__
 439 01f8 DF91      		pop r29
 440 01fa CF91      		pop r28
 441 01fc 0895      		ret
 442               		.cfi_endproc
 443               	.LFE77:
 445               	.global	PHY_SetPromiscuousMode
 447               	PHY_SetPromiscuousMode:
 448               	.LFB78:
 129:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 130:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPromiscuousMode(bool mode)
 131:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 449               		.loc 3 131 0
 450               		.cfi_startproc
 451 01fe CF93      		push r28
 452               	.LCFI14:
 453               		.cfi_def_cfa_offset 3
 454               		.cfi_offset 28, -2
 455 0200 DF93      		push r29
 456               	.LCFI15:
 457               		.cfi_def_cfa_offset 4
 458               		.cfi_offset 29, -3
 459 0202 CDB7      		in r28,__SP_L__
 460 0204 DEB7      		in r29,__SP_H__
 461               	.LCFI16:
 462               		.cfi_def_cfa_register 28
 463 0206 2997      		sbiw r28,9
 464               	.LCFI17:
 465               		.cfi_def_cfa_offset 13
 466 0208 0FB6      		in __tmp_reg__,__SREG__
 467 020a F894      		cli
 468 020c DEBF      		out __SP_H__,r29
 469 020e 0FBE      		out __SREG__,__tmp_reg__
 470 0210 CDBF      		out __SP_L__,r28
 471               	/* prologue: function */
 472               	/* frame size = 9 */
 473               	/* stack size = 11 */
 474               	.L__stack_usage = 11
 475 0212 8987      		std Y+9,r24
 132:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t ieee_address[] = { 0, 0, 0, 0, 0, 0, 0, 0 };
 476               		.loc 3 132 0
 477 0214 28E0      		ldi r18,lo8(8)
 478 0216 CE01      		movw r24,r28
 479 0218 0196      		adiw r24,1
 480 021a FC01      		movw r30,r24
 481 021c 322F      		mov r19,r18
 482               		0:
 483 021e 1192      		st Z+,__zero_reg__
 484 0220 3A95      		dec r19
 485 0222 01F4      		brne 0b
 133:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 134:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(mode)
 486               		.loc 3 134 0
 487 0224 8985      		ldd r24,Y+9
 488 0226 8823      		tst r24
 489 0228 01F0      		breq .L26
 135:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 136:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetShortAddr(0);
 490               		.loc 3 136 0
 491 022a 80E0      		ldi r24,0
 492 022c 90E0      		ldi r25,0
 493 022e 0E94 0000 		call PHY_SetShortAddr
 137:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetPanId(0);
 494               		.loc 3 137 0
 495 0232 80E0      		ldi r24,0
 496 0234 90E0      		ldi r25,0
 497 0236 0E94 0000 		call PHY_SetPanId
 138:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetIEEEAddr(ieee_address);
 498               		.loc 3 138 0
 499 023a CE01      		movw r24,r28
 500 023c 0196      		adiw r24,1
 501 023e 0E94 0000 		call PHY_SetIEEEAddr
 139:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 140:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** // AACK_UPLD_RES_FT = 1, AACK_FLT_RES_FT = 0:
 141:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	Any non-corrupted frame with a reserved frame type is indicated by a
 142:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	TRX24_RX_END interrupt. No further address filtering is applied on those frames.
 143:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	A TRX24_AMI interrupt is never generated and the acknowledgment subfield is
 144:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	ignored.
 145:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 146:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackPromMode = 1;	// Enable promiscuous mode
 502               		.loc 3 146 0
 503 0242 87E5      		ldi r24,lo8(87)
 504 0244 91E0      		ldi r25,lo8(1)
 505 0246 FC01      		movw r30,r24
 506 0248 2081      		ld r18,Z
 507 024a 2260      		ori r18,lo8(2)
 508 024c FC01      		movw r30,r24
 509 024e 2083      		st Z,r18
 147:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackUpldResFt = 1;	// Enable reserved frame type reception ; this was changed to
 510               		.loc 3 147 0
 511 0250 87E5      		ldi r24,lo8(87)
 512 0252 91E0      		ldi r25,lo8(1)
 513 0254 FC01      		movw r30,r24
 514 0256 2081      		ld r18,Z
 515 0258 2061      		ori r18,lo8(16)
 516 025a FC01      		movw r30,r24
 517 025c 2083      		st Z,r18
 148:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****                                         // so that the addres isn't checked by filter
 149:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackFltrResFt = 0;	// Disable filter of reserved frame types
 518               		.loc 3 149 0
 519 025e 87E5      		ldi r24,lo8(87)
 520 0260 91E0      		ldi r25,lo8(1)
 521 0262 FC01      		movw r30,r24
 522 0264 2081      		ld r18,Z
 523 0266 2F7D      		andi r18,lo8(-33)
 524 0268 FC01      		movw r30,r24
 525 026a 2083      		st Z,r18
 150:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;		// Disable generation of acknowledgment
 526               		.loc 3 150 0
 527 026c 8EE6      		ldi r24,lo8(110)
 528 026e 91E0      		ldi r25,lo8(1)
 529 0270 FC01      		movw r30,r24
 530 0272 2081      		ld r18,Z
 531 0274 2061      		ori r18,lo8(16)
 532 0276 FC01      		movw r30,r24
 533 0278 2083      		st Z,r18
 151:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 152:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	else
 153:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 154:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG = 0;
 155:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 156:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 157:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 534               		.loc 3 157 0
 535 027a 00C0      		rjmp .L28
 536               	.L26:
 154:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 537               		.loc 3 154 0
 538 027c 87E5      		ldi r24,lo8(87)
 539 027e 91E0      		ldi r25,lo8(1)
 540 0280 FC01      		movw r30,r24
 541 0282 1082      		st Z,__zero_reg__
 155:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 542               		.loc 3 155 0
 543 0284 8EE6      		ldi r24,lo8(110)
 544 0286 91E0      		ldi r25,lo8(1)
 545 0288 FC01      		movw r30,r24
 546 028a 2081      		ld r18,Z
 547 028c 2F7E      		andi r18,lo8(-17)
 548 028e FC01      		movw r30,r24
 549 0290 2083      		st Z,r18
 550               	.L28:
 551               		.loc 3 157 0
 552 0292 0000      		nop
 553               	/* epilogue start */
 554 0294 2996      		adiw r28,9
 555 0296 0FB6      		in __tmp_reg__,__SREG__
 556 0298 F894      		cli
 557 029a DEBF      		out __SP_H__,r29
 558 029c 0FBE      		out __SREG__,__tmp_reg__
 559 029e CDBF      		out __SP_L__,r28
 560 02a0 DF91      		pop r29
 561 02a2 CF91      		pop r28
 562 02a4 0895      		ret
 563               		.cfi_endproc
 564               	.LFE78:
 566               	.global	PHY_SetOptimizedCSMAValues
 568               	PHY_SetOptimizedCSMAValues:
 569               	.LFB79:
 158:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 159:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetOptimizedCSMAValues(void)
 160:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 570               		.loc 3 160 0
 571               		.cfi_startproc
 572 02a6 0F93      		push r16
 573               	.LCFI18:
 574               		.cfi_def_cfa_offset 3
 575               		.cfi_offset 16, -2
 576 02a8 1F93      		push r17
 577               	.LCFI19:
 578               		.cfi_def_cfa_offset 4
 579               		.cfi_offset 17, -3
 580 02aa CF93      		push r28
 581               	.LCFI20:
 582               		.cfi_def_cfa_offset 5
 583               		.cfi_offset 28, -4
 584 02ac DF93      		push r29
 585               	.LCFI21:
 586               		.cfi_def_cfa_offset 6
 587               		.cfi_offset 29, -5
 588 02ae CDB7      		in r28,__SP_L__
 589 02b0 DEB7      		in r29,__SP_H__
 590               	.LCFI22:
 591               		.cfi_def_cfa_register 28
 592               	/* prologue: function */
 593               	/* frame size = 0 */
 594               	/* stack size = 4 */
 595               	.L__stack_usage = 4
 161:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	// CSMA_BE_REG_s.minBe = 0x08;
 162:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	// CSMA_BE_REG_s.maxBe = 0x08;
 163:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = (uint8_t)PHY_RandomReq();
 596               		.loc 3 163 0
 597 02b2 0DE6      		ldi r16,lo8(109)
 598 02b4 11E0      		ldi r17,lo8(1)
 599 02b6 0E94 0000 		call PHY_RandomReq
 600 02ba F801      		movw r30,r16
 601 02bc 8083      		st Z,r24
 164:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 602               		.loc 3 164 0
 603 02be 0000      		nop
 604               	/* epilogue start */
 605 02c0 DF91      		pop r29
 606 02c2 CF91      		pop r28
 607 02c4 1F91      		pop r17
 608 02c6 0F91      		pop r16
 609 02c8 0895      		ret
 610               		.cfi_endproc
 611               	.LFE79:
 613               	.global	PHY_SetRxState
 615               	PHY_SetRxState:
 616               	.LFB80:
 165:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 166:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 167:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 168:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetRxState(bool rx)
 169:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 617               		.loc 3 169 0
 618               		.cfi_startproc
 619 02ca CF93      		push r28
 620               	.LCFI23:
 621               		.cfi_def_cfa_offset 3
 622               		.cfi_offset 28, -2
 623 02cc DF93      		push r29
 624               	.LCFI24:
 625               		.cfi_def_cfa_offset 4
 626               		.cfi_offset 29, -3
 627 02ce 1F92      		push __zero_reg__
 628               	.LCFI25:
 629               		.cfi_def_cfa_offset 5
 630 02d0 CDB7      		in r28,__SP_L__
 631 02d2 DEB7      		in r29,__SP_H__
 632               	.LCFI26:
 633               		.cfi_def_cfa_register 28
 634               	/* prologue: function */
 635               	/* frame size = 1 */
 636               	/* stack size = 3 */
 637               	.L__stack_usage = 3
 638 02d4 8983      		std Y+1,r24
 170:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyRxState = rx;
 639               		.loc 3 170 0
 640 02d6 8981      		ldd r24,Y+1
 641 02d8 8093 0000 		sts phyRxState,r24
 171:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 642               		.loc 3 171 0
 643 02dc 0E94 0000 		call phySetRxState
 172:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 644               		.loc 3 172 0
 645 02e0 0000      		nop
 646               	/* epilogue start */
 647 02e2 0F90      		pop __tmp_reg__
 648 02e4 DF91      		pop r29
 649 02e6 CF91      		pop r28
 650 02e8 0895      		ret
 651               		.cfi_endproc
 652               	.LFE80:
 654               	.global	PHY_SetChannel
 656               	PHY_SetChannel:
 657               	.LFB81:
 173:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 174:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 175:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 176:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetChannel(uint8_t channel)
 177:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 658               		.loc 3 177 0
 659               		.cfi_startproc
 660 02ea CF93      		push r28
 661               	.LCFI27:
 662               		.cfi_def_cfa_offset 3
 663               		.cfi_offset 28, -2
 664 02ec DF93      		push r29
 665               	.LCFI28:
 666               		.cfi_def_cfa_offset 4
 667               		.cfi_offset 29, -3
 668 02ee 1F92      		push __zero_reg__
 669               	.LCFI29:
 670               		.cfi_def_cfa_offset 5
 671 02f0 CDB7      		in r28,__SP_L__
 672 02f2 DEB7      		in r29,__SP_H__
 673               	.LCFI30:
 674               		.cfi_def_cfa_register 28
 675               	/* prologue: function */
 676               	/* frame size = 1 */
 677               	/* stack size = 3 */
 678               	.L__stack_usage = 3
 679 02f4 8983      		std Y+1,r24
 178:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_CC_CCA_REG_s.channel = channel;
 680               		.loc 3 178 0
 681 02f6 88E4      		ldi r24,lo8(72)
 682 02f8 91E0      		ldi r25,lo8(1)
 683 02fa 2981      		ldd r18,Y+1
 684 02fc 2F71      		andi r18,lo8(31)
 685 02fe 2F71      		andi r18,lo8(31)
 686 0300 FC01      		movw r30,r24
 687 0302 3081      		ld r19,Z
 688 0304 307E      		andi r19,lo8(-32)
 689 0306 232B      		or r18,r19
 690 0308 FC01      		movw r30,r24
 691 030a 2083      		st Z,r18
 179:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 692               		.loc 3 179 0
 693 030c 0000      		nop
 694               	/* epilogue start */
 695 030e 0F90      		pop __tmp_reg__
 696 0310 DF91      		pop r29
 697 0312 CF91      		pop r28
 698 0314 0895      		ret
 699               		.cfi_endproc
 700               	.LFE81:
 702               	.global	PHY_SetPanId
 704               	PHY_SetPanId:
 705               	.LFB82:
 180:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 181:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 182:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 183:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPanId(uint16_t panId)
 184:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 706               		.loc 3 184 0
 707               		.cfi_startproc
 708 0316 CF93      		push r28
 709               	.LCFI31:
 710               		.cfi_def_cfa_offset 3
 711               		.cfi_offset 28, -2
 712 0318 DF93      		push r29
 713               	.LCFI32:
 714               		.cfi_def_cfa_offset 4
 715               		.cfi_offset 29, -3
 716 031a 00D0      		rcall .
 717 031c 00D0      		rcall .
 718               	.LCFI33:
 719               		.cfi_def_cfa_offset 8
 720 031e CDB7      		in r28,__SP_L__
 721 0320 DEB7      		in r29,__SP_H__
 722               	.LCFI34:
 723               		.cfi_def_cfa_register 28
 724               	/* prologue: function */
 725               	/* frame size = 4 */
 726               	/* stack size = 6 */
 727               	.L__stack_usage = 6
 728 0322 9C83      		std Y+4,r25
 729 0324 8B83      		std Y+3,r24
 185:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *d = (uint8_t *)&panId;
 730               		.loc 3 185 0
 731 0326 CE01      		movw r24,r28
 732 0328 0396      		adiw r24,3
 733 032a 9A83      		std Y+2,r25
 734 032c 8983      		std Y+1,r24
 186:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 187:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PAN_ID_0_REG = d[0];
 735               		.loc 3 187 0
 736 032e 82E6      		ldi r24,lo8(98)
 737 0330 91E0      		ldi r25,lo8(1)
 738 0332 2981      		ldd r18,Y+1
 739 0334 3A81      		ldd r19,Y+2
 740 0336 F901      		movw r30,r18
 741 0338 2081      		ld r18,Z
 742 033a FC01      		movw r30,r24
 743 033c 2083      		st Z,r18
 188:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PAN_ID_1_REG = d[1];
 744               		.loc 3 188 0
 745 033e 83E6      		ldi r24,lo8(99)
 746 0340 91E0      		ldi r25,lo8(1)
 747 0342 2981      		ldd r18,Y+1
 748 0344 3A81      		ldd r19,Y+2
 749 0346 F901      		movw r30,r18
 750 0348 2181      		ldd r18,Z+1
 751 034a FC01      		movw r30,r24
 752 034c 2083      		st Z,r18
 189:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 753               		.loc 3 189 0
 754 034e 0000      		nop
 755               	/* epilogue start */
 756 0350 0F90      		pop __tmp_reg__
 757 0352 0F90      		pop __tmp_reg__
 758 0354 0F90      		pop __tmp_reg__
 759 0356 0F90      		pop __tmp_reg__
 760 0358 DF91      		pop r29
 761 035a CF91      		pop r28
 762 035c 0895      		ret
 763               		.cfi_endproc
 764               	.LFE82:
 766               	.global	PHY_SetShortAddr
 768               	PHY_SetShortAddr:
 769               	.LFB83:
 190:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 191:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 192:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 193:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetShortAddr(uint16_t addr)
 194:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 770               		.loc 3 194 0
 771               		.cfi_startproc
 772 035e CF93      		push r28
 773               	.LCFI35:
 774               		.cfi_def_cfa_offset 3
 775               		.cfi_offset 28, -2
 776 0360 DF93      		push r29
 777               	.LCFI36:
 778               		.cfi_def_cfa_offset 4
 779               		.cfi_offset 29, -3
 780 0362 00D0      		rcall .
 781 0364 00D0      		rcall .
 782               	.LCFI37:
 783               		.cfi_def_cfa_offset 8
 784 0366 CDB7      		in r28,__SP_L__
 785 0368 DEB7      		in r29,__SP_H__
 786               	.LCFI38:
 787               		.cfi_def_cfa_register 28
 788               	/* prologue: function */
 789               	/* frame size = 4 */
 790               	/* stack size = 6 */
 791               	.L__stack_usage = 6
 792 036a 9C83      		std Y+4,r25
 793 036c 8B83      		std Y+3,r24
 195:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *d = (uint8_t *)&addr;
 794               		.loc 3 195 0
 795 036e CE01      		movw r24,r28
 796 0370 0396      		adiw r24,3
 797 0372 9A83      		std Y+2,r25
 798 0374 8983      		std Y+1,r24
 196:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 197:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	SHORT_ADDR_0_REG = d[0];
 799               		.loc 3 197 0
 800 0376 80E6      		ldi r24,lo8(96)
 801 0378 91E0      		ldi r25,lo8(1)
 802 037a 2981      		ldd r18,Y+1
 803 037c 3A81      		ldd r19,Y+2
 804 037e F901      		movw r30,r18
 805 0380 2081      		ld r18,Z
 806 0382 FC01      		movw r30,r24
 807 0384 2083      		st Z,r18
 198:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	SHORT_ADDR_1_REG = d[1];
 808               		.loc 3 198 0
 809 0386 81E6      		ldi r24,lo8(97)
 810 0388 91E0      		ldi r25,lo8(1)
 811 038a 2981      		ldd r18,Y+1
 812 038c 3A81      		ldd r19,Y+2
 813 038e F901      		movw r30,r18
 814 0390 2181      		ldd r18,Z+1
 815 0392 FC01      		movw r30,r24
 816 0394 2083      		st Z,r18
 199:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 200:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifndef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
 201:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = d[0] + d[1];
 817               		.loc 3 201 0
 818 0396 8DE6      		ldi r24,lo8(109)
 819 0398 91E0      		ldi r25,lo8(1)
 820 039a 2981      		ldd r18,Y+1
 821 039c 3A81      		ldd r19,Y+2
 822 039e F901      		movw r30,r18
 823 03a0 4081      		ld r20,Z
 824 03a2 2981      		ldd r18,Y+1
 825 03a4 3A81      		ldd r19,Y+2
 826 03a6 2F5F      		subi r18,-1
 827 03a8 3F4F      		sbci r19,-1
 828 03aa F901      		movw r30,r18
 829 03ac 2081      		ld r18,Z
 830 03ae 240F      		add r18,r20
 831 03b0 FC01      		movw r30,r24
 832 03b2 2083      		st Z,r18
 202:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
 203:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 833               		.loc 3 203 0
 834 03b4 0000      		nop
 835               	/* epilogue start */
 836 03b6 0F90      		pop __tmp_reg__
 837 03b8 0F90      		pop __tmp_reg__
 838 03ba 0F90      		pop __tmp_reg__
 839 03bc 0F90      		pop __tmp_reg__
 840 03be DF91      		pop r29
 841 03c0 CF91      		pop r28
 842 03c2 0895      		ret
 843               		.cfi_endproc
 844               	.LFE83:
 846               	.global	PHY_SetTxPower
 848               	PHY_SetTxPower:
 849               	.LFB84:
 204:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 205:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 206:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 207:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetTxPower(uint8_t txPower)
 208:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 850               		.loc 3 208 0
 851               		.cfi_startproc
 852 03c4 CF93      		push r28
 853               	.LCFI39:
 854               		.cfi_def_cfa_offset 3
 855               		.cfi_offset 28, -2
 856 03c6 DF93      		push r29
 857               	.LCFI40:
 858               		.cfi_def_cfa_offset 4
 859               		.cfi_offset 29, -3
 860 03c8 1F92      		push __zero_reg__
 861               	.LCFI41:
 862               		.cfi_def_cfa_offset 5
 863 03ca CDB7      		in r28,__SP_L__
 864 03cc DEB7      		in r29,__SP_H__
 865               	.LCFI42:
 866               		.cfi_def_cfa_register 28
 867               	/* prologue: function */
 868               	/* frame size = 1 */
 869               	/* stack size = 3 */
 870               	.L__stack_usage = 3
 871 03ce 8983      		std Y+1,r24
 209:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_TX_PWR_REG_s.txPwr = txPower;
 872               		.loc 3 209 0
 873 03d0 85E4      		ldi r24,lo8(69)
 874 03d2 91E0      		ldi r25,lo8(1)
 875 03d4 2981      		ldd r18,Y+1
 876 03d6 2F70      		andi r18,lo8(15)
 877 03d8 2F70      		andi r18,lo8(15)
 878 03da FC01      		movw r30,r24
 879 03dc 3081      		ld r19,Z
 880 03de 307F      		andi r19,lo8(-16)
 881 03e0 232B      		or r18,r19
 882 03e2 FC01      		movw r30,r24
 883 03e4 2083      		st Z,r18
 210:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 884               		.loc 3 210 0
 885 03e6 0000      		nop
 886               	/* epilogue start */
 887 03e8 0F90      		pop __tmp_reg__
 888 03ea DF91      		pop r29
 889 03ec CF91      		pop r28
 890 03ee 0895      		ret
 891               		.cfi_endproc
 892               	.LFE84:
 894               	.global	PHY_Sleep
 896               	PHY_Sleep:
 897               	.LFB85:
 211:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 212:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 213:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 214:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Sleep(void)
 215:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 898               		.loc 3 215 0
 899               		.cfi_startproc
 900 03f0 CF93      		push r28
 901               	.LCFI43:
 902               		.cfi_def_cfa_offset 3
 903               		.cfi_offset 28, -2
 904 03f2 DF93      		push r29
 905               	.LCFI44:
 906               		.cfi_def_cfa_offset 4
 907               		.cfi_offset 29, -3
 908 03f4 CDB7      		in r28,__SP_L__
 909 03f6 DEB7      		in r29,__SP_H__
 910               	.LCFI45:
 911               		.cfi_def_cfa_register 28
 912               	/* prologue: function */
 913               	/* frame size = 0 */
 914               	/* stack size = 2 */
 915               	.L__stack_usage = 2
 216:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(phyState != PHY_STATE_SLEEP)
 916               		.loc 3 216 0
 917 03f8 8091 0000 		lds r24,phyState
 918 03fc 8230      		cpi r24,lo8(2)
 919 03fe 01F0      		breq .L37
 217:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 218:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyTrxSetState(TRX_CMD_TRX_OFF);
 920               		.loc 3 218 0
 921 0400 88E0      		ldi r24,lo8(8)
 922 0402 0E94 0000 		call phyTrxSetState
 219:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRXPR_REG_s.slptr = 1;
 923               		.loc 3 219 0
 924 0406 89E3      		ldi r24,lo8(57)
 925 0408 91E0      		ldi r25,lo8(1)
 926 040a FC01      		movw r30,r24
 927 040c 2081      		ld r18,Z
 928 040e 2260      		ori r18,lo8(2)
 929 0410 FC01      		movw r30,r24
 930 0412 2083      		st Z,r18
 220:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyState = PHY_STATE_SLEEP;		
 931               		.loc 3 220 0
 932 0414 82E0      		ldi r24,lo8(2)
 933 0416 8093 0000 		sts phyState,r24
 934               	.L37:
 221:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 222:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	
 223:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
 224:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 0;
 225:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 0;
 226:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #else
 227:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DEFAULT != 0)
 228:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 0;
 229:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antCtrl = 0;
 230:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DEFAULT
 231:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // ANTENNA_DIVERSITY
 232:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 233:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 0;
 234:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 235:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 935               		.loc 3 235 0
 936 041a 0000      		nop
 937               	/* epilogue start */
 938 041c DF91      		pop r29
 939 041e CF91      		pop r28
 940 0420 0895      		ret
 941               		.cfi_endproc
 942               	.LFE85:
 944               	.global	PHY_Wakeup
 946               	PHY_Wakeup:
 947               	.LFB86:
 236:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 237:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 238:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 239:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Wakeup(void)
 240:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 948               		.loc 3 240 0
 949               		.cfi_startproc
 950 0422 CF93      		push r28
 951               	.LCFI46:
 952               		.cfi_def_cfa_offset 3
 953               		.cfi_offset 28, -2
 954 0424 DF93      		push r29
 955               	.LCFI47:
 956               		.cfi_def_cfa_offset 4
 957               		.cfi_offset 29, -3
 958 0426 CDB7      		in r28,__SP_L__
 959 0428 DEB7      		in r29,__SP_H__
 960               	.LCFI48:
 961               		.cfi_def_cfa_register 28
 962               	/* prologue: function */
 963               	/* frame size = 0 */
 964               	/* stack size = 2 */
 965               	.L__stack_usage = 2
 241:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.slptr = 0;
 966               		.loc 3 241 0
 967 042a 89E3      		ldi r24,lo8(57)
 968 042c 91E0      		ldi r25,lo8(1)
 969 042e FC01      		movw r30,r24
 970 0430 2081      		ld r18,Z
 971 0432 2D7F      		andi r18,lo8(-3)
 972 0434 FC01      		movw r30,r24
 973 0436 2083      		st Z,r18
 242:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 974               		.loc 3 242 0
 975 0438 0E94 0000 		call phySetRxState
 243:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_IDLE;
 976               		.loc 3 243 0
 977 043c 81E0      		ldi r24,lo8(1)
 978 043e 8093 0000 		sts phyState,r24
 244:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 979               		.loc 3 244 0
 980 0442 0000      		nop
 981               	/* epilogue start */
 982 0444 DF91      		pop r29
 983 0446 CF91      		pop r28
 984 0448 0895      		ret
 985               		.cfi_endproc
 986               	.LFE86:
 988               	.global	PHY_DataReq
 990               	PHY_DataReq:
 991               	.LFB87:
 245:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 246:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 247:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 248:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*
 249:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_DataReq(uint8_t *data)
 250:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 251:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TX_ARET_ON);
 252:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 253:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_FRAME_BUFFER(0) = data[0] + PHY_CRC_SIZE;
 254:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	for (uint8_t i = 0; i < data[0]; i++) {
 255:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_FRAME_BUFFER(i + 1) = data[i + 1];
 256:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 257:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 258:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_TX_WAIT_END;
 259:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_STATE_REG = TRX_CMD_TX_START;
 260:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 261:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** */
 262:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_DataReq(uint8_t *data, uint8_t size)
 263:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 992               		.loc 3 263 0
 993               		.cfi_startproc
 994 044a CF93      		push r28
 995               	.LCFI49:
 996               		.cfi_def_cfa_offset 3
 997               		.cfi_offset 28, -2
 998 044c DF93      		push r29
 999               	.LCFI50:
 1000               		.cfi_def_cfa_offset 4
 1001               		.cfi_offset 29, -3
 1002 044e 00D0      		rcall .
 1003 0450 00D0      		rcall .
 1004               	.LCFI51:
 1005               		.cfi_def_cfa_offset 8
 1006 0452 CDB7      		in r28,__SP_L__
 1007 0454 DEB7      		in r29,__SP_H__
 1008               	.LCFI52:
 1009               		.cfi_def_cfa_register 28
 1010               	/* prologue: function */
 1011               	/* frame size = 4 */
 1012               	/* stack size = 6 */
 1013               	.L__stack_usage = 6
 1014 0456 9B83      		std Y+3,r25
 1015 0458 8A83      		std Y+2,r24
 1016 045a 6C83      		std Y+4,r22
 264:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyTrxSetState(TRX_CMD_TX_ARET_ON);
 1017               		.loc 3 264 0
 1018 045c 89E1      		ldi r24,lo8(25)
 1019 045e 0E94 0000 		call phyTrxSetState
 265:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 266:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1020               		.loc 3 266 0
 1021 0462 8FE4      		ldi r24,lo8(79)
 1022 0464 91E0      		ldi r25,lo8(1)
 1023 0466 2FEF      		ldi r18,lo8(-1)
 1024 0468 FC01      		movw r30,r24
 1025 046a 2083      		st Z,r18
 267:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 268:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_FRAME_BUFFER(0) = size + PHY_CRC_SIZE;
 1026               		.loc 3 268 0
 1027 046c 80E8      		ldi r24,lo8(-128)
 1028 046e 91E0      		ldi r25,lo8(1)
 1029 0470 2C81      		ldd r18,Y+4
 1030 0472 2E5F      		subi r18,lo8(-(2))
 1031 0474 FC01      		movw r30,r24
 1032 0476 2083      		st Z,r18
 1033               	.LBB2:
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1034               		.loc 3 269 0
 1035 0478 1982      		std Y+1,__zero_reg__
 1036 047a 00C0      		rjmp .L40
 1037               	.L41:
 270:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     TRX_FRAME_BUFFER(i+1) = data[i];
 1038               		.loc 3 270 0 discriminator 3
 1039 047c 8981      		ldd r24,Y+1
 1040 047e 882F      		mov r24,r24
 1041 0480 90E0      		ldi r25,0
 1042 0482 8F57      		subi r24,127
 1043 0484 9E4F      		sbci r25,-2
 1044 0486 AC01      		movw r20,r24
 1045 0488 8981      		ldd r24,Y+1
 1046 048a 882F      		mov r24,r24
 1047 048c 90E0      		ldi r25,0
 1048 048e 2A81      		ldd r18,Y+2
 1049 0490 3B81      		ldd r19,Y+3
 1050 0492 820F      		add r24,r18
 1051 0494 931F      		adc r25,r19
 1052 0496 FC01      		movw r30,r24
 1053 0498 8081      		ld r24,Z
 1054 049a FA01      		movw r30,r20
 1055 049c 8083      		st Z,r24
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1056               		.loc 3 269 0 discriminator 3
 1057 049e 8981      		ldd r24,Y+1
 1058 04a0 8F5F      		subi r24,lo8(-(1))
 1059 04a2 8983      		std Y+1,r24
 1060               	.L40:
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1061               		.loc 3 269 0 is_stmt 0 discriminator 1
 1062 04a4 9981      		ldd r25,Y+1
 1063 04a6 8C81      		ldd r24,Y+4
 1064 04a8 9817      		cp r25,r24
 1065 04aa 00F0      		brlo .L41
 1066               	.LBE2:
 271:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 272:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyState = PHY_STATE_TX_WAIT_END;
 1067               		.loc 3 272 0 is_stmt 1
 1068 04ac 83E0      		ldi r24,lo8(3)
 1069 04ae 8093 0000 		sts phyState,r24
 273:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_STATE_REG = TRX_CMD_TX_START;
 1070               		.loc 3 273 0
 1071 04b2 82E4      		ldi r24,lo8(66)
 1072 04b4 91E0      		ldi r25,lo8(1)
 1073 04b6 22E0      		ldi r18,lo8(2)
 1074 04b8 FC01      		movw r30,r24
 1075 04ba 2083      		st Z,r18
 274:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1076               		.loc 3 274 0
 1077 04bc 0000      		nop
 1078               	/* epilogue start */
 1079 04be 0F90      		pop __tmp_reg__
 1080 04c0 0F90      		pop __tmp_reg__
 1081 04c2 0F90      		pop __tmp_reg__
 1082 04c4 0F90      		pop __tmp_reg__
 1083 04c6 DF91      		pop r29
 1084 04c8 CF91      		pop r28
 1085 04ca 0895      		ret
 1086               		.cfi_endproc
 1087               	.LFE87:
 1089               	.global	PHY_RandomReq
 1091               	PHY_RandomReq:
 1092               	.LFB88:
 275:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 276:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 277:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 278:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 279:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** uint16_t PHY_RandomReq(void)
 280:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1093               		.loc 3 280 0
 1094               		.cfi_startproc
 1095 04cc CF93      		push r28
 1096               	.LCFI53:
 1097               		.cfi_def_cfa_offset 3
 1098               		.cfi_offset 28, -2
 1099 04ce DF93      		push r29
 1100               	.LCFI54:
 1101               		.cfi_def_cfa_offset 4
 1102               		.cfi_offset 29, -3
 1103 04d0 00D0      		rcall .
 1104 04d2 1F92      		push __zero_reg__
 1105               	.LCFI55:
 1106               		.cfi_def_cfa_offset 7
 1107 04d4 CDB7      		in r28,__SP_L__
 1108 04d6 DEB7      		in r29,__SP_H__
 1109               	.LCFI56:
 1110               		.cfi_def_cfa_register 28
 1111               	/* prologue: function */
 1112               	/* frame size = 3 */
 1113               	/* stack size = 5 */
 1114               	.L__stack_usage = 5
 281:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint16_t rnd = 0;
 1115               		.loc 3 281 0
 1116 04d8 1A82      		std Y+2,__zero_reg__
 1117 04da 1982      		std Y+1,__zero_reg__
 282:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 283:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_RX_ON);
 1118               		.loc 3 283 0
 1119 04dc 86E0      		ldi r24,lo8(6)
 1120 04de 0E94 0000 		call phyTrxSetState
 1121               	.LBB3:
 284:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 285:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	for (uint8_t i = 0; i < 16; i += 2) {
 1122               		.loc 3 285 0
 1123 04e2 1B82      		std Y+3,__zero_reg__
 1124 04e4 00C0      		rjmp .L43
 1125               	.L44:
 286:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1126               		.loc 3 286 0 discriminator 3
 1127 04e6 62E0      		ldi r22,lo8(2)
 1128 04e8 70E0      		ldi r23,0
 1129 04ea 80E0      		ldi r24,0
 1130 04ec 90E0      		ldi r25,0
 1131 04ee 0E94 0000 		call __portable_avr_delay_cycles
 287:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		rnd |= PHY_RSSI_REG_s.rndValue << i;
 1132               		.loc 3 287 0 discriminator 3
 1133 04f2 86E4      		ldi r24,lo8(70)
 1134 04f4 91E0      		ldi r25,lo8(1)
 1135 04f6 FC01      		movw r30,r24
 1136 04f8 8081      		ld r24,Z
 1137 04fa 8295      		swap r24
 1138 04fc 8695      		lsr r24
 1139 04fe 8770      		andi r24,lo8(7)
 1140 0500 8370      		andi r24,lo8(3)
 1141 0502 882F      		mov r24,r24
 1142 0504 90E0      		ldi r25,0
 1143 0506 2B81      		ldd r18,Y+3
 1144 0508 222F      		mov r18,r18
 1145 050a 30E0      		ldi r19,0
 1146 050c 00C0      		rjmp 2f
 1147               		1:
 1148 050e 880F      		lsl r24
 1149 0510 991F      		rol r25
 1150               		2:
 1151 0512 2A95      		dec r18
 1152 0514 02F4      		brpl 1b
 1153 0516 9C01      		movw r18,r24
 1154 0518 8981      		ldd r24,Y+1
 1155 051a 9A81      		ldd r25,Y+2
 1156 051c 822B      		or r24,r18
 1157 051e 932B      		or r25,r19
 1158 0520 9A83      		std Y+2,r25
 1159 0522 8983      		std Y+1,r24
 285:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1160               		.loc 3 285 0 discriminator 3
 1161 0524 8B81      		ldd r24,Y+3
 1162 0526 8E5F      		subi r24,lo8(-(2))
 1163 0528 8B83      		std Y+3,r24
 1164               	.L43:
 285:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1165               		.loc 3 285 0 is_stmt 0 discriminator 1
 1166 052a 8B81      		ldd r24,Y+3
 1167 052c 8031      		cpi r24,lo8(16)
 1168 052e 00F0      		brlo .L44
 1169               	.LBE3:
 288:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 289:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 290:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1170               		.loc 3 290 0 is_stmt 1
 1171 0530 0E94 0000 		call phySetRxState
 291:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 292:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	return rnd;
 1172               		.loc 3 292 0
 1173 0534 8981      		ldd r24,Y+1
 1174 0536 9A81      		ldd r25,Y+2
 1175               	/* epilogue start */
 293:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1176               		.loc 3 293 0
 1177 0538 0F90      		pop __tmp_reg__
 1178 053a 0F90      		pop __tmp_reg__
 1179 053c 0F90      		pop __tmp_reg__
 1180 053e DF91      		pop r29
 1181 0540 CF91      		pop r28
 1182 0542 0895      		ret
 1183               		.cfi_endproc
 1184               	.LFE88:
 1186               	.global	PHY_EncryptReq
 1188               	PHY_EncryptReq:
 1189               	.LFB89:
 294:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 295:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 296:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 297:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_EncryptReq(uint8_t *text, uint8_t *key)
 298:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1190               		.loc 3 298 0
 1191               		.cfi_startproc
 1192 0544 CF93      		push r28
 1193               	.LCFI57:
 1194               		.cfi_def_cfa_offset 3
 1195               		.cfi_offset 28, -2
 1196 0546 DF93      		push r29
 1197               	.LCFI58:
 1198               		.cfi_def_cfa_offset 4
 1199               		.cfi_offset 29, -3
 1200 0548 00D0      		rcall .
 1201 054a 00D0      		rcall .
 1202               	.LCFI59:
 1203               		.cfi_def_cfa_offset 8
 1204 054c CDB7      		in r28,__SP_L__
 1205 054e DEB7      		in r29,__SP_H__
 1206               	.LCFI60:
 1207               		.cfi_def_cfa_register 28
 1208               	/* prologue: function */
 1209               	/* frame size = 4 */
 1210               	/* stack size = 6 */
 1211               	.L__stack_usage = 6
 1212 0550 9A83      		std Y+2,r25
 1213 0552 8983      		std Y+1,r24
 1214 0554 7C83      		std Y+4,r23
 1215 0556 6B83      		std Y+3,r22
 299:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_setup(key, AES_MODE_ECB, AES_DIR_ENCRYPT);
 1216               		.loc 3 299 0
 1217 0558 8B81      		ldd r24,Y+3
 1218 055a 9C81      		ldd r25,Y+4
 1219 055c 40E0      		ldi r20,0
 1220 055e 60E0      		ldi r22,0
 1221 0560 0E94 0000 		call sal_aes_setup
 300:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_exec(text);
 1222               		.loc 3 300 0
 1223 0564 8981      		ldd r24,Y+1
 1224 0566 9A81      		ldd r25,Y+2
 1225 0568 0E94 0000 		call sal_aes_exec
 301:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_read(text);
 1226               		.loc 3 301 0
 1227 056c 8981      		ldd r24,Y+1
 1228 056e 9A81      		ldd r25,Y+2
 1229 0570 0E94 0000 		call sal_aes_read
 302:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1230               		.loc 3 302 0
 1231 0574 0000      		nop
 1232               	/* epilogue start */
 1233 0576 0F90      		pop __tmp_reg__
 1234 0578 0F90      		pop __tmp_reg__
 1235 057a 0F90      		pop __tmp_reg__
 1236 057c 0F90      		pop __tmp_reg__
 1237 057e DF91      		pop r29
 1238 0580 CF91      		pop r28
 1239 0582 0895      		ret
 1240               		.cfi_endproc
 1241               	.LFE89:
 1243               	.global	PHY_EdReq
 1245               	PHY_EdReq:
 1246               	.LFB90:
 303:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 304:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 305:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 306:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** int8_t PHY_EdReq(void)
 307:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1247               		.loc 3 307 0
 1248               		.cfi_startproc
 1249 0584 CF93      		push r28
 1250               	.LCFI61:
 1251               		.cfi_def_cfa_offset 3
 1252               		.cfi_offset 28, -2
 1253 0586 DF93      		push r29
 1254               	.LCFI62:
 1255               		.cfi_def_cfa_offset 4
 1256               		.cfi_offset 29, -3
 1257 0588 1F92      		push __zero_reg__
 1258               	.LCFI63:
 1259               		.cfi_def_cfa_offset 5
 1260 058a CDB7      		in r28,__SP_L__
 1261 058c DEB7      		in r29,__SP_H__
 1262               	.LCFI64:
 1263               		.cfi_def_cfa_register 28
 1264               	/* prologue: function */
 1265               	/* frame size = 1 */
 1266               	/* stack size = 3 */
 1267               	.L__stack_usage = 3
 308:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	int8_t ed;
 309:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 310:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_RX_ON);
 1268               		.loc 3 310 0
 1269 058e 86E0      		ldi r24,lo8(6)
 1270 0590 0E94 0000 		call phyTrxSetState
 311:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 312:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IRQ_STATUS_REG_s.ccaEdDone = 1;
 1271               		.loc 3 312 0
 1272 0594 8FE4      		ldi r24,lo8(79)
 1273 0596 91E0      		ldi r25,lo8(1)
 1274 0598 FC01      		movw r30,r24
 1275 059a 2081      		ld r18,Z
 1276 059c 2061      		ori r18,lo8(16)
 1277 059e FC01      		movw r30,r24
 1278 05a0 2083      		st Z,r18
 313:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_ED_LEVEL_REG = 0;
 1279               		.loc 3 313 0
 1280 05a2 87E4      		ldi r24,lo8(71)
 1281 05a4 91E0      		ldi r25,lo8(1)
 1282 05a6 FC01      		movw r30,r24
 1283 05a8 1082      		st Z,__zero_reg__
 314:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	while (0 == IRQ_STATUS_REG_s.ccaEdDone) {
 1284               		.loc 3 314 0
 1285 05aa 0000      		nop
 1286               	.L48:
 1287               		.loc 3 314 0 is_stmt 0 discriminator 1
 1288 05ac 8FE4      		ldi r24,lo8(79)
 1289 05ae 91E0      		ldi r25,lo8(1)
 1290 05b0 FC01      		movw r30,r24
 1291 05b2 8081      		ld r24,Z
 1292 05b4 8295      		swap r24
 1293 05b6 8170      		andi r24,1
 1294 05b8 8823      		tst r24
 1295 05ba 01F0      		breq .L48
 315:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 316:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 317:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ed = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1296               		.loc 3 317 0 is_stmt 1
 1297 05bc 87E4      		ldi r24,lo8(71)
 1298 05be 91E0      		ldi r25,lo8(1)
 1299 05c0 FC01      		movw r30,r24
 1300 05c2 8081      		ld r24,Z
 1301 05c4 8A55      		subi r24,lo8(-(-90))
 1302 05c6 8983      		std Y+1,r24
 318:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 319:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1303               		.loc 3 319 0
 1304 05c8 0E94 0000 		call phySetRxState
 320:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 321:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	return ed;
 1305               		.loc 3 321 0
 1306 05cc 8981      		ldd r24,Y+1
 1307               	/* epilogue start */
 322:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1308               		.loc 3 322 0
 1309 05ce 0F90      		pop __tmp_reg__
 1310 05d0 DF91      		pop r29
 1311 05d2 CF91      		pop r28
 1312 05d4 0895      		ret
 1313               		.cfi_endproc
 1314               	.LFE90:
 1317               	phySetRxState:
 1318               	.LFB91:
 323:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 324:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 325:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 326:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phySetRxState(void)
 327:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1319               		.loc 3 327 0
 1320               		.cfi_startproc
 1321 05d6 CF93      		push r28
 1322               	.LCFI65:
 1323               		.cfi_def_cfa_offset 3
 1324               		.cfi_offset 28, -2
 1325 05d8 DF93      		push r29
 1326               	.LCFI66:
 1327               		.cfi_def_cfa_offset 4
 1328               		.cfi_offset 29, -3
 1329 05da CDB7      		in r28,__SP_L__
 1330 05dc DEB7      		in r29,__SP_H__
 1331               	.LCFI67:
 1332               		.cfi_def_cfa_register 28
 1333               	/* prologue: function */
 1334               	/* frame size = 0 */
 1335               	/* stack size = 2 */
 1336               	.L__stack_usage = 2
 328:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 1337               		.loc 3 328 0
 1338 05de 88E0      		ldi r24,lo8(8)
 1339 05e0 0E94 0000 		call phyTrxSetState
 329:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 330:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1340               		.loc 3 330 0
 1341 05e4 8FE4      		ldi r24,lo8(79)
 1342 05e6 91E0      		ldi r25,lo8(1)
 1343 05e8 2FEF      		ldi r18,lo8(-1)
 1344 05ea FC01      		movw r30,r24
 1345 05ec 2083      		st Z,r18
 331:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 332:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (phyRxState) {
 1346               		.loc 3 332 0
 1347 05ee 8091 0000 		lds r24,phyRxState
 1348 05f2 8823      		tst r24
 1349 05f4 01F0      		breq .L52
 333:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyTrxSetState(TRX_CMD_RX_AACK_ON);
 1350               		.loc 3 333 0
 1351 05f6 86E1      		ldi r24,lo8(22)
 1352 05f8 0E94 0000 		call phyTrxSetState
 1353               	.L52:
 334:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 335:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1354               		.loc 3 335 0
 1355 05fc 0000      		nop
 1356               	/* epilogue start */
 1357 05fe DF91      		pop r29
 1358 0600 CF91      		pop r28
 1359 0602 0895      		ret
 1360               		.cfi_endproc
 1361               	.LFE91:
 1363               	.global	phyTrxSetState
 1365               	phyTrxSetState:
 1366               	.LFB92:
 336:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 337:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 338:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 339:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void phyTrxSetState(uint8_t state)
 340:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1367               		.loc 3 340 0
 1368               		.cfi_startproc
 1369 0604 CF93      		push r28
 1370               	.LCFI68:
 1371               		.cfi_def_cfa_offset 3
 1372               		.cfi_offset 28, -2
 1373 0606 DF93      		push r29
 1374               	.LCFI69:
 1375               		.cfi_def_cfa_offset 4
 1376               		.cfi_offset 29, -3
 1377 0608 1F92      		push __zero_reg__
 1378               	.LCFI70:
 1379               		.cfi_def_cfa_offset 5
 1380 060a CDB7      		in r28,__SP_L__
 1381 060c DEB7      		in r29,__SP_H__
 1382               	.LCFI71:
 1383               		.cfi_def_cfa_register 28
 1384               	/* prologue: function */
 1385               	/* frame size = 1 */
 1386               	/* stack size = 3 */
 1387               	.L__stack_usage = 3
 1388 060e 8983      		std Y+1,r24
 1389               	.L54:
 341:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1) || defined(EXT_RF_FRONT_END_CTRL)
 342:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(phyState == PHY_STATE_SLEEP)
 343:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 344:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DIVERSITY == 1)
 345:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antDivEn = 1;
 346:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
 347:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#else
 348:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		#if (ANTENNA_DEFAULT != 0)
 349:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			ANT_DIV_REG_s.antExtSwEn = 1;
 350:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			ANT_DIV_REG_s.antCtrl = ANTENNA_DEFAULT;
 351:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		#endif // ANTENNA_DEFAULT
 352:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DIVERSITY
 353:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#ifdef EXT_RF_FRONT_END_CTRL
 354:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_1_REG_s.paExtEn = 1;
 355:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // EXT_RF_FRONT_END_CTRL
 356:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 357:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // PLATFORM_WM100
 358:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 359:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	do {TRX_STATE_REG = TRX_CMD_FORCE_TRX_OFF;
 1390               		.loc 3 359 0 discriminator 1
 1391 0610 82E4      		ldi r24,lo8(66)
 1392 0612 91E0      		ldi r25,lo8(1)
 1393 0614 23E0      		ldi r18,lo8(3)
 1394 0616 FC01      		movw r30,r24
 1395 0618 2083      		st Z,r18
 360:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	} while (TRX_STATUS_TRX_OFF !=
 361:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1396               		.loc 3 361 0 discriminator 1
 1397 061a 81E4      		ldi r24,lo8(65)
 1398 061c 91E0      		ldi r25,lo8(1)
 1399 061e FC01      		movw r30,r24
 1400 0620 8081      		ld r24,Z
 1401 0622 8F71      		andi r24,lo8(31)
 1402 0624 8830      		cpi r24,lo8(8)
 1403 0626 01F4      		brne .L54
 1404               	.L55:
 362:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 363:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	do {TRX_STATE_REG = state; } while (state !=
 1405               		.loc 3 363 0 discriminator 1
 1406 0628 82E4      		ldi r24,lo8(66)
 1407 062a 91E0      		ldi r25,lo8(1)
 1408 062c 2981      		ldd r18,Y+1
 1409 062e FC01      		movw r30,r24
 1410 0630 2083      		st Z,r18
 364:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1411               		.loc 3 364 0 discriminator 1
 1412 0632 81E4      		ldi r24,lo8(65)
 1413 0634 91E0      		ldi r25,lo8(1)
 1414 0636 FC01      		movw r30,r24
 1415 0638 8081      		ld r24,Z
 1416 063a 8F71      		andi r24,lo8(31)
 363:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1417               		.loc 3 363 0 discriminator 1
 1418 063c 982F      		mov r25,r24
 1419               		.loc 3 364 0 discriminator 1
 1420 063e 8981      		ldd r24,Y+1
 1421 0640 9817      		cp r25,r24
 1422 0642 01F4      		brne .L55
 365:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1423               		.loc 3 365 0
 1424 0644 0000      		nop
 1425               	/* epilogue start */
 1426 0646 0F90      		pop __tmp_reg__
 1427 0648 DF91      		pop r29
 1428 064a CF91      		pop r28
 1429 064c 0895      		ret
 1430               		.cfi_endproc
 1431               	.LFE92:
 1433               	.global	PHY_SetIEEEAddr
 1435               	PHY_SetIEEEAddr:
 1436               	.LFB93:
 366:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 367:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 368:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 369:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 370:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetIEEEAddr(uint8_t *ieee_addr)
 371:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1437               		.loc 3 371 0
 1438               		.cfi_startproc
 1439 064e CF93      		push r28
 1440               	.LCFI72:
 1441               		.cfi_def_cfa_offset 3
 1442               		.cfi_offset 28, -2
 1443 0650 DF93      		push r29
 1444               	.LCFI73:
 1445               		.cfi_def_cfa_offset 4
 1446               		.cfi_offset 29, -3
 1447 0652 00D0      		rcall .
 1448 0654 00D0      		rcall .
 1449               	.LCFI74:
 1450               		.cfi_def_cfa_offset 8
 1451 0656 CDB7      		in r28,__SP_L__
 1452 0658 DEB7      		in r29,__SP_H__
 1453               	.LCFI75:
 1454               		.cfi_def_cfa_register 28
 1455               	/* prologue: function */
 1456               	/* frame size = 4 */
 1457               	/* stack size = 6 */
 1458               	.L__stack_usage = 6
 1459 065a 9C83      		std Y+4,r25
 1460 065c 8B83      		std Y+3,r24
 372:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *ptr_to_reg = ieee_addr;
 1461               		.loc 3 372 0
 1462 065e 8B81      		ldd r24,Y+3
 1463 0660 9C81      		ldd r25,Y+4
 1464 0662 9A83      		std Y+2,r25
 1465 0664 8983      		std Y+1,r24
 373:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_0_REG = *ptr_to_reg++;
 1466               		.loc 3 373 0
 1467 0666 24E6      		ldi r18,lo8(100)
 1468 0668 31E0      		ldi r19,lo8(1)
 1469 066a 8981      		ldd r24,Y+1
 1470 066c 9A81      		ldd r25,Y+2
 1471 066e AC01      		movw r20,r24
 1472 0670 4F5F      		subi r20,-1
 1473 0672 5F4F      		sbci r21,-1
 1474 0674 5A83      		std Y+2,r21
 1475 0676 4983      		std Y+1,r20
 1476 0678 FC01      		movw r30,r24
 1477 067a 8081      		ld r24,Z
 1478 067c F901      		movw r30,r18
 1479 067e 8083      		st Z,r24
 374:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_1_REG = *ptr_to_reg++;
 1480               		.loc 3 374 0
 1481 0680 25E6      		ldi r18,lo8(101)
 1482 0682 31E0      		ldi r19,lo8(1)
 1483 0684 8981      		ldd r24,Y+1
 1484 0686 9A81      		ldd r25,Y+2
 1485 0688 AC01      		movw r20,r24
 1486 068a 4F5F      		subi r20,-1
 1487 068c 5F4F      		sbci r21,-1
 1488 068e 5A83      		std Y+2,r21
 1489 0690 4983      		std Y+1,r20
 1490 0692 FC01      		movw r30,r24
 1491 0694 8081      		ld r24,Z
 1492 0696 F901      		movw r30,r18
 1493 0698 8083      		st Z,r24
 375:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_2_REG = *ptr_to_reg++;
 1494               		.loc 3 375 0
 1495 069a 26E6      		ldi r18,lo8(102)
 1496 069c 31E0      		ldi r19,lo8(1)
 1497 069e 8981      		ldd r24,Y+1
 1498 06a0 9A81      		ldd r25,Y+2
 1499 06a2 AC01      		movw r20,r24
 1500 06a4 4F5F      		subi r20,-1
 1501 06a6 5F4F      		sbci r21,-1
 1502 06a8 5A83      		std Y+2,r21
 1503 06aa 4983      		std Y+1,r20
 1504 06ac FC01      		movw r30,r24
 1505 06ae 8081      		ld r24,Z
 1506 06b0 F901      		movw r30,r18
 1507 06b2 8083      		st Z,r24
 376:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_3_REG = *ptr_to_reg++;
 1508               		.loc 3 376 0
 1509 06b4 27E6      		ldi r18,lo8(103)
 1510 06b6 31E0      		ldi r19,lo8(1)
 1511 06b8 8981      		ldd r24,Y+1
 1512 06ba 9A81      		ldd r25,Y+2
 1513 06bc AC01      		movw r20,r24
 1514 06be 4F5F      		subi r20,-1
 1515 06c0 5F4F      		sbci r21,-1
 1516 06c2 5A83      		std Y+2,r21
 1517 06c4 4983      		std Y+1,r20
 1518 06c6 FC01      		movw r30,r24
 1519 06c8 8081      		ld r24,Z
 1520 06ca F901      		movw r30,r18
 1521 06cc 8083      		st Z,r24
 377:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_4_REG = *ptr_to_reg++;
 1522               		.loc 3 377 0
 1523 06ce 28E6      		ldi r18,lo8(104)
 1524 06d0 31E0      		ldi r19,lo8(1)
 1525 06d2 8981      		ldd r24,Y+1
 1526 06d4 9A81      		ldd r25,Y+2
 1527 06d6 AC01      		movw r20,r24
 1528 06d8 4F5F      		subi r20,-1
 1529 06da 5F4F      		sbci r21,-1
 1530 06dc 5A83      		std Y+2,r21
 1531 06de 4983      		std Y+1,r20
 1532 06e0 FC01      		movw r30,r24
 1533 06e2 8081      		ld r24,Z
 1534 06e4 F901      		movw r30,r18
 1535 06e6 8083      		st Z,r24
 378:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_5_REG = *ptr_to_reg++;
 1536               		.loc 3 378 0
 1537 06e8 29E6      		ldi r18,lo8(105)
 1538 06ea 31E0      		ldi r19,lo8(1)
 1539 06ec 8981      		ldd r24,Y+1
 1540 06ee 9A81      		ldd r25,Y+2
 1541 06f0 AC01      		movw r20,r24
 1542 06f2 4F5F      		subi r20,-1
 1543 06f4 5F4F      		sbci r21,-1
 1544 06f6 5A83      		std Y+2,r21
 1545 06f8 4983      		std Y+1,r20
 1546 06fa FC01      		movw r30,r24
 1547 06fc 8081      		ld r24,Z
 1548 06fe F901      		movw r30,r18
 1549 0700 8083      		st Z,r24
 379:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_6_REG = *ptr_to_reg++;
 1550               		.loc 3 379 0
 1551 0702 2AE6      		ldi r18,lo8(106)
 1552 0704 31E0      		ldi r19,lo8(1)
 1553 0706 8981      		ldd r24,Y+1
 1554 0708 9A81      		ldd r25,Y+2
 1555 070a AC01      		movw r20,r24
 1556 070c 4F5F      		subi r20,-1
 1557 070e 5F4F      		sbci r21,-1
 1558 0710 5A83      		std Y+2,r21
 1559 0712 4983      		std Y+1,r20
 1560 0714 FC01      		movw r30,r24
 1561 0716 8081      		ld r24,Z
 1562 0718 F901      		movw r30,r18
 1563 071a 8083      		st Z,r24
 380:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_7_REG = *ptr_to_reg;
 1564               		.loc 3 380 0
 1565 071c 8BE6      		ldi r24,lo8(107)
 1566 071e 91E0      		ldi r25,lo8(1)
 1567 0720 2981      		ldd r18,Y+1
 1568 0722 3A81      		ldd r19,Y+2
 1569 0724 F901      		movw r30,r18
 1570 0726 2081      		ld r18,Z
 1571 0728 FC01      		movw r30,r24
 1572 072a 2083      		st Z,r18
 381:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1573               		.loc 3 381 0
 1574 072c 0000      		nop
 1575               	/* epilogue start */
 1576 072e 0F90      		pop __tmp_reg__
 1577 0730 0F90      		pop __tmp_reg__
 1578 0732 0F90      		pop __tmp_reg__
 1579 0734 0F90      		pop __tmp_reg__
 1580 0736 DF91      		pop r29
 1581 0738 CF91      		pop r28
 1582 073a 0895      		ret
 1583               		.cfi_endproc
 1584               	.LFE93:
 1586               	.global	PHY_TaskHandler
 1588               	PHY_TaskHandler:
 1589               	.LFB94:
 382:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 383:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 384:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 385:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_TaskHandler(void)
 386:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1590               		.loc 3 386 0
 1591               		.cfi_startproc
 1592 073c CF93      		push r28
 1593               	.LCFI76:
 1594               		.cfi_def_cfa_offset 3
 1595               		.cfi_offset 28, -2
 1596 073e DF93      		push r29
 1597               	.LCFI77:
 1598               		.cfi_def_cfa_offset 4
 1599               		.cfi_offset 29, -3
 1600 0740 CDB7      		in r28,__SP_L__
 1601 0742 DEB7      		in r29,__SP_H__
 1602               	.LCFI78:
 1603               		.cfi_def_cfa_register 28
 1604 0744 2897      		sbiw r28,8
 1605               	.LCFI79:
 1606               		.cfi_def_cfa_offset 12
 1607 0746 0FB6      		in __tmp_reg__,__SREG__
 1608 0748 F894      		cli
 1609 074a DEBF      		out __SP_H__,r29
 1610 074c 0FBE      		out __SREG__,__tmp_reg__
 1611 074e CDBF      		out __SP_L__,r28
 1612               	/* prologue: function */
 1613               	/* frame size = 8 */
 1614               	/* stack size = 10 */
 1615               	.L__stack_usage = 10
 387:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (PHY_STATE_SLEEP == phyState) {
 1616               		.loc 3 387 0
 1617 0750 8091 0000 		lds r24,phyState
 1618 0754 8230      		cpi r24,lo8(2)
 1619 0756 01F4      		brne .+2
 1620 0758 00C0      		rjmp .L69
 388:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		return;
 389:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 390:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 391:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (IRQ_STATUS_REG_s.rxEnd) {
 1621               		.loc 3 391 0
 1622 075a 8FE4      		ldi r24,lo8(79)
 1623 075c 91E0      		ldi r25,lo8(1)
 1624 075e FC01      		movw r30,r24
 1625 0760 8081      		ld r24,Z
 1626 0762 83FB      		bst r24,3
 1627 0764 8827      		clr r24
 1628 0766 80F9      		bld r24,0
 1629 0768 8823      		tst r24
 1630 076a 01F4      		brne .+2
 1631 076c 00C0      		rjmp .L60
 1632               	.LBB4:
 392:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_DataInd_t ind;
 393:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		uint8_t size = TST_RX_LENGTH_REG;
 1633               		.loc 3 393 0
 1634 076e 8BE7      		ldi r24,lo8(123)
 1635 0770 91E0      		ldi r25,lo8(1)
 1636 0772 FC01      		movw r30,r24
 1637 0774 8081      		ld r24,Z
 1638 0776 8B83      		std Y+3,r24
 1639               	.LBB5:
 394:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 395:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		for (uint8_t i = 0; i < size + 1 /*lqi*/; i++) {
 1640               		.loc 3 395 0
 1641 0778 1982      		std Y+1,__zero_reg__
 1642 077a 00C0      		rjmp .L61
 1643               	.L62:
 396:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1644               		.loc 3 396 0 discriminator 3
 1645 077c 8981      		ldd r24,Y+1
 1646 077e 882F      		mov r24,r24
 1647 0780 90E0      		ldi r25,0
 1648 0782 2981      		ldd r18,Y+1
 1649 0784 222F      		mov r18,r18
 1650 0786 30E0      		ldi r19,0
 1651 0788 2058      		subi r18,-128
 1652 078a 3E4F      		sbci r19,-2
 1653 078c F901      		movw r30,r18
 1654 078e 2081      		ld r18,Z
 1655 0790 8050      		subi r24,lo8(-(phyRxBuffer))
 1656 0792 9040      		sbci r25,hi8(-(phyRxBuffer))
 1657 0794 FC01      		movw r30,r24
 1658 0796 2083      		st Z,r18
 395:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1659               		.loc 3 395 0 discriminator 3
 1660 0798 8981      		ldd r24,Y+1
 1661 079a 8F5F      		subi r24,lo8(-(1))
 1662 079c 8983      		std Y+1,r24
 1663               	.L61:
 395:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1664               		.loc 3 395 0 is_stmt 0 discriminator 1
 1665 079e 8981      		ldd r24,Y+1
 1666 07a0 282F      		mov r18,r24
 1667 07a2 30E0      		ldi r19,0
 1668 07a4 8B81      		ldd r24,Y+3
 1669 07a6 882F      		mov r24,r24
 1670 07a8 90E0      		ldi r25,0
 1671 07aa 0196      		adiw r24,1
 1672 07ac 2817      		cp r18,r24
 1673 07ae 3907      		cpc r19,r25
 1674 07b0 04F0      		brlt .L62
 1675               	.LBE5:
 397:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 398:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 399:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.data = phyRxBuffer;
 1676               		.loc 3 399 0 is_stmt 1
 1677 07b2 80E0      		ldi r24,lo8(phyRxBuffer)
 1678 07b4 90E0      		ldi r25,hi8(phyRxBuffer)
 1679 07b6 9D83      		std Y+5,r25
 1680 07b8 8C83      		std Y+4,r24
 400:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.size = size - PHY_CRC_SIZE;
 1681               		.loc 3 400 0
 1682 07ba 8B81      		ldd r24,Y+3
 1683 07bc 8250      		subi r24,lo8(-(-2))
 1684 07be 8E83      		std Y+6,r24
 401:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.lqi  = phyRxBuffer[size];
 1685               		.loc 3 401 0
 1686 07c0 8B81      		ldd r24,Y+3
 1687 07c2 882F      		mov r24,r24
 1688 07c4 90E0      		ldi r25,0
 1689 07c6 8050      		subi r24,lo8(-(phyRxBuffer))
 1690 07c8 9040      		sbci r25,hi8(-(phyRxBuffer))
 1691 07ca FC01      		movw r30,r24
 1692 07cc 8081      		ld r24,Z
 1693 07ce 8F83      		std Y+7,r24
 402:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.rssi = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1694               		.loc 3 402 0
 1695 07d0 87E4      		ldi r24,lo8(71)
 1696 07d2 91E0      		ldi r25,lo8(1)
 1697 07d4 FC01      		movw r30,r24
 1698 07d6 8081      		ld r24,Z
 1699 07d8 8A55      		subi r24,lo8(-(-90))
 1700 07da 8887      		std Y+8,r24
 403:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_DataInd(&ind);
 1701               		.loc 3 403 0
 1702 07dc CE01      		movw r24,r28
 1703 07de 0496      		adiw r24,4
 1704 07e0 0E94 0000 		call PHY_DataInd
 404:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 405:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		while (TRX_STATUS_RX_AACK_ON != TRX_STATUS_REG_s.trxStatus) {
 1705               		.loc 3 405 0
 1706 07e4 0000      		nop
 1707               	.L63:
 1708               		.loc 3 405 0 is_stmt 0 discriminator 1
 1709 07e6 81E4      		ldi r24,lo8(65)
 1710 07e8 91E0      		ldi r25,lo8(1)
 1711 07ea FC01      		movw r30,r24
 1712 07ec 8081      		ld r24,Z
 1713 07ee 8F71      		andi r24,lo8(31)
 1714 07f0 8631      		cpi r24,lo8(22)
 1715 07f2 01F4      		brne .L63
 406:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 407:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 408:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		IRQ_STATUS_REG_s.rxEnd = 1;
 1716               		.loc 3 408 0 is_stmt 1 discriminator 2
 1717 07f4 8FE4      		ldi r24,lo8(79)
 1718 07f6 91E0      		ldi r25,lo8(1)
 1719 07f8 FC01      		movw r30,r24
 1720 07fa 2081      		ld r18,Z
 1721 07fc 2860      		ori r18,lo8(8)
 1722 07fe FC01      		movw r30,r24
 1723 0800 2083      		st Z,r18
 409:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_2_REG_s.rxSafeMode = 0;
 1724               		.loc 3 409 0 discriminator 2
 1725 0802 8CE4      		ldi r24,lo8(76)
 1726 0804 91E0      		ldi r25,lo8(1)
 1727 0806 FC01      		movw r30,r24
 1728 0808 2081      		ld r18,Z
 1729 080a 2F77      		andi r18,lo8(127)
 1730 080c FC01      		movw r30,r24
 1731 080e 2083      		st Z,r18
 410:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_2_REG_s.rxSafeMode = 1;
 1732               		.loc 3 410 0 discriminator 2
 1733 0810 8CE4      		ldi r24,lo8(76)
 1734 0812 91E0      		ldi r25,lo8(1)
 1735 0814 FC01      		movw r30,r24
 1736 0816 2081      		ld r18,Z
 1737 0818 2068      		ori r18,lo8(-128)
 1738 081a FC01      		movw r30,r24
 1739 081c 2083      		st Z,r18
 1740               	.LBE4:
 1741 081e 00C0      		rjmp .L57
 1742               	.L60:
 411:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	} else if (IRQ_STATUS_REG_s.txEnd) {
 1743               		.loc 3 411 0
 1744 0820 8FE4      		ldi r24,lo8(79)
 1745 0822 91E0      		ldi r25,lo8(1)
 1746 0824 FC01      		movw r30,r24
 1747 0826 8081      		ld r24,Z
 1748 0828 86FB      		bst r24,6
 1749 082a 8827      		clr r24
 1750 082c 80F9      		bld r24,0
 1751 082e 8823      		tst r24
 1752 0830 01F0      		breq .L57
 412:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		if (TRX_STATUS_TX_ARET_ON == TRX_STATUS_REG_s.trxStatus) {
 1753               		.loc 3 412 0
 1754 0832 81E4      		ldi r24,lo8(65)
 1755 0834 91E0      		ldi r25,lo8(1)
 1756 0836 FC01      		movw r30,r24
 1757 0838 8081      		ld r24,Z
 1758 083a 8F71      		andi r24,lo8(31)
 1759 083c 8931      		cpi r24,lo8(25)
 1760 083e 01F4      		brne .L64
 1761               	.LBB6:
 413:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			uint8_t status = TRX_STATE_REG_s.tracStatus;
 1762               		.loc 3 413 0
 1763 0840 82E4      		ldi r24,lo8(66)
 1764 0842 91E0      		ldi r25,lo8(1)
 1765 0844 FC01      		movw r30,r24
 1766 0846 8081      		ld r24,Z
 1767 0848 8295      		swap r24
 1768 084a 8695      		lsr r24
 1769 084c 8770      		andi r24,lo8(7)
 1770 084e 8A83      		std Y+2,r24
 414:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 415:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			if (TRAC_STATUS_SUCCESS == status) {
 1771               		.loc 3 415 0
 1772 0850 8A81      		ldd r24,Y+2
 1773 0852 8823      		tst r24
 1774 0854 01F4      		brne .L65
 416:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_SUCCESS;
 1775               		.loc 3 416 0
 1776 0856 1A82      		std Y+2,__zero_reg__
 1777 0858 00C0      		rjmp .L66
 1778               	.L65:
 417:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else if (TRAC_STATUS_CHANNEL_ACCESS_FAILURE ==
 1779               		.loc 3 417 0
 1780 085a 8A81      		ldd r24,Y+2
 1781 085c 8330      		cpi r24,lo8(3)
 1782 085e 01F4      		brne .L67
 418:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 					status) {
 419:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_CHANNEL_ACCESS_FAILURE;
 1783               		.loc 3 419 0
 1784 0860 81E0      		ldi r24,lo8(1)
 1785 0862 8A83      		std Y+2,r24
 1786 0864 00C0      		rjmp .L66
 1787               	.L67:
 420:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else if (TRAC_STATUS_NO_ACK == status) {
 1788               		.loc 3 420 0
 1789 0866 8A81      		ldd r24,Y+2
 1790 0868 8530      		cpi r24,lo8(5)
 1791 086a 01F4      		brne .L68
 421:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_NO_ACK;
 1792               		.loc 3 421 0
 1793 086c 82E0      		ldi r24,lo8(2)
 1794 086e 8A83      		std Y+2,r24
 1795 0870 00C0      		rjmp .L66
 1796               	.L68:
 422:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else {
 423:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_ERROR;
 1797               		.loc 3 423 0
 1798 0872 83E0      		ldi r24,lo8(3)
 1799 0874 8A83      		std Y+2,r24
 1800               	.L66:
 424:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			}
 425:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 426:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phySetRxState();
 1801               		.loc 3 426 0
 1802 0876 0E94 0000 		call phySetRxState
 427:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyState = PHY_STATE_IDLE;
 1803               		.loc 3 427 0
 1804 087a 81E0      		ldi r24,lo8(1)
 1805 087c 8093 0000 		sts phyState,r24
 428:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 429:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			PHY_DataConf(status);
 1806               		.loc 3 429 0
 1807 0880 8A81      		ldd r24,Y+2
 1808 0882 0E94 0000 		call PHY_DataConf
 1809               	.L64:
 1810               	.LBE6:
 430:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 431:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 432:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		IRQ_STATUS_REG_s.txEnd = 1;
 1811               		.loc 3 432 0
 1812 0886 8FE4      		ldi r24,lo8(79)
 1813 0888 91E0      		ldi r25,lo8(1)
 1814 088a FC01      		movw r30,r24
 1815 088c 2081      		ld r18,Z
 1816 088e 2064      		ori r18,lo8(64)
 1817 0890 FC01      		movw r30,r24
 1818 0892 2083      		st Z,r18
 1819 0894 00C0      		rjmp .L57
 1820               	.L69:
 388:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 1821               		.loc 3 388 0
 1822 0896 0000      		nop
 1823               	.L57:
 1824               	/* epilogue start */
 433:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 434:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1825               		.loc 3 434 0
 1826 0898 2896      		adiw r28,8
 1827 089a 0FB6      		in __tmp_reg__,__SREG__
 1828 089c F894      		cli
 1829 089e DEBF      		out __SP_H__,r29
 1830 08a0 0FBE      		out __SREG__,__tmp_reg__
 1831 08a2 CDBF      		out __SP_L__,r28
 1832 08a4 DF91      		pop r29
 1833 08a6 CF91      		pop r28
 1834 08a8 0895      		ret
 1835               		.cfi_endproc
 1836               	.LFE94:
 1838               	.Letext0:
 1839               		.file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 1840               		.file 5 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 1841               		.file 6 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/atmegarfa1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 phy.c
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:12     .text:00000000 sysclk_enable_peripheral_clock
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:214    .text:0000011a __portable_avr_delay_cycles
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:239    .bss.phyState:00000000 phyState
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:244    .bss.phyRxBuffer:00000000 phyRxBuffer
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:249    .bss.phyRxState:00000000 phyRxState
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:254    .text:00000126 PHY_Init
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:1365   .text:00000604 phyTrxSetState
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:314    .text:0000016a PHY_ResetRadio
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:353    .text:00000188 PHY_SetTdmaMode
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:447    .text:000001fe PHY_SetPromiscuousMode
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:768    .text:0000035e PHY_SetShortAddr
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:704    .text:00000316 PHY_SetPanId
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:1435   .text:0000064e PHY_SetIEEEAddr
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:568    .text:000002a6 PHY_SetOptimizedCSMAValues
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:1091   .text:000004cc PHY_RandomReq
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:615    .text:000002ca PHY_SetRxState
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:1317   .text:000005d6 phySetRxState
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:656    .text:000002ea PHY_SetChannel
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:848    .text:000003c4 PHY_SetTxPower
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:896    .text:000003f0 PHY_Sleep
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:946    .text:00000422 PHY_Wakeup
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:990    .text:0000044a PHY_DataReq
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:1188   .text:00000544 PHY_EncryptReq
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:1245   .text:00000584 PHY_EdReq
C:\Users\GUILHE~1\AppData\Local\Temp\cck3x2qa.s:1588   .text:0000073c PHY_TaskHandler

UNDEFINED SYMBOLS
sysclk_enable_module
sal_aes_setup
sal_aes_exec
sal_aes_read
PHY_DataInd
PHY_DataConf
__do_clear_bss
