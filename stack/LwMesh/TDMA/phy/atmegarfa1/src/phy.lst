   1               		.file	"phy.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	sysclk_enable_peripheral_clock:
  13               	.LFB69:
  14               		.file 1 "../../../platform/common/services/clock/mega/sysclk.h"
   1:../../../platform/common/services/clock/mega/sysclk.h **** /**
   2:../../../platform/common/services/clock/mega/sysclk.h ****  * \file
   3:../../../platform/common/services/clock/mega/sysclk.h ****  *
   4:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Chip-specific system clock management functions
   5:../../../platform/common/services/clock/mega/sysclk.h ****  *
   6:../../../platform/common/services/clock/mega/sysclk.h ****  * Copyright (c) 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/mega/sysclk.h ****  *
   8:../../../platform/common/services/clock/mega/sysclk.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/mega/sysclk.h ****  *
  10:../../../platform/common/services/clock/mega/sysclk.h ****  * \page License
  11:../../../platform/common/services/clock/mega/sysclk.h ****  *
  12:../../../platform/common/services/clock/mega/sysclk.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/mega/sysclk.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/mega/sysclk.h ****  *
  15:../../../platform/common/services/clock/mega/sysclk.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/mega/sysclk.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/mega/sysclk.h ****  *
  18:../../../platform/common/services/clock/mega/sysclk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/mega/sysclk.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/mega/sysclk.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/mega/sysclk.h ****  *
  22:../../../platform/common/services/clock/mega/sysclk.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/mega/sysclk.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/mega/sysclk.h ****  *
  25:../../../platform/common/services/clock/mega/sysclk.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/mega/sysclk.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/mega/sysclk.h ****  *
  28:../../../platform/common/services/clock/mega/sysclk.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/mega/sysclk.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/mega/sysclk.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/mega/sysclk.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/mega/sysclk.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/mega/sysclk.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/mega/sysclk.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/mega/sysclk.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/mega/sysclk.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/mega/sysclk.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/mega/sysclk.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/mega/sysclk.h ****  *
  40:../../../platform/common/services/clock/mega/sysclk.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/mega/sysclk.h ****  *
  42:../../../platform/common/services/clock/mega/sysclk.h ****  */
  43:../../../platform/common/services/clock/mega/sysclk.h **** #ifndef MEGA_SYSCLK_H_INCLUDED
  44:../../../platform/common/services/clock/mega/sysclk.h **** #define MEGA_SYSCLK_H_INCLUDED
  45:../../../platform/common/services/clock/mega/sysclk.h **** 
  46:../../../platform/common/services/clock/mega/sysclk.h **** #include <board.h>
  47:../../../platform/common/services/clock/mega/sysclk.h **** #include <compiler.h>
  48:../../../platform/common/services/clock/mega/sysclk.h **** #include <parts.h>
  49:../../../platform/common/services/clock/mega/sysclk.h **** 
  50:../../../platform/common/services/clock/mega/sysclk.h **** /* Include clock configuration for the project. */
  51:../../../platform/common/services/clock/mega/sysclk.h **** #include <conf_clock.h>
  52:../../../platform/common/services/clock/mega/sysclk.h **** 
  53:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef __cplusplus
  54:../../../platform/common/services/clock/mega/sysclk.h **** extern "C" {
  55:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  56:../../../platform/common/services/clock/mega/sysclk.h **** #define ASM __asm__
  57:../../../platform/common/services/clock/mega/sysclk.h **** 
  58:../../../platform/common/services/clock/mega/sysclk.h **** /* CONFIG_SYSCLK_PSDIV  to use default if not defined*/
  59:../../../platform/common/services/clock/mega/sysclk.h **** #ifndef CONFIG_SYSCLK_PSDIV
  60:../../../platform/common/services/clock/mega/sysclk.h **** # define CONFIG_SYSCLK_PSDIV    SYSCLK_PSDIV_8
  61:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  62:../../../platform/common/services/clock/mega/sysclk.h **** 
  63:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Prescaler Setting (relative to CLKsys) */
  64:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
  65:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_1      0   /* !< Do not prescale */
  66:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_2      1   /* !< Prescale CLKper4 by 2 */
  67:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_4      2   /* !< Prescale CLKper4 by 4 */
  68:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_8      3   /* !< Prescale CLKper4 by 8 */
  69:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_16     4   /* !< Prescale CLKper4 by 16 */
  70:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_32     5   /* !< Prescale CLKper4 by 32 */
  71:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_64     6   /* !< Prescale CLKper4 by 64 */
  72:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_128    7   /* !< Prescale CLKper4 by 128 */
  73:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_256    8   /* !< Prescale CLKper4 by 256 */
  74:../../../platform/common/services/clock/mega/sysclk.h **** 
  75:../../../platform/common/services/clock/mega/sysclk.h **** /* @} */
  76:../../../platform/common/services/clock/mega/sysclk.h **** 
  77:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF || MEGA_XX0_1 || MEGA_XX4 || MEGA_XX4_A
  78:../../../platform/common/services/clock/mega/sysclk.h **** 
  79:../../../platform/common/services/clock/mega/sysclk.h **** #define NUMBER_OF_POWER_REG       2
  80:../../../platform/common/services/clock/mega/sysclk.h **** /*Starting Address for power reduction*/
  81:../../../platform/common/services/clock/mega/sysclk.h **** #define POWER_REG_ADD             PRR0
  82:../../../platform/common/services/clock/mega/sysclk.h **** 
  83:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Power Reduction  Clock Port Numbers */
  84:../../../platform/common/services/clock/mega/sysclk.h **** enum power_red_id {
  85:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG0,     /* !< Devices on PRR0 */
  86:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX4 || !MEGA_XX4_A || MEGA_XX0_1
  87:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG1,     /* !< Devices on PRR1 */
  88:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  89:../../../platform/common/services/clock/mega/sysclk.h **** };
  90:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  91:../../../platform/common/services/clock/mega/sysclk.h **** 
  92:../../../platform/common/services/clock/mega/sysclk.h **** /****************************************************
  93:../../../platform/common/services/clock/mega/sysclk.h ****  * Given a dummy type but not used for these groups
  94:../../../platform/common/services/clock/mega/sysclk.h ****  * to support for otherthen megaRF device.
  95:../../../platform/common/services/clock/mega/sysclk.h ****  **************************************************/
  96:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX8 || MEGA_XX8_A || MEGA_UNSPECIFIED
  97:../../../platform/common/services/clock/mega/sysclk.h **** #define NUMBER_OF_POWER_REG       1
  98:../../../platform/common/services/clock/mega/sysclk.h **** /*Starting Address for power reduction*/
  99:../../../platform/common/services/clock/mega/sysclk.h **** #define POWER_REG_ADD             PRR
 100:../../../platform/common/services/clock/mega/sysclk.h **** 
 101:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Power Reduction  Clock Port Numbers */
 102:../../../platform/common/services/clock/mega/sysclk.h **** enum power_red_id {
 103:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG0,     /* !< Devices on PRR */
 104:../../../platform/common/services/clock/mega/sysclk.h **** };
 105:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 106:../../../platform/common/services/clock/mega/sysclk.h **** 
 107:../../../platform/common/services/clock/mega/sysclk.h **** /* Bit mask for the power reduction register based on */
 108:../../../platform/common/services/clock/mega/sysclk.h **** /*   MCU ARCH.                                        */
 109:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 110:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for PRR2 */
 111:../../../platform/common/services/clock/mega/sysclk.h **** 
 112:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM0_bm                       1 << PRRAM0
 113:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM1_bm                       1 << PRRAM1
 114:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM2_bm                       1 << PRRAM2
 115:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM3_bm                       1 << PRRAM3
 116:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 117:../../../platform/common/services/clock/mega/sysclk.h **** 
 118:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for the power reduction 0 or PRR*/
 119:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN0 && !MEGA_XX_UN0
 120:../../../platform/common/services/clock/mega/sysclk.h **** #define PRADC_bm                        1 << PRADC
 121:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART0_bm                     1 << PRUSART0
 122:../../../platform/common/services/clock/mega/sysclk.h **** #define PRSPI_bm                        1 << PRSPI
 123:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM1_bm                       1 << PRTIM1
 124:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 125:../../../platform/common/services/clock/mega/sysclk.h **** 
 126:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 127:../../../platform/common/services/clock/mega/sysclk.h **** #define PRPGA_bm                        1 << PRPGA
 128:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 129:../../../platform/common/services/clock/mega/sysclk.h **** 
 130:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_UNSPECIFIED
 131:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM0_bm                       1 << PRTIM0
 132:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM2_bm                       1 << PRTIM2
 133:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTWI_bm                        1 << PRTWI
 134:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 135:../../../platform/common/services/clock/mega/sysclk.h **** 
 136:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX_UN2
 137:../../../platform/common/services/clock/mega/sysclk.h **** #define PRLCD_bm                        1 << PRLCD
 138:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 139:../../../platform/common/services/clock/mega/sysclk.h **** 
 140:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for  PRR1  */
 141:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef PRR1
 142:../../../platform/common/services/clock/mega/sysclk.h **** #if (MEGA_XX4 || MEGA_XX4_A)
 143:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM3_bm                       1 << PRTIM3
 144:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 145:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 146:../../../platform/common/services/clock/mega/sysclk.h **** 
 147:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF || MEGA_XX4 || MEGA_XX4_A
 148:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART1_bm                     1 << PRUSART1
 149:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART2_bm                     1 << PRUSART2
 150:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART3_bm                     1 << PRUSART3
 151:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM3_bm                       1 << PRTIM3
 152:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM4_bm                       1 << PRTIM4
 153:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM5_bm                       1 << PRTIM5
 154:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 155:../../../platform/common/services/clock/mega/sysclk.h **** 
 156:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 157:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTRX24_bm                      1 << PRTRX24
 158:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 159:../../../platform/common/services/clock/mega/sysclk.h **** 
 160:../../../platform/common/services/clock/mega/sysclk.h **** /**
 161:../../../platform/common/services/clock/mega/sysclk.h ****  * \name Querying the system clock and its derived clocks
 162:../../../platform/common/services/clock/mega/sysclk.h ****  */
 163:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
 164:../../../platform/common/services/clock/mega/sysclk.h **** 
 165:../../../platform/common/services/clock/mega/sysclk.h **** /**
 166:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the main system clock
 167:../../../platform/common/services/clock/mega/sysclk.h ****  * To know the clock value at what frequency the main clock is running
 168:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the main system clock, in Hz.
 169:../../../platform/common/services/clock/mega/sysclk.h ****  * \todo : please initialize the SYSCLK_SOURCE in conf_clock.h file for
 170:../../../platform/common/services/clock/mega/sysclk.h ****  * configured source clock using fuses.
 171:../../../platform/common/services/clock/mega/sysclk.h ****  * \eg. #define SYSCLK_SOURCE SYSCLK_SRC_RC16MHZ to use internal RC
 172:../../../platform/common/services/clock/mega/sysclk.h ****  * oscillator for clock source.
 173:../../../platform/common/services/clock/mega/sysclk.h ****  */
 174:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_main_hz(void)
 175:../../../platform/common/services/clock/mega/sysclk.h **** {
 176:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (SYSCLK_SOURCE) {
 177:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_RC16MHZ:
 178:../../../platform/common/services/clock/mega/sysclk.h **** 		return 16000000UL;
 179:../../../platform/common/services/clock/mega/sysclk.h **** 
 180:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_RC128KHZ:
 181:../../../platform/common/services/clock/mega/sysclk.h **** 		return 128000UL;
 182:../../../platform/common/services/clock/mega/sysclk.h **** 
 183:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 184:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_TRS16MHZ:
 185:../../../platform/common/services/clock/mega/sysclk.h **** 		return 16000000UL;
 186:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 187:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef BOARD_EXTERNAL_CLK
 188:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_EXTERNAL:
 189:../../../platform/common/services/clock/mega/sysclk.h **** 		return BOARD_EXTERNAL_CLK;
 190:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 191:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 192:../../../platform/common/services/clock/mega/sysclk.h **** 
 193:../../../platform/common/services/clock/mega/sysclk.h **** 		return 1000000UL;
 194:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 195:../../../platform/common/services/clock/mega/sysclk.h **** }
 196:../../../platform/common/services/clock/mega/sysclk.h **** 
 197:../../../platform/common/services/clock/mega/sysclk.h **** /**
 198:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of source clock in Hz.
 199:../../../platform/common/services/clock/mega/sysclk.h ****  *
 200:../../../platform/common/services/clock/mega/sysclk.h ****  * This clock always runs at the same rate as the CPU clock unless the divider
 201:../../../platform/common/services/clock/mega/sysclk.h ****  * is set.
 202:../../../platform/common/services/clock/mega/sysclk.h ****  *
 203:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the system clock, in Hz.
 204:../../../platform/common/services/clock/mega/sysclk.h ****  */
 205:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_source_clock_hz(void)
 206:../../../platform/common/services/clock/mega/sysclk.h **** {
 207:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (CONFIG_SYSCLK_PSDIV) {
 208:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_1: /* Fall through */
 209:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 210:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 211:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 212:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 213:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz();
 214:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 215:../../../platform/common/services/clock/mega/sysclk.h **** 
 216:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_2:
 217:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 218:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 219:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 220:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 221:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 222:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 223:../../../platform/common/services/clock/mega/sysclk.h **** 
 224:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_4:
 225:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 226:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 227:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 228:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 229:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 230:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 231:../../../platform/common/services/clock/mega/sysclk.h **** 
 232:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_8:
 233:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 234:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 235:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 236:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 237:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 238:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 239:../../../platform/common/services/clock/mega/sysclk.h **** 
 240:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_16:
 241:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 242:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 243:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 244:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 245:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 246:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 247:../../../platform/common/services/clock/mega/sysclk.h **** 
 248:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_32:
 249:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 250:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 251:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 252:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 253:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 254:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 255:../../../platform/common/services/clock/mega/sysclk.h **** 
 256:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_64:
 257:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 258:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 259:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 260:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 261:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 262:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 263:../../../platform/common/services/clock/mega/sysclk.h **** 
 264:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_128:
 265:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 266:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 267:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 268:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 269:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 270:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 271:../../../platform/common/services/clock/mega/sysclk.h **** 
 272:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_256:
 273:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 274:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 275:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 512;
 276:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 277:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 278:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 279:../../../platform/common/services/clock/mega/sysclk.h **** 
 280:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 281:../../../platform/common/services/clock/mega/sysclk.h **** 		/*Invalide case*/
 282:../../../platform/common/services/clock/mega/sysclk.h **** 		return 0;
 283:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 284:../../../platform/common/services/clock/mega/sysclk.h **** }
 285:../../../platform/common/services/clock/mega/sysclk.h **** 
 286:../../../platform/common/services/clock/mega/sysclk.h **** /**
 287:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the CPU clock.
 288:../../../platform/common/services/clock/mega/sysclk.h ****  *
 289:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 290:../../../platform/common/services/clock/mega/sysclk.h ****  */
 291:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_cpu_hz(void)
 292:../../../platform/common/services/clock/mega/sysclk.h **** {
 293:../../../platform/common/services/clock/mega/sysclk.h **** 	return sysclk_get_source_clock_hz();
 294:../../../platform/common/services/clock/mega/sysclk.h **** }
 295:../../../platform/common/services/clock/mega/sysclk.h **** 
 296:../../../platform/common/services/clock/mega/sysclk.h **** /**
 297:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the clock from internal oscillator
 298:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 299:../../../platform/common/services/clock/mega/sysclk.h ****  */
 300:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_rc_osc_hz(void)
 301:../../../platform/common/services/clock/mega/sysclk.h **** {
 302:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (CONFIG_SYSCLK_PSDIV) {
 303:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_1:
 304:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 305:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 306:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 307:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 308:../../../platform/common/services/clock/mega/sysclk.h **** 
 309:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_2:
 310:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 311:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 312:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 313:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 314:../../../platform/common/services/clock/mega/sysclk.h **** 
 315:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_4:
 316:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 317:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 318:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 319:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 320:../../../platform/common/services/clock/mega/sysclk.h **** 
 321:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_8:
 322:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 323:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 324:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 325:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 326:../../../platform/common/services/clock/mega/sysclk.h **** 
 327:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_16:
 328:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 329:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 330:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 331:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 332:../../../platform/common/services/clock/mega/sysclk.h **** 
 333:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_32:
 334:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 335:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 336:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 337:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 338:../../../platform/common/services/clock/mega/sysclk.h **** 
 339:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_64:
 340:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 341:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 342:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 343:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 344:../../../platform/common/services/clock/mega/sysclk.h **** 
 345:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_128:
 346:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 347:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 348:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 349:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 350:../../../platform/common/services/clock/mega/sysclk.h **** 
 351:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_256:
 352:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 353:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 354:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 512;
 355:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 356:../../../platform/common/services/clock/mega/sysclk.h **** 
 357:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 358:../../../platform/common/services/clock/mega/sysclk.h **** 		return 0;
 359:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 360:../../../platform/common/services/clock/mega/sysclk.h **** }
 361:../../../platform/common/services/clock/mega/sysclk.h **** 
 362:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Enabling and disabling synchronous clocks */
 363:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
 364:../../../platform/common/services/clock/mega/sysclk.h **** 
 365:../../../platform/common/services/clock/mega/sysclk.h **** /**
 366:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Enable the clock to peripheral \a id on port \a port
 367:../../../platform/common/services/clock/mega/sysclk.h ****  *
 368:../../../platform/common/services/clock/mega/sysclk.h ****  * \param port ID of the port to which the module is connected (one of
 369:../../../platform/common/services/clock/mega/sysclk.h ****  * the \c power_red_id *definitions).
 370:../../../platform/common/services/clock/mega/sysclk.h ****  * \param id The ID (bitmask) of the peripheral module to be disabled.*
 371:../../../platform/common/services/clock/mega/sysclk.h ****  */
 372:../../../platform/common/services/clock/mega/sysclk.h **** extern void sysclk_enable_module(enum power_red_id port, uint8_t id);
 373:../../../platform/common/services/clock/mega/sysclk.h **** 
 374:../../../platform/common/services/clock/mega/sysclk.h **** /**
 375:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Disable the clock to peripheral \a id on port \a port
 376:../../../platform/common/services/clock/mega/sysclk.h ****  *
 377:../../../platform/common/services/clock/mega/sysclk.h ****  * \param port ID of the port to which the module is connected (one of
 378:../../../platform/common/services/clock/mega/sysclk.h ****  * the \c power_red_id *definitions).
 379:../../../platform/common/services/clock/mega/sysclk.h ****  * \param id The ID (bit mask) of the peripheral module to be disabled.
 380:../../../platform/common/services/clock/mega/sysclk.h ****  */
 381:../../../platform/common/services/clock/mega/sysclk.h **** extern void sysclk_disable_module(enum power_red_id port, uint8_t id);
 382:../../../platform/common/services/clock/mega/sysclk.h **** 
 383:../../../platform/common/services/clock/mega/sysclk.h **** /**
 384:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Enable a peripherals clock from its base address.
 385:../../../platform/common/services/clock/mega/sysclk.h ****  *
 386:../../../platform/common/services/clock/mega/sysclk.h ****  *  Enables the clock to a peripheral, given its base address. If the peripheral
 387:../../../platform/common/services/clock/mega/sysclk.h ****  *  has an associated clock on the HSB bus, this will be enabled also.
 388:../../../platform/common/services/clock/mega/sysclk.h ****  *
 389:../../../platform/common/services/clock/mega/sysclk.h ****  * \param module Pointer to the module's base address.
 390:../../../platform/common/services/clock/mega/sysclk.h ****  */
 391:../../../platform/common/services/clock/mega/sysclk.h **** static inline void sysclk_enable_peripheral_clock(const volatile void *module)
 392:../../../platform/common/services/clock/mega/sysclk.h **** {
  15               		.loc 1 392 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25 0004 00D0      		rcall .
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 6
  28 0006 CDB7      		in r28,__SP_L__
  29 0008 DEB7      		in r29,__SP_H__
  30               	.LCFI3:
  31               		.cfi_def_cfa_register 28
  32               	/* prologue: function */
  33               	/* frame size = 2 */
  34               	/* stack size = 4 */
  35               	.L__stack_usage = 4
  36 000a 9A83      		std Y+2,r25
  37 000c 8983      		std Y+1,r24
 393:../../../platform/common/services/clock/mega/sysclk.h **** 	if (module == NULL) {
  38               		.loc 1 393 0
  39 000e 8981      		ldd r24,Y+1
  40 0010 9A81      		ldd r25,Y+2
  41 0012 892B      		or r24,r25
  42 0014 01F4      		brne .+2
  43 0016 00C0      		rjmp .L14
 394:../../../platform/common/services/clock/mega/sysclk.h **** 		Assert(false);
 395:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 396:../../../platform/common/services/clock/mega/sysclk.h **** 
 397:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN0 && !MEGA_XX_UN1
 398:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &ADC) {
  44               		.loc 1 398 0
  45 0018 8981      		ldd r24,Y+1
  46 001a 9A81      		ldd r25,Y+2
  47 001c 8837      		cpi r24,120
  48 001e 9105      		cpc r25,__zero_reg__
  49 0020 01F4      		brne .L3
 399:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRADC_bm);
  50               		.loc 1 399 0
  51 0022 61E0      		ldi r22,lo8(1)
  52 0024 80E0      		ldi r24,0
  53 0026 0E94 0000 		call sysclk_enable_module
 400:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 401:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRPGA_bm);
  54               		.loc 1 401 0
  55 002a 60E1      		ldi r22,lo8(16)
  56 002c 80E0      		ldi r24,0
  57 002e 0E94 0000 		call sysclk_enable_module
 402:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 403:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &UCSR0A) {
 404:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRUSART0_bm);
 405:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 406:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 407:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &SPCR) {
 408:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRSPI_bm);
 409:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 410:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 411:../../../platform/common/services/clock/mega/sysclk.h **** 
 412:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &TCCR1A) {
 413:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM1_bm);
 414:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 415:../../../platform/common/services/clock/mega/sysclk.h **** 
 416:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX_UN2
 417:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &LCDCRA) {
 418:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRLCD_bm);
 419:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 420:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 421:../../../platform/common/services/clock/mega/sysclk.h **** 
 422:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN2
 423:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &TCCR0A) {
 424:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM0_bm);
 425:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR2A) {
 426:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM2_bm);
 427:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TWBR) {
 428:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTWI_bm);
 429:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 430:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 431:../../../platform/common/services/clock/mega/sysclk.h **** 
 432:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 433:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &UCSR1A) {
 434:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRUSART1_bm);
 435:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR3A) {
 436:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM3_bm);
 437:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR4A) {
 438:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM4_bm);
 439:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR5A) {
 440:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM5_bm);
 441:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TRX_CTRL_0) {
 442:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTRX24_bm);
 443:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 444:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 445:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 446:../../../platform/common/services/clock/mega/sysclk.h **** 	else {
 447:../../../platform/common/services/clock/mega/sysclk.h **** 		Assert(false);
 448:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 449:../../../platform/common/services/clock/mega/sysclk.h **** }
  58               		.loc 1 449 0
  59 0032 00C0      		rjmp .L14
  60               	.L3:
 403:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRUSART0_bm);
  61               		.loc 1 403 0
  62 0034 8981      		ldd r24,Y+1
  63 0036 9A81      		ldd r25,Y+2
  64 0038 803C      		cpi r24,-64
  65 003a 9105      		cpc r25,__zero_reg__
  66 003c 01F4      		brne .L4
 404:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  67               		.loc 1 404 0
  68 003e 62E0      		ldi r22,lo8(2)
  69 0040 80E0      		ldi r24,0
  70 0042 0E94 0000 		call sysclk_enable_module
  71               		.loc 1 449 0
  72 0046 00C0      		rjmp .L14
  73               	.L4:
 407:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRSPI_bm);
  74               		.loc 1 407 0
  75 0048 8981      		ldd r24,Y+1
  76 004a 9A81      		ldd r25,Y+2
  77 004c 8C34      		cpi r24,76
  78 004e 9105      		cpc r25,__zero_reg__
  79 0050 01F4      		brne .L5
 408:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  80               		.loc 1 408 0
  81 0052 64E0      		ldi r22,lo8(4)
  82 0054 80E0      		ldi r24,0
  83 0056 0E94 0000 		call sysclk_enable_module
  84               		.loc 1 449 0
  85 005a 00C0      		rjmp .L14
  86               	.L5:
 412:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM1_bm);
  87               		.loc 1 412 0
  88 005c 8981      		ldd r24,Y+1
  89 005e 9A81      		ldd r25,Y+2
  90 0060 8038      		cpi r24,-128
  91 0062 9105      		cpc r25,__zero_reg__
  92 0064 01F4      		brne .L6
 413:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  93               		.loc 1 413 0
  94 0066 68E0      		ldi r22,lo8(8)
  95 0068 80E0      		ldi r24,0
  96 006a 0E94 0000 		call sysclk_enable_module
  97               		.loc 1 449 0
  98 006e 00C0      		rjmp .L14
  99               	.L6:
 423:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM0_bm);
 100               		.loc 1 423 0
 101 0070 8981      		ldd r24,Y+1
 102 0072 9A81      		ldd r25,Y+2
 103 0074 8434      		cpi r24,68
 104 0076 9105      		cpc r25,__zero_reg__
 105 0078 01F4      		brne .L7
 424:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR2A) {
 106               		.loc 1 424 0
 107 007a 60E2      		ldi r22,lo8(32)
 108 007c 80E0      		ldi r24,0
 109 007e 0E94 0000 		call sysclk_enable_module
 110               		.loc 1 449 0
 111 0082 00C0      		rjmp .L14
 112               	.L7:
 425:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM2_bm);
 113               		.loc 1 425 0
 114 0084 8981      		ldd r24,Y+1
 115 0086 9A81      		ldd r25,Y+2
 116 0088 803B      		cpi r24,-80
 117 008a 9105      		cpc r25,__zero_reg__
 118 008c 01F4      		brne .L8
 426:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TWBR) {
 119               		.loc 1 426 0
 120 008e 60E4      		ldi r22,lo8(64)
 121 0090 80E0      		ldi r24,0
 122 0092 0E94 0000 		call sysclk_enable_module
 123               		.loc 1 449 0
 124 0096 00C0      		rjmp .L14
 125               	.L8:
 427:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTWI_bm);
 126               		.loc 1 427 0
 127 0098 8981      		ldd r24,Y+1
 128 009a 9A81      		ldd r25,Y+2
 129 009c 883B      		cpi r24,-72
 130 009e 9105      		cpc r25,__zero_reg__
 131 00a0 01F4      		brne .L9
 428:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 132               		.loc 1 428 0
 133 00a2 60E8      		ldi r22,lo8(-128)
 134 00a4 80E0      		ldi r24,0
 135 00a6 0E94 0000 		call sysclk_enable_module
 136               		.loc 1 449 0
 137 00aa 00C0      		rjmp .L14
 138               	.L9:
 433:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRUSART1_bm);
 139               		.loc 1 433 0
 140 00ac 8981      		ldd r24,Y+1
 141 00ae 9A81      		ldd r25,Y+2
 142 00b0 883C      		cpi r24,-56
 143 00b2 9105      		cpc r25,__zero_reg__
 144 00b4 01F4      		brne .L10
 434:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR3A) {
 145               		.loc 1 434 0
 146 00b6 61E0      		ldi r22,lo8(1)
 147 00b8 81E0      		ldi r24,lo8(1)
 148 00ba 0E94 0000 		call sysclk_enable_module
 149               		.loc 1 449 0
 150 00be 00C0      		rjmp .L14
 151               	.L10:
 435:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM3_bm);
 152               		.loc 1 435 0
 153 00c0 8981      		ldd r24,Y+1
 154 00c2 9A81      		ldd r25,Y+2
 155 00c4 8039      		cpi r24,-112
 156 00c6 9105      		cpc r25,__zero_reg__
 157 00c8 01F4      		brne .L11
 436:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR4A) {
 158               		.loc 1 436 0
 159 00ca 68E0      		ldi r22,lo8(8)
 160 00cc 81E0      		ldi r24,lo8(1)
 161 00ce 0E94 0000 		call sysclk_enable_module
 162               		.loc 1 449 0
 163 00d2 00C0      		rjmp .L14
 164               	.L11:
 437:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM4_bm);
 165               		.loc 1 437 0
 166 00d4 8981      		ldd r24,Y+1
 167 00d6 9A81      		ldd r25,Y+2
 168 00d8 803A      		cpi r24,-96
 169 00da 9105      		cpc r25,__zero_reg__
 170 00dc 01F4      		brne .L12
 438:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR5A) {
 171               		.loc 1 438 0
 172 00de 60E1      		ldi r22,lo8(16)
 173 00e0 81E0      		ldi r24,lo8(1)
 174 00e2 0E94 0000 		call sysclk_enable_module
 175               		.loc 1 449 0
 176 00e6 00C0      		rjmp .L14
 177               	.L12:
 439:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM5_bm);
 178               		.loc 1 439 0
 179 00e8 8981      		ldd r24,Y+1
 180 00ea 9A81      		ldd r25,Y+2
 181 00ec 8032      		cpi r24,32
 182 00ee 9140      		sbci r25,1
 183 00f0 01F4      		brne .L13
 440:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TRX_CTRL_0) {
 184               		.loc 1 440 0
 185 00f2 60E2      		ldi r22,lo8(32)
 186 00f4 81E0      		ldi r24,lo8(1)
 187 00f6 0E94 0000 		call sysclk_enable_module
 188               		.loc 1 449 0
 189 00fa 00C0      		rjmp .L14
 190               	.L13:
 441:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTRX24_bm);
 191               		.loc 1 441 0
 192 00fc 8981      		ldd r24,Y+1
 193 00fe 9A81      		ldd r25,Y+2
 194 0100 8334      		cpi r24,67
 195 0102 9140      		sbci r25,1
 196 0104 01F4      		brne .L14
 442:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 197               		.loc 1 442 0
 198 0106 60E4      		ldi r22,lo8(64)
 199 0108 81E0      		ldi r24,lo8(1)
 200 010a 0E94 0000 		call sysclk_enable_module
 201               	.L14:
 202               		.loc 1 449 0
 203 010e 0000      		nop
 204               	/* epilogue start */
 205 0110 0F90      		pop __tmp_reg__
 206 0112 0F90      		pop __tmp_reg__
 207 0114 DF91      		pop r29
 208 0116 CF91      		pop r28
 209 0118 0895      		ret
 210               		.cfi_endproc
 211               	.LFE69:
 214               	__portable_avr_delay_cycles:
 215               	.LFB74:
 216               		.file 2 "../../../platform/common/services/delay/mega_rf/cycle_counter.h"
   1:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
   2:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \file
   3:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   4:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \brief AVR functions for busy-wait delay loops
   5:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   6:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Copyright (c) 2011 - 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   8:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_start
   9:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  10:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \page License
  11:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  12:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  15:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  18:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  22:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  25:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  28:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  40:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_stop
  41:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  42:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  43:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifndef _cycle_counter_h_
  44:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #define _cycle_counter_h_
  45:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  46:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifdef __cplusplus
  47:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** extern "C" {
  48:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #endif
  49:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  50:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #include <compiler.h>
  51:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  52:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
  53:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @name Convenience functions for busy-wait delay loops
  54:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  55:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def delay_cycles
  56:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of CPU cycles.
  57:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param n number of CPU cycles to wait
  58:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  59:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_ms
  60:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of milliseconds.
  61:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of milliseconds to wait
  62:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  63:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  64:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_us
  65:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of microseconds.
  66:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of microseconds to wait
  67:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  68:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  69:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_ms_2_cy
  70:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert milli-seconds into CPU cycles.
  71:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of milliseconds
  72:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  73:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  74:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  75:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_us_2_cy
  76:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert micro-seconds into CPU cycles.
  77:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of microseconds
  78:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  79:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  80:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  81:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @{
  82:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  83:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** __always_optimize
  84:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** static inline void __portable_avr_delay_cycles(unsigned long n)
  85:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** {
 217               		.loc 2 85 0
 218               		.cfi_startproc
 219               	/* prologue: function */
 220               	/* frame size = 0 */
 221               	/* stack size = 0 */
 222               	.L__stack_usage = 0
 223               	.L16:
  86:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 	do { barrier(); } while (--n);
 224               		.loc 2 86 0 discriminator 1
 225 011a 6150      		subi r22,1
 226 011c 7109      		sbc r23,__zero_reg__
 227 011e 8109      		sbc r24,__zero_reg__
 228 0120 9109      		sbc r25,__zero_reg__
 229 0122 01F4      		brne .L16
 230               	/* epilogue start */
  87:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** }
 231               		.loc 2 87 0
 232 0124 0895      		ret
 233               		.cfi_endproc
 234               	.LFE74:
 236               		.section	.bss.phyState,"aw",@nobits
 239               	phyState:
 240 0000 00        		.zero	1
 241               		.section	.bss.phyRxBuffer,"aw",@nobits
 244               	phyRxBuffer:
 245 0000 0000 0000 		.zero	128
 245      0000 0000 
 245      0000 0000 
 245      0000 0000 
 245      0000 0000 
 246               		.section	.bss.phyRxState,"aw",@nobits
 249               	phyRxState:
 250 0000 00        		.zero	1
 251               		.text
 252               	.global	PHY_Init
 254               	PHY_Init:
 255               	.LFB75:
 256               		.file 3 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c"
   1:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /**
   2:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \file phy.c
   3:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   4:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \brief ATMEGAxxxRFA1 PHY implementation
   5:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   6:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * Copyright (C) 2014, Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   8:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  10:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  13:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  16:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  20:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  23:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  26:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  38:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  40:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  41:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  */
  42:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  43:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ATMEGARFA1
  44:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  45:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Includes ---------------------------------------------------------------*/
  46:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "phy.h"
  47:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "delay.h"
  48:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "sal.h"
  49:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "atmegarfa1.h"
  50:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  51:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Definitions ------------------------------------------------------------*/
  52:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #define PHY_CRC_SIZE          2
  53:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #define IRQ_CLEAR_VALUE       0xff
  54:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Types ------------------------------------------------------------------*/
  55:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** typedef enum {
  56:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_INITIAL,
  57:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_IDLE,
  58:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_SLEEP,
  59:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_STATE_TX_WAIT_END,
  60:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** } PhyState_t;
  61:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  62:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Prototypes -------------------------------------------------------------*/
  63:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phySetRxState(void);
  64:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  65:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Variables --------------------------------------------------------------*/
  66:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static PhyState_t phyState = PHY_STATE_INITIAL;
  67:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static uint8_t phyRxBuffer[128];
  68:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static bool phyRxState;
  69:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  70:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Implementations --------------------------------------------------------*/
  71:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  72:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
  73:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
  74:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Init(void)
  75:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 257               		.loc 3 75 0
 258               		.cfi_startproc
 259 0126 0F93      		push r16
 260               	.LCFI4:
 261               		.cfi_def_cfa_offset 3
 262               		.cfi_offset 16, -2
 263 0128 1F93      		push r17
 264               	.LCFI5:
 265               		.cfi_def_cfa_offset 4
 266               		.cfi_offset 17, -3
 267 012a CF93      		push r28
 268               	.LCFI6:
 269               		.cfi_def_cfa_offset 5
 270               		.cfi_offset 28, -4
 271 012c DF93      		push r29
 272               	.LCFI7:
 273               		.cfi_def_cfa_offset 6
 274               		.cfi_offset 29, -5
 275 012e CDB7      		in r28,__SP_L__
 276 0130 DEB7      		in r29,__SP_H__
 277               	.LCFI8:
 278               		.cfi_def_cfa_register 28
 279               	/* prologue: function */
 280               	/* frame size = 0 */
 281               	/* stack size = 4 */
 282               	.L__stack_usage = 4
  76:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sysclk_enable_peripheral_clock(&TRX_CTRL_0);
 283               		.loc 3 76 0
 284 0132 83E4      		ldi r24,lo8(67)
 285 0134 91E0      		ldi r25,lo8(1)
 286 0136 0E94 0000 		call sysclk_enable_peripheral_clock
  77:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  78:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.trxrst = 1;
 287               		.loc 3 78 0
 288 013a 89E3      		ldi r24,lo8(57)
 289 013c 91E0      		ldi r25,lo8(1)
 290 013e FC01      		movw r30,r24
 291 0140 2081      		ld r18,Z
 292 0142 2160      		ori r18,lo8(1)
 293 0144 FC01      		movw r30,r24
 294 0146 2083      		st Z,r18
  79:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  80:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyRxState = false;
 295               		.loc 3 80 0
 296 0148 1092 0000 		sts phyRxState,__zero_reg__
  81:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_IDLE;
 297               		.loc 3 81 0
 298 014c 81E0      		ldi r24,lo8(1)
 299 014e 8093 0000 		sts phyState,r24
  82:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  83:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 300               		.loc 3 83 0
 301 0152 88E0      		ldi r24,lo8(8)
 302 0154 0E94 0000 		call phyTrxSetState
  84:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  85:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_2_REG_s.rxSafeMode = 1;
 303               		.loc 3 85 0
 304 0158 8CE4      		ldi r24,lo8(76)
 305 015a 91E0      		ldi r25,lo8(1)
 306 015c FC01      		movw r30,r24
 307 015e 2081      		ld r18,Z
 308 0160 2068      		ori r18,lo8(-128)
 309 0162 FC01      		movw r30,r24
 310 0164 2083      		st Z,r18
  86:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  87:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
  88:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = (uint8_t)PHY_RandomReq();
 311               		.loc 3 88 0
 312 0166 0DE6      		ldi r16,lo8(109)
 313 0168 11E0      		ldi r17,lo8(1)
 314 016a 0E94 0000 		call PHY_RandomReq
 315 016e F801      		movw r30,r16
 316 0170 8083      		st Z,r24
  89:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
  90:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  91:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
  92:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antCtrl = 2;
 317               		.loc 3 92 0
 318 0172 8DE4      		ldi r24,lo8(77)
 319 0174 91E0      		ldi r25,lo8(1)
 320 0176 FC01      		movw r30,r24
 321 0178 2081      		ld r18,Z
 322 017a 2C7F      		andi r18,lo8(-4)
 323 017c 2260      		ori r18,lo8(2)
 324 017e FC01      		movw r30,r24
 325 0180 2083      		st Z,r18
  93:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	RX_CTRL_REG_s.pdtThres = 0x03;
 326               		.loc 3 93 0
 327 0182 8AE4      		ldi r24,lo8(74)
 328 0184 91E0      		ldi r25,lo8(1)
 329 0186 FC01      		movw r30,r24
 330 0188 2081      		ld r18,Z
 331 018a 207F      		andi r18,lo8(-16)
 332 018c 2360      		ori r18,lo8(3)
 333 018e FC01      		movw r30,r24
 334 0190 2083      		st Z,r18
  94:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 1;
 335               		.loc 3 94 0
 336 0192 8DE4      		ldi r24,lo8(77)
 337 0194 91E0      		ldi r25,lo8(1)
 338 0196 FC01      		movw r30,r24
 339 0198 2081      		ld r18,Z
 340 019a 2860      		ori r18,lo8(8)
 341 019c FC01      		movw r30,r24
 342 019e 2083      		st Z,r18
  95:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 1;
 343               		.loc 3 95 0
 344 01a0 8DE4      		ldi r24,lo8(77)
 345 01a2 91E0      		ldi r25,lo8(1)
 346 01a4 FC01      		movw r30,r24
 347 01a6 2081      		ld r18,Z
 348 01a8 2460      		ori r18,lo8(4)
 349 01aa FC01      		movw r30,r24
 350 01ac 2083      		st Z,r18
  96:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #else
  97:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DEFAULT != 0)
  98:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
  99:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antCtrl = ANTENNA_DEFAULT;
 100:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DEFAULT
 101:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // ANTENNA_DIVERSITY
 102:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 103:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 1;
 351               		.loc 3 103 0
 352 01ae 84E4      		ldi r24,lo8(68)
 353 01b0 91E0      		ldi r25,lo8(1)
 354 01b2 FC01      		movw r30,r24
 355 01b4 2081      		ld r18,Z
 356 01b6 2068      		ori r18,lo8(-128)
 357 01b8 FC01      		movw r30,r24
 358 01ba 2083      		st Z,r18
 104:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 105:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 359               		.loc 3 105 0
 360 01bc 0000      		nop
 361               	/* epilogue start */
 362 01be DF91      		pop r29
 363 01c0 CF91      		pop r28
 364 01c2 1F91      		pop r17
 365 01c4 0F91      		pop r16
 366 01c6 0895      		ret
 367               		.cfi_endproc
 368               	.LFE75:
 370               	.global	PHY_SetTdmaMode
 372               	PHY_SetTdmaMode:
 373               	.LFB76:
 106:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 107:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetTdmaMode(bool mode)
 108:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 374               		.loc 3 108 0
 375               		.cfi_startproc
 376 01c8 CF93      		push r28
 377               	.LCFI9:
 378               		.cfi_def_cfa_offset 3
 379               		.cfi_offset 28, -2
 380 01ca DF93      		push r29
 381               	.LCFI10:
 382               		.cfi_def_cfa_offset 4
 383               		.cfi_offset 29, -3
 384 01cc 1F92      		push __zero_reg__
 385               	.LCFI11:
 386               		.cfi_def_cfa_offset 5
 387 01ce CDB7      		in r28,__SP_L__
 388 01d0 DEB7      		in r29,__SP_H__
 389               	.LCFI12:
 390               		.cfi_def_cfa_register 28
 391               	/* prologue: function */
 392               	/* frame size = 1 */
 393               	/* stack size = 3 */
 394               	.L__stack_usage = 3
 395 01d2 8983      		std Y+1,r24
 109:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(mode)
 396               		.loc 3 109 0
 397 01d4 8981      		ldd r24,Y+1
 398 01d6 8823      		tst r24
 399 01d8 01F0      		breq .L21
 110:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 111:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 0;
 400               		.loc 3 111 0
 401 01da 8CE6      		ldi r24,lo8(108)
 402 01dc 91E0      		ldi r25,lo8(1)
 403 01de FC01      		movw r30,r24
 404 01e0 2081      		ld r18,Z
 405 01e2 2F70      		andi r18,lo8(15)
 406 01e4 FC01      		movw r30,r24
 407 01e6 2083      		st Z,r18
 112:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 7;
 408               		.loc 3 112 0
 409 01e8 8CE6      		ldi r24,lo8(108)
 410 01ea 91E0      		ldi r25,lo8(1)
 411 01ec FC01      		movw r30,r24
 412 01ee 2081      		ld r18,Z
 413 01f0 2E60      		ori r18,lo8(14)
 414 01f2 FC01      		movw r30,r24
 415 01f4 2083      		st Z,r18
 113:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	
 114:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;	// Disable ACK even if requested		
 416               		.loc 3 114 0
 417 01f6 8EE6      		ldi r24,lo8(110)
 418 01f8 91E0      		ldi r25,lo8(1)
 419 01fa FC01      		movw r30,r24
 420 01fc 2081      		ld r18,Z
 421 01fe 2061      		ori r18,lo8(16)
 422 0200 FC01      		movw r30,r24
 423 0202 2083      		st Z,r18
 115:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 116:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	else
 117:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 118:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 3;
 119:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 120:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		
 121:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 122:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 123:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 424               		.loc 3 123 0
 425 0204 00C0      		rjmp .L23
 426               	.L21:
 118:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 427               		.loc 3 118 0
 428 0206 8CE6      		ldi r24,lo8(108)
 429 0208 91E0      		ldi r25,lo8(1)
 430 020a FC01      		movw r30,r24
 431 020c 2081      		ld r18,Z
 432 020e 2F70      		andi r18,lo8(15)
 433 0210 2063      		ori r18,lo8(48)
 434 0212 FC01      		movw r30,r24
 435 0214 2083      		st Z,r18
 119:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		
 436               		.loc 3 119 0
 437 0216 8CE6      		ldi r24,lo8(108)
 438 0218 91E0      		ldi r25,lo8(1)
 439 021a FC01      		movw r30,r24
 440 021c 2081      		ld r18,Z
 441 021e 217F      		andi r18,lo8(-15)
 442 0220 2860      		ori r18,lo8(8)
 443 0222 FC01      		movw r30,r24
 444 0224 2083      		st Z,r18
 121:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 445               		.loc 3 121 0
 446 0226 8EE6      		ldi r24,lo8(110)
 447 0228 91E0      		ldi r25,lo8(1)
 448 022a FC01      		movw r30,r24
 449 022c 2081      		ld r18,Z
 450 022e 2F7E      		andi r18,lo8(-17)
 451 0230 FC01      		movw r30,r24
 452 0232 2083      		st Z,r18
 453               	.L23:
 454               		.loc 3 123 0
 455 0234 0000      		nop
 456               	/* epilogue start */
 457 0236 0F90      		pop __tmp_reg__
 458 0238 DF91      		pop r29
 459 023a CF91      		pop r28
 460 023c 0895      		ret
 461               		.cfi_endproc
 462               	.LFE76:
 464               	.global	PHY_SetPromiscuousMode
 466               	PHY_SetPromiscuousMode:
 467               	.LFB77:
 124:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 125:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPromiscuousMode(bool mode)
 126:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 468               		.loc 3 126 0
 469               		.cfi_startproc
 470 023e CF93      		push r28
 471               	.LCFI13:
 472               		.cfi_def_cfa_offset 3
 473               		.cfi_offset 28, -2
 474 0240 DF93      		push r29
 475               	.LCFI14:
 476               		.cfi_def_cfa_offset 4
 477               		.cfi_offset 29, -3
 478 0242 CDB7      		in r28,__SP_L__
 479 0244 DEB7      		in r29,__SP_H__
 480               	.LCFI15:
 481               		.cfi_def_cfa_register 28
 482 0246 2997      		sbiw r28,9
 483               	.LCFI16:
 484               		.cfi_def_cfa_offset 13
 485 0248 0FB6      		in __tmp_reg__,__SREG__
 486 024a F894      		cli
 487 024c DEBF      		out __SP_H__,r29
 488 024e 0FBE      		out __SREG__,__tmp_reg__
 489 0250 CDBF      		out __SP_L__,r28
 490               	/* prologue: function */
 491               	/* frame size = 9 */
 492               	/* stack size = 11 */
 493               	.L__stack_usage = 11
 494 0252 8987      		std Y+9,r24
 127:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t ieee_address[] = { 0, 0, 0, 0, 0, 0, 0, 0 };
 495               		.loc 3 127 0
 496 0254 28E0      		ldi r18,lo8(8)
 497 0256 CE01      		movw r24,r28
 498 0258 0196      		adiw r24,1
 499 025a FC01      		movw r30,r24
 500 025c 322F      		mov r19,r18
 501               		0:
 502 025e 1192      		st Z+,__zero_reg__
 503 0260 3A95      		dec r19
 504 0262 01F4      		brne 0b
 128:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 129:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(mode)
 505               		.loc 3 129 0
 506 0264 8985      		ldd r24,Y+9
 507 0266 8823      		tst r24
 508 0268 01F0      		breq .L25
 130:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 131:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetShortAddr(0);
 509               		.loc 3 131 0
 510 026a 80E0      		ldi r24,0
 511 026c 90E0      		ldi r25,0
 512 026e 0E94 0000 		call PHY_SetShortAddr
 132:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetPanId(0);
 513               		.loc 3 132 0
 514 0272 80E0      		ldi r24,0
 515 0274 90E0      		ldi r25,0
 516 0276 0E94 0000 		call PHY_SetPanId
 133:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetIEEEAddr(ieee_address);
 517               		.loc 3 133 0
 518 027a CE01      		movw r24,r28
 519 027c 0196      		adiw r24,1
 520 027e 0E94 0000 		call PHY_SetIEEEAddr
 134:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 135:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** // AACK_UPLD_RES_FT = 1, AACK_FLT_RES_FT = 0:
 136:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	Any non-corrupted frame with a reserved frame type is indicated by a
 137:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	TRX24_RX_END interrupt. No further address filtering is applied on those frames.
 138:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	A TRX24_AMI interrupt is never generated and the acknowledgment subfield is
 139:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	ignored.
 140:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 141:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackPromMode = 1;	// Enable promiscuous mode
 521               		.loc 3 141 0
 522 0282 87E5      		ldi r24,lo8(87)
 523 0284 91E0      		ldi r25,lo8(1)
 524 0286 FC01      		movw r30,r24
 525 0288 2081      		ld r18,Z
 526 028a 2260      		ori r18,lo8(2)
 527 028c FC01      		movw r30,r24
 528 028e 2083      		st Z,r18
 142:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackUpldResFt = 1;	// Enable reserved frame type reception ; this was changed to
 529               		.loc 3 142 0
 530 0290 87E5      		ldi r24,lo8(87)
 531 0292 91E0      		ldi r25,lo8(1)
 532 0294 FC01      		movw r30,r24
 533 0296 2081      		ld r18,Z
 534 0298 2061      		ori r18,lo8(16)
 535 029a FC01      		movw r30,r24
 536 029c 2083      		st Z,r18
 143:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****                                         // so that the addres isn't checked by filter
 144:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackFltrResFt = 0;	// Disable filter of reserved frame types
 537               		.loc 3 144 0
 538 029e 87E5      		ldi r24,lo8(87)
 539 02a0 91E0      		ldi r25,lo8(1)
 540 02a2 FC01      		movw r30,r24
 541 02a4 2081      		ld r18,Z
 542 02a6 2F7D      		andi r18,lo8(-33)
 543 02a8 FC01      		movw r30,r24
 544 02aa 2083      		st Z,r18
 145:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;		// Disable generation of acknowledgment
 545               		.loc 3 145 0
 546 02ac 8EE6      		ldi r24,lo8(110)
 547 02ae 91E0      		ldi r25,lo8(1)
 548 02b0 FC01      		movw r30,r24
 549 02b2 2081      		ld r18,Z
 550 02b4 2061      		ori r18,lo8(16)
 551 02b6 FC01      		movw r30,r24
 552 02b8 2083      		st Z,r18
 146:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 147:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	else
 148:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 149:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG = 0;
 150:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 151:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 152:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 553               		.loc 3 152 0
 554 02ba 00C0      		rjmp .L27
 555               	.L25:
 149:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 556               		.loc 3 149 0
 557 02bc 87E5      		ldi r24,lo8(87)
 558 02be 91E0      		ldi r25,lo8(1)
 559 02c0 FC01      		movw r30,r24
 560 02c2 1082      		st Z,__zero_reg__
 150:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 561               		.loc 3 150 0
 562 02c4 8EE6      		ldi r24,lo8(110)
 563 02c6 91E0      		ldi r25,lo8(1)
 564 02c8 FC01      		movw r30,r24
 565 02ca 2081      		ld r18,Z
 566 02cc 2F7E      		andi r18,lo8(-17)
 567 02ce FC01      		movw r30,r24
 568 02d0 2083      		st Z,r18
 569               	.L27:
 570               		.loc 3 152 0
 571 02d2 0000      		nop
 572               	/* epilogue start */
 573 02d4 2996      		adiw r28,9
 574 02d6 0FB6      		in __tmp_reg__,__SREG__
 575 02d8 F894      		cli
 576 02da DEBF      		out __SP_H__,r29
 577 02dc 0FBE      		out __SREG__,__tmp_reg__
 578 02de CDBF      		out __SP_L__,r28
 579 02e0 DF91      		pop r29
 580 02e2 CF91      		pop r28
 581 02e4 0895      		ret
 582               		.cfi_endproc
 583               	.LFE77:
 585               	.global	PHY_SetOptimizedCSMAValues
 587               	PHY_SetOptimizedCSMAValues:
 588               	.LFB78:
 153:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 154:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetOptimizedCSMAValues(void)
 155:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 589               		.loc 3 155 0
 590               		.cfi_startproc
 591 02e6 0F93      		push r16
 592               	.LCFI17:
 593               		.cfi_def_cfa_offset 3
 594               		.cfi_offset 16, -2
 595 02e8 1F93      		push r17
 596               	.LCFI18:
 597               		.cfi_def_cfa_offset 4
 598               		.cfi_offset 17, -3
 599 02ea CF93      		push r28
 600               	.LCFI19:
 601               		.cfi_def_cfa_offset 5
 602               		.cfi_offset 28, -4
 603 02ec DF93      		push r29
 604               	.LCFI20:
 605               		.cfi_def_cfa_offset 6
 606               		.cfi_offset 29, -5
 607 02ee CDB7      		in r28,__SP_L__
 608 02f0 DEB7      		in r29,__SP_H__
 609               	.LCFI21:
 610               		.cfi_def_cfa_register 28
 611               	/* prologue: function */
 612               	/* frame size = 0 */
 613               	/* stack size = 4 */
 614               	.L__stack_usage = 4
 156:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	// CSMA_BE_REG_s.minBe = 0x08;
 157:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	// CSMA_BE_REG_s.maxBe = 0x08;
 158:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = (uint8_t)PHY_RandomReq();
 615               		.loc 3 158 0
 616 02f2 0DE6      		ldi r16,lo8(109)
 617 02f4 11E0      		ldi r17,lo8(1)
 618 02f6 0E94 0000 		call PHY_RandomReq
 619 02fa F801      		movw r30,r16
 620 02fc 8083      		st Z,r24
 159:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 621               		.loc 3 159 0
 622 02fe 0000      		nop
 623               	/* epilogue start */
 624 0300 DF91      		pop r29
 625 0302 CF91      		pop r28
 626 0304 1F91      		pop r17
 627 0306 0F91      		pop r16
 628 0308 0895      		ret
 629               		.cfi_endproc
 630               	.LFE78:
 632               	.global	PHY_SetRxState
 634               	PHY_SetRxState:
 635               	.LFB79:
 160:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 161:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 162:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 163:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetRxState(bool rx)
 164:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 636               		.loc 3 164 0
 637               		.cfi_startproc
 638 030a CF93      		push r28
 639               	.LCFI22:
 640               		.cfi_def_cfa_offset 3
 641               		.cfi_offset 28, -2
 642 030c DF93      		push r29
 643               	.LCFI23:
 644               		.cfi_def_cfa_offset 4
 645               		.cfi_offset 29, -3
 646 030e 1F92      		push __zero_reg__
 647               	.LCFI24:
 648               		.cfi_def_cfa_offset 5
 649 0310 CDB7      		in r28,__SP_L__
 650 0312 DEB7      		in r29,__SP_H__
 651               	.LCFI25:
 652               		.cfi_def_cfa_register 28
 653               	/* prologue: function */
 654               	/* frame size = 1 */
 655               	/* stack size = 3 */
 656               	.L__stack_usage = 3
 657 0314 8983      		std Y+1,r24
 165:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyRxState = rx;
 658               		.loc 3 165 0
 659 0316 8981      		ldd r24,Y+1
 660 0318 8093 0000 		sts phyRxState,r24
 166:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 661               		.loc 3 166 0
 662 031c 0E94 0000 		call phySetRxState
 167:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 663               		.loc 3 167 0
 664 0320 0000      		nop
 665               	/* epilogue start */
 666 0322 0F90      		pop __tmp_reg__
 667 0324 DF91      		pop r29
 668 0326 CF91      		pop r28
 669 0328 0895      		ret
 670               		.cfi_endproc
 671               	.LFE79:
 673               	.global	PHY_SetChannel
 675               	PHY_SetChannel:
 676               	.LFB80:
 168:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 169:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 170:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 171:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetChannel(uint8_t channel)
 172:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 677               		.loc 3 172 0
 678               		.cfi_startproc
 679 032a CF93      		push r28
 680               	.LCFI26:
 681               		.cfi_def_cfa_offset 3
 682               		.cfi_offset 28, -2
 683 032c DF93      		push r29
 684               	.LCFI27:
 685               		.cfi_def_cfa_offset 4
 686               		.cfi_offset 29, -3
 687 032e 1F92      		push __zero_reg__
 688               	.LCFI28:
 689               		.cfi_def_cfa_offset 5
 690 0330 CDB7      		in r28,__SP_L__
 691 0332 DEB7      		in r29,__SP_H__
 692               	.LCFI29:
 693               		.cfi_def_cfa_register 28
 694               	/* prologue: function */
 695               	/* frame size = 1 */
 696               	/* stack size = 3 */
 697               	.L__stack_usage = 3
 698 0334 8983      		std Y+1,r24
 173:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_CC_CCA_REG_s.channel = channel;
 699               		.loc 3 173 0
 700 0336 88E4      		ldi r24,lo8(72)
 701 0338 91E0      		ldi r25,lo8(1)
 702 033a 2981      		ldd r18,Y+1
 703 033c 2F71      		andi r18,lo8(31)
 704 033e 2F71      		andi r18,lo8(31)
 705 0340 FC01      		movw r30,r24
 706 0342 3081      		ld r19,Z
 707 0344 307E      		andi r19,lo8(-32)
 708 0346 232B      		or r18,r19
 709 0348 FC01      		movw r30,r24
 710 034a 2083      		st Z,r18
 174:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 711               		.loc 3 174 0
 712 034c 0000      		nop
 713               	/* epilogue start */
 714 034e 0F90      		pop __tmp_reg__
 715 0350 DF91      		pop r29
 716 0352 CF91      		pop r28
 717 0354 0895      		ret
 718               		.cfi_endproc
 719               	.LFE80:
 721               	.global	PHY_SetPanId
 723               	PHY_SetPanId:
 724               	.LFB81:
 175:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 176:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 177:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 178:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPanId(uint16_t panId)
 179:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 725               		.loc 3 179 0
 726               		.cfi_startproc
 727 0356 CF93      		push r28
 728               	.LCFI30:
 729               		.cfi_def_cfa_offset 3
 730               		.cfi_offset 28, -2
 731 0358 DF93      		push r29
 732               	.LCFI31:
 733               		.cfi_def_cfa_offset 4
 734               		.cfi_offset 29, -3
 735 035a 00D0      		rcall .
 736 035c 00D0      		rcall .
 737               	.LCFI32:
 738               		.cfi_def_cfa_offset 8
 739 035e CDB7      		in r28,__SP_L__
 740 0360 DEB7      		in r29,__SP_H__
 741               	.LCFI33:
 742               		.cfi_def_cfa_register 28
 743               	/* prologue: function */
 744               	/* frame size = 4 */
 745               	/* stack size = 6 */
 746               	.L__stack_usage = 6
 747 0362 9C83      		std Y+4,r25
 748 0364 8B83      		std Y+3,r24
 180:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *d = (uint8_t *)&panId;
 749               		.loc 3 180 0
 750 0366 CE01      		movw r24,r28
 751 0368 0396      		adiw r24,3
 752 036a 9A83      		std Y+2,r25
 753 036c 8983      		std Y+1,r24
 181:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 182:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PAN_ID_0_REG = d[0];
 754               		.loc 3 182 0
 755 036e 82E6      		ldi r24,lo8(98)
 756 0370 91E0      		ldi r25,lo8(1)
 757 0372 2981      		ldd r18,Y+1
 758 0374 3A81      		ldd r19,Y+2
 759 0376 F901      		movw r30,r18
 760 0378 2081      		ld r18,Z
 761 037a FC01      		movw r30,r24
 762 037c 2083      		st Z,r18
 183:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PAN_ID_1_REG = d[1];
 763               		.loc 3 183 0
 764 037e 83E6      		ldi r24,lo8(99)
 765 0380 91E0      		ldi r25,lo8(1)
 766 0382 2981      		ldd r18,Y+1
 767 0384 3A81      		ldd r19,Y+2
 768 0386 F901      		movw r30,r18
 769 0388 2181      		ldd r18,Z+1
 770 038a FC01      		movw r30,r24
 771 038c 2083      		st Z,r18
 184:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 772               		.loc 3 184 0
 773 038e 0000      		nop
 774               	/* epilogue start */
 775 0390 0F90      		pop __tmp_reg__
 776 0392 0F90      		pop __tmp_reg__
 777 0394 0F90      		pop __tmp_reg__
 778 0396 0F90      		pop __tmp_reg__
 779 0398 DF91      		pop r29
 780 039a CF91      		pop r28
 781 039c 0895      		ret
 782               		.cfi_endproc
 783               	.LFE81:
 785               	.global	PHY_SetShortAddr
 787               	PHY_SetShortAddr:
 788               	.LFB82:
 185:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 186:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 187:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 188:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetShortAddr(uint16_t addr)
 189:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 789               		.loc 3 189 0
 790               		.cfi_startproc
 791 039e CF93      		push r28
 792               	.LCFI34:
 793               		.cfi_def_cfa_offset 3
 794               		.cfi_offset 28, -2
 795 03a0 DF93      		push r29
 796               	.LCFI35:
 797               		.cfi_def_cfa_offset 4
 798               		.cfi_offset 29, -3
 799 03a2 00D0      		rcall .
 800 03a4 00D0      		rcall .
 801               	.LCFI36:
 802               		.cfi_def_cfa_offset 8
 803 03a6 CDB7      		in r28,__SP_L__
 804 03a8 DEB7      		in r29,__SP_H__
 805               	.LCFI37:
 806               		.cfi_def_cfa_register 28
 807               	/* prologue: function */
 808               	/* frame size = 4 */
 809               	/* stack size = 6 */
 810               	.L__stack_usage = 6
 811 03aa 9C83      		std Y+4,r25
 812 03ac 8B83      		std Y+3,r24
 190:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *d = (uint8_t *)&addr;
 813               		.loc 3 190 0
 814 03ae CE01      		movw r24,r28
 815 03b0 0396      		adiw r24,3
 816 03b2 9A83      		std Y+2,r25
 817 03b4 8983      		std Y+1,r24
 191:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 192:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	SHORT_ADDR_0_REG = d[0];
 818               		.loc 3 192 0
 819 03b6 80E6      		ldi r24,lo8(96)
 820 03b8 91E0      		ldi r25,lo8(1)
 821 03ba 2981      		ldd r18,Y+1
 822 03bc 3A81      		ldd r19,Y+2
 823 03be F901      		movw r30,r18
 824 03c0 2081      		ld r18,Z
 825 03c2 FC01      		movw r30,r24
 826 03c4 2083      		st Z,r18
 193:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	SHORT_ADDR_1_REG = d[1];
 827               		.loc 3 193 0
 828 03c6 81E6      		ldi r24,lo8(97)
 829 03c8 91E0      		ldi r25,lo8(1)
 830 03ca 2981      		ldd r18,Y+1
 831 03cc 3A81      		ldd r19,Y+2
 832 03ce F901      		movw r30,r18
 833 03d0 2181      		ldd r18,Z+1
 834 03d2 FC01      		movw r30,r24
 835 03d4 2083      		st Z,r18
 194:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 195:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifndef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
 196:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	CSMA_SEED_0_REG = d[0] + d[1];
 197:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
 198:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 836               		.loc 3 198 0
 837 03d6 0000      		nop
 838               	/* epilogue start */
 839 03d8 0F90      		pop __tmp_reg__
 840 03da 0F90      		pop __tmp_reg__
 841 03dc 0F90      		pop __tmp_reg__
 842 03de 0F90      		pop __tmp_reg__
 843 03e0 DF91      		pop r29
 844 03e2 CF91      		pop r28
 845 03e4 0895      		ret
 846               		.cfi_endproc
 847               	.LFE82:
 849               	.global	PHY_SetTxPower
 851               	PHY_SetTxPower:
 852               	.LFB83:
 199:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 200:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 201:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 202:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetTxPower(uint8_t txPower)
 203:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 853               		.loc 3 203 0
 854               		.cfi_startproc
 855 03e6 CF93      		push r28
 856               	.LCFI38:
 857               		.cfi_def_cfa_offset 3
 858               		.cfi_offset 28, -2
 859 03e8 DF93      		push r29
 860               	.LCFI39:
 861               		.cfi_def_cfa_offset 4
 862               		.cfi_offset 29, -3
 863 03ea 1F92      		push __zero_reg__
 864               	.LCFI40:
 865               		.cfi_def_cfa_offset 5
 866 03ec CDB7      		in r28,__SP_L__
 867 03ee DEB7      		in r29,__SP_H__
 868               	.LCFI41:
 869               		.cfi_def_cfa_register 28
 870               	/* prologue: function */
 871               	/* frame size = 1 */
 872               	/* stack size = 3 */
 873               	.L__stack_usage = 3
 874 03f0 8983      		std Y+1,r24
 204:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_TX_PWR_REG_s.txPwr = txPower;
 875               		.loc 3 204 0
 876 03f2 85E4      		ldi r24,lo8(69)
 877 03f4 91E0      		ldi r25,lo8(1)
 878 03f6 2981      		ldd r18,Y+1
 879 03f8 2F70      		andi r18,lo8(15)
 880 03fa 2F70      		andi r18,lo8(15)
 881 03fc FC01      		movw r30,r24
 882 03fe 3081      		ld r19,Z
 883 0400 307F      		andi r19,lo8(-16)
 884 0402 232B      		or r18,r19
 885 0404 FC01      		movw r30,r24
 886 0406 2083      		st Z,r18
 205:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 887               		.loc 3 205 0
 888 0408 0000      		nop
 889               	/* epilogue start */
 890 040a 0F90      		pop __tmp_reg__
 891 040c DF91      		pop r29
 892 040e CF91      		pop r28
 893 0410 0895      		ret
 894               		.cfi_endproc
 895               	.LFE83:
 897               	.global	PHY_Sleep
 899               	PHY_Sleep:
 900               	.LFB84:
 206:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 207:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 208:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 209:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Sleep(void)
 210:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 901               		.loc 3 210 0
 902               		.cfi_startproc
 903 0412 CF93      		push r28
 904               	.LCFI42:
 905               		.cfi_def_cfa_offset 3
 906               		.cfi_offset 28, -2
 907 0414 DF93      		push r29
 908               	.LCFI43:
 909               		.cfi_def_cfa_offset 4
 910               		.cfi_offset 29, -3
 911 0416 CDB7      		in r28,__SP_L__
 912 0418 DEB7      		in r29,__SP_H__
 913               	.LCFI44:
 914               		.cfi_def_cfa_register 28
 915               	/* prologue: function */
 916               	/* frame size = 0 */
 917               	/* stack size = 2 */
 918               	.L__stack_usage = 2
 211:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(phyState != PHY_STATE_SLEEP)
 919               		.loc 3 211 0
 920 041a 8091 0000 		lds r24,phyState
 921 041e 8230      		cpi r24,lo8(2)
 922 0420 01F0      		breq .L35
 212:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 213:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyTrxSetState(TRX_CMD_TRX_OFF);
 923               		.loc 3 213 0
 924 0422 88E0      		ldi r24,lo8(8)
 925 0424 0E94 0000 		call phyTrxSetState
 214:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRXPR_REG_s.slptr = 1;
 926               		.loc 3 214 0
 927 0428 89E3      		ldi r24,lo8(57)
 928 042a 91E0      		ldi r25,lo8(1)
 929 042c FC01      		movw r30,r24
 930 042e 2081      		ld r18,Z
 931 0430 2260      		ori r18,lo8(2)
 932 0432 FC01      		movw r30,r24
 933 0434 2083      		st Z,r18
 215:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyState = PHY_STATE_SLEEP;		
 934               		.loc 3 215 0
 935 0436 82E0      		ldi r24,lo8(2)
 936 0438 8093 0000 		sts phyState,r24
 937               	.L35:
 216:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 217:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	
 218:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
 219:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 0;
 938               		.loc 3 219 0
 939 043c 8DE4      		ldi r24,lo8(77)
 940 043e 91E0      		ldi r25,lo8(1)
 941 0440 FC01      		movw r30,r24
 942 0442 2081      		ld r18,Z
 943 0444 2B7F      		andi r18,lo8(-5)
 944 0446 FC01      		movw r30,r24
 945 0448 2083      		st Z,r18
 220:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 0;
 946               		.loc 3 220 0
 947 044a 8DE4      		ldi r24,lo8(77)
 948 044c 91E0      		ldi r25,lo8(1)
 949 044e FC01      		movw r30,r24
 950 0450 2081      		ld r18,Z
 951 0452 277F      		andi r18,lo8(-9)
 952 0454 FC01      		movw r30,r24
 953 0456 2083      		st Z,r18
 221:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #else
 222:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DEFAULT != 0)
 223:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 0;
 224:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antCtrl = 0;
 225:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DEFAULT
 226:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // ANTENNA_DIVERSITY
 227:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 228:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 0;
 954               		.loc 3 228 0
 955 0458 84E4      		ldi r24,lo8(68)
 956 045a 91E0      		ldi r25,lo8(1)
 957 045c FC01      		movw r30,r24
 958 045e 2081      		ld r18,Z
 959 0460 2F77      		andi r18,lo8(127)
 960 0462 FC01      		movw r30,r24
 961 0464 2083      		st Z,r18
 229:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 230:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 962               		.loc 3 230 0
 963 0466 0000      		nop
 964               	/* epilogue start */
 965 0468 DF91      		pop r29
 966 046a CF91      		pop r28
 967 046c 0895      		ret
 968               		.cfi_endproc
 969               	.LFE84:
 971               	.global	PHY_Wakeup
 973               	PHY_Wakeup:
 974               	.LFB85:
 231:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 232:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 233:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 234:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Wakeup(void)
 235:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 975               		.loc 3 235 0
 976               		.cfi_startproc
 977 046e CF93      		push r28
 978               	.LCFI45:
 979               		.cfi_def_cfa_offset 3
 980               		.cfi_offset 28, -2
 981 0470 DF93      		push r29
 982               	.LCFI46:
 983               		.cfi_def_cfa_offset 4
 984               		.cfi_offset 29, -3
 985 0472 CDB7      		in r28,__SP_L__
 986 0474 DEB7      		in r29,__SP_H__
 987               	.LCFI47:
 988               		.cfi_def_cfa_register 28
 989               	/* prologue: function */
 990               	/* frame size = 0 */
 991               	/* stack size = 2 */
 992               	.L__stack_usage = 2
 236:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRXPR_REG_s.slptr = 0;
 993               		.loc 3 236 0
 994 0476 89E3      		ldi r24,lo8(57)
 995 0478 91E0      		ldi r25,lo8(1)
 996 047a FC01      		movw r30,r24
 997 047c 2081      		ld r18,Z
 998 047e 2D7F      		andi r18,lo8(-3)
 999 0480 FC01      		movw r30,r24
 1000 0482 2083      		st Z,r18
 237:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1001               		.loc 3 237 0
 1002 0484 0E94 0000 		call phySetRxState
 238:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_IDLE;
 1003               		.loc 3 238 0
 1004 0488 81E0      		ldi r24,lo8(1)
 1005 048a 8093 0000 		sts phyState,r24
 239:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1006               		.loc 3 239 0
 1007 048e 0000      		nop
 1008               	/* epilogue start */
 1009 0490 DF91      		pop r29
 1010 0492 CF91      		pop r28
 1011 0494 0895      		ret
 1012               		.cfi_endproc
 1013               	.LFE85:
 1015               	.global	PHY_DataReq
 1017               	PHY_DataReq:
 1018               	.LFB86:
 240:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 241:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 242:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 243:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*
 244:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_DataReq(uint8_t *data)
 245:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 246:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TX_ARET_ON);
 247:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 248:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_FRAME_BUFFER(0) = data[0] + PHY_CRC_SIZE;
 249:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	for (uint8_t i = 0; i < data[0]; i++) {
 250:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_FRAME_BUFFER(i + 1) = data[i + 1];
 251:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 252:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 253:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyState = PHY_STATE_TX_WAIT_END;
 254:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_STATE_REG = TRX_CMD_TX_START;
 255:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 256:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** */
 257:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_DataReq(uint8_t *data, uint8_t size)
 258:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1019               		.loc 3 258 0
 1020               		.cfi_startproc
 1021 0496 CF93      		push r28
 1022               	.LCFI48:
 1023               		.cfi_def_cfa_offset 3
 1024               		.cfi_offset 28, -2
 1025 0498 DF93      		push r29
 1026               	.LCFI49:
 1027               		.cfi_def_cfa_offset 4
 1028               		.cfi_offset 29, -3
 1029 049a 00D0      		rcall .
 1030 049c 00D0      		rcall .
 1031               	.LCFI50:
 1032               		.cfi_def_cfa_offset 8
 1033 049e CDB7      		in r28,__SP_L__
 1034 04a0 DEB7      		in r29,__SP_H__
 1035               	.LCFI51:
 1036               		.cfi_def_cfa_register 28
 1037               	/* prologue: function */
 1038               	/* frame size = 4 */
 1039               	/* stack size = 6 */
 1040               	.L__stack_usage = 6
 1041 04a2 9B83      		std Y+3,r25
 1042 04a4 8A83      		std Y+2,r24
 1043 04a6 6C83      		std Y+4,r22
 259:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyTrxSetState(TRX_CMD_TX_ARET_ON);
 1044               		.loc 3 259 0
 1045 04a8 89E1      		ldi r24,lo8(25)
 1046 04aa 0E94 0000 		call phyTrxSetState
 260:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 261:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1047               		.loc 3 261 0
 1048 04ae 8FE4      		ldi r24,lo8(79)
 1049 04b0 91E0      		ldi r25,lo8(1)
 1050 04b2 2FEF      		ldi r18,lo8(-1)
 1051 04b4 FC01      		movw r30,r24
 1052 04b6 2083      		st Z,r18
 262:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 263:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_FRAME_BUFFER(0) = size + PHY_CRC_SIZE;
 1053               		.loc 3 263 0
 1054 04b8 80E8      		ldi r24,lo8(-128)
 1055 04ba 91E0      		ldi r25,lo8(1)
 1056 04bc 2C81      		ldd r18,Y+4
 1057 04be 2E5F      		subi r18,lo8(-(2))
 1058 04c0 FC01      		movw r30,r24
 1059 04c2 2083      		st Z,r18
 1060               	.LBB2:
 264:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1061               		.loc 3 264 0
 1062 04c4 1982      		std Y+1,__zero_reg__
 1063 04c6 00C0      		rjmp .L38
 1064               	.L39:
 265:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     TRX_FRAME_BUFFER(i+1) = data[i];
 1065               		.loc 3 265 0 discriminator 3
 1066 04c8 8981      		ldd r24,Y+1
 1067 04ca 882F      		mov r24,r24
 1068 04cc 90E0      		ldi r25,0
 1069 04ce 8F57      		subi r24,127
 1070 04d0 9E4F      		sbci r25,-2
 1071 04d2 AC01      		movw r20,r24
 1072 04d4 8981      		ldd r24,Y+1
 1073 04d6 882F      		mov r24,r24
 1074 04d8 90E0      		ldi r25,0
 1075 04da 2A81      		ldd r18,Y+2
 1076 04dc 3B81      		ldd r19,Y+3
 1077 04de 820F      		add r24,r18
 1078 04e0 931F      		adc r25,r19
 1079 04e2 FC01      		movw r30,r24
 1080 04e4 8081      		ld r24,Z
 1081 04e6 FA01      		movw r30,r20
 1082 04e8 8083      		st Z,r24
 264:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1083               		.loc 3 264 0 discriminator 3
 1084 04ea 8981      		ldd r24,Y+1
 1085 04ec 8F5F      		subi r24,lo8(-(1))
 1086 04ee 8983      		std Y+1,r24
 1087               	.L38:
 264:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1088               		.loc 3 264 0 is_stmt 0 discriminator 1
 1089 04f0 9981      		ldd r25,Y+1
 1090 04f2 8C81      		ldd r24,Y+4
 1091 04f4 9817      		cp r25,r24
 1092 04f6 00F0      		brlo .L39
 1093               	.LBE2:
 266:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 267:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyState = PHY_STATE_TX_WAIT_END;
 1094               		.loc 3 267 0 is_stmt 1
 1095 04f8 83E0      		ldi r24,lo8(3)
 1096 04fa 8093 0000 		sts phyState,r24
 268:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_STATE_REG = TRX_CMD_TX_START;
 1097               		.loc 3 268 0
 1098 04fe 82E4      		ldi r24,lo8(66)
 1099 0500 91E0      		ldi r25,lo8(1)
 1100 0502 22E0      		ldi r18,lo8(2)
 1101 0504 FC01      		movw r30,r24
 1102 0506 2083      		st Z,r18
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1103               		.loc 3 269 0
 1104 0508 0000      		nop
 1105               	/* epilogue start */
 1106 050a 0F90      		pop __tmp_reg__
 1107 050c 0F90      		pop __tmp_reg__
 1108 050e 0F90      		pop __tmp_reg__
 1109 0510 0F90      		pop __tmp_reg__
 1110 0512 DF91      		pop r29
 1111 0514 CF91      		pop r28
 1112 0516 0895      		ret
 1113               		.cfi_endproc
 1114               	.LFE86:
 1116               	.global	PHY_RandomReq
 1118               	PHY_RandomReq:
 1119               	.LFB87:
 270:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 271:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 272:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 273:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 274:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** uint16_t PHY_RandomReq(void)
 275:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1120               		.loc 3 275 0
 1121               		.cfi_startproc
 1122 0518 CF93      		push r28
 1123               	.LCFI52:
 1124               		.cfi_def_cfa_offset 3
 1125               		.cfi_offset 28, -2
 1126 051a DF93      		push r29
 1127               	.LCFI53:
 1128               		.cfi_def_cfa_offset 4
 1129               		.cfi_offset 29, -3
 1130 051c 00D0      		rcall .
 1131 051e 1F92      		push __zero_reg__
 1132               	.LCFI54:
 1133               		.cfi_def_cfa_offset 7
 1134 0520 CDB7      		in r28,__SP_L__
 1135 0522 DEB7      		in r29,__SP_H__
 1136               	.LCFI55:
 1137               		.cfi_def_cfa_register 28
 1138               	/* prologue: function */
 1139               	/* frame size = 3 */
 1140               	/* stack size = 5 */
 1141               	.L__stack_usage = 5
 276:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint16_t rnd = 0;
 1142               		.loc 3 276 0
 1143 0524 1A82      		std Y+2,__zero_reg__
 1144 0526 1982      		std Y+1,__zero_reg__
 277:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 278:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_RX_ON);
 1145               		.loc 3 278 0
 1146 0528 86E0      		ldi r24,lo8(6)
 1147 052a 0E94 0000 		call phyTrxSetState
 1148               	.LBB3:
 279:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 280:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	for (uint8_t i = 0; i < 16; i += 2) {
 1149               		.loc 3 280 0
 1150 052e 1B82      		std Y+3,__zero_reg__
 1151 0530 00C0      		rjmp .L41
 1152               	.L42:
 281:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1153               		.loc 3 281 0 discriminator 3
 1154 0532 62E0      		ldi r22,lo8(2)
 1155 0534 70E0      		ldi r23,0
 1156 0536 80E0      		ldi r24,0
 1157 0538 90E0      		ldi r25,0
 1158 053a 0E94 0000 		call __portable_avr_delay_cycles
 282:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		rnd |= PHY_RSSI_REG_s.rndValue << i;
 1159               		.loc 3 282 0 discriminator 3
 1160 053e 86E4      		ldi r24,lo8(70)
 1161 0540 91E0      		ldi r25,lo8(1)
 1162 0542 FC01      		movw r30,r24
 1163 0544 8081      		ld r24,Z
 1164 0546 8295      		swap r24
 1165 0548 8695      		lsr r24
 1166 054a 8770      		andi r24,lo8(7)
 1167 054c 8370      		andi r24,lo8(3)
 1168 054e 882F      		mov r24,r24
 1169 0550 90E0      		ldi r25,0
 1170 0552 2B81      		ldd r18,Y+3
 1171 0554 222F      		mov r18,r18
 1172 0556 30E0      		ldi r19,0
 1173 0558 00C0      		rjmp 2f
 1174               		1:
 1175 055a 880F      		lsl r24
 1176 055c 991F      		rol r25
 1177               		2:
 1178 055e 2A95      		dec r18
 1179 0560 02F4      		brpl 1b
 1180 0562 9C01      		movw r18,r24
 1181 0564 8981      		ldd r24,Y+1
 1182 0566 9A81      		ldd r25,Y+2
 1183 0568 822B      		or r24,r18
 1184 056a 932B      		or r25,r19
 1185 056c 9A83      		std Y+2,r25
 1186 056e 8983      		std Y+1,r24
 280:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1187               		.loc 3 280 0 discriminator 3
 1188 0570 8B81      		ldd r24,Y+3
 1189 0572 8E5F      		subi r24,lo8(-(2))
 1190 0574 8B83      		std Y+3,r24
 1191               	.L41:
 280:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1192               		.loc 3 280 0 is_stmt 0 discriminator 1
 1193 0576 8B81      		ldd r24,Y+3
 1194 0578 8031      		cpi r24,lo8(16)
 1195 057a 00F0      		brlo .L42
 1196               	.LBE3:
 283:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 284:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 285:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1197               		.loc 3 285 0 is_stmt 1
 1198 057c 0E94 0000 		call phySetRxState
 286:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 287:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	return rnd;
 1199               		.loc 3 287 0
 1200 0580 8981      		ldd r24,Y+1
 1201 0582 9A81      		ldd r25,Y+2
 1202               	/* epilogue start */
 288:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1203               		.loc 3 288 0
 1204 0584 0F90      		pop __tmp_reg__
 1205 0586 0F90      		pop __tmp_reg__
 1206 0588 0F90      		pop __tmp_reg__
 1207 058a DF91      		pop r29
 1208 058c CF91      		pop r28
 1209 058e 0895      		ret
 1210               		.cfi_endproc
 1211               	.LFE87:
 1213               	.global	PHY_EncryptReq
 1215               	PHY_EncryptReq:
 1216               	.LFB88:
 289:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 290:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 291:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 292:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_EncryptReq(uint8_t *text, uint8_t *key)
 293:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1217               		.loc 3 293 0
 1218               		.cfi_startproc
 1219 0590 CF93      		push r28
 1220               	.LCFI56:
 1221               		.cfi_def_cfa_offset 3
 1222               		.cfi_offset 28, -2
 1223 0592 DF93      		push r29
 1224               	.LCFI57:
 1225               		.cfi_def_cfa_offset 4
 1226               		.cfi_offset 29, -3
 1227 0594 00D0      		rcall .
 1228 0596 00D0      		rcall .
 1229               	.LCFI58:
 1230               		.cfi_def_cfa_offset 8
 1231 0598 CDB7      		in r28,__SP_L__
 1232 059a DEB7      		in r29,__SP_H__
 1233               	.LCFI59:
 1234               		.cfi_def_cfa_register 28
 1235               	/* prologue: function */
 1236               	/* frame size = 4 */
 1237               	/* stack size = 6 */
 1238               	.L__stack_usage = 6
 1239 059c 9A83      		std Y+2,r25
 1240 059e 8983      		std Y+1,r24
 1241 05a0 7C83      		std Y+4,r23
 1242 05a2 6B83      		std Y+3,r22
 294:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_setup(key, AES_MODE_ECB, AES_DIR_ENCRYPT);
 1243               		.loc 3 294 0
 1244 05a4 8B81      		ldd r24,Y+3
 1245 05a6 9C81      		ldd r25,Y+4
 1246 05a8 40E0      		ldi r20,0
 1247 05aa 60E0      		ldi r22,0
 1248 05ac 0E94 0000 		call sal_aes_setup
 295:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_exec(text);
 1249               		.loc 3 295 0
 1250 05b0 8981      		ldd r24,Y+1
 1251 05b2 9A81      		ldd r25,Y+2
 1252 05b4 0E94 0000 		call sal_aes_exec
 296:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	sal_aes_read(text);
 1253               		.loc 3 296 0
 1254 05b8 8981      		ldd r24,Y+1
 1255 05ba 9A81      		ldd r25,Y+2
 1256 05bc 0E94 0000 		call sal_aes_read
 297:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1257               		.loc 3 297 0
 1258 05c0 0000      		nop
 1259               	/* epilogue start */
 1260 05c2 0F90      		pop __tmp_reg__
 1261 05c4 0F90      		pop __tmp_reg__
 1262 05c6 0F90      		pop __tmp_reg__
 1263 05c8 0F90      		pop __tmp_reg__
 1264 05ca DF91      		pop r29
 1265 05cc CF91      		pop r28
 1266 05ce 0895      		ret
 1267               		.cfi_endproc
 1268               	.LFE88:
 1270               	.global	PHY_EdReq
 1272               	PHY_EdReq:
 1273               	.LFB89:
 298:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 299:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 300:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 301:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** int8_t PHY_EdReq(void)
 302:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1274               		.loc 3 302 0
 1275               		.cfi_startproc
 1276 05d0 CF93      		push r28
 1277               	.LCFI60:
 1278               		.cfi_def_cfa_offset 3
 1279               		.cfi_offset 28, -2
 1280 05d2 DF93      		push r29
 1281               	.LCFI61:
 1282               		.cfi_def_cfa_offset 4
 1283               		.cfi_offset 29, -3
 1284 05d4 1F92      		push __zero_reg__
 1285               	.LCFI62:
 1286               		.cfi_def_cfa_offset 5
 1287 05d6 CDB7      		in r28,__SP_L__
 1288 05d8 DEB7      		in r29,__SP_H__
 1289               	.LCFI63:
 1290               		.cfi_def_cfa_register 28
 1291               	/* prologue: function */
 1292               	/* frame size = 1 */
 1293               	/* stack size = 3 */
 1294               	.L__stack_usage = 3
 303:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	int8_t ed;
 304:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 305:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_RX_ON);
 1295               		.loc 3 305 0
 1296 05da 86E0      		ldi r24,lo8(6)
 1297 05dc 0E94 0000 		call phyTrxSetState
 306:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 307:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IRQ_STATUS_REG_s.ccaEdDone = 1;
 1298               		.loc 3 307 0
 1299 05e0 8FE4      		ldi r24,lo8(79)
 1300 05e2 91E0      		ldi r25,lo8(1)
 1301 05e4 FC01      		movw r30,r24
 1302 05e6 2081      		ld r18,Z
 1303 05e8 2061      		ori r18,lo8(16)
 1304 05ea FC01      		movw r30,r24
 1305 05ec 2083      		st Z,r18
 308:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	PHY_ED_LEVEL_REG = 0;
 1306               		.loc 3 308 0
 1307 05ee 87E4      		ldi r24,lo8(71)
 1308 05f0 91E0      		ldi r25,lo8(1)
 1309 05f2 FC01      		movw r30,r24
 1310 05f4 1082      		st Z,__zero_reg__
 309:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	while (0 == IRQ_STATUS_REG_s.ccaEdDone) {
 1311               		.loc 3 309 0
 1312 05f6 0000      		nop
 1313               	.L46:
 1314               		.loc 3 309 0 is_stmt 0 discriminator 1
 1315 05f8 8FE4      		ldi r24,lo8(79)
 1316 05fa 91E0      		ldi r25,lo8(1)
 1317 05fc FC01      		movw r30,r24
 1318 05fe 8081      		ld r24,Z
 1319 0600 8295      		swap r24
 1320 0602 8170      		andi r24,1
 1321 0604 8823      		tst r24
 1322 0606 01F0      		breq .L46
 310:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 311:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 312:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ed = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1323               		.loc 3 312 0 is_stmt 1
 1324 0608 87E4      		ldi r24,lo8(71)
 1325 060a 91E0      		ldi r25,lo8(1)
 1326 060c FC01      		movw r30,r24
 1327 060e 8081      		ld r24,Z
 1328 0610 8A55      		subi r24,lo8(-(-90))
 1329 0612 8983      		std Y+1,r24
 313:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 314:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phySetRxState();
 1330               		.loc 3 314 0
 1331 0614 0E94 0000 		call phySetRxState
 315:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 316:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	return ed;
 1332               		.loc 3 316 0
 1333 0618 8981      		ldd r24,Y+1
 1334               	/* epilogue start */
 317:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1335               		.loc 3 317 0
 1336 061a 0F90      		pop __tmp_reg__
 1337 061c DF91      		pop r29
 1338 061e CF91      		pop r28
 1339 0620 0895      		ret
 1340               		.cfi_endproc
 1341               	.LFE89:
 1344               	phySetRxState:
 1345               	.LFB90:
 318:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 319:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 320:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 321:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phySetRxState(void)
 322:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1346               		.loc 3 322 0
 1347               		.cfi_startproc
 1348 0622 CF93      		push r28
 1349               	.LCFI64:
 1350               		.cfi_def_cfa_offset 3
 1351               		.cfi_offset 28, -2
 1352 0624 DF93      		push r29
 1353               	.LCFI65:
 1354               		.cfi_def_cfa_offset 4
 1355               		.cfi_offset 29, -3
 1356 0626 CDB7      		in r28,__SP_L__
 1357 0628 DEB7      		in r29,__SP_H__
 1358               	.LCFI66:
 1359               		.cfi_def_cfa_register 28
 1360               	/* prologue: function */
 1361               	/* frame size = 0 */
 1362               	/* stack size = 2 */
 1363               	.L__stack_usage = 2
 323:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 1364               		.loc 3 323 0
 1365 062a 88E0      		ldi r24,lo8(8)
 1366 062c 0E94 0000 		call phyTrxSetState
 324:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 325:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1367               		.loc 3 325 0
 1368 0630 8FE4      		ldi r24,lo8(79)
 1369 0632 91E0      		ldi r25,lo8(1)
 1370 0634 2FEF      		ldi r18,lo8(-1)
 1371 0636 FC01      		movw r30,r24
 1372 0638 2083      		st Z,r18
 326:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 327:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (phyRxState) {
 1373               		.loc 3 327 0
 1374 063a 8091 0000 		lds r24,phyRxState
 1375 063e 8823      		tst r24
 1376 0640 01F0      		breq .L50
 328:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		phyTrxSetState(TRX_CMD_RX_AACK_ON);
 1377               		.loc 3 328 0
 1378 0642 86E1      		ldi r24,lo8(22)
 1379 0644 0E94 0000 		call phyTrxSetState
 1380               	.L50:
 329:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 330:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1381               		.loc 3 330 0
 1382 0648 0000      		nop
 1383               	/* epilogue start */
 1384 064a DF91      		pop r29
 1385 064c CF91      		pop r28
 1386 064e 0895      		ret
 1387               		.cfi_endproc
 1388               	.LFE90:
 1390               	.global	phyTrxSetState
 1392               	phyTrxSetState:
 1393               	.LFB91:
 331:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 332:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 333:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 334:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void phyTrxSetState(uint8_t state)
 335:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1394               		.loc 3 335 0
 1395               		.cfi_startproc
 1396 0650 CF93      		push r28
 1397               	.LCFI67:
 1398               		.cfi_def_cfa_offset 3
 1399               		.cfi_offset 28, -2
 1400 0652 DF93      		push r29
 1401               	.LCFI68:
 1402               		.cfi_def_cfa_offset 4
 1403               		.cfi_offset 29, -3
 1404 0654 1F92      		push __zero_reg__
 1405               	.LCFI69:
 1406               		.cfi_def_cfa_offset 5
 1407 0656 CDB7      		in r28,__SP_L__
 1408 0658 DEB7      		in r29,__SP_H__
 1409               	.LCFI70:
 1410               		.cfi_def_cfa_register 28
 1411               	/* prologue: function */
 1412               	/* frame size = 1 */
 1413               	/* stack size = 3 */
 1414               	.L__stack_usage = 3
 1415 065a 8983      		std Y+1,r24
 336:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1) || defined(EXT_RF_FRONT_END_CTRL)
 337:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(phyState == PHY_STATE_SLEEP)
 1416               		.loc 3 337 0
 1417 065c 8091 0000 		lds r24,phyState
 1418 0660 8230      		cpi r24,lo8(2)
 1419 0662 01F4      		brne .L52
 338:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 339:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DIVERSITY == 1)
 340:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antDivEn = 1;
 1420               		.loc 3 340 0
 1421 0664 8DE4      		ldi r24,lo8(77)
 1422 0666 91E0      		ldi r25,lo8(1)
 1423 0668 FC01      		movw r30,r24
 1424 066a 2081      		ld r18,Z
 1425 066c 2860      		ori r18,lo8(8)
 1426 066e FC01      		movw r30,r24
 1427 0670 2083      		st Z,r18
 341:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
 1428               		.loc 3 341 0
 1429 0672 8DE4      		ldi r24,lo8(77)
 1430 0674 91E0      		ldi r25,lo8(1)
 1431 0676 FC01      		movw r30,r24
 1432 0678 2081      		ld r18,Z
 1433 067a 2460      		ori r18,lo8(4)
 1434 067c FC01      		movw r30,r24
 1435 067e 2083      		st Z,r18
 342:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#else
 343:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		#if (ANTENNA_DEFAULT != 0)
 344:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			ANT_DIV_REG_s.antExtSwEn = 1;
 345:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			ANT_DIV_REG_s.antCtrl = ANTENNA_DEFAULT;
 346:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		#endif // ANTENNA_DEFAULT
 347:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DIVERSITY
 348:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#ifdef EXT_RF_FRONT_END_CTRL
 349:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_1_REG_s.paExtEn = 1;
 1436               		.loc 3 349 0
 1437 0680 84E4      		ldi r24,lo8(68)
 1438 0682 91E0      		ldi r25,lo8(1)
 1439 0684 FC01      		movw r30,r24
 1440 0686 2081      		ld r18,Z
 1441 0688 2068      		ori r18,lo8(-128)
 1442 068a FC01      		movw r30,r24
 1443 068c 2083      		st Z,r18
 1444               	.L52:
 350:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // EXT_RF_FRONT_END_CTRL
 351:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 352:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // PLATFORM_WM100
 353:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 354:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	do {TRX_STATE_REG = TRX_CMD_FORCE_TRX_OFF;
 1445               		.loc 3 354 0 discriminator 1
 1446 068e 82E4      		ldi r24,lo8(66)
 1447 0690 91E0      		ldi r25,lo8(1)
 1448 0692 23E0      		ldi r18,lo8(3)
 1449 0694 FC01      		movw r30,r24
 1450 0696 2083      		st Z,r18
 355:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	} while (TRX_STATUS_TRX_OFF !=
 356:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1451               		.loc 3 356 0 discriminator 1
 1452 0698 81E4      		ldi r24,lo8(65)
 1453 069a 91E0      		ldi r25,lo8(1)
 1454 069c FC01      		movw r30,r24
 1455 069e 8081      		ld r24,Z
 1456 06a0 8F71      		andi r24,lo8(31)
 1457 06a2 8830      		cpi r24,lo8(8)
 1458 06a4 01F4      		brne .L52
 1459               	.L53:
 357:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 358:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	do {TRX_STATE_REG = state; } while (state !=
 1460               		.loc 3 358 0 discriminator 1
 1461 06a6 82E4      		ldi r24,lo8(66)
 1462 06a8 91E0      		ldi r25,lo8(1)
 1463 06aa 2981      		ldd r18,Y+1
 1464 06ac FC01      		movw r30,r24
 1465 06ae 2083      		st Z,r18
 359:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1466               		.loc 3 359 0 discriminator 1
 1467 06b0 81E4      		ldi r24,lo8(65)
 1468 06b2 91E0      		ldi r25,lo8(1)
 1469 06b4 FC01      		movw r30,r24
 1470 06b6 8081      		ld r24,Z
 1471 06b8 8F71      		andi r24,lo8(31)
 358:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1472               		.loc 3 358 0 discriminator 1
 1473 06ba 982F      		mov r25,r24
 1474               		.loc 3 359 0 discriminator 1
 1475 06bc 8981      		ldd r24,Y+1
 1476 06be 9817      		cp r25,r24
 1477 06c0 01F4      		brne .L53
 360:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1478               		.loc 3 360 0
 1479 06c2 0000      		nop
 1480               	/* epilogue start */
 1481 06c4 0F90      		pop __tmp_reg__
 1482 06c6 DF91      		pop r29
 1483 06c8 CF91      		pop r28
 1484 06ca 0895      		ret
 1485               		.cfi_endproc
 1486               	.LFE91:
 1488               	.global	PHY_SetIEEEAddr
 1490               	PHY_SetIEEEAddr:
 1491               	.LFB92:
 361:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 362:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 363:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 364:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 365:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetIEEEAddr(uint8_t *ieee_addr)
 366:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1492               		.loc 3 366 0
 1493               		.cfi_startproc
 1494 06cc CF93      		push r28
 1495               	.LCFI71:
 1496               		.cfi_def_cfa_offset 3
 1497               		.cfi_offset 28, -2
 1498 06ce DF93      		push r29
 1499               	.LCFI72:
 1500               		.cfi_def_cfa_offset 4
 1501               		.cfi_offset 29, -3
 1502 06d0 00D0      		rcall .
 1503 06d2 00D0      		rcall .
 1504               	.LCFI73:
 1505               		.cfi_def_cfa_offset 8
 1506 06d4 CDB7      		in r28,__SP_L__
 1507 06d6 DEB7      		in r29,__SP_H__
 1508               	.LCFI74:
 1509               		.cfi_def_cfa_register 28
 1510               	/* prologue: function */
 1511               	/* frame size = 4 */
 1512               	/* stack size = 6 */
 1513               	.L__stack_usage = 6
 1514 06d8 9C83      		std Y+4,r25
 1515 06da 8B83      		std Y+3,r24
 367:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *ptr_to_reg = ieee_addr;
 1516               		.loc 3 367 0
 1517 06dc 8B81      		ldd r24,Y+3
 1518 06de 9C81      		ldd r25,Y+4
 1519 06e0 9A83      		std Y+2,r25
 1520 06e2 8983      		std Y+1,r24
 368:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_0_REG = *ptr_to_reg++;
 1521               		.loc 3 368 0
 1522 06e4 24E6      		ldi r18,lo8(100)
 1523 06e6 31E0      		ldi r19,lo8(1)
 1524 06e8 8981      		ldd r24,Y+1
 1525 06ea 9A81      		ldd r25,Y+2
 1526 06ec AC01      		movw r20,r24
 1527 06ee 4F5F      		subi r20,-1
 1528 06f0 5F4F      		sbci r21,-1
 1529 06f2 5A83      		std Y+2,r21
 1530 06f4 4983      		std Y+1,r20
 1531 06f6 FC01      		movw r30,r24
 1532 06f8 8081      		ld r24,Z
 1533 06fa F901      		movw r30,r18
 1534 06fc 8083      		st Z,r24
 369:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_1_REG = *ptr_to_reg++;
 1535               		.loc 3 369 0
 1536 06fe 25E6      		ldi r18,lo8(101)
 1537 0700 31E0      		ldi r19,lo8(1)
 1538 0702 8981      		ldd r24,Y+1
 1539 0704 9A81      		ldd r25,Y+2
 1540 0706 AC01      		movw r20,r24
 1541 0708 4F5F      		subi r20,-1
 1542 070a 5F4F      		sbci r21,-1
 1543 070c 5A83      		std Y+2,r21
 1544 070e 4983      		std Y+1,r20
 1545 0710 FC01      		movw r30,r24
 1546 0712 8081      		ld r24,Z
 1547 0714 F901      		movw r30,r18
 1548 0716 8083      		st Z,r24
 370:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_2_REG = *ptr_to_reg++;
 1549               		.loc 3 370 0
 1550 0718 26E6      		ldi r18,lo8(102)
 1551 071a 31E0      		ldi r19,lo8(1)
 1552 071c 8981      		ldd r24,Y+1
 1553 071e 9A81      		ldd r25,Y+2
 1554 0720 AC01      		movw r20,r24
 1555 0722 4F5F      		subi r20,-1
 1556 0724 5F4F      		sbci r21,-1
 1557 0726 5A83      		std Y+2,r21
 1558 0728 4983      		std Y+1,r20
 1559 072a FC01      		movw r30,r24
 1560 072c 8081      		ld r24,Z
 1561 072e F901      		movw r30,r18
 1562 0730 8083      		st Z,r24
 371:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_3_REG = *ptr_to_reg++;
 1563               		.loc 3 371 0
 1564 0732 27E6      		ldi r18,lo8(103)
 1565 0734 31E0      		ldi r19,lo8(1)
 1566 0736 8981      		ldd r24,Y+1
 1567 0738 9A81      		ldd r25,Y+2
 1568 073a AC01      		movw r20,r24
 1569 073c 4F5F      		subi r20,-1
 1570 073e 5F4F      		sbci r21,-1
 1571 0740 5A83      		std Y+2,r21
 1572 0742 4983      		std Y+1,r20
 1573 0744 FC01      		movw r30,r24
 1574 0746 8081      		ld r24,Z
 1575 0748 F901      		movw r30,r18
 1576 074a 8083      		st Z,r24
 372:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_4_REG = *ptr_to_reg++;
 1577               		.loc 3 372 0
 1578 074c 28E6      		ldi r18,lo8(104)
 1579 074e 31E0      		ldi r19,lo8(1)
 1580 0750 8981      		ldd r24,Y+1
 1581 0752 9A81      		ldd r25,Y+2
 1582 0754 AC01      		movw r20,r24
 1583 0756 4F5F      		subi r20,-1
 1584 0758 5F4F      		sbci r21,-1
 1585 075a 5A83      		std Y+2,r21
 1586 075c 4983      		std Y+1,r20
 1587 075e FC01      		movw r30,r24
 1588 0760 8081      		ld r24,Z
 1589 0762 F901      		movw r30,r18
 1590 0764 8083      		st Z,r24
 373:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_5_REG = *ptr_to_reg++;
 1591               		.loc 3 373 0
 1592 0766 29E6      		ldi r18,lo8(105)
 1593 0768 31E0      		ldi r19,lo8(1)
 1594 076a 8981      		ldd r24,Y+1
 1595 076c 9A81      		ldd r25,Y+2
 1596 076e AC01      		movw r20,r24
 1597 0770 4F5F      		subi r20,-1
 1598 0772 5F4F      		sbci r21,-1
 1599 0774 5A83      		std Y+2,r21
 1600 0776 4983      		std Y+1,r20
 1601 0778 FC01      		movw r30,r24
 1602 077a 8081      		ld r24,Z
 1603 077c F901      		movw r30,r18
 1604 077e 8083      		st Z,r24
 374:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_6_REG = *ptr_to_reg++;
 1605               		.loc 3 374 0
 1606 0780 2AE6      		ldi r18,lo8(106)
 1607 0782 31E0      		ldi r19,lo8(1)
 1608 0784 8981      		ldd r24,Y+1
 1609 0786 9A81      		ldd r25,Y+2
 1610 0788 AC01      		movw r20,r24
 1611 078a 4F5F      		subi r20,-1
 1612 078c 5F4F      		sbci r21,-1
 1613 078e 5A83      		std Y+2,r21
 1614 0790 4983      		std Y+1,r20
 1615 0792 FC01      		movw r30,r24
 1616 0794 8081      		ld r24,Z
 1617 0796 F901      		movw r30,r18
 1618 0798 8083      		st Z,r24
 375:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_7_REG = *ptr_to_reg;
 1619               		.loc 3 375 0
 1620 079a 8BE6      		ldi r24,lo8(107)
 1621 079c 91E0      		ldi r25,lo8(1)
 1622 079e 2981      		ldd r18,Y+1
 1623 07a0 3A81      		ldd r19,Y+2
 1624 07a2 F901      		movw r30,r18
 1625 07a4 2081      		ld r18,Z
 1626 07a6 FC01      		movw r30,r24
 1627 07a8 2083      		st Z,r18
 376:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1628               		.loc 3 376 0
 1629 07aa 0000      		nop
 1630               	/* epilogue start */
 1631 07ac 0F90      		pop __tmp_reg__
 1632 07ae 0F90      		pop __tmp_reg__
 1633 07b0 0F90      		pop __tmp_reg__
 1634 07b2 0F90      		pop __tmp_reg__
 1635 07b4 DF91      		pop r29
 1636 07b6 CF91      		pop r28
 1637 07b8 0895      		ret
 1638               		.cfi_endproc
 1639               	.LFE92:
 1641               		.section	.rodata.str1.1,"aMS",@progbits,1
 1642               	.LC0:
 1643 0000 2A4D 6573 		.string	"*Message_send* "
 1643      7361 6765 
 1643      5F73 656E 
 1643      642A 2000 
 1644               		.text
 1645               	.global	PHY_TaskHandler
 1647               	PHY_TaskHandler:
 1648               	.LFB93:
 377:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 378:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 379:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 380:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_TaskHandler(void)
 381:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1649               		.loc 3 381 0
 1650               		.cfi_startproc
 1651 07ba CF93      		push r28
 1652               	.LCFI75:
 1653               		.cfi_def_cfa_offset 3
 1654               		.cfi_offset 28, -2
 1655 07bc DF93      		push r29
 1656               	.LCFI76:
 1657               		.cfi_def_cfa_offset 4
 1658               		.cfi_offset 29, -3
 1659 07be CDB7      		in r28,__SP_L__
 1660 07c0 DEB7      		in r29,__SP_H__
 1661               	.LCFI77:
 1662               		.cfi_def_cfa_register 28
 1663 07c2 2897      		sbiw r28,8
 1664               	.LCFI78:
 1665               		.cfi_def_cfa_offset 12
 1666 07c4 0FB6      		in __tmp_reg__,__SREG__
 1667 07c6 F894      		cli
 1668 07c8 DEBF      		out __SP_H__,r29
 1669 07ca 0FBE      		out __SREG__,__tmp_reg__
 1670 07cc CDBF      		out __SP_L__,r28
 1671               	/* prologue: function */
 1672               	/* frame size = 8 */
 1673               	/* stack size = 10 */
 1674               	.L__stack_usage = 10
 382:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (PHY_STATE_SLEEP == phyState) {
 1675               		.loc 3 382 0
 1676 07ce 8091 0000 		lds r24,phyState
 1677 07d2 8230      		cpi r24,lo8(2)
 1678 07d4 01F4      		brne .+2
 1679 07d6 00C0      		rjmp .L67
 383:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		return;
 384:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 385:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 386:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if (IRQ_STATUS_REG_s.rxEnd) {
 1680               		.loc 3 386 0
 1681 07d8 8FE4      		ldi r24,lo8(79)
 1682 07da 91E0      		ldi r25,lo8(1)
 1683 07dc FC01      		movw r30,r24
 1684 07de 8081      		ld r24,Z
 1685 07e0 83FB      		bst r24,3
 1686 07e2 8827      		clr r24
 1687 07e4 80F9      		bld r24,0
 1688 07e6 8823      		tst r24
 1689 07e8 01F4      		brne .+2
 1690 07ea 00C0      		rjmp .L58
 1691               	.LBB4:
 387:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_DataInd_t ind;
 388:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		uint8_t size = TST_RX_LENGTH_REG;
 1692               		.loc 3 388 0
 1693 07ec 8BE7      		ldi r24,lo8(123)
 1694 07ee 91E0      		ldi r25,lo8(1)
 1695 07f0 FC01      		movw r30,r24
 1696 07f2 8081      		ld r24,Z
 1697 07f4 8B83      		std Y+3,r24
 1698               	.LBB5:
 389:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 390:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		for (uint8_t i = 0; i < size + 1 /*lqi*/; i++) {
 1699               		.loc 3 390 0
 1700 07f6 1982      		std Y+1,__zero_reg__
 1701 07f8 00C0      		rjmp .L59
 1702               	.L60:
 391:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1703               		.loc 3 391 0 discriminator 3
 1704 07fa 8981      		ldd r24,Y+1
 1705 07fc 882F      		mov r24,r24
 1706 07fe 90E0      		ldi r25,0
 1707 0800 2981      		ldd r18,Y+1
 1708 0802 222F      		mov r18,r18
 1709 0804 30E0      		ldi r19,0
 1710 0806 2058      		subi r18,-128
 1711 0808 3E4F      		sbci r19,-2
 1712 080a F901      		movw r30,r18
 1713 080c 2081      		ld r18,Z
 1714 080e 8050      		subi r24,lo8(-(phyRxBuffer))
 1715 0810 9040      		sbci r25,hi8(-(phyRxBuffer))
 1716 0812 FC01      		movw r30,r24
 1717 0814 2083      		st Z,r18
 390:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1718               		.loc 3 390 0 discriminator 3
 1719 0816 8981      		ldd r24,Y+1
 1720 0818 8F5F      		subi r24,lo8(-(1))
 1721 081a 8983      		std Y+1,r24
 1722               	.L59:
 390:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1723               		.loc 3 390 0 is_stmt 0 discriminator 1
 1724 081c 8981      		ldd r24,Y+1
 1725 081e 282F      		mov r18,r24
 1726 0820 30E0      		ldi r19,0
 1727 0822 8B81      		ldd r24,Y+3
 1728 0824 882F      		mov r24,r24
 1729 0826 90E0      		ldi r25,0
 1730 0828 0196      		adiw r24,1
 1731 082a 2817      		cp r18,r24
 1732 082c 3907      		cpc r19,r25
 1733 082e 04F0      		brlt .L60
 1734               	.LBE5:
 392:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 393:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 394:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.data = phyRxBuffer;
 1735               		.loc 3 394 0 is_stmt 1
 1736 0830 80E0      		ldi r24,lo8(phyRxBuffer)
 1737 0832 90E0      		ldi r25,hi8(phyRxBuffer)
 1738 0834 9D83      		std Y+5,r25
 1739 0836 8C83      		std Y+4,r24
 395:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.size = size - PHY_CRC_SIZE;
 1740               		.loc 3 395 0
 1741 0838 8B81      		ldd r24,Y+3
 1742 083a 8250      		subi r24,lo8(-(-2))
 1743 083c 8E83      		std Y+6,r24
 396:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.lqi  = phyRxBuffer[size];
 1744               		.loc 3 396 0
 1745 083e 8B81      		ldd r24,Y+3
 1746 0840 882F      		mov r24,r24
 1747 0842 90E0      		ldi r25,0
 1748 0844 8050      		subi r24,lo8(-(phyRxBuffer))
 1749 0846 9040      		sbci r25,hi8(-(phyRxBuffer))
 1750 0848 FC01      		movw r30,r24
 1751 084a 8081      		ld r24,Z
 1752 084c 8F83      		std Y+7,r24
 397:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ind.rssi = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1753               		.loc 3 397 0
 1754 084e 87E4      		ldi r24,lo8(71)
 1755 0850 91E0      		ldi r25,lo8(1)
 1756 0852 FC01      		movw r30,r24
 1757 0854 8081      		ld r24,Z
 1758 0856 8A55      		subi r24,lo8(-(-90))
 1759 0858 8887      		std Y+8,r24
 398:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_DataInd(&ind);
 1760               		.loc 3 398 0
 1761 085a CE01      		movw r24,r28
 1762 085c 0496      		adiw r24,4
 1763 085e 0E94 0000 		call PHY_DataInd
 399:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 400:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		while (TRX_STATUS_RX_AACK_ON != TRX_STATUS_REG_s.trxStatus) {
 1764               		.loc 3 400 0
 1765 0862 0000      		nop
 1766               	.L61:
 1767               		.loc 3 400 0 is_stmt 0 discriminator 1
 1768 0864 81E4      		ldi r24,lo8(65)
 1769 0866 91E0      		ldi r25,lo8(1)
 1770 0868 FC01      		movw r30,r24
 1771 086a 8081      		ld r24,Z
 1772 086c 8F71      		andi r24,lo8(31)
 1773 086e 8631      		cpi r24,lo8(22)
 1774 0870 01F4      		brne .L61
 401:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 402:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 403:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		IRQ_STATUS_REG_s.rxEnd = 1;
 1775               		.loc 3 403 0 is_stmt 1 discriminator 2
 1776 0872 8FE4      		ldi r24,lo8(79)
 1777 0874 91E0      		ldi r25,lo8(1)
 1778 0876 FC01      		movw r30,r24
 1779 0878 2081      		ld r18,Z
 1780 087a 2860      		ori r18,lo8(8)
 1781 087c FC01      		movw r30,r24
 1782 087e 2083      		st Z,r18
 404:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_2_REG_s.rxSafeMode = 0;
 1783               		.loc 3 404 0 discriminator 2
 1784 0880 8CE4      		ldi r24,lo8(76)
 1785 0882 91E0      		ldi r25,lo8(1)
 1786 0884 FC01      		movw r30,r24
 1787 0886 2081      		ld r18,Z
 1788 0888 2F77      		andi r18,lo8(127)
 1789 088a FC01      		movw r30,r24
 1790 088c 2083      		st Z,r18
 405:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_2_REG_s.rxSafeMode = 1;
 1791               		.loc 3 405 0 discriminator 2
 1792 088e 8CE4      		ldi r24,lo8(76)
 1793 0890 91E0      		ldi r25,lo8(1)
 1794 0892 FC01      		movw r30,r24
 1795 0894 2081      		ld r18,Z
 1796 0896 2068      		ori r18,lo8(-128)
 1797 0898 FC01      		movw r30,r24
 1798 089a 2083      		st Z,r18
 1799               	.LBE4:
 1800 089c 00C0      		rjmp .L55
 1801               	.L58:
 406:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	} else if (IRQ_STATUS_REG_s.txEnd) {
 1802               		.loc 3 406 0
 1803 089e 8FE4      		ldi r24,lo8(79)
 1804 08a0 91E0      		ldi r25,lo8(1)
 1805 08a2 FC01      		movw r30,r24
 1806 08a4 8081      		ld r24,Z
 1807 08a6 86FB      		bst r24,6
 1808 08a8 8827      		clr r24
 1809 08aa 80F9      		bld r24,0
 1810 08ac 8823      		tst r24
 1811 08ae 01F4      		brne .+2
 1812 08b0 00C0      		rjmp .L55
 407:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		if (TRX_STATUS_TX_ARET_ON == TRX_STATUS_REG_s.trxStatus) {
 1813               		.loc 3 407 0
 1814 08b2 81E4      		ldi r24,lo8(65)
 1815 08b4 91E0      		ldi r25,lo8(1)
 1816 08b6 FC01      		movw r30,r24
 1817 08b8 8081      		ld r24,Z
 1818 08ba 8F71      		andi r24,lo8(31)
 1819 08bc 8931      		cpi r24,lo8(25)
 1820 08be 01F4      		brne .L62
 1821               	.LBB6:
 408:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			uint8_t status = TRX_STATE_REG_s.tracStatus;
 1822               		.loc 3 408 0
 1823 08c0 82E4      		ldi r24,lo8(66)
 1824 08c2 91E0      		ldi r25,lo8(1)
 1825 08c4 FC01      		movw r30,r24
 1826 08c6 8081      		ld r24,Z
 1827 08c8 8295      		swap r24
 1828 08ca 8695      		lsr r24
 1829 08cc 8770      		andi r24,lo8(7)
 1830 08ce 8A83      		std Y+2,r24
 409:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 410:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			if (TRAC_STATUS_SUCCESS == status) {
 1831               		.loc 3 410 0
 1832 08d0 8A81      		ldd r24,Y+2
 1833 08d2 8823      		tst r24
 1834 08d4 01F4      		brne .L63
 1835               	.LBB7:
 411:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_SUCCESS;
 1836               		.loc 3 411 0
 1837 08d6 1A82      		std Y+2,__zero_reg__
 412:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				printf("*Message_send* ");
 1838               		.loc 3 412 0
 1839 08d8 80E0      		ldi r24,lo8(.LC0)
 1840 08da 90E0      		ldi r25,hi8(.LC0)
 1841 08dc 892F      		mov r24,r25
 1842 08de 8F93      		push r24
 1843 08e0 80E0      		ldi r24,lo8(.LC0)
 1844 08e2 90E0      		ldi r25,hi8(.LC0)
 1845 08e4 8F93      		push r24
 1846 08e6 0E94 0000 		call printf
 1847 08ea 0F90      		pop __tmp_reg__
 1848 08ec 0F90      		pop __tmp_reg__
 1849               	.LBE7:
 1850 08ee 00C0      		rjmp .L64
 1851               	.L63:
 413:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else if (TRAC_STATUS_CHANNEL_ACCESS_FAILURE ==
 1852               		.loc 3 413 0
 1853 08f0 8A81      		ldd r24,Y+2
 1854 08f2 8330      		cpi r24,lo8(3)
 1855 08f4 01F4      		brne .L65
 414:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 					status) {
 415:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_CHANNEL_ACCESS_FAILURE;
 1856               		.loc 3 415 0
 1857 08f6 81E0      		ldi r24,lo8(1)
 1858 08f8 8A83      		std Y+2,r24
 1859 08fa 00C0      		rjmp .L64
 1860               	.L65:
 416:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else if (TRAC_STATUS_NO_ACK == status) {
 1861               		.loc 3 416 0
 1862 08fc 8A81      		ldd r24,Y+2
 1863 08fe 8530      		cpi r24,lo8(5)
 1864 0900 01F4      		brne .L66
 417:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_NO_ACK;
 1865               		.loc 3 417 0
 1866 0902 82E0      		ldi r24,lo8(2)
 1867 0904 8A83      		std Y+2,r24
 1868 0906 00C0      		rjmp .L64
 1869               	.L66:
 418:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			} else {
 419:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 				status = PHY_STATUS_ERROR;
 1870               		.loc 3 419 0
 1871 0908 83E0      		ldi r24,lo8(3)
 1872 090a 8A83      		std Y+2,r24
 1873               	.L64:
 420:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			}
 421:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 422:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phySetRxState();
 1874               		.loc 3 422 0
 1875 090c 0E94 0000 		call phySetRxState
 423:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			phyState = PHY_STATE_IDLE;
 1876               		.loc 3 423 0
 1877 0910 81E0      		ldi r24,lo8(1)
 1878 0912 8093 0000 		sts phyState,r24
 424:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 425:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			PHY_DataConf(status);
 1879               		.loc 3 425 0
 1880 0916 8A81      		ldd r24,Y+2
 1881 0918 0E94 0000 		call PHY_DataConf
 1882               	.L62:
 1883               	.LBE6:
 426:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 427:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 428:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		IRQ_STATUS_REG_s.txEnd = 1;
 1884               		.loc 3 428 0
 1885 091c 8FE4      		ldi r24,lo8(79)
 1886 091e 91E0      		ldi r25,lo8(1)
 1887 0920 FC01      		movw r30,r24
 1888 0922 2081      		ld r18,Z
 1889 0924 2064      		ori r18,lo8(64)
 1890 0926 FC01      		movw r30,r24
 1891 0928 2083      		st Z,r18
 1892 092a 00C0      		rjmp .L55
 1893               	.L67:
 383:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 1894               		.loc 3 383 0
 1895 092c 0000      		nop
 1896               	.L55:
 1897               	/* epilogue start */
 429:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 430:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1898               		.loc 3 430 0
 1899 092e 2896      		adiw r28,8
 1900 0930 0FB6      		in __tmp_reg__,__SREG__
 1901 0932 F894      		cli
 1902 0934 DEBF      		out __SP_H__,r29
 1903 0936 0FBE      		out __SREG__,__tmp_reg__
 1904 0938 CDBF      		out __SP_L__,r28
 1905 093a DF91      		pop r29
 1906 093c CF91      		pop r28
 1907 093e 0895      		ret
 1908               		.cfi_endproc
 1909               	.LFE93:
 1911               	.Letext0:
 1912               		.file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 1913               		.file 5 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 1914               		.file 6 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/atmegarfa1.h"
 1915               		.file 7 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 phy.c
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:7      *ABS*:00000001 __zero_reg__
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:12     .text:00000000 sysclk_enable_peripheral_clock
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:214    .text:0000011a __portable_avr_delay_cycles
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:239    .bss.phyState:00000000 phyState
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:244    .bss.phyRxBuffer:00000000 phyRxBuffer
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:249    .bss.phyRxState:00000000 phyRxState
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:254    .text:00000126 PHY_Init
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:1392   .text:00000650 phyTrxSetState
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:1118   .text:00000518 PHY_RandomReq
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:372    .text:000001c8 PHY_SetTdmaMode
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:466    .text:0000023e PHY_SetPromiscuousMode
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:787    .text:0000039e PHY_SetShortAddr
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:723    .text:00000356 PHY_SetPanId
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:1490   .text:000006cc PHY_SetIEEEAddr
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:587    .text:000002e6 PHY_SetOptimizedCSMAValues
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:634    .text:0000030a PHY_SetRxState
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:1344   .text:00000622 phySetRxState
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:675    .text:0000032a PHY_SetChannel
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:851    .text:000003e6 PHY_SetTxPower
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:899    .text:00000412 PHY_Sleep
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:973    .text:0000046e PHY_Wakeup
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:1017   .text:00000496 PHY_DataReq
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:1215   .text:00000590 PHY_EncryptReq
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:1272   .text:000005d0 PHY_EdReq
C:\Users\guilh\AppData\Local\Temp\ccx9c9OB.s:1647   .text:000007ba PHY_TaskHandler

UNDEFINED SYMBOLS
sysclk_enable_module
sal_aes_setup
sal_aes_exec
sal_aes_read
PHY_DataInd
printf
PHY_DataConf
__do_copy_data
__do_clear_bss
