   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "nwkDataReq.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .comm n,1,1
  27              	 .section .bss.tTS,"aw",%nobits
  28              	 .align 2
  31              	tTS:
  32 0000 00000000 	 .space 4
  33              	 .section .bss.nwkDataReqQueue,"aw",%nobits
  34              	 .align 2
  37              	nwkDataReqQueue:
  38 0000 00000000 	 .space 4
  39              	 .text
  40              	 .align 1
  41              	 .global nwkDataReqInit
  42              	 .syntax unified
  43              	 .thumb
  44              	 .thumb_func
  45              	 .fpu softvfp
  47              	nwkDataReqInit:
  48              	.LFB127:
  49              	 .file 1 "../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * \file nwkDataReq.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * \brief NWK_DataReq() implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** #include "sysConfig.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** #include "nwk.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** #include "nwkTx.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** #include "nwkFrame.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** #include "nwkGroup.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** #include "nwkDataReq.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** /*- Types ------------------------------------------------------------------*/
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** enum {
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	NWK_DATA_REQ_STATE_INITIAL,
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	NWK_DATA_REQ_STATE_WAIT_CONF,
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	NWK_DATA_REQ_STATE_CONFIRM,
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** };
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** /*- Prototypes -------------------------------------------------------------*/
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** static void nwkDataReqTxConf(NwkFrame_t *frame);
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** /*- Variables --------------------------------------------------------------*/
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** static NWK_DataReq_t *nwkDataReqQueue;
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** /*- Implementations --------------------------------------------------------*/
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** /*************************************************************************//**
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *  @brief Initializes the Data Request module
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *****************************************************************************/
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** void nwkDataReqInit(void)
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** {
  50              	 .loc 1 80 0
  51              	 .cfi_startproc
  52              	 
  53              	 
  54              	 
  55 0000 80B4     	 push {r7}
  56              	.LCFI0:
  57              	 .cfi_def_cfa_offset 4
  58              	 .cfi_offset 7,-4
  59 0002 00AF     	 add r7,sp,#0
  60              	.LCFI1:
  61              	 .cfi_def_cfa_register 7
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	nwkDataReqQueue = NULL;
  62              	 .loc 1 81 0
  63 0004 034B     	 ldr r3,.L2
  64 0006 0022     	 movs r2,#0
  65 0008 1A60     	 str r2,[r3]
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** }
  66              	 .loc 1 82 0
  67 000a 00BF     	 nop
  68 000c BD46     	 mov sp,r7
  69              	.LCFI2:
  70              	 .cfi_def_cfa_register 13
  71              	 
  72 000e 80BC     	 pop {r7}
  73              	.LCFI3:
  74              	 .cfi_restore 7
  75              	 .cfi_def_cfa_offset 0
  76 0010 7047     	 bx lr
  77              	.L3:
  78 0012 00BF     	 .align 2
  79              	.L2:
  80 0014 00000000 	 .word nwkDataReqQueue
  81              	 .cfi_endproc
  82              	.LFE127:
  84              	 .align 1
  85              	 .global NWK_DataReq
  86              	 .syntax unified
  87              	 .thumb
  88              	 .thumb_func
  89              	 .fpu softvfp
  91              	NWK_DataReq:
  92              	.LFB128:
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** /*************************************************************************//**
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *  @brief Adds request @a req to the queue of outgoing requests
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *  @param[in] req Pointer to the request parameters
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *****************************************************************************/
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** void NWK_DataReq(NWK_DataReq_t *req)
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** {
  93              	 .loc 1 89 0
  94              	 .cfi_startproc
  95              	 
  96              	 
  97              	 
  98 0018 80B4     	 push {r7}
  99              	.LCFI4:
 100              	 .cfi_def_cfa_offset 4
 101              	 .cfi_offset 7,-4
 102 001a 83B0     	 sub sp,sp,#12
 103              	.LCFI5:
 104              	 .cfi_def_cfa_offset 16
 105 001c 00AF     	 add r7,sp,#0
 106              	.LCFI6:
 107              	 .cfi_def_cfa_register 7
 108 001e 7860     	 str r0,[r7,#4]
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	req->state = NWK_DATA_REQ_STATE_INITIAL;
 109              	 .loc 1 90 0
 110 0020 7B68     	 ldr r3,[r7,#4]
 111 0022 0022     	 movs r2,#0
 112 0024 1A72     	 strb r2,[r3,#8]
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	req->status = NWK_SUCCESS_STATUS;
 113              	 .loc 1 91 0
 114 0026 7B68     	 ldr r3,[r7,#4]
 115 0028 0022     	 movs r2,#0
 116 002a 83F82020 	 strb r2,[r3,#32]
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	req->frame = NULL;
 117              	 .loc 1 92 0
 118 002e 7B68     	 ldr r3,[r7,#4]
 119 0030 0022     	 movs r2,#0
 120 0032 5A60     	 str r2,[r3,#4]
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	nwkIb.lock++;
 121              	 .loc 1 94 0
 122 0034 0F4B     	 ldr r3,.L8
 123 0036 B3F84830 	 ldrh r3,[r3,#72]
 124 003a 0133     	 adds r3,r3,#1
 125 003c 9AB2     	 uxth r2,r3
 126 003e 0D4B     	 ldr r3,.L8
 127 0040 A3F84820 	 strh r2,[r3,#72]
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	if (NULL == nwkDataReqQueue) {
 128              	 .loc 1 96 0
 129 0044 0C4B     	 ldr r3,.L8+4
 130 0046 1B68     	 ldr r3,[r3]
 131 0048 002B     	 cmp r3,#0
 132 004a 06D1     	 bne .L5
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		req->next = NULL;
 133              	 .loc 1 97 0
 134 004c 7B68     	 ldr r3,[r7,#4]
 135 004e 0022     	 movs r2,#0
 136 0050 1A60     	 str r2,[r3]
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		nwkDataReqQueue = req;
 137              	 .loc 1 98 0
 138 0052 094A     	 ldr r2,.L8+4
 139 0054 7B68     	 ldr r3,[r7,#4]
 140 0056 1360     	 str r3,[r2]
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	} else {
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		req->next = nwkDataReqQueue;
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		nwkDataReqQueue = req;
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	}
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** }
 141              	 .loc 1 103 0
 142 0058 06E0     	 b .L7
 143              	.L5:
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		nwkDataReqQueue = req;
 144              	 .loc 1 100 0
 145 005a 074B     	 ldr r3,.L8+4
 146 005c 1A68     	 ldr r2,[r3]
 147 005e 7B68     	 ldr r3,[r7,#4]
 148 0060 1A60     	 str r2,[r3]
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	}
 149              	 .loc 1 101 0
 150 0062 054A     	 ldr r2,.L8+4
 151 0064 7B68     	 ldr r3,[r7,#4]
 152 0066 1360     	 str r3,[r2]
 153              	.L7:
 154              	 .loc 1 103 0
 155 0068 00BF     	 nop
 156 006a 0C37     	 adds r7,r7,#12
 157              	.LCFI7:
 158              	 .cfi_def_cfa_offset 4
 159 006c BD46     	 mov sp,r7
 160              	.LCFI8:
 161              	 .cfi_def_cfa_register 13
 162              	 
 163 006e 80BC     	 pop {r7}
 164              	.LCFI9:
 165              	 .cfi_restore 7
 166              	 .cfi_def_cfa_offset 0
 167 0070 7047     	 bx lr
 168              	.L9:
 169 0072 00BF     	 .align 2
 170              	.L8:
 171 0074 00000000 	 .word nwkIb
 172 0078 00000000 	 .word nwkDataReqQueue
 173              	 .cfi_endproc
 174              	.LFE128:
 176              	 .align 1
 177              	 .syntax unified
 178              	 .thumb
 179              	 .thumb_func
 180              	 .fpu softvfp
 182              	nwkDataReqSendFrame:
 183              	.LFB129:
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** /*************************************************************************//**
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *  @brief Prepares and send outgoing frame based on the request @a req
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** * parameters
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *  @param[in] req Pointer to the request parameters
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *****************************************************************************/
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** static void nwkDataReqSendFrame(NWK_DataReq_t *req)
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** {
 184              	 .loc 1 111 0
 185              	 .cfi_startproc
 186              	 
 187              	 
 188 007c 80B5     	 push {r7,lr}
 189              	.LCFI10:
 190              	 .cfi_def_cfa_offset 8
 191              	 .cfi_offset 7,-8
 192              	 .cfi_offset 14,-4
 193 007e 86B0     	 sub sp,sp,#24
 194              	.LCFI11:
 195              	 .cfi_def_cfa_offset 32
 196 0080 00AF     	 add r7,sp,#0
 197              	.LCFI12:
 198              	 .cfi_def_cfa_register 7
 199 0082 7860     	 str r0,[r7,#4]
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	NwkFrame_t *frame;
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	if(req->options < NWK_OPT_LLDN_BEACON ) // use original frame allocation
 200              	 .loc 1 113 0
 201 0084 7B68     	 ldr r3,[r7,#4]
 202 0086 DB89     	 ldrh r3,[r3,#14]
 203 0088 3F2B     	 cmp r3,#63
 204 008a 0DD8     	 bhi .L11
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	{																			 	// this is not optimezed for
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		if(NULL == (frame = nwkFrameAlloc()))	// NWK_OPT_BEACON
 205              	 .loc 1 115 0
 206 008c 864B     	 ldr r3,.L29
 207 008e 9847     	 blx r3
 208              	.LVL0:
 209 0090 7861     	 str r0,[r7,#20]
 210 0092 7B69     	 ldr r3,[r7,#20]
 211 0094 002B     	 cmp r3,#0
 212 0096 22D1     	 bne .L12
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		{
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			req->state = NWK_DATA_REQ_STATE_CONFIRM;
 213              	 .loc 1 117 0
 214 0098 7B68     	 ldr r3,[r7,#4]
 215 009a 0222     	 movs r2,#2
 216 009c 1A72     	 strb r2,[r3,#8]
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			req->status = NWK_OUT_OF_MEMORY_STATUS;
 217              	 .loc 1 118 0
 218 009e 7B68     	 ldr r3,[r7,#4]
 219 00a0 0222     	 movs r2,#2
 220 00a2 83F82020 	 strb r2,[r3,#32]
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			return;
 221              	 .loc 1 119 0
 222 00a6 DCE1     	 b .L10
 223              	.L11:
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		}
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	}	else {		// use LLDN allocation, alocattes depending on header size
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		if( NULL == (frame = ((req->options & NWK_OPT_LLDN_BEACON) ? nwkFrameAlloc_LLDN(true) : nwkFrameA
 224              	 .loc 1 122 0
 225 00a8 7B68     	 ldr r3,[r7,#4]
 226 00aa DB89     	 ldrh r3,[r3,#14]
 227 00ac 03F04003 	 and r3,r3,#64
 228 00b0 002B     	 cmp r3,#0
 229 00b2 04D0     	 beq .L14
 230              	 .loc 1 122 0 is_stmt 0 discriminator 1
 231 00b4 0120     	 movs r0,#1
 232 00b6 7D4B     	 ldr r3,.L29+4
 233 00b8 9847     	 blx r3
 234              	.LVL1:
 235 00ba 0346     	 mov r3,r0
 236 00bc 03E0     	 b .L15
 237              	.L14:
 238              	 .loc 1 122 0 discriminator 2
 239 00be 0020     	 movs r0,#0
 240 00c0 7A4B     	 ldr r3,.L29+4
 241 00c2 9847     	 blx r3
 242              	.LVL2:
 243 00c4 0346     	 mov r3,r0
 244              	.L15:
 245              	 .loc 1 122 0 discriminator 4
 246 00c6 7B61     	 str r3,[r7,#20]
 247 00c8 7B69     	 ldr r3,[r7,#20]
 248 00ca 002B     	 cmp r3,#0
 249 00cc 07D1     	 bne .L12
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		{
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			// if there isn't space avaible in frame buffer queue, requested message
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			// can't be process
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			req->state = NWK_DATA_REQ_STATE_CONFIRM;
 250              	 .loc 1 126 0 is_stmt 1
 251 00ce 7B68     	 ldr r3,[r7,#4]
 252 00d0 0222     	 movs r2,#2
 253 00d2 1A72     	 strb r2,[r3,#8]
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			req->status = NWK_OUT_OF_MEMORY_STATUS;
 254              	 .loc 1 127 0
 255 00d4 7B68     	 ldr r3,[r7,#4]
 256 00d6 0222     	 movs r2,#2
 257 00d8 83F82020 	 strb r2,[r3,#32]
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			return;
 258              	 .loc 1 128 0
 259 00dc C1E1     	 b .L10
 260              	.L12:
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		}
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	}
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	if(req->options & NWK_OPT_LLDN_BEACON)
 261              	 .loc 1 132 0
 262 00de 7B68     	 ldr r3,[r7,#4]
 263 00e0 DB89     	 ldrh r3,[r3,#14]
 264 00e2 03F04003 	 and r3,r3,#64
 265 00e6 002B     	 cmp r3,#0
 266 00e8 68D0     	 beq .L16
 267              	.LBB2:
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	{
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->tx.control = 0;
 268              	 .loc 1 134 0
 269 00ea 7B69     	 ldr r3,[r7,#20]
 270 00ec 0022     	 movs r2,#0
 271 00ee 83F88820 	 strb r2,[r3,#136]
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		// Set Flag depending on current state of coordinator
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		if (req->options & NWK_OPT_ONLINE_STATE)
 272              	 .loc 1 136 0
 273 00f2 7B68     	 ldr r3,[r7,#4]
 274 00f4 DB89     	 ldrh r3,[r3,#14]
 275 00f6 03F08003 	 and r3,r3,#128
 276 00fa 002B     	 cmp r3,#0
 277 00fc 05D0     	 beq .L17
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			frame->LLbeacon.Flags.txState = 0b000; // online mode
 278              	 .loc 1 137 0
 279 00fe 7A69     	 ldr r2,[r7,#20]
 280 0100 5379     	 ldrb r3,[r2,#5]
 281 0102 6FF30203 	 bfc r3,#0,#3
 282 0106 5371     	 strb r3,[r2,#5]
 283 0108 24E0     	 b .L18
 284              	.L17:
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		else if (req->options & NWK_OPT_DISCOVERY_STATE)
 285              	 .loc 1 138 0
 286 010a 7B68     	 ldr r3,[r7,#4]
 287 010c DB89     	 ldrh r3,[r3,#14]
 288 010e 03F48073 	 and r3,r3,#256
 289 0112 002B     	 cmp r3,#0
 290 0114 06D0     	 beq .L19
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			frame->LLbeacon.Flags.txState = 0b100; // discovery mode
 291              	 .loc 1 139 0
 292 0116 7A69     	 ldr r2,[r7,#20]
 293 0118 5379     	 ldrb r3,[r2,#5]
 294 011a 0421     	 movs r1,#4
 295 011c 61F30203 	 bfi r3,r1,#0,#3
 296 0120 5371     	 strb r3,[r2,#5]
 297 0122 17E0     	 b .L18
 298              	.L19:
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		else if (req->options & NWK_OPT_CONFIG_STATE)
 299              	 .loc 1 140 0
 300 0124 7B68     	 ldr r3,[r7,#4]
 301 0126 DB89     	 ldrh r3,[r3,#14]
 302 0128 03F40073 	 and r3,r3,#512
 303 012c 002B     	 cmp r3,#0
 304 012e 06D0     	 beq .L20
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			frame->LLbeacon.Flags.txState = 0b110; // configuration mode
 305              	 .loc 1 141 0
 306 0130 7A69     	 ldr r2,[r7,#20]
 307 0132 5379     	 ldrb r3,[r2,#5]
 308 0134 0621     	 movs r1,#6
 309 0136 61F30203 	 bfi r3,r1,#0,#3
 310 013a 5371     	 strb r3,[r2,#5]
 311 013c 0AE0     	 b .L18
 312              	.L20:
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		else if (req->options & NWK_OPT_RESET_STATE)
 313              	 .loc 1 142 0
 314 013e 7B68     	 ldr r3,[r7,#4]
 315 0140 DB89     	 ldrh r3,[r3,#14]
 316 0142 03F48063 	 and r3,r3,#1024
 317 0146 002B     	 cmp r3,#0
 318 0148 04D0     	 beq .L18
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			frame->LLbeacon.Flags.txState = 0b111; // full reset mode
 319              	 .loc 1 143 0
 320 014a 7A69     	 ldr r2,[r7,#20]
 321 014c 5379     	 ldrb r3,[r2,#5]
 322 014e 43F00703 	 orr r3,r3,#7
 323 0152 5371     	 strb r3,[r2,#5]
 324              	.L18:
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		// set biderectional time slots: 0 - downlink 1 - uplink
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->LLbeacon.Flags.txDir 	= 0b0;
 325              	 .loc 1 146 0
 326 0154 7A69     	 ldr r2,[r7,#20]
 327 0156 5379     	 ldrb r3,[r2,#5]
 328 0158 6FF3C303 	 bfc r3,#3,#1
 329 015c 5371     	 strb r3,[r2,#5]
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->LLbeacon.Flags.reserved 	= 0b0;
 330              	 .loc 1 147 0
 331 015e 7A69     	 ldr r2,[r7,#20]
 332 0160 5379     	 ldrb r3,[r2,#5]
 333 0162 6FF30413 	 bfc r3,#4,#1
 334 0166 5371     	 strb r3,[r2,#5]
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		// set number of managment timeslots
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->LLbeacon.Flags.numBaseMgmtTimeslots = numBaseTimeSlotperMgmt;
 335              	 .loc 1 149 0
 336 0168 7A69     	 ldr r2,[r7,#20]
 337 016a 5379     	 ldrb r3,[r2,#5]
 338 016c 0221     	 movs r1,#2
 339 016e 61F34713 	 bfi r3,r1,#5,#3
 340 0172 5371     	 strb r3,[r2,#5]
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		if (req->options & 	NWK_OPT_SECOND_BEACON)
 341              	 .loc 1 151 0
 342 0174 7B68     	 ldr r3,[r7,#4]
 343 0176 DB89     	 ldrh r3,[r3,#14]
 344 0178 03F40063 	 and r3,r3,#2048
 345 017c 002B     	 cmp r3,#0
 346 017e 03D0     	 beq .L21
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		 frame->LLbeacon.confSeqNumber = 0x01;
 347              	 .loc 1 152 0
 348 0180 7B69     	 ldr r3,[r7,#20]
 349 0182 0122     	 movs r2,#1
 350 0184 DA71     	 strb r2,[r3,#7]
 351 0186 0CE0     	 b .L22
 352              	.L21:
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		else if (req->options & NWK_OPT_THIRD_BEACON)
 353              	 .loc 1 153 0
 354 0188 7B68     	 ldr r3,[r7,#4]
 355 018a DB89     	 ldrh r3,[r3,#14]
 356 018c 03F48053 	 and r3,r3,#4096
 357 0190 002B     	 cmp r3,#0
 358 0192 03D0     	 beq .L23
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			frame->LLbeacon.confSeqNumber = 0x02;
 359              	 .loc 1 154 0
 360 0194 7B69     	 ldr r3,[r7,#20]
 361 0196 0222     	 movs r2,#2
 362 0198 DA71     	 strb r2,[r3,#7]
 363 019a 02E0     	 b .L22
 364              	.L23:
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		else frame->LLbeacon.confSeqNumber = 0x00;
 365              	 .loc 1 155 0
 366 019c 7B69     	 ldr r3,[r7,#20]
 367 019e 0022     	 movs r2,#0
 368 01a0 DA71     	 strb r2,[r3,#7]
 369              	.L22:
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->LLbeacon.TimeSlotSize =  30;//n + 50 + 12;
 370              	 .loc 1 157 0
 371 01a2 7B69     	 ldr r3,[r7,#20]
 372 01a4 1E22     	 movs r2,#30
 373 01a6 1A72     	 strb r2,[r3,#8]
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		uint8_t* shortAddr = (uint8_t* )APP_PANID;
 374              	 .loc 1 158 0
 375 01a8 4CF6FE23 	 movw r3,#51966
 376 01ac 3B61     	 str r3,[r7,#16]
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->LLbeacon.PanId = APP_PANID;
 377              	 .loc 1 159 0
 378 01ae 7B69     	 ldr r3,[r7,#20]
 379 01b0 FE22     	 movs r2,#254
 380 01b2 9A71     	 strb r2,[r3,#6]
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		// set Frame Control, Security Header and Sequence Number fields
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		nwkTxBeaconFrameLLDN(frame);
 381              	 .loc 1 161 0
 382 01b4 7869     	 ldr r0,[r7,#20]
 383 01b6 3E4B     	 ldr r3,.L29+8
 384 01b8 9847     	 blx r3
 385              	.LVL3:
 386              	.LBE2:
 387 01ba 48E1     	 b .L24
 388              	.L16:
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	}
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	else if(req->options & NWK_OPT_MAC_COMMAND 
 389              	 .loc 1 163 0
 390 01bc 7B68     	 ldr r3,[r7,#4]
 391 01be DB89     	 ldrh r3,[r3,#14]
 392 01c0 1BB2     	 sxth r3,r3
 393 01c2 002B     	 cmp r3,#0
 394 01c4 0BDB     	 blt .L25
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		|| req->options & NWK_OPT_LLDN_DATA
 395              	 .loc 1 164 0
 396 01c6 7B68     	 ldr r3,[r7,#4]
 397 01c8 DB89     	 ldrh r3,[r3,#14]
 398 01ca 03F40053 	 and r3,r3,#8192
 399 01ce 002B     	 cmp r3,#0
 400 01d0 05D1     	 bne .L25
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		|| req->options & NWK_OPT_LLDN_ACK )
 401              	 .loc 1 165 0
 402 01d2 7B68     	 ldr r3,[r7,#4]
 403 01d4 DB89     	 ldrh r3,[r3,#14]
 404 01d6 03F48043 	 and r3,r3,#16384
 405 01da 002B     	 cmp r3,#0
 406 01dc 1CD0     	 beq .L26
 407              	.L25:
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	{
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		nwkTxMacCommandFrameLLDN(frame, req->options);
 408              	 .loc 1 167 0
 409 01de 7B68     	 ldr r3,[r7,#4]
 410 01e0 DB89     	 ldrh r3,[r3,#14]
 411 01e2 1946     	 mov r1,r3
 412 01e4 7869     	 ldr r0,[r7,#20]
 413 01e6 334B     	 ldr r3,.L29+12
 414 01e8 9847     	 blx r3
 415              	.LVL4:
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->tx.control = 0;
 416              	 .loc 1 168 0
 417 01ea 7B69     	 ldr r3,[r7,#20]
 418 01ec 0022     	 movs r2,#0
 419 01ee 83F88820 	 strb r2,[r3,#136]
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		memcpy(frame->payload, req->data, req->size);
 420              	 .loc 1 169 0
 421 01f2 7B69     	 ldr r3,[r7,#20]
 422 01f4 D3F88100 	 ldr r0,[r3,#129]
 423 01f8 7B68     	 ldr r3,[r7,#4]
 424 01fa 5969     	 ldr r1,[r3,#20]
 425 01fc 7B68     	 ldr r3,[r7,#4]
 426 01fe 1B7E     	 ldrb r3,[r3,#24]
 427 0200 1A46     	 mov r2,r3
 428 0202 2D4B     	 ldr r3,.L29+16
 429 0204 9847     	 blx r3
 430              	.LVL5:
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->size += req->size;
 431              	 .loc 1 170 0
 432 0206 7B69     	 ldr r3,[r7,#20]
 433 0208 5A78     	 ldrb r2,[r3,#1]
 434 020a 7B68     	 ldr r3,[r7,#4]
 435 020c 1B7E     	 ldrb r3,[r3,#24]
 436 020e 1344     	 add r3,r3,r2
 437 0210 DAB2     	 uxtb r2,r3
 438 0212 7B69     	 ldr r3,[r7,#20]
 439 0214 5A70     	 strb r2,[r3,#1]
 440 0216 1AE1     	 b .L24
 441              	.L26:
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	}
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	else if(req->options & NWK_OPT_BEACON )
 442              	 .loc 1 172 0
 443 0218 7B68     	 ldr r3,[r7,#4]
 444 021a DB89     	 ldrh r3,[r3,#14]
 445 021c 03F02003 	 and r3,r3,#32
 446 0220 002B     	 cmp r3,#0
 447 0222 4DD0     	 beq .L27
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	{
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->tx.control = 0;
 448              	 .loc 1 174 0
 449 0224 7B69     	 ldr r3,[r7,#20]
 450 0226 0022     	 movs r2,#0
 451 0228 83F88820 	 strb r2,[r3,#136]
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->beacon.macSFS.beaconOrder = BI_COEF;
 452              	 .loc 1 176 0
 453 022c 7A69     	 ldr r2,[r7,#20]
 454 022e 537A     	 ldrb r3,[r2,#9]
 455 0230 0821     	 movs r1,#8
 456 0232 61F30303 	 bfi r3,r1,#0,#4
 457 0236 5372     	 strb r3,[r2,#9]
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->beacon.macSFS.superframeOrder = SD_COEF;
 458              	 .loc 1 177 0
 459 0238 7A69     	 ldr r2,[r7,#20]
 460 023a 537A     	 ldrb r3,[r2,#9]
 461 023c 0621     	 movs r1,#6
 462 023e 61F30713 	 bfi r3,r1,#4,#4
 463 0242 5372     	 strb r3,[r2,#9]
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->beacon.macSFS.finalCAPslot = FINAL_CAP_SLOT;
 464              	 .loc 1 178 0
 465 0244 7A69     	 ldr r2,[r7,#20]
 466 0246 937A     	 ldrb r3,[r2,#10]
 467 0248 0121     	 movs r1,#1
 468 024a 61F30303 	 bfi r3,r1,#0,#4
 469 024e 9372     	 strb r3,[r2,#10]
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->beacon.macSFS.BatteryLifeExtension = TDMA_BATTERY_EXTENSION;
 470              	 .loc 1 179 0
 471 0250 7A69     	 ldr r2,[r7,#20]
 472 0252 937A     	 ldrb r3,[r2,#10]
 473 0254 43F01003 	 orr r3,r3,#16
 474 0258 9372     	 strb r3,[r2,#10]
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->beacon.macSFS.PANCoordinator = 1;
 475              	 .loc 1 180 0
 476 025a 7A69     	 ldr r2,[r7,#20]
 477 025c 937A     	 ldrb r3,[r2,#10]
 478 025e 43F04003 	 orr r3,r3,#64
 479 0262 9372     	 strb r3,[r2,#10]
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->beacon.macSFS.AssociationPermit = 0;
 480              	 .loc 1 181 0
 481 0264 7A69     	 ldr r2,[r7,#20]
 482 0266 937A     	 ldrb r3,[r2,#10]
 483 0268 6FF3C713 	 bfc r3,#7,#1
 484 026c 9372     	 strb r3,[r2,#10]
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->beacon.macGTS = 0;
 485              	 .loc 1 183 0
 486 026e 7B69     	 ldr r3,[r7,#20]
 487 0270 0022     	 movs r2,#0
 488 0272 DA72     	 strb r2,[r3,#11]
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->beacon.macPending = 0;
 489              	 .loc 1 184 0
 490 0274 7B69     	 ldr r3,[r7,#20]
 491 0276 0022     	 movs r2,#0
 492 0278 1A73     	 strb r2,[r3,#12]
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		memcpy(frame->payload, req->data, req->size);
 493              	 .loc 1 186 0
 494 027a 7B69     	 ldr r3,[r7,#20]
 495 027c D3F88100 	 ldr r0,[r3,#129]
 496 0280 7B68     	 ldr r3,[r7,#4]
 497 0282 5969     	 ldr r1,[r3,#20]
 498 0284 7B68     	 ldr r3,[r7,#4]
 499 0286 1B7E     	 ldrb r3,[r3,#24]
 500 0288 1A46     	 mov r2,r3
 501 028a 0B4B     	 ldr r3,.L29+16
 502 028c 9847     	 blx r3
 503              	.LVL6:
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->size += req->size;
 504              	 .loc 1 187 0
 505 028e 7B69     	 ldr r3,[r7,#20]
 506 0290 5A78     	 ldrb r2,[r3,#1]
 507 0292 7B68     	 ldr r3,[r7,#4]
 508 0294 1B7E     	 ldrb r3,[r3,#24]
 509 0296 1344     	 add r3,r3,r2
 510 0298 DAB2     	 uxtb r2,r3
 511 029a 7B69     	 ldr r3,[r7,#20]
 512 029c 5A70     	 strb r2,[r3,#1]
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		nwkTxBeaconFrame(frame);
 513              	 .loc 1 189 0
 514 029e 7869     	 ldr r0,[r7,#20]
 515 02a0 064B     	 ldr r3,.L29+20
 516 02a2 9847     	 blx r3
 517              	.LVL7:
 518 02a4 D3E0     	 b .L24
 519              	.L30:
 520 02a6 00BF     	 .align 2
 521              	.L29:
 522 02a8 00000000 	 .word nwkFrameAlloc
 523 02ac 00000000 	 .word nwkFrameAlloc_LLDN
 524 02b0 00000000 	 .word nwkTxBeaconFrameLLDN
 525 02b4 00000000 	 .word nwkTxMacCommandFrameLLDN
 526 02b8 00000000 	 .word memcpy
 527 02bc 00000000 	 .word nwkTxBeaconFrame
 528              	.L27:
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	}
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	else if(req->options != 0)
 529              	 .loc 1 191 0
 530 02c0 7B68     	 ldr r3,[r7,#4]
 531 02c2 DB89     	 ldrh r3,[r3,#14]
 532 02c4 002B     	 cmp r3,#0
 533 02c6 00F0C280 	 beq .L24
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	{
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->tx.control = (req->options & NWK_OPT_BROADCAST_PAN_ID) ? NWK_TX_CONTROL_BROADCAST_PAN_ID :
 534              	 .loc 1 193 0
 535 02ca 7B68     	 ldr r3,[r7,#4]
 536 02cc DB89     	 ldrh r3,[r3,#14]
 537 02ce 03F00403 	 and r3,r3,#4
 538 02d2 002B     	 cmp r3,#0
 539 02d4 14BF     	 ite ne
 540 02d6 0123     	 movne r3,#1
 541 02d8 0023     	 moveq r3,#0
 542 02da DBB2     	 uxtb r3,r3
 543 02dc 1A46     	 mov r2,r3
 544 02de 7B69     	 ldr r3,[r7,#20]
 545 02e0 83F88820 	 strb r2,[r3,#136]
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->header.nwkFcf.ackRequest = (req->options & NWK_OPT_ACK_REQUEST) ? 1 : 0;
 546              	 .loc 1 195 0
 547 02e4 7B68     	 ldr r3,[r7,#4]
 548 02e6 DB89     	 ldrh r3,[r3,#14]
 549 02e8 03F00103 	 and r3,r3,#1
 550 02ec 002B     	 cmp r3,#0
 551 02ee 14BF     	 ite ne
 552 02f0 0123     	 movne r3,#1
 553 02f2 0023     	 moveq r3,#0
 554 02f4 D9B2     	 uxtb r1,r3
 555 02f6 7A69     	 ldr r2,[r7,#20]
 556 02f8 D37A     	 ldrb r3,[r2,#11]
 557 02fa 61F30003 	 bfi r3,r1,#0,#1
 558 02fe D372     	 strb r3,[r2,#11]
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->header.nwkFcf.linkLocal = (req->options & NWK_OPT_LINK_LOCAL) ? 1 : 0;
 559              	 .loc 1 196 0
 560 0300 7B68     	 ldr r3,[r7,#4]
 561 0302 DB89     	 ldrh r3,[r3,#14]
 562 0304 03F00803 	 and r3,r3,#8
 563 0308 002B     	 cmp r3,#0
 564 030a 14BF     	 ite ne
 565 030c 0123     	 movne r3,#1
 566 030e 0023     	 moveq r3,#0
 567 0310 D9B2     	 uxtb r1,r3
 568 0312 7A69     	 ldr r2,[r7,#20]
 569 0314 D37A     	 ldrb r3,[r2,#11]
 570 0316 61F38203 	 bfi r3,r1,#2,#1
 571 031a D372     	 strb r3,[r2,#11]
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->header.nwkFcf.beacon = (req->options & NWK_OPT_BEACON) ? 1 : 0;
 572              	 .loc 1 197 0
 573 031c 7B68     	 ldr r3,[r7,#4]
 574 031e DB89     	 ldrh r3,[r3,#14]
 575 0320 03F02003 	 and r3,r3,#32
 576 0324 002B     	 cmp r3,#0
 577 0326 14BF     	 ite ne
 578 0328 0123     	 movne r3,#1
 579 032a 0023     	 moveq r3,#0
 580 032c D9B2     	 uxtb r1,r3
 581 032e 7A69     	 ldr r2,[r7,#20]
 582 0330 D37A     	 ldrb r3,[r2,#11]
 583 0332 61F30413 	 bfi r3,r1,#4,#1
 584 0336 D372     	 strb r3,[r2,#11]
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** #ifdef NWK_ENABLE_SECURITY
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->header.nwkFcf.security = (req->options & NWK_OPT_ENABLE_SECURITY) ? 1 : 0;
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** #endif
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** #ifdef NWK_ENABLE_MULTICAST
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->header.nwkFcf.multicast = (req->options & NWK_OPT_MULTICAST) ? 1 : 0;
 585              	 .loc 1 204 0
 586 0338 7B68     	 ldr r3,[r7,#4]
 587 033a DB89     	 ldrh r3,[r3,#14]
 588 033c 03F01003 	 and r3,r3,#16
 589 0340 002B     	 cmp r3,#0
 590 0342 14BF     	 ite ne
 591 0344 0123     	 movne r3,#1
 592 0346 0023     	 moveq r3,#0
 593 0348 D9B2     	 uxtb r1,r3
 594 034a 7A69     	 ldr r2,[r7,#20]
 595 034c D37A     	 ldrb r3,[r2,#11]
 596 034e 61F3C303 	 bfi r3,r1,#3,#1
 597 0352 D372     	 strb r3,[r2,#11]
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		if(frame->header.nwkFcf.multicast)
 598              	 .loc 1 206 0
 599 0354 7B69     	 ldr r3,[r7,#20]
 600 0356 DB7A     	 ldrb r3,[r3,#11]
 601 0358 03F00803 	 and r3,r3,#8
 602 035c DBB2     	 uxtb r3,r3
 603 035e 002B     	 cmp r3,#0
 604 0360 38D0     	 beq .L28
 605              	.LBB3:
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		{
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			NwkFrameMulticastHeader_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 606              	 .loc 1 208 0
 607 0362 7B69     	 ldr r3,[r7,#20]
 608 0364 D3F88130 	 ldr r3,[r3,#129]
 609 0368 FB60     	 str r3,[r7,#12]
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			mcHeader->memberRadius = req->memberRadius;
 610              	 .loc 1 210 0
 611 036a 7B68     	 ldr r3,[r7,#4]
 612 036c 1B7C     	 ldrb r3,[r3,#16]
 613 036e 03F00F03 	 and r3,r3,#15
 614 0372 D9B2     	 uxtb r1,r3
 615 0374 FA68     	 ldr r2,[r7,#12]
 616 0376 5378     	 ldrb r3,[r2,#1]
 617 0378 61F30303 	 bfi r3,r1,#0,#4
 618 037c 5370     	 strb r3,[r2,#1]
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			mcHeader->maxMemberRadius = req->memberRadius;
 619              	 .loc 1 211 0
 620 037e 7B68     	 ldr r3,[r7,#4]
 621 0380 1B7C     	 ldrb r3,[r3,#16]
 622 0382 03F00F03 	 and r3,r3,#15
 623 0386 D9B2     	 uxtb r1,r3
 624 0388 FA68     	 ldr r2,[r7,#12]
 625 038a 5378     	 ldrb r3,[r2,#1]
 626 038c 61F30713 	 bfi r3,r1,#4,#4
 627 0390 5370     	 strb r3,[r2,#1]
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			mcHeader->nonMemberRadius = req->nonMemberRadius;
 628              	 .loc 1 212 0
 629 0392 7B68     	 ldr r3,[r7,#4]
 630 0394 5B7C     	 ldrb r3,[r3,#17]
 631 0396 03F00F03 	 and r3,r3,#15
 632 039a D9B2     	 uxtb r1,r3
 633 039c FA68     	 ldr r2,[r7,#12]
 634 039e 1378     	 ldrb r3,[r2]
 635 03a0 61F30303 	 bfi r3,r1,#0,#4
 636 03a4 1370     	 strb r3,[r2]
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			mcHeader->maxNonMemberRadius = req->nonMemberRadius;
 637              	 .loc 1 213 0
 638 03a6 7B68     	 ldr r3,[r7,#4]
 639 03a8 5B7C     	 ldrb r3,[r3,#17]
 640 03aa 03F00F03 	 and r3,r3,#15
 641 03ae D9B2     	 uxtb r1,r3
 642 03b0 FA68     	 ldr r2,[r7,#12]
 643 03b2 1378     	 ldrb r3,[r2]
 644 03b4 61F30713 	 bfi r3,r1,#4,#4
 645 03b8 1370     	 strb r3,[r2]
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 646              	 .loc 1 215 0
 647 03ba 7B69     	 ldr r3,[r7,#20]
 648 03bc D3F88130 	 ldr r3,[r3,#129]
 649 03c0 9A1C     	 adds r2,r3,#2
 650 03c2 7B69     	 ldr r3,[r7,#20]
 651 03c4 C3F88120 	 str r2,[r3,#129]
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			frame->size += sizeof(NwkFrameMulticastHeader_t);
 652              	 .loc 1 216 0
 653 03c8 7B69     	 ldr r3,[r7,#20]
 654 03ca 5B78     	 ldrb r3,[r3,#1]
 655 03cc 0233     	 adds r3,r3,#2
 656 03ce DAB2     	 uxtb r2,r3
 657 03d0 7B69     	 ldr r3,[r7,#20]
 658 03d2 5A70     	 strb r2,[r3,#1]
 659              	.L28:
 660              	.LBE3:
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		}
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** #endif
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 661              	 .loc 1 220 0
 662 03d4 244B     	 ldr r3,.L31
 663 03d6 1B79     	 ldrb r3,[r3,#4]
 664 03d8 0133     	 adds r3,r3,#1
 665 03da DAB2     	 uxtb r2,r3
 666 03dc 224B     	 ldr r3,.L31
 667 03de 1A71     	 strb r2,[r3,#4]
 668 03e0 214B     	 ldr r3,.L31
 669 03e2 1A79     	 ldrb r2,[r3,#4]
 670 03e4 7B69     	 ldr r3,[r7,#20]
 671 03e6 1A73     	 strb r2,[r3,#12]
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->header.nwkSrcAddr = nwkIb.addr;
 672              	 .loc 1 221 0
 673 03e8 1F4B     	 ldr r3,.L31
 674 03ea 1A88     	 ldrh r2,[r3]
 675 03ec 7B69     	 ldr r3,[r7,#20]
 676 03ee A3F80D20 	 strh r2,[r3,#13]
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->header.nwkDstAddr = req->dstAddr;
 677              	 .loc 1 222 0
 678 03f2 7B68     	 ldr r3,[r7,#4]
 679 03f4 5A89     	 ldrh r2,[r3,#10]
 680 03f6 7B69     	 ldr r3,[r7,#20]
 681 03f8 A3F80F20 	 strh r2,[r3,#15]
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->header.nwkSrcEndpoint = req->srcEndpoint;
 682              	 .loc 1 223 0
 683 03fc 7B68     	 ldr r3,[r7,#4]
 684 03fe 5B7B     	 ldrb r3,[r3,#13]
 685 0400 03F00F03 	 and r3,r3,#15
 686 0404 D9B2     	 uxtb r1,r3
 687 0406 7A69     	 ldr r2,[r7,#20]
 688 0408 537C     	 ldrb r3,[r2,#17]
 689 040a 61F30303 	 bfi r3,r1,#0,#4
 690 040e 5374     	 strb r3,[r2,#17]
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->header.nwkDstEndpoint = req->dstEndpoint;
 691              	 .loc 1 224 0
 692 0410 7B68     	 ldr r3,[r7,#4]
 693 0412 1B7B     	 ldrb r3,[r3,#12]
 694 0414 03F00F03 	 and r3,r3,#15
 695 0418 D9B2     	 uxtb r1,r3
 696 041a 7A69     	 ldr r2,[r7,#20]
 697 041c 537C     	 ldrb r3,[r2,#17]
 698 041e 61F30713 	 bfi r3,r1,#4,#4
 699 0422 5374     	 strb r3,[r2,#17]
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		memcpy(frame->payload, req->data, req->size);
 700              	 .loc 1 226 0
 701 0424 7B69     	 ldr r3,[r7,#20]
 702 0426 D3F88100 	 ldr r0,[r3,#129]
 703 042a 7B68     	 ldr r3,[r7,#4]
 704 042c 5969     	 ldr r1,[r3,#20]
 705 042e 7B68     	 ldr r3,[r7,#4]
 706 0430 1B7E     	 ldrb r3,[r3,#24]
 707 0432 1A46     	 mov r2,r3
 708 0434 0D4B     	 ldr r3,.L31+4
 709 0436 9847     	 blx r3
 710              	.LVL8:
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		frame->size += req->size;
 711              	 .loc 1 227 0
 712 0438 7B69     	 ldr r3,[r7,#20]
 713 043a 5A78     	 ldrb r2,[r3,#1]
 714 043c 7B68     	 ldr r3,[r7,#4]
 715 043e 1B7E     	 ldrb r3,[r3,#24]
 716 0440 1344     	 add r3,r3,r2
 717 0442 DAB2     	 uxtb r2,r3
 718 0444 7B69     	 ldr r3,[r7,#20]
 719 0446 5A70     	 strb r2,[r3,#1]
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		nwkTxFrame(frame);
 720              	 .loc 1 229 0
 721 0448 7869     	 ldr r0,[r7,#20]
 722 044a 094B     	 ldr r3,.L31+8
 723 044c 9847     	 blx r3
 724              	.LVL9:
 725              	.L24:
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	}
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	req->frame = frame;
 726              	 .loc 1 231 0
 727 044e 7B68     	 ldr r3,[r7,#4]
 728 0450 7A69     	 ldr r2,[r7,#20]
 729 0452 5A60     	 str r2,[r3,#4]
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	req->state = NWK_DATA_REQ_STATE_WAIT_CONF;
 730              	 .loc 1 232 0
 731 0454 7B68     	 ldr r3,[r7,#4]
 732 0456 0122     	 movs r2,#1
 733 0458 1A72     	 strb r2,[r3,#8]
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	frame->tx.confirm = nwkDataReqTxConf;
 734              	 .loc 1 234 0
 735 045a 7B69     	 ldr r3,[r7,#20]
 736 045c 054A     	 ldr r2,.L31+12
 737 045e C3F88920 	 str r2,[r3,#137]
 738              	.L10:
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** }
 739              	 .loc 1 235 0
 740 0462 1837     	 adds r7,r7,#24
 741              	.LCFI13:
 742              	 .cfi_def_cfa_offset 8
 743 0464 BD46     	 mov sp,r7
 744              	.LCFI14:
 745              	 .cfi_def_cfa_register 13
 746              	 
 747 0466 80BD     	 pop {r7,pc}
 748              	.L32:
 749              	 .align 2
 750              	.L31:
 751 0468 00000000 	 .word nwkIb
 752 046c 00000000 	 .word memcpy
 753 0470 00000000 	 .word nwkTxFrame
 754 0474 00000000 	 .word nwkDataReqTxConf
 755              	 .cfi_endproc
 756              	.LFE129:
 758              	 .align 1
 759              	 .syntax unified
 760              	 .thumb
 761              	 .thumb_func
 762              	 .fpu softvfp
 764              	nwkDataReqTxConf:
 765              	.LFB130:
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** /*************************************************************************//**
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *  @brief Frame transmission confirmation handler
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *  @param[in] frame Pointer to the sent frame
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *****************************************************************************/
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** static void nwkDataReqTxConf(NwkFrame_t *frame)
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** {
 766              	 .loc 1 242 0
 767              	 .cfi_startproc
 768              	 
 769              	 
 770 0478 80B5     	 push {r7,lr}
 771              	.LCFI15:
 772              	 .cfi_def_cfa_offset 8
 773              	 .cfi_offset 7,-8
 774              	 .cfi_offset 14,-4
 775 047a 84B0     	 sub sp,sp,#16
 776              	.LCFI16:
 777              	 .cfi_def_cfa_offset 24
 778 047c 00AF     	 add r7,sp,#0
 779              	.LCFI17:
 780              	 .cfi_def_cfa_register 7
 781 047e 7860     	 str r0,[r7,#4]
 782              	.LBB4:
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	for (NWK_DataReq_t *req = nwkDataReqQueue; req; req = req->next) {
 783              	 .loc 1 243 0
 784 0480 124B     	 ldr r3,.L38
 785 0482 1B68     	 ldr r3,[r3]
 786 0484 FB60     	 str r3,[r7,#12]
 787 0486 17E0     	 b .L34
 788              	.L37:
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		if (req->frame == frame) {
 789              	 .loc 1 244 0
 790 0488 FB68     	 ldr r3,[r7,#12]
 791 048a 5A68     	 ldr r2,[r3,#4]
 792 048c 7B68     	 ldr r3,[r7,#4]
 793 048e 9A42     	 cmp r2,r3
 794 0490 0FD1     	 bne .L35
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			req->status = frame->tx.status;
 795              	 .loc 1 245 0
 796 0492 7B68     	 ldr r3,[r7,#4]
 797 0494 93F88520 	 ldrb r2,[r3,#133]
 798 0498 FB68     	 ldr r3,[r7,#12]
 799 049a 83F82020 	 strb r2,[r3,#32]
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			req->control = frame->tx.control;
 800              	 .loc 1 246 0
 801 049e 7B68     	 ldr r3,[r7,#4]
 802 04a0 93F88820 	 ldrb r2,[r3,#136]
 803 04a4 FB68     	 ldr r3,[r7,#12]
 804 04a6 83F82120 	 strb r2,[r3,#33]
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			req->state = NWK_DATA_REQ_STATE_CONFIRM;
 805              	 .loc 1 247 0
 806 04aa FB68     	 ldr r3,[r7,#12]
 807 04ac 0222     	 movs r2,#2
 808 04ae 1A72     	 strb r2,[r3,#8]
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			break;
 809              	 .loc 1 248 0
 810 04b0 05E0     	 b .L36
 811              	.L35:
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		if (req->frame == frame) {
 812              	 .loc 1 243 0 discriminator 2
 813 04b2 FB68     	 ldr r3,[r7,#12]
 814 04b4 1B68     	 ldr r3,[r3]
 815 04b6 FB60     	 str r3,[r7,#12]
 816              	.L34:
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		if (req->frame == frame) {
 817              	 .loc 1 243 0 is_stmt 0 discriminator 1
 818 04b8 FB68     	 ldr r3,[r7,#12]
 819 04ba 002B     	 cmp r3,#0
 820 04bc E4D1     	 bne .L37
 821              	.L36:
 822              	.LBE4:
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		}
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	}
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	nwkFrameFree(frame);
 823              	 .loc 1 252 0 is_stmt 1
 824 04be 7868     	 ldr r0,[r7,#4]
 825 04c0 034B     	 ldr r3,.L38+4
 826 04c2 9847     	 blx r3
 827              	.LVL10:
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** }
 828              	 .loc 1 253 0
 829 04c4 00BF     	 nop
 830 04c6 1037     	 adds r7,r7,#16
 831              	.LCFI18:
 832              	 .cfi_def_cfa_offset 8
 833 04c8 BD46     	 mov sp,r7
 834              	.LCFI19:
 835              	 .cfi_def_cfa_register 13
 836              	 
 837 04ca 80BD     	 pop {r7,pc}
 838              	.L39:
 839              	 .align 2
 840              	.L38:
 841 04cc 00000000 	 .word nwkDataReqQueue
 842 04d0 00000000 	 .word nwkFrameFree
 843              	 .cfi_endproc
 844              	.LFE130:
 846              	 .align 1
 847              	 .syntax unified
 848              	 .thumb
 849              	 .thumb_func
 850              	 .fpu softvfp
 852              	nwkDataReqConfirm:
 853              	.LFB131:
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** /*************************************************************************//**
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *  @brief Confirms request @req to the application and remove it from the queue
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *  @param[in] req Pointer to the request parameters
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *****************************************************************************/
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** static void nwkDataReqConfirm(NWK_DataReq_t *req)
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** {
 854              	 .loc 1 260 0
 855              	 .cfi_startproc
 856              	 
 857              	 
 858 04d4 80B5     	 push {r7,lr}
 859              	.LCFI20:
 860              	 .cfi_def_cfa_offset 8
 861              	 .cfi_offset 7,-8
 862              	 .cfi_offset 14,-4
 863 04d6 84B0     	 sub sp,sp,#16
 864              	.LCFI21:
 865              	 .cfi_def_cfa_offset 24
 866 04d8 00AF     	 add r7,sp,#0
 867              	.LCFI22:
 868              	 .cfi_def_cfa_register 7
 869 04da 7860     	 str r0,[r7,#4]
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	if (nwkDataReqQueue == req) {
 870              	 .loc 1 261 0
 871 04dc 174B     	 ldr r3,.L47
 872 04de 1A68     	 ldr r2,[r3]
 873 04e0 7B68     	 ldr r3,[r7,#4]
 874 04e2 9A42     	 cmp r2,r3
 875 04e4 05D1     	 bne .L41
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		nwkDataReqQueue = nwkDataReqQueue->next;
 876              	 .loc 1 262 0
 877 04e6 154B     	 ldr r3,.L47
 878 04e8 1B68     	 ldr r3,[r3]
 879 04ea 1B68     	 ldr r3,[r3]
 880 04ec 134A     	 ldr r2,.L47
 881 04ee 1360     	 str r3,[r2]
 882 04f0 10E0     	 b .L42
 883              	.L41:
 884              	.LBB5:
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	} else {
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		NWK_DataReq_t *prev = nwkDataReqQueue;
 885              	 .loc 1 264 0
 886 04f2 124B     	 ldr r3,.L47
 887 04f4 1B68     	 ldr r3,[r3]
 888 04f6 FB60     	 str r3,[r7,#12]
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		while (prev->next != req) {
 889              	 .loc 1 265 0
 890 04f8 02E0     	 b .L43
 891              	.L44:
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			prev = prev->next;
 892              	 .loc 1 266 0
 893 04fa FB68     	 ldr r3,[r7,#12]
 894 04fc 1B68     	 ldr r3,[r3]
 895 04fe FB60     	 str r3,[r7,#12]
 896              	.L43:
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		while (prev->next != req) {
 897              	 .loc 1 265 0
 898 0500 FB68     	 ldr r3,[r7,#12]
 899 0502 1A68     	 ldr r2,[r3]
 900 0504 7B68     	 ldr r3,[r7,#4]
 901 0506 9A42     	 cmp r2,r3
 902 0508 F7D1     	 bne .L44
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		}
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		prev->next = ((NWK_DataReq_t *)prev->next)->next;
 903              	 .loc 1 268 0
 904 050a FB68     	 ldr r3,[r7,#12]
 905 050c 1B68     	 ldr r3,[r3]
 906 050e 1A68     	 ldr r2,[r3]
 907 0510 FB68     	 ldr r3,[r7,#12]
 908 0512 1A60     	 str r2,[r3]
 909              	.L42:
 910              	.LBE5:
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	}
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	nwkIb.lock--;
 911              	 .loc 1 271 0
 912 0514 0A4B     	 ldr r3,.L47+4
 913 0516 B3F84830 	 ldrh r3,[r3,#72]
 914 051a 013B     	 subs r3,r3,#1
 915 051c 9AB2     	 uxth r2,r3
 916 051e 084B     	 ldr r3,.L47+4
 917 0520 A3F84820 	 strh r2,[r3,#72]
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	if(req->confirm != NULL)
 918              	 .loc 1 273 0
 919 0524 7B68     	 ldr r3,[r7,#4]
 920 0526 DB69     	 ldr r3,[r3,#28]
 921 0528 002B     	 cmp r3,#0
 922 052a 03D0     	 beq .L46
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	{
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		req->confirm(req);
 923              	 .loc 1 275 0
 924 052c 7B68     	 ldr r3,[r7,#4]
 925 052e DB69     	 ldr r3,[r3,#28]
 926 0530 7868     	 ldr r0,[r7,#4]
 927 0532 9847     	 blx r3
 928              	.LVL11:
 929              	.L46:
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	}
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** }
 930              	 .loc 1 277 0
 931 0534 00BF     	 nop
 932 0536 1037     	 adds r7,r7,#16
 933              	.LCFI23:
 934              	 .cfi_def_cfa_offset 8
 935 0538 BD46     	 mov sp,r7
 936              	.LCFI24:
 937              	 .cfi_def_cfa_register 13
 938              	 
 939 053a 80BD     	 pop {r7,pc}
 940              	.L48:
 941              	 .align 2
 942              	.L47:
 943 053c 00000000 	 .word nwkDataReqQueue
 944 0540 00000000 	 .word nwkIb
 945              	 .cfi_endproc
 946              	.LFE131:
 948              	 .align 1
 949              	 .global nwkDataReqTaskHandler
 950              	 .syntax unified
 951              	 .thumb
 952              	 .thumb_func
 953              	 .fpu softvfp
 955              	nwkDataReqTaskHandler:
 956              	.LFB132:
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** /*************************************************************************//**
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *  @brief Data Request module task handler
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** *****************************************************************************/
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** void nwkDataReqTaskHandler(void)
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** {
 957              	 .loc 1 283 0
 958              	 .cfi_startproc
 959              	 
 960              	 
 961 0544 80B5     	 push {r7,lr}
 962              	.LCFI25:
 963              	 .cfi_def_cfa_offset 8
 964              	 .cfi_offset 7,-8
 965              	 .cfi_offset 14,-4
 966 0546 82B0     	 sub sp,sp,#8
 967              	.LCFI26:
 968              	 .cfi_def_cfa_offset 16
 969 0548 00AF     	 add r7,sp,#0
 970              	.LCFI27:
 971              	 .cfi_def_cfa_register 7
 972              	.LBB6:
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	for (NWK_DataReq_t *req = nwkDataReqQueue; req; req = req->next) {
 973              	 .loc 1 284 0
 974 054a 0F4B     	 ldr r3,.L59
 975 054c 1B68     	 ldr r3,[r3]
 976 054e 7B60     	 str r3,[r7,#4]
 977 0550 14E0     	 b .L50
 978              	.L57:
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		switch (req->state) {
 979              	 .loc 1 285 0
 980 0552 7B68     	 ldr r3,[r7,#4]
 981 0554 1B7A     	 ldrb r3,[r3,#8]
 982 0556 012B     	 cmp r3,#1
 983 0558 0CD0     	 beq .L58
 984 055a 022B     	 cmp r3,#2
 985 055c 06D0     	 beq .L53
 986 055e 002B     	 cmp r3,#0
 987 0560 00D0     	 beq .L54
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		case NWK_DATA_REQ_STATE_INITIAL:
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		{
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			nwkDataReqSendFrame(req);
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			return;
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		}
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		break;
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		case NWK_DATA_REQ_STATE_WAIT_CONF:
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			break;
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		case NWK_DATA_REQ_STATE_CONFIRM:
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		{
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			nwkDataReqConfirm(req);
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			return;
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		}
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		break;
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		default:
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			break;
 988              	 .loc 1 305 0
 989 0562 08E0     	 b .L56
 990              	.L54:
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			return;
 991              	 .loc 1 288 0
 992 0564 7868     	 ldr r0,[r7,#4]
 993 0566 FFF789FD 	 bl nwkDataReqSendFrame
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		}
 994              	 .loc 1 289 0
 995 056a 0AE0     	 b .L49
 996              	.L53:
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 			
 997              	 .loc 1 298 0
 998 056c 7868     	 ldr r0,[r7,#4]
 999 056e FFF7B1FF 	 bl nwkDataReqConfirm
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		}
 1000              	 .loc 1 300 0
 1001 0572 06E0     	 b .L49
 1002              	.L58:
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 
 1003              	 .loc 1 294 0
 1004 0574 00BF     	 nop
 1005              	.L56:
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		switch (req->state) {
 1006              	 .loc 1 284 0 discriminator 2
 1007 0576 7B68     	 ldr r3,[r7,#4]
 1008 0578 1B68     	 ldr r3,[r3]
 1009 057a 7B60     	 str r3,[r7,#4]
 1010              	.L50:
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		switch (req->state) {
 1011              	 .loc 1 284 0 is_stmt 0 discriminator 1
 1012 057c 7B68     	 ldr r3,[r7,#4]
 1013 057e 002B     	 cmp r3,#0
 1014 0580 E7D1     	 bne .L57
 1015              	.L49:
 1016              	.LBE6:
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 		}
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** 	}
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkDataReq.c **** }
 1017              	 .loc 1 308 0 is_stmt 1
 1018 0582 0837     	 adds r7,r7,#8
 1019              	.LCFI28:
 1020              	 .cfi_def_cfa_offset 8
 1021 0584 BD46     	 mov sp,r7
 1022              	.LCFI29:
 1023              	 .cfi_def_cfa_register 13
 1024              	 
 1025 0586 80BD     	 pop {r7,pc}
 1026              	.L60:
 1027              	 .align 2
 1028              	.L59:
 1029 0588 00000000 	 .word nwkDataReqQueue
 1030              	 .cfi_endproc
 1031              	.LFE132:
 1033              	.Letext0:
 1034              	 .file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1035              	 .file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 1036              	 .file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 1037              	 .file 5 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 1038              	 .file 6 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 1039              	 .file 7 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdlib.h"
 1040              	 .file 8 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1041              	 .file 9 "../../../platform/thirdparty/CMSIS/include/core_cm4.h"
 1042              	 .file 10 "../../../platform/sam/utils/cmsis/sam4l/source/templates/system_sam4l.h"
 1043              	 .file 11 "../../../platform/common/utils/interrupt/interrupt_sam_nvic.h"
 1044              	 .file 12 "../../../platform/sam/utils/compiler.h"
 1045              	 .file 13 "../../../platform/common/services/usb/usb_protocol.h"
 1046              	 .file 14 "../../../platform/common/services/usb/udc/udi.h"
 1047              	 .file 15 "../../../platform/common/services/usb/udc/udc_desc.h"
 1048              	 .file 16 "../../../platform/common/services/usb/udc/udd.h"
 1049              	 .file 17 "../../../platform/common/services/usb/class/cdc/device/udi_cdc.h"
 1050              	 .file 18 "../../../platform/common/utils/stdio/stdio_usb/stdio_usb.h"
 1051              	 .file 19 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
 1052              	 .file 20 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 1053              	 .file 21 "../../../stack/LwMesh/TDMA/nwk/inc/nwkDataReq.h"
 1054              	 .file 22 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 1055              	 .file 23 "../../../stack/LwMesh/TDMA/nwk/inc/nwkTx.h"
 1056              	 .file 24 "config/config.h"
 1057              	 .file 25 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkDataReq.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
                            *COM*:00000001 n
    {standard input}:28     .bss.tTS:00000000 $d
    {standard input}:31     .bss.tTS:00000000 tTS
    {standard input}:34     .bss.nwkDataReqQueue:00000000 $d
    {standard input}:37     .bss.nwkDataReqQueue:00000000 nwkDataReqQueue
    {standard input}:40     .text:00000000 $t
    {standard input}:47     .text:00000000 nwkDataReqInit
    {standard input}:80     .text:00000014 $d
    {standard input}:84     .text:00000018 $t
    {standard input}:91     .text:00000018 NWK_DataReq
    {standard input}:171    .text:00000074 $d
    {standard input}:176    .text:0000007c $t
    {standard input}:182    .text:0000007c nwkDataReqSendFrame
    {standard input}:522    .text:000002a8 $d
    {standard input}:530    .text:000002c0 $t
    {standard input}:751    .text:00000468 $d
    {standard input}:764    .text:00000478 nwkDataReqTxConf
    {standard input}:758    .text:00000478 $t
    {standard input}:841    .text:000004cc $d
    {standard input}:846    .text:000004d4 $t
    {standard input}:852    .text:000004d4 nwkDataReqConfirm
    {standard input}:943    .text:0000053c $d
    {standard input}:948    .text:00000544 $t
    {standard input}:955    .text:00000544 nwkDataReqTaskHandler
    {standard input}:1029   .text:00000588 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
nwkIb
nwkFrameAlloc
nwkFrameAlloc_LLDN
nwkTxBeaconFrameLLDN
nwkTxMacCommandFrameLLDN
memcpy
nwkTxBeaconFrame
nwkTxFrame
nwkFrameFree
