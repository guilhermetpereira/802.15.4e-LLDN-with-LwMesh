   1               		.file	"nwkRx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	nwkFramePayloadSize:
  13               	.LFB65:
  14               		.file 1 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
   1:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /**
   2:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \file nwkFrame.h
   3:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   4:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \brief Frame buffers management interface
   5:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   6:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   8:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  10:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  13:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  16:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  20:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  23:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  26:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  38:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  40:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  41:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  42:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  43:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*
  44:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  46:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  48:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  49:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #ifndef _NWK_FRAME_H_
  50:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define _NWK_FRAME_H_
  51:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  52:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Includes ---------------------------------------------------------------*/
  53:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include <stdint.h>
  54:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include "compiler.h"
  55:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  56:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Definitions ------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define NWK_FRAME_MAX_PAYLOAD_SIZE   127
  58:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  59:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Types ------------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_SET(1)
  61:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameHeader_t {
  62:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  63:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  64:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstPanId;
  65:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstAddr;
  66:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  67:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  68:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  69:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t ackRequest : 1;
  70:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t security   : 1;
  71:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t linkLocal  : 1;
  72:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t multicast  : 1;
  73:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t beacon     : 1;
  74:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved   : 3;
  75:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} nwkFcf;
  76:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t nwkSeq;
  77:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkSrcAddr;
  78:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkDstAddr;
  79:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  80:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkSrcEndpoint : 4;
  81:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkDstEndpoint : 4;
  82:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
  83:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameHeader_t;
  84:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  85:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeader_t {
  86:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  87:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  88:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcPanId;
  89:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  90:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
  91:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
  92:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t beaconOrder			: 4;
  93:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t superframeOrder		: 4;
  94:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t finalCAPslot			: 4;
  95:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t BatteryLifeExtension	: 1;
  96:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t Reserved				: 1;
  97:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t PANCoordinator			: 1;
  98:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t AssociationPermit		: 1;
  99:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSFS;
 100:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macGTS;
 101:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macPending;
 102:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeader_t;
 103:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 104:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameMulticastHeader_t {
 105:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nonMemberRadius    : 4;
 106:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxNonMemberRadius : 4;
 107:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t memberRadius       : 4;
 108:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxMemberRadius    : 4;
 109:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameMulticastHeader_t;
 110:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 111:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct NwkFrame_t {
 112:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t state;
 113:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t size;
 114:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 115:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 116:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameHeader_t header;
 117:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeader_t beacon;
 118:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t data[NWK_FRAME_MAX_PAYLOAD_SIZE];
 119:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 120:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 121:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t *payload;
 122:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 123:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 124:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 125:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t lqi;
 126:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			int8_t rssi;
 127:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} rx;
 128:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 129:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 130:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t status;
 131:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint16_t timeout;
 132:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t control;
 133:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			void (*confirm)(struct NwkFrame_t *frame);
 134:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} tx;
 135:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 136:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrame_t;
 137:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_RESET()
 138:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Prototypes -------------------------------------------------------------*/
 139:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameInit(void);
 140:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc(void);
 141:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameFree(NwkFrame_t *frame);
 142:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);
 143:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameCommandInit(NwkFrame_t *frame);
 144:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 145:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Implementations --------------------------------------------------------*/
 146:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 147:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*************************************************************************//**
 148:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** *****************************************************************************/
 149:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** static inline uint8_t nwkFramePayloadSize(NwkFrame_t *frame)
 150:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** {
  15               		.loc 1 150 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25 0004 00D0      		rcall .
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 6
  28 0006 CDB7      		in r28,__SP_L__
  29 0008 DEB7      		in r29,__SP_H__
  30               	.LCFI3:
  31               		.cfi_def_cfa_register 28
  32               	/* prologue: function */
  33               	/* frame size = 2 */
  34               	/* stack size = 4 */
  35               	.L__stack_usage = 4
  36 000a 9A83      		std Y+2,r25
  37 000c 8983      		std Y+1,r24
 151:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	return frame->size - (frame->payload - frame->data);
  38               		.loc 1 151 0
  39 000e 8981      		ldd r24,Y+1
  40 0010 9A81      		ldd r25,Y+2
  41 0012 FC01      		movw r30,r24
  42 0014 4181      		ldd r20,Z+1
  43 0016 8981      		ldd r24,Y+1
  44 0018 9A81      		ldd r25,Y+2
  45 001a 8F57      		subi r24,127
  46 001c 9F4F      		sbci r25,-1
  47 001e FC01      		movw r30,r24
  48 0020 8081      		ld r24,Z
  49 0022 9181      		ldd r25,Z+1
  50 0024 9C01      		movw r18,r24
  51 0026 8981      		ldd r24,Y+1
  52 0028 9A81      		ldd r25,Y+2
  53 002a 0296      		adiw r24,2
  54 002c B901      		movw r22,r18
  55 002e 681B      		sub r22,r24
  56 0030 790B      		sbc r23,r25
  57 0032 CB01      		movw r24,r22
  58 0034 742F      		mov r23,r20
  59 0036 781B      		sub r23,r24
  60 0038 872F      		mov r24,r23
  61               	/* epilogue start */
 152:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** }
  62               		.loc 1 152 0
  63 003a 0F90      		pop __tmp_reg__
  64 003c 0F90      		pop __tmp_reg__
  65 003e DF91      		pop r29
  66 0040 CF91      		pop r28
  67 0042 0895      		ret
  68               		.cfi_endproc
  69               	.LFE65:
  71               		.section	.bss.nwkRxDuplicateRejectionTable,"aw",@nobits
  74               	nwkRxDuplicateRejectionTable:
  75 0000 0000 0000 		.zero	250
  75      0000 0000 
  75      0000 0000 
  75      0000 0000 
  75      0000 0000 
  76               		.section	.bss.nwkRxAckControl,"aw",@nobits
  79               	nwkRxAckControl:
  80 0000 00        		.zero	1
  81               		.section	.bss.nwkRxDuplicateRejectionTimer,"aw",@nobits
  84               	nwkRxDuplicateRejectionTimer:
  85 0000 0000 0000 		.zero	13
  85      0000 0000 
  85      0000 0000 
  85      00
  86               		.text
  87               	.global	nwkRxInit
  89               	nwkRxInit:
  90               	.LFB66:
  91               		.file 2 "../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \file nwkRx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \brief Receive routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkGroup.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRoute.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkCommand.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkSecurity.h"
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRouteDiscovery.h"
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Definitions ------------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL   100 /* ms */
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define DUPLICATE_REJECTION_TTL	\
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	((NWK_DUPLICATE_REJECTION_TTL /	\
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL) + 1)
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_SERVICE_ENDPOINT_ID    0
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Types ------------------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** enum {
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_RECEIVED = 0x20,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_DECRYPT  = 0x21,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_INDICATE = 0x22,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_ROUTE    = 0x23,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_FINISH   = 0x24,
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_BEACON   = 0x25,
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** };
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** typedef struct NwkDuplicateRejectionEntry_t {
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint16_t src;
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t seq;
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t mask;
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t ttl;
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** } NwkDuplicateRejectionEntry_t;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Prototypes -------------------------------------------------------------*/
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer);
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind);
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Variables --------------------------------------------------------------*/
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static NwkDuplicateRejectionEntry_t nwkRxDuplicateRejectionTable[
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DUPLICATE_REJECTION_TABLE_SIZE];
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static uint8_t nwkRxAckControl;
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static SYS_Timer_t nwkRxDuplicateRejectionTimer;
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Implementations --------------------------------------------------------*/
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Initializes the Rx module
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxInit(void)
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
  92               		.loc 2 106 0
  93               		.cfi_startproc
  94 0044 CF93      		push r28
  95               	.LCFI4:
  96               		.cfi_def_cfa_offset 3
  97               		.cfi_offset 28, -2
  98 0046 DF93      		push r29
  99               	.LCFI5:
 100               		.cfi_def_cfa_offset 4
 101               		.cfi_offset 29, -3
 102 0048 1F92      		push __zero_reg__
 103               	.LCFI6:
 104               		.cfi_def_cfa_offset 5
 105 004a CDB7      		in r28,__SP_L__
 106 004c DEB7      		in r29,__SP_H__
 107               	.LCFI7:
 108               		.cfi_def_cfa_register 28
 109               	/* prologue: function */
 110               	/* frame size = 1 */
 111               	/* stack size = 3 */
 112               	.L__stack_usage = 3
 113               	.LBB2:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 114               		.loc 2 107 0
 115 004e 1982      		std Y+1,__zero_reg__
 116 0050 00C0      		rjmp .L4
 117               	.L5:
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxDuplicateRejectionTable[i].ttl = 0;
 118               		.loc 2 108 0 discriminator 3
 119 0052 8981      		ldd r24,Y+1
 120 0054 282F      		mov r18,r24
 121 0056 30E0      		ldi r19,0
 122 0058 C901      		movw r24,r18
 123 005a 880F      		lsl r24
 124 005c 991F      		rol r25
 125 005e 880F      		lsl r24
 126 0060 991F      		rol r25
 127 0062 820F      		add r24,r18
 128 0064 931F      		adc r25,r19
 129 0066 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 130 0068 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 131 006a FC01      		movw r30,r24
 132 006c 1082      		st Z,__zero_reg__
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 133               		.loc 2 107 0 discriminator 3
 134 006e 8981      		ldd r24,Y+1
 135 0070 8F5F      		subi r24,lo8(-(1))
 136 0072 8983      		std Y+1,r24
 137               	.L4:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 138               		.loc 2 107 0 is_stmt 0 discriminator 1
 139 0074 8981      		ldd r24,Y+1
 140 0076 8233      		cpi r24,lo8(50)
 141 0078 00F0      		brlo .L5
 142               	.LBE2:
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.interval
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL;
 143               		.loc 2 112 0 is_stmt 1
 144 007a 84E6      		ldi r24,lo8(100)
 145 007c 90E0      		ldi r25,0
 146 007e A0E0      		ldi r26,0
 147 0080 B0E0      		ldi r27,0
 148 0082 8093 0000 		sts nwkRxDuplicateRejectionTimer+6,r24
 149 0086 9093 0000 		sts nwkRxDuplicateRejectionTimer+6+1,r25
 150 008a A093 0000 		sts nwkRxDuplicateRejectionTimer+6+2,r26
 151 008e B093 0000 		sts nwkRxDuplicateRejectionTimer+6+3,r27
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE;
 152               		.loc 2 113 0
 153 0092 1092 0000 		sts nwkRxDuplicateRejectionTimer+10,__zero_reg__
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.handler
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= nwkRxDuplicateRejectionTimerHandler;
 154               		.loc 2 115 0
 155 0096 80E0      		ldi r24,lo8(gs(nwkRxDuplicateRejectionTimerHandler))
 156 0098 90E0      		ldi r25,hi8(gs(nwkRxDuplicateRejectionTimerHandler))
 157 009a 9093 0000 		sts nwkRxDuplicateRejectionTimer+11+1,r25
 158 009e 8093 0000 		sts nwkRxDuplicateRejectionTimer+11,r24
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_OpenEndpoint(NWK_SERVICE_ENDPOINT_ID, nwkRxSeriveDataInd);
 159               		.loc 2 117 0
 160 00a2 60E0      		ldi r22,lo8(gs(nwkRxSeriveDataInd))
 161 00a4 70E0      		ldi r23,hi8(gs(nwkRxSeriveDataInd))
 162 00a6 80E0      		ldi r24,0
 163 00a8 0E94 0000 		call NWK_OpenEndpoint
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 164               		.loc 2 118 0
 165 00ac 0000      		nop
 166               	/* epilogue start */
 167 00ae 0F90      		pop __tmp_reg__
 168 00b0 DF91      		pop r29
 169 00b2 CF91      		pop r28
 170 00b4 0895      		ret
 171               		.cfi_endproc
 172               	.LFE66:
 174               	.global	PHY_DataInd
 176               	PHY_DataInd:
 177               	.LFB67:
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void PHY_DataInd(PHY_DataInd_t *ind)
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 178               		.loc 2 123 0
 179               		.cfi_startproc
 180 00b6 CF93      		push r28
 181               	.LCFI8:
 182               		.cfi_def_cfa_offset 3
 183               		.cfi_offset 28, -2
 184 00b8 DF93      		push r29
 185               	.LCFI9:
 186               		.cfi_def_cfa_offset 4
 187               		.cfi_offset 29, -3
 188 00ba 00D0      		rcall .
 189 00bc 00D0      		rcall .
 190               	.LCFI10:
 191               		.cfi_def_cfa_offset 8
 192 00be CDB7      		in r28,__SP_L__
 193 00c0 DEB7      		in r29,__SP_H__
 194               	.LCFI11:
 195               		.cfi_def_cfa_register 28
 196               	/* prologue: function */
 197               	/* frame size = 4 */
 198               	/* stack size = 6 */
 199               	.L__stack_usage = 6
 200 00c2 9C83      		std Y+4,r25
 201 00c4 8B83      		std Y+3,r24
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame;
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(0x88 == ind->data[1])
 202               		.loc 2 126 0
 203 00c6 8B81      		ldd r24,Y+3
 204 00c8 9C81      		ldd r25,Y+4
 205 00ca FC01      		movw r30,r24
 206 00cc 8081      		ld r24,Z
 207 00ce 9181      		ldd r25,Z+1
 208 00d0 0196      		adiw r24,1
 209 00d2 FC01      		movw r30,r24
 210 00d4 8081      		ld r24,Z
 211 00d6 8838      		cpi r24,lo8(-120)
 212 00d8 01F4      		brne .L7
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x61 != ind->data[0] && 0x41 != ind->data[0]) || ind->size < sizeof(NwkFrameHeader_t))
 213               		.loc 2 128 0
 214 00da 8B81      		ldd r24,Y+3
 215 00dc 9C81      		ldd r25,Y+4
 216 00de FC01      		movw r30,r24
 217 00e0 8081      		ld r24,Z
 218 00e2 9181      		ldd r25,Z+1
 219 00e4 FC01      		movw r30,r24
 220 00e6 8081      		ld r24,Z
 221 00e8 8136      		cpi r24,lo8(97)
 222 00ea 01F0      		breq .L8
 223               		.loc 2 128 0 is_stmt 0 discriminator 1
 224 00ec 8B81      		ldd r24,Y+3
 225 00ee 9C81      		ldd r25,Y+4
 226 00f0 FC01      		movw r30,r24
 227 00f2 8081      		ld r24,Z
 228 00f4 9181      		ldd r25,Z+1
 229 00f6 FC01      		movw r30,r24
 230 00f8 8081      		ld r24,Z
 231 00fa 8134      		cpi r24,lo8(65)
 232 00fc 01F0      		breq .+2
 233 00fe 00C0      		rjmp .L19
 234               	.L8:
 235               		.loc 2 128 0 discriminator 3
 236 0100 8B81      		ldd r24,Y+3
 237 0102 9C81      		ldd r25,Y+4
 238 0104 FC01      		movw r30,r24
 239 0106 8281      		ldd r24,Z+2
 240 0108 8031      		cpi r24,lo8(16)
 241 010a 00F4      		brsh .L10
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 242               		.loc 2 130 0 is_stmt 1
 243 010c 00C0      		rjmp .L19
 244               	.L7:
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x80 == ind->data[1])
 245               		.loc 2 133 0
 246 010e 8B81      		ldd r24,Y+3
 247 0110 9C81      		ldd r25,Y+4
 248 0112 FC01      		movw r30,r24
 249 0114 8081      		ld r24,Z
 250 0116 9181      		ldd r25,Z+1
 251 0118 0196      		adiw r24,1
 252 011a FC01      		movw r30,r24
 253 011c 8081      		ld r24,Z
 254 011e 8038      		cpi r24,lo8(-128)
 255 0120 01F0      		breq .+2
 256 0122 00C0      		rjmp .L20
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x00 != ind->data[0]) || ind->size < (sizeof(NwkFrameBeaconHeader_t)))
 257               		.loc 2 135 0
 258 0124 8B81      		ldd r24,Y+3
 259 0126 9C81      		ldd r25,Y+4
 260 0128 FC01      		movw r30,r24
 261 012a 8081      		ld r24,Z
 262 012c 9181      		ldd r25,Z+1
 263 012e FC01      		movw r30,r24
 264 0130 8081      		ld r24,Z
 265 0132 8823      		tst r24
 266 0134 01F0      		breq .+2
 267 0136 00C0      		rjmp .L21
 268               		.loc 2 135 0 is_stmt 0 discriminator 1
 269 0138 8B81      		ldd r24,Y+3
 270 013a 9C81      		ldd r25,Y+4
 271 013c FC01      		movw r30,r24
 272 013e 8281      		ldd r24,Z+2
 273 0140 8B30      		cpi r24,lo8(11)
 274 0142 00F4      		brsh .+2
 275 0144 00C0      		rjmp .L21
 276               	.L10:
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}		
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (frame = nwkFrameAlloc())) {
 277               		.loc 2 145 0 is_stmt 1
 278 0146 0E94 0000 		call nwkFrameAlloc
 279 014a 9A83      		std Y+2,r25
 280 014c 8983      		std Y+1,r24
 281 014e 8981      		ldd r24,Y+1
 282 0150 9A81      		ldd r25,Y+2
 283 0152 892B      		or r24,r25
 284 0154 01F4      		brne .+2
 285 0156 00C0      		rjmp .L22
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = ((0x88 == ind->data[1]) ? NWK_RX_STATE_RECEIVED : NWK_RX_STATE_BEACON);
 286               		.loc 2 149 0
 287 0158 8B81      		ldd r24,Y+3
 288 015a 9C81      		ldd r25,Y+4
 289 015c FC01      		movw r30,r24
 290 015e 8081      		ld r24,Z
 291 0160 9181      		ldd r25,Z+1
 292 0162 0196      		adiw r24,1
 293 0164 FC01      		movw r30,r24
 294 0166 8081      		ld r24,Z
 295 0168 8838      		cpi r24,lo8(-120)
 296 016a 01F4      		brne .L15
 297               		.loc 2 149 0 is_stmt 0 discriminator 1
 298 016c 20E2      		ldi r18,lo8(32)
 299 016e 00C0      		rjmp .L16
 300               	.L15:
 301               		.loc 2 149 0 discriminator 2
 302 0170 25E2      		ldi r18,lo8(37)
 303               	.L16:
 304               		.loc 2 149 0 discriminator 4
 305 0172 8981      		ldd r24,Y+1
 306 0174 9A81      		ldd r25,Y+2
 307 0176 FC01      		movw r30,r24
 308 0178 2083      		st Z,r18
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(frame->state == NWK_RX_STATE_BEACON)
 309               		.loc 2 151 0 is_stmt 1 discriminator 4
 310 017a 8981      		ldd r24,Y+1
 311 017c 9A81      		ldd r25,Y+2
 312 017e FC01      		movw r30,r24
 313 0180 8081      		ld r24,Z
 314 0182 8532      		cpi r24,lo8(37)
 315 0184 01F4      		brne .L17
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->size += sizeof(NwkFrameBeaconHeader_t);
 316               		.loc 2 153 0
 317 0186 8981      		ldd r24,Y+1
 318 0188 9A81      		ldd r25,Y+2
 319 018a FC01      		movw r30,r24
 320 018c 8181      		ldd r24,Z+1
 321 018e 2BE0      		ldi r18,lo8(11)
 322 0190 280F      		add r18,r24
 323 0192 8981      		ldd r24,Y+1
 324 0194 9A81      		ldd r25,Y+2
 325 0196 FC01      		movw r30,r24
 326 0198 2183      		std Z+1,r18
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->payload += sizeof(NwkFrameBeaconHeader_t);
 327               		.loc 2 154 0
 328 019a 8981      		ldd r24,Y+1
 329 019c 9A81      		ldd r25,Y+2
 330 019e 8F57      		subi r24,127
 331 01a0 9F4F      		sbci r25,-1
 332 01a2 FC01      		movw r30,r24
 333 01a4 8081      		ld r24,Z
 334 01a6 9181      		ldd r25,Z+1
 335 01a8 9C01      		movw r18,r24
 336 01aa 255F      		subi r18,-11
 337 01ac 3F4F      		sbci r19,-1
 338 01ae 8981      		ldd r24,Y+1
 339 01b0 9A81      		ldd r25,Y+2
 340 01b2 8F57      		subi r24,127
 341 01b4 9F4F      		sbci r25,-1
 342 01b6 FC01      		movw r30,r24
 343 01b8 3183      		std Z+1,r19
 344 01ba 2083      		st Z,r18
 345 01bc 00C0      		rjmp .L18
 346               	.L17:
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->size += sizeof(NwkFrameHeader_t);
 347               		.loc 2 158 0
 348 01be 8981      		ldd r24,Y+1
 349 01c0 9A81      		ldd r25,Y+2
 350 01c2 FC01      		movw r30,r24
 351 01c4 8181      		ldd r24,Z+1
 352 01c6 20E1      		ldi r18,lo8(16)
 353 01c8 280F      		add r18,r24
 354 01ca 8981      		ldd r24,Y+1
 355 01cc 9A81      		ldd r25,Y+2
 356 01ce FC01      		movw r30,r24
 357 01d0 2183      		std Z+1,r18
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->payload += sizeof(NwkFrameHeader_t);
 358               		.loc 2 159 0
 359 01d2 8981      		ldd r24,Y+1
 360 01d4 9A81      		ldd r25,Y+2
 361 01d6 8F57      		subi r24,127
 362 01d8 9F4F      		sbci r25,-1
 363 01da FC01      		movw r30,r24
 364 01dc 8081      		ld r24,Z
 365 01de 9181      		ldd r25,Z+1
 366 01e0 9C01      		movw r18,r24
 367 01e2 205F      		subi r18,-16
 368 01e4 3F4F      		sbci r19,-1
 369 01e6 8981      		ldd r24,Y+1
 370 01e8 9A81      		ldd r25,Y+2
 371 01ea 8F57      		subi r24,127
 372 01ec 9F4F      		sbci r25,-1
 373 01ee FC01      		movw r30,r24
 374 01f0 3183      		std Z+1,r19
 375 01f2 2083      		st Z,r18
 376               	.L18:
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size = ind->size;
 377               		.loc 2 162 0
 378 01f4 8B81      		ldd r24,Y+3
 379 01f6 9C81      		ldd r25,Y+4
 380 01f8 FC01      		movw r30,r24
 381 01fa 2281      		ldd r18,Z+2
 382 01fc 8981      		ldd r24,Y+1
 383 01fe 9A81      		ldd r25,Y+2
 384 0200 FC01      		movw r30,r24
 385 0202 2183      		std Z+1,r18
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.lqi = ind->lqi;
 386               		.loc 2 163 0
 387 0204 8B81      		ldd r24,Y+3
 388 0206 9C81      		ldd r25,Y+4
 389 0208 FC01      		movw r30,r24
 390 020a 2381      		ldd r18,Z+3
 391 020c 8981      		ldd r24,Y+1
 392 020e 9A81      		ldd r25,Y+2
 393 0210 8D57      		subi r24,125
 394 0212 9F4F      		sbci r25,-1
 395 0214 FC01      		movw r30,r24
 396 0216 2083      		st Z,r18
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.rssi = ind->rssi;
 397               		.loc 2 164 0
 398 0218 8B81      		ldd r24,Y+3
 399 021a 9C81      		ldd r25,Y+4
 400 021c FC01      		movw r30,r24
 401 021e 2481      		ldd r18,Z+4
 402 0220 8981      		ldd r24,Y+1
 403 0222 9A81      		ldd r25,Y+2
 404 0224 8C57      		subi r24,124
 405 0226 9F4F      		sbci r25,-1
 406 0228 FC01      		movw r30,r24
 407 022a 2083      		st Z,r18
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	memcpy(frame->data, ind->data, ind->size);
 408               		.loc 2 165 0
 409 022c 8B81      		ldd r24,Y+3
 410 022e 9C81      		ldd r25,Y+4
 411 0230 FC01      		movw r30,r24
 412 0232 8281      		ldd r24,Z+2
 413 0234 482F      		mov r20,r24
 414 0236 50E0      		ldi r21,0
 415 0238 8B81      		ldd r24,Y+3
 416 023a 9C81      		ldd r25,Y+4
 417 023c FC01      		movw r30,r24
 418 023e 2081      		ld r18,Z
 419 0240 3181      		ldd r19,Z+1
 420 0242 8981      		ldd r24,Y+1
 421 0244 9A81      		ldd r25,Y+2
 422 0246 0296      		adiw r24,2
 423 0248 B901      		movw r22,r18
 424 024a 0E94 0000 		call memcpy
 425 024e 00C0      		rjmp .L6
 426               	.L19:
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 427               		.loc 2 130 0
 428 0250 0000      		nop
 429 0252 00C0      		rjmp .L6
 430               	.L20:
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 431               		.loc 2 142 0
 432 0254 0000      		nop
 433 0256 00C0      		rjmp .L6
 434               	.L21:
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}		
 435               		.loc 2 137 0
 436 0258 0000      		nop
 437 025a 00C0      		rjmp .L6
 438               	.L22:
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 439               		.loc 2 146 0
 440 025c 0000      		nop
 441               	.L6:
 442               	/* epilogue start */
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 443               		.loc 2 166 0
 444 025e 0F90      		pop __tmp_reg__
 445 0260 0F90      		pop __tmp_reg__
 446 0262 0F90      		pop __tmp_reg__
 447 0264 0F90      		pop __tmp_reg__
 448 0266 DF91      		pop r29
 449 0268 CF91      		pop r28
 450 026a 0895      		ret
 451               		.cfi_endproc
 452               	.LFE67:
 455               	nwkRxSendAck:
 456               	.LFB68:
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxSendAck(NwkFrame_t *frame)
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 457               		.loc 2 171 0
 458               		.cfi_startproc
 459 026c CF93      		push r28
 460               	.LCFI12:
 461               		.cfi_def_cfa_offset 3
 462               		.cfi_offset 28, -2
 463 026e DF93      		push r29
 464               	.LCFI13:
 465               		.cfi_def_cfa_offset 4
 466               		.cfi_offset 29, -3
 467 0270 00D0      		rcall .
 468 0272 00D0      		rcall .
 469 0274 00D0      		rcall .
 470               	.LCFI14:
 471               		.cfi_def_cfa_offset 10
 472 0276 CDB7      		in r28,__SP_L__
 473 0278 DEB7      		in r29,__SP_H__
 474               	.LCFI15:
 475               		.cfi_def_cfa_register 28
 476               	/* prologue: function */
 477               	/* frame size = 6 */
 478               	/* stack size = 8 */
 479               	.L__stack_usage = 8
 480 027a 9E83      		std Y+6,r25
 481 027c 8D83      		std Y+5,r24
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *ack;
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkCommandAck_t *command;
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (ack = nwkFrameAlloc())) {
 482               		.loc 2 175 0
 483 027e 0E94 0000 		call nwkFrameAlloc
 484 0282 9A83      		std Y+2,r25
 485 0284 8983      		std Y+1,r24
 486 0286 8981      		ldd r24,Y+1
 487 0288 9A81      		ldd r25,Y+2
 488 028a 892B      		or r24,r25
 489 028c 01F4      		brne .+2
 490 028e 00C0      		rjmp .L26
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size += sizeof(NwkFrameHeader_t);
 491               		.loc 2 179 0
 492 0290 8D81      		ldd r24,Y+5
 493 0292 9E81      		ldd r25,Y+6
 494 0294 FC01      		movw r30,r24
 495 0296 8181      		ldd r24,Z+1
 496 0298 20E1      		ldi r18,lo8(16)
 497 029a 280F      		add r18,r24
 498 029c 8D81      		ldd r24,Y+5
 499 029e 9E81      		ldd r25,Y+6
 500 02a0 FC01      		movw r30,r24
 501 02a2 2183      		std Z+1,r18
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->payload += sizeof(NwkFrameHeader_t);
 502               		.loc 2 180 0
 503 02a4 8D81      		ldd r24,Y+5
 504 02a6 9E81      		ldd r25,Y+6
 505 02a8 8F57      		subi r24,127
 506 02aa 9F4F      		sbci r25,-1
 507 02ac FC01      		movw r30,r24
 508 02ae 8081      		ld r24,Z
 509 02b0 9181      		ldd r25,Z+1
 510 02b2 9C01      		movw r18,r24
 511 02b4 205F      		subi r18,-16
 512 02b6 3F4F      		sbci r19,-1
 513 02b8 8D81      		ldd r24,Y+5
 514 02ba 9E81      		ldd r25,Y+6
 515 02bc 8F57      		subi r24,127
 516 02be 9F4F      		sbci r25,-1
 517 02c0 FC01      		movw r30,r24
 518 02c2 3183      		std Z+1,r19
 519 02c4 2083      		st Z,r18
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkFrameCommandInit(ack);
 520               		.loc 2 182 0
 521 02c6 8981      		ldd r24,Y+1
 522 02c8 9A81      		ldd r25,Y+2
 523 02ca 0E94 0000 		call nwkFrameCommandInit
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->size += sizeof(NwkCommandAck_t);
 524               		.loc 2 184 0
 525 02ce 8981      		ldd r24,Y+1
 526 02d0 9A81      		ldd r25,Y+2
 527 02d2 FC01      		movw r30,r24
 528 02d4 8181      		ldd r24,Z+1
 529 02d6 23E0      		ldi r18,lo8(3)
 530 02d8 280F      		add r18,r24
 531 02da 8981      		ldd r24,Y+1
 532 02dc 9A81      		ldd r25,Y+2
 533 02de FC01      		movw r30,r24
 534 02e0 2183      		std Z+1,r18
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->tx.confirm = NULL;
 535               		.loc 2 185 0
 536 02e2 8981      		ldd r24,Y+1
 537 02e4 9A81      		ldd r25,Y+2
 538 02e6 8957      		subi r24,121
 539 02e8 9F4F      		sbci r25,-1
 540 02ea FC01      		movw r30,r24
 541 02ec 1182      		std Z+1,__zero_reg__
 542 02ee 1082      		st Z,__zero_reg__
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkFcf.security = frame->header.nwkFcf.security;
 543               		.loc 2 187 0
 544 02f0 8D81      		ldd r24,Y+5
 545 02f2 9E81      		ldd r25,Y+6
 546 02f4 FC01      		movw r30,r24
 547 02f6 8385      		ldd r24,Z+11
 548 02f8 81FB      		bst r24,1
 549 02fa 2227      		clr r18
 550 02fc 20F9      		bld r18,0
 551 02fe 8981      		ldd r24,Y+1
 552 0300 9A81      		ldd r25,Y+2
 553 0302 2170      		andi r18,lo8(1)
 554 0304 220F      		lsl r18
 555 0306 FC01      		movw r30,r24
 556 0308 3385      		ldd r19,Z+11
 557 030a 3D7F      		andi r19,lo8(-3)
 558 030c 232B      		or r18,r19
 559 030e FC01      		movw r30,r24
 560 0310 2387      		std Z+11,r18
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 561               		.loc 2 188 0
 562 0312 8D81      		ldd r24,Y+5
 563 0314 9E81      		ldd r25,Y+6
 564 0316 FC01      		movw r30,r24
 565 0318 2585      		ldd r18,Z+13
 566 031a 3685      		ldd r19,Z+14
 567 031c 8981      		ldd r24,Y+1
 568 031e 9A81      		ldd r25,Y+2
 569 0320 FC01      		movw r30,r24
 570 0322 308B      		std Z+16,r19
 571 0324 2787      		std Z+15,r18
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command = (NwkCommandAck_t *)ack->payload;
 572               		.loc 2 190 0
 573 0326 8981      		ldd r24,Y+1
 574 0328 9A81      		ldd r25,Y+2
 575 032a 8F57      		subi r24,127
 576 032c 9F4F      		sbci r25,-1
 577 032e FC01      		movw r30,r24
 578 0330 8081      		ld r24,Z
 579 0332 9181      		ldd r25,Z+1
 580 0334 9C83      		std Y+4,r25
 581 0336 8B83      		std Y+3,r24
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->id = NWK_COMMAND_ACK;
 582               		.loc 2 191 0
 583 0338 8B81      		ldd r24,Y+3
 584 033a 9C81      		ldd r25,Y+4
 585 033c FC01      		movw r30,r24
 586 033e 1082      		st Z,__zero_reg__
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->control = nwkRxAckControl;
 587               		.loc 2 192 0
 588 0340 2091 0000 		lds r18,nwkRxAckControl
 589 0344 8B81      		ldd r24,Y+3
 590 0346 9C81      		ldd r25,Y+4
 591 0348 FC01      		movw r30,r24
 592 034a 2283      		std Z+2,r18
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->seq = frame->header.nwkSeq;
 593               		.loc 2 193 0
 594 034c 8D81      		ldd r24,Y+5
 595 034e 9E81      		ldd r25,Y+6
 596 0350 FC01      		movw r30,r24
 597 0352 2485      		ldd r18,Z+12
 598 0354 8B81      		ldd r24,Y+3
 599 0356 9C81      		ldd r25,Y+4
 600 0358 FC01      		movw r30,r24
 601 035a 2183      		std Z+1,r18
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkTxFrame(ack);
 602               		.loc 2 195 0
 603 035c 8981      		ldd r24,Y+1
 604 035e 9A81      		ldd r25,Y+2
 605 0360 0E94 0000 		call nwkTxFrame
 606 0364 00C0      		rjmp .L23
 607               	.L26:
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 608               		.loc 2 176 0
 609 0366 0000      		nop
 610               	.L23:
 611               	/* epilogue start */
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 612               		.loc 2 196 0
 613 0368 2696      		adiw r28,6
 614 036a 0FB6      		in __tmp_reg__,__SREG__
 615 036c F894      		cli
 616 036e DEBF      		out __SP_H__,r29
 617 0370 0FBE      		out __SREG__,__tmp_reg__
 618 0372 CDBF      		out __SP_L__,r28
 619 0374 DF91      		pop r29
 620 0376 CF91      		pop r28
 621 0378 0895      		ret
 622               		.cfi_endproc
 623               	.LFE68:
 625               	.global	NWK_SetAckControl
 627               	NWK_SetAckControl:
 628               	.LFB69:
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void NWK_SetAckControl(uint8_t control)
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 629               		.loc 2 201 0
 630               		.cfi_startproc
 631 037a CF93      		push r28
 632               	.LCFI16:
 633               		.cfi_def_cfa_offset 3
 634               		.cfi_offset 28, -2
 635 037c DF93      		push r29
 636               	.LCFI17:
 637               		.cfi_def_cfa_offset 4
 638               		.cfi_offset 29, -3
 639 037e 1F92      		push __zero_reg__
 640               	.LCFI18:
 641               		.cfi_def_cfa_offset 5
 642 0380 CDB7      		in r28,__SP_L__
 643 0382 DEB7      		in r29,__SP_H__
 644               	.LCFI19:
 645               		.cfi_def_cfa_register 28
 646               	/* prologue: function */
 647               	/* frame size = 1 */
 648               	/* stack size = 3 */
 649               	.L__stack_usage = 3
 650 0384 8983      		std Y+1,r24
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = control;
 651               		.loc 2 202 0
 652 0386 8981      		ldd r24,Y+1
 653 0388 8093 0000 		sts nwkRxAckControl,r24
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 654               		.loc 2 203 0
 655 038c 0000      		nop
 656               	/* epilogue start */
 657 038e 0F90      		pop __tmp_reg__
 658 0390 DF91      		pop r29
 659 0392 CF91      		pop r28
 660 0394 0895      		ret
 661               		.cfi_endproc
 662               	.LFE69:
 665               	nwkRxDuplicateRejectionTimerHandler:
 666               	.LFB70:
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxDecryptConf(NwkFrame_t *frame, bool status)
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (status) {
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_INDICATE;
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else {
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_FINISH;
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer)
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 667               		.loc 2 223 0
 668               		.cfi_startproc
 669 0396 CF93      		push r28
 670               	.LCFI20:
 671               		.cfi_def_cfa_offset 3
 672               		.cfi_offset 28, -2
 673 0398 DF93      		push r29
 674               	.LCFI21:
 675               		.cfi_def_cfa_offset 4
 676               		.cfi_offset 29, -3
 677 039a 00D0      		rcall .
 678 039c 00D0      		rcall .
 679               	.LCFI22:
 680               		.cfi_def_cfa_offset 8
 681 039e CDB7      		in r28,__SP_L__
 682 03a0 DEB7      		in r29,__SP_H__
 683               	.LCFI23:
 684               		.cfi_def_cfa_register 28
 685               	/* prologue: function */
 686               	/* frame size = 4 */
 687               	/* stack size = 6 */
 688               	.L__stack_usage = 6
 689 03a2 9C83      		std Y+4,r25
 690 03a4 8B83      		std Y+3,r24
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool restart = false;
 691               		.loc 2 224 0
 692 03a6 1982      		std Y+1,__zero_reg__
 693               	.LBB3:
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 694               		.loc 2 226 0
 695 03a8 1A82      		std Y+2,__zero_reg__
 696 03aa 00C0      		rjmp .L29
 697               	.L31:
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 698               		.loc 2 227 0
 699 03ac 8A81      		ldd r24,Y+2
 700 03ae 282F      		mov r18,r24
 701 03b0 30E0      		ldi r19,0
 702 03b2 C901      		movw r24,r18
 703 03b4 880F      		lsl r24
 704 03b6 991F      		rol r25
 705 03b8 880F      		lsl r24
 706 03ba 991F      		rol r25
 707 03bc 820F      		add r24,r18
 708 03be 931F      		adc r25,r19
 709 03c0 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 710 03c2 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 711 03c4 FC01      		movw r30,r24
 712 03c6 8081      		ld r24,Z
 713 03c8 8823      		tst r24
 714 03ca 01F0      		breq .L30
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxDuplicateRejectionTable[i].ttl--;
 715               		.loc 2 228 0
 716 03cc 8A81      		ldd r24,Y+2
 717 03ce 282F      		mov r18,r24
 718 03d0 30E0      		ldi r19,0
 719 03d2 C901      		movw r24,r18
 720 03d4 880F      		lsl r24
 721 03d6 991F      		rol r25
 722 03d8 880F      		lsl r24
 723 03da 991F      		rol r25
 724 03dc 820F      		add r24,r18
 725 03de 931F      		adc r25,r19
 726 03e0 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 727 03e2 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 728 03e4 FC01      		movw r30,r24
 729 03e6 8081      		ld r24,Z
 730 03e8 4FEF      		ldi r20,lo8(-1)
 731 03ea 480F      		add r20,r24
 732 03ec C901      		movw r24,r18
 733 03ee 880F      		lsl r24
 734 03f0 991F      		rol r25
 735 03f2 880F      		lsl r24
 736 03f4 991F      		rol r25
 737 03f6 820F      		add r24,r18
 738 03f8 931F      		adc r25,r19
 739 03fa 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 740 03fc 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 741 03fe FC01      		movw r30,r24
 742 0400 4083      		st Z,r20
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			restart = true;
 743               		.loc 2 229 0
 744 0402 81E0      		ldi r24,lo8(1)
 745 0404 8983      		std Y+1,r24
 746               	.L30:
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 747               		.loc 2 226 0 discriminator 2
 748 0406 8A81      		ldd r24,Y+2
 749 0408 8F5F      		subi r24,lo8(-(1))
 750 040a 8A83      		std Y+2,r24
 751               	.L29:
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 752               		.loc 2 226 0 is_stmt 0 discriminator 1
 753 040c 8A81      		ldd r24,Y+2
 754 040e 8233      		cpi r24,lo8(50)
 755 0410 00F0      		brlo .L31
 756               	.LBE3:
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (restart) {
 757               		.loc 2 233 0 is_stmt 1
 758 0412 8981      		ldd r24,Y+1
 759 0414 8823      		tst r24
 760 0416 01F0      		breq .L33
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		SYS_TimerStart(timer);
 761               		.loc 2 234 0
 762 0418 8B81      		ldd r24,Y+3
 763 041a 9C81      		ldd r25,Y+4
 764 041c 0E94 0000 		call SYS_TimerStart
 765               	.L33:
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 766               		.loc 2 236 0
 767 0420 0000      		nop
 768               	/* epilogue start */
 769 0422 0F90      		pop __tmp_reg__
 770 0424 0F90      		pop __tmp_reg__
 771 0426 0F90      		pop __tmp_reg__
 772 0428 0F90      		pop __tmp_reg__
 773 042a DF91      		pop r29
 774 042c CF91      		pop r28
 775 042e 0895      		ret
 776               		.cfi_endproc
 777               	.LFE70:
 780               	nwkRxRejectDuplicate:
 781               	.LFB71:
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxRejectDuplicate(NwkFrameHeader_t *header)
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 782               		.loc 2 241 0
 783               		.cfi_startproc
 784 0430 CF93      		push r28
 785               	.LCFI24:
 786               		.cfi_def_cfa_offset 3
 787               		.cfi_offset 28, -2
 788 0432 DF93      		push r29
 789               	.LCFI25:
 790               		.cfi_def_cfa_offset 4
 791               		.cfi_offset 29, -3
 792 0434 CDB7      		in r28,__SP_L__
 793 0436 DEB7      		in r29,__SP_H__
 794               	.LCFI26:
 795               		.cfi_def_cfa_register 28
 796 0438 2997      		sbiw r28,9
 797               	.LCFI27:
 798               		.cfi_def_cfa_offset 13
 799 043a 0FB6      		in __tmp_reg__,__SREG__
 800 043c F894      		cli
 801 043e DEBF      		out __SP_H__,r29
 802 0440 0FBE      		out __SREG__,__tmp_reg__
 803 0442 CDBF      		out __SP_L__,r28
 804               	/* prologue: function */
 805               	/* frame size = 9 */
 806               	/* stack size = 11 */
 807               	.L__stack_usage = 11
 808 0444 9987      		std Y+9,r25
 809 0446 8887      		std Y+8,r24
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *entry;
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *freeEntry = NULL;
 810               		.loc 2 243 0
 811 0448 1A82      		std Y+2,__zero_reg__
 812 044a 1982      		std Y+1,__zero_reg__
 813               	.LBB4:
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 814               		.loc 2 245 0
 815 044c 1B82      		std Y+3,__zero_reg__
 816 044e 00C0      		rjmp .L35
 817               	.L41:
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 818               		.loc 2 246 0
 819 0450 8B81      		ldd r24,Y+3
 820 0452 282F      		mov r18,r24
 821 0454 30E0      		ldi r19,0
 822 0456 C901      		movw r24,r18
 823 0458 880F      		lsl r24
 824 045a 991F      		rol r25
 825 045c 880F      		lsl r24
 826 045e 991F      		rol r25
 827 0460 820F      		add r24,r18
 828 0462 931F      		adc r25,r19
 829 0464 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable))
 830 0466 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable))
 831 0468 9D83      		std Y+5,r25
 832 046a 8C83      		std Y+4,r24
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (entry->ttl && header->nwkSrcAddr == entry->src) {
 833               		.loc 2 248 0
 834 046c 8C81      		ldd r24,Y+4
 835 046e 9D81      		ldd r25,Y+5
 836 0470 FC01      		movw r30,r24
 837 0472 8481      		ldd r24,Z+4
 838 0474 8823      		tst r24
 839 0476 01F4      		brne .+2
 840 0478 00C0      		rjmp .L36
 841               		.loc 2 248 0 is_stmt 0 discriminator 1
 842 047a 8885      		ldd r24,Y+8
 843 047c 9985      		ldd r25,Y+9
 844 047e FC01      		movw r30,r24
 845 0480 2385      		ldd r18,Z+11
 846 0482 3485      		ldd r19,Z+12
 847 0484 8C81      		ldd r24,Y+4
 848 0486 9D81      		ldd r25,Y+5
 849 0488 FC01      		movw r30,r24
 850 048a 8081      		ld r24,Z
 851 048c 9181      		ldd r25,Z+1
 852 048e 2817      		cp r18,r24
 853 0490 3907      		cpc r19,r25
 854 0492 01F0      		breq .+2
 855 0494 00C0      		rjmp .L36
 856               	.LBB5:
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			uint8_t diff = (int8_t)entry->seq - header->nwkSeq;
 857               		.loc 2 249 0 is_stmt 1
 858 0496 8C81      		ldd r24,Y+4
 859 0498 9D81      		ldd r25,Y+5
 860 049a FC01      		movw r30,r24
 861 049c 2281      		ldd r18,Z+2
 862 049e 8885      		ldd r24,Y+8
 863 04a0 9985      		ldd r25,Y+9
 864 04a2 FC01      		movw r30,r24
 865 04a4 8285      		ldd r24,Z+10
 866 04a6 F22F      		mov r31,r18
 867 04a8 F81B      		sub r31,r24
 868 04aa 8F2F      		mov r24,r31
 869 04ac 8E83      		std Y+6,r24
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (diff < 8) {
 870               		.loc 2 251 0
 871 04ae 8E81      		ldd r24,Y+6
 872 04b0 8830      		cpi r24,lo8(8)
 873 04b2 00F4      		brsh .L37
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				if (entry->mask & (1 << diff)) {
 874               		.loc 2 252 0
 875 04b4 8C81      		ldd r24,Y+4
 876 04b6 9D81      		ldd r25,Y+5
 877 04b8 FC01      		movw r30,r24
 878 04ba 8381      		ldd r24,Z+3
 879 04bc 882F      		mov r24,r24
 880 04be 90E0      		ldi r25,0
 881 04c0 2E81      		ldd r18,Y+6
 882 04c2 222F      		mov r18,r18
 883 04c4 30E0      		ldi r19,0
 884 04c6 00C0      		rjmp 2f
 885               		1:
 886 04c8 9595      		asr r25
 887 04ca 8795      		ror r24
 888               		2:
 889 04cc 2A95      		dec r18
 890 04ce 02F4      		brpl 1b
 891 04d0 8170      		andi r24,1
 892 04d2 9927      		clr r25
 893 04d4 892B      		or r24,r25
 894 04d6 01F0      		breq .L38
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#ifdef NWK_ENABLE_ROUTING
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					if (nwkIb.addr == header->macDstAddr) {
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 						nwkRouteRemove(
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkDstAddr,
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkFcf.multicast);
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					}
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#endif
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					return true;
 895               		.loc 2 261 0
 896 04d8 81E0      		ldi r24,lo8(1)
 897 04da 00C0      		rjmp .L39
 898               	.L38:
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				}
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask |= (1 << diff);
 899               		.loc 2 264 0
 900 04dc 8C81      		ldd r24,Y+4
 901 04de 9D81      		ldd r25,Y+5
 902 04e0 FC01      		movw r30,r24
 903 04e2 8381      		ldd r24,Z+3
 904 04e4 482F      		mov r20,r24
 905 04e6 8E81      		ldd r24,Y+6
 906 04e8 282F      		mov r18,r24
 907 04ea 30E0      		ldi r19,0
 908 04ec 81E0      		ldi r24,lo8(1)
 909 04ee 90E0      		ldi r25,0
 910 04f0 00C0      		rjmp 2f
 911               		1:
 912 04f2 880F      		lsl r24
 913 04f4 991F      		rol r25
 914               		2:
 915 04f6 2A95      		dec r18
 916 04f8 02F4      		brpl 1b
 917 04fa 842B      		or r24,r20
 918 04fc 282F      		mov r18,r24
 919 04fe 8C81      		ldd r24,Y+4
 920 0500 9D81      		ldd r25,Y+5
 921 0502 FC01      		movw r30,r24
 922 0504 2383      		std Z+3,r18
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 923               		.loc 2 265 0
 924 0506 80E0      		ldi r24,0
 925 0508 00C0      		rjmp .L39
 926               	.L37:
 927               	.LBB6:
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				uint8_t shift = -(int8_t)diff;
 928               		.loc 2 267 0
 929 050a 8E81      		ldd r24,Y+6
 930 050c 8195      		neg r24
 931 050e 8F83      		std Y+7,r24
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->seq = header->nwkSeq;
 932               		.loc 2 269 0
 933 0510 8885      		ldd r24,Y+8
 934 0512 9985      		ldd r25,Y+9
 935 0514 FC01      		movw r30,r24
 936 0516 2285      		ldd r18,Z+10
 937 0518 8C81      		ldd r24,Y+4
 938 051a 9D81      		ldd r25,Y+5
 939 051c FC01      		movw r30,r24
 940 051e 2283      		std Z+2,r18
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask = (entry->mask << shift) | 1;
 941               		.loc 2 270 0
 942 0520 8C81      		ldd r24,Y+4
 943 0522 9D81      		ldd r25,Y+5
 944 0524 FC01      		movw r30,r24
 945 0526 8381      		ldd r24,Z+3
 946 0528 882F      		mov r24,r24
 947 052a 90E0      		ldi r25,0
 948 052c 2F81      		ldd r18,Y+7
 949 052e 222F      		mov r18,r18
 950 0530 30E0      		ldi r19,0
 951 0532 00C0      		rjmp 2f
 952               		1:
 953 0534 880F      		lsl r24
 954 0536 991F      		rol r25
 955               		2:
 956 0538 2A95      		dec r18
 957 053a 02F4      		brpl 1b
 958 053c 8160      		ori r24,lo8(1)
 959 053e 282F      		mov r18,r24
 960 0540 8C81      		ldd r24,Y+4
 961 0542 9D81      		ldd r25,Y+5
 962 0544 FC01      		movw r30,r24
 963 0546 2383      		std Z+3,r18
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->ttl = DUPLICATE_REJECTION_TTL;
 964               		.loc 2 271 0
 965 0548 8C81      		ldd r24,Y+4
 966 054a 9D81      		ldd r25,Y+5
 967 054c 25E1      		ldi r18,lo8(21)
 968 054e FC01      		movw r30,r24
 969 0550 2483      		std Z+4,r18
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 970               		.loc 2 272 0
 971 0552 80E0      		ldi r24,0
 972 0554 00C0      		rjmp .L39
 973               	.L36:
 974               	.LBE6:
 975               	.LBE5:
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (0 == entry->ttl) {
 976               		.loc 2 276 0
 977 0556 8C81      		ldd r24,Y+4
 978 0558 9D81      		ldd r25,Y+5
 979 055a FC01      		movw r30,r24
 980 055c 8481      		ldd r24,Z+4
 981 055e 8823      		tst r24
 982 0560 01F4      		brne .L40
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			freeEntry = entry;
 983               		.loc 2 277 0
 984 0562 8C81      		ldd r24,Y+4
 985 0564 9D81      		ldd r25,Y+5
 986 0566 9A83      		std Y+2,r25
 987 0568 8983      		std Y+1,r24
 988               	.L40:
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 989               		.loc 2 245 0 discriminator 2
 990 056a 8B81      		ldd r24,Y+3
 991 056c 8F5F      		subi r24,lo8(-(1))
 992 056e 8B83      		std Y+3,r24
 993               	.L35:
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 994               		.loc 2 245 0 is_stmt 0 discriminator 1
 995 0570 8B81      		ldd r24,Y+3
 996 0572 8233      		cpi r24,lo8(50)
 997 0574 00F4      		brsh .+2
 998 0576 00C0      		rjmp .L41
 999               	.LBE4:
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == freeEntry) {
 1000               		.loc 2 281 0 is_stmt 1
 1001 0578 8981      		ldd r24,Y+1
 1002 057a 9A81      		ldd r25,Y+2
 1003 057c 892B      		or r24,r25
 1004 057e 01F4      		brne .L42
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return true;
 1005               		.loc 2 282 0
 1006 0580 81E0      		ldi r24,lo8(1)
 1007 0582 00C0      		rjmp .L39
 1008               	.L42:
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->src = header->nwkSrcAddr;
 1009               		.loc 2 285 0
 1010 0584 8885      		ldd r24,Y+8
 1011 0586 9985      		ldd r25,Y+9
 1012 0588 FC01      		movw r30,r24
 1013 058a 2385      		ldd r18,Z+11
 1014 058c 3485      		ldd r19,Z+12
 1015 058e 8981      		ldd r24,Y+1
 1016 0590 9A81      		ldd r25,Y+2
 1017 0592 FC01      		movw r30,r24
 1018 0594 3183      		std Z+1,r19
 1019 0596 2083      		st Z,r18
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->seq = header->nwkSeq;
 1020               		.loc 2 286 0
 1021 0598 8885      		ldd r24,Y+8
 1022 059a 9985      		ldd r25,Y+9
 1023 059c FC01      		movw r30,r24
 1024 059e 2285      		ldd r18,Z+10
 1025 05a0 8981      		ldd r24,Y+1
 1026 05a2 9A81      		ldd r25,Y+2
 1027 05a4 FC01      		movw r30,r24
 1028 05a6 2283      		std Z+2,r18
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->mask = 1;
 1029               		.loc 2 287 0
 1030 05a8 8981      		ldd r24,Y+1
 1031 05aa 9A81      		ldd r25,Y+2
 1032 05ac 21E0      		ldi r18,lo8(1)
 1033 05ae FC01      		movw r30,r24
 1034 05b0 2383      		std Z+3,r18
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->ttl = DUPLICATE_REJECTION_TTL;
 1035               		.loc 2 288 0
 1036 05b2 8981      		ldd r24,Y+1
 1037 05b4 9A81      		ldd r25,Y+2
 1038 05b6 25E1      		ldi r18,lo8(21)
 1039 05b8 FC01      		movw r30,r24
 1040 05ba 2483      		std Z+4,r18
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 1041               		.loc 2 290 0
 1042 05bc 80E0      		ldi r24,lo8(nwkRxDuplicateRejectionTimer)
 1043 05be 90E0      		ldi r25,hi8(nwkRxDuplicateRejectionTimer)
 1044 05c0 0E94 0000 		call SYS_TimerStart
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1045               		.loc 2 292 0
 1046 05c4 80E0      		ldi r24,0
 1047               	.L39:
 1048               	/* epilogue start */
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1049               		.loc 2 293 0
 1050 05c6 2996      		adiw r28,9
 1051 05c8 0FB6      		in __tmp_reg__,__SREG__
 1052 05ca F894      		cli
 1053 05cc DEBF      		out __SP_H__,r29
 1054 05ce 0FBE      		out __SREG__,__tmp_reg__
 1055 05d0 CDBF      		out __SP_L__,r28
 1056 05d2 DF91      		pop r29
 1057 05d4 CF91      		pop r28
 1058 05d6 0895      		ret
 1059               		.cfi_endproc
 1060               	.LFE71:
 1063               	nwkRxSeriveDataInd:
 1064               	.LFB72:
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind)
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1065               		.loc 2 298 0
 1066               		.cfi_startproc
 1067 05d8 CF93      		push r28
 1068               	.LCFI28:
 1069               		.cfi_def_cfa_offset 3
 1070               		.cfi_offset 28, -2
 1071 05da DF93      		push r29
 1072               	.LCFI29:
 1073               		.cfi_def_cfa_offset 4
 1074               		.cfi_offset 29, -3
 1075 05dc 00D0      		rcall .
 1076               	.LCFI30:
 1077               		.cfi_def_cfa_offset 6
 1078 05de CDB7      		in r28,__SP_L__
 1079 05e0 DEB7      		in r29,__SP_H__
 1080               	.LCFI31:
 1081               		.cfi_def_cfa_register 28
 1082               	/* prologue: function */
 1083               	/* frame size = 2 */
 1084               	/* stack size = 4 */
 1085               	.L__stack_usage = 4
 1086 05e2 9A83      		std Y+2,r25
 1087 05e4 8983      		std Y+1,r24
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == (ind->options & NWK_IND_OPT_SECURED)) {
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ind->size < 1) {
 1088               		.loc 2 306 0
 1089 05e6 8981      		ldd r24,Y+1
 1090 05e8 9A81      		ldd r25,Y+2
 1091 05ea FC01      		movw r30,r24
 1092 05ec 8185      		ldd r24,Z+9
 1093 05ee 8823      		tst r24
 1094 05f0 01F4      		brne .L44
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1095               		.loc 2 307 0
 1096 05f2 80E0      		ldi r24,0
 1097 05f4 00C0      		rjmp .L45
 1098               	.L44:
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	switch (ind->data[0]) {
 1099               		.loc 2 310 0
 1100 05f6 8981      		ldd r24,Y+1
 1101 05f8 9A81      		ldd r25,Y+2
 1102 05fa FC01      		movw r30,r24
 1103 05fc 8781      		ldd r24,Z+7
 1104 05fe 9085      		ldd r25,Z+8
 1105 0600 FC01      		movw r30,r24
 1106 0602 8081      		ld r24,Z
 1107 0604 882F      		mov r24,r24
 1108 0606 90E0      		ldi r25,0
 1109 0608 892B      		or r24,r25
 1110 060a 01F4      		brne .L48
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ACK:
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkTxAckReceived(ind);
 1111               		.loc 2 312 0
 1112 060c 8981      		ldd r24,Y+1
 1113 060e 9A81      		ldd r25,Y+2
 1114 0610 0E94 0000 		call nwkTxAckReceived
 1115 0614 00C0      		rjmp .L45
 1116               	.L48:
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_ERROR:
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteErrorReceived(ind);
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTE_DISCOVERY
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REQUEST:
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryRequestReceived(ind);
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REPLY:
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryReplyReceived(ind);
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	default:
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1117               		.loc 2 330 0
 1118 0616 80E0      		ldi r24,0
 1119               	.L45:
 1120               	/* epilogue start */
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1121               		.loc 2 332 0
 1122 0618 0F90      		pop __tmp_reg__
 1123 061a 0F90      		pop __tmp_reg__
 1124 061c DF91      		pop r29
 1125 061e CF91      		pop r28
 1126 0620 0895      		ret
 1127               		.cfi_endproc
 1128               	.LFE72:
 1131               	nwkRxHandleReceivedFrame:
 1132               	.LFB73:
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleReceivedFrame(NwkFrame_t *frame)
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1133               		.loc 2 337 0
 1134               		.cfi_startproc
 1135 0622 CF93      		push r28
 1136               	.LCFI32:
 1137               		.cfi_def_cfa_offset 3
 1138               		.cfi_offset 28, -2
 1139 0624 DF93      		push r29
 1140               	.LCFI33:
 1141               		.cfi_def_cfa_offset 4
 1142               		.cfi_offset 29, -3
 1143 0626 CDB7      		in r28,__SP_L__
 1144 0628 DEB7      		in r29,__SP_H__
 1145               	.LCFI34:
 1146               		.cfi_def_cfa_register 28
 1147 062a 2897      		sbiw r28,8
 1148               	.LCFI35:
 1149               		.cfi_def_cfa_offset 12
 1150 062c 0FB6      		in __tmp_reg__,__SREG__
 1151 062e F894      		cli
 1152 0630 DEBF      		out __SP_H__,r29
 1153 0632 0FBE      		out __SREG__,__tmp_reg__
 1154 0634 CDBF      		out __SP_L__,r28
 1155               	/* prologue: function */
 1156               	/* frame size = 8 */
 1157               	/* stack size = 10 */
 1158               	.L__stack_usage = 10
 1159 0636 9887      		std Y+8,r25
 1160 0638 8F83      		std Y+7,r24
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1161               		.loc 2 338 0
 1162 063a 8F81      		ldd r24,Y+7
 1163 063c 9885      		ldd r25,Y+8
 1164 063e 0296      		adiw r24,2
 1165 0640 9B83      		std Y+3,r25
 1166 0642 8A83      		std Y+2,r24
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1167               		.loc 2 340 0
 1168 0644 8F81      		ldd r24,Y+7
 1169 0646 9885      		ldd r25,Y+8
 1170 0648 24E2      		ldi r18,lo8(36)
 1171 064a FC01      		movw r30,r24
 1172 064c 2083      		st Z,r18
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifndef NWK_ENABLE_SECURITY
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.security) {
 1173               		.loc 2 343 0
 1174 064e 8A81      		ldd r24,Y+2
 1175 0650 9B81      		ldd r25,Y+3
 1176 0652 FC01      		movw r30,r24
 1177 0654 8185      		ldd r24,Z+9
 1178 0656 8270      		andi r24,lo8(2)
 1179 0658 8823      		tst r24
 1180 065a 01F0      		breq .+2
 1181 065c 00C0      		rjmp .L70
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast && header->nwkFcf.ackRequest) {
 1182               		.loc 2 350 0
 1183 065e 8A81      		ldd r24,Y+2
 1184 0660 9B81      		ldd r25,Y+3
 1185 0662 FC01      		movw r30,r24
 1186 0664 8185      		ldd r24,Z+9
 1187 0666 8870      		andi r24,lo8(8)
 1188 0668 8823      		tst r24
 1189 066a 01F0      		breq .L52
 1190               		.loc 2 350 0 is_stmt 0 discriminator 1
 1191 066c 8A81      		ldd r24,Y+2
 1192 066e 9B81      		ldd r25,Y+3
 1193 0670 FC01      		movw r30,r24
 1194 0672 8185      		ldd r24,Z+9
 1195 0674 8170      		andi r24,lo8(1)
 1196 0676 8823      		tst r24
 1197 0678 01F0      		breq .+2
 1198 067a 00C0      		rjmp .L71
 1199               	.L52:
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #else
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == header->macDstPanId)
 1200               		.loc 2 361 0 is_stmt 1
 1201 067c 8A81      		ldd r24,Y+2
 1202 067e 9B81      		ldd r25,Y+3
 1203 0680 FC01      		movw r30,r24
 1204 0682 8381      		ldd r24,Z+3
 1205 0684 9481      		ldd r25,Z+4
 1206 0686 0196      		adiw r24,1
 1207 0688 01F4      		brne .L53
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR == header->nwkDstAddr)
 1208               		.loc 2 363 0
 1209 068a 2091 0000 		lds r18,nwkIb
 1210 068e 3091 0000 		lds r19,nwkIb+1
 1211 0692 8A81      		ldd r24,Y+2
 1212 0694 9B81      		ldd r25,Y+3
 1213 0696 FC01      		movw r30,r24
 1214 0698 8585      		ldd r24,Z+13
 1215 069a 9685      		ldd r25,Z+14
 1216 069c 2817      		cp r18,r24
 1217 069e 3907      		cpc r19,r25
 1218 06a0 01F0      		breq .L54
 1219               		.loc 2 363 0 is_stmt 0 discriminator 1
 1220 06a2 8A81      		ldd r24,Y+2
 1221 06a4 9B81      		ldd r25,Y+3
 1222 06a6 FC01      		movw r30,r24
 1223 06a8 8585      		ldd r24,Z+13
 1224 06aa 9685      		ldd r25,Z+14
 1225 06ac 0196      		adiw r24,1
 1226 06ae 01F0      		breq .+2
 1227 06b0 00C0      		rjmp .L72
 1228               	.L54:
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security)
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			{
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1229               		.loc 2 372 0 is_stmt 1
 1230 06b2 8F81      		ldd r24,Y+7
 1231 06b4 9885      		ldd r25,Y+8
 1232 06b6 22E2      		ldi r18,lo8(34)
 1233 06b8 FC01      		movw r30,r24
 1234 06ba 2083      		st Z,r18
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 1235               		.loc 2 375 0
 1236 06bc 00C0      		rjmp .L72
 1237               	.L53:
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ADDRESS_FILTER
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (!NWK_FilterAddress(header->macSrcAddr, &frame->rx.lqi)) {
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == header->nwkDstAddr && header->nwkFcf.ackRequest)
 1238               		.loc 2 385 0
 1239 06be 8A81      		ldd r24,Y+2
 1240 06c0 9B81      		ldd r25,Y+3
 1241 06c2 FC01      		movw r30,r24
 1242 06c4 8585      		ldd r24,Z+13
 1243 06c6 9685      		ldd r25,Z+14
 1244 06c8 0196      		adiw r24,1
 1245 06ca 01F4      		brne .L56
 1246               		.loc 2 385 0 is_stmt 0 discriminator 1
 1247 06cc 8A81      		ldd r24,Y+2
 1248 06ce 9B81      		ldd r25,Y+3
 1249 06d0 FC01      		movw r30,r24
 1250 06d2 8185      		ldd r24,Z+9
 1251 06d4 8170      		andi r24,lo8(1)
 1252 06d6 8823      		tst r24
 1253 06d8 01F0      		breq .+2
 1254 06da 00C0      		rjmp .L73
 1255               	.L56:
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkIb.addr == header->nwkSrcAddr)
 1256               		.loc 2 390 0 is_stmt 1
 1257 06dc 2091 0000 		lds r18,nwkIb
 1258 06e0 3091 0000 		lds r19,nwkIb+1
 1259 06e4 8A81      		ldd r24,Y+2
 1260 06e6 9B81      		ldd r25,Y+3
 1261 06e8 FC01      		movw r30,r24
 1262 06ea 8385      		ldd r24,Z+11
 1263 06ec 9485      		ldd r25,Z+12
 1264 06ee 2817      		cp r18,r24
 1265 06f0 3907      		cpc r19,r25
 1266 06f2 01F4      		brne .+2
 1267 06f4 00C0      		rjmp .L74
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRouteFrameReceived(frame);
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkRxRejectDuplicate(header))
 1268               		.loc 2 399 0
 1269 06f6 8A81      		ldd r24,Y+2
 1270 06f8 9B81      		ldd r25,Y+3
 1271 06fa 0E94 0000 		call nwkRxRejectDuplicate
 1272 06fe 8823      		tst r24
 1273 0700 01F0      		breq .+2
 1274 0702 00C0      		rjmp .L75
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 1275               		.loc 2 405 0
 1276 0704 8A81      		ldd r24,Y+2
 1277 0706 9B81      		ldd r25,Y+3
 1278 0708 FC01      		movw r30,r24
 1279 070a 8185      		ldd r24,Z+9
 1280 070c 8870      		andi r24,lo8(8)
 1281 070e 8823      		tst r24
 1282 0710 01F4      		brne .+2
 1283 0712 00C0      		rjmp .L59
 1284               	.LBB7:
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameMulticastHeader_t *mcHeader
 1285               		.loc 2 406 0
 1286 0714 8F81      		ldd r24,Y+7
 1287 0716 9885      		ldd r25,Y+8
 1288 0718 8F57      		subi r24,127
 1289 071a 9F4F      		sbci r25,-1
 1290 071c FC01      		movw r30,r24
 1291 071e 8081      		ld r24,Z
 1292 0720 9181      		ldd r25,Z+1
 1293 0722 9D83      		std Y+5,r25
 1294 0724 8C83      		std Y+4,r24
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			= (NwkFrameMulticastHeader_t *)frame->payload;
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool member = NWK_GroupIsMember(header->nwkDstAddr);
 1295               		.loc 2 408 0
 1296 0726 8A81      		ldd r24,Y+2
 1297 0728 9B81      		ldd r25,Y+3
 1298 072a FC01      		movw r30,r24
 1299 072c 8585      		ldd r24,Z+13
 1300 072e 9685      		ldd r25,Z+14
 1301 0730 0E94 0000 		call NWK_GroupIsMember
 1302 0734 8E83      		std Y+6,r24
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool broadcast = false;
 1303               		.loc 2 409 0
 1304 0736 1982      		std Y+1,__zero_reg__
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 1305               		.loc 2 411 0
 1306 0738 8A81      		ldd r24,Y+2
 1307 073a 9B81      		ldd r25,Y+3
 1308 073c FC01      		movw r30,r24
 1309 073e 8581      		ldd r24,Z+5
 1310 0740 9681      		ldd r25,Z+6
 1311 0742 0196      		adiw r24,1
 1312 0744 01F0      		breq .+2
 1313 0746 00C0      		rjmp .L60
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1314               		.loc 2 412 0
 1315 0748 8E81      		ldd r24,Y+6
 1316 074a 8823      		tst r24
 1317 074c 01F0      		breq .L61
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->memberRadius > 0;
 1318               		.loc 2 413 0
 1319 074e 8C81      		ldd r24,Y+4
 1320 0750 9D81      		ldd r25,Y+5
 1321 0752 FC01      		movw r30,r24
 1322 0754 8181      		ldd r24,Z+1
 1323 0756 8F70      		andi r24,lo8(15)
 1324 0758 882F      		mov r24,r24
 1325 075a 90E0      		ldi r25,0
 1326 075c 21E0      		ldi r18,lo8(1)
 1327 075e 1816      		cp __zero_reg__,r24
 1328 0760 1906      		cpc __zero_reg__,r25
 1329 0762 04F0      		brlt .L62
 1330 0764 20E0      		ldi r18,0
 1331               	.L62:
 1332 0766 2983      		std Y+1,r18
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius--;
 1333               		.loc 2 414 0
 1334 0768 8C81      		ldd r24,Y+4
 1335 076a 9D81      		ldd r25,Y+5
 1336 076c FC01      		movw r30,r24
 1337 076e 8181      		ldd r24,Z+1
 1338 0770 8F70      		andi r24,lo8(15)
 1339 0772 2FE0      		ldi r18,lo8(15)
 1340 0774 280F      		add r18,r24
 1341 0776 2F70      		andi r18,lo8(15)
 1342 0778 8C81      		ldd r24,Y+4
 1343 077a 9D81      		ldd r25,Y+5
 1344 077c 2F70      		andi r18,lo8(15)
 1345 077e FC01      		movw r30,r24
 1346 0780 3181      		ldd r19,Z+1
 1347 0782 307F      		andi r19,lo8(-16)
 1348 0784 232B      		or r18,r19
 1349 0786 FC01      		movw r30,r24
 1350 0788 2183      		std Z+1,r18
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxNonMemberRadius;
 1351               		.loc 2 416 0
 1352 078a 8C81      		ldd r24,Y+4
 1353 078c 9D81      		ldd r25,Y+5
 1354 078e FC01      		movw r30,r24
 1355 0790 8081      		ld r24,Z
 1356 0792 282F      		mov r18,r24
 1357 0794 2295      		swap r18
 1358 0796 2F70      		andi r18,lo8(15)
 1359 0798 8C81      		ldd r24,Y+4
 1360 079a 9D81      		ldd r25,Y+5
 1361 079c 2F70      		andi r18,lo8(15)
 1362 079e FC01      		movw r30,r24
 1363 07a0 3081      		ld r19,Z
 1364 07a2 307F      		andi r19,lo8(-16)
 1365 07a4 232B      		or r18,r19
 1366 07a6 FC01      		movw r30,r24
 1367 07a8 2083      		st Z,r18
 1368 07aa 00C0      		rjmp .L65
 1369               	.L61:
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->nonMemberRadius > 0;
 1370               		.loc 2 418 0
 1371 07ac 8C81      		ldd r24,Y+4
 1372 07ae 9D81      		ldd r25,Y+5
 1373 07b0 FC01      		movw r30,r24
 1374 07b2 8081      		ld r24,Z
 1375 07b4 8F70      		andi r24,lo8(15)
 1376 07b6 882F      		mov r24,r24
 1377 07b8 90E0      		ldi r25,0
 1378 07ba 21E0      		ldi r18,lo8(1)
 1379 07bc 1816      		cp __zero_reg__,r24
 1380 07be 1906      		cpc __zero_reg__,r25
 1381 07c0 04F0      		brlt .L64
 1382 07c2 20E0      		ldi r18,0
 1383               	.L64:
 1384 07c4 2983      		std Y+1,r18
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius--;
 1385               		.loc 2 419 0
 1386 07c6 8C81      		ldd r24,Y+4
 1387 07c8 9D81      		ldd r25,Y+5
 1388 07ca FC01      		movw r30,r24
 1389 07cc 8081      		ld r24,Z
 1390 07ce 8F70      		andi r24,lo8(15)
 1391 07d0 2FE0      		ldi r18,lo8(15)
 1392 07d2 280F      		add r18,r24
 1393 07d4 2F70      		andi r18,lo8(15)
 1394 07d6 8C81      		ldd r24,Y+4
 1395 07d8 9D81      		ldd r25,Y+5
 1396 07da 2F70      		andi r18,lo8(15)
 1397 07dc FC01      		movw r30,r24
 1398 07de 3081      		ld r19,Z
 1399 07e0 307F      		andi r19,lo8(-16)
 1400 07e2 232B      		or r18,r19
 1401 07e4 FC01      		movw r30,r24
 1402 07e6 2083      		st Z,r18
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxMemberRadius;
 1403               		.loc 2 421 0
 1404 07e8 8C81      		ldd r24,Y+4
 1405 07ea 9D81      		ldd r25,Y+5
 1406 07ec FC01      		movw r30,r24
 1407 07ee 8181      		ldd r24,Z+1
 1408 07f0 282F      		mov r18,r24
 1409 07f2 2295      		swap r18
 1410 07f4 2F70      		andi r18,lo8(15)
 1411 07f6 8C81      		ldd r24,Y+4
 1412 07f8 9D81      		ldd r25,Y+5
 1413 07fa 2F70      		andi r18,lo8(15)
 1414 07fc FC01      		movw r30,r24
 1415 07fe 3181      		ldd r19,Z+1
 1416 0800 307F      		andi r19,lo8(-16)
 1417 0802 232B      		or r18,r19
 1418 0804 FC01      		movw r30,r24
 1419 0806 2183      		std Z+1,r18
 1420 0808 00C0      		rjmp .L65
 1421               	.L60:
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		} else {
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1422               		.loc 2 424 0
 1423 080a 8E81      		ldd r24,Y+6
 1424 080c 8823      		tst r24
 1425 080e 01F0      		breq .L65
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = true;
 1426               		.loc 2 425 0
 1427 0810 81E0      		ldi r24,lo8(1)
 1428 0812 8983      		std Y+1,r24
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkFcf.linkLocal = 1;
 1429               		.loc 2 426 0
 1430 0814 8A81      		ldd r24,Y+2
 1431 0816 9B81      		ldd r25,Y+3
 1432 0818 FC01      		movw r30,r24
 1433 081a 2185      		ldd r18,Z+9
 1434 081c 2460      		ori r18,lo8(4)
 1435 081e FC01      		movw r30,r24
 1436 0820 2187      		std Z+9,r18
 1437               	.L65:
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_ROUTING
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else {
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_ROUTE;
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (broadcast) {
 1438               		.loc 2 436 0
 1439 0822 8981      		ldd r24,Y+1
 1440 0824 8823      		tst r24
 1441 0826 01F0      		breq .L66
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1442               		.loc 2 437 0
 1443 0828 8F81      		ldd r24,Y+7
 1444 082a 9885      		ldd r25,Y+8
 1445 082c 0E94 0000 		call nwkTxBroadcastFrame
 1446               	.L66:
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (member) {
 1447               		.loc 2 440 0
 1448 0830 8E81      		ldd r24,Y+6
 1449 0832 8823      		tst r24
 1450 0834 01F4      		brne .+2
 1451 0836 00C0      		rjmp .L49
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 1452               		.loc 2 441 0
 1453 0838 8F81      		ldd r24,Y+7
 1454 083a 9885      		ldd r25,Y+8
 1455 083c 8F57      		subi r24,127
 1456 083e 9F4F      		sbci r25,-1
 1457 0840 FC01      		movw r30,r24
 1458 0842 8081      		ld r24,Z
 1459 0844 9181      		ldd r25,Z+1
 1460 0846 9C01      		movw r18,r24
 1461 0848 2E5F      		subi r18,-2
 1462 084a 3F4F      		sbci r19,-1
 1463 084c 8F81      		ldd r24,Y+7
 1464 084e 9885      		ldd r25,Y+8
 1465 0850 8F57      		subi r24,127
 1466 0852 9F4F      		sbci r25,-1
 1467 0854 FC01      		movw r30,r24
 1468 0856 3183      		std Z+1,r19
 1469 0858 2083      		st Z,r18
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 445:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1470               		.loc 2 448 0
 1471 085a 8F81      		ldd r24,Y+7
 1472 085c 9885      		ldd r25,Y+8
 1473 085e 22E2      		ldi r18,lo8(34)
 1474 0860 FC01      		movw r30,r24
 1475 0862 2083      		st Z,r18
 1476 0864 00C0      		rjmp .L49
 1477               	.L59:
 1478               	.LBE7:
 449:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else
 451:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif /* NWK_ENABLE_MULTICAST */
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr && nwkIb.addr !=
 1479               		.loc 2 453 0
 1480 0866 8A81      		ldd r24,Y+2
 1481 0868 9B81      		ldd r25,Y+3
 1482 086a FC01      		movw r30,r24
 1483 086c 8581      		ldd r24,Z+5
 1484 086e 9681      		ldd r25,Z+6
 1485 0870 0196      		adiw r24,1
 1486 0872 01F4      		brne .L68
 1487               		.loc 2 453 0 is_stmt 0 discriminator 1
 1488 0874 2091 0000 		lds r18,nwkIb
 1489 0878 3091 0000 		lds r19,nwkIb+1
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1490               		.loc 2 454 0 is_stmt 1 discriminator 1
 1491 087c 8A81      		ldd r24,Y+2
 1492 087e 9B81      		ldd r25,Y+3
 1493 0880 FC01      		movw r30,r24
 1494 0882 8585      		ldd r24,Z+13
 1495 0884 9685      		ldd r25,Z+14
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1496               		.loc 2 453 0 discriminator 1
 1497 0886 2817      		cp r18,r24
 1498 0888 3907      		cpc r19,r25
 1499 088a 01F0      		breq .L68
 455:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				0 == header->nwkFcf.linkLocal) {
 1500               		.loc 2 455 0
 1501 088c 8A81      		ldd r24,Y+2
 1502 088e 9B81      		ldd r25,Y+3
 1503 0890 FC01      		movw r30,r24
 1504 0892 8185      		ldd r24,Z+9
 1505 0894 8470      		andi r24,lo8(4)
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1506               		.loc 2 454 0
 1507 0896 8823      		tst r24
 1508 0898 01F4      		brne .L68
 456:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1509               		.loc 2 456 0
 1510 089a 8F81      		ldd r24,Y+7
 1511 089c 9885      		ldd r25,Y+8
 1512 089e 0E94 0000 		call nwkTxBroadcastFrame
 1513               	.L68:
 457:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 458:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR ==
 1514               		.loc 2 459 0
 1515 08a2 2091 0000 		lds r18,nwkIb
 1516 08a6 3091 0000 		lds r19,nwkIb+1
 1517 08aa 8A81      		ldd r24,Y+2
 1518 08ac 9B81      		ldd r25,Y+3
 1519 08ae FC01      		movw r30,r24
 1520 08b0 8585      		ldd r24,Z+13
 1521 08b2 9685      		ldd r25,Z+14
 1522 08b4 2817      		cp r18,r24
 1523 08b6 3907      		cpc r19,r25
 1524 08b8 01F0      		breq .L69
 460:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1525               		.loc 2 460 0 discriminator 1
 1526 08ba 8A81      		ldd r24,Y+2
 1527 08bc 9B81      		ldd r25,Y+3
 1528 08be FC01      		movw r30,r24
 1529 08c0 8585      		ldd r24,Z+13
 1530 08c2 9685      		ldd r25,Z+14
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1531               		.loc 2 459 0 discriminator 1
 1532 08c4 0196      		adiw r24,1
 1533 08c6 01F4      		brne .L49
 1534               	.L69:
 461:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 462:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 463:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 464:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 465:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 466:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1535               		.loc 2 466 0
 1536 08c8 8F81      		ldd r24,Y+7
 1537 08ca 9885      		ldd r25,Y+8
 1538 08cc 22E2      		ldi r18,lo8(34)
 1539 08ce FC01      		movw r30,r24
 1540 08d0 2083      		st Z,r18
 1541 08d2 00C0      		rjmp .L49
 1542               	.L70:
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1543               		.loc 2 344 0
 1544 08d4 0000      		nop
 1545 08d6 00C0      		rjmp .L49
 1546               	.L71:
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1547               		.loc 2 351 0
 1548 08d8 0000      		nop
 1549 08da 00C0      		rjmp .L49
 1550               	.L72:
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1551               		.loc 2 375 0
 1552 08dc 0000      		nop
 1553 08de 00C0      		rjmp .L49
 1554               	.L73:
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1555               		.loc 2 387 0
 1556 08e0 0000      		nop
 1557 08e2 00C0      		rjmp .L49
 1558               	.L74:
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1559               		.loc 2 392 0
 1560 08e4 0000      		nop
 1561 08e6 00C0      		rjmp .L49
 1562               	.L75:
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1563               		.loc 2 401 0
 1564 08e8 0000      		nop
 1565               	.L49:
 1566               	/* epilogue start */
 467:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 468:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 469:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #ifdef NWK_ENABLE_ROUTING
 470:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if (nwkIb.addr == header->macDstAddr) {
 471:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_ROUTE;
 472:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 473:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #endif
 474:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 475:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1567               		.loc 2 475 0
 1568 08ea 2896      		adiw r28,8
 1569 08ec 0FB6      		in __tmp_reg__,__SREG__
 1570 08ee F894      		cli
 1571 08f0 DEBF      		out __SP_H__,r29
 1572 08f2 0FBE      		out __SREG__,__tmp_reg__
 1573 08f4 CDBF      		out __SP_L__,r28
 1574 08f6 DF91      		pop r29
 1575 08f8 CF91      		pop r28
 1576 08fa 0895      		ret
 1577               		.cfi_endproc
 1578               	.LFE73:
 1581               	nwkRxIndicateDataFrame:
 1582               	.LFB74:
 476:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 477:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 478:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 479:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateDataFrame(NwkFrame_t *frame)
 480:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1583               		.loc 2 480 0
 1584               		.cfi_startproc
 1585 08fc CF93      		push r28
 1586               	.LCFI36:
 1587               		.cfi_def_cfa_offset 3
 1588               		.cfi_offset 28, -2
 1589 08fe DF93      		push r29
 1590               	.LCFI37:
 1591               		.cfi_def_cfa_offset 4
 1592               		.cfi_offset 29, -3
 1593 0900 CDB7      		in r28,__SP_L__
 1594 0902 DEB7      		in r29,__SP_H__
 1595               	.LCFI38:
 1596               		.cfi_def_cfa_register 28
 1597 0904 6097      		sbiw r28,16
 1598               	.LCFI39:
 1599               		.cfi_def_cfa_offset 20
 1600 0906 0FB6      		in __tmp_reg__,__SREG__
 1601 0908 F894      		cli
 1602 090a DEBF      		out __SP_H__,r29
 1603 090c 0FBE      		out __SREG__,__tmp_reg__
 1604 090e CDBF      		out __SP_L__,r28
 1605               	/* prologue: function */
 1606               	/* frame size = 16 */
 1607               	/* stack size = 18 */
 1608               	.L__stack_usage = 18
 1609 0910 988B      		std Y+16,r25
 1610 0912 8F87      		std Y+15,r24
 481:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1611               		.loc 2 481 0
 1612 0914 8F85      		ldd r24,Y+15
 1613 0916 9889      		ldd r25,Y+16
 1614 0918 0296      		adiw r24,2
 1615 091a 9A83      		std Y+2,r25
 1616 091c 8983      		std Y+1,r24
 482:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[header->nwkDstEndpoint]) {
 1617               		.loc 2 484 0
 1618 091e 8981      		ldd r24,Y+1
 1619 0920 9A81      		ldd r25,Y+2
 1620 0922 FC01      		movw r30,r24
 1621 0924 8785      		ldd r24,Z+15
 1622 0926 8295      		swap r24
 1623 0928 8F70      		andi r24,lo8(15)
 1624 092a 882F      		mov r24,r24
 1625 092c 90E0      		ldi r25,0
 1626 092e 0396      		adiw r24,3
 1627 0930 880F      		lsl r24
 1628 0932 991F      		rol r25
 1629 0934 8050      		subi r24,lo8(-(nwkIb))
 1630 0936 9040      		sbci r25,hi8(-(nwkIb))
 1631 0938 FC01      		movw r30,r24
 1632 093a 8081      		ld r24,Z
 1633 093c 9181      		ldd r25,Z+1
 1634 093e 892B      		or r24,r25
 1635 0940 01F4      		brne .L77
 485:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1636               		.loc 2 485 0
 1637 0942 80E0      		ldi r24,0
 1638 0944 00C0      		rjmp .L92
 1639               	.L77:
 486:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 487:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = header->nwkSrcAddr;
 1640               		.loc 2 488 0
 1641 0946 8981      		ldd r24,Y+1
 1642 0948 9A81      		ldd r25,Y+2
 1643 094a FC01      		movw r30,r24
 1644 094c 8385      		ldd r24,Z+11
 1645 094e 9485      		ldd r25,Z+12
 1646 0950 9C83      		std Y+4,r25
 1647 0952 8B83      		std Y+3,r24
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = header->nwkDstAddr;
 1648               		.loc 2 489 0
 1649 0954 8981      		ldd r24,Y+1
 1650 0956 9A81      		ldd r25,Y+2
 1651 0958 FC01      		movw r30,r24
 1652 095a 8585      		ldd r24,Z+13
 1653 095c 9685      		ldd r25,Z+14
 1654 095e 9E83      		std Y+6,r25
 1655 0960 8D83      		std Y+5,r24
 490:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = header->nwkSrcEndpoint;
 1656               		.loc 2 490 0
 1657 0962 8981      		ldd r24,Y+1
 1658 0964 9A81      		ldd r25,Y+2
 1659 0966 FC01      		movw r30,r24
 1660 0968 8785      		ldd r24,Z+15
 1661 096a 8F70      		andi r24,lo8(15)
 1662 096c 8F83      		std Y+7,r24
 491:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = header->nwkDstEndpoint;
 1663               		.loc 2 491 0
 1664 096e 8981      		ldd r24,Y+1
 1665 0970 9A81      		ldd r25,Y+2
 1666 0972 FC01      		movw r30,r24
 1667 0974 8785      		ldd r24,Z+15
 1668 0976 8295      		swap r24
 1669 0978 8F70      		andi r24,lo8(15)
 1670 097a 8887      		std Y+8,r24
 492:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1671               		.loc 2 492 0
 1672 097c 8F85      		ldd r24,Y+15
 1673 097e 9889      		ldd r25,Y+16
 1674 0980 8F57      		subi r24,127
 1675 0982 9F4F      		sbci r25,-1
 1676 0984 FC01      		movw r30,r24
 1677 0986 8081      		ld r24,Z
 1678 0988 9181      		ldd r25,Z+1
 1679 098a 9B87      		std Y+11,r25
 1680 098c 8A87      		std Y+10,r24
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1681               		.loc 2 493 0
 1682 098e 8F85      		ldd r24,Y+15
 1683 0990 9889      		ldd r25,Y+16
 1684 0992 0E94 0000 		call nwkFramePayloadSize
 1685 0996 8C87      		std Y+12,r24
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1686               		.loc 2 494 0
 1687 0998 8F85      		ldd r24,Y+15
 1688 099a 9889      		ldd r25,Y+16
 1689 099c 8D57      		subi r24,125
 1690 099e 9F4F      		sbci r25,-1
 1691 09a0 FC01      		movw r30,r24
 1692 09a2 8081      		ld r24,Z
 1693 09a4 8D87      		std Y+13,r24
 495:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1694               		.loc 2 495 0
 1695 09a6 8F85      		ldd r24,Y+15
 1696 09a8 9889      		ldd r25,Y+16
 1697 09aa 8C57      		subi r24,124
 1698 09ac 9F4F      		sbci r25,-1
 1699 09ae FC01      		movw r30,r24
 1700 09b0 8081      		ld r24,Z
 1701 09b2 8E87      		std Y+14,r24
 496:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 497:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK_REQUESTED : 0;
 1702               		.loc 2 497 0
 1703 09b4 8981      		ldd r24,Y+1
 1704 09b6 9A81      		ldd r25,Y+2
 1705 09b8 FC01      		movw r30,r24
 1706 09ba 8185      		ldd r24,Z+9
 1707 09bc 982F      		mov r25,r24
 1708 09be 9170      		andi r25,lo8(1)
 1709 09c0 81E0      		ldi r24,lo8(1)
 1710 09c2 9923      		tst r25
 1711 09c4 01F4      		brne .L79
 1712 09c6 80E0      		ldi r24,0
 1713               	.L79:
 1714 09c8 8987      		std Y+9,r24
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECURED : 0;
 1715               		.loc 2 498 0
 1716 09ca 8985      		ldd r24,Y+9
 1717 09cc 282F      		mov r18,r24
 1718 09ce 8981      		ldd r24,Y+1
 1719 09d0 9A81      		ldd r25,Y+2
 1720 09d2 FC01      		movw r30,r24
 1721 09d4 8185      		ldd r24,Z+9
 1722 09d6 8270      		andi r24,lo8(2)
 1723 09d8 822B      		or r24,r18
 1724 09da 8987      		std Y+9,r24
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LINK_LOCAL : 0;
 1725               		.loc 2 499 0
 1726 09dc 8985      		ldd r24,Y+9
 1727 09de 282F      		mov r18,r24
 1728 09e0 8981      		ldd r24,Y+1
 1729 09e2 9A81      		ldd r25,Y+2
 1730 09e4 FC01      		movw r30,r24
 1731 09e6 8185      		ldd r24,Z+9
 1732 09e8 8470      		andi r24,lo8(4)
 1733 09ea 8823      		tst r24
 1734 09ec 01F0      		breq .L80
 1735               		.loc 2 499 0 is_stmt 0 discriminator 1
 1736 09ee 80E2      		ldi r24,lo8(32)
 1737 09f0 00C0      		rjmp .L81
 1738               	.L80:
 1739               		.loc 2 499 0 discriminator 2
 1740 09f2 80E0      		ldi r24,0
 1741               	.L81:
 1742               		.loc 2 499 0 discriminator 4
 1743 09f4 822B      		or r24,r18
 1744 09f6 8987      		std Y+9,r24
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MULTICAST : 0;
 1745               		.loc 2 500 0 is_stmt 1 discriminator 4
 1746 09f8 8985      		ldd r24,Y+9
 1747 09fa 282F      		mov r18,r24
 1748 09fc 8981      		ldd r24,Y+1
 1749 09fe 9A81      		ldd r25,Y+2
 1750 0a00 FC01      		movw r30,r24
 1751 0a02 8185      		ldd r24,Z+9
 1752 0a04 8870      		andi r24,lo8(8)
 1753 0a06 8823      		tst r24
 1754 0a08 01F0      		breq .L82
 1755               		.loc 2 500 0 is_stmt 0 discriminator 1
 1756 0a0a 80E4      		ldi r24,lo8(64)
 1757 0a0c 00C0      		rjmp .L83
 1758               	.L82:
 1759               		.loc 2 500 0 discriminator 2
 1760 0a0e 80E0      		ldi r24,0
 1761               	.L83:
 1762               		.loc 2 500 0 discriminator 4
 1763 0a10 822B      		or r24,r18
 1764 0a12 8987      		std Y+9,r24
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.beacon) ? NWK_IND_OPT_BEACON : 0;
 1765               		.loc 2 501 0 is_stmt 1 discriminator 4
 1766 0a14 8985      		ldd r24,Y+9
 1767 0a16 282F      		mov r18,r24
 1768 0a18 8981      		ldd r24,Y+1
 1769 0a1a 9A81      		ldd r25,Y+2
 1770 0a1c FC01      		movw r30,r24
 1771 0a1e 8185      		ldd r24,Z+9
 1772 0a20 8071      		andi r24,lo8(16)
 1773 0a22 8823      		tst r24
 1774 0a24 01F0      		breq .L84
 1775               		.loc 2 501 0 is_stmt 0 discriminator 1
 1776 0a26 80E8      		ldi r24,lo8(-128)
 1777 0a28 00C0      		rjmp .L85
 1778               	.L84:
 1779               		.loc 2 501 0 discriminator 2
 1780 0a2a 80E0      		ldi r24,0
 1781               	.L85:
 1782               		.loc 2 501 0 discriminator 4
 1783 0a2c 822B      		or r24,r18
 1784 0a2e 8987      		std Y+9,r24
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_ADDR == header->nwkDstAddr) ? NWK_IND_OPT_BROADCAST : 0;
 1785               		.loc 2 502 0 is_stmt 1 discriminator 4
 1786 0a30 8985      		ldd r24,Y+9
 1787 0a32 282F      		mov r18,r24
 1788 0a34 8981      		ldd r24,Y+1
 1789 0a36 9A81      		ldd r25,Y+2
 1790 0a38 FC01      		movw r30,r24
 1791 0a3a 8585      		ldd r24,Z+13
 1792 0a3c 9685      		ldd r25,Z+14
 1793 0a3e 0196      		adiw r24,1
 1794 0a40 01F4      		brne .L86
 1795               		.loc 2 502 0 is_stmt 0 discriminator 1
 1796 0a42 84E0      		ldi r24,lo8(4)
 1797 0a44 00C0      		rjmp .L87
 1798               	.L86:
 1799               		.loc 2 502 0 discriminator 2
 1800 0a46 80E0      		ldi r24,0
 1801               	.L87:
 1802               		.loc 2 502 0 discriminator 4
 1803 0a48 822B      		or r24,r18
 1804 0a4a 8987      		std Y+9,r24
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (header->nwkSrcAddr == header->macSrcAddr) ? NWK_IND_OPT_LOCAL : 0;
 1805               		.loc 2 503 0 is_stmt 1 discriminator 4
 1806 0a4c 8985      		ldd r24,Y+9
 1807 0a4e 482F      		mov r20,r24
 1808 0a50 8981      		ldd r24,Y+1
 1809 0a52 9A81      		ldd r25,Y+2
 1810 0a54 FC01      		movw r30,r24
 1811 0a56 2385      		ldd r18,Z+11
 1812 0a58 3485      		ldd r19,Z+12
 1813 0a5a 8981      		ldd r24,Y+1
 1814 0a5c 9A81      		ldd r25,Y+2
 1815 0a5e FC01      		movw r30,r24
 1816 0a60 8781      		ldd r24,Z+7
 1817 0a62 9085      		ldd r25,Z+8
 1818 0a64 2817      		cp r18,r24
 1819 0a66 3907      		cpc r19,r25
 1820 0a68 01F4      		brne .L88
 1821               		.loc 2 503 0 is_stmt 0 discriminator 1
 1822 0a6a 88E0      		ldi r24,lo8(8)
 1823 0a6c 00C0      		rjmp .L89
 1824               	.L88:
 1825               		.loc 2 503 0 discriminator 2
 1826 0a6e 80E0      		ldi r24,0
 1827               	.L89:
 1828               		.loc 2 503 0 discriminator 4
 1829 0a70 842B      		or r24,r20
 1830 0a72 8987      		std Y+9,r24
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_PANID == header->macDstPanId) ? NWK_IND_OPT_BROADCAST_PAN_ID : 0;
 1831               		.loc 2 504 0 is_stmt 1 discriminator 4
 1832 0a74 8985      		ldd r24,Y+9
 1833 0a76 282F      		mov r18,r24
 1834 0a78 8981      		ldd r24,Y+1
 1835 0a7a 9A81      		ldd r25,Y+2
 1836 0a7c FC01      		movw r30,r24
 1837 0a7e 8381      		ldd r24,Z+3
 1838 0a80 9481      		ldd r25,Z+4
 1839 0a82 0196      		adiw r24,1
 1840 0a84 01F4      		brne .L90
 1841               		.loc 2 504 0 is_stmt 0 discriminator 1
 1842 0a86 80E1      		ldi r24,lo8(16)
 1843 0a88 00C0      		rjmp .L91
 1844               	.L90:
 1845               		.loc 2 504 0 discriminator 2
 1846 0a8a 80E0      		ldi r24,0
 1847               	.L91:
 1848               		.loc 2 504 0 discriminator 4
 1849 0a8c 822B      		or r24,r18
 1850 0a8e 8987      		std Y+9,r24
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 1851               		.loc 2 506 0 is_stmt 1 discriminator 4
 1852 0a90 8981      		ldd r24,Y+1
 1853 0a92 9A81      		ldd r25,Y+2
 1854 0a94 FC01      		movw r30,r24
 1855 0a96 8785      		ldd r24,Z+15
 1856 0a98 8295      		swap r24
 1857 0a9a 8F70      		andi r24,lo8(15)
 1858 0a9c 882F      		mov r24,r24
 1859 0a9e 90E0      		ldi r25,0
 1860 0aa0 0396      		adiw r24,3
 1861 0aa2 880F      		lsl r24
 1862 0aa4 991F      		rol r25
 1863 0aa6 8050      		subi r24,lo8(-(nwkIb))
 1864 0aa8 9040      		sbci r25,hi8(-(nwkIb))
 1865 0aaa FC01      		movw r30,r24
 1866 0aac 2081      		ld r18,Z
 1867 0aae 3181      		ldd r19,Z+1
 1868 0ab0 CE01      		movw r24,r28
 1869 0ab2 0396      		adiw r24,3
 1870 0ab4 F901      		movw r30,r18
 1871 0ab6 0995      		icall
 1872               	.L92:
 1873               	/* epilogue start */
 507:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1874               		.loc 2 507 0 discriminator 1
 1875 0ab8 6096      		adiw r28,16
 1876 0aba 0FB6      		in __tmp_reg__,__SREG__
 1877 0abc F894      		cli
 1878 0abe DEBF      		out __SP_H__,r29
 1879 0ac0 0FBE      		out __SREG__,__tmp_reg__
 1880 0ac2 CDBF      		out __SP_L__,r28
 1881 0ac4 DF91      		pop r29
 1882 0ac6 CF91      		pop r28
 1883 0ac8 0895      		ret
 1884               		.cfi_endproc
 1885               	.LFE74:
 1888               	nwkRxIndicateBeaconFrame:
 1889               	.LFB75:
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 509:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 511:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateBeaconFrame(NwkFrame_t *frame)
 512:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1890               		.loc 2 512 0
 1891               		.cfi_startproc
 1892 0aca CF93      		push r28
 1893               	.LCFI40:
 1894               		.cfi_def_cfa_offset 3
 1895               		.cfi_offset 28, -2
 1896 0acc DF93      		push r29
 1897               	.LCFI41:
 1898               		.cfi_def_cfa_offset 4
 1899               		.cfi_offset 29, -3
 1900 0ace CDB7      		in r28,__SP_L__
 1901 0ad0 DEB7      		in r29,__SP_H__
 1902               	.LCFI42:
 1903               		.cfi_def_cfa_register 28
 1904 0ad2 6097      		sbiw r28,16
 1905               	.LCFI43:
 1906               		.cfi_def_cfa_offset 20
 1907 0ad4 0FB6      		in __tmp_reg__,__SREG__
 1908 0ad6 F894      		cli
 1909 0ad8 DEBF      		out __SP_H__,r29
 1910 0ada 0FBE      		out __SREG__,__tmp_reg__
 1911 0adc CDBF      		out __SP_L__,r28
 1912               	/* prologue: function */
 1913               	/* frame size = 16 */
 1914               	/* stack size = 18 */
 1915               	.L__stack_usage = 18
 1916 0ade 988B      		std Y+16,r25
 1917 0ae0 8F87      		std Y+15,r24
 513:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1918               		.loc 2 513 0
 1919 0ae2 8F85      		ldd r24,Y+15
 1920 0ae4 9889      		ldd r25,Y+16
 1921 0ae6 0296      		adiw r24,2
 1922 0ae8 9A83      		std Y+2,r25
 1923 0aea 8983      		std Y+1,r24
 514:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 515:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 516:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1924               		.loc 2 516 0
 1925 0aec 8F85      		ldd r24,Y+15
 1926 0aee 9889      		ldd r25,Y+16
 1927 0af0 24E2      		ldi r18,lo8(36)
 1928 0af2 FC01      		movw r30,r24
 1929 0af4 2083      		st Z,r18
 517:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 518:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[0]) {
 1930               		.loc 2 518 0
 1931 0af6 8091 0000 		lds r24,nwkIb+6
 1932 0afa 9091 0000 		lds r25,nwkIb+6+1
 1933 0afe 892B      		or r24,r25
 1934 0b00 01F4      		brne .L94
 519:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1935               		.loc 2 519 0
 1936 0b02 80E0      		ldi r24,0
 1937 0b04 00C0      		rjmp .L96
 1938               	.L94:
 520:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 521:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 522:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = frame->beacon.macSrcAddr;
 1939               		.loc 2 522 0
 1940 0b06 8F85      		ldd r24,Y+15
 1941 0b08 9889      		ldd r25,Y+16
 1942 0b0a FC01      		movw r30,r24
 1943 0b0c 8781      		ldd r24,Z+7
 1944 0b0e 9085      		ldd r25,Z+8
 1945 0b10 9C83      		std Y+4,r25
 1946 0b12 8B83      		std Y+3,r24
 523:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = frame->beacon.macSrcAddr;
 1947               		.loc 2 523 0
 1948 0b14 8F85      		ldd r24,Y+15
 1949 0b16 9889      		ldd r25,Y+16
 1950 0b18 FC01      		movw r30,r24
 1951 0b1a 8781      		ldd r24,Z+7
 1952 0b1c 9085      		ldd r25,Z+8
 1953 0b1e 9E83      		std Y+6,r25
 1954 0b20 8D83      		std Y+5,r24
 524:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 1955               		.loc 2 524 0
 1956 0b22 1F82      		std Y+7,__zero_reg__
 525:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 1957               		.loc 2 525 0
 1958 0b24 1886      		std Y+8,__zero_reg__
 526:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1959               		.loc 2 526 0
 1960 0b26 8F85      		ldd r24,Y+15
 1961 0b28 9889      		ldd r25,Y+16
 1962 0b2a 8F57      		subi r24,127
 1963 0b2c 9F4F      		sbci r25,-1
 1964 0b2e FC01      		movw r30,r24
 1965 0b30 8081      		ld r24,Z
 1966 0b32 9181      		ldd r25,Z+1
 1967 0b34 9B87      		std Y+11,r25
 1968 0b36 8A87      		std Y+10,r24
 527:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1969               		.loc 2 527 0
 1970 0b38 8F85      		ldd r24,Y+15
 1971 0b3a 9889      		ldd r25,Y+16
 1972 0b3c 0E94 0000 		call nwkFramePayloadSize
 1973 0b40 8C87      		std Y+12,r24
 528:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1974               		.loc 2 528 0
 1975 0b42 8F85      		ldd r24,Y+15
 1976 0b44 9889      		ldd r25,Y+16
 1977 0b46 8D57      		subi r24,125
 1978 0b48 9F4F      		sbci r25,-1
 1979 0b4a FC01      		movw r30,r24
 1980 0b4c 8081      		ld r24,Z
 1981 0b4e 8D87      		std Y+13,r24
 529:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1982               		.loc 2 529 0
 1983 0b50 8F85      		ldd r24,Y+15
 1984 0b52 9889      		ldd r25,Y+16
 1985 0b54 8C57      		subi r24,124
 1986 0b56 9F4F      		sbci r25,-1
 1987 0b58 FC01      		movw r30,r24
 1988 0b5a 8081      		ld r24,Z
 1989 0b5c 8E87      		std Y+14,r24
 530:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 531:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_BEACON;
 1990               		.loc 2 531 0
 1991 0b5e 80E8      		ldi r24,lo8(-128)
 1992 0b60 8987      		std Y+9,r24
 532:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 533:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 1993               		.loc 2 533 0
 1994 0b62 8981      		ldd r24,Y+1
 1995 0b64 9A81      		ldd r25,Y+2
 1996 0b66 FC01      		movw r30,r24
 1997 0b68 8785      		ldd r24,Z+15
 1998 0b6a 8295      		swap r24
 1999 0b6c 8F70      		andi r24,lo8(15)
 2000 0b6e 882F      		mov r24,r24
 2001 0b70 90E0      		ldi r25,0
 2002 0b72 0396      		adiw r24,3
 2003 0b74 880F      		lsl r24
 2004 0b76 991F      		rol r25
 2005 0b78 8050      		subi r24,lo8(-(nwkIb))
 2006 0b7a 9040      		sbci r25,hi8(-(nwkIb))
 2007 0b7c FC01      		movw r30,r24
 2008 0b7e 2081      		ld r18,Z
 2009 0b80 3181      		ldd r19,Z+1
 2010 0b82 CE01      		movw r24,r28
 2011 0b84 0396      		adiw r24,3
 2012 0b86 F901      		movw r30,r18
 2013 0b88 0995      		icall
 2014               	.L96:
 2015               	/* epilogue start */
 534:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2016               		.loc 2 534 0 discriminator 1
 2017 0b8a 6096      		adiw r28,16
 2018 0b8c 0FB6      		in __tmp_reg__,__SREG__
 2019 0b8e F894      		cli
 2020 0b90 DEBF      		out __SP_H__,r29
 2021 0b92 0FBE      		out __SREG__,__tmp_reg__
 2022 0b94 CDBF      		out __SP_L__,r28
 2023 0b96 DF91      		pop r29
 2024 0b98 CF91      		pop r28
 2025 0b9a 0895      		ret
 2026               		.cfi_endproc
 2027               	.LFE75:
 2030               	nwkRxHandleIndication:
 2031               	.LFB76:
 535:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 536:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 537:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 538:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleIndication(NwkFrame_t *frame)
 539:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2032               		.loc 2 539 0
 2033               		.cfi_startproc
 2034 0b9c CF93      		push r28
 2035               	.LCFI44:
 2036               		.cfi_def_cfa_offset 3
 2037               		.cfi_offset 28, -2
 2038 0b9e DF93      		push r29
 2039               	.LCFI45:
 2040               		.cfi_def_cfa_offset 4
 2041               		.cfi_offset 29, -3
 2042 0ba0 00D0      		rcall .
 2043 0ba2 1F92      		push __zero_reg__
 2044               	.LCFI46:
 2045               		.cfi_def_cfa_offset 7
 2046 0ba4 CDB7      		in r28,__SP_L__
 2047 0ba6 DEB7      		in r29,__SP_H__
 2048               	.LCFI47:
 2049               		.cfi_def_cfa_register 28
 2050               	/* prologue: function */
 2051               	/* frame size = 3 */
 2052               	/* stack size = 5 */
 2053               	.L__stack_usage = 5
 2054 0ba8 9B83      		std Y+3,r25
 2055 0baa 8A83      		std Y+2,r24
 540:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool ack;
 541:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 542:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = 0;
 2056               		.loc 2 542 0
 2057 0bac 1092 0000 		sts nwkRxAckControl,__zero_reg__
 543:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack = nwkRxIndicateDataFrame(frame);
 2058               		.loc 2 543 0
 2059 0bb0 8A81      		ldd r24,Y+2
 2060 0bb2 9B81      		ldd r25,Y+3
 2061 0bb4 0E94 0000 		call nwkRxIndicateDataFrame
 2062 0bb8 8983      		std Y+1,r24
 544:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 545:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == frame->header.nwkFcf.ackRequest) {
 2063               		.loc 2 545 0
 2064 0bba 8A81      		ldd r24,Y+2
 2065 0bbc 9B81      		ldd r25,Y+3
 2066 0bbe FC01      		movw r30,r24
 2067 0bc0 8385      		ldd r24,Z+11
 2068 0bc2 8170      		andi r24,lo8(1)
 2069 0bc4 8823      		tst r24
 2070 0bc6 01F4      		brne .L98
 546:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2071               		.loc 2 546 0
 2072 0bc8 1982      		std Y+1,__zero_reg__
 2073               	.L98:
 547:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 548:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == frame->header.macDstAddr &&
 2074               		.loc 2 549 0
 2075 0bca 8A81      		ldd r24,Y+2
 2076 0bcc 9B81      		ldd r25,Y+3
 2077 0bce FC01      		movw r30,r24
 2078 0bd0 8781      		ldd r24,Z+7
 2079 0bd2 9085      		ldd r25,Z+8
 2080 0bd4 0196      		adiw r24,1
 2081 0bd6 01F4      		brne .L99
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2082               		.loc 2 550 0 discriminator 1
 2083 0bd8 2091 0000 		lds r18,nwkIb
 2084 0bdc 3091 0000 		lds r19,nwkIb+1
 2085 0be0 8A81      		ldd r24,Y+2
 2086 0be2 9B81      		ldd r25,Y+3
 2087 0be4 FC01      		movw r30,r24
 2088 0be6 8785      		ldd r24,Z+15
 2089 0be8 9089      		ldd r25,Z+16
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2090               		.loc 2 549 0 discriminator 1
 2091 0bea 2817      		cp r18,r24
 2092 0bec 3907      		cpc r19,r25
 2093 0bee 01F4      		brne .L99
 551:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			0 == frame->header.nwkFcf.multicast) {
 2094               		.loc 2 551 0
 2095 0bf0 8A81      		ldd r24,Y+2
 2096 0bf2 9B81      		ldd r25,Y+3
 2097 0bf4 FC01      		movw r30,r24
 2098 0bf6 8385      		ldd r24,Z+11
 2099 0bf8 8870      		andi r24,lo8(8)
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2100               		.loc 2 550 0
 2101 0bfa 8823      		tst r24
 2102 0bfc 01F4      		brne .L99
 552:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = true;
 2103               		.loc 2 552 0
 2104 0bfe 81E0      		ldi r24,lo8(1)
 2105 0c00 8983      		std Y+1,r24
 2106               	.L99:
 553:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 554:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 555:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == frame->header.macDstPanId) {
 2107               		.loc 2 555 0
 2108 0c02 8A81      		ldd r24,Y+2
 2109 0c04 9B81      		ldd r25,Y+3
 2110 0c06 FC01      		movw r30,r24
 2111 0c08 8581      		ldd r24,Z+5
 2112 0c0a 9681      		ldd r25,Z+6
 2113 0c0c 0196      		adiw r24,1
 2114 0c0e 01F4      		brne .L100
 556:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2115               		.loc 2 556 0
 2116 0c10 1982      		std Y+1,__zero_reg__
 2117               	.L100:
 557:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 558:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 559:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == nwkIb.addr) {
 2118               		.loc 2 559 0
 2119 0c12 8091 0000 		lds r24,nwkIb
 2120 0c16 9091 0000 		lds r25,nwkIb+1
 2121 0c1a 0196      		adiw r24,1
 2122 0c1c 01F4      		brne .L101
 560:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2123               		.loc 2 560 0
 2124 0c1e 1982      		std Y+1,__zero_reg__
 2125               	.L101:
 561:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 562:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 563:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ack) {
 2126               		.loc 2 563 0
 2127 0c20 8981      		ldd r24,Y+1
 2128 0c22 8823      		tst r24
 2129 0c24 01F0      		breq .L102
 564:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxSendAck(frame);
 2130               		.loc 2 564 0
 2131 0c26 8A81      		ldd r24,Y+2
 2132 0c28 9B81      		ldd r25,Y+3
 2133 0c2a 0E94 0000 		call nwkRxSendAck
 2134               	.L102:
 565:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 566:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 567:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2135               		.loc 2 567 0
 2136 0c2e 8A81      		ldd r24,Y+2
 2137 0c30 9B81      		ldd r25,Y+3
 2138 0c32 24E2      		ldi r18,lo8(36)
 2139 0c34 FC01      		movw r30,r24
 2140 0c36 2083      		st Z,r18
 568:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2141               		.loc 2 568 0
 2142 0c38 0000      		nop
 2143               	/* epilogue start */
 2144 0c3a 0F90      		pop __tmp_reg__
 2145 0c3c 0F90      		pop __tmp_reg__
 2146 0c3e 0F90      		pop __tmp_reg__
 2147 0c40 DF91      		pop r29
 2148 0c42 CF91      		pop r28
 2149 0c44 0895      		ret
 2150               		.cfi_endproc
 2151               	.LFE76:
 2153               	.global	nwkRxTaskHandler
 2155               	nwkRxTaskHandler:
 2156               	.LFB77:
 569:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 570:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 571:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Rx Module task handler
 572:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 573:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxTaskHandler(void)
 574:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2157               		.loc 2 574 0
 2158               		.cfi_startproc
 2159 0c46 CF93      		push r28
 2160               	.LCFI48:
 2161               		.cfi_def_cfa_offset 3
 2162               		.cfi_offset 28, -2
 2163 0c48 DF93      		push r29
 2164               	.LCFI49:
 2165               		.cfi_def_cfa_offset 4
 2166               		.cfi_offset 29, -3
 2167 0c4a 00D0      		rcall .
 2168               	.LCFI50:
 2169               		.cfi_def_cfa_offset 6
 2170 0c4c CDB7      		in r28,__SP_L__
 2171 0c4e DEB7      		in r29,__SP_H__
 2172               	.LCFI51:
 2173               		.cfi_def_cfa_register 28
 2174               	/* prologue: function */
 2175               	/* frame size = 2 */
 2176               	/* stack size = 4 */
 2177               	.L__stack_usage = 4
 575:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame = NULL;
 2178               		.loc 2 575 0
 2179 0c50 1A82      		std Y+2,__zero_reg__
 2180 0c52 1982      		std Y+1,__zero_reg__
 576:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 2181               		.loc 2 577 0
 2182 0c54 00C0      		rjmp .L104
 2183               	.L110:
 578:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2184               		.loc 2 578 0
 2185 0c56 8981      		ldd r24,Y+1
 2186 0c58 9A81      		ldd r25,Y+2
 2187 0c5a FC01      		movw r30,r24
 2188 0c5c 8081      		ld r24,Z
 2189 0c5e 882F      		mov r24,r24
 2190 0c60 90E0      		ldi r25,0
 2191 0c62 8232      		cpi r24,34
 2192 0c64 9105      		cpc r25,__zero_reg__
 2193 0c66 01F0      		breq .L105
 2194 0c68 8332      		cpi r24,35
 2195 0c6a 9105      		cpc r25,__zero_reg__
 2196 0c6c 04F4      		brge .L106
 2197 0c6e 8097      		sbiw r24,32
 2198 0c70 01F0      		breq .L107
 2199 0c72 00C0      		rjmp .L104
 2200               	.L106:
 2201 0c74 8432      		cpi r24,36
 2202 0c76 9105      		cpc r25,__zero_reg__
 2203 0c78 01F0      		breq .L108
 2204 0c7a 8597      		sbiw r24,37
 2205 0c7c 01F0      		breq .L109
 2206 0c7e 00C0      		rjmp .L104
 2207               	.L107:
 579:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_RECEIVED:
 580:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 581:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleReceivedFrame(frame);
 2208               		.loc 2 581 0
 2209 0c80 8981      		ldd r24,Y+1
 2210 0c82 9A81      		ldd r25,Y+2
 2211 0c84 0E94 0000 		call nwkRxHandleReceivedFrame
 582:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 583:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2212               		.loc 2 583 0
 2213 0c88 00C0      		rjmp .L104
 2214               	.L105:
 584:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 585:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 586:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_DECRYPT:
 587:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 588:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkSecurityProcess(frame, false);
 589:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 590:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 591:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 592:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 593:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_INDICATE:
 594:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 595:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleIndication(frame);
 2215               		.loc 2 595 0
 2216 0c8a 8981      		ldd r24,Y+1
 2217 0c8c 9A81      		ldd r25,Y+2
 2218 0c8e 0E94 0000 		call nwkRxHandleIndication
 596:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 597:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2219               		.loc 2 597 0
 2220 0c92 00C0      		rjmp .L104
 2221               	.L108:
 598:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 599:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 600:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_ROUTE:
 601:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 602:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRouteFrame(frame);
 603:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 604:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 605:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 606:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 607:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_FINISH:
 608:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 609:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkFrameFree(frame);
 2222               		.loc 2 609 0
 2223 0c94 8981      		ldd r24,Y+1
 2224 0c96 9A81      		ldd r25,Y+2
 2225 0c98 0E94 0000 		call nwkFrameFree
 610:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 611:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2226               		.loc 2 611 0
 2227 0c9c 00C0      		rjmp .L104
 2228               	.L109:
 612:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 613:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_BEACON:
 614:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 615:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateBeaconFrame(frame);
 2229               		.loc 2 615 0
 2230 0c9e 8981      		ldd r24,Y+1
 2231 0ca0 9A81      		ldd r25,Y+2
 2232 0ca2 0E94 0000 		call nwkRxIndicateBeaconFrame
 616:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 617:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2233               		.loc 2 617 0
 2234 0ca6 0000      		nop
 2235               	.L104:
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2236               		.loc 2 577 0
 2237 0ca8 8981      		ldd r24,Y+1
 2238 0caa 9A81      		ldd r25,Y+2
 2239 0cac 0E94 0000 		call nwkFrameNext
 2240 0cb0 9A83      		std Y+2,r25
 2241 0cb2 8983      		std Y+1,r24
 2242 0cb4 8981      		ldd r24,Y+1
 2243 0cb6 9A81      		ldd r25,Y+2
 2244 0cb8 892B      		or r24,r25
 2245 0cba 01F4      		brne .L110
 618:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 619:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 620:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2246               		.loc 2 620 0
 2247 0cbc 0000      		nop
 2248               	/* epilogue start */
 2249 0cbe 0F90      		pop __tmp_reg__
 2250 0cc0 0F90      		pop __tmp_reg__
 2251 0cc2 DF91      		pop r29
 2252 0cc4 CF91      		pop r28
 2253 0cc6 0895      		ret
 2254               		.cfi_endproc
 2255               	.LFE77:
 2257               	.Letext0:
 2258               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 2259               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 2260               		.file 5 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 2261               		.file 6 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 2262               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 2263               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkRx.c
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:7      *ABS*:00000001 __zero_reg__
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:12     .text:00000000 nwkFramePayloadSize
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:74     .bss.nwkRxDuplicateRejectionTable:00000000 nwkRxDuplicateRejectionTable
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:79     .bss.nwkRxAckControl:00000000 nwkRxAckControl
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:84     .bss.nwkRxDuplicateRejectionTimer:00000000 nwkRxDuplicateRejectionTimer
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:89     .text:00000044 nwkRxInit
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:665    .text:00000396 nwkRxDuplicateRejectionTimerHandler
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:1063   .text:000005d8 nwkRxSeriveDataInd
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:176    .text:000000b6 PHY_DataInd
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:455    .text:0000026c nwkRxSendAck
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:627    .text:0000037a NWK_SetAckControl
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:780    .text:00000430 nwkRxRejectDuplicate
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:1131   .text:00000622 nwkRxHandleReceivedFrame
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:1581   .text:000008fc nwkRxIndicateDataFrame
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:1888   .text:00000aca nwkRxIndicateBeaconFrame
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:2030   .text:00000b9c nwkRxHandleIndication
C:\Users\guilh\AppData\Local\Temp\cc8J0Tok.s:2155   .text:00000c46 nwkRxTaskHandler

UNDEFINED SYMBOLS
NWK_OpenEndpoint
nwkFrameAlloc
memcpy
nwkFrameCommandInit
nwkTxFrame
SYS_TimerStart
nwkTxAckReceived
nwkIb
NWK_GroupIsMember
nwkTxBroadcastFrame
nwkFrameFree
nwkFrameNext
__do_clear_bss
