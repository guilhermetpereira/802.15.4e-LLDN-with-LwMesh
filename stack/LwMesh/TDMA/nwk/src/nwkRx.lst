   1               		.file	"nwkRx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	n,1,1
  12               		.comm	tTS,4,1
  13               		.comm	macLLDNnumTimeSlots,2,1
  14               		.comm	macLLDNnumUplinkTS,2,1
  15               		.comm	macLLDNRetransmitTS,2,1
  17               	nwkFramePayloadSize:
  18               	.LFB65:
  19               		.file 1 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
   1:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /**
   2:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \file nwkFrame.h
   3:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   4:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \brief Frame buffers management interface
   5:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   6:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   8:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  10:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  13:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  16:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  20:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  23:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  26:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  38:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  40:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  41:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  42:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  43:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*
  44:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  46:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  48:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  49:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #ifndef _NWK_FRAME_H_
  50:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define _NWK_FRAME_H_
  51:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  52:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Includes ---------------------------------------------------------------*/
  53:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include <stdint.h>
  54:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include "compiler.h"
  55:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  56:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Definitions ------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define NWK_FRAME_MAX_PAYLOAD_SIZE   127
  58:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  59:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Types ------------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_SET(1)
  61:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameHeader_t {
  62:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  63:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  64:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstPanId;
  65:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstAddr;
  66:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  67:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  68:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  69:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t ackRequest : 1;
  70:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t security   : 1;
  71:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t linkLocal  : 1;
  72:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t multicast  : 1;
  73:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t beacon     : 1;
  74:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved   : 3;
  75:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} nwkFcf;
  76:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t nwkSeq;
  77:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkSrcAddr;
  78:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkDstAddr;
  79:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  80:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkSrcEndpoint : 4;
  81:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkDstEndpoint : 4;
  82:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
  83:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameHeader_t;
  84:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  85:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeader_t {
  86:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  87:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  88:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcPanId;
  89:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  90:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
  91:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
  92:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t beaconOrder			: 4;
  93:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t superframeOrder		: 4;
  94:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t finalCAPslot			: 4;
  95:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t BatteryLifeExtension	: 1;
  96:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t Reserved				: 1;
  97:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t PANCoordinator			: 1;
  98:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t AssociationPermit		: 1;
  99:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSFS;
 100:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macGTS;
 101:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macPending;
 102:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeader_t;
 103:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 104:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 105:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeaderLLDN_t {
 106:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/******* MHR *****/
 107:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// struct
 108:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// {
 109:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameType 				: 3;
 110:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SecurityEnabled 	: 1;
 111:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameVersion			: 1;
 112:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t ackRequest				: 1;
 113:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SubFrameType			: 2;
 114:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// } macFcf;
 115:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 116:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 117:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 118:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 119:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 120:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 121:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 122:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 123:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 124:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 125:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/****** MAC Payload *******/
 126:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 127:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 128:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txState 			: 3;
 129:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txDir 				: 1;
 130:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved			: 1;
 131:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t numBaseMgmtTimeslots: 3; // number of managment time slots
 132:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 										// uplink and downlink must be equal
 133:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} Flags;
 134:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 135:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t PanId;
 136:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t confSeqNumber;
 137:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t TimeSlotSize;
 138:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t NumberOfBaseTimeslotsinSuperframe;
 139:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 140:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeaderLLDN_t;
 141:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 142:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameGeneralHeaderLLDN_t {
 143:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	#if (TAL_TYPE == AT86RF233)
 144:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	#endif
 145:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// uint8_t PHR;
 146:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 147:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 148:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 149:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 150:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 151:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 152:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 153:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 154:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 155:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 156:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 157:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameGeneralHeaderLLDN_t;
 158:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 159:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 160:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameMulticastHeader_t {
 161:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nonMemberRadius    : 4;
 162:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxNonMemberRadius : 4;
 163:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t memberRadius       : 4;
 164:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxMemberRadius    : 4;
 165:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameMulticastHeader_t;
 166:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 167:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct NwkFrame_t {
 168:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t state;
 169:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t size;
 170:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 171:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 172:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameHeader_t header;
 173:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeader_t beacon;
 174:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeaderLLDN_t LLbeacon;
 175:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameGeneralHeaderLLDN_t LLgeneral;
 176:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t data[NWK_FRAME_MAX_PAYLOAD_SIZE];
 177:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 178:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 179:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t *payload;
 180:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 181:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 182:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 183:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t lqi;
 184:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			int8_t rssi;
 185:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} rx;
 186:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 187:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 188:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t status;
 189:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint16_t timeout;
 190:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t control;
 191:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			void (*confirm)(struct NwkFrame_t *frame);
 192:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} tx;
 193:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 194:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrame_t;
 195:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_RESET()
 196:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Prototypes -------------------------------------------------------------*/
 197:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameInit(void);
 198:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc(void);
 199:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameFree(NwkFrame_t *frame);
 200:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);
 201:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameCommandInit(NwkFrame_t *frame);
 202:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 203:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame);
 204:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Implementations --------------------------------------------------------*/
 205:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 206:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*************************************************************************//**
 207:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** *****************************************************************************/
 208:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** static inline uint8_t nwkFramePayloadSize(NwkFrame_t *frame)
 209:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** {
  20               		.loc 1 209 0
  21               		.cfi_startproc
  22 0000 CF93      		push r28
  23               	.LCFI0:
  24               		.cfi_def_cfa_offset 3
  25               		.cfi_offset 28, -2
  26 0002 DF93      		push r29
  27               	.LCFI1:
  28               		.cfi_def_cfa_offset 4
  29               		.cfi_offset 29, -3
  30 0004 00D0      		rcall .
  31               	.LCFI2:
  32               		.cfi_def_cfa_offset 6
  33 0006 CDB7      		in r28,__SP_L__
  34 0008 DEB7      		in r29,__SP_H__
  35               	.LCFI3:
  36               		.cfi_def_cfa_register 28
  37               	/* prologue: function */
  38               	/* frame size = 2 */
  39               	/* stack size = 4 */
  40               	.L__stack_usage = 4
  41 000a 9A83      		std Y+2,r25
  42 000c 8983      		std Y+1,r24
 210:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	return frame->size - (frame->payload - frame->data);
  43               		.loc 1 210 0
  44 000e 8981      		ldd r24,Y+1
  45 0010 9A81      		ldd r25,Y+2
  46 0012 FC01      		movw r30,r24
  47 0014 4181      		ldd r20,Z+1
  48 0016 8981      		ldd r24,Y+1
  49 0018 9A81      		ldd r25,Y+2
  50 001a 8F57      		subi r24,127
  51 001c 9F4F      		sbci r25,-1
  52 001e FC01      		movw r30,r24
  53 0020 8081      		ld r24,Z
  54 0022 9181      		ldd r25,Z+1
  55 0024 9C01      		movw r18,r24
  56 0026 8981      		ldd r24,Y+1
  57 0028 9A81      		ldd r25,Y+2
  58 002a 0296      		adiw r24,2
  59 002c B901      		movw r22,r18
  60 002e 681B      		sub r22,r24
  61 0030 790B      		sbc r23,r25
  62 0032 CB01      		movw r24,r22
  63 0034 742F      		mov r23,r20
  64 0036 781B      		sub r23,r24
  65 0038 872F      		mov r24,r23
  66               	/* epilogue start */
 211:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** }
  67               		.loc 1 211 0
  68 003a 0F90      		pop __tmp_reg__
  69 003c 0F90      		pop __tmp_reg__
  70 003e DF91      		pop r29
  71 0040 CF91      		pop r28
  72 0042 0895      		ret
  73               		.cfi_endproc
  74               	.LFE65:
  76               		.section	.bss.nwkRxDuplicateRejectionTable,"aw",@nobits
  79               	nwkRxDuplicateRejectionTable:
  80 0000 0000 0000 		.zero	250
  80      0000 0000 
  80      0000 0000 
  80      0000 0000 
  80      0000 0000 
  81               		.section	.bss.nwkRxAckControl,"aw",@nobits
  84               	nwkRxAckControl:
  85 0000 00        		.zero	1
  86               		.section	.bss.nwkRxDuplicateRejectionTimer,"aw",@nobits
  89               	nwkRxDuplicateRejectionTimer:
  90 0000 0000 0000 		.zero	13
  90      0000 0000 
  90      0000 0000 
  90      00
  91               		.text
  92               	.global	nwkRxInit
  94               	nwkRxInit:
  95               	.LFB66:
  96               		.file 2 "../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \file nwkRx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \brief Receive routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkGroup.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRoute.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkCommand.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkSecurity.h"
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRouteDiscovery.h"
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Definitions ------------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL   100 /* ms */
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define DUPLICATE_REJECTION_TTL	\
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	((NWK_DUPLICATE_REJECTION_TTL /	\
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL) + 1)
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_SERVICE_ENDPOINT_ID    0
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Types ------------------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** enum {
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_RECEIVED = 0x20,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_DECRYPT  = 0x21,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_INDICATE = 0x22,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_ROUTE    = 0x23,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_FINISH   = 0x24,
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_BEACON   = 0x25,
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLBEACON 	= 0x26,
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLCOMMAND 	= 0x27,
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLACKFRAME = 0x28,
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLDATA		= 0x29
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** };
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** typedef struct NwkDuplicateRejectionEntry_t {
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint16_t src;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t seq;
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t mask;
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t ttl;
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** } NwkDuplicateRejectionEntry_t;
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Prototypes -------------------------------------------------------------*/
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer);
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind);
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Variables --------------------------------------------------------------*/
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static NwkDuplicateRejectionEntry_t nwkRxDuplicateRejectionTable[
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DUPLICATE_REJECTION_TABLE_SIZE];
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static uint8_t nwkRxAckControl;
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static SYS_Timer_t nwkRxDuplicateRejectionTimer;
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Implementations --------------------------------------------------------*/
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Initializes the Rx module
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxInit(void)
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
  97               		.loc 2 110 0
  98               		.cfi_startproc
  99 0044 CF93      		push r28
 100               	.LCFI4:
 101               		.cfi_def_cfa_offset 3
 102               		.cfi_offset 28, -2
 103 0046 DF93      		push r29
 104               	.LCFI5:
 105               		.cfi_def_cfa_offset 4
 106               		.cfi_offset 29, -3
 107 0048 1F92      		push __zero_reg__
 108               	.LCFI6:
 109               		.cfi_def_cfa_offset 5
 110 004a CDB7      		in r28,__SP_L__
 111 004c DEB7      		in r29,__SP_H__
 112               	.LCFI7:
 113               		.cfi_def_cfa_register 28
 114               	/* prologue: function */
 115               	/* frame size = 1 */
 116               	/* stack size = 3 */
 117               	.L__stack_usage = 3
 118               	.LBB2:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 119               		.loc 2 111 0
 120 004e 1982      		std Y+1,__zero_reg__
 121 0050 00C0      		rjmp .L4
 122               	.L5:
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxDuplicateRejectionTable[i].ttl = 0;
 123               		.loc 2 112 0 discriminator 3
 124 0052 8981      		ldd r24,Y+1
 125 0054 282F      		mov r18,r24
 126 0056 30E0      		ldi r19,0
 127 0058 C901      		movw r24,r18
 128 005a 880F      		lsl r24
 129 005c 991F      		rol r25
 130 005e 880F      		lsl r24
 131 0060 991F      		rol r25
 132 0062 820F      		add r24,r18
 133 0064 931F      		adc r25,r19
 134 0066 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 135 0068 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 136 006a FC01      		movw r30,r24
 137 006c 1082      		st Z,__zero_reg__
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 138               		.loc 2 111 0 discriminator 3
 139 006e 8981      		ldd r24,Y+1
 140 0070 8F5F      		subi r24,lo8(-(1))
 141 0072 8983      		std Y+1,r24
 142               	.L4:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 143               		.loc 2 111 0 is_stmt 0 discriminator 1
 144 0074 8981      		ldd r24,Y+1
 145 0076 8233      		cpi r24,lo8(50)
 146 0078 00F0      		brlo .L5
 147               	.LBE2:
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.interval
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL;
 148               		.loc 2 116 0 is_stmt 1
 149 007a 84E6      		ldi r24,lo8(100)
 150 007c 90E0      		ldi r25,0
 151 007e A0E0      		ldi r26,0
 152 0080 B0E0      		ldi r27,0
 153 0082 8093 0000 		sts nwkRxDuplicateRejectionTimer+6,r24
 154 0086 9093 0000 		sts nwkRxDuplicateRejectionTimer+6+1,r25
 155 008a A093 0000 		sts nwkRxDuplicateRejectionTimer+6+2,r26
 156 008e B093 0000 		sts nwkRxDuplicateRejectionTimer+6+3,r27
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE;
 157               		.loc 2 117 0
 158 0092 1092 0000 		sts nwkRxDuplicateRejectionTimer+10,__zero_reg__
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.handler
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= nwkRxDuplicateRejectionTimerHandler;
 159               		.loc 2 119 0
 160 0096 80E0      		ldi r24,lo8(gs(nwkRxDuplicateRejectionTimerHandler))
 161 0098 90E0      		ldi r25,hi8(gs(nwkRxDuplicateRejectionTimerHandler))
 162 009a 9093 0000 		sts nwkRxDuplicateRejectionTimer+11+1,r25
 163 009e 8093 0000 		sts nwkRxDuplicateRejectionTimer+11,r24
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_OpenEndpoint(NWK_SERVICE_ENDPOINT_ID, nwkRxSeriveDataInd);
 164               		.loc 2 121 0
 165 00a2 60E0      		ldi r22,lo8(gs(nwkRxSeriveDataInd))
 166 00a4 70E0      		ldi r23,hi8(gs(nwkRxSeriveDataInd))
 167 00a6 80E0      		ldi r24,0
 168 00a8 0E94 0000 		call NWK_OpenEndpoint
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 169               		.loc 2 122 0
 170 00ac 0000      		nop
 171               	/* epilogue start */
 172 00ae 0F90      		pop __tmp_reg__
 173 00b0 DF91      		pop r29
 174 00b2 CF91      		pop r28
 175 00b4 0895      		ret
 176               		.cfi_endproc
 177               	.LFE66:
 179               		.weak	PHY_DataInd
 181               	PHY_DataInd:
 182               	.LFB67:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void __attribute__((weak)) PHY_DataInd(PHY_DataInd_t *ind)
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 183               		.loc 2 127 0
 184               		.cfi_startproc
 185 00b6 CF93      		push r28
 186               	.LCFI8:
 187               		.cfi_def_cfa_offset 3
 188               		.cfi_offset 28, -2
 189 00b8 DF93      		push r29
 190               	.LCFI9:
 191               		.cfi_def_cfa_offset 4
 192               		.cfi_offset 29, -3
 193 00ba 00D0      		rcall .
 194 00bc 00D0      		rcall .
 195               	.LCFI10:
 196               		.cfi_def_cfa_offset 8
 197 00be CDB7      		in r28,__SP_L__
 198 00c0 DEB7      		in r29,__SP_H__
 199               	.LCFI11:
 200               		.cfi_def_cfa_register 28
 201               	/* prologue: function */
 202               	/* frame size = 4 */
 203               	/* stack size = 6 */
 204               	.L__stack_usage = 6
 205 00c2 9C83      		std Y+4,r25
 206 00c4 8B83      		std Y+3,r24
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame;
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* implementar contador */
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-Beacon frame
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(ind->size > 25)
 207               		.loc 2 133 0
 208 00c6 8B81      		ldd r24,Y+3
 209 00c8 9C81      		ldd r25,Y+4
 210 00ca FC01      		movw r30,r24
 211 00cc 8281      		ldd r24,Z+2
 212 00ce 8A31      		cpi r24,lo8(26)
 213 00d0 00F0      		brlo .+2
 214 00d2 00C0      		rjmp .L30
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return;
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\n");
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	for (int i = 0; i < ind->size; i++)
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	{
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 		printf("%hhx",ind->data[i]);
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	}
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(0x0c == ind->data[0])
 215               		.loc 2 141 0
 216 00d4 8B81      		ldd r24,Y+3
 217 00d6 9C81      		ldd r25,Y+4
 218 00d8 FC01      		movw r30,r24
 219 00da 8081      		ld r24,Z
 220 00dc 9181      		ldd r25,Z+1
 221 00de FC01      		movw r30,r24
 222 00e0 8081      		ld r24,Z
 223 00e2 8C30      		cpi r24,lo8(12)
 224 00e4 01F4      		brne .L9
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameBeaconHeaderLLDN_t))
 225               		.loc 2 143 0
 226 00e6 8B81      		ldd r24,Y+3
 227 00e8 9C81      		ldd r25,Y+4
 228 00ea FC01      		movw r30,r24
 229 00ec 8281      		ldd r24,Z+2
 230 00ee 8830      		cpi r24,lo8(8)
 231 00f0 00F0      		brlo .+2
 232 00f2 00C0      		rjmp .L10
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 233               		.loc 2 145 0
 234 00f4 00C0      		rjmp .L6
 235               	.L9:
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-MAC Command frame
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0xcc == ind->data[0] || 0x8c == ind->data[0] || 0x4c == ind->data[0])
 236               		.loc 2 149 0
 237 00f6 8B81      		ldd r24,Y+3
 238 00f8 9C81      		ldd r25,Y+4
 239 00fa FC01      		movw r30,r24
 240 00fc 8081      		ld r24,Z
 241 00fe 9181      		ldd r25,Z+1
 242 0100 FC01      		movw r30,r24
 243 0102 8081      		ld r24,Z
 244 0104 8C3C      		cpi r24,lo8(-52)
 245 0106 01F0      		breq .L11
 246               		.loc 2 149 0 is_stmt 0 discriminator 1
 247 0108 8B81      		ldd r24,Y+3
 248 010a 9C81      		ldd r25,Y+4
 249 010c FC01      		movw r30,r24
 250 010e 8081      		ld r24,Z
 251 0110 9181      		ldd r25,Z+1
 252 0112 FC01      		movw r30,r24
 253 0114 8081      		ld r24,Z
 254 0116 8C38      		cpi r24,lo8(-116)
 255 0118 01F0      		breq .L11
 256               		.loc 2 149 0 discriminator 2
 257 011a 8B81      		ldd r24,Y+3
 258 011c 9C81      		ldd r25,Y+4
 259 011e FC01      		movw r30,r24
 260 0120 8081      		ld r24,Z
 261 0122 9181      		ldd r25,Z+1
 262 0124 FC01      		movw r30,r24
 263 0126 8081      		ld r24,Z
 264 0128 8C34      		cpi r24,lo8(76)
 265 012a 01F4      		brne .L12
 266               	.L11:
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameGeneralHeaderLLDN_t))
 267               		.loc 2 151 0 is_stmt 1
 268 012c 8B81      		ldd r24,Y+3
 269 012e 9C81      		ldd r25,Y+4
 270 0130 FC01      		movw r30,r24
 271 0132 8281      		ldd r24,Z+2
 272 0134 8330      		cpi r24,lo8(3)
 273 0136 00F0      		brlo .+2
 274 0138 00C0      		rjmp .L10
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 275               		.loc 2 153 0
 276 013a 00C0      		rjmp .L6
 277               	.L12:
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x88 == ind->data[1])
 278               		.loc 2 156 0
 279 013c 8B81      		ldd r24,Y+3
 280 013e 9C81      		ldd r25,Y+4
 281 0140 FC01      		movw r30,r24
 282 0142 8081      		ld r24,Z
 283 0144 9181      		ldd r25,Z+1
 284 0146 0196      		adiw r24,1
 285 0148 FC01      		movw r30,r24
 286 014a 8081      		ld r24,Z
 287 014c 8838      		cpi r24,lo8(-120)
 288 014e 01F4      		brne .L14
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x61 != ind->data[0] && 0x41 != ind->data[0]) || ind->size < sizeof(NwkFrameHeader_t))
 289               		.loc 2 158 0
 290 0150 8B81      		ldd r24,Y+3
 291 0152 9C81      		ldd r25,Y+4
 292 0154 FC01      		movw r30,r24
 293 0156 8081      		ld r24,Z
 294 0158 9181      		ldd r25,Z+1
 295 015a FC01      		movw r30,r24
 296 015c 8081      		ld r24,Z
 297 015e 8136      		cpi r24,lo8(97)
 298 0160 01F0      		breq .L15
 299               		.loc 2 158 0 is_stmt 0 discriminator 1
 300 0162 8B81      		ldd r24,Y+3
 301 0164 9C81      		ldd r25,Y+4
 302 0166 FC01      		movw r30,r24
 303 0168 8081      		ld r24,Z
 304 016a 9181      		ldd r25,Z+1
 305 016c FC01      		movw r30,r24
 306 016e 8081      		ld r24,Z
 307 0170 8134      		cpi r24,lo8(65)
 308 0172 01F0      		breq .+2
 309 0174 00C0      		rjmp .L31
 310               	.L15:
 311               		.loc 2 158 0 discriminator 3
 312 0176 8B81      		ldd r24,Y+3
 313 0178 9C81      		ldd r25,Y+4
 314 017a FC01      		movw r30,r24
 315 017c 8281      		ldd r24,Z+2
 316 017e 8031      		cpi r24,lo8(16)
 317 0180 00F4      		brsh .L10
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 318               		.loc 2 160 0 is_stmt 1
 319 0182 00C0      		rjmp .L31
 320               	.L14:
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x80 == ind->data[1])
 321               		.loc 2 163 0
 322 0184 8B81      		ldd r24,Y+3
 323 0186 9C81      		ldd r25,Y+4
 324 0188 FC01      		movw r30,r24
 325 018a 8081      		ld r24,Z
 326 018c 9181      		ldd r25,Z+1
 327 018e 0196      		adiw r24,1
 328 0190 FC01      		movw r30,r24
 329 0192 8081      		ld r24,Z
 330 0194 8038      		cpi r24,lo8(-128)
 331 0196 01F0      		breq .+2
 332 0198 00C0      		rjmp .L32
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x00 != ind->data[0]) || ind->size < (sizeof(NwkFrameBeaconHeader_t)))
 333               		.loc 2 165 0
 334 019a 8B81      		ldd r24,Y+3
 335 019c 9C81      		ldd r25,Y+4
 336 019e FC01      		movw r30,r24
 337 01a0 8081      		ld r24,Z
 338 01a2 9181      		ldd r25,Z+1
 339 01a4 FC01      		movw r30,r24
 340 01a6 8081      		ld r24,Z
 341 01a8 8823      		tst r24
 342 01aa 01F0      		breq .+2
 343 01ac 00C0      		rjmp .L33
 344               		.loc 2 165 0 is_stmt 0 discriminator 1
 345 01ae 8B81      		ldd r24,Y+3
 346 01b0 9C81      		ldd r25,Y+4
 347 01b2 FC01      		movw r30,r24
 348 01b4 8281      		ldd r24,Z+2
 349 01b6 8B30      		cpi r24,lo8(11)
 350 01b8 00F4      		brsh .+2
 351 01ba 00C0      		rjmp .L33
 352               	.L10:
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(ind->data[1] == 0x88 || ind->data[1] == 0x80)
 353               		.loc 2 175 0 is_stmt 1
 354 01bc 8B81      		ldd r24,Y+3
 355 01be 9C81      		ldd r25,Y+4
 356 01c0 FC01      		movw r30,r24
 357 01c2 8081      		ld r24,Z
 358 01c4 9181      		ldd r25,Z+1
 359 01c6 0196      		adiw r24,1
 360 01c8 FC01      		movw r30,r24
 361 01ca 8081      		ld r24,Z
 362 01cc 8838      		cpi r24,lo8(-120)
 363 01ce 01F0      		breq .L19
 364               		.loc 2 175 0 is_stmt 0 discriminator 1
 365 01d0 8B81      		ldd r24,Y+3
 366 01d2 9C81      		ldd r25,Y+4
 367 01d4 FC01      		movw r30,r24
 368 01d6 8081      		ld r24,Z
 369 01d8 9181      		ldd r25,Z+1
 370 01da 0196      		adiw r24,1
 371 01dc FC01      		movw r30,r24
 372 01de 8081      		ld r24,Z
 373 01e0 8038      		cpi r24,lo8(-128)
 374 01e2 01F4      		brne .L20
 375               	.L19:
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc())) {
 376               		.loc 2 177 0 is_stmt 1
 377 01e4 0E94 0000 		call nwkFrameAlloc
 378 01e8 9A83      		std Y+2,r25
 379 01ea 8983      		std Y+1,r24
 380 01ec 8981      		ldd r24,Y+1
 381 01ee 9A81      		ldd r25,Y+2
 382 01f0 892B      		or r24,r25
 383 01f2 01F4      		brne .+2
 384 01f4 00C0      		rjmp .L34
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame received is NwkFrameHeader change state to Receveid
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is a 802.15.4 beacon change state to Beacon
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = ((0x88 == ind->data[1]) ? NWK_RX_STATE_RECEIVED : NWK_RX_STATE_BEACON);
 385               		.loc 2 182 0
 386 01f6 8B81      		ldd r24,Y+3
 387 01f8 9C81      		ldd r25,Y+4
 388 01fa FC01      		movw r30,r24
 389 01fc 8081      		ld r24,Z
 390 01fe 9181      		ldd r25,Z+1
 391 0200 0196      		adiw r24,1
 392 0202 FC01      		movw r30,r24
 393 0204 8081      		ld r24,Z
 394 0206 8838      		cpi r24,lo8(-120)
 395 0208 01F4      		brne .L22
 396               		.loc 2 182 0 is_stmt 0 discriminator 1
 397 020a 20E2      		ldi r18,lo8(32)
 398 020c 00C0      		rjmp .L23
 399               	.L22:
 400               		.loc 2 182 0 discriminator 2
 401 020e 25E2      		ldi r18,lo8(37)
 402               	.L23:
 403               		.loc 2 182 0 discriminator 4
 404 0210 8981      		ldd r24,Y+1
 405 0212 9A81      		ldd r25,Y+2
 406 0214 FC01      		movw r30,r24
 407 0216 2083      		st Z,r18
 408 0218 00C0      		rjmp .L24
 409               	.L20:
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// allocate frame buffer according to received frame
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(ind->data[0] == 0x0c)
 410               		.loc 2 185 0 is_stmt 1
 411 021a 8B81      		ldd r24,Y+3
 412 021c 9C81      		ldd r25,Y+4
 413 021e FC01      		movw r30,r24
 414 0220 8081      		ld r24,Z
 415 0222 9181      		ldd r25,Z+1
 416 0224 FC01      		movw r30,r24
 417 0226 8081      		ld r24,Z
 418 0228 8C30      		cpi r24,lo8(12)
 419 022a 01F4      		brne .L25
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-Beacon frame
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(true))){
 420               		.loc 2 188 0
 421 022c 81E0      		ldi r24,lo8(1)
 422 022e 0E94 0000 		call nwkFrameAlloc_LLDN
 423 0232 9A83      		std Y+2,r25
 424 0234 8983      		std Y+1,r24
 425 0236 8981      		ldd r24,Y+1
 426 0238 9A81      		ldd r25,Y+2
 427 023a 892B      		or r24,r25
 428 023c 01F4      		brne .+2
 429 023e 00C0      		rjmp .L35
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-Beacon change state to LLBEACON
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLBEACON;
 430               		.loc 2 192 0
 431 0240 8981      		ldd r24,Y+1
 432 0242 9A81      		ldd r25,Y+2
 433 0244 26E2      		ldi r18,lo8(38)
 434 0246 FC01      		movw r30,r24
 435 0248 2083      		st Z,r18
 436 024a 00C0      		rjmp .L24
 437               	.L25:
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-MAC command or LL-Data frame
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(false))){
 438               		.loc 2 197 0
 439 024c 80E0      		ldi r24,0
 440 024e 0E94 0000 		call nwkFrameAlloc_LLDN
 441 0252 9A83      		std Y+2,r25
 442 0254 8983      		std Y+1,r24
 443 0256 8981      		ldd r24,Y+1
 444 0258 9A81      		ldd r25,Y+2
 445 025a 892B      		or r24,r25
 446 025c 01F4      		brne .+2
 447 025e 00C0      		rjmp .L36
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-AckFrame change state to LLACKFRAME
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-MACComand change state to LLCOMMAND
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->data[0] == 0x8c) 
 448               		.loc 2 202 0
 449 0260 8B81      		ldd r24,Y+3
 450 0262 9C81      		ldd r25,Y+4
 451 0264 FC01      		movw r30,r24
 452 0266 8081      		ld r24,Z
 453 0268 9181      		ldd r25,Z+1
 454 026a FC01      		movw r30,r24
 455 026c 8081      		ld r24,Z
 456 026e 8C38      		cpi r24,lo8(-116)
 457 0270 01F4      		brne .L28
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLACKFRAME;
 458               		.loc 2 203 0
 459 0272 8981      		ldd r24,Y+1
 460 0274 9A81      		ldd r25,Y+2
 461 0276 28E2      		ldi r18,lo8(40)
 462 0278 FC01      		movw r30,r24
 463 027a 2083      		st Z,r18
 464 027c 00C0      		rjmp .L24
 465               	.L28:
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if(ind->data[0] == 0xcc)
 466               		.loc 2 204 0
 467 027e 8B81      		ldd r24,Y+3
 468 0280 9C81      		ldd r25,Y+4
 469 0282 FC01      		movw r30,r24
 470 0284 8081      		ld r24,Z
 471 0286 9181      		ldd r25,Z+1
 472 0288 FC01      		movw r30,r24
 473 028a 8081      		ld r24,Z
 474 028c 8C3C      		cpi r24,lo8(-52)
 475 028e 01F4      		brne .L29
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLCOMMAND;
 476               		.loc 2 205 0
 477 0290 8981      		ldd r24,Y+1
 478 0292 9A81      		ldd r25,Y+2
 479 0294 27E2      		ldi r18,lo8(39)
 480 0296 FC01      		movw r30,r24
 481 0298 2083      		st Z,r18
 482 029a 00C0      		rjmp .L24
 483               	.L29:
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLDATA;	
 484               		.loc 2 207 0
 485 029c 8981      		ldd r24,Y+1
 486 029e 9A81      		ldd r25,Y+2
 487 02a0 29E2      		ldi r18,lo8(41)
 488 02a2 FC01      		movw r30,r24
 489 02a4 2083      		st Z,r18
 490               	.L24:
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size = ind->size;
 491               		.loc 2 210 0
 492 02a6 8B81      		ldd r24,Y+3
 493 02a8 9C81      		ldd r25,Y+4
 494 02aa FC01      		movw r30,r24
 495 02ac 2281      		ldd r18,Z+2
 496 02ae 8981      		ldd r24,Y+1
 497 02b0 9A81      		ldd r25,Y+2
 498 02b2 FC01      		movw r30,r24
 499 02b4 2183      		std Z+1,r18
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\nframe->size = %hhx", frame->size);
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.lqi = ind->lqi;
 500               		.loc 2 212 0
 501 02b6 8B81      		ldd r24,Y+3
 502 02b8 9C81      		ldd r25,Y+4
 503 02ba FC01      		movw r30,r24
 504 02bc 2381      		ldd r18,Z+3
 505 02be 8981      		ldd r24,Y+1
 506 02c0 9A81      		ldd r25,Y+2
 507 02c2 8D57      		subi r24,125
 508 02c4 9F4F      		sbci r25,-1
 509 02c6 FC01      		movw r30,r24
 510 02c8 2083      		st Z,r18
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.rssi = ind->rssi;
 511               		.loc 2 213 0
 512 02ca 8B81      		ldd r24,Y+3
 513 02cc 9C81      		ldd r25,Y+4
 514 02ce FC01      		movw r30,r24
 515 02d0 2481      		ldd r18,Z+4
 516 02d2 8981      		ldd r24,Y+1
 517 02d4 9A81      		ldd r25,Y+2
 518 02d6 8C57      		subi r24,124
 519 02d8 9F4F      		sbci r25,-1
 520 02da FC01      		movw r30,r24
 521 02dc 2083      		st Z,r18
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	memcpy(frame->data, ind->data, ind->size);
 522               		.loc 2 214 0
 523 02de 8B81      		ldd r24,Y+3
 524 02e0 9C81      		ldd r25,Y+4
 525 02e2 FC01      		movw r30,r24
 526 02e4 8281      		ldd r24,Z+2
 527 02e6 482F      		mov r20,r24
 528 02e8 50E0      		ldi r21,0
 529 02ea 8B81      		ldd r24,Y+3
 530 02ec 9C81      		ldd r25,Y+4
 531 02ee FC01      		movw r30,r24
 532 02f0 2081      		ld r18,Z
 533 02f2 3181      		ldd r19,Z+1
 534 02f4 8981      		ldd r24,Y+1
 535 02f6 9A81      		ldd r25,Y+2
 536 02f8 0296      		adiw r24,2
 537 02fa B901      		movw r22,r18
 538 02fc 0E94 0000 		call memcpy
 539 0300 00C0      		rjmp .L6
 540               	.L30:
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\n");
 541               		.loc 2 134 0
 542 0302 0000      		nop
 543 0304 00C0      		rjmp .L6
 544               	.L31:
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 545               		.loc 2 160 0
 546 0306 0000      		nop
 547 0308 00C0      		rjmp .L6
 548               	.L32:
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 549               		.loc 2 172 0
 550 030a 0000      		nop
 551 030c 00C0      		rjmp .L6
 552               	.L33:
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 553               		.loc 2 167 0
 554 030e 0000      		nop
 555 0310 00C0      		rjmp .L6
 556               	.L34:
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 557               		.loc 2 178 0
 558 0312 0000      		nop
 559 0314 00C0      		rjmp .L6
 560               	.L35:
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 561               		.loc 2 189 0
 562 0316 0000      		nop
 563 0318 00C0      		rjmp .L6
 564               	.L36:
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 565               		.loc 2 198 0
 566 031a 0000      		nop
 567               	.L6:
 568               	/* epilogue start */
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\nframe->payload[2] = %hhx", frame->payload[2]);
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 569               		.loc 2 217 0
 570 031c 0F90      		pop __tmp_reg__
 571 031e 0F90      		pop __tmp_reg__
 572 0320 0F90      		pop __tmp_reg__
 573 0322 0F90      		pop __tmp_reg__
 574 0324 DF91      		pop r29
 575 0326 CF91      		pop r28
 576 0328 0895      		ret
 577               		.cfi_endproc
 578               	.LFE67:
 581               	nwkRxSendAck:
 582               	.LFB68:
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxSendAck(NwkFrame_t *frame)
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 583               		.loc 2 222 0
 584               		.cfi_startproc
 585 032a CF93      		push r28
 586               	.LCFI12:
 587               		.cfi_def_cfa_offset 3
 588               		.cfi_offset 28, -2
 589 032c DF93      		push r29
 590               	.LCFI13:
 591               		.cfi_def_cfa_offset 4
 592               		.cfi_offset 29, -3
 593 032e 00D0      		rcall .
 594 0330 00D0      		rcall .
 595 0332 00D0      		rcall .
 596               	.LCFI14:
 597               		.cfi_def_cfa_offset 10
 598 0334 CDB7      		in r28,__SP_L__
 599 0336 DEB7      		in r29,__SP_H__
 600               	.LCFI15:
 601               		.cfi_def_cfa_register 28
 602               	/* prologue: function */
 603               	/* frame size = 6 */
 604               	/* stack size = 8 */
 605               	.L__stack_usage = 8
 606 0338 9E83      		std Y+6,r25
 607 033a 8D83      		std Y+5,r24
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *ack;
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkCommandAck_t *command;
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (ack = nwkFrameAlloc())) {
 608               		.loc 2 226 0
 609 033c 0E94 0000 		call nwkFrameAlloc
 610 0340 9A83      		std Y+2,r25
 611 0342 8983      		std Y+1,r24
 612 0344 8981      		ldd r24,Y+1
 613 0346 9A81      		ldd r25,Y+2
 614 0348 892B      		or r24,r25
 615 034a 01F4      		brne .+2
 616 034c 00C0      		rjmp .L40
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size += sizeof(NwkFrameHeader_t);
 617               		.loc 2 230 0
 618 034e 8D81      		ldd r24,Y+5
 619 0350 9E81      		ldd r25,Y+6
 620 0352 FC01      		movw r30,r24
 621 0354 8181      		ldd r24,Z+1
 622 0356 20E1      		ldi r18,lo8(16)
 623 0358 280F      		add r18,r24
 624 035a 8D81      		ldd r24,Y+5
 625 035c 9E81      		ldd r25,Y+6
 626 035e FC01      		movw r30,r24
 627 0360 2183      		std Z+1,r18
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->payload += sizeof(NwkFrameHeader_t);
 628               		.loc 2 231 0
 629 0362 8D81      		ldd r24,Y+5
 630 0364 9E81      		ldd r25,Y+6
 631 0366 8F57      		subi r24,127
 632 0368 9F4F      		sbci r25,-1
 633 036a FC01      		movw r30,r24
 634 036c 8081      		ld r24,Z
 635 036e 9181      		ldd r25,Z+1
 636 0370 9C01      		movw r18,r24
 637 0372 205F      		subi r18,-16
 638 0374 3F4F      		sbci r19,-1
 639 0376 8D81      		ldd r24,Y+5
 640 0378 9E81      		ldd r25,Y+6
 641 037a 8F57      		subi r24,127
 642 037c 9F4F      		sbci r25,-1
 643 037e FC01      		movw r30,r24
 644 0380 3183      		std Z+1,r19
 645 0382 2083      		st Z,r18
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkFrameCommandInit(ack);
 646               		.loc 2 233 0
 647 0384 8981      		ldd r24,Y+1
 648 0386 9A81      		ldd r25,Y+2
 649 0388 0E94 0000 		call nwkFrameCommandInit
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->size += sizeof(NwkCommandAck_t);
 650               		.loc 2 235 0
 651 038c 8981      		ldd r24,Y+1
 652 038e 9A81      		ldd r25,Y+2
 653 0390 FC01      		movw r30,r24
 654 0392 8181      		ldd r24,Z+1
 655 0394 23E0      		ldi r18,lo8(3)
 656 0396 280F      		add r18,r24
 657 0398 8981      		ldd r24,Y+1
 658 039a 9A81      		ldd r25,Y+2
 659 039c FC01      		movw r30,r24
 660 039e 2183      		std Z+1,r18
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->tx.confirm = NULL;
 661               		.loc 2 236 0
 662 03a0 8981      		ldd r24,Y+1
 663 03a2 9A81      		ldd r25,Y+2
 664 03a4 8957      		subi r24,121
 665 03a6 9F4F      		sbci r25,-1
 666 03a8 FC01      		movw r30,r24
 667 03aa 1182      		std Z+1,__zero_reg__
 668 03ac 1082      		st Z,__zero_reg__
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkFcf.security = frame->header.nwkFcf.security;
 669               		.loc 2 238 0
 670 03ae 8D81      		ldd r24,Y+5
 671 03b0 9E81      		ldd r25,Y+6
 672 03b2 FC01      		movw r30,r24
 673 03b4 8385      		ldd r24,Z+11
 674 03b6 81FB      		bst r24,1
 675 03b8 2227      		clr r18
 676 03ba 20F9      		bld r18,0
 677 03bc 8981      		ldd r24,Y+1
 678 03be 9A81      		ldd r25,Y+2
 679 03c0 2170      		andi r18,lo8(1)
 680 03c2 220F      		lsl r18
 681 03c4 FC01      		movw r30,r24
 682 03c6 3385      		ldd r19,Z+11
 683 03c8 3D7F      		andi r19,lo8(-3)
 684 03ca 232B      		or r18,r19
 685 03cc FC01      		movw r30,r24
 686 03ce 2387      		std Z+11,r18
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 687               		.loc 2 239 0
 688 03d0 8D81      		ldd r24,Y+5
 689 03d2 9E81      		ldd r25,Y+6
 690 03d4 FC01      		movw r30,r24
 691 03d6 2585      		ldd r18,Z+13
 692 03d8 3685      		ldd r19,Z+14
 693 03da 8981      		ldd r24,Y+1
 694 03dc 9A81      		ldd r25,Y+2
 695 03de FC01      		movw r30,r24
 696 03e0 308B      		std Z+16,r19
 697 03e2 2787      		std Z+15,r18
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command = (NwkCommandAck_t *)ack->payload;
 698               		.loc 2 241 0
 699 03e4 8981      		ldd r24,Y+1
 700 03e6 9A81      		ldd r25,Y+2
 701 03e8 8F57      		subi r24,127
 702 03ea 9F4F      		sbci r25,-1
 703 03ec FC01      		movw r30,r24
 704 03ee 8081      		ld r24,Z
 705 03f0 9181      		ldd r25,Z+1
 706 03f2 9C83      		std Y+4,r25
 707 03f4 8B83      		std Y+3,r24
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->id = NWK_COMMAND_ACK;
 708               		.loc 2 242 0
 709 03f6 8B81      		ldd r24,Y+3
 710 03f8 9C81      		ldd r25,Y+4
 711 03fa FC01      		movw r30,r24
 712 03fc 1082      		st Z,__zero_reg__
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->control = nwkRxAckControl;
 713               		.loc 2 243 0
 714 03fe 2091 0000 		lds r18,nwkRxAckControl
 715 0402 8B81      		ldd r24,Y+3
 716 0404 9C81      		ldd r25,Y+4
 717 0406 FC01      		movw r30,r24
 718 0408 2283      		std Z+2,r18
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->seq = frame->header.nwkSeq;
 719               		.loc 2 244 0
 720 040a 8D81      		ldd r24,Y+5
 721 040c 9E81      		ldd r25,Y+6
 722 040e FC01      		movw r30,r24
 723 0410 2485      		ldd r18,Z+12
 724 0412 8B81      		ldd r24,Y+3
 725 0414 9C81      		ldd r25,Y+4
 726 0416 FC01      		movw r30,r24
 727 0418 2183      		std Z+1,r18
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkTxFrame(ack);
 728               		.loc 2 246 0
 729 041a 8981      		ldd r24,Y+1
 730 041c 9A81      		ldd r25,Y+2
 731 041e 0E94 0000 		call nwkTxFrame
 732 0422 00C0      		rjmp .L37
 733               	.L40:
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 734               		.loc 2 227 0
 735 0424 0000      		nop
 736               	.L37:
 737               	/* epilogue start */
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 738               		.loc 2 247 0
 739 0426 2696      		adiw r28,6
 740 0428 0FB6      		in __tmp_reg__,__SREG__
 741 042a F894      		cli
 742 042c DEBF      		out __SP_H__,r29
 743 042e 0FBE      		out __SREG__,__tmp_reg__
 744 0430 CDBF      		out __SP_L__,r28
 745 0432 DF91      		pop r29
 746 0434 CF91      		pop r28
 747 0436 0895      		ret
 748               		.cfi_endproc
 749               	.LFE68:
 751               	.global	NWK_SetAckControl
 753               	NWK_SetAckControl:
 754               	.LFB69:
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void NWK_SetAckControl(uint8_t control)
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 755               		.loc 2 252 0
 756               		.cfi_startproc
 757 0438 CF93      		push r28
 758               	.LCFI16:
 759               		.cfi_def_cfa_offset 3
 760               		.cfi_offset 28, -2
 761 043a DF93      		push r29
 762               	.LCFI17:
 763               		.cfi_def_cfa_offset 4
 764               		.cfi_offset 29, -3
 765 043c 1F92      		push __zero_reg__
 766               	.LCFI18:
 767               		.cfi_def_cfa_offset 5
 768 043e CDB7      		in r28,__SP_L__
 769 0440 DEB7      		in r29,__SP_H__
 770               	.LCFI19:
 771               		.cfi_def_cfa_register 28
 772               	/* prologue: function */
 773               	/* frame size = 1 */
 774               	/* stack size = 3 */
 775               	.L__stack_usage = 3
 776 0442 8983      		std Y+1,r24
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = control;
 777               		.loc 2 253 0
 778 0444 8981      		ldd r24,Y+1
 779 0446 8093 0000 		sts nwkRxAckControl,r24
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 780               		.loc 2 254 0
 781 044a 0000      		nop
 782               	/* epilogue start */
 783 044c 0F90      		pop __tmp_reg__
 784 044e DF91      		pop r29
 785 0450 CF91      		pop r28
 786 0452 0895      		ret
 787               		.cfi_endproc
 788               	.LFE69:
 791               	nwkRxDuplicateRejectionTimerHandler:
 792               	.LFB70:
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxDecryptConf(NwkFrame_t *frame, bool status)
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (status) {
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_INDICATE;
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else {
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_FINISH;
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer)
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 793               		.loc 2 274 0
 794               		.cfi_startproc
 795 0454 CF93      		push r28
 796               	.LCFI20:
 797               		.cfi_def_cfa_offset 3
 798               		.cfi_offset 28, -2
 799 0456 DF93      		push r29
 800               	.LCFI21:
 801               		.cfi_def_cfa_offset 4
 802               		.cfi_offset 29, -3
 803 0458 00D0      		rcall .
 804 045a 00D0      		rcall .
 805               	.LCFI22:
 806               		.cfi_def_cfa_offset 8
 807 045c CDB7      		in r28,__SP_L__
 808 045e DEB7      		in r29,__SP_H__
 809               	.LCFI23:
 810               		.cfi_def_cfa_register 28
 811               	/* prologue: function */
 812               	/* frame size = 4 */
 813               	/* stack size = 6 */
 814               	.L__stack_usage = 6
 815 0460 9C83      		std Y+4,r25
 816 0462 8B83      		std Y+3,r24
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool restart = false;
 817               		.loc 2 275 0
 818 0464 1982      		std Y+1,__zero_reg__
 819               	.LBB3:
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 820               		.loc 2 277 0
 821 0466 1A82      		std Y+2,__zero_reg__
 822 0468 00C0      		rjmp .L43
 823               	.L45:
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 824               		.loc 2 278 0
 825 046a 8A81      		ldd r24,Y+2
 826 046c 282F      		mov r18,r24
 827 046e 30E0      		ldi r19,0
 828 0470 C901      		movw r24,r18
 829 0472 880F      		lsl r24
 830 0474 991F      		rol r25
 831 0476 880F      		lsl r24
 832 0478 991F      		rol r25
 833 047a 820F      		add r24,r18
 834 047c 931F      		adc r25,r19
 835 047e 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 836 0480 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 837 0482 FC01      		movw r30,r24
 838 0484 8081      		ld r24,Z
 839 0486 8823      		tst r24
 840 0488 01F0      		breq .L44
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxDuplicateRejectionTable[i].ttl--;
 841               		.loc 2 279 0
 842 048a 8A81      		ldd r24,Y+2
 843 048c 282F      		mov r18,r24
 844 048e 30E0      		ldi r19,0
 845 0490 C901      		movw r24,r18
 846 0492 880F      		lsl r24
 847 0494 991F      		rol r25
 848 0496 880F      		lsl r24
 849 0498 991F      		rol r25
 850 049a 820F      		add r24,r18
 851 049c 931F      		adc r25,r19
 852 049e 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 853 04a0 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 854 04a2 FC01      		movw r30,r24
 855 04a4 8081      		ld r24,Z
 856 04a6 4FEF      		ldi r20,lo8(-1)
 857 04a8 480F      		add r20,r24
 858 04aa C901      		movw r24,r18
 859 04ac 880F      		lsl r24
 860 04ae 991F      		rol r25
 861 04b0 880F      		lsl r24
 862 04b2 991F      		rol r25
 863 04b4 820F      		add r24,r18
 864 04b6 931F      		adc r25,r19
 865 04b8 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 866 04ba 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 867 04bc FC01      		movw r30,r24
 868 04be 4083      		st Z,r20
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			restart = true;
 869               		.loc 2 280 0
 870 04c0 81E0      		ldi r24,lo8(1)
 871 04c2 8983      		std Y+1,r24
 872               	.L44:
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 873               		.loc 2 277 0 discriminator 2
 874 04c4 8A81      		ldd r24,Y+2
 875 04c6 8F5F      		subi r24,lo8(-(1))
 876 04c8 8A83      		std Y+2,r24
 877               	.L43:
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 878               		.loc 2 277 0 is_stmt 0 discriminator 1
 879 04ca 8A81      		ldd r24,Y+2
 880 04cc 8233      		cpi r24,lo8(50)
 881 04ce 00F0      		brlo .L45
 882               	.LBE3:
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (restart) {
 883               		.loc 2 284 0 is_stmt 1
 884 04d0 8981      		ldd r24,Y+1
 885 04d2 8823      		tst r24
 886 04d4 01F0      		breq .L47
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		SYS_TimerStart(timer);
 887               		.loc 2 285 0
 888 04d6 8B81      		ldd r24,Y+3
 889 04d8 9C81      		ldd r25,Y+4
 890 04da 0E94 0000 		call SYS_TimerStart
 891               	.L47:
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 892               		.loc 2 287 0
 893 04de 0000      		nop
 894               	/* epilogue start */
 895 04e0 0F90      		pop __tmp_reg__
 896 04e2 0F90      		pop __tmp_reg__
 897 04e4 0F90      		pop __tmp_reg__
 898 04e6 0F90      		pop __tmp_reg__
 899 04e8 DF91      		pop r29
 900 04ea CF91      		pop r28
 901 04ec 0895      		ret
 902               		.cfi_endproc
 903               	.LFE70:
 906               	nwkRxRejectDuplicate:
 907               	.LFB71:
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxRejectDuplicate(NwkFrameHeader_t *header)
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 908               		.loc 2 292 0
 909               		.cfi_startproc
 910 04ee CF93      		push r28
 911               	.LCFI24:
 912               		.cfi_def_cfa_offset 3
 913               		.cfi_offset 28, -2
 914 04f0 DF93      		push r29
 915               	.LCFI25:
 916               		.cfi_def_cfa_offset 4
 917               		.cfi_offset 29, -3
 918 04f2 CDB7      		in r28,__SP_L__
 919 04f4 DEB7      		in r29,__SP_H__
 920               	.LCFI26:
 921               		.cfi_def_cfa_register 28
 922 04f6 2997      		sbiw r28,9
 923               	.LCFI27:
 924               		.cfi_def_cfa_offset 13
 925 04f8 0FB6      		in __tmp_reg__,__SREG__
 926 04fa F894      		cli
 927 04fc DEBF      		out __SP_H__,r29
 928 04fe 0FBE      		out __SREG__,__tmp_reg__
 929 0500 CDBF      		out __SP_L__,r28
 930               	/* prologue: function */
 931               	/* frame size = 9 */
 932               	/* stack size = 11 */
 933               	.L__stack_usage = 11
 934 0502 9987      		std Y+9,r25
 935 0504 8887      		std Y+8,r24
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *entry;
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *freeEntry = NULL;
 936               		.loc 2 294 0
 937 0506 1A82      		std Y+2,__zero_reg__
 938 0508 1982      		std Y+1,__zero_reg__
 939               	.LBB4:
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 940               		.loc 2 296 0
 941 050a 1B82      		std Y+3,__zero_reg__
 942 050c 00C0      		rjmp .L49
 943               	.L55:
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 944               		.loc 2 297 0
 945 050e 8B81      		ldd r24,Y+3
 946 0510 282F      		mov r18,r24
 947 0512 30E0      		ldi r19,0
 948 0514 C901      		movw r24,r18
 949 0516 880F      		lsl r24
 950 0518 991F      		rol r25
 951 051a 880F      		lsl r24
 952 051c 991F      		rol r25
 953 051e 820F      		add r24,r18
 954 0520 931F      		adc r25,r19
 955 0522 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable))
 956 0524 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable))
 957 0526 9D83      		std Y+5,r25
 958 0528 8C83      		std Y+4,r24
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (entry->ttl && header->nwkSrcAddr == entry->src) {
 959               		.loc 2 299 0
 960 052a 8C81      		ldd r24,Y+4
 961 052c 9D81      		ldd r25,Y+5
 962 052e FC01      		movw r30,r24
 963 0530 8481      		ldd r24,Z+4
 964 0532 8823      		tst r24
 965 0534 01F4      		brne .+2
 966 0536 00C0      		rjmp .L50
 967               		.loc 2 299 0 is_stmt 0 discriminator 1
 968 0538 8885      		ldd r24,Y+8
 969 053a 9985      		ldd r25,Y+9
 970 053c FC01      		movw r30,r24
 971 053e 2385      		ldd r18,Z+11
 972 0540 3485      		ldd r19,Z+12
 973 0542 8C81      		ldd r24,Y+4
 974 0544 9D81      		ldd r25,Y+5
 975 0546 FC01      		movw r30,r24
 976 0548 8081      		ld r24,Z
 977 054a 9181      		ldd r25,Z+1
 978 054c 2817      		cp r18,r24
 979 054e 3907      		cpc r19,r25
 980 0550 01F0      		breq .+2
 981 0552 00C0      		rjmp .L50
 982               	.LBB5:
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			uint8_t diff = (int8_t)entry->seq - header->nwkSeq;
 983               		.loc 2 300 0 is_stmt 1
 984 0554 8C81      		ldd r24,Y+4
 985 0556 9D81      		ldd r25,Y+5
 986 0558 FC01      		movw r30,r24
 987 055a 2281      		ldd r18,Z+2
 988 055c 8885      		ldd r24,Y+8
 989 055e 9985      		ldd r25,Y+9
 990 0560 FC01      		movw r30,r24
 991 0562 8285      		ldd r24,Z+10
 992 0564 F22F      		mov r31,r18
 993 0566 F81B      		sub r31,r24
 994 0568 8F2F      		mov r24,r31
 995 056a 8E83      		std Y+6,r24
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (diff < 8) {
 996               		.loc 2 302 0
 997 056c 8E81      		ldd r24,Y+6
 998 056e 8830      		cpi r24,lo8(8)
 999 0570 00F4      		brsh .L51
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				if (entry->mask & (1 << diff)) {
 1000               		.loc 2 303 0
 1001 0572 8C81      		ldd r24,Y+4
 1002 0574 9D81      		ldd r25,Y+5
 1003 0576 FC01      		movw r30,r24
 1004 0578 8381      		ldd r24,Z+3
 1005 057a 882F      		mov r24,r24
 1006 057c 90E0      		ldi r25,0
 1007 057e 2E81      		ldd r18,Y+6
 1008 0580 222F      		mov r18,r18
 1009 0582 30E0      		ldi r19,0
 1010 0584 00C0      		rjmp 2f
 1011               		1:
 1012 0586 9595      		asr r25
 1013 0588 8795      		ror r24
 1014               		2:
 1015 058a 2A95      		dec r18
 1016 058c 02F4      		brpl 1b
 1017 058e 8170      		andi r24,1
 1018 0590 9927      		clr r25
 1019 0592 892B      		or r24,r25
 1020 0594 01F0      		breq .L52
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#ifdef NWK_ENABLE_ROUTING
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					if (nwkIb.addr == header->macDstAddr) {
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 						nwkRouteRemove(
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkDstAddr,
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkFcf.multicast);
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					}
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#endif
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					return true;
 1021               		.loc 2 312 0
 1022 0596 81E0      		ldi r24,lo8(1)
 1023 0598 00C0      		rjmp .L53
 1024               	.L52:
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				}
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask |= (1 << diff);
 1025               		.loc 2 315 0
 1026 059a 8C81      		ldd r24,Y+4
 1027 059c 9D81      		ldd r25,Y+5
 1028 059e FC01      		movw r30,r24
 1029 05a0 8381      		ldd r24,Z+3
 1030 05a2 482F      		mov r20,r24
 1031 05a4 8E81      		ldd r24,Y+6
 1032 05a6 282F      		mov r18,r24
 1033 05a8 30E0      		ldi r19,0
 1034 05aa 81E0      		ldi r24,lo8(1)
 1035 05ac 90E0      		ldi r25,0
 1036 05ae 00C0      		rjmp 2f
 1037               		1:
 1038 05b0 880F      		lsl r24
 1039 05b2 991F      		rol r25
 1040               		2:
 1041 05b4 2A95      		dec r18
 1042 05b6 02F4      		brpl 1b
 1043 05b8 842B      		or r24,r20
 1044 05ba 282F      		mov r18,r24
 1045 05bc 8C81      		ldd r24,Y+4
 1046 05be 9D81      		ldd r25,Y+5
 1047 05c0 FC01      		movw r30,r24
 1048 05c2 2383      		std Z+3,r18
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1049               		.loc 2 316 0
 1050 05c4 80E0      		ldi r24,0
 1051 05c6 00C0      		rjmp .L53
 1052               	.L51:
 1053               	.LBB6:
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				uint8_t shift = -(int8_t)diff;
 1054               		.loc 2 318 0
 1055 05c8 8E81      		ldd r24,Y+6
 1056 05ca 8195      		neg r24
 1057 05cc 8F83      		std Y+7,r24
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->seq = header->nwkSeq;
 1058               		.loc 2 320 0
 1059 05ce 8885      		ldd r24,Y+8
 1060 05d0 9985      		ldd r25,Y+9
 1061 05d2 FC01      		movw r30,r24
 1062 05d4 2285      		ldd r18,Z+10
 1063 05d6 8C81      		ldd r24,Y+4
 1064 05d8 9D81      		ldd r25,Y+5
 1065 05da FC01      		movw r30,r24
 1066 05dc 2283      		std Z+2,r18
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask = (entry->mask << shift) | 1;
 1067               		.loc 2 321 0
 1068 05de 8C81      		ldd r24,Y+4
 1069 05e0 9D81      		ldd r25,Y+5
 1070 05e2 FC01      		movw r30,r24
 1071 05e4 8381      		ldd r24,Z+3
 1072 05e6 882F      		mov r24,r24
 1073 05e8 90E0      		ldi r25,0
 1074 05ea 2F81      		ldd r18,Y+7
 1075 05ec 222F      		mov r18,r18
 1076 05ee 30E0      		ldi r19,0
 1077 05f0 00C0      		rjmp 2f
 1078               		1:
 1079 05f2 880F      		lsl r24
 1080 05f4 991F      		rol r25
 1081               		2:
 1082 05f6 2A95      		dec r18
 1083 05f8 02F4      		brpl 1b
 1084 05fa 8160      		ori r24,lo8(1)
 1085 05fc 282F      		mov r18,r24
 1086 05fe 8C81      		ldd r24,Y+4
 1087 0600 9D81      		ldd r25,Y+5
 1088 0602 FC01      		movw r30,r24
 1089 0604 2383      		std Z+3,r18
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->ttl = DUPLICATE_REJECTION_TTL;
 1090               		.loc 2 322 0
 1091 0606 8C81      		ldd r24,Y+4
 1092 0608 9D81      		ldd r25,Y+5
 1093 060a 25E1      		ldi r18,lo8(21)
 1094 060c FC01      		movw r30,r24
 1095 060e 2483      		std Z+4,r18
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1096               		.loc 2 323 0
 1097 0610 80E0      		ldi r24,0
 1098 0612 00C0      		rjmp .L53
 1099               	.L50:
 1100               	.LBE6:
 1101               	.LBE5:
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (0 == entry->ttl) {
 1102               		.loc 2 327 0
 1103 0614 8C81      		ldd r24,Y+4
 1104 0616 9D81      		ldd r25,Y+5
 1105 0618 FC01      		movw r30,r24
 1106 061a 8481      		ldd r24,Z+4
 1107 061c 8823      		tst r24
 1108 061e 01F4      		brne .L54
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			freeEntry = entry;
 1109               		.loc 2 328 0
 1110 0620 8C81      		ldd r24,Y+4
 1111 0622 9D81      		ldd r25,Y+5
 1112 0624 9A83      		std Y+2,r25
 1113 0626 8983      		std Y+1,r24
 1114               	.L54:
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1115               		.loc 2 296 0 discriminator 2
 1116 0628 8B81      		ldd r24,Y+3
 1117 062a 8F5F      		subi r24,lo8(-(1))
 1118 062c 8B83      		std Y+3,r24
 1119               	.L49:
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1120               		.loc 2 296 0 is_stmt 0 discriminator 1
 1121 062e 8B81      		ldd r24,Y+3
 1122 0630 8233      		cpi r24,lo8(50)
 1123 0632 00F4      		brsh .+2
 1124 0634 00C0      		rjmp .L55
 1125               	.LBE4:
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == freeEntry) {
 1126               		.loc 2 332 0 is_stmt 1
 1127 0636 8981      		ldd r24,Y+1
 1128 0638 9A81      		ldd r25,Y+2
 1129 063a 892B      		or r24,r25
 1130 063c 01F4      		brne .L56
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return true;
 1131               		.loc 2 333 0
 1132 063e 81E0      		ldi r24,lo8(1)
 1133 0640 00C0      		rjmp .L53
 1134               	.L56:
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->src = header->nwkSrcAddr;
 1135               		.loc 2 336 0
 1136 0642 8885      		ldd r24,Y+8
 1137 0644 9985      		ldd r25,Y+9
 1138 0646 FC01      		movw r30,r24
 1139 0648 2385      		ldd r18,Z+11
 1140 064a 3485      		ldd r19,Z+12
 1141 064c 8981      		ldd r24,Y+1
 1142 064e 9A81      		ldd r25,Y+2
 1143 0650 FC01      		movw r30,r24
 1144 0652 3183      		std Z+1,r19
 1145 0654 2083      		st Z,r18
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->seq = header->nwkSeq;
 1146               		.loc 2 337 0
 1147 0656 8885      		ldd r24,Y+8
 1148 0658 9985      		ldd r25,Y+9
 1149 065a FC01      		movw r30,r24
 1150 065c 2285      		ldd r18,Z+10
 1151 065e 8981      		ldd r24,Y+1
 1152 0660 9A81      		ldd r25,Y+2
 1153 0662 FC01      		movw r30,r24
 1154 0664 2283      		std Z+2,r18
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->mask = 1;
 1155               		.loc 2 338 0
 1156 0666 8981      		ldd r24,Y+1
 1157 0668 9A81      		ldd r25,Y+2
 1158 066a 21E0      		ldi r18,lo8(1)
 1159 066c FC01      		movw r30,r24
 1160 066e 2383      		std Z+3,r18
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->ttl = DUPLICATE_REJECTION_TTL;
 1161               		.loc 2 339 0
 1162 0670 8981      		ldd r24,Y+1
 1163 0672 9A81      		ldd r25,Y+2
 1164 0674 25E1      		ldi r18,lo8(21)
 1165 0676 FC01      		movw r30,r24
 1166 0678 2483      		std Z+4,r18
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 1167               		.loc 2 341 0
 1168 067a 80E0      		ldi r24,lo8(nwkRxDuplicateRejectionTimer)
 1169 067c 90E0      		ldi r25,hi8(nwkRxDuplicateRejectionTimer)
 1170 067e 0E94 0000 		call SYS_TimerStart
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1171               		.loc 2 343 0
 1172 0682 80E0      		ldi r24,0
 1173               	.L53:
 1174               	/* epilogue start */
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1175               		.loc 2 344 0
 1176 0684 2996      		adiw r28,9
 1177 0686 0FB6      		in __tmp_reg__,__SREG__
 1178 0688 F894      		cli
 1179 068a DEBF      		out __SP_H__,r29
 1180 068c 0FBE      		out __SREG__,__tmp_reg__
 1181 068e CDBF      		out __SP_L__,r28
 1182 0690 DF91      		pop r29
 1183 0692 CF91      		pop r28
 1184 0694 0895      		ret
 1185               		.cfi_endproc
 1186               	.LFE71:
 1189               	nwkRxSeriveDataInd:
 1190               	.LFB72:
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind)
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1191               		.loc 2 349 0
 1192               		.cfi_startproc
 1193 0696 CF93      		push r28
 1194               	.LCFI28:
 1195               		.cfi_def_cfa_offset 3
 1196               		.cfi_offset 28, -2
 1197 0698 DF93      		push r29
 1198               	.LCFI29:
 1199               		.cfi_def_cfa_offset 4
 1200               		.cfi_offset 29, -3
 1201 069a 00D0      		rcall .
 1202               	.LCFI30:
 1203               		.cfi_def_cfa_offset 6
 1204 069c CDB7      		in r28,__SP_L__
 1205 069e DEB7      		in r29,__SP_H__
 1206               	.LCFI31:
 1207               		.cfi_def_cfa_register 28
 1208               	/* prologue: function */
 1209               	/* frame size = 2 */
 1210               	/* stack size = 4 */
 1211               	.L__stack_usage = 4
 1212 06a0 9A83      		std Y+2,r25
 1213 06a2 8983      		std Y+1,r24
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == (ind->options & NWK_IND_OPT_SECURED)) {
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ind->size < 1) {
 1214               		.loc 2 357 0
 1215 06a4 8981      		ldd r24,Y+1
 1216 06a6 9A81      		ldd r25,Y+2
 1217 06a8 FC01      		movw r30,r24
 1218 06aa 8285      		ldd r24,Z+10
 1219 06ac 8823      		tst r24
 1220 06ae 01F4      		brne .L58
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1221               		.loc 2 358 0
 1222 06b0 80E0      		ldi r24,0
 1223 06b2 00C0      		rjmp .L59
 1224               	.L58:
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	switch (ind->data[0]) {
 1225               		.loc 2 361 0
 1226 06b4 8981      		ldd r24,Y+1
 1227 06b6 9A81      		ldd r25,Y+2
 1228 06b8 FC01      		movw r30,r24
 1229 06ba 8085      		ldd r24,Z+8
 1230 06bc 9185      		ldd r25,Z+9
 1231 06be FC01      		movw r30,r24
 1232 06c0 8081      		ld r24,Z
 1233 06c2 882F      		mov r24,r24
 1234 06c4 90E0      		ldi r25,0
 1235 06c6 892B      		or r24,r25
 1236 06c8 01F4      		brne .L62
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ACK:
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkTxAckReceived(ind);
 1237               		.loc 2 363 0
 1238 06ca 8981      		ldd r24,Y+1
 1239 06cc 9A81      		ldd r25,Y+2
 1240 06ce 0E94 0000 		call nwkTxAckReceived
 1241 06d2 00C0      		rjmp .L59
 1242               	.L62:
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_ERROR:
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteErrorReceived(ind);
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTE_DISCOVERY
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REQUEST:
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryRequestReceived(ind);
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REPLY:
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryReplyReceived(ind);
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	default:
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1243               		.loc 2 381 0
 1244 06d4 80E0      		ldi r24,0
 1245               	.L59:
 1246               	/* epilogue start */
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1247               		.loc 2 383 0
 1248 06d6 0F90      		pop __tmp_reg__
 1249 06d8 0F90      		pop __tmp_reg__
 1250 06da DF91      		pop r29
 1251 06dc CF91      		pop r28
 1252 06de 0895      		ret
 1253               		.cfi_endproc
 1254               	.LFE72:
 1257               	nwkRxHandleReceivedFrame:
 1258               	.LFB73:
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleReceivedFrame(NwkFrame_t *frame)
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1259               		.loc 2 388 0
 1260               		.cfi_startproc
 1261 06e0 CF93      		push r28
 1262               	.LCFI32:
 1263               		.cfi_def_cfa_offset 3
 1264               		.cfi_offset 28, -2
 1265 06e2 DF93      		push r29
 1266               	.LCFI33:
 1267               		.cfi_def_cfa_offset 4
 1268               		.cfi_offset 29, -3
 1269 06e4 CDB7      		in r28,__SP_L__
 1270 06e6 DEB7      		in r29,__SP_H__
 1271               	.LCFI34:
 1272               		.cfi_def_cfa_register 28
 1273 06e8 2897      		sbiw r28,8
 1274               	.LCFI35:
 1275               		.cfi_def_cfa_offset 12
 1276 06ea 0FB6      		in __tmp_reg__,__SREG__
 1277 06ec F894      		cli
 1278 06ee DEBF      		out __SP_H__,r29
 1279 06f0 0FBE      		out __SREG__,__tmp_reg__
 1280 06f2 CDBF      		out __SP_L__,r28
 1281               	/* prologue: function */
 1282               	/* frame size = 8 */
 1283               	/* stack size = 10 */
 1284               	.L__stack_usage = 10
 1285 06f4 9887      		std Y+8,r25
 1286 06f6 8F83      		std Y+7,r24
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1287               		.loc 2 389 0
 1288 06f8 8F81      		ldd r24,Y+7
 1289 06fa 9885      		ldd r25,Y+8
 1290 06fc 0296      		adiw r24,2
 1291 06fe 9B83      		std Y+3,r25
 1292 0700 8A83      		std Y+2,r24
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1293               		.loc 2 391 0
 1294 0702 8F81      		ldd r24,Y+7
 1295 0704 9885      		ldd r25,Y+8
 1296 0706 24E2      		ldi r18,lo8(36)
 1297 0708 FC01      		movw r30,r24
 1298 070a 2083      		st Z,r18
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifndef NWK_ENABLE_SECURITY
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.security) {
 1299               		.loc 2 394 0
 1300 070c 8A81      		ldd r24,Y+2
 1301 070e 9B81      		ldd r25,Y+3
 1302 0710 FC01      		movw r30,r24
 1303 0712 8185      		ldd r24,Z+9
 1304 0714 8270      		andi r24,lo8(2)
 1305 0716 8823      		tst r24
 1306 0718 01F0      		breq .+2
 1307 071a 00C0      		rjmp .L84
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast && header->nwkFcf.ackRequest) {
 1308               		.loc 2 401 0
 1309 071c 8A81      		ldd r24,Y+2
 1310 071e 9B81      		ldd r25,Y+3
 1311 0720 FC01      		movw r30,r24
 1312 0722 8185      		ldd r24,Z+9
 1313 0724 8870      		andi r24,lo8(8)
 1314 0726 8823      		tst r24
 1315 0728 01F0      		breq .L66
 1316               		.loc 2 401 0 is_stmt 0 discriminator 1
 1317 072a 8A81      		ldd r24,Y+2
 1318 072c 9B81      		ldd r25,Y+3
 1319 072e FC01      		movw r30,r24
 1320 0730 8185      		ldd r24,Z+9
 1321 0732 8170      		andi r24,lo8(1)
 1322 0734 8823      		tst r24
 1323 0736 01F0      		breq .+2
 1324 0738 00C0      		rjmp .L85
 1325               	.L66:
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #else
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == header->macDstPanId)
 1326               		.loc 2 412 0 is_stmt 1
 1327 073a 8A81      		ldd r24,Y+2
 1328 073c 9B81      		ldd r25,Y+3
 1329 073e FC01      		movw r30,r24
 1330 0740 8381      		ldd r24,Z+3
 1331 0742 9481      		ldd r25,Z+4
 1332 0744 0196      		adiw r24,1
 1333 0746 01F4      		brne .L67
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR == header->nwkDstAddr)
 1334               		.loc 2 414 0
 1335 0748 2091 0000 		lds r18,nwkIb
 1336 074c 3091 0000 		lds r19,nwkIb+1
 1337 0750 8A81      		ldd r24,Y+2
 1338 0752 9B81      		ldd r25,Y+3
 1339 0754 FC01      		movw r30,r24
 1340 0756 8585      		ldd r24,Z+13
 1341 0758 9685      		ldd r25,Z+14
 1342 075a 2817      		cp r18,r24
 1343 075c 3907      		cpc r19,r25
 1344 075e 01F0      		breq .L68
 1345               		.loc 2 414 0 is_stmt 0 discriminator 1
 1346 0760 8A81      		ldd r24,Y+2
 1347 0762 9B81      		ldd r25,Y+3
 1348 0764 FC01      		movw r30,r24
 1349 0766 8585      		ldd r24,Z+13
 1350 0768 9685      		ldd r25,Z+14
 1351 076a 0196      		adiw r24,1
 1352 076c 01F0      		breq .+2
 1353 076e 00C0      		rjmp .L86
 1354               	.L68:
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security)
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			{
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1355               		.loc 2 423 0 is_stmt 1
 1356 0770 8F81      		ldd r24,Y+7
 1357 0772 9885      		ldd r25,Y+8
 1358 0774 22E2      		ldi r18,lo8(34)
 1359 0776 FC01      		movw r30,r24
 1360 0778 2083      		st Z,r18
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 1361               		.loc 2 426 0
 1362 077a 00C0      		rjmp .L86
 1363               	.L67:
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ADDRESS_FILTER
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (!NWK_FilterAddress(header->macSrcAddr, &frame->rx.lqi)) {
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == header->nwkDstAddr && header->nwkFcf.ackRequest)
 1364               		.loc 2 436 0
 1365 077c 8A81      		ldd r24,Y+2
 1366 077e 9B81      		ldd r25,Y+3
 1367 0780 FC01      		movw r30,r24
 1368 0782 8585      		ldd r24,Z+13
 1369 0784 9685      		ldd r25,Z+14
 1370 0786 0196      		adiw r24,1
 1371 0788 01F4      		brne .L70
 1372               		.loc 2 436 0 is_stmt 0 discriminator 1
 1373 078a 8A81      		ldd r24,Y+2
 1374 078c 9B81      		ldd r25,Y+3
 1375 078e FC01      		movw r30,r24
 1376 0790 8185      		ldd r24,Z+9
 1377 0792 8170      		andi r24,lo8(1)
 1378 0794 8823      		tst r24
 1379 0796 01F0      		breq .+2
 1380 0798 00C0      		rjmp .L87
 1381               	.L70:
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkIb.addr == header->nwkSrcAddr)
 1382               		.loc 2 441 0 is_stmt 1
 1383 079a 2091 0000 		lds r18,nwkIb
 1384 079e 3091 0000 		lds r19,nwkIb+1
 1385 07a2 8A81      		ldd r24,Y+2
 1386 07a4 9B81      		ldd r25,Y+3
 1387 07a6 FC01      		movw r30,r24
 1388 07a8 8385      		ldd r24,Z+11
 1389 07aa 9485      		ldd r25,Z+12
 1390 07ac 2817      		cp r18,r24
 1391 07ae 3907      		cpc r19,r25
 1392 07b0 01F4      		brne .+2
 1393 07b2 00C0      		rjmp .L88
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 445:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRouteFrameReceived(frame);
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 449:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkRxRejectDuplicate(header))
 1394               		.loc 2 450 0
 1395 07b4 8A81      		ldd r24,Y+2
 1396 07b6 9B81      		ldd r25,Y+3
 1397 07b8 0E94 0000 		call nwkRxRejectDuplicate
 1398 07bc 8823      		tst r24
 1399 07be 01F0      		breq .+2
 1400 07c0 00C0      		rjmp .L89
 451:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 455:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 456:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 1401               		.loc 2 456 0
 1402 07c2 8A81      		ldd r24,Y+2
 1403 07c4 9B81      		ldd r25,Y+3
 1404 07c6 FC01      		movw r30,r24
 1405 07c8 8185      		ldd r24,Z+9
 1406 07ca 8870      		andi r24,lo8(8)
 1407 07cc 8823      		tst r24
 1408 07ce 01F4      		brne .+2
 1409 07d0 00C0      		rjmp .L73
 1410               	.LBB7:
 457:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameMulticastHeader_t *mcHeader
 1411               		.loc 2 457 0
 1412 07d2 8F81      		ldd r24,Y+7
 1413 07d4 9885      		ldd r25,Y+8
 1414 07d6 8F57      		subi r24,127
 1415 07d8 9F4F      		sbci r25,-1
 1416 07da FC01      		movw r30,r24
 1417 07dc 8081      		ld r24,Z
 1418 07de 9181      		ldd r25,Z+1
 1419 07e0 9D83      		std Y+5,r25
 1420 07e2 8C83      		std Y+4,r24
 458:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			= (NwkFrameMulticastHeader_t *)frame->payload;
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool member = NWK_GroupIsMember(header->nwkDstAddr);
 1421               		.loc 2 459 0
 1422 07e4 8A81      		ldd r24,Y+2
 1423 07e6 9B81      		ldd r25,Y+3
 1424 07e8 FC01      		movw r30,r24
 1425 07ea 8585      		ldd r24,Z+13
 1426 07ec 9685      		ldd r25,Z+14
 1427 07ee 0E94 0000 		call NWK_GroupIsMember
 1428 07f2 8E83      		std Y+6,r24
 460:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool broadcast = false;
 1429               		.loc 2 460 0
 1430 07f4 1982      		std Y+1,__zero_reg__
 461:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 462:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 1431               		.loc 2 462 0
 1432 07f6 8A81      		ldd r24,Y+2
 1433 07f8 9B81      		ldd r25,Y+3
 1434 07fa FC01      		movw r30,r24
 1435 07fc 8581      		ldd r24,Z+5
 1436 07fe 9681      		ldd r25,Z+6
 1437 0800 0196      		adiw r24,1
 1438 0802 01F0      		breq .+2
 1439 0804 00C0      		rjmp .L74
 463:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1440               		.loc 2 463 0
 1441 0806 8E81      		ldd r24,Y+6
 1442 0808 8823      		tst r24
 1443 080a 01F0      		breq .L75
 464:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->memberRadius > 0;
 1444               		.loc 2 464 0
 1445 080c 8C81      		ldd r24,Y+4
 1446 080e 9D81      		ldd r25,Y+5
 1447 0810 FC01      		movw r30,r24
 1448 0812 8181      		ldd r24,Z+1
 1449 0814 8F70      		andi r24,lo8(15)
 1450 0816 882F      		mov r24,r24
 1451 0818 90E0      		ldi r25,0
 1452 081a 21E0      		ldi r18,lo8(1)
 1453 081c 1816      		cp __zero_reg__,r24
 1454 081e 1906      		cpc __zero_reg__,r25
 1455 0820 04F0      		brlt .L76
 1456 0822 20E0      		ldi r18,0
 1457               	.L76:
 1458 0824 2983      		std Y+1,r18
 465:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius--;
 1459               		.loc 2 465 0
 1460 0826 8C81      		ldd r24,Y+4
 1461 0828 9D81      		ldd r25,Y+5
 1462 082a FC01      		movw r30,r24
 1463 082c 8181      		ldd r24,Z+1
 1464 082e 8F70      		andi r24,lo8(15)
 1465 0830 2FE0      		ldi r18,lo8(15)
 1466 0832 280F      		add r18,r24
 1467 0834 2F70      		andi r18,lo8(15)
 1468 0836 8C81      		ldd r24,Y+4
 1469 0838 9D81      		ldd r25,Y+5
 1470 083a 2F70      		andi r18,lo8(15)
 1471 083c FC01      		movw r30,r24
 1472 083e 3181      		ldd r19,Z+1
 1473 0840 307F      		andi r19,lo8(-16)
 1474 0842 232B      		or r18,r19
 1475 0844 FC01      		movw r30,r24
 1476 0846 2183      		std Z+1,r18
 466:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius
 467:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxNonMemberRadius;
 1477               		.loc 2 467 0
 1478 0848 8C81      		ldd r24,Y+4
 1479 084a 9D81      		ldd r25,Y+5
 1480 084c FC01      		movw r30,r24
 1481 084e 8081      		ld r24,Z
 1482 0850 282F      		mov r18,r24
 1483 0852 2295      		swap r18
 1484 0854 2F70      		andi r18,lo8(15)
 1485 0856 8C81      		ldd r24,Y+4
 1486 0858 9D81      		ldd r25,Y+5
 1487 085a 2F70      		andi r18,lo8(15)
 1488 085c FC01      		movw r30,r24
 1489 085e 3081      		ld r19,Z
 1490 0860 307F      		andi r19,lo8(-16)
 1491 0862 232B      		or r18,r19
 1492 0864 FC01      		movw r30,r24
 1493 0866 2083      		st Z,r18
 1494 0868 00C0      		rjmp .L79
 1495               	.L75:
 468:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 469:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->nonMemberRadius > 0;
 1496               		.loc 2 469 0
 1497 086a 8C81      		ldd r24,Y+4
 1498 086c 9D81      		ldd r25,Y+5
 1499 086e FC01      		movw r30,r24
 1500 0870 8081      		ld r24,Z
 1501 0872 8F70      		andi r24,lo8(15)
 1502 0874 882F      		mov r24,r24
 1503 0876 90E0      		ldi r25,0
 1504 0878 21E0      		ldi r18,lo8(1)
 1505 087a 1816      		cp __zero_reg__,r24
 1506 087c 1906      		cpc __zero_reg__,r25
 1507 087e 04F0      		brlt .L78
 1508 0880 20E0      		ldi r18,0
 1509               	.L78:
 1510 0882 2983      		std Y+1,r18
 470:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius--;
 1511               		.loc 2 470 0
 1512 0884 8C81      		ldd r24,Y+4
 1513 0886 9D81      		ldd r25,Y+5
 1514 0888 FC01      		movw r30,r24
 1515 088a 8081      		ld r24,Z
 1516 088c 8F70      		andi r24,lo8(15)
 1517 088e 2FE0      		ldi r18,lo8(15)
 1518 0890 280F      		add r18,r24
 1519 0892 2F70      		andi r18,lo8(15)
 1520 0894 8C81      		ldd r24,Y+4
 1521 0896 9D81      		ldd r25,Y+5
 1522 0898 2F70      		andi r18,lo8(15)
 1523 089a FC01      		movw r30,r24
 1524 089c 3081      		ld r19,Z
 1525 089e 307F      		andi r19,lo8(-16)
 1526 08a0 232B      		or r18,r19
 1527 08a2 FC01      		movw r30,r24
 1528 08a4 2083      		st Z,r18
 471:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius
 472:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxMemberRadius;
 1529               		.loc 2 472 0
 1530 08a6 8C81      		ldd r24,Y+4
 1531 08a8 9D81      		ldd r25,Y+5
 1532 08aa FC01      		movw r30,r24
 1533 08ac 8181      		ldd r24,Z+1
 1534 08ae 282F      		mov r18,r24
 1535 08b0 2295      		swap r18
 1536 08b2 2F70      		andi r18,lo8(15)
 1537 08b4 8C81      		ldd r24,Y+4
 1538 08b6 9D81      		ldd r25,Y+5
 1539 08b8 2F70      		andi r18,lo8(15)
 1540 08ba FC01      		movw r30,r24
 1541 08bc 3181      		ldd r19,Z+1
 1542 08be 307F      		andi r19,lo8(-16)
 1543 08c0 232B      		or r18,r19
 1544 08c2 FC01      		movw r30,r24
 1545 08c4 2183      		std Z+1,r18
 1546 08c6 00C0      		rjmp .L79
 1547               	.L74:
 473:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 474:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		} else {
 475:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1548               		.loc 2 475 0
 1549 08c8 8E81      		ldd r24,Y+6
 1550 08ca 8823      		tst r24
 1551 08cc 01F0      		breq .L79
 476:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = true;
 1552               		.loc 2 476 0
 1553 08ce 81E0      		ldi r24,lo8(1)
 1554 08d0 8983      		std Y+1,r24
 477:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkFcf.linkLocal = 1;
 1555               		.loc 2 477 0
 1556 08d2 8A81      		ldd r24,Y+2
 1557 08d4 9B81      		ldd r25,Y+3
 1558 08d6 FC01      		movw r30,r24
 1559 08d8 2185      		ldd r18,Z+9
 1560 08da 2460      		ori r18,lo8(4)
 1561 08dc FC01      		movw r30,r24
 1562 08de 2187      		std Z+9,r18
 1563               	.L79:
 478:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 479:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 480:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_ROUTING
 481:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else {
 482:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_ROUTE;
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 485:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 486:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 487:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (broadcast) {
 1564               		.loc 2 487 0
 1565 08e0 8981      		ldd r24,Y+1
 1566 08e2 8823      		tst r24
 1567 08e4 01F0      		breq .L80
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1568               		.loc 2 488 0
 1569 08e6 8F81      		ldd r24,Y+7
 1570 08e8 9885      		ldd r25,Y+8
 1571 08ea 0E94 0000 		call nwkTxBroadcastFrame
 1572               	.L80:
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 490:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 491:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (member) {
 1573               		.loc 2 491 0
 1574 08ee 8E81      		ldd r24,Y+6
 1575 08f0 8823      		tst r24
 1576 08f2 01F4      		brne .+2
 1577 08f4 00C0      		rjmp .L63
 492:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 1578               		.loc 2 492 0
 1579 08f6 8F81      		ldd r24,Y+7
 1580 08f8 9885      		ldd r25,Y+8
 1581 08fa 8F57      		subi r24,127
 1582 08fc 9F4F      		sbci r25,-1
 1583 08fe FC01      		movw r30,r24
 1584 0900 8081      		ld r24,Z
 1585 0902 9181      		ldd r25,Z+1
 1586 0904 9C01      		movw r18,r24
 1587 0906 2E5F      		subi r18,-2
 1588 0908 3F4F      		sbci r19,-1
 1589 090a 8F81      		ldd r24,Y+7
 1590 090c 9885      		ldd r25,Y+8
 1591 090e 8F57      		subi r24,127
 1592 0910 9F4F      		sbci r25,-1
 1593 0912 FC01      		movw r30,r24
 1594 0914 3183      		std Z+1,r19
 1595 0916 2083      		st Z,r18
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 495:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 496:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 497:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1596               		.loc 2 499 0
 1597 0918 8F81      		ldd r24,Y+7
 1598 091a 9885      		ldd r25,Y+8
 1599 091c 22E2      		ldi r18,lo8(34)
 1600 091e FC01      		movw r30,r24
 1601 0920 2083      		st Z,r18
 1602 0922 00C0      		rjmp .L63
 1603               	.L73:
 1604               	.LBE7:
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif /* NWK_ENABLE_MULTICAST */
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr && nwkIb.addr !=
 1605               		.loc 2 504 0
 1606 0924 8A81      		ldd r24,Y+2
 1607 0926 9B81      		ldd r25,Y+3
 1608 0928 FC01      		movw r30,r24
 1609 092a 8581      		ldd r24,Z+5
 1610 092c 9681      		ldd r25,Z+6
 1611 092e 0196      		adiw r24,1
 1612 0930 01F4      		brne .L82
 1613               		.loc 2 504 0 is_stmt 0 discriminator 1
 1614 0932 2091 0000 		lds r18,nwkIb
 1615 0936 3091 0000 		lds r19,nwkIb+1
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1616               		.loc 2 505 0 is_stmt 1 discriminator 1
 1617 093a 8A81      		ldd r24,Y+2
 1618 093c 9B81      		ldd r25,Y+3
 1619 093e FC01      		movw r30,r24
 1620 0940 8585      		ldd r24,Z+13
 1621 0942 9685      		ldd r25,Z+14
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1622               		.loc 2 504 0 discriminator 1
 1623 0944 2817      		cp r18,r24
 1624 0946 3907      		cpc r19,r25
 1625 0948 01F0      		breq .L82
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				0 == header->nwkFcf.linkLocal) {
 1626               		.loc 2 506 0
 1627 094a 8A81      		ldd r24,Y+2
 1628 094c 9B81      		ldd r25,Y+3
 1629 094e FC01      		movw r30,r24
 1630 0950 8185      		ldd r24,Z+9
 1631 0952 8470      		andi r24,lo8(4)
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1632               		.loc 2 505 0
 1633 0954 8823      		tst r24
 1634 0956 01F4      		brne .L82
 507:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1635               		.loc 2 507 0
 1636 0958 8F81      		ldd r24,Y+7
 1637 095a 9885      		ldd r25,Y+8
 1638 095c 0E94 0000 		call nwkTxBroadcastFrame
 1639               	.L82:
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 509:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR ==
 1640               		.loc 2 510 0
 1641 0960 2091 0000 		lds r18,nwkIb
 1642 0964 3091 0000 		lds r19,nwkIb+1
 1643 0968 8A81      		ldd r24,Y+2
 1644 096a 9B81      		ldd r25,Y+3
 1645 096c FC01      		movw r30,r24
 1646 096e 8585      		ldd r24,Z+13
 1647 0970 9685      		ldd r25,Z+14
 1648 0972 2817      		cp r18,r24
 1649 0974 3907      		cpc r19,r25
 1650 0976 01F0      		breq .L83
 511:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1651               		.loc 2 511 0 discriminator 1
 1652 0978 8A81      		ldd r24,Y+2
 1653 097a 9B81      		ldd r25,Y+3
 1654 097c FC01      		movw r30,r24
 1655 097e 8585      		ldd r24,Z+13
 1656 0980 9685      		ldd r25,Z+14
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1657               		.loc 2 510 0 discriminator 1
 1658 0982 0196      		adiw r24,1
 1659 0984 01F4      		brne .L63
 1660               	.L83:
 512:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 513:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 514:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 515:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 516:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 517:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1661               		.loc 2 517 0
 1662 0986 8F81      		ldd r24,Y+7
 1663 0988 9885      		ldd r25,Y+8
 1664 098a 22E2      		ldi r18,lo8(34)
 1665 098c FC01      		movw r30,r24
 1666 098e 2083      		st Z,r18
 1667 0990 00C0      		rjmp .L63
 1668               	.L84:
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1669               		.loc 2 395 0
 1670 0992 0000      		nop
 1671 0994 00C0      		rjmp .L63
 1672               	.L85:
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1673               		.loc 2 402 0
 1674 0996 0000      		nop
 1675 0998 00C0      		rjmp .L63
 1676               	.L86:
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1677               		.loc 2 426 0
 1678 099a 0000      		nop
 1679 099c 00C0      		rjmp .L63
 1680               	.L87:
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1681               		.loc 2 438 0
 1682 099e 0000      		nop
 1683 09a0 00C0      		rjmp .L63
 1684               	.L88:
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1685               		.loc 2 443 0
 1686 09a2 0000      		nop
 1687 09a4 00C0      		rjmp .L63
 1688               	.L89:
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1689               		.loc 2 452 0
 1690 09a6 0000      		nop
 1691               	.L63:
 1692               	/* epilogue start */
 518:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 519:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 520:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #ifdef NWK_ENABLE_ROUTING
 521:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if (nwkIb.addr == header->macDstAddr) {
 522:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_ROUTE;
 523:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 524:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #endif
 525:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 526:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1693               		.loc 2 526 0
 1694 09a8 2896      		adiw r28,8
 1695 09aa 0FB6      		in __tmp_reg__,__SREG__
 1696 09ac F894      		cli
 1697 09ae DEBF      		out __SP_H__,r29
 1698 09b0 0FBE      		out __SREG__,__tmp_reg__
 1699 09b2 CDBF      		out __SP_L__,r28
 1700 09b4 DF91      		pop r29
 1701 09b6 CF91      		pop r28
 1702 09b8 0895      		ret
 1703               		.cfi_endproc
 1704               	.LFE73:
 1707               	nwkRxIndicateDataFrame:
 1708               	.LFB74:
 527:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 528:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 529:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 530:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateDataFrame(NwkFrame_t *frame)
 531:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1709               		.loc 2 531 0
 1710               		.cfi_startproc
 1711 09ba CF93      		push r28
 1712               	.LCFI36:
 1713               		.cfi_def_cfa_offset 3
 1714               		.cfi_offset 28, -2
 1715 09bc DF93      		push r29
 1716               	.LCFI37:
 1717               		.cfi_def_cfa_offset 4
 1718               		.cfi_offset 29, -3
 1719 09be CDB7      		in r28,__SP_L__
 1720 09c0 DEB7      		in r29,__SP_H__
 1721               	.LCFI38:
 1722               		.cfi_def_cfa_register 28
 1723 09c2 6197      		sbiw r28,17
 1724               	.LCFI39:
 1725               		.cfi_def_cfa_offset 21
 1726 09c4 0FB6      		in __tmp_reg__,__SREG__
 1727 09c6 F894      		cli
 1728 09c8 DEBF      		out __SP_H__,r29
 1729 09ca 0FBE      		out __SREG__,__tmp_reg__
 1730 09cc CDBF      		out __SP_L__,r28
 1731               	/* prologue: function */
 1732               	/* frame size = 17 */
 1733               	/* stack size = 19 */
 1734               	.L__stack_usage = 19
 1735 09ce 998B      		std Y+17,r25
 1736 09d0 888B      		std Y+16,r24
 532:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1737               		.loc 2 532 0
 1738 09d2 8889      		ldd r24,Y+16
 1739 09d4 9989      		ldd r25,Y+17
 1740 09d6 0296      		adiw r24,2
 1741 09d8 9A83      		std Y+2,r25
 1742 09da 8983      		std Y+1,r24
 533:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 534:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 535:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[header->nwkDstEndpoint]) {
 1743               		.loc 2 535 0
 1744 09dc 8981      		ldd r24,Y+1
 1745 09de 9A81      		ldd r25,Y+2
 1746 09e0 FC01      		movw r30,r24
 1747 09e2 8785      		ldd r24,Z+15
 1748 09e4 8295      		swap r24
 1749 09e6 8F70      		andi r24,lo8(15)
 1750 09e8 882F      		mov r24,r24
 1751 09ea 90E0      		ldi r25,0
 1752 09ec 0396      		adiw r24,3
 1753 09ee 880F      		lsl r24
 1754 09f0 991F      		rol r25
 1755 09f2 8050      		subi r24,lo8(-(nwkIb))
 1756 09f4 9040      		sbci r25,hi8(-(nwkIb))
 1757 09f6 FC01      		movw r30,r24
 1758 09f8 8081      		ld r24,Z
 1759 09fa 9181      		ldd r25,Z+1
 1760 09fc 892B      		or r24,r25
 1761 09fe 01F4      		brne .L91
 536:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1762               		.loc 2 536 0
 1763 0a00 80E0      		ldi r24,0
 1764 0a02 00C0      		rjmp .L106
 1765               	.L91:
 537:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 538:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 539:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = header->nwkSrcAddr;
 1766               		.loc 2 539 0
 1767 0a04 8981      		ldd r24,Y+1
 1768 0a06 9A81      		ldd r25,Y+2
 1769 0a08 FC01      		movw r30,r24
 1770 0a0a 8385      		ldd r24,Z+11
 1771 0a0c 9485      		ldd r25,Z+12
 1772 0a0e 9C83      		std Y+4,r25
 1773 0a10 8B83      		std Y+3,r24
 540:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = header->nwkDstAddr;
 1774               		.loc 2 540 0
 1775 0a12 8981      		ldd r24,Y+1
 1776 0a14 9A81      		ldd r25,Y+2
 1777 0a16 FC01      		movw r30,r24
 1778 0a18 8585      		ldd r24,Z+13
 1779 0a1a 9685      		ldd r25,Z+14
 1780 0a1c 9E83      		std Y+6,r25
 1781 0a1e 8D83      		std Y+5,r24
 541:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = header->nwkSrcEndpoint;
 1782               		.loc 2 541 0
 1783 0a20 8981      		ldd r24,Y+1
 1784 0a22 9A81      		ldd r25,Y+2
 1785 0a24 FC01      		movw r30,r24
 1786 0a26 8785      		ldd r24,Z+15
 1787 0a28 8F70      		andi r24,lo8(15)
 1788 0a2a 8F83      		std Y+7,r24
 542:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = header->nwkDstEndpoint;
 1789               		.loc 2 542 0
 1790 0a2c 8981      		ldd r24,Y+1
 1791 0a2e 9A81      		ldd r25,Y+2
 1792 0a30 FC01      		movw r30,r24
 1793 0a32 8785      		ldd r24,Z+15
 1794 0a34 8295      		swap r24
 1795 0a36 8F70      		andi r24,lo8(15)
 1796 0a38 8887      		std Y+8,r24
 543:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1797               		.loc 2 543 0
 1798 0a3a 8889      		ldd r24,Y+16
 1799 0a3c 9989      		ldd r25,Y+17
 1800 0a3e 8F57      		subi r24,127
 1801 0a40 9F4F      		sbci r25,-1
 1802 0a42 FC01      		movw r30,r24
 1803 0a44 8081      		ld r24,Z
 1804 0a46 9181      		ldd r25,Z+1
 1805 0a48 9C87      		std Y+12,r25
 1806 0a4a 8B87      		std Y+11,r24
 544:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1807               		.loc 2 544 0
 1808 0a4c 8889      		ldd r24,Y+16
 1809 0a4e 9989      		ldd r25,Y+17
 1810 0a50 0E94 0000 		call nwkFramePayloadSize
 1811 0a54 8D87      		std Y+13,r24
 545:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1812               		.loc 2 545 0
 1813 0a56 8889      		ldd r24,Y+16
 1814 0a58 9989      		ldd r25,Y+17
 1815 0a5a 8D57      		subi r24,125
 1816 0a5c 9F4F      		sbci r25,-1
 1817 0a5e FC01      		movw r30,r24
 1818 0a60 8081      		ld r24,Z
 1819 0a62 8E87      		std Y+14,r24
 546:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1820               		.loc 2 546 0
 1821 0a64 8889      		ldd r24,Y+16
 1822 0a66 9989      		ldd r25,Y+17
 1823 0a68 8C57      		subi r24,124
 1824 0a6a 9F4F      		sbci r25,-1
 1825 0a6c FC01      		movw r30,r24
 1826 0a6e 8081      		ld r24,Z
 1827 0a70 8F87      		std Y+15,r24
 547:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 548:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK_REQUESTED : 0;
 1828               		.loc 2 548 0
 1829 0a72 8981      		ldd r24,Y+1
 1830 0a74 9A81      		ldd r25,Y+2
 1831 0a76 FC01      		movw r30,r24
 1832 0a78 8185      		ldd r24,Z+9
 1833 0a7a 982F      		mov r25,r24
 1834 0a7c 9170      		andi r25,lo8(1)
 1835 0a7e 81E0      		ldi r24,lo8(1)
 1836 0a80 9923      		tst r25
 1837 0a82 01F4      		brne .L93
 1838 0a84 80E0      		ldi r24,0
 1839               	.L93:
 1840 0a86 882F      		mov r24,r24
 1841 0a88 90E0      		ldi r25,0
 1842 0a8a 9A87      		std Y+10,r25
 1843 0a8c 8987      		std Y+9,r24
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECURED : 0;
 1844               		.loc 2 549 0
 1845 0a8e 2985      		ldd r18,Y+9
 1846 0a90 3A85      		ldd r19,Y+10
 1847 0a92 8981      		ldd r24,Y+1
 1848 0a94 9A81      		ldd r25,Y+2
 1849 0a96 FC01      		movw r30,r24
 1850 0a98 8185      		ldd r24,Z+9
 1851 0a9a 882F      		mov r24,r24
 1852 0a9c 90E0      		ldi r25,0
 1853 0a9e 8270      		andi r24,2
 1854 0aa0 9927      		clr r25
 1855 0aa2 822B      		or r24,r18
 1856 0aa4 932B      		or r25,r19
 1857 0aa6 9A87      		std Y+10,r25
 1858 0aa8 8987      		std Y+9,r24
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LINK_LOCAL : 0;
 1859               		.loc 2 550 0
 1860 0aaa 2985      		ldd r18,Y+9
 1861 0aac 3A85      		ldd r19,Y+10
 1862 0aae 8981      		ldd r24,Y+1
 1863 0ab0 9A81      		ldd r25,Y+2
 1864 0ab2 FC01      		movw r30,r24
 1865 0ab4 8185      		ldd r24,Z+9
 1866 0ab6 8470      		andi r24,lo8(4)
 1867 0ab8 8823      		tst r24
 1868 0aba 01F0      		breq .L94
 1869               		.loc 2 550 0 is_stmt 0 discriminator 1
 1870 0abc 80E2      		ldi r24,lo8(32)
 1871 0abe 90E0      		ldi r25,0
 1872 0ac0 00C0      		rjmp .L95
 1873               	.L94:
 1874               		.loc 2 550 0 discriminator 2
 1875 0ac2 80E0      		ldi r24,0
 1876 0ac4 90E0      		ldi r25,0
 1877               	.L95:
 1878               		.loc 2 550 0 discriminator 4
 1879 0ac6 822B      		or r24,r18
 1880 0ac8 932B      		or r25,r19
 1881 0aca 9A87      		std Y+10,r25
 1882 0acc 8987      		std Y+9,r24
 551:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MULTICAST : 0;
 1883               		.loc 2 551 0 is_stmt 1 discriminator 4
 1884 0ace 2985      		ldd r18,Y+9
 1885 0ad0 3A85      		ldd r19,Y+10
 1886 0ad2 8981      		ldd r24,Y+1
 1887 0ad4 9A81      		ldd r25,Y+2
 1888 0ad6 FC01      		movw r30,r24
 1889 0ad8 8185      		ldd r24,Z+9
 1890 0ada 8870      		andi r24,lo8(8)
 1891 0adc 8823      		tst r24
 1892 0ade 01F0      		breq .L96
 1893               		.loc 2 551 0 is_stmt 0 discriminator 1
 1894 0ae0 80E4      		ldi r24,lo8(64)
 1895 0ae2 90E0      		ldi r25,0
 1896 0ae4 00C0      		rjmp .L97
 1897               	.L96:
 1898               		.loc 2 551 0 discriminator 2
 1899 0ae6 80E0      		ldi r24,0
 1900 0ae8 90E0      		ldi r25,0
 1901               	.L97:
 1902               		.loc 2 551 0 discriminator 4
 1903 0aea 822B      		or r24,r18
 1904 0aec 932B      		or r25,r19
 1905 0aee 9A87      		std Y+10,r25
 1906 0af0 8987      		std Y+9,r24
 552:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.beacon) ? NWK_IND_OPT_BEACON : 0;
 1907               		.loc 2 552 0 is_stmt 1 discriminator 4
 1908 0af2 2985      		ldd r18,Y+9
 1909 0af4 3A85      		ldd r19,Y+10
 1910 0af6 8981      		ldd r24,Y+1
 1911 0af8 9A81      		ldd r25,Y+2
 1912 0afa FC01      		movw r30,r24
 1913 0afc 8185      		ldd r24,Z+9
 1914 0afe 8071      		andi r24,lo8(16)
 1915 0b00 8823      		tst r24
 1916 0b02 01F0      		breq .L98
 1917               		.loc 2 552 0 is_stmt 0 discriminator 1
 1918 0b04 80E8      		ldi r24,lo8(-128)
 1919 0b06 90E0      		ldi r25,0
 1920 0b08 00C0      		rjmp .L99
 1921               	.L98:
 1922               		.loc 2 552 0 discriminator 2
 1923 0b0a 80E0      		ldi r24,0
 1924 0b0c 90E0      		ldi r25,0
 1925               	.L99:
 1926               		.loc 2 552 0 discriminator 4
 1927 0b0e 822B      		or r24,r18
 1928 0b10 932B      		or r25,r19
 1929 0b12 9A87      		std Y+10,r25
 1930 0b14 8987      		std Y+9,r24
 553:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_ADDR == header->nwkDstAddr) ? NWK_IND_OPT_BROADCAST : 0;
 1931               		.loc 2 553 0 is_stmt 1 discriminator 4
 1932 0b16 2985      		ldd r18,Y+9
 1933 0b18 3A85      		ldd r19,Y+10
 1934 0b1a 8981      		ldd r24,Y+1
 1935 0b1c 9A81      		ldd r25,Y+2
 1936 0b1e FC01      		movw r30,r24
 1937 0b20 8585      		ldd r24,Z+13
 1938 0b22 9685      		ldd r25,Z+14
 1939 0b24 0196      		adiw r24,1
 1940 0b26 01F4      		brne .L100
 1941               		.loc 2 553 0 is_stmt 0 discriminator 1
 1942 0b28 84E0      		ldi r24,lo8(4)
 1943 0b2a 90E0      		ldi r25,0
 1944 0b2c 00C0      		rjmp .L101
 1945               	.L100:
 1946               		.loc 2 553 0 discriminator 2
 1947 0b2e 80E0      		ldi r24,0
 1948 0b30 90E0      		ldi r25,0
 1949               	.L101:
 1950               		.loc 2 553 0 discriminator 4
 1951 0b32 822B      		or r24,r18
 1952 0b34 932B      		or r25,r19
 1953 0b36 9A87      		std Y+10,r25
 1954 0b38 8987      		std Y+9,r24
 554:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (header->nwkSrcAddr == header->macSrcAddr) ? NWK_IND_OPT_LOCAL : 0;
 1955               		.loc 2 554 0 is_stmt 1 discriminator 4
 1956 0b3a 2985      		ldd r18,Y+9
 1957 0b3c 3A85      		ldd r19,Y+10
 1958 0b3e 8981      		ldd r24,Y+1
 1959 0b40 9A81      		ldd r25,Y+2
 1960 0b42 FC01      		movw r30,r24
 1961 0b44 4385      		ldd r20,Z+11
 1962 0b46 5485      		ldd r21,Z+12
 1963 0b48 8981      		ldd r24,Y+1
 1964 0b4a 9A81      		ldd r25,Y+2
 1965 0b4c FC01      		movw r30,r24
 1966 0b4e 8781      		ldd r24,Z+7
 1967 0b50 9085      		ldd r25,Z+8
 1968 0b52 4817      		cp r20,r24
 1969 0b54 5907      		cpc r21,r25
 1970 0b56 01F4      		brne .L102
 1971               		.loc 2 554 0 is_stmt 0 discriminator 1
 1972 0b58 88E0      		ldi r24,lo8(8)
 1973 0b5a 90E0      		ldi r25,0
 1974 0b5c 00C0      		rjmp .L103
 1975               	.L102:
 1976               		.loc 2 554 0 discriminator 2
 1977 0b5e 80E0      		ldi r24,0
 1978 0b60 90E0      		ldi r25,0
 1979               	.L103:
 1980               		.loc 2 554 0 discriminator 4
 1981 0b62 822B      		or r24,r18
 1982 0b64 932B      		or r25,r19
 1983 0b66 9A87      		std Y+10,r25
 1984 0b68 8987      		std Y+9,r24
 555:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_PANID == header->macDstPanId) ? NWK_IND_OPT_BROADCAST_PAN_ID : 0;
 1985               		.loc 2 555 0 is_stmt 1 discriminator 4
 1986 0b6a 2985      		ldd r18,Y+9
 1987 0b6c 3A85      		ldd r19,Y+10
 1988 0b6e 8981      		ldd r24,Y+1
 1989 0b70 9A81      		ldd r25,Y+2
 1990 0b72 FC01      		movw r30,r24
 1991 0b74 8381      		ldd r24,Z+3
 1992 0b76 9481      		ldd r25,Z+4
 1993 0b78 0196      		adiw r24,1
 1994 0b7a 01F4      		brne .L104
 1995               		.loc 2 555 0 is_stmt 0 discriminator 1
 1996 0b7c 80E1      		ldi r24,lo8(16)
 1997 0b7e 90E0      		ldi r25,0
 1998 0b80 00C0      		rjmp .L105
 1999               	.L104:
 2000               		.loc 2 555 0 discriminator 2
 2001 0b82 80E0      		ldi r24,0
 2002 0b84 90E0      		ldi r25,0
 2003               	.L105:
 2004               		.loc 2 555 0 discriminator 4
 2005 0b86 822B      		or r24,r18
 2006 0b88 932B      		or r25,r19
 2007 0b8a 9A87      		std Y+10,r25
 2008 0b8c 8987      		std Y+9,r24
 556:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 557:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2009               		.loc 2 557 0 is_stmt 1 discriminator 4
 2010 0b8e 8981      		ldd r24,Y+1
 2011 0b90 9A81      		ldd r25,Y+2
 2012 0b92 FC01      		movw r30,r24
 2013 0b94 8785      		ldd r24,Z+15
 2014 0b96 8295      		swap r24
 2015 0b98 8F70      		andi r24,lo8(15)
 2016 0b9a 882F      		mov r24,r24
 2017 0b9c 90E0      		ldi r25,0
 2018 0b9e 0396      		adiw r24,3
 2019 0ba0 880F      		lsl r24
 2020 0ba2 991F      		rol r25
 2021 0ba4 8050      		subi r24,lo8(-(nwkIb))
 2022 0ba6 9040      		sbci r25,hi8(-(nwkIb))
 2023 0ba8 FC01      		movw r30,r24
 2024 0baa 2081      		ld r18,Z
 2025 0bac 3181      		ldd r19,Z+1
 2026 0bae CE01      		movw r24,r28
 2027 0bb0 0396      		adiw r24,3
 2028 0bb2 F901      		movw r30,r18
 2029 0bb4 0995      		icall
 2030               	.L106:
 2031               	/* epilogue start */
 558:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2032               		.loc 2 558 0 discriminator 1
 2033 0bb6 6196      		adiw r28,17
 2034 0bb8 0FB6      		in __tmp_reg__,__SREG__
 2035 0bba F894      		cli
 2036 0bbc DEBF      		out __SP_H__,r29
 2037 0bbe 0FBE      		out __SREG__,__tmp_reg__
 2038 0bc0 CDBF      		out __SP_L__,r28
 2039 0bc2 DF91      		pop r29
 2040 0bc4 CF91      		pop r28
 2041 0bc6 0895      		ret
 2042               		.cfi_endproc
 2043               	.LFE74:
 2046               	nwkRxIndicateBeaconFrame:
 2047               	.LFB75:
 559:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 560:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 561:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 562:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateBeaconFrame(NwkFrame_t *frame)
 563:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2048               		.loc 2 563 0
 2049               		.cfi_startproc
 2050 0bc8 CF93      		push r28
 2051               	.LCFI40:
 2052               		.cfi_def_cfa_offset 3
 2053               		.cfi_offset 28, -2
 2054 0bca DF93      		push r29
 2055               	.LCFI41:
 2056               		.cfi_def_cfa_offset 4
 2057               		.cfi_offset 29, -3
 2058 0bcc CDB7      		in r28,__SP_L__
 2059 0bce DEB7      		in r29,__SP_H__
 2060               	.LCFI42:
 2061               		.cfi_def_cfa_register 28
 2062 0bd0 6197      		sbiw r28,17
 2063               	.LCFI43:
 2064               		.cfi_def_cfa_offset 21
 2065 0bd2 0FB6      		in __tmp_reg__,__SREG__
 2066 0bd4 F894      		cli
 2067 0bd6 DEBF      		out __SP_H__,r29
 2068 0bd8 0FBE      		out __SREG__,__tmp_reg__
 2069 0bda CDBF      		out __SP_L__,r28
 2070               	/* prologue: function */
 2071               	/* frame size = 17 */
 2072               	/* stack size = 19 */
 2073               	.L__stack_usage = 19
 2074 0bdc 998B      		std Y+17,r25
 2075 0bde 888B      		std Y+16,r24
 564:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 2076               		.loc 2 564 0
 2077 0be0 8889      		ldd r24,Y+16
 2078 0be2 9989      		ldd r25,Y+17
 2079 0be4 0296      		adiw r24,2
 2080 0be6 9A83      		std Y+2,r25
 2081 0be8 8983      		std Y+1,r24
 565:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 566:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 567:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2082               		.loc 2 567 0
 2083 0bea 8889      		ldd r24,Y+16
 2084 0bec 9989      		ldd r25,Y+17
 2085 0bee 24E2      		ldi r18,lo8(36)
 2086 0bf0 FC01      		movw r30,r24
 2087 0bf2 2083      		st Z,r18
 568:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 569:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[0]) {
 2088               		.loc 2 569 0
 2089 0bf4 8091 0000 		lds r24,nwkIb+6
 2090 0bf8 9091 0000 		lds r25,nwkIb+6+1
 2091 0bfc 892B      		or r24,r25
 2092 0bfe 01F4      		brne .L108
 570:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2093               		.loc 2 570 0
 2094 0c00 80E0      		ldi r24,0
 2095 0c02 00C0      		rjmp .L110
 2096               	.L108:
 571:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 572:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 573:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = frame->beacon.macSrcAddr;
 2097               		.loc 2 573 0
 2098 0c04 8889      		ldd r24,Y+16
 2099 0c06 9989      		ldd r25,Y+17
 2100 0c08 FC01      		movw r30,r24
 2101 0c0a 8781      		ldd r24,Z+7
 2102 0c0c 9085      		ldd r25,Z+8
 2103 0c0e 9C83      		std Y+4,r25
 2104 0c10 8B83      		std Y+3,r24
 574:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = frame->beacon.macSrcAddr;
 2105               		.loc 2 574 0
 2106 0c12 8889      		ldd r24,Y+16
 2107 0c14 9989      		ldd r25,Y+17
 2108 0c16 FC01      		movw r30,r24
 2109 0c18 8781      		ldd r24,Z+7
 2110 0c1a 9085      		ldd r25,Z+8
 2111 0c1c 9E83      		std Y+6,r25
 2112 0c1e 8D83      		std Y+5,r24
 575:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2113               		.loc 2 575 0
 2114 0c20 1F82      		std Y+7,__zero_reg__
 576:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2115               		.loc 2 576 0
 2116 0c22 1886      		std Y+8,__zero_reg__
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2117               		.loc 2 577 0
 2118 0c24 8889      		ldd r24,Y+16
 2119 0c26 9989      		ldd r25,Y+17
 2120 0c28 8F57      		subi r24,127
 2121 0c2a 9F4F      		sbci r25,-1
 2122 0c2c FC01      		movw r30,r24
 2123 0c2e 8081      		ld r24,Z
 2124 0c30 9181      		ldd r25,Z+1
 2125 0c32 9C87      		std Y+12,r25
 2126 0c34 8B87      		std Y+11,r24
 578:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2127               		.loc 2 578 0
 2128 0c36 8889      		ldd r24,Y+16
 2129 0c38 9989      		ldd r25,Y+17
 2130 0c3a 0E94 0000 		call nwkFramePayloadSize
 2131 0c3e 8D87      		std Y+13,r24
 579:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2132               		.loc 2 579 0
 2133 0c40 8889      		ldd r24,Y+16
 2134 0c42 9989      		ldd r25,Y+17
 2135 0c44 8D57      		subi r24,125
 2136 0c46 9F4F      		sbci r25,-1
 2137 0c48 FC01      		movw r30,r24
 2138 0c4a 8081      		ld r24,Z
 2139 0c4c 8E87      		std Y+14,r24
 580:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2140               		.loc 2 580 0
 2141 0c4e 8889      		ldd r24,Y+16
 2142 0c50 9989      		ldd r25,Y+17
 2143 0c52 8C57      		subi r24,124
 2144 0c54 9F4F      		sbci r25,-1
 2145 0c56 FC01      		movw r30,r24
 2146 0c58 8081      		ld r24,Z
 2147 0c5a 8F87      		std Y+15,r24
 581:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 582:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_BEACON;
 2148               		.loc 2 582 0
 2149 0c5c 80E8      		ldi r24,lo8(-128)
 2150 0c5e 90E0      		ldi r25,0
 2151 0c60 9A87      		std Y+10,r25
 2152 0c62 8987      		std Y+9,r24
 583:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 584:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2153               		.loc 2 584 0
 2154 0c64 8981      		ldd r24,Y+1
 2155 0c66 9A81      		ldd r25,Y+2
 2156 0c68 FC01      		movw r30,r24
 2157 0c6a 8785      		ldd r24,Z+15
 2158 0c6c 8295      		swap r24
 2159 0c6e 8F70      		andi r24,lo8(15)
 2160 0c70 882F      		mov r24,r24
 2161 0c72 90E0      		ldi r25,0
 2162 0c74 0396      		adiw r24,3
 2163 0c76 880F      		lsl r24
 2164 0c78 991F      		rol r25
 2165 0c7a 8050      		subi r24,lo8(-(nwkIb))
 2166 0c7c 9040      		sbci r25,hi8(-(nwkIb))
 2167 0c7e FC01      		movw r30,r24
 2168 0c80 2081      		ld r18,Z
 2169 0c82 3181      		ldd r19,Z+1
 2170 0c84 CE01      		movw r24,r28
 2171 0c86 0396      		adiw r24,3
 2172 0c88 F901      		movw r30,r18
 2173 0c8a 0995      		icall
 2174               	.L110:
 2175               	/* epilogue start */
 585:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2176               		.loc 2 585 0 discriminator 1
 2177 0c8c 6196      		adiw r28,17
 2178 0c8e 0FB6      		in __tmp_reg__,__SREG__
 2179 0c90 F894      		cli
 2180 0c92 DEBF      		out __SP_H__,r29
 2181 0c94 0FBE      		out __SREG__,__tmp_reg__
 2182 0c96 CDBF      		out __SP_L__,r28
 2183 0c98 DF91      		pop r29
 2184 0c9a CF91      		pop r28
 2185 0c9c 0895      		ret
 2186               		.cfi_endproc
 2187               	.LFE75:
 2190               	nwkRxIndicateLLBeaconFrame:
 2191               	.LFB76:
 586:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 587:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 588:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 589:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 590:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLBeaconFrame(NwkFrame_t *frame)
 591:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2192               		.loc 2 591 0
 2193               		.cfi_startproc
 2194 0c9e CF93      		push r28
 2195               	.LCFI44:
 2196               		.cfi_def_cfa_offset 3
 2197               		.cfi_offset 28, -2
 2198 0ca0 DF93      		push r29
 2199               	.LCFI45:
 2200               		.cfi_def_cfa_offset 4
 2201               		.cfi_offset 29, -3
 2202 0ca2 CDB7      		in r28,__SP_L__
 2203 0ca4 DEB7      		in r29,__SP_H__
 2204               	.LCFI46:
 2205               		.cfi_def_cfa_register 28
 2206 0ca6 2F97      		sbiw r28,15
 2207               	.LCFI47:
 2208               		.cfi_def_cfa_offset 19
 2209 0ca8 0FB6      		in __tmp_reg__,__SREG__
 2210 0caa F894      		cli
 2211 0cac DEBF      		out __SP_H__,r29
 2212 0cae 0FBE      		out __SREG__,__tmp_reg__
 2213 0cb0 CDBF      		out __SP_L__,r28
 2214               	/* prologue: function */
 2215               	/* frame size = 15 */
 2216               	/* stack size = 17 */
 2217               	.L__stack_usage = 17
 2218 0cb2 9F87      		std Y+15,r25
 2219 0cb4 8E87      		std Y+14,r24
 592:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 593:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 594:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2220               		.loc 2 594 0
 2221 0cb6 8E85      		ldd r24,Y+14
 2222 0cb8 9F85      		ldd r25,Y+15
 2223 0cba 24E2      		ldi r18,lo8(36)
 2224 0cbc FC01      		movw r30,r24
 2225 0cbe 2083      		st Z,r18
 595:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 596:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_BEACON_ENDPOINT]) {
 2226               		.loc 2 596 0
 2227 0cc0 8091 0000 		lds r24,nwkIb+6
 2228 0cc4 9091 0000 		lds r25,nwkIb+6+1
 2229 0cc8 892B      		or r24,r25
 2230 0cca 01F4      		brne .L112
 597:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2231               		.loc 2 597 0
 2232 0ccc 80E0      		ldi r24,0
 2233 0cce 00C0      		rjmp .L114
 2234               	.L112:
 598:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 599:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Beacon as they are in standart 802.15.4
 600:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 601:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 602:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2235               		.loc 2 602 0
 2236 0cd0 1A82      		std Y+2,__zero_reg__
 2237 0cd2 1982      		std Y+1,__zero_reg__
 603:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2238               		.loc 2 603 0
 2239 0cd4 1C82      		std Y+4,__zero_reg__
 2240 0cd6 1B82      		std Y+3,__zero_reg__
 604:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2241               		.loc 2 604 0
 2242 0cd8 1D82      		std Y+5,__zero_reg__
 605:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2243               		.loc 2 605 0
 2244 0cda 1E82      		std Y+6,__zero_reg__
 606:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 607:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->LLbeacon;
 2245               		.loc 2 607 0
 2246 0cdc 8E85      		ldd r24,Y+14
 2247 0cde 9F85      		ldd r25,Y+15
 2248 0ce0 0296      		adiw r24,2
 2249 0ce2 9A87      		std Y+10,r25
 2250 0ce4 8987      		std Y+9,r24
 608:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2251               		.loc 2 608 0
 2252 0ce6 8E85      		ldd r24,Y+14
 2253 0ce8 9F85      		ldd r25,Y+15
 2254 0cea 0E94 0000 		call nwkFramePayloadSize
 2255 0cee 8B87      		std Y+11,r24
 609:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2256               		.loc 2 609 0
 2257 0cf0 8E85      		ldd r24,Y+14
 2258 0cf2 9F85      		ldd r25,Y+15
 2259 0cf4 8D57      		subi r24,125
 2260 0cf6 9F4F      		sbci r25,-1
 2261 0cf8 FC01      		movw r30,r24
 2262 0cfa 8081      		ld r24,Z
 2263 0cfc 8C87      		std Y+12,r24
 610:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2264               		.loc 2 610 0
 2265 0cfe 8E85      		ldd r24,Y+14
 2266 0d00 9F85      		ldd r25,Y+15
 2267 0d02 8C57      		subi r24,124
 2268 0d04 9F4F      		sbci r25,-1
 2269 0d06 FC01      		movw r30,r24
 2270 0d08 8081      		ld r24,Z
 2271 0d0a 8D87      		std Y+13,r24
 611:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 612:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_BEACON;
 2272               		.loc 2 612 0
 2273 0d0c 80E0      		ldi r24,0
 2274 0d0e 91E0      		ldi r25,lo8(1)
 2275 0d10 9887      		std Y+8,r25
 2276 0d12 8F83      		std Y+7,r24
 613:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 614:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 615:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_BEACON_ENDPOINT](&ind);
 2277               		.loc 2 615 0
 2278 0d14 2091 0000 		lds r18,nwkIb+6
 2279 0d18 3091 0000 		lds r19,nwkIb+6+1
 2280 0d1c CE01      		movw r24,r28
 2281 0d1e 0196      		adiw r24,1
 2282 0d20 F901      		movw r30,r18
 2283 0d22 0995      		icall
 2284               	.L114:
 2285               	/* epilogue start */
 616:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2286               		.loc 2 616 0 discriminator 1
 2287 0d24 2F96      		adiw r28,15
 2288 0d26 0FB6      		in __tmp_reg__,__SREG__
 2289 0d28 F894      		cli
 2290 0d2a DEBF      		out __SP_H__,r29
 2291 0d2c 0FBE      		out __SREG__,__tmp_reg__
 2292 0d2e CDBF      		out __SP_L__,r28
 2293 0d30 DF91      		pop r29
 2294 0d32 CF91      		pop r28
 2295 0d34 0895      		ret
 2296               		.cfi_endproc
 2297               	.LFE76:
 2300               	nwkRxIndicateLLCommandFrame:
 2301               	.LFB77:
 617:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 618:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLCommandFrame(NwkFrame_t *frame)
 619:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2302               		.loc 2 619 0
 2303               		.cfi_startproc
 2304 0d36 CF93      		push r28
 2305               	.LCFI48:
 2306               		.cfi_def_cfa_offset 3
 2307               		.cfi_offset 28, -2
 2308 0d38 DF93      		push r29
 2309               	.LCFI49:
 2310               		.cfi_def_cfa_offset 4
 2311               		.cfi_offset 29, -3
 2312 0d3a CDB7      		in r28,__SP_L__
 2313 0d3c DEB7      		in r29,__SP_H__
 2314               	.LCFI50:
 2315               		.cfi_def_cfa_register 28
 2316 0d3e 2F97      		sbiw r28,15
 2317               	.LCFI51:
 2318               		.cfi_def_cfa_offset 19
 2319 0d40 0FB6      		in __tmp_reg__,__SREG__
 2320 0d42 F894      		cli
 2321 0d44 DEBF      		out __SP_H__,r29
 2322 0d46 0FBE      		out __SREG__,__tmp_reg__
 2323 0d48 CDBF      		out __SP_L__,r28
 2324               	/* prologue: function */
 2325               	/* frame size = 15 */
 2326               	/* stack size = 17 */
 2327               	.L__stack_usage = 17
 2328 0d4a 9F87      		std Y+15,r25
 2329 0d4c 8E87      		std Y+14,r24
 620:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 621:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 622:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 623:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 624:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2330               		.loc 2 624 0
 2331 0d4e 8E85      		ldd r24,Y+14
 2332 0d50 9F85      		ldd r25,Y+15
 2333 0d52 24E2      		ldi r18,lo8(36)
 2334 0d54 FC01      		movw r30,r24
 2335 0d56 2083      		st Z,r18
 625:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 626:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_COMMAND_ENDPOINT]) {
 2336               		.loc 2 626 0
 2337 0d58 8091 0000 		lds r24,nwkIb+12
 2338 0d5c 9091 0000 		lds r25,nwkIb+12+1
 2339 0d60 892B      		or r24,r25
 2340 0d62 01F4      		brne .L116
 627:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2341               		.loc 2 627 0
 2342 0d64 80E0      		ldi r24,0
 2343 0d66 00C0      		rjmp .L118
 2344               	.L116:
 628:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 629:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 630:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 631:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 632:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 633:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2345               		.loc 2 633 0
 2346 0d68 1A82      		std Y+2,__zero_reg__
 2347 0d6a 1982      		std Y+1,__zero_reg__
 634:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2348               		.loc 2 634 0
 2349 0d6c 1C82      		std Y+4,__zero_reg__
 2350 0d6e 1B82      		std Y+3,__zero_reg__
 635:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2351               		.loc 2 635 0
 2352 0d70 1D82      		std Y+5,__zero_reg__
 636:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2353               		.loc 2 636 0
 2354 0d72 1E82      		std Y+6,__zero_reg__
 637:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 638:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 639:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2355               		.loc 2 639 0
 2356 0d74 8E85      		ldd r24,Y+14
 2357 0d76 9F85      		ldd r25,Y+15
 2358 0d78 8F57      		subi r24,127
 2359 0d7a 9F4F      		sbci r25,-1
 2360 0d7c FC01      		movw r30,r24
 2361 0d7e 8081      		ld r24,Z
 2362 0d80 9181      		ldd r25,Z+1
 2363 0d82 9A87      		std Y+10,r25
 2364 0d84 8987      		std Y+9,r24
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2365               		.loc 2 641 0
 2366 0d86 8E85      		ldd r24,Y+14
 2367 0d88 9F85      		ldd r25,Y+15
 2368 0d8a 0E94 0000 		call nwkFramePayloadSize
 2369 0d8e 8B87      		std Y+11,r24
 642:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2370               		.loc 2 642 0
 2371 0d90 8E85      		ldd r24,Y+14
 2372 0d92 9F85      		ldd r25,Y+15
 2373 0d94 8D57      		subi r24,125
 2374 0d96 9F4F      		sbci r25,-1
 2375 0d98 FC01      		movw r30,r24
 2376 0d9a 8081      		ld r24,Z
 2377 0d9c 8C87      		std Y+12,r24
 643:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2378               		.loc 2 643 0
 2379 0d9e 8E85      		ldd r24,Y+14
 2380 0da0 9F85      		ldd r25,Y+15
 2381 0da2 8C57      		subi r24,124
 2382 0da4 9F4F      		sbci r25,-1
 2383 0da6 FC01      		movw r30,r24
 2384 0da8 8081      		ld r24,Z
 2385 0daa 8D87      		std Y+13,r24
 644:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 645:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_MACCOMMAND;
 2386               		.loc 2 645 0
 2387 0dac 80E0      		ldi r24,0
 2388 0dae 92E0      		ldi r25,lo8(2)
 2389 0db0 9887      		std Y+8,r25
 2390 0db2 8F83      		std Y+7,r24
 646:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 647:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_COMMAND_ENDPOINT](&ind);
 2391               		.loc 2 647 0
 2392 0db4 2091 0000 		lds r18,nwkIb+12
 2393 0db8 3091 0000 		lds r19,nwkIb+12+1
 2394 0dbc CE01      		movw r24,r28
 2395 0dbe 0196      		adiw r24,1
 2396 0dc0 F901      		movw r30,r18
 2397 0dc2 0995      		icall
 2398               	.L118:
 2399               	/* epilogue start */
 648:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2400               		.loc 2 648 0 discriminator 1
 2401 0dc4 2F96      		adiw r28,15
 2402 0dc6 0FB6      		in __tmp_reg__,__SREG__
 2403 0dc8 F894      		cli
 2404 0dca DEBF      		out __SP_H__,r29
 2405 0dcc 0FBE      		out __SREG__,__tmp_reg__
 2406 0dce CDBF      		out __SP_L__,r28
 2407 0dd0 DF91      		pop r29
 2408 0dd2 CF91      		pop r28
 2409 0dd4 0895      		ret
 2410               		.cfi_endproc
 2411               	.LFE77:
 2414               	nwkRxIndicateLLDataFrame:
 2415               	.LFB78:
 649:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 650:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLDataFrame(NwkFrame_t *frame)
 651:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {		
 2416               		.loc 2 651 0
 2417               		.cfi_startproc
 2418 0dd6 CF93      		push r28
 2419               	.LCFI52:
 2420               		.cfi_def_cfa_offset 3
 2421               		.cfi_offset 28, -2
 2422 0dd8 DF93      		push r29
 2423               	.LCFI53:
 2424               		.cfi_def_cfa_offset 4
 2425               		.cfi_offset 29, -3
 2426 0dda CDB7      		in r28,__SP_L__
 2427 0ddc DEB7      		in r29,__SP_H__
 2428               	.LCFI54:
 2429               		.cfi_def_cfa_register 28
 2430 0dde 2F97      		sbiw r28,15
 2431               	.LCFI55:
 2432               		.cfi_def_cfa_offset 19
 2433 0de0 0FB6      		in __tmp_reg__,__SREG__
 2434 0de2 F894      		cli
 2435 0de4 DEBF      		out __SP_H__,r29
 2436 0de6 0FBE      		out __SREG__,__tmp_reg__
 2437 0de8 CDBF      		out __SP_L__,r28
 2438               	/* prologue: function */
 2439               	/* frame size = 15 */
 2440               	/* stack size = 17 */
 2441               	.L__stack_usage = 17
 2442 0dea 9F87      		std Y+15,r25
 2443 0dec 8E87      		std Y+14,r24
 652:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 653:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 654:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2444               		.loc 2 654 0
 2445 0dee 8E85      		ldd r24,Y+14
 2446 0df0 9F85      		ldd r25,Y+15
 2447 0df2 24E2      		ldi r18,lo8(36)
 2448 0df4 FC01      		movw r30,r24
 2449 0df6 2083      		st Z,r18
 655:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 656:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_DATA_ENDPOINT]) {
 2450               		.loc 2 656 0
 2451 0df8 8091 0000 		lds r24,nwkIb+8
 2452 0dfc 9091 0000 		lds r25,nwkIb+8+1
 2453 0e00 892B      		or r24,r25
 2454 0e02 01F4      		brne .L120
 657:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2455               		.loc 2 657 0
 2456 0e04 80E0      		ldi r24,0
 2457 0e06 00C0      		rjmp .L122
 2458               	.L120:
 658:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 659:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 660:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 661:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 662:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 663:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2459               		.loc 2 663 0
 2460 0e08 1A82      		std Y+2,__zero_reg__
 2461 0e0a 1982      		std Y+1,__zero_reg__
 664:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2462               		.loc 2 664 0
 2463 0e0c 1C82      		std Y+4,__zero_reg__
 2464 0e0e 1B82      		std Y+3,__zero_reg__
 665:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2465               		.loc 2 665 0
 2466 0e10 1D82      		std Y+5,__zero_reg__
 666:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2467               		.loc 2 666 0
 2468 0e12 1E82      		std Y+6,__zero_reg__
 667:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 669:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2469               		.loc 2 669 0
 2470 0e14 8E85      		ldd r24,Y+14
 2471 0e16 9F85      		ldd r25,Y+15
 2472 0e18 8F57      		subi r24,127
 2473 0e1a 9F4F      		sbci r25,-1
 2474 0e1c FC01      		movw r30,r24
 2475 0e1e 8081      		ld r24,Z
 2476 0e20 9181      		ldd r25,Z+1
 2477 0e22 9A87      		std Y+10,r25
 2478 0e24 8987      		std Y+9,r24
 670:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 671:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2479               		.loc 2 671 0
 2480 0e26 8E85      		ldd r24,Y+14
 2481 0e28 9F85      		ldd r25,Y+15
 2482 0e2a 0E94 0000 		call nwkFramePayloadSize
 2483 0e2e 8B87      		std Y+11,r24
 672:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2484               		.loc 2 672 0
 2485 0e30 8E85      		ldd r24,Y+14
 2486 0e32 9F85      		ldd r25,Y+15
 2487 0e34 8D57      		subi r24,125
 2488 0e36 9F4F      		sbci r25,-1
 2489 0e38 FC01      		movw r30,r24
 2490 0e3a 8081      		ld r24,Z
 2491 0e3c 8C87      		std Y+12,r24
 673:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2492               		.loc 2 673 0
 2493 0e3e 8E85      		ldd r24,Y+14
 2494 0e40 9F85      		ldd r25,Y+15
 2495 0e42 8C57      		subi r24,124
 2496 0e44 9F4F      		sbci r25,-1
 2497 0e46 FC01      		movw r30,r24
 2498 0e48 8081      		ld r24,Z
 2499 0e4a 8D87      		std Y+13,r24
 674:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 675:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_DATA;
 2500               		.loc 2 675 0
 2501 0e4c 80E0      		ldi r24,0
 2502 0e4e 94E0      		ldi r25,lo8(4)
 2503 0e50 9887      		std Y+8,r25
 2504 0e52 8F83      		std Y+7,r24
 676:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 677:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_DATA_ENDPOINT](&ind);
 2505               		.loc 2 677 0
 2506 0e54 2091 0000 		lds r18,nwkIb+8
 2507 0e58 3091 0000 		lds r19,nwkIb+8+1
 2508 0e5c CE01      		movw r24,r28
 2509 0e5e 0196      		adiw r24,1
 2510 0e60 F901      		movw r30,r18
 2511 0e62 0995      		icall
 2512               	.L122:
 2513               	/* epilogue start */
 678:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2514               		.loc 2 678 0 discriminator 1
 2515 0e64 2F96      		adiw r28,15
 2516 0e66 0FB6      		in __tmp_reg__,__SREG__
 2517 0e68 F894      		cli
 2518 0e6a DEBF      		out __SP_H__,r29
 2519 0e6c 0FBE      		out __SREG__,__tmp_reg__
 2520 0e6e CDBF      		out __SP_L__,r28
 2521 0e70 DF91      		pop r29
 2522 0e72 CF91      		pop r28
 2523 0e74 0895      		ret
 2524               		.cfi_endproc
 2525               	.LFE78:
 2528               	nwkRxIndicateLLACKFrame:
 2529               	.LFB79:
 679:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 680:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLACKFrame(NwkFrame_t *frame)
 681:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2530               		.loc 2 681 0
 2531               		.cfi_startproc
 2532 0e76 CF93      		push r28
 2533               	.LCFI56:
 2534               		.cfi_def_cfa_offset 3
 2535               		.cfi_offset 28, -2
 2536 0e78 DF93      		push r29
 2537               	.LCFI57:
 2538               		.cfi_def_cfa_offset 4
 2539               		.cfi_offset 29, -3
 2540 0e7a CDB7      		in r28,__SP_L__
 2541 0e7c DEB7      		in r29,__SP_H__
 2542               	.LCFI58:
 2543               		.cfi_def_cfa_register 28
 2544 0e7e 2F97      		sbiw r28,15
 2545               	.LCFI59:
 2546               		.cfi_def_cfa_offset 19
 2547 0e80 0FB6      		in __tmp_reg__,__SREG__
 2548 0e82 F894      		cli
 2549 0e84 DEBF      		out __SP_H__,r29
 2550 0e86 0FBE      		out __SREG__,__tmp_reg__
 2551 0e88 CDBF      		out __SP_L__,r28
 2552               	/* prologue: function */
 2553               	/* frame size = 15 */
 2554               	/* stack size = 17 */
 2555               	.L__stack_usage = 17
 2556 0e8a 9F87      		std Y+15,r25
 2557 0e8c 8E87      		std Y+14,r24
 682:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 683:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 684:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 685:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2558               		.loc 2 685 0
 2559 0e8e 8E85      		ldd r24,Y+14
 2560 0e90 9F85      		ldd r25,Y+15
 2561 0e92 24E2      		ldi r18,lo8(36)
 2562 0e94 FC01      		movw r30,r24
 2563 0e96 2083      		st Z,r18
 686:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 687:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_ACK_ENDPOINT]) {
 2564               		.loc 2 687 0
 2565 0e98 8091 0000 		lds r24,nwkIb+14
 2566 0e9c 9091 0000 		lds r25,nwkIb+14+1
 2567 0ea0 892B      		or r24,r25
 2568 0ea2 01F4      		brne .L124
 688:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2569               		.loc 2 688 0
 2570 0ea4 80E0      		ldi r24,0
 2571 0ea6 00C0      		rjmp .L126
 2572               	.L124:
 689:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 690:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 691:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* 
 692:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * this informations are not received in a LLDN Command as they are in standart 802.15.4
 693:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 694:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 695:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2573               		.loc 2 695 0
 2574 0ea8 1A82      		std Y+2,__zero_reg__
 2575 0eaa 1982      		std Y+1,__zero_reg__
 696:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2576               		.loc 2 696 0
 2577 0eac 1C82      		std Y+4,__zero_reg__
 2578 0eae 1B82      		std Y+3,__zero_reg__
 697:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2579               		.loc 2 697 0
 2580 0eb0 1D82      		std Y+5,__zero_reg__
 698:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2581               		.loc 2 698 0
 2582 0eb2 1E82      		std Y+6,__zero_reg__
 699:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 700:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data =  frame->payload;
 2583               		.loc 2 700 0
 2584 0eb4 8E85      		ldd r24,Y+14
 2585 0eb6 9F85      		ldd r25,Y+15
 2586 0eb8 8F57      		subi r24,127
 2587 0eba 9F4F      		sbci r25,-1
 2588 0ebc FC01      		movw r30,r24
 2589 0ebe 8081      		ld r24,Z
 2590 0ec0 9181      		ldd r25,Z+1
 2591 0ec2 9A87      		std Y+10,r25
 2592 0ec4 8987      		std Y+9,r24
 701:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2593               		.loc 2 701 0
 2594 0ec6 8E85      		ldd r24,Y+14
 2595 0ec8 9F85      		ldd r25,Y+15
 2596 0eca 0E94 0000 		call nwkFramePayloadSize
 2597 0ece 8B87      		std Y+11,r24
 702:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2598               		.loc 2 702 0
 2599 0ed0 8E85      		ldd r24,Y+14
 2600 0ed2 9F85      		ldd r25,Y+15
 2601 0ed4 8D57      		subi r24,125
 2602 0ed6 9F4F      		sbci r25,-1
 2603 0ed8 FC01      		movw r30,r24
 2604 0eda 8081      		ld r24,Z
 2605 0edc 8C87      		std Y+12,r24
 703:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2606               		.loc 2 703 0
 2607 0ede 8E85      		ldd r24,Y+14
 2608 0ee0 9F85      		ldd r25,Y+15
 2609 0ee2 8C57      		subi r24,124
 2610 0ee4 9F4F      		sbci r25,-1
 2611 0ee6 FC01      		movw r30,r24
 2612 0ee8 8081      		ld r24,Z
 2613 0eea 8D87      		std Y+13,r24
 704:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 705:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_OPT_LLDN_ACK;
 2614               		.loc 2 705 0
 2615 0eec 80E0      		ldi r24,0
 2616 0eee 90E4      		ldi r25,lo8(64)
 2617 0ef0 9887      		std Y+8,r25
 2618 0ef2 8F83      		std Y+7,r24
 706:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 707:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_ACK_ENDPOINT](&ind);
 2619               		.loc 2 707 0
 2620 0ef4 2091 0000 		lds r18,nwkIb+14
 2621 0ef8 3091 0000 		lds r19,nwkIb+14+1
 2622 0efc CE01      		movw r24,r28
 2623 0efe 0196      		adiw r24,1
 2624 0f00 F901      		movw r30,r18
 2625 0f02 0995      		icall
 2626               	.L126:
 2627               	/* epilogue start */
 708:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2628               		.loc 2 708 0 discriminator 1
 2629 0f04 2F96      		adiw r28,15
 2630 0f06 0FB6      		in __tmp_reg__,__SREG__
 2631 0f08 F894      		cli
 2632 0f0a DEBF      		out __SP_H__,r29
 2633 0f0c 0FBE      		out __SREG__,__tmp_reg__
 2634 0f0e CDBF      		out __SP_L__,r28
 2635 0f10 DF91      		pop r29
 2636 0f12 CF91      		pop r28
 2637 0f14 0895      		ret
 2638               		.cfi_endproc
 2639               	.LFE79:
 2642               	nwkRxHandleIndication:
 2643               	.LFB80:
 709:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 710:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 711:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 712:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleIndication(NwkFrame_t *frame)
 713:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2644               		.loc 2 713 0
 2645               		.cfi_startproc
 2646 0f16 CF93      		push r28
 2647               	.LCFI60:
 2648               		.cfi_def_cfa_offset 3
 2649               		.cfi_offset 28, -2
 2650 0f18 DF93      		push r29
 2651               	.LCFI61:
 2652               		.cfi_def_cfa_offset 4
 2653               		.cfi_offset 29, -3
 2654 0f1a 00D0      		rcall .
 2655 0f1c 1F92      		push __zero_reg__
 2656               	.LCFI62:
 2657               		.cfi_def_cfa_offset 7
 2658 0f1e CDB7      		in r28,__SP_L__
 2659 0f20 DEB7      		in r29,__SP_H__
 2660               	.LCFI63:
 2661               		.cfi_def_cfa_register 28
 2662               	/* prologue: function */
 2663               	/* frame size = 3 */
 2664               	/* stack size = 5 */
 2665               	.L__stack_usage = 5
 2666 0f22 9B83      		std Y+3,r25
 2667 0f24 8A83      		std Y+2,r24
 714:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool ack;
 715:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 716:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = 0;
 2668               		.loc 2 716 0
 2669 0f26 1092 0000 		sts nwkRxAckControl,__zero_reg__
 717:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack = nwkRxIndicateDataFrame(frame);
 2670               		.loc 2 717 0
 2671 0f2a 8A81      		ldd r24,Y+2
 2672 0f2c 9B81      		ldd r25,Y+3
 2673 0f2e 0E94 0000 		call nwkRxIndicateDataFrame
 2674 0f32 8983      		std Y+1,r24
 718:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 719:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == frame->header.nwkFcf.ackRequest) {
 2675               		.loc 2 719 0
 2676 0f34 8A81      		ldd r24,Y+2
 2677 0f36 9B81      		ldd r25,Y+3
 2678 0f38 FC01      		movw r30,r24
 2679 0f3a 8385      		ldd r24,Z+11
 2680 0f3c 8170      		andi r24,lo8(1)
 2681 0f3e 8823      		tst r24
 2682 0f40 01F4      		brne .L128
 720:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2683               		.loc 2 720 0
 2684 0f42 1982      		std Y+1,__zero_reg__
 2685               	.L128:
 721:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 722:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == frame->header.macDstAddr &&
 2686               		.loc 2 723 0
 2687 0f44 8A81      		ldd r24,Y+2
 2688 0f46 9B81      		ldd r25,Y+3
 2689 0f48 FC01      		movw r30,r24
 2690 0f4a 8781      		ldd r24,Z+7
 2691 0f4c 9085      		ldd r25,Z+8
 2692 0f4e 0196      		adiw r24,1
 2693 0f50 01F4      		brne .L129
 724:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2694               		.loc 2 724 0 discriminator 1
 2695 0f52 2091 0000 		lds r18,nwkIb
 2696 0f56 3091 0000 		lds r19,nwkIb+1
 2697 0f5a 8A81      		ldd r24,Y+2
 2698 0f5c 9B81      		ldd r25,Y+3
 2699 0f5e FC01      		movw r30,r24
 2700 0f60 8785      		ldd r24,Z+15
 2701 0f62 9089      		ldd r25,Z+16
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2702               		.loc 2 723 0 discriminator 1
 2703 0f64 2817      		cp r18,r24
 2704 0f66 3907      		cpc r19,r25
 2705 0f68 01F4      		brne .L129
 725:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			0 == frame->header.nwkFcf.multicast) {
 2706               		.loc 2 725 0
 2707 0f6a 8A81      		ldd r24,Y+2
 2708 0f6c 9B81      		ldd r25,Y+3
 2709 0f6e FC01      		movw r30,r24
 2710 0f70 8385      		ldd r24,Z+11
 2711 0f72 8870      		andi r24,lo8(8)
 724:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2712               		.loc 2 724 0
 2713 0f74 8823      		tst r24
 2714 0f76 01F4      		brne .L129
 726:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = true;
 2715               		.loc 2 726 0
 2716 0f78 81E0      		ldi r24,lo8(1)
 2717 0f7a 8983      		std Y+1,r24
 2718               	.L129:
 727:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 728:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 729:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == frame->header.macDstPanId) {
 2719               		.loc 2 729 0
 2720 0f7c 8A81      		ldd r24,Y+2
 2721 0f7e 9B81      		ldd r25,Y+3
 2722 0f80 FC01      		movw r30,r24
 2723 0f82 8581      		ldd r24,Z+5
 2724 0f84 9681      		ldd r25,Z+6
 2725 0f86 0196      		adiw r24,1
 2726 0f88 01F4      		brne .L130
 730:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2727               		.loc 2 730 0
 2728 0f8a 1982      		std Y+1,__zero_reg__
 2729               	.L130:
 731:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 732:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 733:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == nwkIb.addr) {
 2730               		.loc 2 733 0
 2731 0f8c 8091 0000 		lds r24,nwkIb
 2732 0f90 9091 0000 		lds r25,nwkIb+1
 2733 0f94 0196      		adiw r24,1
 2734 0f96 01F4      		brne .L131
 734:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2735               		.loc 2 734 0
 2736 0f98 1982      		std Y+1,__zero_reg__
 2737               	.L131:
 735:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 736:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 737:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ack) {
 2738               		.loc 2 737 0
 2739 0f9a 8981      		ldd r24,Y+1
 2740 0f9c 8823      		tst r24
 2741 0f9e 01F0      		breq .L132
 738:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxSendAck(frame);
 2742               		.loc 2 738 0
 2743 0fa0 8A81      		ldd r24,Y+2
 2744 0fa2 9B81      		ldd r25,Y+3
 2745 0fa4 0E94 0000 		call nwkRxSendAck
 2746               	.L132:
 739:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 740:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 741:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2747               		.loc 2 741 0
 2748 0fa8 8A81      		ldd r24,Y+2
 2749 0faa 9B81      		ldd r25,Y+3
 2750 0fac 24E2      		ldi r18,lo8(36)
 2751 0fae FC01      		movw r30,r24
 2752 0fb0 2083      		st Z,r18
 742:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2753               		.loc 2 742 0
 2754 0fb2 0000      		nop
 2755               	/* epilogue start */
 2756 0fb4 0F90      		pop __tmp_reg__
 2757 0fb6 0F90      		pop __tmp_reg__
 2758 0fb8 0F90      		pop __tmp_reg__
 2759 0fba DF91      		pop r29
 2760 0fbc CF91      		pop r28
 2761 0fbe 0895      		ret
 2762               		.cfi_endproc
 2763               	.LFE80:
 2765               	.global	nwkRxTaskHandler
 2767               	nwkRxTaskHandler:
 2768               	.LFB81:
 743:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 744:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 745:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Rx Module task handler
 746:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 747:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxTaskHandler(void)
 748:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2769               		.loc 2 748 0
 2770               		.cfi_startproc
 2771 0fc0 CF93      		push r28
 2772               	.LCFI64:
 2773               		.cfi_def_cfa_offset 3
 2774               		.cfi_offset 28, -2
 2775 0fc2 DF93      		push r29
 2776               	.LCFI65:
 2777               		.cfi_def_cfa_offset 4
 2778               		.cfi_offset 29, -3
 2779 0fc4 00D0      		rcall .
 2780               	.LCFI66:
 2781               		.cfi_def_cfa_offset 6
 2782 0fc6 CDB7      		in r28,__SP_L__
 2783 0fc8 DEB7      		in r29,__SP_H__
 2784               	.LCFI67:
 2785               		.cfi_def_cfa_register 28
 2786               	/* prologue: function */
 2787               	/* frame size = 2 */
 2788               	/* stack size = 4 */
 2789               	.L__stack_usage = 4
 749:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame = NULL;
 2790               		.loc 2 749 0
 2791 0fca 1A82      		std Y+2,__zero_reg__
 2792 0fcc 1982      		std Y+1,__zero_reg__
 750:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 751:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 2793               		.loc 2 751 0
 2794 0fce 00C0      		rjmp .L134
 2795               	.L144:
 752:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2796               		.loc 2 752 0
 2797 0fd0 8981      		ldd r24,Y+1
 2798 0fd2 9A81      		ldd r25,Y+2
 2799 0fd4 FC01      		movw r30,r24
 2800 0fd6 8081      		ld r24,Z
 2801 0fd8 882F      		mov r24,r24
 2802 0fda 90E0      		ldi r25,0
 2803 0fdc 092E      		mov __tmp_reg__,r25
 2804 0fde 000C      		lsl r0
 2805 0fe0 AA0B      		sbc r26,r26
 2806 0fe2 BB0B      		sbc r27,r27
 2807 0fe4 40E2      		ldi r20,lo8(32)
 2808 0fe6 50E0      		ldi r21,0
 2809 0fe8 29E0      		ldi r18,lo8(9)
 2810 0fea 30E0      		ldi r19,0
 2811 0fec 841B      		sub r24,r20
 2812 0fee 950B      		sbc r25,r21
 2813 0ff0 2817      		cp r18,r24
 2814 0ff2 3907      		cpc r19,r25
 2815 0ff4 00F0      		brlo .L134
 2816 0ff6 8050      		subi r24,lo8(-(gs(.L136)))
 2817 0ff8 9040      		sbci r25,hi8(-(gs(.L136)))
 2818 0ffa FC01      		movw r30,r24
 2819 0ffc 0C94 0000 		jmp __tablejump2__
 2820               		.section	.progmem.gcc_sw_table,"a",@progbits
 2821               		.p2align	1
 2822               	.L136:
 2823 0000 0000      		.word gs(.L135)
 2824 0002 0000      		.word gs(.L134)
 2825 0004 0000      		.word gs(.L137)
 2826 0006 0000      		.word gs(.L134)
 2827 0008 0000      		.word gs(.L138)
 2828 000a 0000      		.word gs(.L139)
 2829 000c 0000      		.word gs(.L140)
 2830 000e 0000      		.word gs(.L141)
 2831 0010 0000      		.word gs(.L142)
 2832 0012 0000      		.word gs(.L143)
 2833               		.text
 2834               	.L135:
 753:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_RECEIVED:
 754:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 755:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleReceivedFrame(frame);
 2835               		.loc 2 755 0
 2836 1000 8981      		ldd r24,Y+1
 2837 1002 9A81      		ldd r25,Y+2
 2838 1004 0E94 0000 		call nwkRxHandleReceivedFrame
 756:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 757:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2839               		.loc 2 757 0
 2840 1008 00C0      		rjmp .L134
 2841               	.L137:
 758:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 759:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 760:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_DECRYPT:
 761:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 762:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkSecurityProcess(frame, false);
 763:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 764:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 765:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 766:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 767:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_INDICATE:
 768:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 769:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleIndication(frame);
 2842               		.loc 2 769 0
 2843 100a 8981      		ldd r24,Y+1
 2844 100c 9A81      		ldd r25,Y+2
 2845 100e 0E94 0000 		call nwkRxHandleIndication
 770:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 771:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2846               		.loc 2 771 0
 2847 1012 00C0      		rjmp .L134
 2848               	.L138:
 772:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 773:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 774:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_ROUTE:
 775:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 776:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRouteFrame(frame);
 777:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 778:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 779:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 780:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 781:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_FINISH:
 782:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 783:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkFrameFree(frame);
 2849               		.loc 2 783 0
 2850 1014 8981      		ldd r24,Y+1
 2851 1016 9A81      		ldd r25,Y+2
 2852 1018 0E94 0000 		call nwkFrameFree
 784:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 785:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2853               		.loc 2 785 0
 2854 101c 00C0      		rjmp .L134
 2855               	.L139:
 786:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 787:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_BEACON:
 788:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 789:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateBeaconFrame(frame);
 2856               		.loc 2 789 0
 2857 101e 8981      		ldd r24,Y+1
 2858 1020 9A81      		ldd r25,Y+2
 2859 1022 0E94 0000 		call nwkRxIndicateBeaconFrame
 790:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 791:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2860               		.loc 2 791 0
 2861 1026 00C0      		rjmp .L134
 2862               	.L140:
 792:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 793:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 794:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLBEACON:
 795:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 796:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLBeaconFrame(frame);
 2863               		.loc 2 796 0
 2864 1028 8981      		ldd r24,Y+1
 2865 102a 9A81      		ldd r25,Y+2
 2866 102c 0E94 0000 		call nwkRxIndicateLLBeaconFrame
 797:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 798:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2867               		.loc 2 798 0
 2868 1030 00C0      		rjmp .L134
 2869               	.L141:
 799:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 800:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLCOMMAND:
 801:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 802:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLCommandFrame(frame);
 2870               		.loc 2 802 0
 2871 1032 8981      		ldd r24,Y+1
 2872 1034 9A81      		ldd r25,Y+2
 2873 1036 0E94 0000 		call nwkRxIndicateLLCommandFrame
 803:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 804:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2874               		.loc 2 804 0
 2875 103a 00C0      		rjmp .L134
 2876               	.L143:
 805:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 806:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLDATA:
 807:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 808:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLDataFrame(frame);
 2877               		.loc 2 808 0
 2878 103c 8981      		ldd r24,Y+1
 2879 103e 9A81      		ldd r25,Y+2
 2880 1040 0E94 0000 		call nwkRxIndicateLLDataFrame
 2881               	.L142:
 809:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 810:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 811:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLACKFRAME:
 812:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 813:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLACKFrame(frame);
 2882               		.loc 2 813 0
 2883 1044 8981      		ldd r24,Y+1
 2884 1046 9A81      		ldd r25,Y+2
 2885 1048 0E94 0000 		call nwkRxIndicateLLACKFrame
 814:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 815:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2886               		.loc 2 815 0
 2887 104c 0000      		nop
 2888               	.L134:
 751:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2889               		.loc 2 751 0
 2890 104e 8981      		ldd r24,Y+1
 2891 1050 9A81      		ldd r25,Y+2
 2892 1052 0E94 0000 		call nwkFrameNext
 2893 1056 9A83      		std Y+2,r25
 2894 1058 8983      		std Y+1,r24
 2895 105a 8981      		ldd r24,Y+1
 2896 105c 9A81      		ldd r25,Y+2
 2897 105e 892B      		or r24,r25
 2898 1060 01F0      		breq .+2
 2899 1062 00C0      		rjmp .L144
 816:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 817:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 818:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 819:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2900               		.loc 2 819 0
 2901 1064 0000      		nop
 2902               	/* epilogue start */
 2903 1066 0F90      		pop __tmp_reg__
 2904 1068 0F90      		pop __tmp_reg__
 2905 106a DF91      		pop r29
 2906 106c CF91      		pop r28
 2907 106e 0895      		ret
 2908               		.cfi_endproc
 2909               	.LFE81:
 2911               	.Letext0:
 2912               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 2913               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 2914               		.file 5 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 2915               		.file 6 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 2916               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwkDataReq.h"
 2917               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 2918               		.file 9 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
 2919               		.file 10 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkRx.c
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:7      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 n
                            *COM*:00000004 tTS
                            *COM*:00000002 macLLDNnumTimeSlots
                            *COM*:00000002 macLLDNnumUplinkTS
                            *COM*:00000002 macLLDNRetransmitTS
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:17     .text:00000000 nwkFramePayloadSize
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:79     .bss.nwkRxDuplicateRejectionTable:00000000 nwkRxDuplicateRejectionTable
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:84     .bss.nwkRxAckControl:00000000 nwkRxAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:89     .bss.nwkRxDuplicateRejectionTimer:00000000 nwkRxDuplicateRejectionTimer
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:94     .text:00000044 nwkRxInit
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:791    .text:00000454 nwkRxDuplicateRejectionTimerHandler
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:1189   .text:00000696 nwkRxSeriveDataInd
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:181    .text:000000b6 PHY_DataInd
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:581    .text:0000032a nwkRxSendAck
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:753    .text:00000438 NWK_SetAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:906    .text:000004ee nwkRxRejectDuplicate
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:1257   .text:000006e0 nwkRxHandleReceivedFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:1707   .text:000009ba nwkRxIndicateDataFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:2046   .text:00000bc8 nwkRxIndicateBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:2190   .text:00000c9e nwkRxIndicateLLBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:2300   .text:00000d36 nwkRxIndicateLLCommandFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:2414   .text:00000dd6 nwkRxIndicateLLDataFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:2528   .text:00000e76 nwkRxIndicateLLACKFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:2642   .text:00000f16 nwkRxHandleIndication
C:\Users\GUILHE~1\AppData\Local\Temp\cc0fUC7J.s:2767   .text:00000fc0 nwkRxTaskHandler

UNDEFINED SYMBOLS
NWK_OpenEndpoint
nwkFrameAlloc
nwkFrameAlloc_LLDN
memcpy
nwkFrameCommandInit
nwkTxFrame
SYS_TimerStart
nwkTxAckReceived
nwkIb
NWK_GroupIsMember
nwkTxBroadcastFrame
__tablejump2__
nwkFrameFree
nwkFrameNext
__do_clear_bss
