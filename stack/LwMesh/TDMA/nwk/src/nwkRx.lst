   1               		.file	"nwkRx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	n,1,1
  12               		.section	.bss.tTS,"aw",@nobits
  15               	tTS:
  16 0000 0000 0000 		.zero	4
  17               		.text
  19               	nwkFramePayloadSize:
  20               	.LFB65:
  21               		.file 1 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
   1:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /**
   2:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \file nwkFrame.h
   3:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   4:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \brief Frame buffers management interface
   5:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   6:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   8:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  10:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  13:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  16:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  20:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  23:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  26:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  38:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  40:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  41:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  42:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  43:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*
  44:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  46:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  48:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  49:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #ifndef _NWK_FRAME_H_
  50:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define _NWK_FRAME_H_
  51:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  52:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Includes ---------------------------------------------------------------*/
  53:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include <stdint.h>
  54:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include "compiler.h"
  55:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  56:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Definitions ------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define NWK_FRAME_MAX_PAYLOAD_SIZE   127
  58:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  59:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Types ------------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_SET(1)
  61:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameHeader_t {
  62:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  63:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  64:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstPanId;
  65:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstAddr;
  66:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  67:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  68:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  69:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t ackRequest : 1;
  70:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t security   : 1;
  71:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t linkLocal  : 1;
  72:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t multicast  : 1;
  73:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t beacon     : 1;
  74:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved   : 3;
  75:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} nwkFcf;
  76:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t nwkSeq;
  77:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkSrcAddr;
  78:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkDstAddr;
  79:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  80:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkSrcEndpoint : 4;
  81:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkDstEndpoint : 4;
  82:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
  83:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameHeader_t;
  84:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  85:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeader_t {
  86:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  87:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  88:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcPanId;
  89:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  90:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
  91:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
  92:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t beaconOrder			: 4;
  93:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t superframeOrder		: 4;
  94:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t finalCAPslot			: 4;
  95:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t BatteryLifeExtension	: 1;
  96:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t Reserved				: 1;
  97:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t PANCoordinator			: 1;
  98:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t AssociationPermit		: 1;
  99:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSFS;
 100:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macGTS;
 101:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macPending;
 102:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeader_t;
 103:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 104:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 105:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeaderLLDN_t {
 106:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/******* MHR *****/
 107:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// struct
 108:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// {
 109:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameType 				: 3;
 110:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SecurityEnabled 	: 1;
 111:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameVersion			: 1;
 112:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t ackRequest				: 1;
 113:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SubFrameType			: 2;
 114:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// } macFcf;
 115:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 116:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 117:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 118:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 119:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 120:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 121:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 122:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 123:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 124:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 125:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/****** MAC Payload *******/
 126:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 127:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 128:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txState 			: 3;
 129:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txDir 				: 1;
 130:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved			: 1;
 131:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t numBaseMgmtTimeslots: 3; // number of managment time slots
 132:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 										// uplink and downlink must be equal
 133:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} Flags;
 134:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 135:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t PanId;
 136:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t confSeqNumber;
 137:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t TimeSlotSize;
 138:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 139:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 140:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeaderLLDN_t;
 141:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 142:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameGeneralHeaderLLDN_t {
 143:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 144:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 145:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 146:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 147:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 148:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 149:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 150:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 151:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 152:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 153:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameGeneralHeaderLLDN_t;
 154:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 155:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 156:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameMulticastHeader_t {
 157:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nonMemberRadius    : 4;
 158:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxNonMemberRadius : 4;
 159:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t memberRadius       : 4;
 160:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxMemberRadius    : 4;
 161:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameMulticastHeader_t;
 162:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 163:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct NwkFrame_t {
 164:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t state;
 165:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t size;
 166:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 167:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 168:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameHeader_t header;
 169:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeader_t beacon;
 170:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeaderLLDN_t LLbeacon;
 171:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameGeneralHeaderLLDN_t LLgeneral;
 172:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t data[NWK_FRAME_MAX_PAYLOAD_SIZE];
 173:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 174:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 175:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t *payload;
 176:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 177:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 178:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 179:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t lqi;
 180:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			int8_t rssi;
 181:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} rx;
 182:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 183:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 184:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t status;
 185:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint16_t timeout;
 186:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t control;
 187:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			void (*confirm)(struct NwkFrame_t *frame);
 188:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} tx;
 189:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 190:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrame_t;
 191:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_RESET()
 192:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Prototypes -------------------------------------------------------------*/
 193:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameInit(void);
 194:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc(void);
 195:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameFree(NwkFrame_t *frame);
 196:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);
 197:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameCommandInit(NwkFrame_t *frame);
 198:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 199:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame);
 200:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Implementations --------------------------------------------------------*/
 201:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 202:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*************************************************************************//**
 203:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** *****************************************************************************/
 204:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** static inline uint8_t nwkFramePayloadSize(NwkFrame_t *frame)
 205:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** {
  22               		.loc 1 205 0
  23               		.cfi_startproc
  24 0000 CF93      		push r28
  25               	.LCFI0:
  26               		.cfi_def_cfa_offset 3
  27               		.cfi_offset 28, -2
  28 0002 DF93      		push r29
  29               	.LCFI1:
  30               		.cfi_def_cfa_offset 4
  31               		.cfi_offset 29, -3
  32 0004 00D0      		rcall .
  33               	.LCFI2:
  34               		.cfi_def_cfa_offset 6
  35 0006 CDB7      		in r28,__SP_L__
  36 0008 DEB7      		in r29,__SP_H__
  37               	.LCFI3:
  38               		.cfi_def_cfa_register 28
  39               	/* prologue: function */
  40               	/* frame size = 2 */
  41               	/* stack size = 4 */
  42               	.L__stack_usage = 4
  43 000a 9A83      		std Y+2,r25
  44 000c 8983      		std Y+1,r24
 206:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	return frame->size - (frame->payload - frame->data);
  45               		.loc 1 206 0
  46 000e 8981      		ldd r24,Y+1
  47 0010 9A81      		ldd r25,Y+2
  48 0012 FC01      		movw r30,r24
  49 0014 4181      		ldd r20,Z+1
  50 0016 8981      		ldd r24,Y+1
  51 0018 9A81      		ldd r25,Y+2
  52 001a 8F57      		subi r24,127
  53 001c 9F4F      		sbci r25,-1
  54 001e FC01      		movw r30,r24
  55 0020 8081      		ld r24,Z
  56 0022 9181      		ldd r25,Z+1
  57 0024 9C01      		movw r18,r24
  58 0026 8981      		ldd r24,Y+1
  59 0028 9A81      		ldd r25,Y+2
  60 002a 0296      		adiw r24,2
  61 002c B901      		movw r22,r18
  62 002e 681B      		sub r22,r24
  63 0030 790B      		sbc r23,r25
  64 0032 CB01      		movw r24,r22
  65 0034 742F      		mov r23,r20
  66 0036 781B      		sub r23,r24
  67 0038 872F      		mov r24,r23
  68               	/* epilogue start */
 207:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** }
  69               		.loc 1 207 0
  70 003a 0F90      		pop __tmp_reg__
  71 003c 0F90      		pop __tmp_reg__
  72 003e DF91      		pop r29
  73 0040 CF91      		pop r28
  74 0042 0895      		ret
  75               		.cfi_endproc
  76               	.LFE65:
  78               		.section	.bss.nwkRxDuplicateRejectionTable,"aw",@nobits
  81               	nwkRxDuplicateRejectionTable:
  82 0000 0000 0000 		.zero	250
  82      0000 0000 
  82      0000 0000 
  82      0000 0000 
  82      0000 0000 
  83               		.section	.bss.nwkRxAckControl,"aw",@nobits
  86               	nwkRxAckControl:
  87 0000 00        		.zero	1
  88               		.section	.bss.nwkRxDuplicateRejectionTimer,"aw",@nobits
  91               	nwkRxDuplicateRejectionTimer:
  92 0000 0000 0000 		.zero	13
  92      0000 0000 
  92      0000 0000 
  92      00
  93               		.text
  94               	.global	nwkRxInit
  96               	nwkRxInit:
  97               	.LFB66:
  98               		.file 2 "../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \file nwkRx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \brief Receive routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkGroup.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRoute.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkCommand.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkSecurity.h"
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRouteDiscovery.h"
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Definitions ------------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL   100 /* ms */
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define DUPLICATE_REJECTION_TTL	\
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	((NWK_DUPLICATE_REJECTION_TTL /	\
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL) + 1)
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_SERVICE_ENDPOINT_ID    0
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Types ------------------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** enum {
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_RECEIVED = 0x20,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_DECRYPT  = 0x21,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_INDICATE = 0x22,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_ROUTE    = 0x23,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_FINISH   = 0x24,
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_BEACON   = 0x25,
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLBEACON 	= 0x26,
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLCOMMAND 	= 0x27,
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLACKFRAME = 0x28,
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** };
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** typedef struct NwkDuplicateRejectionEntry_t {
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint16_t src;
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t seq;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t mask;
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t ttl;
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** } NwkDuplicateRejectionEntry_t;
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Prototypes -------------------------------------------------------------*/
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer);
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind);
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Variables --------------------------------------------------------------*/
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static NwkDuplicateRejectionEntry_t nwkRxDuplicateRejectionTable[
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DUPLICATE_REJECTION_TABLE_SIZE];
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static uint8_t nwkRxAckControl;
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static SYS_Timer_t nwkRxDuplicateRejectionTimer;
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Implementations --------------------------------------------------------*/
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Initializes the Rx module
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxInit(void)
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
  99               		.loc 2 109 0
 100               		.cfi_startproc
 101 0044 CF93      		push r28
 102               	.LCFI4:
 103               		.cfi_def_cfa_offset 3
 104               		.cfi_offset 28, -2
 105 0046 DF93      		push r29
 106               	.LCFI5:
 107               		.cfi_def_cfa_offset 4
 108               		.cfi_offset 29, -3
 109 0048 1F92      		push __zero_reg__
 110               	.LCFI6:
 111               		.cfi_def_cfa_offset 5
 112 004a CDB7      		in r28,__SP_L__
 113 004c DEB7      		in r29,__SP_H__
 114               	.LCFI7:
 115               		.cfi_def_cfa_register 28
 116               	/* prologue: function */
 117               	/* frame size = 1 */
 118               	/* stack size = 3 */
 119               	.L__stack_usage = 3
 120               	.LBB2:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 121               		.loc 2 110 0
 122 004e 1982      		std Y+1,__zero_reg__
 123 0050 00C0      		rjmp .L4
 124               	.L5:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxDuplicateRejectionTable[i].ttl = 0;
 125               		.loc 2 111 0 discriminator 3
 126 0052 8981      		ldd r24,Y+1
 127 0054 282F      		mov r18,r24
 128 0056 30E0      		ldi r19,0
 129 0058 C901      		movw r24,r18
 130 005a 880F      		lsl r24
 131 005c 991F      		rol r25
 132 005e 880F      		lsl r24
 133 0060 991F      		rol r25
 134 0062 820F      		add r24,r18
 135 0064 931F      		adc r25,r19
 136 0066 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 137 0068 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 138 006a FC01      		movw r30,r24
 139 006c 1082      		st Z,__zero_reg__
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 140               		.loc 2 110 0 discriminator 3
 141 006e 8981      		ldd r24,Y+1
 142 0070 8F5F      		subi r24,lo8(-(1))
 143 0072 8983      		std Y+1,r24
 144               	.L4:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 145               		.loc 2 110 0 is_stmt 0 discriminator 1
 146 0074 8981      		ldd r24,Y+1
 147 0076 8233      		cpi r24,lo8(50)
 148 0078 00F0      		brlo .L5
 149               	.LBE2:
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.interval
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL;
 150               		.loc 2 115 0 is_stmt 1
 151 007a 84E6      		ldi r24,lo8(100)
 152 007c 90E0      		ldi r25,0
 153 007e A0E0      		ldi r26,0
 154 0080 B0E0      		ldi r27,0
 155 0082 8093 0000 		sts nwkRxDuplicateRejectionTimer+6,r24
 156 0086 9093 0000 		sts nwkRxDuplicateRejectionTimer+6+1,r25
 157 008a A093 0000 		sts nwkRxDuplicateRejectionTimer+6+2,r26
 158 008e B093 0000 		sts nwkRxDuplicateRejectionTimer+6+3,r27
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE;
 159               		.loc 2 116 0
 160 0092 1092 0000 		sts nwkRxDuplicateRejectionTimer+10,__zero_reg__
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.handler
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= nwkRxDuplicateRejectionTimerHandler;
 161               		.loc 2 118 0
 162 0096 80E0      		ldi r24,lo8(gs(nwkRxDuplicateRejectionTimerHandler))
 163 0098 90E0      		ldi r25,hi8(gs(nwkRxDuplicateRejectionTimerHandler))
 164 009a 9093 0000 		sts nwkRxDuplicateRejectionTimer+11+1,r25
 165 009e 8093 0000 		sts nwkRxDuplicateRejectionTimer+11,r24
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_OpenEndpoint(NWK_SERVICE_ENDPOINT_ID, nwkRxSeriveDataInd);
 166               		.loc 2 120 0
 167 00a2 60E0      		ldi r22,lo8(gs(nwkRxSeriveDataInd))
 168 00a4 70E0      		ldi r23,hi8(gs(nwkRxSeriveDataInd))
 169 00a6 80E0      		ldi r24,0
 170 00a8 0E94 0000 		call NWK_OpenEndpoint
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 171               		.loc 2 121 0
 172 00ac 0000      		nop
 173               	/* epilogue start */
 174 00ae 0F90      		pop __tmp_reg__
 175 00b0 DF91      		pop r29
 176 00b2 CF91      		pop r28
 177 00b4 0895      		ret
 178               		.cfi_endproc
 179               	.LFE66:
 181               		.weak	PHY_DataInd
 183               	PHY_DataInd:
 184               	.LFB67:
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void __attribute__((weak)) PHY_DataInd(PHY_DataInd_t *ind)
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 185               		.loc 2 126 0
 186               		.cfi_startproc
 187 00b6 CF93      		push r28
 188               	.LCFI8:
 189               		.cfi_def_cfa_offset 3
 190               		.cfi_offset 28, -2
 191 00b8 DF93      		push r29
 192               	.LCFI9:
 193               		.cfi_def_cfa_offset 4
 194               		.cfi_offset 29, -3
 195 00ba 00D0      		rcall .
 196 00bc 00D0      		rcall .
 197               	.LCFI10:
 198               		.cfi_def_cfa_offset 8
 199 00be CDB7      		in r28,__SP_L__
 200 00c0 DEB7      		in r29,__SP_H__
 201               	.LCFI11:
 202               		.cfi_def_cfa_register 28
 203               	/* prologue: function */
 204               	/* frame size = 4 */
 205               	/* stack size = 6 */
 206               	.L__stack_usage = 6
 207 00c2 9C83      		std Y+4,r25
 208 00c4 8B83      		std Y+3,r24
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame;
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-Beacon frame
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(0x0c == ind->data[0])
 209               		.loc 2 130 0
 210 00c6 8B81      		ldd r24,Y+3
 211 00c8 9C81      		ldd r25,Y+4
 212 00ca FC01      		movw r30,r24
 213 00cc 8081      		ld r24,Z
 214 00ce 9181      		ldd r25,Z+1
 215 00d0 FC01      		movw r30,r24
 216 00d2 8081      		ld r24,Z
 217 00d4 8C30      		cpi r24,lo8(12)
 218 00d6 01F4      		brne .L7
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameBeaconHeaderLLDN_t))
 219               		.loc 2 132 0
 220 00d8 8B81      		ldd r24,Y+3
 221 00da 9C81      		ldd r25,Y+4
 222 00dc FC01      		movw r30,r24
 223 00de 8281      		ldd r24,Z+2
 224 00e0 8730      		cpi r24,lo8(7)
 225 00e2 00F0      		brlo .+2
 226 00e4 00C0      		rjmp .L8
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 227               		.loc 2 134 0
 228 00e6 00C0      		rjmp .L6
 229               	.L7:
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-MAC Command frame
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0xcc == ind->data[0] || 0x8c == ind->data[0])
 230               		.loc 2 138 0
 231 00e8 8B81      		ldd r24,Y+3
 232 00ea 9C81      		ldd r25,Y+4
 233 00ec FC01      		movw r30,r24
 234 00ee 8081      		ld r24,Z
 235 00f0 9181      		ldd r25,Z+1
 236 00f2 FC01      		movw r30,r24
 237 00f4 8081      		ld r24,Z
 238 00f6 8C3C      		cpi r24,lo8(-52)
 239 00f8 01F0      		breq .L10
 240               		.loc 2 138 0 is_stmt 0 discriminator 1
 241 00fa 8B81      		ldd r24,Y+3
 242 00fc 9C81      		ldd r25,Y+4
 243 00fe FC01      		movw r30,r24
 244 0100 8081      		ld r24,Z
 245 0102 9181      		ldd r25,Z+1
 246 0104 FC01      		movw r30,r24
 247 0106 8081      		ld r24,Z
 248 0108 8C38      		cpi r24,lo8(-116)
 249 010a 01F4      		brne .L11
 250               	.L10:
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameGeneralHeaderLLDN_t))
 251               		.loc 2 140 0 is_stmt 1
 252 010c 8B81      		ldd r24,Y+3
 253 010e 9C81      		ldd r25,Y+4
 254 0110 FC01      		movw r30,r24
 255 0112 8281      		ldd r24,Z+2
 256 0114 8330      		cpi r24,lo8(3)
 257 0116 00F0      		brlo .+2
 258 0118 00C0      		rjmp .L8
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 259               		.loc 2 142 0
 260 011a 00C0      		rjmp .L6
 261               	.L11:
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x88 == ind->data[1])
 262               		.loc 2 145 0
 263 011c 8B81      		ldd r24,Y+3
 264 011e 9C81      		ldd r25,Y+4
 265 0120 FC01      		movw r30,r24
 266 0122 8081      		ld r24,Z
 267 0124 9181      		ldd r25,Z+1
 268 0126 0196      		adiw r24,1
 269 0128 FC01      		movw r30,r24
 270 012a 8081      		ld r24,Z
 271 012c 8838      		cpi r24,lo8(-120)
 272 012e 01F4      		brne .L13
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x61 != ind->data[0] && 0x41 != ind->data[0]) || ind->size < sizeof(NwkFrameHeader_t))
 273               		.loc 2 147 0
 274 0130 8B81      		ldd r24,Y+3
 275 0132 9C81      		ldd r25,Y+4
 276 0134 FC01      		movw r30,r24
 277 0136 8081      		ld r24,Z
 278 0138 9181      		ldd r25,Z+1
 279 013a FC01      		movw r30,r24
 280 013c 8081      		ld r24,Z
 281 013e 8136      		cpi r24,lo8(97)
 282 0140 01F0      		breq .L14
 283               		.loc 2 147 0 is_stmt 0 discriminator 1
 284 0142 8B81      		ldd r24,Y+3
 285 0144 9C81      		ldd r25,Y+4
 286 0146 FC01      		movw r30,r24
 287 0148 8081      		ld r24,Z
 288 014a 9181      		ldd r25,Z+1
 289 014c FC01      		movw r30,r24
 290 014e 8081      		ld r24,Z
 291 0150 8134      		cpi r24,lo8(65)
 292 0152 01F0      		breq .+2
 293 0154 00C0      		rjmp .L28
 294               	.L14:
 295               		.loc 2 147 0 discriminator 3
 296 0156 8B81      		ldd r24,Y+3
 297 0158 9C81      		ldd r25,Y+4
 298 015a FC01      		movw r30,r24
 299 015c 8281      		ldd r24,Z+2
 300 015e 8031      		cpi r24,lo8(16)
 301 0160 00F4      		brsh .L8
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 302               		.loc 2 149 0 is_stmt 1
 303 0162 00C0      		rjmp .L28
 304               	.L13:
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x80 == ind->data[1])
 305               		.loc 2 152 0
 306 0164 8B81      		ldd r24,Y+3
 307 0166 9C81      		ldd r25,Y+4
 308 0168 FC01      		movw r30,r24
 309 016a 8081      		ld r24,Z
 310 016c 9181      		ldd r25,Z+1
 311 016e 0196      		adiw r24,1
 312 0170 FC01      		movw r30,r24
 313 0172 8081      		ld r24,Z
 314 0174 8038      		cpi r24,lo8(-128)
 315 0176 01F0      		breq .+2
 316 0178 00C0      		rjmp .L29
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x00 != ind->data[0]) || ind->size < (sizeof(NwkFrameBeaconHeader_t)))
 317               		.loc 2 154 0
 318 017a 8B81      		ldd r24,Y+3
 319 017c 9C81      		ldd r25,Y+4
 320 017e FC01      		movw r30,r24
 321 0180 8081      		ld r24,Z
 322 0182 9181      		ldd r25,Z+1
 323 0184 FC01      		movw r30,r24
 324 0186 8081      		ld r24,Z
 325 0188 8823      		tst r24
 326 018a 01F0      		breq .+2
 327 018c 00C0      		rjmp .L30
 328               		.loc 2 154 0 is_stmt 0 discriminator 1
 329 018e 8B81      		ldd r24,Y+3
 330 0190 9C81      		ldd r25,Y+4
 331 0192 FC01      		movw r30,r24
 332 0194 8281      		ldd r24,Z+2
 333 0196 8B30      		cpi r24,lo8(11)
 334 0198 00F4      		brsh .+2
 335 019a 00C0      		rjmp .L30
 336               	.L8:
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(ind->data[1] == 0x88 || ind->data[1] == 0x80)
 337               		.loc 2 164 0 is_stmt 1
 338 019c 8B81      		ldd r24,Y+3
 339 019e 9C81      		ldd r25,Y+4
 340 01a0 FC01      		movw r30,r24
 341 01a2 8081      		ld r24,Z
 342 01a4 9181      		ldd r25,Z+1
 343 01a6 0196      		adiw r24,1
 344 01a8 FC01      		movw r30,r24
 345 01aa 8081      		ld r24,Z
 346 01ac 8838      		cpi r24,lo8(-120)
 347 01ae 01F0      		breq .L18
 348               		.loc 2 164 0 is_stmt 0 discriminator 1
 349 01b0 8B81      		ldd r24,Y+3
 350 01b2 9C81      		ldd r25,Y+4
 351 01b4 FC01      		movw r30,r24
 352 01b6 8081      		ld r24,Z
 353 01b8 9181      		ldd r25,Z+1
 354 01ba 0196      		adiw r24,1
 355 01bc FC01      		movw r30,r24
 356 01be 8081      		ld r24,Z
 357 01c0 8038      		cpi r24,lo8(-128)
 358 01c2 01F4      		brne .L19
 359               	.L18:
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc())) {
 360               		.loc 2 166 0 is_stmt 1
 361 01c4 0E94 0000 		call nwkFrameAlloc
 362 01c8 9A83      		std Y+2,r25
 363 01ca 8983      		std Y+1,r24
 364 01cc 8981      		ldd r24,Y+1
 365 01ce 9A81      		ldd r25,Y+2
 366 01d0 892B      		or r24,r25
 367 01d2 01F4      		brne .+2
 368 01d4 00C0      		rjmp .L31
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame received is NwkFrameHeader change state to Receveid
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is a 802.15.4 beacon change state to Beacon
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = ((0x88 == ind->data[1]) ? NWK_RX_STATE_RECEIVED : NWK_RX_STATE_BEACON);
 369               		.loc 2 171 0
 370 01d6 8B81      		ldd r24,Y+3
 371 01d8 9C81      		ldd r25,Y+4
 372 01da FC01      		movw r30,r24
 373 01dc 8081      		ld r24,Z
 374 01de 9181      		ldd r25,Z+1
 375 01e0 0196      		adiw r24,1
 376 01e2 FC01      		movw r30,r24
 377 01e4 8081      		ld r24,Z
 378 01e6 8838      		cpi r24,lo8(-120)
 379 01e8 01F4      		brne .L21
 380               		.loc 2 171 0 is_stmt 0 discriminator 1
 381 01ea 20E2      		ldi r18,lo8(32)
 382 01ec 00C0      		rjmp .L22
 383               	.L21:
 384               		.loc 2 171 0 discriminator 2
 385 01ee 25E2      		ldi r18,lo8(37)
 386               	.L22:
 387               		.loc 2 171 0 discriminator 4
 388 01f0 8981      		ldd r24,Y+1
 389 01f2 9A81      		ldd r25,Y+2
 390 01f4 FC01      		movw r30,r24
 391 01f6 2083      		st Z,r18
 392 01f8 00C0      		rjmp .L23
 393               	.L19:
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// allocate frame buffer according to received frame
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(ind->data[0] == 0x0c)
 394               		.loc 2 174 0 is_stmt 1
 395 01fa 8B81      		ldd r24,Y+3
 396 01fc 9C81      		ldd r25,Y+4
 397 01fe FC01      		movw r30,r24
 398 0200 8081      		ld r24,Z
 399 0202 9181      		ldd r25,Z+1
 400 0204 FC01      		movw r30,r24
 401 0206 8081      		ld r24,Z
 402 0208 8C30      		cpi r24,lo8(12)
 403 020a 01F4      		brne .L24
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-Beacon frame
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(true))){
 404               		.loc 2 177 0
 405 020c 81E0      		ldi r24,lo8(1)
 406 020e 0E94 0000 		call nwkFrameAlloc_LLDN
 407 0212 9A83      		std Y+2,r25
 408 0214 8983      		std Y+1,r24
 409 0216 8981      		ldd r24,Y+1
 410 0218 9A81      		ldd r25,Y+2
 411 021a 892B      		or r24,r25
 412 021c 01F4      		brne .+2
 413 021e 00C0      		rjmp .L32
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-Beacon change state to LLBEACON
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLBEACON;
 414               		.loc 2 181 0
 415 0220 8981      		ldd r24,Y+1
 416 0222 9A81      		ldd r25,Y+2
 417 0224 26E2      		ldi r18,lo8(38)
 418 0226 FC01      		movw r30,r24
 419 0228 2083      		st Z,r18
 420 022a 00C0      		rjmp .L23
 421               	.L24:
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-MAC command or LL-Data frame
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(false))){
 422               		.loc 2 186 0
 423 022c 80E0      		ldi r24,0
 424 022e 0E94 0000 		call nwkFrameAlloc_LLDN
 425 0232 9A83      		std Y+2,r25
 426 0234 8983      		std Y+1,r24
 427 0236 8981      		ldd r24,Y+1
 428 0238 9A81      		ldd r25,Y+2
 429 023a 892B      		or r24,r25
 430 023c 01F4      		brne .+2
 431 023e 00C0      		rjmp .L33
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-AckFrame change state to LLACKFRAME
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-MACComand change state to LLCOMMAND
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->data[0] == 0x8c) 
 432               		.loc 2 191 0
 433 0240 8B81      		ldd r24,Y+3
 434 0242 9C81      		ldd r25,Y+4
 435 0244 FC01      		movw r30,r24
 436 0246 8081      		ld r24,Z
 437 0248 9181      		ldd r25,Z+1
 438 024a FC01      		movw r30,r24
 439 024c 8081      		ld r24,Z
 440 024e 8C38      		cpi r24,lo8(-116)
 441 0250 01F4      		brne .L27
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLACKFRAME;
 442               		.loc 2 192 0
 443 0252 8981      		ldd r24,Y+1
 444 0254 9A81      		ldd r25,Y+2
 445 0256 28E2      		ldi r18,lo8(40)
 446 0258 FC01      		movw r30,r24
 447 025a 2083      		st Z,r18
 448 025c 00C0      		rjmp .L23
 449               	.L27:
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else 
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLCOMMAND;
 450               		.loc 2 194 0
 451 025e 8981      		ldd r24,Y+1
 452 0260 9A81      		ldd r25,Y+2
 453 0262 27E2      		ldi r18,lo8(39)
 454 0264 FC01      		movw r30,r24
 455 0266 2083      		st Z,r18
 456               	.L23:
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size = ind->size;
 457               		.loc 2 197 0
 458 0268 8B81      		ldd r24,Y+3
 459 026a 9C81      		ldd r25,Y+4
 460 026c FC01      		movw r30,r24
 461 026e 2281      		ldd r18,Z+2
 462 0270 8981      		ldd r24,Y+1
 463 0272 9A81      		ldd r25,Y+2
 464 0274 FC01      		movw r30,r24
 465 0276 2183      		std Z+1,r18
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.lqi = ind->lqi;
 466               		.loc 2 198 0
 467 0278 8B81      		ldd r24,Y+3
 468 027a 9C81      		ldd r25,Y+4
 469 027c FC01      		movw r30,r24
 470 027e 2381      		ldd r18,Z+3
 471 0280 8981      		ldd r24,Y+1
 472 0282 9A81      		ldd r25,Y+2
 473 0284 8D57      		subi r24,125
 474 0286 9F4F      		sbci r25,-1
 475 0288 FC01      		movw r30,r24
 476 028a 2083      		st Z,r18
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.rssi = ind->rssi;
 477               		.loc 2 199 0
 478 028c 8B81      		ldd r24,Y+3
 479 028e 9C81      		ldd r25,Y+4
 480 0290 FC01      		movw r30,r24
 481 0292 2481      		ldd r18,Z+4
 482 0294 8981      		ldd r24,Y+1
 483 0296 9A81      		ldd r25,Y+2
 484 0298 8C57      		subi r24,124
 485 029a 9F4F      		sbci r25,-1
 486 029c FC01      		movw r30,r24
 487 029e 2083      		st Z,r18
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	memcpy(frame->data, ind->data, ind->size);
 488               		.loc 2 200 0
 489 02a0 8B81      		ldd r24,Y+3
 490 02a2 9C81      		ldd r25,Y+4
 491 02a4 FC01      		movw r30,r24
 492 02a6 8281      		ldd r24,Z+2
 493 02a8 482F      		mov r20,r24
 494 02aa 50E0      		ldi r21,0
 495 02ac 8B81      		ldd r24,Y+3
 496 02ae 9C81      		ldd r25,Y+4
 497 02b0 FC01      		movw r30,r24
 498 02b2 2081      		ld r18,Z
 499 02b4 3181      		ldd r19,Z+1
 500 02b6 8981      		ldd r24,Y+1
 501 02b8 9A81      		ldd r25,Y+2
 502 02ba 0296      		adiw r24,2
 503 02bc B901      		movw r22,r18
 504 02be 0E94 0000 		call memcpy
 505 02c2 00C0      		rjmp .L6
 506               	.L28:
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 507               		.loc 2 149 0
 508 02c4 0000      		nop
 509 02c6 00C0      		rjmp .L6
 510               	.L29:
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 511               		.loc 2 161 0
 512 02c8 0000      		nop
 513 02ca 00C0      		rjmp .L6
 514               	.L30:
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 515               		.loc 2 156 0
 516 02cc 0000      		nop
 517 02ce 00C0      		rjmp .L6
 518               	.L31:
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 519               		.loc 2 167 0
 520 02d0 0000      		nop
 521 02d2 00C0      		rjmp .L6
 522               	.L32:
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 523               		.loc 2 178 0
 524 02d4 0000      		nop
 525 02d6 00C0      		rjmp .L6
 526               	.L33:
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 527               		.loc 2 187 0
 528 02d8 0000      		nop
 529               	.L6:
 530               	/* epilogue start */
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 531               		.loc 2 201 0
 532 02da 0F90      		pop __tmp_reg__
 533 02dc 0F90      		pop __tmp_reg__
 534 02de 0F90      		pop __tmp_reg__
 535 02e0 0F90      		pop __tmp_reg__
 536 02e2 DF91      		pop r29
 537 02e4 CF91      		pop r28
 538 02e6 0895      		ret
 539               		.cfi_endproc
 540               	.LFE67:
 543               	nwkRxSendAck:
 544               	.LFB68:
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxSendAck(NwkFrame_t *frame)
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 545               		.loc 2 206 0
 546               		.cfi_startproc
 547 02e8 CF93      		push r28
 548               	.LCFI12:
 549               		.cfi_def_cfa_offset 3
 550               		.cfi_offset 28, -2
 551 02ea DF93      		push r29
 552               	.LCFI13:
 553               		.cfi_def_cfa_offset 4
 554               		.cfi_offset 29, -3
 555 02ec 00D0      		rcall .
 556 02ee 00D0      		rcall .
 557 02f0 00D0      		rcall .
 558               	.LCFI14:
 559               		.cfi_def_cfa_offset 10
 560 02f2 CDB7      		in r28,__SP_L__
 561 02f4 DEB7      		in r29,__SP_H__
 562               	.LCFI15:
 563               		.cfi_def_cfa_register 28
 564               	/* prologue: function */
 565               	/* frame size = 6 */
 566               	/* stack size = 8 */
 567               	.L__stack_usage = 8
 568 02f6 9E83      		std Y+6,r25
 569 02f8 8D83      		std Y+5,r24
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *ack;
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkCommandAck_t *command;
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (ack = nwkFrameAlloc())) {
 570               		.loc 2 210 0
 571 02fa 0E94 0000 		call nwkFrameAlloc
 572 02fe 9A83      		std Y+2,r25
 573 0300 8983      		std Y+1,r24
 574 0302 8981      		ldd r24,Y+1
 575 0304 9A81      		ldd r25,Y+2
 576 0306 892B      		or r24,r25
 577 0308 01F4      		brne .+2
 578 030a 00C0      		rjmp .L37
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size += sizeof(NwkFrameHeader_t);
 579               		.loc 2 214 0
 580 030c 8D81      		ldd r24,Y+5
 581 030e 9E81      		ldd r25,Y+6
 582 0310 FC01      		movw r30,r24
 583 0312 8181      		ldd r24,Z+1
 584 0314 20E1      		ldi r18,lo8(16)
 585 0316 280F      		add r18,r24
 586 0318 8D81      		ldd r24,Y+5
 587 031a 9E81      		ldd r25,Y+6
 588 031c FC01      		movw r30,r24
 589 031e 2183      		std Z+1,r18
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->payload += sizeof(NwkFrameHeader_t);
 590               		.loc 2 215 0
 591 0320 8D81      		ldd r24,Y+5
 592 0322 9E81      		ldd r25,Y+6
 593 0324 8F57      		subi r24,127
 594 0326 9F4F      		sbci r25,-1
 595 0328 FC01      		movw r30,r24
 596 032a 8081      		ld r24,Z
 597 032c 9181      		ldd r25,Z+1
 598 032e 9C01      		movw r18,r24
 599 0330 205F      		subi r18,-16
 600 0332 3F4F      		sbci r19,-1
 601 0334 8D81      		ldd r24,Y+5
 602 0336 9E81      		ldd r25,Y+6
 603 0338 8F57      		subi r24,127
 604 033a 9F4F      		sbci r25,-1
 605 033c FC01      		movw r30,r24
 606 033e 3183      		std Z+1,r19
 607 0340 2083      		st Z,r18
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkFrameCommandInit(ack);
 608               		.loc 2 217 0
 609 0342 8981      		ldd r24,Y+1
 610 0344 9A81      		ldd r25,Y+2
 611 0346 0E94 0000 		call nwkFrameCommandInit
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->size += sizeof(NwkCommandAck_t);
 612               		.loc 2 219 0
 613 034a 8981      		ldd r24,Y+1
 614 034c 9A81      		ldd r25,Y+2
 615 034e FC01      		movw r30,r24
 616 0350 8181      		ldd r24,Z+1
 617 0352 23E0      		ldi r18,lo8(3)
 618 0354 280F      		add r18,r24
 619 0356 8981      		ldd r24,Y+1
 620 0358 9A81      		ldd r25,Y+2
 621 035a FC01      		movw r30,r24
 622 035c 2183      		std Z+1,r18
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->tx.confirm = NULL;
 623               		.loc 2 220 0
 624 035e 8981      		ldd r24,Y+1
 625 0360 9A81      		ldd r25,Y+2
 626 0362 8957      		subi r24,121
 627 0364 9F4F      		sbci r25,-1
 628 0366 FC01      		movw r30,r24
 629 0368 1182      		std Z+1,__zero_reg__
 630 036a 1082      		st Z,__zero_reg__
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkFcf.security = frame->header.nwkFcf.security;
 631               		.loc 2 222 0
 632 036c 8D81      		ldd r24,Y+5
 633 036e 9E81      		ldd r25,Y+6
 634 0370 FC01      		movw r30,r24
 635 0372 8385      		ldd r24,Z+11
 636 0374 81FB      		bst r24,1
 637 0376 2227      		clr r18
 638 0378 20F9      		bld r18,0
 639 037a 8981      		ldd r24,Y+1
 640 037c 9A81      		ldd r25,Y+2
 641 037e 2170      		andi r18,lo8(1)
 642 0380 220F      		lsl r18
 643 0382 FC01      		movw r30,r24
 644 0384 3385      		ldd r19,Z+11
 645 0386 3D7F      		andi r19,lo8(-3)
 646 0388 232B      		or r18,r19
 647 038a FC01      		movw r30,r24
 648 038c 2387      		std Z+11,r18
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 649               		.loc 2 223 0
 650 038e 8D81      		ldd r24,Y+5
 651 0390 9E81      		ldd r25,Y+6
 652 0392 FC01      		movw r30,r24
 653 0394 2585      		ldd r18,Z+13
 654 0396 3685      		ldd r19,Z+14
 655 0398 8981      		ldd r24,Y+1
 656 039a 9A81      		ldd r25,Y+2
 657 039c FC01      		movw r30,r24
 658 039e 308B      		std Z+16,r19
 659 03a0 2787      		std Z+15,r18
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command = (NwkCommandAck_t *)ack->payload;
 660               		.loc 2 225 0
 661 03a2 8981      		ldd r24,Y+1
 662 03a4 9A81      		ldd r25,Y+2
 663 03a6 8F57      		subi r24,127
 664 03a8 9F4F      		sbci r25,-1
 665 03aa FC01      		movw r30,r24
 666 03ac 8081      		ld r24,Z
 667 03ae 9181      		ldd r25,Z+1
 668 03b0 9C83      		std Y+4,r25
 669 03b2 8B83      		std Y+3,r24
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->id = NWK_COMMAND_ACK;
 670               		.loc 2 226 0
 671 03b4 8B81      		ldd r24,Y+3
 672 03b6 9C81      		ldd r25,Y+4
 673 03b8 FC01      		movw r30,r24
 674 03ba 1082      		st Z,__zero_reg__
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->control = nwkRxAckControl;
 675               		.loc 2 227 0
 676 03bc 2091 0000 		lds r18,nwkRxAckControl
 677 03c0 8B81      		ldd r24,Y+3
 678 03c2 9C81      		ldd r25,Y+4
 679 03c4 FC01      		movw r30,r24
 680 03c6 2283      		std Z+2,r18
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->seq = frame->header.nwkSeq;
 681               		.loc 2 228 0
 682 03c8 8D81      		ldd r24,Y+5
 683 03ca 9E81      		ldd r25,Y+6
 684 03cc FC01      		movw r30,r24
 685 03ce 2485      		ldd r18,Z+12
 686 03d0 8B81      		ldd r24,Y+3
 687 03d2 9C81      		ldd r25,Y+4
 688 03d4 FC01      		movw r30,r24
 689 03d6 2183      		std Z+1,r18
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkTxFrame(ack);
 690               		.loc 2 230 0
 691 03d8 8981      		ldd r24,Y+1
 692 03da 9A81      		ldd r25,Y+2
 693 03dc 0E94 0000 		call nwkTxFrame
 694 03e0 00C0      		rjmp .L34
 695               	.L37:
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 696               		.loc 2 211 0
 697 03e2 0000      		nop
 698               	.L34:
 699               	/* epilogue start */
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 700               		.loc 2 231 0
 701 03e4 2696      		adiw r28,6
 702 03e6 0FB6      		in __tmp_reg__,__SREG__
 703 03e8 F894      		cli
 704 03ea DEBF      		out __SP_H__,r29
 705 03ec 0FBE      		out __SREG__,__tmp_reg__
 706 03ee CDBF      		out __SP_L__,r28
 707 03f0 DF91      		pop r29
 708 03f2 CF91      		pop r28
 709 03f4 0895      		ret
 710               		.cfi_endproc
 711               	.LFE68:
 713               	.global	NWK_SetAckControl
 715               	NWK_SetAckControl:
 716               	.LFB69:
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void NWK_SetAckControl(uint8_t control)
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 717               		.loc 2 236 0
 718               		.cfi_startproc
 719 03f6 CF93      		push r28
 720               	.LCFI16:
 721               		.cfi_def_cfa_offset 3
 722               		.cfi_offset 28, -2
 723 03f8 DF93      		push r29
 724               	.LCFI17:
 725               		.cfi_def_cfa_offset 4
 726               		.cfi_offset 29, -3
 727 03fa 1F92      		push __zero_reg__
 728               	.LCFI18:
 729               		.cfi_def_cfa_offset 5
 730 03fc CDB7      		in r28,__SP_L__
 731 03fe DEB7      		in r29,__SP_H__
 732               	.LCFI19:
 733               		.cfi_def_cfa_register 28
 734               	/* prologue: function */
 735               	/* frame size = 1 */
 736               	/* stack size = 3 */
 737               	.L__stack_usage = 3
 738 0400 8983      		std Y+1,r24
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = control;
 739               		.loc 2 237 0
 740 0402 8981      		ldd r24,Y+1
 741 0404 8093 0000 		sts nwkRxAckControl,r24
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 742               		.loc 2 238 0
 743 0408 0000      		nop
 744               	/* epilogue start */
 745 040a 0F90      		pop __tmp_reg__
 746 040c DF91      		pop r29
 747 040e CF91      		pop r28
 748 0410 0895      		ret
 749               		.cfi_endproc
 750               	.LFE69:
 753               	nwkRxDuplicateRejectionTimerHandler:
 754               	.LFB70:
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxDecryptConf(NwkFrame_t *frame, bool status)
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (status) {
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_INDICATE;
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else {
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_FINISH;
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer)
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 755               		.loc 2 258 0
 756               		.cfi_startproc
 757 0412 CF93      		push r28
 758               	.LCFI20:
 759               		.cfi_def_cfa_offset 3
 760               		.cfi_offset 28, -2
 761 0414 DF93      		push r29
 762               	.LCFI21:
 763               		.cfi_def_cfa_offset 4
 764               		.cfi_offset 29, -3
 765 0416 00D0      		rcall .
 766 0418 00D0      		rcall .
 767               	.LCFI22:
 768               		.cfi_def_cfa_offset 8
 769 041a CDB7      		in r28,__SP_L__
 770 041c DEB7      		in r29,__SP_H__
 771               	.LCFI23:
 772               		.cfi_def_cfa_register 28
 773               	/* prologue: function */
 774               	/* frame size = 4 */
 775               	/* stack size = 6 */
 776               	.L__stack_usage = 6
 777 041e 9C83      		std Y+4,r25
 778 0420 8B83      		std Y+3,r24
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool restart = false;
 779               		.loc 2 259 0
 780 0422 1982      		std Y+1,__zero_reg__
 781               	.LBB3:
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 782               		.loc 2 261 0
 783 0424 1A82      		std Y+2,__zero_reg__
 784 0426 00C0      		rjmp .L40
 785               	.L42:
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 786               		.loc 2 262 0
 787 0428 8A81      		ldd r24,Y+2
 788 042a 282F      		mov r18,r24
 789 042c 30E0      		ldi r19,0
 790 042e C901      		movw r24,r18
 791 0430 880F      		lsl r24
 792 0432 991F      		rol r25
 793 0434 880F      		lsl r24
 794 0436 991F      		rol r25
 795 0438 820F      		add r24,r18
 796 043a 931F      		adc r25,r19
 797 043c 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 798 043e 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 799 0440 FC01      		movw r30,r24
 800 0442 8081      		ld r24,Z
 801 0444 8823      		tst r24
 802 0446 01F0      		breq .L41
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxDuplicateRejectionTable[i].ttl--;
 803               		.loc 2 263 0
 804 0448 8A81      		ldd r24,Y+2
 805 044a 282F      		mov r18,r24
 806 044c 30E0      		ldi r19,0
 807 044e C901      		movw r24,r18
 808 0450 880F      		lsl r24
 809 0452 991F      		rol r25
 810 0454 880F      		lsl r24
 811 0456 991F      		rol r25
 812 0458 820F      		add r24,r18
 813 045a 931F      		adc r25,r19
 814 045c 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 815 045e 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 816 0460 FC01      		movw r30,r24
 817 0462 8081      		ld r24,Z
 818 0464 4FEF      		ldi r20,lo8(-1)
 819 0466 480F      		add r20,r24
 820 0468 C901      		movw r24,r18
 821 046a 880F      		lsl r24
 822 046c 991F      		rol r25
 823 046e 880F      		lsl r24
 824 0470 991F      		rol r25
 825 0472 820F      		add r24,r18
 826 0474 931F      		adc r25,r19
 827 0476 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 828 0478 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 829 047a FC01      		movw r30,r24
 830 047c 4083      		st Z,r20
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			restart = true;
 831               		.loc 2 264 0
 832 047e 81E0      		ldi r24,lo8(1)
 833 0480 8983      		std Y+1,r24
 834               	.L41:
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 835               		.loc 2 261 0 discriminator 2
 836 0482 8A81      		ldd r24,Y+2
 837 0484 8F5F      		subi r24,lo8(-(1))
 838 0486 8A83      		std Y+2,r24
 839               	.L40:
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 840               		.loc 2 261 0 is_stmt 0 discriminator 1
 841 0488 8A81      		ldd r24,Y+2
 842 048a 8233      		cpi r24,lo8(50)
 843 048c 00F0      		brlo .L42
 844               	.LBE3:
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (restart) {
 845               		.loc 2 268 0 is_stmt 1
 846 048e 8981      		ldd r24,Y+1
 847 0490 8823      		tst r24
 848 0492 01F0      		breq .L44
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		SYS_TimerStart(timer);
 849               		.loc 2 269 0
 850 0494 8B81      		ldd r24,Y+3
 851 0496 9C81      		ldd r25,Y+4
 852 0498 0E94 0000 		call SYS_TimerStart
 853               	.L44:
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 854               		.loc 2 271 0
 855 049c 0000      		nop
 856               	/* epilogue start */
 857 049e 0F90      		pop __tmp_reg__
 858 04a0 0F90      		pop __tmp_reg__
 859 04a2 0F90      		pop __tmp_reg__
 860 04a4 0F90      		pop __tmp_reg__
 861 04a6 DF91      		pop r29
 862 04a8 CF91      		pop r28
 863 04aa 0895      		ret
 864               		.cfi_endproc
 865               	.LFE70:
 868               	nwkRxRejectDuplicate:
 869               	.LFB71:
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxRejectDuplicate(NwkFrameHeader_t *header)
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 870               		.loc 2 276 0
 871               		.cfi_startproc
 872 04ac CF93      		push r28
 873               	.LCFI24:
 874               		.cfi_def_cfa_offset 3
 875               		.cfi_offset 28, -2
 876 04ae DF93      		push r29
 877               	.LCFI25:
 878               		.cfi_def_cfa_offset 4
 879               		.cfi_offset 29, -3
 880 04b0 CDB7      		in r28,__SP_L__
 881 04b2 DEB7      		in r29,__SP_H__
 882               	.LCFI26:
 883               		.cfi_def_cfa_register 28
 884 04b4 2997      		sbiw r28,9
 885               	.LCFI27:
 886               		.cfi_def_cfa_offset 13
 887 04b6 0FB6      		in __tmp_reg__,__SREG__
 888 04b8 F894      		cli
 889 04ba DEBF      		out __SP_H__,r29
 890 04bc 0FBE      		out __SREG__,__tmp_reg__
 891 04be CDBF      		out __SP_L__,r28
 892               	/* prologue: function */
 893               	/* frame size = 9 */
 894               	/* stack size = 11 */
 895               	.L__stack_usage = 11
 896 04c0 9987      		std Y+9,r25
 897 04c2 8887      		std Y+8,r24
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *entry;
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *freeEntry = NULL;
 898               		.loc 2 278 0
 899 04c4 1A82      		std Y+2,__zero_reg__
 900 04c6 1982      		std Y+1,__zero_reg__
 901               	.LBB4:
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 902               		.loc 2 280 0
 903 04c8 1B82      		std Y+3,__zero_reg__
 904 04ca 00C0      		rjmp .L46
 905               	.L52:
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 906               		.loc 2 281 0
 907 04cc 8B81      		ldd r24,Y+3
 908 04ce 282F      		mov r18,r24
 909 04d0 30E0      		ldi r19,0
 910 04d2 C901      		movw r24,r18
 911 04d4 880F      		lsl r24
 912 04d6 991F      		rol r25
 913 04d8 880F      		lsl r24
 914 04da 991F      		rol r25
 915 04dc 820F      		add r24,r18
 916 04de 931F      		adc r25,r19
 917 04e0 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable))
 918 04e2 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable))
 919 04e4 9D83      		std Y+5,r25
 920 04e6 8C83      		std Y+4,r24
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (entry->ttl && header->nwkSrcAddr == entry->src) {
 921               		.loc 2 283 0
 922 04e8 8C81      		ldd r24,Y+4
 923 04ea 9D81      		ldd r25,Y+5
 924 04ec FC01      		movw r30,r24
 925 04ee 8481      		ldd r24,Z+4
 926 04f0 8823      		tst r24
 927 04f2 01F4      		brne .+2
 928 04f4 00C0      		rjmp .L47
 929               		.loc 2 283 0 is_stmt 0 discriminator 1
 930 04f6 8885      		ldd r24,Y+8
 931 04f8 9985      		ldd r25,Y+9
 932 04fa FC01      		movw r30,r24
 933 04fc 2385      		ldd r18,Z+11
 934 04fe 3485      		ldd r19,Z+12
 935 0500 8C81      		ldd r24,Y+4
 936 0502 9D81      		ldd r25,Y+5
 937 0504 FC01      		movw r30,r24
 938 0506 8081      		ld r24,Z
 939 0508 9181      		ldd r25,Z+1
 940 050a 2817      		cp r18,r24
 941 050c 3907      		cpc r19,r25
 942 050e 01F0      		breq .+2
 943 0510 00C0      		rjmp .L47
 944               	.LBB5:
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			uint8_t diff = (int8_t)entry->seq - header->nwkSeq;
 945               		.loc 2 284 0 is_stmt 1
 946 0512 8C81      		ldd r24,Y+4
 947 0514 9D81      		ldd r25,Y+5
 948 0516 FC01      		movw r30,r24
 949 0518 2281      		ldd r18,Z+2
 950 051a 8885      		ldd r24,Y+8
 951 051c 9985      		ldd r25,Y+9
 952 051e FC01      		movw r30,r24
 953 0520 8285      		ldd r24,Z+10
 954 0522 F22F      		mov r31,r18
 955 0524 F81B      		sub r31,r24
 956 0526 8F2F      		mov r24,r31
 957 0528 8E83      		std Y+6,r24
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (diff < 8) {
 958               		.loc 2 286 0
 959 052a 8E81      		ldd r24,Y+6
 960 052c 8830      		cpi r24,lo8(8)
 961 052e 00F4      		brsh .L48
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				if (entry->mask & (1 << diff)) {
 962               		.loc 2 287 0
 963 0530 8C81      		ldd r24,Y+4
 964 0532 9D81      		ldd r25,Y+5
 965 0534 FC01      		movw r30,r24
 966 0536 8381      		ldd r24,Z+3
 967 0538 882F      		mov r24,r24
 968 053a 90E0      		ldi r25,0
 969 053c 2E81      		ldd r18,Y+6
 970 053e 222F      		mov r18,r18
 971 0540 30E0      		ldi r19,0
 972 0542 00C0      		rjmp 2f
 973               		1:
 974 0544 9595      		asr r25
 975 0546 8795      		ror r24
 976               		2:
 977 0548 2A95      		dec r18
 978 054a 02F4      		brpl 1b
 979 054c 8170      		andi r24,1
 980 054e 9927      		clr r25
 981 0550 892B      		or r24,r25
 982 0552 01F0      		breq .L49
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#ifdef NWK_ENABLE_ROUTING
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					if (nwkIb.addr == header->macDstAddr) {
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 						nwkRouteRemove(
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkDstAddr,
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkFcf.multicast);
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					}
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#endif
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					return true;
 983               		.loc 2 296 0
 984 0554 81E0      		ldi r24,lo8(1)
 985 0556 00C0      		rjmp .L50
 986               	.L49:
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				}
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask |= (1 << diff);
 987               		.loc 2 299 0
 988 0558 8C81      		ldd r24,Y+4
 989 055a 9D81      		ldd r25,Y+5
 990 055c FC01      		movw r30,r24
 991 055e 8381      		ldd r24,Z+3
 992 0560 482F      		mov r20,r24
 993 0562 8E81      		ldd r24,Y+6
 994 0564 282F      		mov r18,r24
 995 0566 30E0      		ldi r19,0
 996 0568 81E0      		ldi r24,lo8(1)
 997 056a 90E0      		ldi r25,0
 998 056c 00C0      		rjmp 2f
 999               		1:
 1000 056e 880F      		lsl r24
 1001 0570 991F      		rol r25
 1002               		2:
 1003 0572 2A95      		dec r18
 1004 0574 02F4      		brpl 1b
 1005 0576 842B      		or r24,r20
 1006 0578 282F      		mov r18,r24
 1007 057a 8C81      		ldd r24,Y+4
 1008 057c 9D81      		ldd r25,Y+5
 1009 057e FC01      		movw r30,r24
 1010 0580 2383      		std Z+3,r18
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1011               		.loc 2 300 0
 1012 0582 80E0      		ldi r24,0
 1013 0584 00C0      		rjmp .L50
 1014               	.L48:
 1015               	.LBB6:
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				uint8_t shift = -(int8_t)diff;
 1016               		.loc 2 302 0
 1017 0586 8E81      		ldd r24,Y+6
 1018 0588 8195      		neg r24
 1019 058a 8F83      		std Y+7,r24
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->seq = header->nwkSeq;
 1020               		.loc 2 304 0
 1021 058c 8885      		ldd r24,Y+8
 1022 058e 9985      		ldd r25,Y+9
 1023 0590 FC01      		movw r30,r24
 1024 0592 2285      		ldd r18,Z+10
 1025 0594 8C81      		ldd r24,Y+4
 1026 0596 9D81      		ldd r25,Y+5
 1027 0598 FC01      		movw r30,r24
 1028 059a 2283      		std Z+2,r18
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask = (entry->mask << shift) | 1;
 1029               		.loc 2 305 0
 1030 059c 8C81      		ldd r24,Y+4
 1031 059e 9D81      		ldd r25,Y+5
 1032 05a0 FC01      		movw r30,r24
 1033 05a2 8381      		ldd r24,Z+3
 1034 05a4 882F      		mov r24,r24
 1035 05a6 90E0      		ldi r25,0
 1036 05a8 2F81      		ldd r18,Y+7
 1037 05aa 222F      		mov r18,r18
 1038 05ac 30E0      		ldi r19,0
 1039 05ae 00C0      		rjmp 2f
 1040               		1:
 1041 05b0 880F      		lsl r24
 1042 05b2 991F      		rol r25
 1043               		2:
 1044 05b4 2A95      		dec r18
 1045 05b6 02F4      		brpl 1b
 1046 05b8 8160      		ori r24,lo8(1)
 1047 05ba 282F      		mov r18,r24
 1048 05bc 8C81      		ldd r24,Y+4
 1049 05be 9D81      		ldd r25,Y+5
 1050 05c0 FC01      		movw r30,r24
 1051 05c2 2383      		std Z+3,r18
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->ttl = DUPLICATE_REJECTION_TTL;
 1052               		.loc 2 306 0
 1053 05c4 8C81      		ldd r24,Y+4
 1054 05c6 9D81      		ldd r25,Y+5
 1055 05c8 25E1      		ldi r18,lo8(21)
 1056 05ca FC01      		movw r30,r24
 1057 05cc 2483      		std Z+4,r18
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1058               		.loc 2 307 0
 1059 05ce 80E0      		ldi r24,0
 1060 05d0 00C0      		rjmp .L50
 1061               	.L47:
 1062               	.LBE6:
 1063               	.LBE5:
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (0 == entry->ttl) {
 1064               		.loc 2 311 0
 1065 05d2 8C81      		ldd r24,Y+4
 1066 05d4 9D81      		ldd r25,Y+5
 1067 05d6 FC01      		movw r30,r24
 1068 05d8 8481      		ldd r24,Z+4
 1069 05da 8823      		tst r24
 1070 05dc 01F4      		brne .L51
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			freeEntry = entry;
 1071               		.loc 2 312 0
 1072 05de 8C81      		ldd r24,Y+4
 1073 05e0 9D81      		ldd r25,Y+5
 1074 05e2 9A83      		std Y+2,r25
 1075 05e4 8983      		std Y+1,r24
 1076               	.L51:
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1077               		.loc 2 280 0 discriminator 2
 1078 05e6 8B81      		ldd r24,Y+3
 1079 05e8 8F5F      		subi r24,lo8(-(1))
 1080 05ea 8B83      		std Y+3,r24
 1081               	.L46:
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1082               		.loc 2 280 0 is_stmt 0 discriminator 1
 1083 05ec 8B81      		ldd r24,Y+3
 1084 05ee 8233      		cpi r24,lo8(50)
 1085 05f0 00F4      		brsh .+2
 1086 05f2 00C0      		rjmp .L52
 1087               	.LBE4:
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == freeEntry) {
 1088               		.loc 2 316 0 is_stmt 1
 1089 05f4 8981      		ldd r24,Y+1
 1090 05f6 9A81      		ldd r25,Y+2
 1091 05f8 892B      		or r24,r25
 1092 05fa 01F4      		brne .L53
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return true;
 1093               		.loc 2 317 0
 1094 05fc 81E0      		ldi r24,lo8(1)
 1095 05fe 00C0      		rjmp .L50
 1096               	.L53:
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->src = header->nwkSrcAddr;
 1097               		.loc 2 320 0
 1098 0600 8885      		ldd r24,Y+8
 1099 0602 9985      		ldd r25,Y+9
 1100 0604 FC01      		movw r30,r24
 1101 0606 2385      		ldd r18,Z+11
 1102 0608 3485      		ldd r19,Z+12
 1103 060a 8981      		ldd r24,Y+1
 1104 060c 9A81      		ldd r25,Y+2
 1105 060e FC01      		movw r30,r24
 1106 0610 3183      		std Z+1,r19
 1107 0612 2083      		st Z,r18
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->seq = header->nwkSeq;
 1108               		.loc 2 321 0
 1109 0614 8885      		ldd r24,Y+8
 1110 0616 9985      		ldd r25,Y+9
 1111 0618 FC01      		movw r30,r24
 1112 061a 2285      		ldd r18,Z+10
 1113 061c 8981      		ldd r24,Y+1
 1114 061e 9A81      		ldd r25,Y+2
 1115 0620 FC01      		movw r30,r24
 1116 0622 2283      		std Z+2,r18
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->mask = 1;
 1117               		.loc 2 322 0
 1118 0624 8981      		ldd r24,Y+1
 1119 0626 9A81      		ldd r25,Y+2
 1120 0628 21E0      		ldi r18,lo8(1)
 1121 062a FC01      		movw r30,r24
 1122 062c 2383      		std Z+3,r18
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->ttl = DUPLICATE_REJECTION_TTL;
 1123               		.loc 2 323 0
 1124 062e 8981      		ldd r24,Y+1
 1125 0630 9A81      		ldd r25,Y+2
 1126 0632 25E1      		ldi r18,lo8(21)
 1127 0634 FC01      		movw r30,r24
 1128 0636 2483      		std Z+4,r18
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 1129               		.loc 2 325 0
 1130 0638 80E0      		ldi r24,lo8(nwkRxDuplicateRejectionTimer)
 1131 063a 90E0      		ldi r25,hi8(nwkRxDuplicateRejectionTimer)
 1132 063c 0E94 0000 		call SYS_TimerStart
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1133               		.loc 2 327 0
 1134 0640 80E0      		ldi r24,0
 1135               	.L50:
 1136               	/* epilogue start */
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1137               		.loc 2 328 0
 1138 0642 2996      		adiw r28,9
 1139 0644 0FB6      		in __tmp_reg__,__SREG__
 1140 0646 F894      		cli
 1141 0648 DEBF      		out __SP_H__,r29
 1142 064a 0FBE      		out __SREG__,__tmp_reg__
 1143 064c CDBF      		out __SP_L__,r28
 1144 064e DF91      		pop r29
 1145 0650 CF91      		pop r28
 1146 0652 0895      		ret
 1147               		.cfi_endproc
 1148               	.LFE71:
 1151               	nwkRxSeriveDataInd:
 1152               	.LFB72:
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind)
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1153               		.loc 2 333 0
 1154               		.cfi_startproc
 1155 0654 CF93      		push r28
 1156               	.LCFI28:
 1157               		.cfi_def_cfa_offset 3
 1158               		.cfi_offset 28, -2
 1159 0656 DF93      		push r29
 1160               	.LCFI29:
 1161               		.cfi_def_cfa_offset 4
 1162               		.cfi_offset 29, -3
 1163 0658 00D0      		rcall .
 1164               	.LCFI30:
 1165               		.cfi_def_cfa_offset 6
 1166 065a CDB7      		in r28,__SP_L__
 1167 065c DEB7      		in r29,__SP_H__
 1168               	.LCFI31:
 1169               		.cfi_def_cfa_register 28
 1170               	/* prologue: function */
 1171               	/* frame size = 2 */
 1172               	/* stack size = 4 */
 1173               	.L__stack_usage = 4
 1174 065e 9A83      		std Y+2,r25
 1175 0660 8983      		std Y+1,r24
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == (ind->options & NWK_IND_OPT_SECURED)) {
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ind->size < 1) {
 1176               		.loc 2 341 0
 1177 0662 8981      		ldd r24,Y+1
 1178 0664 9A81      		ldd r25,Y+2
 1179 0666 FC01      		movw r30,r24
 1180 0668 8285      		ldd r24,Z+10
 1181 066a 8823      		tst r24
 1182 066c 01F4      		brne .L55
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1183               		.loc 2 342 0
 1184 066e 80E0      		ldi r24,0
 1185 0670 00C0      		rjmp .L56
 1186               	.L55:
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	switch (ind->data[0]) {
 1187               		.loc 2 345 0
 1188 0672 8981      		ldd r24,Y+1
 1189 0674 9A81      		ldd r25,Y+2
 1190 0676 FC01      		movw r30,r24
 1191 0678 8085      		ldd r24,Z+8
 1192 067a 9185      		ldd r25,Z+9
 1193 067c FC01      		movw r30,r24
 1194 067e 8081      		ld r24,Z
 1195 0680 882F      		mov r24,r24
 1196 0682 90E0      		ldi r25,0
 1197 0684 892B      		or r24,r25
 1198 0686 01F4      		brne .L59
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ACK:
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkTxAckReceived(ind);
 1199               		.loc 2 347 0
 1200 0688 8981      		ldd r24,Y+1
 1201 068a 9A81      		ldd r25,Y+2
 1202 068c 0E94 0000 		call nwkTxAckReceived
 1203 0690 00C0      		rjmp .L56
 1204               	.L59:
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_ERROR:
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteErrorReceived(ind);
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTE_DISCOVERY
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REQUEST:
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryRequestReceived(ind);
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REPLY:
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryReplyReceived(ind);
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	default:
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1205               		.loc 2 365 0
 1206 0692 80E0      		ldi r24,0
 1207               	.L56:
 1208               	/* epilogue start */
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1209               		.loc 2 367 0
 1210 0694 0F90      		pop __tmp_reg__
 1211 0696 0F90      		pop __tmp_reg__
 1212 0698 DF91      		pop r29
 1213 069a CF91      		pop r28
 1214 069c 0895      		ret
 1215               		.cfi_endproc
 1216               	.LFE72:
 1219               	nwkRxHandleReceivedFrame:
 1220               	.LFB73:
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleReceivedFrame(NwkFrame_t *frame)
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1221               		.loc 2 372 0
 1222               		.cfi_startproc
 1223 069e CF93      		push r28
 1224               	.LCFI32:
 1225               		.cfi_def_cfa_offset 3
 1226               		.cfi_offset 28, -2
 1227 06a0 DF93      		push r29
 1228               	.LCFI33:
 1229               		.cfi_def_cfa_offset 4
 1230               		.cfi_offset 29, -3
 1231 06a2 CDB7      		in r28,__SP_L__
 1232 06a4 DEB7      		in r29,__SP_H__
 1233               	.LCFI34:
 1234               		.cfi_def_cfa_register 28
 1235 06a6 2897      		sbiw r28,8
 1236               	.LCFI35:
 1237               		.cfi_def_cfa_offset 12
 1238 06a8 0FB6      		in __tmp_reg__,__SREG__
 1239 06aa F894      		cli
 1240 06ac DEBF      		out __SP_H__,r29
 1241 06ae 0FBE      		out __SREG__,__tmp_reg__
 1242 06b0 CDBF      		out __SP_L__,r28
 1243               	/* prologue: function */
 1244               	/* frame size = 8 */
 1245               	/* stack size = 10 */
 1246               	.L__stack_usage = 10
 1247 06b2 9887      		std Y+8,r25
 1248 06b4 8F83      		std Y+7,r24
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1249               		.loc 2 373 0
 1250 06b6 8F81      		ldd r24,Y+7
 1251 06b8 9885      		ldd r25,Y+8
 1252 06ba 0296      		adiw r24,2
 1253 06bc 9B83      		std Y+3,r25
 1254 06be 8A83      		std Y+2,r24
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1255               		.loc 2 375 0
 1256 06c0 8F81      		ldd r24,Y+7
 1257 06c2 9885      		ldd r25,Y+8
 1258 06c4 24E2      		ldi r18,lo8(36)
 1259 06c6 FC01      		movw r30,r24
 1260 06c8 2083      		st Z,r18
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifndef NWK_ENABLE_SECURITY
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.security) {
 1261               		.loc 2 378 0
 1262 06ca 8A81      		ldd r24,Y+2
 1263 06cc 9B81      		ldd r25,Y+3
 1264 06ce FC01      		movw r30,r24
 1265 06d0 8185      		ldd r24,Z+9
 1266 06d2 8270      		andi r24,lo8(2)
 1267 06d4 8823      		tst r24
 1268 06d6 01F0      		breq .+2
 1269 06d8 00C0      		rjmp .L81
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast && header->nwkFcf.ackRequest) {
 1270               		.loc 2 385 0
 1271 06da 8A81      		ldd r24,Y+2
 1272 06dc 9B81      		ldd r25,Y+3
 1273 06de FC01      		movw r30,r24
 1274 06e0 8185      		ldd r24,Z+9
 1275 06e2 8870      		andi r24,lo8(8)
 1276 06e4 8823      		tst r24
 1277 06e6 01F0      		breq .L63
 1278               		.loc 2 385 0 is_stmt 0 discriminator 1
 1279 06e8 8A81      		ldd r24,Y+2
 1280 06ea 9B81      		ldd r25,Y+3
 1281 06ec FC01      		movw r30,r24
 1282 06ee 8185      		ldd r24,Z+9
 1283 06f0 8170      		andi r24,lo8(1)
 1284 06f2 8823      		tst r24
 1285 06f4 01F0      		breq .+2
 1286 06f6 00C0      		rjmp .L82
 1287               	.L63:
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #else
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == header->macDstPanId)
 1288               		.loc 2 396 0 is_stmt 1
 1289 06f8 8A81      		ldd r24,Y+2
 1290 06fa 9B81      		ldd r25,Y+3
 1291 06fc FC01      		movw r30,r24
 1292 06fe 8381      		ldd r24,Z+3
 1293 0700 9481      		ldd r25,Z+4
 1294 0702 0196      		adiw r24,1
 1295 0704 01F4      		brne .L64
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR == header->nwkDstAddr)
 1296               		.loc 2 398 0
 1297 0706 2091 0000 		lds r18,nwkIb
 1298 070a 3091 0000 		lds r19,nwkIb+1
 1299 070e 8A81      		ldd r24,Y+2
 1300 0710 9B81      		ldd r25,Y+3
 1301 0712 FC01      		movw r30,r24
 1302 0714 8585      		ldd r24,Z+13
 1303 0716 9685      		ldd r25,Z+14
 1304 0718 2817      		cp r18,r24
 1305 071a 3907      		cpc r19,r25
 1306 071c 01F0      		breq .L65
 1307               		.loc 2 398 0 is_stmt 0 discriminator 1
 1308 071e 8A81      		ldd r24,Y+2
 1309 0720 9B81      		ldd r25,Y+3
 1310 0722 FC01      		movw r30,r24
 1311 0724 8585      		ldd r24,Z+13
 1312 0726 9685      		ldd r25,Z+14
 1313 0728 0196      		adiw r24,1
 1314 072a 01F0      		breq .+2
 1315 072c 00C0      		rjmp .L83
 1316               	.L65:
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security)
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			{
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1317               		.loc 2 407 0 is_stmt 1
 1318 072e 8F81      		ldd r24,Y+7
 1319 0730 9885      		ldd r25,Y+8
 1320 0732 22E2      		ldi r18,lo8(34)
 1321 0734 FC01      		movw r30,r24
 1322 0736 2083      		st Z,r18
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 1323               		.loc 2 410 0
 1324 0738 00C0      		rjmp .L83
 1325               	.L64:
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ADDRESS_FILTER
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (!NWK_FilterAddress(header->macSrcAddr, &frame->rx.lqi)) {
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == header->nwkDstAddr && header->nwkFcf.ackRequest)
 1326               		.loc 2 420 0
 1327 073a 8A81      		ldd r24,Y+2
 1328 073c 9B81      		ldd r25,Y+3
 1329 073e FC01      		movw r30,r24
 1330 0740 8585      		ldd r24,Z+13
 1331 0742 9685      		ldd r25,Z+14
 1332 0744 0196      		adiw r24,1
 1333 0746 01F4      		brne .L67
 1334               		.loc 2 420 0 is_stmt 0 discriminator 1
 1335 0748 8A81      		ldd r24,Y+2
 1336 074a 9B81      		ldd r25,Y+3
 1337 074c FC01      		movw r30,r24
 1338 074e 8185      		ldd r24,Z+9
 1339 0750 8170      		andi r24,lo8(1)
 1340 0752 8823      		tst r24
 1341 0754 01F0      		breq .+2
 1342 0756 00C0      		rjmp .L84
 1343               	.L67:
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkIb.addr == header->nwkSrcAddr)
 1344               		.loc 2 425 0 is_stmt 1
 1345 0758 2091 0000 		lds r18,nwkIb
 1346 075c 3091 0000 		lds r19,nwkIb+1
 1347 0760 8A81      		ldd r24,Y+2
 1348 0762 9B81      		ldd r25,Y+3
 1349 0764 FC01      		movw r30,r24
 1350 0766 8385      		ldd r24,Z+11
 1351 0768 9485      		ldd r25,Z+12
 1352 076a 2817      		cp r18,r24
 1353 076c 3907      		cpc r19,r25
 1354 076e 01F4      		brne .+2
 1355 0770 00C0      		rjmp .L85
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRouteFrameReceived(frame);
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkRxRejectDuplicate(header))
 1356               		.loc 2 434 0
 1357 0772 8A81      		ldd r24,Y+2
 1358 0774 9B81      		ldd r25,Y+3
 1359 0776 0E94 0000 		call nwkRxRejectDuplicate
 1360 077a 8823      		tst r24
 1361 077c 01F0      		breq .+2
 1362 077e 00C0      		rjmp .L86
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 1363               		.loc 2 440 0
 1364 0780 8A81      		ldd r24,Y+2
 1365 0782 9B81      		ldd r25,Y+3
 1366 0784 FC01      		movw r30,r24
 1367 0786 8185      		ldd r24,Z+9
 1368 0788 8870      		andi r24,lo8(8)
 1369 078a 8823      		tst r24
 1370 078c 01F4      		brne .+2
 1371 078e 00C0      		rjmp .L70
 1372               	.LBB7:
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameMulticastHeader_t *mcHeader
 1373               		.loc 2 441 0
 1374 0790 8F81      		ldd r24,Y+7
 1375 0792 9885      		ldd r25,Y+8
 1376 0794 8F57      		subi r24,127
 1377 0796 9F4F      		sbci r25,-1
 1378 0798 FC01      		movw r30,r24
 1379 079a 8081      		ld r24,Z
 1380 079c 9181      		ldd r25,Z+1
 1381 079e 9D83      		std Y+5,r25
 1382 07a0 8C83      		std Y+4,r24
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			= (NwkFrameMulticastHeader_t *)frame->payload;
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool member = NWK_GroupIsMember(header->nwkDstAddr);
 1383               		.loc 2 443 0
 1384 07a2 8A81      		ldd r24,Y+2
 1385 07a4 9B81      		ldd r25,Y+3
 1386 07a6 FC01      		movw r30,r24
 1387 07a8 8585      		ldd r24,Z+13
 1388 07aa 9685      		ldd r25,Z+14
 1389 07ac 0E94 0000 		call NWK_GroupIsMember
 1390 07b0 8E83      		std Y+6,r24
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool broadcast = false;
 1391               		.loc 2 444 0
 1392 07b2 1982      		std Y+1,__zero_reg__
 445:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 1393               		.loc 2 446 0
 1394 07b4 8A81      		ldd r24,Y+2
 1395 07b6 9B81      		ldd r25,Y+3
 1396 07b8 FC01      		movw r30,r24
 1397 07ba 8581      		ldd r24,Z+5
 1398 07bc 9681      		ldd r25,Z+6
 1399 07be 0196      		adiw r24,1
 1400 07c0 01F0      		breq .+2
 1401 07c2 00C0      		rjmp .L71
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1402               		.loc 2 447 0
 1403 07c4 8E81      		ldd r24,Y+6
 1404 07c6 8823      		tst r24
 1405 07c8 01F0      		breq .L72
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->memberRadius > 0;
 1406               		.loc 2 448 0
 1407 07ca 8C81      		ldd r24,Y+4
 1408 07cc 9D81      		ldd r25,Y+5
 1409 07ce FC01      		movw r30,r24
 1410 07d0 8181      		ldd r24,Z+1
 1411 07d2 8F70      		andi r24,lo8(15)
 1412 07d4 882F      		mov r24,r24
 1413 07d6 90E0      		ldi r25,0
 1414 07d8 21E0      		ldi r18,lo8(1)
 1415 07da 1816      		cp __zero_reg__,r24
 1416 07dc 1906      		cpc __zero_reg__,r25
 1417 07de 04F0      		brlt .L73
 1418 07e0 20E0      		ldi r18,0
 1419               	.L73:
 1420 07e2 2983      		std Y+1,r18
 449:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius--;
 1421               		.loc 2 449 0
 1422 07e4 8C81      		ldd r24,Y+4
 1423 07e6 9D81      		ldd r25,Y+5
 1424 07e8 FC01      		movw r30,r24
 1425 07ea 8181      		ldd r24,Z+1
 1426 07ec 8F70      		andi r24,lo8(15)
 1427 07ee 2FE0      		ldi r18,lo8(15)
 1428 07f0 280F      		add r18,r24
 1429 07f2 2F70      		andi r18,lo8(15)
 1430 07f4 8C81      		ldd r24,Y+4
 1431 07f6 9D81      		ldd r25,Y+5
 1432 07f8 2F70      		andi r18,lo8(15)
 1433 07fa FC01      		movw r30,r24
 1434 07fc 3181      		ldd r19,Z+1
 1435 07fe 307F      		andi r19,lo8(-16)
 1436 0800 232B      		or r18,r19
 1437 0802 FC01      		movw r30,r24
 1438 0804 2183      		std Z+1,r18
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius
 451:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxNonMemberRadius;
 1439               		.loc 2 451 0
 1440 0806 8C81      		ldd r24,Y+4
 1441 0808 9D81      		ldd r25,Y+5
 1442 080a FC01      		movw r30,r24
 1443 080c 8081      		ld r24,Z
 1444 080e 282F      		mov r18,r24
 1445 0810 2295      		swap r18
 1446 0812 2F70      		andi r18,lo8(15)
 1447 0814 8C81      		ldd r24,Y+4
 1448 0816 9D81      		ldd r25,Y+5
 1449 0818 2F70      		andi r18,lo8(15)
 1450 081a FC01      		movw r30,r24
 1451 081c 3081      		ld r19,Z
 1452 081e 307F      		andi r19,lo8(-16)
 1453 0820 232B      		or r18,r19
 1454 0822 FC01      		movw r30,r24
 1455 0824 2083      		st Z,r18
 1456 0826 00C0      		rjmp .L76
 1457               	.L72:
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->nonMemberRadius > 0;
 1458               		.loc 2 453 0
 1459 0828 8C81      		ldd r24,Y+4
 1460 082a 9D81      		ldd r25,Y+5
 1461 082c FC01      		movw r30,r24
 1462 082e 8081      		ld r24,Z
 1463 0830 8F70      		andi r24,lo8(15)
 1464 0832 882F      		mov r24,r24
 1465 0834 90E0      		ldi r25,0
 1466 0836 21E0      		ldi r18,lo8(1)
 1467 0838 1816      		cp __zero_reg__,r24
 1468 083a 1906      		cpc __zero_reg__,r25
 1469 083c 04F0      		brlt .L75
 1470 083e 20E0      		ldi r18,0
 1471               	.L75:
 1472 0840 2983      		std Y+1,r18
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius--;
 1473               		.loc 2 454 0
 1474 0842 8C81      		ldd r24,Y+4
 1475 0844 9D81      		ldd r25,Y+5
 1476 0846 FC01      		movw r30,r24
 1477 0848 8081      		ld r24,Z
 1478 084a 8F70      		andi r24,lo8(15)
 1479 084c 2FE0      		ldi r18,lo8(15)
 1480 084e 280F      		add r18,r24
 1481 0850 2F70      		andi r18,lo8(15)
 1482 0852 8C81      		ldd r24,Y+4
 1483 0854 9D81      		ldd r25,Y+5
 1484 0856 2F70      		andi r18,lo8(15)
 1485 0858 FC01      		movw r30,r24
 1486 085a 3081      		ld r19,Z
 1487 085c 307F      		andi r19,lo8(-16)
 1488 085e 232B      		or r18,r19
 1489 0860 FC01      		movw r30,r24
 1490 0862 2083      		st Z,r18
 455:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius
 456:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxMemberRadius;
 1491               		.loc 2 456 0
 1492 0864 8C81      		ldd r24,Y+4
 1493 0866 9D81      		ldd r25,Y+5
 1494 0868 FC01      		movw r30,r24
 1495 086a 8181      		ldd r24,Z+1
 1496 086c 282F      		mov r18,r24
 1497 086e 2295      		swap r18
 1498 0870 2F70      		andi r18,lo8(15)
 1499 0872 8C81      		ldd r24,Y+4
 1500 0874 9D81      		ldd r25,Y+5
 1501 0876 2F70      		andi r18,lo8(15)
 1502 0878 FC01      		movw r30,r24
 1503 087a 3181      		ldd r19,Z+1
 1504 087c 307F      		andi r19,lo8(-16)
 1505 087e 232B      		or r18,r19
 1506 0880 FC01      		movw r30,r24
 1507 0882 2183      		std Z+1,r18
 1508 0884 00C0      		rjmp .L76
 1509               	.L71:
 457:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 458:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		} else {
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1510               		.loc 2 459 0
 1511 0886 8E81      		ldd r24,Y+6
 1512 0888 8823      		tst r24
 1513 088a 01F0      		breq .L76
 460:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = true;
 1514               		.loc 2 460 0
 1515 088c 81E0      		ldi r24,lo8(1)
 1516 088e 8983      		std Y+1,r24
 461:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkFcf.linkLocal = 1;
 1517               		.loc 2 461 0
 1518 0890 8A81      		ldd r24,Y+2
 1519 0892 9B81      		ldd r25,Y+3
 1520 0894 FC01      		movw r30,r24
 1521 0896 2185      		ldd r18,Z+9
 1522 0898 2460      		ori r18,lo8(4)
 1523 089a FC01      		movw r30,r24
 1524 089c 2187      		std Z+9,r18
 1525               	.L76:
 462:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 463:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 464:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_ROUTING
 465:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else {
 466:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_ROUTE;
 467:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 468:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 469:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 470:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 471:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (broadcast) {
 1526               		.loc 2 471 0
 1527 089e 8981      		ldd r24,Y+1
 1528 08a0 8823      		tst r24
 1529 08a2 01F0      		breq .L77
 472:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1530               		.loc 2 472 0
 1531 08a4 8F81      		ldd r24,Y+7
 1532 08a6 9885      		ldd r25,Y+8
 1533 08a8 0E94 0000 		call nwkTxBroadcastFrame
 1534               	.L77:
 473:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 474:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 475:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (member) {
 1535               		.loc 2 475 0
 1536 08ac 8E81      		ldd r24,Y+6
 1537 08ae 8823      		tst r24
 1538 08b0 01F4      		brne .+2
 1539 08b2 00C0      		rjmp .L60
 476:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 1540               		.loc 2 476 0
 1541 08b4 8F81      		ldd r24,Y+7
 1542 08b6 9885      		ldd r25,Y+8
 1543 08b8 8F57      		subi r24,127
 1544 08ba 9F4F      		sbci r25,-1
 1545 08bc FC01      		movw r30,r24
 1546 08be 8081      		ld r24,Z
 1547 08c0 9181      		ldd r25,Z+1
 1548 08c2 9C01      		movw r18,r24
 1549 08c4 2E5F      		subi r18,-2
 1550 08c6 3F4F      		sbci r19,-1
 1551 08c8 8F81      		ldd r24,Y+7
 1552 08ca 9885      		ldd r25,Y+8
 1553 08cc 8F57      		subi r24,127
 1554 08ce 9F4F      		sbci r25,-1
 1555 08d0 FC01      		movw r30,r24
 1556 08d2 3183      		std Z+1,r19
 1557 08d4 2083      		st Z,r18
 477:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 478:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 479:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 480:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 481:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 482:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1558               		.loc 2 483 0
 1559 08d6 8F81      		ldd r24,Y+7
 1560 08d8 9885      		ldd r25,Y+8
 1561 08da 22E2      		ldi r18,lo8(34)
 1562 08dc FC01      		movw r30,r24
 1563 08de 2083      		st Z,r18
 1564 08e0 00C0      		rjmp .L60
 1565               	.L70:
 1566               	.LBE7:
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 485:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else
 486:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif /* NWK_ENABLE_MULTICAST */
 487:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr && nwkIb.addr !=
 1567               		.loc 2 488 0
 1568 08e2 8A81      		ldd r24,Y+2
 1569 08e4 9B81      		ldd r25,Y+3
 1570 08e6 FC01      		movw r30,r24
 1571 08e8 8581      		ldd r24,Z+5
 1572 08ea 9681      		ldd r25,Z+6
 1573 08ec 0196      		adiw r24,1
 1574 08ee 01F4      		brne .L79
 1575               		.loc 2 488 0 is_stmt 0 discriminator 1
 1576 08f0 2091 0000 		lds r18,nwkIb
 1577 08f4 3091 0000 		lds r19,nwkIb+1
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1578               		.loc 2 489 0 is_stmt 1 discriminator 1
 1579 08f8 8A81      		ldd r24,Y+2
 1580 08fa 9B81      		ldd r25,Y+3
 1581 08fc FC01      		movw r30,r24
 1582 08fe 8585      		ldd r24,Z+13
 1583 0900 9685      		ldd r25,Z+14
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1584               		.loc 2 488 0 discriminator 1
 1585 0902 2817      		cp r18,r24
 1586 0904 3907      		cpc r19,r25
 1587 0906 01F0      		breq .L79
 490:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				0 == header->nwkFcf.linkLocal) {
 1588               		.loc 2 490 0
 1589 0908 8A81      		ldd r24,Y+2
 1590 090a 9B81      		ldd r25,Y+3
 1591 090c FC01      		movw r30,r24
 1592 090e 8185      		ldd r24,Z+9
 1593 0910 8470      		andi r24,lo8(4)
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1594               		.loc 2 489 0
 1595 0912 8823      		tst r24
 1596 0914 01F4      		brne .L79
 491:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1597               		.loc 2 491 0
 1598 0916 8F81      		ldd r24,Y+7
 1599 0918 9885      		ldd r25,Y+8
 1600 091a 0E94 0000 		call nwkTxBroadcastFrame
 1601               	.L79:
 492:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR ==
 1602               		.loc 2 494 0
 1603 091e 2091 0000 		lds r18,nwkIb
 1604 0922 3091 0000 		lds r19,nwkIb+1
 1605 0926 8A81      		ldd r24,Y+2
 1606 0928 9B81      		ldd r25,Y+3
 1607 092a FC01      		movw r30,r24
 1608 092c 8585      		ldd r24,Z+13
 1609 092e 9685      		ldd r25,Z+14
 1610 0930 2817      		cp r18,r24
 1611 0932 3907      		cpc r19,r25
 1612 0934 01F0      		breq .L80
 495:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1613               		.loc 2 495 0 discriminator 1
 1614 0936 8A81      		ldd r24,Y+2
 1615 0938 9B81      		ldd r25,Y+3
 1616 093a FC01      		movw r30,r24
 1617 093c 8585      		ldd r24,Z+13
 1618 093e 9685      		ldd r25,Z+14
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1619               		.loc 2 494 0 discriminator 1
 1620 0940 0196      		adiw r24,1
 1621 0942 01F4      		brne .L60
 1622               	.L80:
 496:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 497:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1623               		.loc 2 501 0
 1624 0944 8F81      		ldd r24,Y+7
 1625 0946 9885      		ldd r25,Y+8
 1626 0948 22E2      		ldi r18,lo8(34)
 1627 094a FC01      		movw r30,r24
 1628 094c 2083      		st Z,r18
 1629 094e 00C0      		rjmp .L60
 1630               	.L81:
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1631               		.loc 2 379 0
 1632 0950 0000      		nop
 1633 0952 00C0      		rjmp .L60
 1634               	.L82:
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1635               		.loc 2 386 0
 1636 0954 0000      		nop
 1637 0956 00C0      		rjmp .L60
 1638               	.L83:
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1639               		.loc 2 410 0
 1640 0958 0000      		nop
 1641 095a 00C0      		rjmp .L60
 1642               	.L84:
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1643               		.loc 2 422 0
 1644 095c 0000      		nop
 1645 095e 00C0      		rjmp .L60
 1646               	.L85:
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1647               		.loc 2 427 0
 1648 0960 0000      		nop
 1649 0962 00C0      		rjmp .L60
 1650               	.L86:
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1651               		.loc 2 436 0
 1652 0964 0000      		nop
 1653               	.L60:
 1654               	/* epilogue start */
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #ifdef NWK_ENABLE_ROUTING
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if (nwkIb.addr == header->macDstAddr) {
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_ROUTE;
 507:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #endif
 509:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1655               		.loc 2 510 0
 1656 0966 2896      		adiw r28,8
 1657 0968 0FB6      		in __tmp_reg__,__SREG__
 1658 096a F894      		cli
 1659 096c DEBF      		out __SP_H__,r29
 1660 096e 0FBE      		out __SREG__,__tmp_reg__
 1661 0970 CDBF      		out __SP_L__,r28
 1662 0972 DF91      		pop r29
 1663 0974 CF91      		pop r28
 1664 0976 0895      		ret
 1665               		.cfi_endproc
 1666               	.LFE73:
 1669               	nwkRxIndicateDataFrame:
 1670               	.LFB74:
 511:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 512:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 513:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 514:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateDataFrame(NwkFrame_t *frame)
 515:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1671               		.loc 2 515 0
 1672               		.cfi_startproc
 1673 0978 CF93      		push r28
 1674               	.LCFI36:
 1675               		.cfi_def_cfa_offset 3
 1676               		.cfi_offset 28, -2
 1677 097a DF93      		push r29
 1678               	.LCFI37:
 1679               		.cfi_def_cfa_offset 4
 1680               		.cfi_offset 29, -3
 1681 097c CDB7      		in r28,__SP_L__
 1682 097e DEB7      		in r29,__SP_H__
 1683               	.LCFI38:
 1684               		.cfi_def_cfa_register 28
 1685 0980 6197      		sbiw r28,17
 1686               	.LCFI39:
 1687               		.cfi_def_cfa_offset 21
 1688 0982 0FB6      		in __tmp_reg__,__SREG__
 1689 0984 F894      		cli
 1690 0986 DEBF      		out __SP_H__,r29
 1691 0988 0FBE      		out __SREG__,__tmp_reg__
 1692 098a CDBF      		out __SP_L__,r28
 1693               	/* prologue: function */
 1694               	/* frame size = 17 */
 1695               	/* stack size = 19 */
 1696               	.L__stack_usage = 19
 1697 098c 998B      		std Y+17,r25
 1698 098e 888B      		std Y+16,r24
 516:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1699               		.loc 2 516 0
 1700 0990 8889      		ldd r24,Y+16
 1701 0992 9989      		ldd r25,Y+17
 1702 0994 0296      		adiw r24,2
 1703 0996 9A83      		std Y+2,r25
 1704 0998 8983      		std Y+1,r24
 517:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 518:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 519:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[header->nwkDstEndpoint]) {
 1705               		.loc 2 519 0
 1706 099a 8981      		ldd r24,Y+1
 1707 099c 9A81      		ldd r25,Y+2
 1708 099e FC01      		movw r30,r24
 1709 09a0 8785      		ldd r24,Z+15
 1710 09a2 8295      		swap r24
 1711 09a4 8F70      		andi r24,lo8(15)
 1712 09a6 882F      		mov r24,r24
 1713 09a8 90E0      		ldi r25,0
 1714 09aa 0396      		adiw r24,3
 1715 09ac 880F      		lsl r24
 1716 09ae 991F      		rol r25
 1717 09b0 8050      		subi r24,lo8(-(nwkIb))
 1718 09b2 9040      		sbci r25,hi8(-(nwkIb))
 1719 09b4 FC01      		movw r30,r24
 1720 09b6 8081      		ld r24,Z
 1721 09b8 9181      		ldd r25,Z+1
 1722 09ba 892B      		or r24,r25
 1723 09bc 01F4      		brne .L88
 520:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1724               		.loc 2 520 0
 1725 09be 80E0      		ldi r24,0
 1726 09c0 00C0      		rjmp .L103
 1727               	.L88:
 521:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 522:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 523:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = header->nwkSrcAddr;
 1728               		.loc 2 523 0
 1729 09c2 8981      		ldd r24,Y+1
 1730 09c4 9A81      		ldd r25,Y+2
 1731 09c6 FC01      		movw r30,r24
 1732 09c8 8385      		ldd r24,Z+11
 1733 09ca 9485      		ldd r25,Z+12
 1734 09cc 9C83      		std Y+4,r25
 1735 09ce 8B83      		std Y+3,r24
 524:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = header->nwkDstAddr;
 1736               		.loc 2 524 0
 1737 09d0 8981      		ldd r24,Y+1
 1738 09d2 9A81      		ldd r25,Y+2
 1739 09d4 FC01      		movw r30,r24
 1740 09d6 8585      		ldd r24,Z+13
 1741 09d8 9685      		ldd r25,Z+14
 1742 09da 9E83      		std Y+6,r25
 1743 09dc 8D83      		std Y+5,r24
 525:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = header->nwkSrcEndpoint;
 1744               		.loc 2 525 0
 1745 09de 8981      		ldd r24,Y+1
 1746 09e0 9A81      		ldd r25,Y+2
 1747 09e2 FC01      		movw r30,r24
 1748 09e4 8785      		ldd r24,Z+15
 1749 09e6 8F70      		andi r24,lo8(15)
 1750 09e8 8F83      		std Y+7,r24
 526:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = header->nwkDstEndpoint;
 1751               		.loc 2 526 0
 1752 09ea 8981      		ldd r24,Y+1
 1753 09ec 9A81      		ldd r25,Y+2
 1754 09ee FC01      		movw r30,r24
 1755 09f0 8785      		ldd r24,Z+15
 1756 09f2 8295      		swap r24
 1757 09f4 8F70      		andi r24,lo8(15)
 1758 09f6 8887      		std Y+8,r24
 527:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1759               		.loc 2 527 0
 1760 09f8 8889      		ldd r24,Y+16
 1761 09fa 9989      		ldd r25,Y+17
 1762 09fc 8F57      		subi r24,127
 1763 09fe 9F4F      		sbci r25,-1
 1764 0a00 FC01      		movw r30,r24
 1765 0a02 8081      		ld r24,Z
 1766 0a04 9181      		ldd r25,Z+1
 1767 0a06 9C87      		std Y+12,r25
 1768 0a08 8B87      		std Y+11,r24
 528:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1769               		.loc 2 528 0
 1770 0a0a 8889      		ldd r24,Y+16
 1771 0a0c 9989      		ldd r25,Y+17
 1772 0a0e 0E94 0000 		call nwkFramePayloadSize
 1773 0a12 8D87      		std Y+13,r24
 529:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1774               		.loc 2 529 0
 1775 0a14 8889      		ldd r24,Y+16
 1776 0a16 9989      		ldd r25,Y+17
 1777 0a18 8D57      		subi r24,125
 1778 0a1a 9F4F      		sbci r25,-1
 1779 0a1c FC01      		movw r30,r24
 1780 0a1e 8081      		ld r24,Z
 1781 0a20 8E87      		std Y+14,r24
 530:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1782               		.loc 2 530 0
 1783 0a22 8889      		ldd r24,Y+16
 1784 0a24 9989      		ldd r25,Y+17
 1785 0a26 8C57      		subi r24,124
 1786 0a28 9F4F      		sbci r25,-1
 1787 0a2a FC01      		movw r30,r24
 1788 0a2c 8081      		ld r24,Z
 1789 0a2e 8F87      		std Y+15,r24
 531:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 532:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK_REQUESTED : 0;
 1790               		.loc 2 532 0
 1791 0a30 8981      		ldd r24,Y+1
 1792 0a32 9A81      		ldd r25,Y+2
 1793 0a34 FC01      		movw r30,r24
 1794 0a36 8185      		ldd r24,Z+9
 1795 0a38 982F      		mov r25,r24
 1796 0a3a 9170      		andi r25,lo8(1)
 1797 0a3c 81E0      		ldi r24,lo8(1)
 1798 0a3e 9923      		tst r25
 1799 0a40 01F4      		brne .L90
 1800 0a42 80E0      		ldi r24,0
 1801               	.L90:
 1802 0a44 882F      		mov r24,r24
 1803 0a46 90E0      		ldi r25,0
 1804 0a48 9A87      		std Y+10,r25
 1805 0a4a 8987      		std Y+9,r24
 533:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECURED : 0;
 1806               		.loc 2 533 0
 1807 0a4c 2985      		ldd r18,Y+9
 1808 0a4e 3A85      		ldd r19,Y+10
 1809 0a50 8981      		ldd r24,Y+1
 1810 0a52 9A81      		ldd r25,Y+2
 1811 0a54 FC01      		movw r30,r24
 1812 0a56 8185      		ldd r24,Z+9
 1813 0a58 882F      		mov r24,r24
 1814 0a5a 90E0      		ldi r25,0
 1815 0a5c 8270      		andi r24,2
 1816 0a5e 9927      		clr r25
 1817 0a60 822B      		or r24,r18
 1818 0a62 932B      		or r25,r19
 1819 0a64 9A87      		std Y+10,r25
 1820 0a66 8987      		std Y+9,r24
 534:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LINK_LOCAL : 0;
 1821               		.loc 2 534 0
 1822 0a68 2985      		ldd r18,Y+9
 1823 0a6a 3A85      		ldd r19,Y+10
 1824 0a6c 8981      		ldd r24,Y+1
 1825 0a6e 9A81      		ldd r25,Y+2
 1826 0a70 FC01      		movw r30,r24
 1827 0a72 8185      		ldd r24,Z+9
 1828 0a74 8470      		andi r24,lo8(4)
 1829 0a76 8823      		tst r24
 1830 0a78 01F0      		breq .L91
 1831               		.loc 2 534 0 is_stmt 0 discriminator 1
 1832 0a7a 80E2      		ldi r24,lo8(32)
 1833 0a7c 90E0      		ldi r25,0
 1834 0a7e 00C0      		rjmp .L92
 1835               	.L91:
 1836               		.loc 2 534 0 discriminator 2
 1837 0a80 80E0      		ldi r24,0
 1838 0a82 90E0      		ldi r25,0
 1839               	.L92:
 1840               		.loc 2 534 0 discriminator 4
 1841 0a84 822B      		or r24,r18
 1842 0a86 932B      		or r25,r19
 1843 0a88 9A87      		std Y+10,r25
 1844 0a8a 8987      		std Y+9,r24
 535:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MULTICAST : 0;
 1845               		.loc 2 535 0 is_stmt 1 discriminator 4
 1846 0a8c 2985      		ldd r18,Y+9
 1847 0a8e 3A85      		ldd r19,Y+10
 1848 0a90 8981      		ldd r24,Y+1
 1849 0a92 9A81      		ldd r25,Y+2
 1850 0a94 FC01      		movw r30,r24
 1851 0a96 8185      		ldd r24,Z+9
 1852 0a98 8870      		andi r24,lo8(8)
 1853 0a9a 8823      		tst r24
 1854 0a9c 01F0      		breq .L93
 1855               		.loc 2 535 0 is_stmt 0 discriminator 1
 1856 0a9e 80E4      		ldi r24,lo8(64)
 1857 0aa0 90E0      		ldi r25,0
 1858 0aa2 00C0      		rjmp .L94
 1859               	.L93:
 1860               		.loc 2 535 0 discriminator 2
 1861 0aa4 80E0      		ldi r24,0
 1862 0aa6 90E0      		ldi r25,0
 1863               	.L94:
 1864               		.loc 2 535 0 discriminator 4
 1865 0aa8 822B      		or r24,r18
 1866 0aaa 932B      		or r25,r19
 1867 0aac 9A87      		std Y+10,r25
 1868 0aae 8987      		std Y+9,r24
 536:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.beacon) ? NWK_IND_OPT_BEACON : 0;
 1869               		.loc 2 536 0 is_stmt 1 discriminator 4
 1870 0ab0 2985      		ldd r18,Y+9
 1871 0ab2 3A85      		ldd r19,Y+10
 1872 0ab4 8981      		ldd r24,Y+1
 1873 0ab6 9A81      		ldd r25,Y+2
 1874 0ab8 FC01      		movw r30,r24
 1875 0aba 8185      		ldd r24,Z+9
 1876 0abc 8071      		andi r24,lo8(16)
 1877 0abe 8823      		tst r24
 1878 0ac0 01F0      		breq .L95
 1879               		.loc 2 536 0 is_stmt 0 discriminator 1
 1880 0ac2 80E8      		ldi r24,lo8(-128)
 1881 0ac4 90E0      		ldi r25,0
 1882 0ac6 00C0      		rjmp .L96
 1883               	.L95:
 1884               		.loc 2 536 0 discriminator 2
 1885 0ac8 80E0      		ldi r24,0
 1886 0aca 90E0      		ldi r25,0
 1887               	.L96:
 1888               		.loc 2 536 0 discriminator 4
 1889 0acc 822B      		or r24,r18
 1890 0ace 932B      		or r25,r19
 1891 0ad0 9A87      		std Y+10,r25
 1892 0ad2 8987      		std Y+9,r24
 537:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_ADDR == header->nwkDstAddr) ? NWK_IND_OPT_BROADCAST : 0;
 1893               		.loc 2 537 0 is_stmt 1 discriminator 4
 1894 0ad4 2985      		ldd r18,Y+9
 1895 0ad6 3A85      		ldd r19,Y+10
 1896 0ad8 8981      		ldd r24,Y+1
 1897 0ada 9A81      		ldd r25,Y+2
 1898 0adc FC01      		movw r30,r24
 1899 0ade 8585      		ldd r24,Z+13
 1900 0ae0 9685      		ldd r25,Z+14
 1901 0ae2 0196      		adiw r24,1
 1902 0ae4 01F4      		brne .L97
 1903               		.loc 2 537 0 is_stmt 0 discriminator 1
 1904 0ae6 84E0      		ldi r24,lo8(4)
 1905 0ae8 90E0      		ldi r25,0
 1906 0aea 00C0      		rjmp .L98
 1907               	.L97:
 1908               		.loc 2 537 0 discriminator 2
 1909 0aec 80E0      		ldi r24,0
 1910 0aee 90E0      		ldi r25,0
 1911               	.L98:
 1912               		.loc 2 537 0 discriminator 4
 1913 0af0 822B      		or r24,r18
 1914 0af2 932B      		or r25,r19
 1915 0af4 9A87      		std Y+10,r25
 1916 0af6 8987      		std Y+9,r24
 538:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (header->nwkSrcAddr == header->macSrcAddr) ? NWK_IND_OPT_LOCAL : 0;
 1917               		.loc 2 538 0 is_stmt 1 discriminator 4
 1918 0af8 2985      		ldd r18,Y+9
 1919 0afa 3A85      		ldd r19,Y+10
 1920 0afc 8981      		ldd r24,Y+1
 1921 0afe 9A81      		ldd r25,Y+2
 1922 0b00 FC01      		movw r30,r24
 1923 0b02 4385      		ldd r20,Z+11
 1924 0b04 5485      		ldd r21,Z+12
 1925 0b06 8981      		ldd r24,Y+1
 1926 0b08 9A81      		ldd r25,Y+2
 1927 0b0a FC01      		movw r30,r24
 1928 0b0c 8781      		ldd r24,Z+7
 1929 0b0e 9085      		ldd r25,Z+8
 1930 0b10 4817      		cp r20,r24
 1931 0b12 5907      		cpc r21,r25
 1932 0b14 01F4      		brne .L99
 1933               		.loc 2 538 0 is_stmt 0 discriminator 1
 1934 0b16 88E0      		ldi r24,lo8(8)
 1935 0b18 90E0      		ldi r25,0
 1936 0b1a 00C0      		rjmp .L100
 1937               	.L99:
 1938               		.loc 2 538 0 discriminator 2
 1939 0b1c 80E0      		ldi r24,0
 1940 0b1e 90E0      		ldi r25,0
 1941               	.L100:
 1942               		.loc 2 538 0 discriminator 4
 1943 0b20 822B      		or r24,r18
 1944 0b22 932B      		or r25,r19
 1945 0b24 9A87      		std Y+10,r25
 1946 0b26 8987      		std Y+9,r24
 539:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_PANID == header->macDstPanId) ? NWK_IND_OPT_BROADCAST_PAN_ID : 0;
 1947               		.loc 2 539 0 is_stmt 1 discriminator 4
 1948 0b28 2985      		ldd r18,Y+9
 1949 0b2a 3A85      		ldd r19,Y+10
 1950 0b2c 8981      		ldd r24,Y+1
 1951 0b2e 9A81      		ldd r25,Y+2
 1952 0b30 FC01      		movw r30,r24
 1953 0b32 8381      		ldd r24,Z+3
 1954 0b34 9481      		ldd r25,Z+4
 1955 0b36 0196      		adiw r24,1
 1956 0b38 01F4      		brne .L101
 1957               		.loc 2 539 0 is_stmt 0 discriminator 1
 1958 0b3a 80E1      		ldi r24,lo8(16)
 1959 0b3c 90E0      		ldi r25,0
 1960 0b3e 00C0      		rjmp .L102
 1961               	.L101:
 1962               		.loc 2 539 0 discriminator 2
 1963 0b40 80E0      		ldi r24,0
 1964 0b42 90E0      		ldi r25,0
 1965               	.L102:
 1966               		.loc 2 539 0 discriminator 4
 1967 0b44 822B      		or r24,r18
 1968 0b46 932B      		or r25,r19
 1969 0b48 9A87      		std Y+10,r25
 1970 0b4a 8987      		std Y+9,r24
 540:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 541:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 1971               		.loc 2 541 0 is_stmt 1 discriminator 4
 1972 0b4c 8981      		ldd r24,Y+1
 1973 0b4e 9A81      		ldd r25,Y+2
 1974 0b50 FC01      		movw r30,r24
 1975 0b52 8785      		ldd r24,Z+15
 1976 0b54 8295      		swap r24
 1977 0b56 8F70      		andi r24,lo8(15)
 1978 0b58 882F      		mov r24,r24
 1979 0b5a 90E0      		ldi r25,0
 1980 0b5c 0396      		adiw r24,3
 1981 0b5e 880F      		lsl r24
 1982 0b60 991F      		rol r25
 1983 0b62 8050      		subi r24,lo8(-(nwkIb))
 1984 0b64 9040      		sbci r25,hi8(-(nwkIb))
 1985 0b66 FC01      		movw r30,r24
 1986 0b68 2081      		ld r18,Z
 1987 0b6a 3181      		ldd r19,Z+1
 1988 0b6c CE01      		movw r24,r28
 1989 0b6e 0396      		adiw r24,3
 1990 0b70 F901      		movw r30,r18
 1991 0b72 0995      		icall
 1992               	.L103:
 1993               	/* epilogue start */
 542:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1994               		.loc 2 542 0 discriminator 1
 1995 0b74 6196      		adiw r28,17
 1996 0b76 0FB6      		in __tmp_reg__,__SREG__
 1997 0b78 F894      		cli
 1998 0b7a DEBF      		out __SP_H__,r29
 1999 0b7c 0FBE      		out __SREG__,__tmp_reg__
 2000 0b7e CDBF      		out __SP_L__,r28
 2001 0b80 DF91      		pop r29
 2002 0b82 CF91      		pop r28
 2003 0b84 0895      		ret
 2004               		.cfi_endproc
 2005               	.LFE74:
 2008               	nwkRxIndicateBeaconFrame:
 2009               	.LFB75:
 543:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 544:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 545:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 546:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateBeaconFrame(NwkFrame_t *frame)
 547:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2010               		.loc 2 547 0
 2011               		.cfi_startproc
 2012 0b86 CF93      		push r28
 2013               	.LCFI40:
 2014               		.cfi_def_cfa_offset 3
 2015               		.cfi_offset 28, -2
 2016 0b88 DF93      		push r29
 2017               	.LCFI41:
 2018               		.cfi_def_cfa_offset 4
 2019               		.cfi_offset 29, -3
 2020 0b8a CDB7      		in r28,__SP_L__
 2021 0b8c DEB7      		in r29,__SP_H__
 2022               	.LCFI42:
 2023               		.cfi_def_cfa_register 28
 2024 0b8e 6197      		sbiw r28,17
 2025               	.LCFI43:
 2026               		.cfi_def_cfa_offset 21
 2027 0b90 0FB6      		in __tmp_reg__,__SREG__
 2028 0b92 F894      		cli
 2029 0b94 DEBF      		out __SP_H__,r29
 2030 0b96 0FBE      		out __SREG__,__tmp_reg__
 2031 0b98 CDBF      		out __SP_L__,r28
 2032               	/* prologue: function */
 2033               	/* frame size = 17 */
 2034               	/* stack size = 19 */
 2035               	.L__stack_usage = 19
 2036 0b9a 998B      		std Y+17,r25
 2037 0b9c 888B      		std Y+16,r24
 548:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 2038               		.loc 2 548 0
 2039 0b9e 8889      		ldd r24,Y+16
 2040 0ba0 9989      		ldd r25,Y+17
 2041 0ba2 0296      		adiw r24,2
 2042 0ba4 9A83      		std Y+2,r25
 2043 0ba6 8983      		std Y+1,r24
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 551:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2044               		.loc 2 551 0
 2045 0ba8 8889      		ldd r24,Y+16
 2046 0baa 9989      		ldd r25,Y+17
 2047 0bac 24E2      		ldi r18,lo8(36)
 2048 0bae FC01      		movw r30,r24
 2049 0bb0 2083      		st Z,r18
 552:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 553:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[0]) {
 2050               		.loc 2 553 0
 2051 0bb2 8091 0000 		lds r24,nwkIb+6
 2052 0bb6 9091 0000 		lds r25,nwkIb+6+1
 2053 0bba 892B      		or r24,r25
 2054 0bbc 01F4      		brne .L105
 554:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2055               		.loc 2 554 0
 2056 0bbe 80E0      		ldi r24,0
 2057 0bc0 00C0      		rjmp .L107
 2058               	.L105:
 555:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 556:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 557:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = frame->beacon.macSrcAddr;
 2059               		.loc 2 557 0
 2060 0bc2 8889      		ldd r24,Y+16
 2061 0bc4 9989      		ldd r25,Y+17
 2062 0bc6 FC01      		movw r30,r24
 2063 0bc8 8781      		ldd r24,Z+7
 2064 0bca 9085      		ldd r25,Z+8
 2065 0bcc 9C83      		std Y+4,r25
 2066 0bce 8B83      		std Y+3,r24
 558:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = frame->beacon.macSrcAddr;
 2067               		.loc 2 558 0
 2068 0bd0 8889      		ldd r24,Y+16
 2069 0bd2 9989      		ldd r25,Y+17
 2070 0bd4 FC01      		movw r30,r24
 2071 0bd6 8781      		ldd r24,Z+7
 2072 0bd8 9085      		ldd r25,Z+8
 2073 0bda 9E83      		std Y+6,r25
 2074 0bdc 8D83      		std Y+5,r24
 559:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2075               		.loc 2 559 0
 2076 0bde 1F82      		std Y+7,__zero_reg__
 560:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2077               		.loc 2 560 0
 2078 0be0 1886      		std Y+8,__zero_reg__
 561:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2079               		.loc 2 561 0
 2080 0be2 8889      		ldd r24,Y+16
 2081 0be4 9989      		ldd r25,Y+17
 2082 0be6 8F57      		subi r24,127
 2083 0be8 9F4F      		sbci r25,-1
 2084 0bea FC01      		movw r30,r24
 2085 0bec 8081      		ld r24,Z
 2086 0bee 9181      		ldd r25,Z+1
 2087 0bf0 9C87      		std Y+12,r25
 2088 0bf2 8B87      		std Y+11,r24
 562:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2089               		.loc 2 562 0
 2090 0bf4 8889      		ldd r24,Y+16
 2091 0bf6 9989      		ldd r25,Y+17
 2092 0bf8 0E94 0000 		call nwkFramePayloadSize
 2093 0bfc 8D87      		std Y+13,r24
 563:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2094               		.loc 2 563 0
 2095 0bfe 8889      		ldd r24,Y+16
 2096 0c00 9989      		ldd r25,Y+17
 2097 0c02 8D57      		subi r24,125
 2098 0c04 9F4F      		sbci r25,-1
 2099 0c06 FC01      		movw r30,r24
 2100 0c08 8081      		ld r24,Z
 2101 0c0a 8E87      		std Y+14,r24
 564:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2102               		.loc 2 564 0
 2103 0c0c 8889      		ldd r24,Y+16
 2104 0c0e 9989      		ldd r25,Y+17
 2105 0c10 8C57      		subi r24,124
 2106 0c12 9F4F      		sbci r25,-1
 2107 0c14 FC01      		movw r30,r24
 2108 0c16 8081      		ld r24,Z
 2109 0c18 8F87      		std Y+15,r24
 565:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 566:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_BEACON;
 2110               		.loc 2 566 0
 2111 0c1a 80E8      		ldi r24,lo8(-128)
 2112 0c1c 90E0      		ldi r25,0
 2113 0c1e 9A87      		std Y+10,r25
 2114 0c20 8987      		std Y+9,r24
 567:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 568:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2115               		.loc 2 568 0
 2116 0c22 8981      		ldd r24,Y+1
 2117 0c24 9A81      		ldd r25,Y+2
 2118 0c26 FC01      		movw r30,r24
 2119 0c28 8785      		ldd r24,Z+15
 2120 0c2a 8295      		swap r24
 2121 0c2c 8F70      		andi r24,lo8(15)
 2122 0c2e 882F      		mov r24,r24
 2123 0c30 90E0      		ldi r25,0
 2124 0c32 0396      		adiw r24,3
 2125 0c34 880F      		lsl r24
 2126 0c36 991F      		rol r25
 2127 0c38 8050      		subi r24,lo8(-(nwkIb))
 2128 0c3a 9040      		sbci r25,hi8(-(nwkIb))
 2129 0c3c FC01      		movw r30,r24
 2130 0c3e 2081      		ld r18,Z
 2131 0c40 3181      		ldd r19,Z+1
 2132 0c42 CE01      		movw r24,r28
 2133 0c44 0396      		adiw r24,3
 2134 0c46 F901      		movw r30,r18
 2135 0c48 0995      		icall
 2136               	.L107:
 2137               	/* epilogue start */
 569:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2138               		.loc 2 569 0 discriminator 1
 2139 0c4a 6196      		adiw r28,17
 2140 0c4c 0FB6      		in __tmp_reg__,__SREG__
 2141 0c4e F894      		cli
 2142 0c50 DEBF      		out __SP_H__,r29
 2143 0c52 0FBE      		out __SREG__,__tmp_reg__
 2144 0c54 CDBF      		out __SP_L__,r28
 2145 0c56 DF91      		pop r29
 2146 0c58 CF91      		pop r28
 2147 0c5a 0895      		ret
 2148               		.cfi_endproc
 2149               	.LFE75:
 2152               	nwkRxIndicateLLBeaconFrame:
 2153               	.LFB76:
 570:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 571:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 572:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 573:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 574:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLBeaconFrame(NwkFrame_t *frame)
 575:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2154               		.loc 2 575 0
 2155               		.cfi_startproc
 2156 0c5c CF93      		push r28
 2157               	.LCFI44:
 2158               		.cfi_def_cfa_offset 3
 2159               		.cfi_offset 28, -2
 2160 0c5e DF93      		push r29
 2161               	.LCFI45:
 2162               		.cfi_def_cfa_offset 4
 2163               		.cfi_offset 29, -3
 2164 0c60 CDB7      		in r28,__SP_L__
 2165 0c62 DEB7      		in r29,__SP_H__
 2166               	.LCFI46:
 2167               		.cfi_def_cfa_register 28
 2168 0c64 2F97      		sbiw r28,15
 2169               	.LCFI47:
 2170               		.cfi_def_cfa_offset 19
 2171 0c66 0FB6      		in __tmp_reg__,__SREG__
 2172 0c68 F894      		cli
 2173 0c6a DEBF      		out __SP_H__,r29
 2174 0c6c 0FBE      		out __SREG__,__tmp_reg__
 2175 0c6e CDBF      		out __SP_L__,r28
 2176               	/* prologue: function */
 2177               	/* frame size = 15 */
 2178               	/* stack size = 17 */
 2179               	.L__stack_usage = 17
 2180 0c70 9F87      		std Y+15,r25
 2181 0c72 8E87      		std Y+14,r24
 576:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 578:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2182               		.loc 2 578 0
 2183 0c74 8E85      		ldd r24,Y+14
 2184 0c76 9F85      		ldd r25,Y+15
 2185 0c78 24E2      		ldi r18,lo8(36)
 2186 0c7a FC01      		movw r30,r24
 2187 0c7c 2083      		st Z,r18
 579:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 580:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_BEACON_ENDPOINT]) {
 2188               		.loc 2 580 0
 2189 0c7e 8091 0000 		lds r24,nwkIb+6
 2190 0c82 9091 0000 		lds r25,nwkIb+6+1
 2191 0c86 892B      		or r24,r25
 2192 0c88 01F4      		brne .L109
 581:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2193               		.loc 2 581 0
 2194 0c8a 80E0      		ldi r24,0
 2195 0c8c 00C0      		rjmp .L111
 2196               	.L109:
 582:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 583:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Beacon as they are in standart 802.15.4
 584:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 585:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 586:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2197               		.loc 2 586 0
 2198 0c8e 1A82      		std Y+2,__zero_reg__
 2199 0c90 1982      		std Y+1,__zero_reg__
 587:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2200               		.loc 2 587 0
 2201 0c92 1C82      		std Y+4,__zero_reg__
 2202 0c94 1B82      		std Y+3,__zero_reg__
 588:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2203               		.loc 2 588 0
 2204 0c96 1D82      		std Y+5,__zero_reg__
 589:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2205               		.loc 2 589 0
 2206 0c98 1E82      		std Y+6,__zero_reg__
 590:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 591:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->LLbeacon;
 2207               		.loc 2 591 0
 2208 0c9a 8E85      		ldd r24,Y+14
 2209 0c9c 9F85      		ldd r25,Y+15
 2210 0c9e 0296      		adiw r24,2
 2211 0ca0 9A87      		std Y+10,r25
 2212 0ca2 8987      		std Y+9,r24
 592:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2213               		.loc 2 592 0
 2214 0ca4 8E85      		ldd r24,Y+14
 2215 0ca6 9F85      		ldd r25,Y+15
 2216 0ca8 0E94 0000 		call nwkFramePayloadSize
 2217 0cac 8B87      		std Y+11,r24
 593:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2218               		.loc 2 593 0
 2219 0cae 8E85      		ldd r24,Y+14
 2220 0cb0 9F85      		ldd r25,Y+15
 2221 0cb2 8D57      		subi r24,125
 2222 0cb4 9F4F      		sbci r25,-1
 2223 0cb6 FC01      		movw r30,r24
 2224 0cb8 8081      		ld r24,Z
 2225 0cba 8C87      		std Y+12,r24
 594:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2226               		.loc 2 594 0
 2227 0cbc 8E85      		ldd r24,Y+14
 2228 0cbe 9F85      		ldd r25,Y+15
 2229 0cc0 8C57      		subi r24,124
 2230 0cc2 9F4F      		sbci r25,-1
 2231 0cc4 FC01      		movw r30,r24
 2232 0cc6 8081      		ld r24,Z
 2233 0cc8 8D87      		std Y+13,r24
 595:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 596:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_BEACON;
 2234               		.loc 2 596 0
 2235 0cca 80E0      		ldi r24,0
 2236 0ccc 91E0      		ldi r25,lo8(1)
 2237 0cce 9887      		std Y+8,r25
 2238 0cd0 8F83      		std Y+7,r24
 597:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 598:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 599:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_BEACON_ENDPOINT](&ind);
 2239               		.loc 2 599 0
 2240 0cd2 2091 0000 		lds r18,nwkIb+6
 2241 0cd6 3091 0000 		lds r19,nwkIb+6+1
 2242 0cda CE01      		movw r24,r28
 2243 0cdc 0196      		adiw r24,1
 2244 0cde F901      		movw r30,r18
 2245 0ce0 0995      		icall
 2246               	.L111:
 2247               	/* epilogue start */
 600:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2248               		.loc 2 600 0 discriminator 1
 2249 0ce2 2F96      		adiw r28,15
 2250 0ce4 0FB6      		in __tmp_reg__,__SREG__
 2251 0ce6 F894      		cli
 2252 0ce8 DEBF      		out __SP_H__,r29
 2253 0cea 0FBE      		out __SREG__,__tmp_reg__
 2254 0cec CDBF      		out __SP_L__,r28
 2255 0cee DF91      		pop r29
 2256 0cf0 CF91      		pop r28
 2257 0cf2 0895      		ret
 2258               		.cfi_endproc
 2259               	.LFE76:
 2262               	nwkRxIndicateLLCommandFrame:
 2263               	.LFB77:
 601:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 602:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLCommandFrame(NwkFrame_t *frame)
 603:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2264               		.loc 2 603 0
 2265               		.cfi_startproc
 2266 0cf4 CF93      		push r28
 2267               	.LCFI48:
 2268               		.cfi_def_cfa_offset 3
 2269               		.cfi_offset 28, -2
 2270 0cf6 DF93      		push r29
 2271               	.LCFI49:
 2272               		.cfi_def_cfa_offset 4
 2273               		.cfi_offset 29, -3
 2274 0cf8 CDB7      		in r28,__SP_L__
 2275 0cfa DEB7      		in r29,__SP_H__
 2276               	.LCFI50:
 2277               		.cfi_def_cfa_register 28
 2278 0cfc 6197      		sbiw r28,17
 2279               	.LCFI51:
 2280               		.cfi_def_cfa_offset 21
 2281 0cfe 0FB6      		in __tmp_reg__,__SREG__
 2282 0d00 F894      		cli
 2283 0d02 DEBF      		out __SP_H__,r29
 2284 0d04 0FBE      		out __SREG__,__tmp_reg__
 2285 0d06 CDBF      		out __SP_L__,r28
 2286               	/* prologue: function */
 2287               	/* frame size = 17 */
 2288               	/* stack size = 19 */
 2289               	.L__stack_usage = 19
 2290 0d08 998B      		std Y+17,r25
 2291 0d0a 888B      		std Y+16,r24
 604:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2292               		.loc 2 604 0
 2293 0d0c 8889      		ldd r24,Y+16
 2294 0d0e 9989      		ldd r25,Y+17
 2295 0d10 0296      		adiw r24,2
 2296 0d12 9A83      		std Y+2,r25
 2297 0d14 8983      		std Y+1,r24
 605:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 606:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 607:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2298               		.loc 2 607 0
 2299 0d16 8889      		ldd r24,Y+16
 2300 0d18 9989      		ldd r25,Y+17
 2301 0d1a 24E2      		ldi r18,lo8(36)
 2302 0d1c FC01      		movw r30,r24
 2303 0d1e 2083      		st Z,r18
 608:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 609:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_COMMAND_ENDPOINT]) {
 2304               		.loc 2 609 0
 2305 0d20 8091 0000 		lds r24,nwkIb+12
 2306 0d24 9091 0000 		lds r25,nwkIb+12+1
 2307 0d28 892B      		or r24,r25
 2308 0d2a 01F4      		brne .L113
 610:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2309               		.loc 2 610 0
 2310 0d2c 80E0      		ldi r24,0
 2311 0d2e 00C0      		rjmp .L115
 2312               	.L113:
 611:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 612:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 613:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 614:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 615:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 616:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2313               		.loc 2 616 0
 2314 0d30 1C82      		std Y+4,__zero_reg__
 2315 0d32 1B82      		std Y+3,__zero_reg__
 617:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2316               		.loc 2 617 0
 2317 0d34 1E82      		std Y+6,__zero_reg__
 2318 0d36 1D82      		std Y+5,__zero_reg__
 618:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2319               		.loc 2 618 0
 2320 0d38 1F82      		std Y+7,__zero_reg__
 619:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2321               		.loc 2 619 0
 2322 0d3a 1886      		std Y+8,__zero_reg__
 620:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 621:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2323               		.loc 2 621 0
 2324 0d3c 8889      		ldd r24,Y+16
 2325 0d3e 9989      		ldd r25,Y+17
 2326 0d40 8F57      		subi r24,127
 2327 0d42 9F4F      		sbci r25,-1
 2328 0d44 FC01      		movw r30,r24
 2329 0d46 8081      		ld r24,Z
 2330 0d48 9181      		ldd r25,Z+1
 2331 0d4a 9C87      		std Y+12,r25
 2332 0d4c 8B87      		std Y+11,r24
 622:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2333               		.loc 2 622 0
 2334 0d4e 8889      		ldd r24,Y+16
 2335 0d50 9989      		ldd r25,Y+17
 2336 0d52 0E94 0000 		call nwkFramePayloadSize
 2337 0d56 8D87      		std Y+13,r24
 623:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2338               		.loc 2 623 0
 2339 0d58 8889      		ldd r24,Y+16
 2340 0d5a 9989      		ldd r25,Y+17
 2341 0d5c 8D57      		subi r24,125
 2342 0d5e 9F4F      		sbci r25,-1
 2343 0d60 FC01      		movw r30,r24
 2344 0d62 8081      		ld r24,Z
 2345 0d64 8E87      		std Y+14,r24
 624:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2346               		.loc 2 624 0
 2347 0d66 8889      		ldd r24,Y+16
 2348 0d68 9989      		ldd r25,Y+17
 2349 0d6a 8C57      		subi r24,124
 2350 0d6c 9F4F      		sbci r25,-1
 2351 0d6e FC01      		movw r30,r24
 2352 0d70 8081      		ld r24,Z
 2353 0d72 8F87      		std Y+15,r24
 625:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 626:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_MACCOMMAND;
 2354               		.loc 2 626 0
 2355 0d74 80E0      		ldi r24,0
 2356 0d76 92E0      		ldi r25,lo8(2)
 2357 0d78 9A87      		std Y+10,r25
 2358 0d7a 8987      		std Y+9,r24
 627:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 628:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_COMMAND_ENDPOINT](&ind);
 2359               		.loc 2 628 0
 2360 0d7c 2091 0000 		lds r18,nwkIb+12
 2361 0d80 3091 0000 		lds r19,nwkIb+12+1
 2362 0d84 CE01      		movw r24,r28
 2363 0d86 0396      		adiw r24,3
 2364 0d88 F901      		movw r30,r18
 2365 0d8a 0995      		icall
 2366               	.L115:
 2367               	/* epilogue start */
 629:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2368               		.loc 2 629 0 discriminator 1
 2369 0d8c 6196      		adiw r28,17
 2370 0d8e 0FB6      		in __tmp_reg__,__SREG__
 2371 0d90 F894      		cli
 2372 0d92 DEBF      		out __SP_H__,r29
 2373 0d94 0FBE      		out __SREG__,__tmp_reg__
 2374 0d96 CDBF      		out __SP_L__,r28
 2375 0d98 DF91      		pop r29
 2376 0d9a CF91      		pop r28
 2377 0d9c 0895      		ret
 2378               		.cfi_endproc
 2379               	.LFE77:
 2382               	nwkRxIndicateLLACKFrame:
 2383               	.LFB78:
 630:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 631:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLACKFrame(NwkFrame_t *frame)
 632:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2384               		.loc 2 632 0
 2385               		.cfi_startproc
 2386 0d9e CF93      		push r28
 2387               	.LCFI52:
 2388               		.cfi_def_cfa_offset 3
 2389               		.cfi_offset 28, -2
 2390 0da0 DF93      		push r29
 2391               	.LCFI53:
 2392               		.cfi_def_cfa_offset 4
 2393               		.cfi_offset 29, -3
 2394 0da2 CDB7      		in r28,__SP_L__
 2395 0da4 DEB7      		in r29,__SP_H__
 2396               	.LCFI54:
 2397               		.cfi_def_cfa_register 28
 2398 0da6 6197      		sbiw r28,17
 2399               	.LCFI55:
 2400               		.cfi_def_cfa_offset 21
 2401 0da8 0FB6      		in __tmp_reg__,__SREG__
 2402 0daa F894      		cli
 2403 0dac DEBF      		out __SP_H__,r29
 2404 0dae 0FBE      		out __SREG__,__tmp_reg__
 2405 0db0 CDBF      		out __SP_L__,r28
 2406               	/* prologue: function */
 2407               	/* frame size = 17 */
 2408               	/* stack size = 19 */
 2409               	.L__stack_usage = 19
 2410 0db2 998B      		std Y+17,r25
 2411 0db4 888B      		std Y+16,r24
 633:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 634:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2412               		.loc 2 634 0
 2413 0db6 8889      		ldd r24,Y+16
 2414 0db8 9989      		ldd r25,Y+17
 2415 0dba 0296      		adiw r24,2
 2416 0dbc 9A83      		std Y+2,r25
 2417 0dbe 8983      		std Y+1,r24
 635:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 636:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 637:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2418               		.loc 2 637 0
 2419 0dc0 8889      		ldd r24,Y+16
 2420 0dc2 9989      		ldd r25,Y+17
 2421 0dc4 24E2      		ldi r18,lo8(36)
 2422 0dc6 FC01      		movw r30,r24
 2423 0dc8 2083      		st Z,r18
 638:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 639:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_ACK_ENDPOINT]) {
 2424               		.loc 2 639 0
 2425 0dca 8091 0000 		lds r24,nwkIb+14
 2426 0dce 9091 0000 		lds r25,nwkIb+14+1
 2427 0dd2 892B      		or r24,r25
 2428 0dd4 01F4      		brne .L117
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2429               		.loc 2 640 0
 2430 0dd6 80E0      		ldi r24,0
 2431 0dd8 00C0      		rjmp .L119
 2432               	.L117:
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 642:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 643:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* 
 644:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * this informations are not received in a LLDN Command as they are in standart 802.15.4
 645:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 646:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 647:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2433               		.loc 2 647 0
 2434 0dda 1C82      		std Y+4,__zero_reg__
 2435 0ddc 1B82      		std Y+3,__zero_reg__
 648:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2436               		.loc 2 648 0
 2437 0dde 1E82      		std Y+6,__zero_reg__
 2438 0de0 1D82      		std Y+5,__zero_reg__
 649:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2439               		.loc 2 649 0
 2440 0de2 1F82      		std Y+7,__zero_reg__
 650:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2441               		.loc 2 650 0
 2442 0de4 1886      		std Y+8,__zero_reg__
 651:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 652:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data =  frame->payload;
 2443               		.loc 2 652 0
 2444 0de6 8889      		ldd r24,Y+16
 2445 0de8 9989      		ldd r25,Y+17
 2446 0dea 8F57      		subi r24,127
 2447 0dec 9F4F      		sbci r25,-1
 2448 0dee FC01      		movw r30,r24
 2449 0df0 8081      		ld r24,Z
 2450 0df2 9181      		ldd r25,Z+1
 2451 0df4 9C87      		std Y+12,r25
 2452 0df6 8B87      		std Y+11,r24
 653:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2453               		.loc 2 653 0
 2454 0df8 8889      		ldd r24,Y+16
 2455 0dfa 9989      		ldd r25,Y+17
 2456 0dfc 0E94 0000 		call nwkFramePayloadSize
 2457 0e00 8D87      		std Y+13,r24
 654:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2458               		.loc 2 654 0
 2459 0e02 8889      		ldd r24,Y+16
 2460 0e04 9989      		ldd r25,Y+17
 2461 0e06 8D57      		subi r24,125
 2462 0e08 9F4F      		sbci r25,-1
 2463 0e0a FC01      		movw r30,r24
 2464 0e0c 8081      		ld r24,Z
 2465 0e0e 8E87      		std Y+14,r24
 655:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2466               		.loc 2 655 0
 2467 0e10 8889      		ldd r24,Y+16
 2468 0e12 9989      		ldd r25,Y+17
 2469 0e14 8C57      		subi r24,124
 2470 0e16 9F4F      		sbci r25,-1
 2471 0e18 FC01      		movw r30,r24
 2472 0e1a 8081      		ld r24,Z
 2473 0e1c 8F87      		std Y+15,r24
 656:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 657:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_OPT_LLDN_ACK;
 2474               		.loc 2 657 0
 2475 0e1e 80E0      		ldi r24,0
 2476 0e20 90E4      		ldi r25,lo8(64)
 2477 0e22 9A87      		std Y+10,r25
 2478 0e24 8987      		std Y+9,r24
 658:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 659:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_ACK_ENDPOINT](&ind);
 2479               		.loc 2 659 0
 2480 0e26 2091 0000 		lds r18,nwkIb+14
 2481 0e2a 3091 0000 		lds r19,nwkIb+14+1
 2482 0e2e CE01      		movw r24,r28
 2483 0e30 0396      		adiw r24,3
 2484 0e32 F901      		movw r30,r18
 2485 0e34 0995      		icall
 2486               	.L119:
 2487               	/* epilogue start */
 660:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2488               		.loc 2 660 0 discriminator 1
 2489 0e36 6196      		adiw r28,17
 2490 0e38 0FB6      		in __tmp_reg__,__SREG__
 2491 0e3a F894      		cli
 2492 0e3c DEBF      		out __SP_H__,r29
 2493 0e3e 0FBE      		out __SREG__,__tmp_reg__
 2494 0e40 CDBF      		out __SP_L__,r28
 2495 0e42 DF91      		pop r29
 2496 0e44 CF91      		pop r28
 2497 0e46 0895      		ret
 2498               		.cfi_endproc
 2499               	.LFE78:
 2502               	nwkRxHandleIndication:
 2503               	.LFB79:
 661:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 662:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 663:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 664:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleIndication(NwkFrame_t *frame)
 665:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2504               		.loc 2 665 0
 2505               		.cfi_startproc
 2506 0e48 CF93      		push r28
 2507               	.LCFI56:
 2508               		.cfi_def_cfa_offset 3
 2509               		.cfi_offset 28, -2
 2510 0e4a DF93      		push r29
 2511               	.LCFI57:
 2512               		.cfi_def_cfa_offset 4
 2513               		.cfi_offset 29, -3
 2514 0e4c 00D0      		rcall .
 2515 0e4e 1F92      		push __zero_reg__
 2516               	.LCFI58:
 2517               		.cfi_def_cfa_offset 7
 2518 0e50 CDB7      		in r28,__SP_L__
 2519 0e52 DEB7      		in r29,__SP_H__
 2520               	.LCFI59:
 2521               		.cfi_def_cfa_register 28
 2522               	/* prologue: function */
 2523               	/* frame size = 3 */
 2524               	/* stack size = 5 */
 2525               	.L__stack_usage = 5
 2526 0e54 9B83      		std Y+3,r25
 2527 0e56 8A83      		std Y+2,r24
 666:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool ack;
 667:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = 0;
 2528               		.loc 2 668 0
 2529 0e58 1092 0000 		sts nwkRxAckControl,__zero_reg__
 669:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack = nwkRxIndicateDataFrame(frame);
 2530               		.loc 2 669 0
 2531 0e5c 8A81      		ldd r24,Y+2
 2532 0e5e 9B81      		ldd r25,Y+3
 2533 0e60 0E94 0000 		call nwkRxIndicateDataFrame
 2534 0e64 8983      		std Y+1,r24
 670:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 671:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == frame->header.nwkFcf.ackRequest) {
 2535               		.loc 2 671 0
 2536 0e66 8A81      		ldd r24,Y+2
 2537 0e68 9B81      		ldd r25,Y+3
 2538 0e6a FC01      		movw r30,r24
 2539 0e6c 8385      		ldd r24,Z+11
 2540 0e6e 8170      		andi r24,lo8(1)
 2541 0e70 8823      		tst r24
 2542 0e72 01F4      		brne .L121
 672:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2543               		.loc 2 672 0
 2544 0e74 1982      		std Y+1,__zero_reg__
 2545               	.L121:
 673:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 674:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 675:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == frame->header.macDstAddr &&
 2546               		.loc 2 675 0
 2547 0e76 8A81      		ldd r24,Y+2
 2548 0e78 9B81      		ldd r25,Y+3
 2549 0e7a FC01      		movw r30,r24
 2550 0e7c 8781      		ldd r24,Z+7
 2551 0e7e 9085      		ldd r25,Z+8
 2552 0e80 0196      		adiw r24,1
 2553 0e82 01F4      		brne .L122
 676:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2554               		.loc 2 676 0 discriminator 1
 2555 0e84 2091 0000 		lds r18,nwkIb
 2556 0e88 3091 0000 		lds r19,nwkIb+1
 2557 0e8c 8A81      		ldd r24,Y+2
 2558 0e8e 9B81      		ldd r25,Y+3
 2559 0e90 FC01      		movw r30,r24
 2560 0e92 8785      		ldd r24,Z+15
 2561 0e94 9089      		ldd r25,Z+16
 675:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2562               		.loc 2 675 0 discriminator 1
 2563 0e96 2817      		cp r18,r24
 2564 0e98 3907      		cpc r19,r25
 2565 0e9a 01F4      		brne .L122
 677:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			0 == frame->header.nwkFcf.multicast) {
 2566               		.loc 2 677 0
 2567 0e9c 8A81      		ldd r24,Y+2
 2568 0e9e 9B81      		ldd r25,Y+3
 2569 0ea0 FC01      		movw r30,r24
 2570 0ea2 8385      		ldd r24,Z+11
 2571 0ea4 8870      		andi r24,lo8(8)
 676:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2572               		.loc 2 676 0
 2573 0ea6 8823      		tst r24
 2574 0ea8 01F4      		brne .L122
 678:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = true;
 2575               		.loc 2 678 0
 2576 0eaa 81E0      		ldi r24,lo8(1)
 2577 0eac 8983      		std Y+1,r24
 2578               	.L122:
 679:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 680:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 681:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == frame->header.macDstPanId) {
 2579               		.loc 2 681 0
 2580 0eae 8A81      		ldd r24,Y+2
 2581 0eb0 9B81      		ldd r25,Y+3
 2582 0eb2 FC01      		movw r30,r24
 2583 0eb4 8581      		ldd r24,Z+5
 2584 0eb6 9681      		ldd r25,Z+6
 2585 0eb8 0196      		adiw r24,1
 2586 0eba 01F4      		brne .L123
 682:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2587               		.loc 2 682 0
 2588 0ebc 1982      		std Y+1,__zero_reg__
 2589               	.L123:
 683:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 684:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 685:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == nwkIb.addr) {
 2590               		.loc 2 685 0
 2591 0ebe 8091 0000 		lds r24,nwkIb
 2592 0ec2 9091 0000 		lds r25,nwkIb+1
 2593 0ec6 0196      		adiw r24,1
 2594 0ec8 01F4      		brne .L124
 686:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2595               		.loc 2 686 0
 2596 0eca 1982      		std Y+1,__zero_reg__
 2597               	.L124:
 687:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 688:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 689:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ack) {
 2598               		.loc 2 689 0
 2599 0ecc 8981      		ldd r24,Y+1
 2600 0ece 8823      		tst r24
 2601 0ed0 01F0      		breq .L125
 690:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxSendAck(frame);
 2602               		.loc 2 690 0
 2603 0ed2 8A81      		ldd r24,Y+2
 2604 0ed4 9B81      		ldd r25,Y+3
 2605 0ed6 0E94 0000 		call nwkRxSendAck
 2606               	.L125:
 691:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 692:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 693:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2607               		.loc 2 693 0
 2608 0eda 8A81      		ldd r24,Y+2
 2609 0edc 9B81      		ldd r25,Y+3
 2610 0ede 24E2      		ldi r18,lo8(36)
 2611 0ee0 FC01      		movw r30,r24
 2612 0ee2 2083      		st Z,r18
 694:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2613               		.loc 2 694 0
 2614 0ee4 0000      		nop
 2615               	/* epilogue start */
 2616 0ee6 0F90      		pop __tmp_reg__
 2617 0ee8 0F90      		pop __tmp_reg__
 2618 0eea 0F90      		pop __tmp_reg__
 2619 0eec DF91      		pop r29
 2620 0eee CF91      		pop r28
 2621 0ef0 0895      		ret
 2622               		.cfi_endproc
 2623               	.LFE79:
 2625               	.global	nwkRxTaskHandler
 2627               	nwkRxTaskHandler:
 2628               	.LFB80:
 695:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 696:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 697:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Rx Module task handler
 698:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 699:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxTaskHandler(void)
 700:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2629               		.loc 2 700 0
 2630               		.cfi_startproc
 2631 0ef2 CF93      		push r28
 2632               	.LCFI60:
 2633               		.cfi_def_cfa_offset 3
 2634               		.cfi_offset 28, -2
 2635 0ef4 DF93      		push r29
 2636               	.LCFI61:
 2637               		.cfi_def_cfa_offset 4
 2638               		.cfi_offset 29, -3
 2639 0ef6 00D0      		rcall .
 2640               	.LCFI62:
 2641               		.cfi_def_cfa_offset 6
 2642 0ef8 CDB7      		in r28,__SP_L__
 2643 0efa DEB7      		in r29,__SP_H__
 2644               	.LCFI63:
 2645               		.cfi_def_cfa_register 28
 2646               	/* prologue: function */
 2647               	/* frame size = 2 */
 2648               	/* stack size = 4 */
 2649               	.L__stack_usage = 4
 701:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame = NULL;
 2650               		.loc 2 701 0
 2651 0efc 1A82      		std Y+2,__zero_reg__
 2652 0efe 1982      		std Y+1,__zero_reg__
 702:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 703:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 2653               		.loc 2 703 0
 2654 0f00 00C0      		rjmp .L127
 2655               	.L136:
 704:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2656               		.loc 2 704 0
 2657 0f02 8981      		ldd r24,Y+1
 2658 0f04 9A81      		ldd r25,Y+2
 2659 0f06 FC01      		movw r30,r24
 2660 0f08 8081      		ld r24,Z
 2661 0f0a 882F      		mov r24,r24
 2662 0f0c 90E0      		ldi r25,0
 2663 0f0e 092E      		mov __tmp_reg__,r25
 2664 0f10 000C      		lsl r0
 2665 0f12 AA0B      		sbc r26,r26
 2666 0f14 BB0B      		sbc r27,r27
 2667 0f16 40E2      		ldi r20,lo8(32)
 2668 0f18 50E0      		ldi r21,0
 2669 0f1a 28E0      		ldi r18,lo8(8)
 2670 0f1c 30E0      		ldi r19,0
 2671 0f1e 841B      		sub r24,r20
 2672 0f20 950B      		sbc r25,r21
 2673 0f22 2817      		cp r18,r24
 2674 0f24 3907      		cpc r19,r25
 2675 0f26 00F0      		brlo .L127
 2676 0f28 8050      		subi r24,lo8(-(gs(.L129)))
 2677 0f2a 9040      		sbci r25,hi8(-(gs(.L129)))
 2678 0f2c FC01      		movw r30,r24
 2679 0f2e 0C94 0000 		jmp __tablejump2__
 2680               		.section	.progmem.gcc_sw_table,"a",@progbits
 2681               		.p2align	1
 2682               	.L129:
 2683 0000 0000      		.word gs(.L128)
 2684 0002 0000      		.word gs(.L127)
 2685 0004 0000      		.word gs(.L130)
 2686 0006 0000      		.word gs(.L127)
 2687 0008 0000      		.word gs(.L131)
 2688 000a 0000      		.word gs(.L132)
 2689 000c 0000      		.word gs(.L133)
 2690 000e 0000      		.word gs(.L134)
 2691 0010 0000      		.word gs(.L135)
 2692               		.text
 2693               	.L128:
 705:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_RECEIVED:
 706:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 707:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleReceivedFrame(frame);
 2694               		.loc 2 707 0
 2695 0f32 8981      		ldd r24,Y+1
 2696 0f34 9A81      		ldd r25,Y+2
 2697 0f36 0E94 0000 		call nwkRxHandleReceivedFrame
 708:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 709:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2698               		.loc 2 709 0
 2699 0f3a 00C0      		rjmp .L127
 2700               	.L130:
 710:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 711:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 712:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_DECRYPT:
 713:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 714:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkSecurityProcess(frame, false);
 715:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 716:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 717:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 718:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 719:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_INDICATE:
 720:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 721:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleIndication(frame);
 2701               		.loc 2 721 0
 2702 0f3c 8981      		ldd r24,Y+1
 2703 0f3e 9A81      		ldd r25,Y+2
 2704 0f40 0E94 0000 		call nwkRxHandleIndication
 722:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2705               		.loc 2 723 0
 2706 0f44 00C0      		rjmp .L127
 2707               	.L131:
 724:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 725:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 726:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_ROUTE:
 727:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 728:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRouteFrame(frame);
 729:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 730:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 731:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 732:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 733:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_FINISH:
 734:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 735:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkFrameFree(frame);
 2708               		.loc 2 735 0
 2709 0f46 8981      		ldd r24,Y+1
 2710 0f48 9A81      		ldd r25,Y+2
 2711 0f4a 0E94 0000 		call nwkFrameFree
 736:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 737:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2712               		.loc 2 737 0
 2713 0f4e 00C0      		rjmp .L127
 2714               	.L132:
 738:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 739:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_BEACON:
 740:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 741:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateBeaconFrame(frame);
 2715               		.loc 2 741 0
 2716 0f50 8981      		ldd r24,Y+1
 2717 0f52 9A81      		ldd r25,Y+2
 2718 0f54 0E94 0000 		call nwkRxIndicateBeaconFrame
 742:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 743:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2719               		.loc 2 743 0
 2720 0f58 00C0      		rjmp .L127
 2721               	.L133:
 744:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 745:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 746:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLBEACON:
 747:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 748:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLBeaconFrame(frame);
 2722               		.loc 2 748 0
 2723 0f5a 8981      		ldd r24,Y+1
 2724 0f5c 9A81      		ldd r25,Y+2
 2725 0f5e 0E94 0000 		call nwkRxIndicateLLBeaconFrame
 749:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 750:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2726               		.loc 2 750 0
 2727 0f62 00C0      		rjmp .L127
 2728               	.L134:
 751:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 752:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLCOMMAND:
 753:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 754:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLCommandFrame(frame);
 2729               		.loc 2 754 0
 2730 0f64 8981      		ldd r24,Y+1
 2731 0f66 9A81      		ldd r25,Y+2
 2732 0f68 0E94 0000 		call nwkRxIndicateLLCommandFrame
 755:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 756:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2733               		.loc 2 756 0
 2734 0f6c 00C0      		rjmp .L127
 2735               	.L135:
 757:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 758:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLACKFRAME:
 759:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 760:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLACKFrame(frame);
 2736               		.loc 2 760 0
 2737 0f6e 8981      		ldd r24,Y+1
 2738 0f70 9A81      		ldd r25,Y+2
 2739 0f72 0E94 0000 		call nwkRxIndicateLLACKFrame
 761:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 762:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2740               		.loc 2 762 0
 2741 0f76 0000      		nop
 2742               	.L127:
 703:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2743               		.loc 2 703 0
 2744 0f78 8981      		ldd r24,Y+1
 2745 0f7a 9A81      		ldd r25,Y+2
 2746 0f7c 0E94 0000 		call nwkFrameNext
 2747 0f80 9A83      		std Y+2,r25
 2748 0f82 8983      		std Y+1,r24
 2749 0f84 8981      		ldd r24,Y+1
 2750 0f86 9A81      		ldd r25,Y+2
 2751 0f88 892B      		or r24,r25
 2752 0f8a 01F0      		breq .+2
 2753 0f8c 00C0      		rjmp .L136
 763:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 764:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 765:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 766:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2754               		.loc 2 766 0
 2755 0f8e 0000      		nop
 2756               	/* epilogue start */
 2757 0f90 0F90      		pop __tmp_reg__
 2758 0f92 0F90      		pop __tmp_reg__
 2759 0f94 DF91      		pop r29
 2760 0f96 CF91      		pop r28
 2761 0f98 0895      		ret
 2762               		.cfi_endproc
 2763               	.LFE80:
 2765               	.Letext0:
 2766               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 2767               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 2768               		.file 5 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 2769               		.file 6 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 2770               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwkDataReq.h"
 2771               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 2772               		.file 9 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
 2773               		.file 10 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkRx.c
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:7      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 n
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:15     .bss.tTS:00000000 tTS
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:19     .text:00000000 nwkFramePayloadSize
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:81     .bss.nwkRxDuplicateRejectionTable:00000000 nwkRxDuplicateRejectionTable
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:86     .bss.nwkRxAckControl:00000000 nwkRxAckControl
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:91     .bss.nwkRxDuplicateRejectionTimer:00000000 nwkRxDuplicateRejectionTimer
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:96     .text:00000044 nwkRxInit
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:753    .text:00000412 nwkRxDuplicateRejectionTimerHandler
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:1151   .text:00000654 nwkRxSeriveDataInd
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:183    .text:000000b6 PHY_DataInd
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:543    .text:000002e8 nwkRxSendAck
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:715    .text:000003f6 NWK_SetAckControl
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:868    .text:000004ac nwkRxRejectDuplicate
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:1219   .text:0000069e nwkRxHandleReceivedFrame
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:1669   .text:00000978 nwkRxIndicateDataFrame
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:2008   .text:00000b86 nwkRxIndicateBeaconFrame
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:2152   .text:00000c5c nwkRxIndicateLLBeaconFrame
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:2262   .text:00000cf4 nwkRxIndicateLLCommandFrame
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:2382   .text:00000d9e nwkRxIndicateLLACKFrame
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:2502   .text:00000e48 nwkRxHandleIndication
C:\Users\guilh\AppData\Local\Temp\ccClvvtu.s:2627   .text:00000ef2 nwkRxTaskHandler

UNDEFINED SYMBOLS
NWK_OpenEndpoint
nwkFrameAlloc
nwkFrameAlloc_LLDN
memcpy
nwkFrameCommandInit
nwkTxFrame
SYS_TimerStart
nwkTxAckReceived
nwkIb
NWK_GroupIsMember
nwkTxBroadcastFrame
__tablejump2__
nwkFrameFree
nwkFrameNext
__do_clear_bss
