   1               		.file	"nwkRx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	n,1,1
  12               		.comm	tTS,4,1
  13               		.comm	macLLDNnumTimeSlots,2,1
  14               		.comm	macLLDNnumUplinkTS,2,1
  15               		.comm	macLLDNRetransmitTS,2,1
  17               	nwkFramePayloadSize:
  18               	.LFB65:
  19               		.file 1 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
   1:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /**
   2:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \file nwkFrame.h
   3:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   4:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \brief Frame buffers management interface
   5:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   6:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   8:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  10:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  13:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  16:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  20:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  23:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  26:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  38:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  40:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  41:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  42:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  43:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*
  44:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  46:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  48:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  49:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #ifndef _NWK_FRAME_H_
  50:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define _NWK_FRAME_H_
  51:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  52:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Includes ---------------------------------------------------------------*/
  53:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include <stdint.h>
  54:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include "compiler.h"
  55:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  56:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Definitions ------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define NWK_FRAME_MAX_PAYLOAD_SIZE   127
  58:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  59:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Types ------------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_SET(1)
  61:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameHeader_t {
  62:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  63:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  64:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstPanId;
  65:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstAddr;
  66:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  67:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  68:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  69:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t ackRequest : 1;
  70:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t security   : 1;
  71:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t linkLocal  : 1;
  72:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t multicast  : 1;
  73:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t beacon     : 1;
  74:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved   : 3;
  75:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} nwkFcf;
  76:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t nwkSeq;
  77:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkSrcAddr;
  78:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkDstAddr;
  79:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  80:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkSrcEndpoint : 4;
  81:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkDstEndpoint : 4;
  82:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
  83:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameHeader_t;
  84:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  85:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeader_t {
  86:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  87:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  88:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcPanId;
  89:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  90:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
  91:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
  92:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t beaconOrder			: 4;
  93:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t superframeOrder		: 4;
  94:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t finalCAPslot			: 4;
  95:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t BatteryLifeExtension	: 1;
  96:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t Reserved				: 1;
  97:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t PANCoordinator			: 1;
  98:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t AssociationPermit		: 1;
  99:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSFS;
 100:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macGTS;
 101:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macPending;
 102:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeader_t;
 103:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 104:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 105:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeaderLLDN_t {
 106:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/******* MHR *****/
 107:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// struct
 108:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// {
 109:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameType 				: 3;
 110:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SecurityEnabled 	: 1;
 111:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameVersion			: 1;
 112:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t ackRequest				: 1;
 113:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SubFrameType			: 2;
 114:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// } macFcf;
 115:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 116:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 117:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 118:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 119:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 120:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 121:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 122:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 123:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 124:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 125:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/****** MAC Payload *******/
 126:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 127:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 128:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txState 			: 3;
 129:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txDir 				: 1;
 130:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved			: 1;
 131:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t numBaseMgmtTimeslots: 3; // number of managment time slots
 132:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 										// uplink and downlink must be equal
 133:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} Flags;
 134:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 135:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t PanId;
 136:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t confSeqNumber;
 137:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t TimeSlotSize;
 138:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t NumberOfBaseTimeslotsinSuperframe;
 139:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 140:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeaderLLDN_t;
 141:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 142:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameGeneralHeaderLLDN_t {
 143:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	#if (TAL_TYPE == AT86RF233)
 144:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	#endif
 145:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// uint8_t PHR;
 146:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 147:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 148:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 149:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 150:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 151:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 152:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 153:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 154:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 155:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 156:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 157:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameGeneralHeaderLLDN_t;
 158:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 159:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 160:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameMulticastHeader_t {
 161:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nonMemberRadius    : 4;
 162:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxNonMemberRadius : 4;
 163:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t memberRadius       : 4;
 164:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxMemberRadius    : 4;
 165:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameMulticastHeader_t;
 166:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 167:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct NwkFrame_t {
 168:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t state;
 169:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t size;
 170:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 171:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 172:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameHeader_t header;
 173:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeader_t beacon;
 174:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeaderLLDN_t LLbeacon;
 175:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameGeneralHeaderLLDN_t LLgeneral;
 176:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t data[NWK_FRAME_MAX_PAYLOAD_SIZE];
 177:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 178:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 179:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t *payload;
 180:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 181:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 182:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 183:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t lqi;
 184:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			int8_t rssi;
 185:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} rx;
 186:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 187:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 188:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t status;
 189:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint16_t timeout;
 190:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t control;
 191:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			void (*confirm)(struct NwkFrame_t *frame);
 192:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} tx;
 193:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 194:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrame_t;
 195:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_RESET()
 196:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Prototypes -------------------------------------------------------------*/
 197:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameInit(void);
 198:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc(void);
 199:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameFree(NwkFrame_t *frame);
 200:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);
 201:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameCommandInit(NwkFrame_t *frame);
 202:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 203:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame);
 204:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Implementations --------------------------------------------------------*/
 205:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 206:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*************************************************************************//**
 207:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** *****************************************************************************/
 208:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** static inline uint8_t nwkFramePayloadSize(NwkFrame_t *frame)
 209:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** {
  20               		.loc 1 209 0
  21               		.cfi_startproc
  22 0000 CF93      		push r28
  23               	.LCFI0:
  24               		.cfi_def_cfa_offset 3
  25               		.cfi_offset 28, -2
  26 0002 DF93      		push r29
  27               	.LCFI1:
  28               		.cfi_def_cfa_offset 4
  29               		.cfi_offset 29, -3
  30 0004 00D0      		rcall .
  31               	.LCFI2:
  32               		.cfi_def_cfa_offset 6
  33 0006 CDB7      		in r28,__SP_L__
  34 0008 DEB7      		in r29,__SP_H__
  35               	.LCFI3:
  36               		.cfi_def_cfa_register 28
  37               	/* prologue: function */
  38               	/* frame size = 2 */
  39               	/* stack size = 4 */
  40               	.L__stack_usage = 4
  41 000a 9A83      		std Y+2,r25
  42 000c 8983      		std Y+1,r24
 210:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	return frame->size - (frame->payload - frame->data);
  43               		.loc 1 210 0
  44 000e 8981      		ldd r24,Y+1
  45 0010 9A81      		ldd r25,Y+2
  46 0012 FC01      		movw r30,r24
  47 0014 4181      		ldd r20,Z+1
  48 0016 8981      		ldd r24,Y+1
  49 0018 9A81      		ldd r25,Y+2
  50 001a 8F57      		subi r24,127
  51 001c 9F4F      		sbci r25,-1
  52 001e FC01      		movw r30,r24
  53 0020 8081      		ld r24,Z
  54 0022 9181      		ldd r25,Z+1
  55 0024 9C01      		movw r18,r24
  56 0026 8981      		ldd r24,Y+1
  57 0028 9A81      		ldd r25,Y+2
  58 002a 0296      		adiw r24,2
  59 002c B901      		movw r22,r18
  60 002e 681B      		sub r22,r24
  61 0030 790B      		sbc r23,r25
  62 0032 CB01      		movw r24,r22
  63 0034 742F      		mov r23,r20
  64 0036 781B      		sub r23,r24
  65 0038 872F      		mov r24,r23
  66               	/* epilogue start */
 211:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** }
  67               		.loc 1 211 0
  68 003a 0F90      		pop __tmp_reg__
  69 003c 0F90      		pop __tmp_reg__
  70 003e DF91      		pop r29
  71 0040 CF91      		pop r28
  72 0042 0895      		ret
  73               		.cfi_endproc
  74               	.LFE65:
  76               		.section	.bss.nwkRxDuplicateRejectionTable,"aw",@nobits
  79               	nwkRxDuplicateRejectionTable:
  80 0000 0000 0000 		.zero	250
  80      0000 0000 
  80      0000 0000 
  80      0000 0000 
  80      0000 0000 
  81               		.section	.bss.nwkRxAckControl,"aw",@nobits
  84               	nwkRxAckControl:
  85 0000 00        		.zero	1
  86               		.section	.bss.nwkRxDuplicateRejectionTimer,"aw",@nobits
  89               	nwkRxDuplicateRejectionTimer:
  90 0000 0000 0000 		.zero	13
  90      0000 0000 
  90      0000 0000 
  90      00
  91               		.text
  92               	.global	nwkRxInit
  94               	nwkRxInit:
  95               	.LFB66:
  96               		.file 2 "../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \file nwkRx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \brief Receive routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkGroup.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRoute.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkCommand.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkSecurity.h"
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRouteDiscovery.h"
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Definitions ------------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL   100 /* ms */
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define DUPLICATE_REJECTION_TTL	\
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	((NWK_DUPLICATE_REJECTION_TTL /	\
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL) + 1)
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_SERVICE_ENDPOINT_ID    0
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Types ------------------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** enum {
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_RECEIVED = 0x20,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_DECRYPT  = 0x21,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_INDICATE = 0x22,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_ROUTE    = 0x23,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_FINISH   = 0x24,
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_BEACON   = 0x25,
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLBEACON 	= 0x26,
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLCOMMAND 	= 0x27,
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLACKFRAME = 0x28,
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLDATA		= 0x29
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** };
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** typedef struct NwkDuplicateRejectionEntry_t {
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint16_t src;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t seq;
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t mask;
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t ttl;
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** } NwkDuplicateRejectionEntry_t;
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Prototypes -------------------------------------------------------------*/
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer);
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind);
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Variables --------------------------------------------------------------*/
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static NwkDuplicateRejectionEntry_t nwkRxDuplicateRejectionTable[
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DUPLICATE_REJECTION_TABLE_SIZE];
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static uint8_t nwkRxAckControl;
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static SYS_Timer_t nwkRxDuplicateRejectionTimer;
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Implementations --------------------------------------------------------*/
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Initializes the Rx module
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxInit(void)
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
  97               		.loc 2 110 0
  98               		.cfi_startproc
  99 0044 CF93      		push r28
 100               	.LCFI4:
 101               		.cfi_def_cfa_offset 3
 102               		.cfi_offset 28, -2
 103 0046 DF93      		push r29
 104               	.LCFI5:
 105               		.cfi_def_cfa_offset 4
 106               		.cfi_offset 29, -3
 107 0048 1F92      		push __zero_reg__
 108               	.LCFI6:
 109               		.cfi_def_cfa_offset 5
 110 004a CDB7      		in r28,__SP_L__
 111 004c DEB7      		in r29,__SP_H__
 112               	.LCFI7:
 113               		.cfi_def_cfa_register 28
 114               	/* prologue: function */
 115               	/* frame size = 1 */
 116               	/* stack size = 3 */
 117               	.L__stack_usage = 3
 118               	.LBB2:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 119               		.loc 2 111 0
 120 004e 1982      		std Y+1,__zero_reg__
 121 0050 00C0      		rjmp .L4
 122               	.L5:
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxDuplicateRejectionTable[i].ttl = 0;
 123               		.loc 2 112 0 discriminator 3
 124 0052 8981      		ldd r24,Y+1
 125 0054 282F      		mov r18,r24
 126 0056 30E0      		ldi r19,0
 127 0058 C901      		movw r24,r18
 128 005a 880F      		lsl r24
 129 005c 991F      		rol r25
 130 005e 880F      		lsl r24
 131 0060 991F      		rol r25
 132 0062 820F      		add r24,r18
 133 0064 931F      		adc r25,r19
 134 0066 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 135 0068 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 136 006a FC01      		movw r30,r24
 137 006c 1082      		st Z,__zero_reg__
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 138               		.loc 2 111 0 discriminator 3
 139 006e 8981      		ldd r24,Y+1
 140 0070 8F5F      		subi r24,lo8(-(1))
 141 0072 8983      		std Y+1,r24
 142               	.L4:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 143               		.loc 2 111 0 is_stmt 0 discriminator 1
 144 0074 8981      		ldd r24,Y+1
 145 0076 8233      		cpi r24,lo8(50)
 146 0078 00F0      		brlo .L5
 147               	.LBE2:
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.interval
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL;
 148               		.loc 2 116 0 is_stmt 1
 149 007a 84E6      		ldi r24,lo8(100)
 150 007c 90E0      		ldi r25,0
 151 007e A0E0      		ldi r26,0
 152 0080 B0E0      		ldi r27,0
 153 0082 8093 0000 		sts nwkRxDuplicateRejectionTimer+6,r24
 154 0086 9093 0000 		sts nwkRxDuplicateRejectionTimer+6+1,r25
 155 008a A093 0000 		sts nwkRxDuplicateRejectionTimer+6+2,r26
 156 008e B093 0000 		sts nwkRxDuplicateRejectionTimer+6+3,r27
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE;
 157               		.loc 2 117 0
 158 0092 1092 0000 		sts nwkRxDuplicateRejectionTimer+10,__zero_reg__
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.handler
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= nwkRxDuplicateRejectionTimerHandler;
 159               		.loc 2 119 0
 160 0096 80E0      		ldi r24,lo8(gs(nwkRxDuplicateRejectionTimerHandler))
 161 0098 90E0      		ldi r25,hi8(gs(nwkRxDuplicateRejectionTimerHandler))
 162 009a 9093 0000 		sts nwkRxDuplicateRejectionTimer+11+1,r25
 163 009e 8093 0000 		sts nwkRxDuplicateRejectionTimer+11,r24
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_OpenEndpoint(NWK_SERVICE_ENDPOINT_ID, nwkRxSeriveDataInd);
 164               		.loc 2 121 0
 165 00a2 60E0      		ldi r22,lo8(gs(nwkRxSeriveDataInd))
 166 00a4 70E0      		ldi r23,hi8(gs(nwkRxSeriveDataInd))
 167 00a6 80E0      		ldi r24,0
 168 00a8 0E94 0000 		call NWK_OpenEndpoint
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 169               		.loc 2 122 0
 170 00ac 0000      		nop
 171               	/* epilogue start */
 172 00ae 0F90      		pop __tmp_reg__
 173 00b0 DF91      		pop r29
 174 00b2 CF91      		pop r28
 175 00b4 0895      		ret
 176               		.cfi_endproc
 177               	.LFE66:
 179               		.weak	PHY_DataInd
 181               	PHY_DataInd:
 182               	.LFB67:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void __attribute__((weak)) PHY_DataInd(PHY_DataInd_t *ind)
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 183               		.loc 2 127 0
 184               		.cfi_startproc
 185 00b6 CF93      		push r28
 186               	.LCFI8:
 187               		.cfi_def_cfa_offset 3
 188               		.cfi_offset 28, -2
 189 00b8 DF93      		push r29
 190               	.LCFI9:
 191               		.cfi_def_cfa_offset 4
 192               		.cfi_offset 29, -3
 193 00ba 00D0      		rcall .
 194 00bc 00D0      		rcall .
 195               	.LCFI10:
 196               		.cfi_def_cfa_offset 8
 197 00be CDB7      		in r28,__SP_L__
 198 00c0 DEB7      		in r29,__SP_H__
 199               	.LCFI11:
 200               		.cfi_def_cfa_register 28
 201               	/* prologue: function */
 202               	/* frame size = 4 */
 203               	/* stack size = 6 */
 204               	.L__stack_usage = 6
 205 00c2 9C83      		std Y+4,r25
 206 00c4 8B83      		std Y+3,r24
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame;
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* implementar contador */
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-Beacon frame
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	printf("\n");
 207               		.loc 2 132 0
 208 00c6 8AE0      		ldi r24,lo8(10)
 209 00c8 90E0      		ldi r25,0
 210 00ca 0E94 0000 		call putchar
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	for (int i = 0; i < ind->size; i++)
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	{
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 		printf("%hhx",ind->data[i]);
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	}
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(0x0c == ind->data[0])
 211               		.loc 2 139 0
 212 00ce 8B81      		ldd r24,Y+3
 213 00d0 9C81      		ldd r25,Y+4
 214 00d2 FC01      		movw r30,r24
 215 00d4 8081      		ld r24,Z
 216 00d6 9181      		ldd r25,Z+1
 217 00d8 FC01      		movw r30,r24
 218 00da 8081      		ld r24,Z
 219 00dc 8C30      		cpi r24,lo8(12)
 220 00de 01F4      		brne .L7
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameBeaconHeaderLLDN_t))
 221               		.loc 2 141 0
 222 00e0 8B81      		ldd r24,Y+3
 223 00e2 9C81      		ldd r25,Y+4
 224 00e4 FC01      		movw r30,r24
 225 00e6 8281      		ldd r24,Z+2
 226 00e8 8830      		cpi r24,lo8(8)
 227 00ea 00F0      		brlo .+2
 228 00ec 00C0      		rjmp .L8
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 229               		.loc 2 143 0
 230 00ee 00C0      		rjmp .L6
 231               	.L7:
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-MAC Command frame
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0xcc == ind->data[0] || 0x8c == ind->data[0] || 0x4c == ind->data[0])
 232               		.loc 2 147 0
 233 00f0 8B81      		ldd r24,Y+3
 234 00f2 9C81      		ldd r25,Y+4
 235 00f4 FC01      		movw r30,r24
 236 00f6 8081      		ld r24,Z
 237 00f8 9181      		ldd r25,Z+1
 238 00fa FC01      		movw r30,r24
 239 00fc 8081      		ld r24,Z
 240 00fe 8C3C      		cpi r24,lo8(-52)
 241 0100 01F0      		breq .L10
 242               		.loc 2 147 0 is_stmt 0 discriminator 1
 243 0102 8B81      		ldd r24,Y+3
 244 0104 9C81      		ldd r25,Y+4
 245 0106 FC01      		movw r30,r24
 246 0108 8081      		ld r24,Z
 247 010a 9181      		ldd r25,Z+1
 248 010c FC01      		movw r30,r24
 249 010e 8081      		ld r24,Z
 250 0110 8C38      		cpi r24,lo8(-116)
 251 0112 01F0      		breq .L10
 252               		.loc 2 147 0 discriminator 2
 253 0114 8B81      		ldd r24,Y+3
 254 0116 9C81      		ldd r25,Y+4
 255 0118 FC01      		movw r30,r24
 256 011a 8081      		ld r24,Z
 257 011c 9181      		ldd r25,Z+1
 258 011e FC01      		movw r30,r24
 259 0120 8081      		ld r24,Z
 260 0122 8C34      		cpi r24,lo8(76)
 261 0124 01F4      		brne .L11
 262               	.L10:
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameGeneralHeaderLLDN_t))
 263               		.loc 2 149 0 is_stmt 1
 264 0126 8B81      		ldd r24,Y+3
 265 0128 9C81      		ldd r25,Y+4
 266 012a FC01      		movw r30,r24
 267 012c 8281      		ldd r24,Z+2
 268 012e 8330      		cpi r24,lo8(3)
 269 0130 00F0      		brlo .+2
 270 0132 00C0      		rjmp .L8
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 271               		.loc 2 151 0
 272 0134 00C0      		rjmp .L6
 273               	.L11:
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x88 == ind->data[1])
 274               		.loc 2 154 0
 275 0136 8B81      		ldd r24,Y+3
 276 0138 9C81      		ldd r25,Y+4
 277 013a FC01      		movw r30,r24
 278 013c 8081      		ld r24,Z
 279 013e 9181      		ldd r25,Z+1
 280 0140 0196      		adiw r24,1
 281 0142 FC01      		movw r30,r24
 282 0144 8081      		ld r24,Z
 283 0146 8838      		cpi r24,lo8(-120)
 284 0148 01F4      		brne .L13
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x61 != ind->data[0] && 0x41 != ind->data[0]) || ind->size < sizeof(NwkFrameHeader_t))
 285               		.loc 2 156 0
 286 014a 8B81      		ldd r24,Y+3
 287 014c 9C81      		ldd r25,Y+4
 288 014e FC01      		movw r30,r24
 289 0150 8081      		ld r24,Z
 290 0152 9181      		ldd r25,Z+1
 291 0154 FC01      		movw r30,r24
 292 0156 8081      		ld r24,Z
 293 0158 8136      		cpi r24,lo8(97)
 294 015a 01F0      		breq .L14
 295               		.loc 2 156 0 is_stmt 0 discriminator 1
 296 015c 8B81      		ldd r24,Y+3
 297 015e 9C81      		ldd r25,Y+4
 298 0160 FC01      		movw r30,r24
 299 0162 8081      		ld r24,Z
 300 0164 9181      		ldd r25,Z+1
 301 0166 FC01      		movw r30,r24
 302 0168 8081      		ld r24,Z
 303 016a 8134      		cpi r24,lo8(65)
 304 016c 01F0      		breq .+2
 305 016e 00C0      		rjmp .L29
 306               	.L14:
 307               		.loc 2 156 0 discriminator 3
 308 0170 8B81      		ldd r24,Y+3
 309 0172 9C81      		ldd r25,Y+4
 310 0174 FC01      		movw r30,r24
 311 0176 8281      		ldd r24,Z+2
 312 0178 8031      		cpi r24,lo8(16)
 313 017a 00F4      		brsh .L8
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 314               		.loc 2 158 0 is_stmt 1
 315 017c 00C0      		rjmp .L29
 316               	.L13:
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x80 == ind->data[1])
 317               		.loc 2 161 0
 318 017e 8B81      		ldd r24,Y+3
 319 0180 9C81      		ldd r25,Y+4
 320 0182 FC01      		movw r30,r24
 321 0184 8081      		ld r24,Z
 322 0186 9181      		ldd r25,Z+1
 323 0188 0196      		adiw r24,1
 324 018a FC01      		movw r30,r24
 325 018c 8081      		ld r24,Z
 326 018e 8038      		cpi r24,lo8(-128)
 327 0190 01F0      		breq .+2
 328 0192 00C0      		rjmp .L30
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x00 != ind->data[0]) || ind->size < (sizeof(NwkFrameBeaconHeader_t)))
 329               		.loc 2 163 0
 330 0194 8B81      		ldd r24,Y+3
 331 0196 9C81      		ldd r25,Y+4
 332 0198 FC01      		movw r30,r24
 333 019a 8081      		ld r24,Z
 334 019c 9181      		ldd r25,Z+1
 335 019e FC01      		movw r30,r24
 336 01a0 8081      		ld r24,Z
 337 01a2 8823      		tst r24
 338 01a4 01F0      		breq .+2
 339 01a6 00C0      		rjmp .L31
 340               		.loc 2 163 0 is_stmt 0 discriminator 1
 341 01a8 8B81      		ldd r24,Y+3
 342 01aa 9C81      		ldd r25,Y+4
 343 01ac FC01      		movw r30,r24
 344 01ae 8281      		ldd r24,Z+2
 345 01b0 8B30      		cpi r24,lo8(11)
 346 01b2 00F4      		brsh .+2
 347 01b4 00C0      		rjmp .L31
 348               	.L8:
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(ind->data[1] == 0x88 || ind->data[1] == 0x80)
 349               		.loc 2 173 0 is_stmt 1
 350 01b6 8B81      		ldd r24,Y+3
 351 01b8 9C81      		ldd r25,Y+4
 352 01ba FC01      		movw r30,r24
 353 01bc 8081      		ld r24,Z
 354 01be 9181      		ldd r25,Z+1
 355 01c0 0196      		adiw r24,1
 356 01c2 FC01      		movw r30,r24
 357 01c4 8081      		ld r24,Z
 358 01c6 8838      		cpi r24,lo8(-120)
 359 01c8 01F0      		breq .L18
 360               		.loc 2 173 0 is_stmt 0 discriminator 1
 361 01ca 8B81      		ldd r24,Y+3
 362 01cc 9C81      		ldd r25,Y+4
 363 01ce FC01      		movw r30,r24
 364 01d0 8081      		ld r24,Z
 365 01d2 9181      		ldd r25,Z+1
 366 01d4 0196      		adiw r24,1
 367 01d6 FC01      		movw r30,r24
 368 01d8 8081      		ld r24,Z
 369 01da 8038      		cpi r24,lo8(-128)
 370 01dc 01F4      		brne .L19
 371               	.L18:
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc())) {
 372               		.loc 2 175 0 is_stmt 1
 373 01de 0E94 0000 		call nwkFrameAlloc
 374 01e2 9A83      		std Y+2,r25
 375 01e4 8983      		std Y+1,r24
 376 01e6 8981      		ldd r24,Y+1
 377 01e8 9A81      		ldd r25,Y+2
 378 01ea 892B      		or r24,r25
 379 01ec 01F4      		brne .+2
 380 01ee 00C0      		rjmp .L32
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame received is NwkFrameHeader change state to Receveid
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is a 802.15.4 beacon change state to Beacon
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = ((0x88 == ind->data[1]) ? NWK_RX_STATE_RECEIVED : NWK_RX_STATE_BEACON);
 381               		.loc 2 180 0
 382 01f0 8B81      		ldd r24,Y+3
 383 01f2 9C81      		ldd r25,Y+4
 384 01f4 FC01      		movw r30,r24
 385 01f6 8081      		ld r24,Z
 386 01f8 9181      		ldd r25,Z+1
 387 01fa 0196      		adiw r24,1
 388 01fc FC01      		movw r30,r24
 389 01fe 8081      		ld r24,Z
 390 0200 8838      		cpi r24,lo8(-120)
 391 0202 01F4      		brne .L21
 392               		.loc 2 180 0 is_stmt 0 discriminator 1
 393 0204 20E2      		ldi r18,lo8(32)
 394 0206 00C0      		rjmp .L22
 395               	.L21:
 396               		.loc 2 180 0 discriminator 2
 397 0208 25E2      		ldi r18,lo8(37)
 398               	.L22:
 399               		.loc 2 180 0 discriminator 4
 400 020a 8981      		ldd r24,Y+1
 401 020c 9A81      		ldd r25,Y+2
 402 020e FC01      		movw r30,r24
 403 0210 2083      		st Z,r18
 404 0212 00C0      		rjmp .L23
 405               	.L19:
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// allocate frame buffer according to received frame
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(ind->data[0] == 0x0c)
 406               		.loc 2 183 0 is_stmt 1
 407 0214 8B81      		ldd r24,Y+3
 408 0216 9C81      		ldd r25,Y+4
 409 0218 FC01      		movw r30,r24
 410 021a 8081      		ld r24,Z
 411 021c 9181      		ldd r25,Z+1
 412 021e FC01      		movw r30,r24
 413 0220 8081      		ld r24,Z
 414 0222 8C30      		cpi r24,lo8(12)
 415 0224 01F4      		brne .L24
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-Beacon frame
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(true))){
 416               		.loc 2 186 0
 417 0226 81E0      		ldi r24,lo8(1)
 418 0228 0E94 0000 		call nwkFrameAlloc_LLDN
 419 022c 9A83      		std Y+2,r25
 420 022e 8983      		std Y+1,r24
 421 0230 8981      		ldd r24,Y+1
 422 0232 9A81      		ldd r25,Y+2
 423 0234 892B      		or r24,r25
 424 0236 01F4      		brne .+2
 425 0238 00C0      		rjmp .L33
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-Beacon change state to LLBEACON
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLBEACON;
 426               		.loc 2 190 0
 427 023a 8981      		ldd r24,Y+1
 428 023c 9A81      		ldd r25,Y+2
 429 023e 26E2      		ldi r18,lo8(38)
 430 0240 FC01      		movw r30,r24
 431 0242 2083      		st Z,r18
 432 0244 00C0      		rjmp .L23
 433               	.L24:
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-MAC command or LL-Data frame
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(false))){
 434               		.loc 2 195 0
 435 0246 80E0      		ldi r24,0
 436 0248 0E94 0000 		call nwkFrameAlloc_LLDN
 437 024c 9A83      		std Y+2,r25
 438 024e 8983      		std Y+1,r24
 439 0250 8981      		ldd r24,Y+1
 440 0252 9A81      		ldd r25,Y+2
 441 0254 892B      		or r24,r25
 442 0256 01F4      		brne .+2
 443 0258 00C0      		rjmp .L34
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-AckFrame change state to LLACKFRAME
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-MACComand change state to LLCOMMAND
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->data[0] == 0x8c) 
 444               		.loc 2 200 0
 445 025a 8B81      		ldd r24,Y+3
 446 025c 9C81      		ldd r25,Y+4
 447 025e FC01      		movw r30,r24
 448 0260 8081      		ld r24,Z
 449 0262 9181      		ldd r25,Z+1
 450 0264 FC01      		movw r30,r24
 451 0266 8081      		ld r24,Z
 452 0268 8C38      		cpi r24,lo8(-116)
 453 026a 01F4      		brne .L27
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLACKFRAME;
 454               		.loc 2 201 0
 455 026c 8981      		ldd r24,Y+1
 456 026e 9A81      		ldd r25,Y+2
 457 0270 28E2      		ldi r18,lo8(40)
 458 0272 FC01      		movw r30,r24
 459 0274 2083      		st Z,r18
 460 0276 00C0      		rjmp .L23
 461               	.L27:
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if(ind->data[0] == 0xcc)
 462               		.loc 2 202 0
 463 0278 8B81      		ldd r24,Y+3
 464 027a 9C81      		ldd r25,Y+4
 465 027c FC01      		movw r30,r24
 466 027e 8081      		ld r24,Z
 467 0280 9181      		ldd r25,Z+1
 468 0282 FC01      		movw r30,r24
 469 0284 8081      		ld r24,Z
 470 0286 8C3C      		cpi r24,lo8(-52)
 471 0288 01F4      		brne .L28
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLCOMMAND;
 472               		.loc 2 203 0
 473 028a 8981      		ldd r24,Y+1
 474 028c 9A81      		ldd r25,Y+2
 475 028e 27E2      		ldi r18,lo8(39)
 476 0290 FC01      		movw r30,r24
 477 0292 2083      		st Z,r18
 478 0294 00C0      		rjmp .L23
 479               	.L28:
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLDATA;	
 480               		.loc 2 205 0
 481 0296 8981      		ldd r24,Y+1
 482 0298 9A81      		ldd r25,Y+2
 483 029a 29E2      		ldi r18,lo8(41)
 484 029c FC01      		movw r30,r24
 485 029e 2083      		st Z,r18
 486               	.L23:
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size = ind->size;
 487               		.loc 2 208 0
 488 02a0 8B81      		ldd r24,Y+3
 489 02a2 9C81      		ldd r25,Y+4
 490 02a4 FC01      		movw r30,r24
 491 02a6 2281      		ldd r18,Z+2
 492 02a8 8981      		ldd r24,Y+1
 493 02aa 9A81      		ldd r25,Y+2
 494 02ac FC01      		movw r30,r24
 495 02ae 2183      		std Z+1,r18
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\nframe->size = %hhx", frame->size);
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.lqi = ind->lqi;
 496               		.loc 2 210 0
 497 02b0 8B81      		ldd r24,Y+3
 498 02b2 9C81      		ldd r25,Y+4
 499 02b4 FC01      		movw r30,r24
 500 02b6 2381      		ldd r18,Z+3
 501 02b8 8981      		ldd r24,Y+1
 502 02ba 9A81      		ldd r25,Y+2
 503 02bc 8D57      		subi r24,125
 504 02be 9F4F      		sbci r25,-1
 505 02c0 FC01      		movw r30,r24
 506 02c2 2083      		st Z,r18
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.rssi = ind->rssi;
 507               		.loc 2 211 0
 508 02c4 8B81      		ldd r24,Y+3
 509 02c6 9C81      		ldd r25,Y+4
 510 02c8 FC01      		movw r30,r24
 511 02ca 2481      		ldd r18,Z+4
 512 02cc 8981      		ldd r24,Y+1
 513 02ce 9A81      		ldd r25,Y+2
 514 02d0 8C57      		subi r24,124
 515 02d2 9F4F      		sbci r25,-1
 516 02d4 FC01      		movw r30,r24
 517 02d6 2083      		st Z,r18
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	memcpy(frame->data, ind->data, ind->size);
 518               		.loc 2 212 0
 519 02d8 8B81      		ldd r24,Y+3
 520 02da 9C81      		ldd r25,Y+4
 521 02dc FC01      		movw r30,r24
 522 02de 8281      		ldd r24,Z+2
 523 02e0 482F      		mov r20,r24
 524 02e2 50E0      		ldi r21,0
 525 02e4 8B81      		ldd r24,Y+3
 526 02e6 9C81      		ldd r25,Y+4
 527 02e8 FC01      		movw r30,r24
 528 02ea 2081      		ld r18,Z
 529 02ec 3181      		ldd r19,Z+1
 530 02ee 8981      		ldd r24,Y+1
 531 02f0 9A81      		ldd r25,Y+2
 532 02f2 0296      		adiw r24,2
 533 02f4 B901      		movw r22,r18
 534 02f6 0E94 0000 		call memcpy
 535 02fa 00C0      		rjmp .L6
 536               	.L29:
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 537               		.loc 2 158 0
 538 02fc 0000      		nop
 539 02fe 00C0      		rjmp .L6
 540               	.L30:
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 541               		.loc 2 170 0
 542 0300 0000      		nop
 543 0302 00C0      		rjmp .L6
 544               	.L31:
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 545               		.loc 2 165 0
 546 0304 0000      		nop
 547 0306 00C0      		rjmp .L6
 548               	.L32:
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 549               		.loc 2 176 0
 550 0308 0000      		nop
 551 030a 00C0      		rjmp .L6
 552               	.L33:
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 553               		.loc 2 187 0
 554 030c 0000      		nop
 555 030e 00C0      		rjmp .L6
 556               	.L34:
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 557               		.loc 2 196 0
 558 0310 0000      		nop
 559               	.L6:
 560               	/* epilogue start */
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\nframe->payload[2] = %hhx", frame->payload[2]);
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 561               		.loc 2 215 0
 562 0312 0F90      		pop __tmp_reg__
 563 0314 0F90      		pop __tmp_reg__
 564 0316 0F90      		pop __tmp_reg__
 565 0318 0F90      		pop __tmp_reg__
 566 031a DF91      		pop r29
 567 031c CF91      		pop r28
 568 031e 0895      		ret
 569               		.cfi_endproc
 570               	.LFE67:
 573               	nwkRxSendAck:
 574               	.LFB68:
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxSendAck(NwkFrame_t *frame)
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 575               		.loc 2 220 0
 576               		.cfi_startproc
 577 0320 CF93      		push r28
 578               	.LCFI12:
 579               		.cfi_def_cfa_offset 3
 580               		.cfi_offset 28, -2
 581 0322 DF93      		push r29
 582               	.LCFI13:
 583               		.cfi_def_cfa_offset 4
 584               		.cfi_offset 29, -3
 585 0324 00D0      		rcall .
 586 0326 00D0      		rcall .
 587 0328 00D0      		rcall .
 588               	.LCFI14:
 589               		.cfi_def_cfa_offset 10
 590 032a CDB7      		in r28,__SP_L__
 591 032c DEB7      		in r29,__SP_H__
 592               	.LCFI15:
 593               		.cfi_def_cfa_register 28
 594               	/* prologue: function */
 595               	/* frame size = 6 */
 596               	/* stack size = 8 */
 597               	.L__stack_usage = 8
 598 032e 9E83      		std Y+6,r25
 599 0330 8D83      		std Y+5,r24
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *ack;
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkCommandAck_t *command;
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (ack = nwkFrameAlloc())) {
 600               		.loc 2 224 0
 601 0332 0E94 0000 		call nwkFrameAlloc
 602 0336 9A83      		std Y+2,r25
 603 0338 8983      		std Y+1,r24
 604 033a 8981      		ldd r24,Y+1
 605 033c 9A81      		ldd r25,Y+2
 606 033e 892B      		or r24,r25
 607 0340 01F4      		brne .+2
 608 0342 00C0      		rjmp .L38
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size += sizeof(NwkFrameHeader_t);
 609               		.loc 2 228 0
 610 0344 8D81      		ldd r24,Y+5
 611 0346 9E81      		ldd r25,Y+6
 612 0348 FC01      		movw r30,r24
 613 034a 8181      		ldd r24,Z+1
 614 034c 20E1      		ldi r18,lo8(16)
 615 034e 280F      		add r18,r24
 616 0350 8D81      		ldd r24,Y+5
 617 0352 9E81      		ldd r25,Y+6
 618 0354 FC01      		movw r30,r24
 619 0356 2183      		std Z+1,r18
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->payload += sizeof(NwkFrameHeader_t);
 620               		.loc 2 229 0
 621 0358 8D81      		ldd r24,Y+5
 622 035a 9E81      		ldd r25,Y+6
 623 035c 8F57      		subi r24,127
 624 035e 9F4F      		sbci r25,-1
 625 0360 FC01      		movw r30,r24
 626 0362 8081      		ld r24,Z
 627 0364 9181      		ldd r25,Z+1
 628 0366 9C01      		movw r18,r24
 629 0368 205F      		subi r18,-16
 630 036a 3F4F      		sbci r19,-1
 631 036c 8D81      		ldd r24,Y+5
 632 036e 9E81      		ldd r25,Y+6
 633 0370 8F57      		subi r24,127
 634 0372 9F4F      		sbci r25,-1
 635 0374 FC01      		movw r30,r24
 636 0376 3183      		std Z+1,r19
 637 0378 2083      		st Z,r18
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkFrameCommandInit(ack);
 638               		.loc 2 231 0
 639 037a 8981      		ldd r24,Y+1
 640 037c 9A81      		ldd r25,Y+2
 641 037e 0E94 0000 		call nwkFrameCommandInit
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->size += sizeof(NwkCommandAck_t);
 642               		.loc 2 233 0
 643 0382 8981      		ldd r24,Y+1
 644 0384 9A81      		ldd r25,Y+2
 645 0386 FC01      		movw r30,r24
 646 0388 8181      		ldd r24,Z+1
 647 038a 23E0      		ldi r18,lo8(3)
 648 038c 280F      		add r18,r24
 649 038e 8981      		ldd r24,Y+1
 650 0390 9A81      		ldd r25,Y+2
 651 0392 FC01      		movw r30,r24
 652 0394 2183      		std Z+1,r18
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->tx.confirm = NULL;
 653               		.loc 2 234 0
 654 0396 8981      		ldd r24,Y+1
 655 0398 9A81      		ldd r25,Y+2
 656 039a 8957      		subi r24,121
 657 039c 9F4F      		sbci r25,-1
 658 039e FC01      		movw r30,r24
 659 03a0 1182      		std Z+1,__zero_reg__
 660 03a2 1082      		st Z,__zero_reg__
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkFcf.security = frame->header.nwkFcf.security;
 661               		.loc 2 236 0
 662 03a4 8D81      		ldd r24,Y+5
 663 03a6 9E81      		ldd r25,Y+6
 664 03a8 FC01      		movw r30,r24
 665 03aa 8385      		ldd r24,Z+11
 666 03ac 81FB      		bst r24,1
 667 03ae 2227      		clr r18
 668 03b0 20F9      		bld r18,0
 669 03b2 8981      		ldd r24,Y+1
 670 03b4 9A81      		ldd r25,Y+2
 671 03b6 2170      		andi r18,lo8(1)
 672 03b8 220F      		lsl r18
 673 03ba FC01      		movw r30,r24
 674 03bc 3385      		ldd r19,Z+11
 675 03be 3D7F      		andi r19,lo8(-3)
 676 03c0 232B      		or r18,r19
 677 03c2 FC01      		movw r30,r24
 678 03c4 2387      		std Z+11,r18
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 679               		.loc 2 237 0
 680 03c6 8D81      		ldd r24,Y+5
 681 03c8 9E81      		ldd r25,Y+6
 682 03ca FC01      		movw r30,r24
 683 03cc 2585      		ldd r18,Z+13
 684 03ce 3685      		ldd r19,Z+14
 685 03d0 8981      		ldd r24,Y+1
 686 03d2 9A81      		ldd r25,Y+2
 687 03d4 FC01      		movw r30,r24
 688 03d6 308B      		std Z+16,r19
 689 03d8 2787      		std Z+15,r18
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command = (NwkCommandAck_t *)ack->payload;
 690               		.loc 2 239 0
 691 03da 8981      		ldd r24,Y+1
 692 03dc 9A81      		ldd r25,Y+2
 693 03de 8F57      		subi r24,127
 694 03e0 9F4F      		sbci r25,-1
 695 03e2 FC01      		movw r30,r24
 696 03e4 8081      		ld r24,Z
 697 03e6 9181      		ldd r25,Z+1
 698 03e8 9C83      		std Y+4,r25
 699 03ea 8B83      		std Y+3,r24
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->id = NWK_COMMAND_ACK;
 700               		.loc 2 240 0
 701 03ec 8B81      		ldd r24,Y+3
 702 03ee 9C81      		ldd r25,Y+4
 703 03f0 FC01      		movw r30,r24
 704 03f2 1082      		st Z,__zero_reg__
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->control = nwkRxAckControl;
 705               		.loc 2 241 0
 706 03f4 2091 0000 		lds r18,nwkRxAckControl
 707 03f8 8B81      		ldd r24,Y+3
 708 03fa 9C81      		ldd r25,Y+4
 709 03fc FC01      		movw r30,r24
 710 03fe 2283      		std Z+2,r18
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->seq = frame->header.nwkSeq;
 711               		.loc 2 242 0
 712 0400 8D81      		ldd r24,Y+5
 713 0402 9E81      		ldd r25,Y+6
 714 0404 FC01      		movw r30,r24
 715 0406 2485      		ldd r18,Z+12
 716 0408 8B81      		ldd r24,Y+3
 717 040a 9C81      		ldd r25,Y+4
 718 040c FC01      		movw r30,r24
 719 040e 2183      		std Z+1,r18
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkTxFrame(ack);
 720               		.loc 2 244 0
 721 0410 8981      		ldd r24,Y+1
 722 0412 9A81      		ldd r25,Y+2
 723 0414 0E94 0000 		call nwkTxFrame
 724 0418 00C0      		rjmp .L35
 725               	.L38:
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 726               		.loc 2 225 0
 727 041a 0000      		nop
 728               	.L35:
 729               	/* epilogue start */
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 730               		.loc 2 245 0
 731 041c 2696      		adiw r28,6
 732 041e 0FB6      		in __tmp_reg__,__SREG__
 733 0420 F894      		cli
 734 0422 DEBF      		out __SP_H__,r29
 735 0424 0FBE      		out __SREG__,__tmp_reg__
 736 0426 CDBF      		out __SP_L__,r28
 737 0428 DF91      		pop r29
 738 042a CF91      		pop r28
 739 042c 0895      		ret
 740               		.cfi_endproc
 741               	.LFE68:
 743               	.global	NWK_SetAckControl
 745               	NWK_SetAckControl:
 746               	.LFB69:
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void NWK_SetAckControl(uint8_t control)
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 747               		.loc 2 250 0
 748               		.cfi_startproc
 749 042e CF93      		push r28
 750               	.LCFI16:
 751               		.cfi_def_cfa_offset 3
 752               		.cfi_offset 28, -2
 753 0430 DF93      		push r29
 754               	.LCFI17:
 755               		.cfi_def_cfa_offset 4
 756               		.cfi_offset 29, -3
 757 0432 1F92      		push __zero_reg__
 758               	.LCFI18:
 759               		.cfi_def_cfa_offset 5
 760 0434 CDB7      		in r28,__SP_L__
 761 0436 DEB7      		in r29,__SP_H__
 762               	.LCFI19:
 763               		.cfi_def_cfa_register 28
 764               	/* prologue: function */
 765               	/* frame size = 1 */
 766               	/* stack size = 3 */
 767               	.L__stack_usage = 3
 768 0438 8983      		std Y+1,r24
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = control;
 769               		.loc 2 251 0
 770 043a 8981      		ldd r24,Y+1
 771 043c 8093 0000 		sts nwkRxAckControl,r24
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 772               		.loc 2 252 0
 773 0440 0000      		nop
 774               	/* epilogue start */
 775 0442 0F90      		pop __tmp_reg__
 776 0444 DF91      		pop r29
 777 0446 CF91      		pop r28
 778 0448 0895      		ret
 779               		.cfi_endproc
 780               	.LFE69:
 783               	nwkRxDuplicateRejectionTimerHandler:
 784               	.LFB70:
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxDecryptConf(NwkFrame_t *frame, bool status)
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (status) {
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_INDICATE;
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else {
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_FINISH;
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer)
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 785               		.loc 2 272 0
 786               		.cfi_startproc
 787 044a CF93      		push r28
 788               	.LCFI20:
 789               		.cfi_def_cfa_offset 3
 790               		.cfi_offset 28, -2
 791 044c DF93      		push r29
 792               	.LCFI21:
 793               		.cfi_def_cfa_offset 4
 794               		.cfi_offset 29, -3
 795 044e 00D0      		rcall .
 796 0450 00D0      		rcall .
 797               	.LCFI22:
 798               		.cfi_def_cfa_offset 8
 799 0452 CDB7      		in r28,__SP_L__
 800 0454 DEB7      		in r29,__SP_H__
 801               	.LCFI23:
 802               		.cfi_def_cfa_register 28
 803               	/* prologue: function */
 804               	/* frame size = 4 */
 805               	/* stack size = 6 */
 806               	.L__stack_usage = 6
 807 0456 9C83      		std Y+4,r25
 808 0458 8B83      		std Y+3,r24
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool restart = false;
 809               		.loc 2 273 0
 810 045a 1982      		std Y+1,__zero_reg__
 811               	.LBB3:
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 812               		.loc 2 275 0
 813 045c 1A82      		std Y+2,__zero_reg__
 814 045e 00C0      		rjmp .L41
 815               	.L43:
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 816               		.loc 2 276 0
 817 0460 8A81      		ldd r24,Y+2
 818 0462 282F      		mov r18,r24
 819 0464 30E0      		ldi r19,0
 820 0466 C901      		movw r24,r18
 821 0468 880F      		lsl r24
 822 046a 991F      		rol r25
 823 046c 880F      		lsl r24
 824 046e 991F      		rol r25
 825 0470 820F      		add r24,r18
 826 0472 931F      		adc r25,r19
 827 0474 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 828 0476 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 829 0478 FC01      		movw r30,r24
 830 047a 8081      		ld r24,Z
 831 047c 8823      		tst r24
 832 047e 01F0      		breq .L42
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxDuplicateRejectionTable[i].ttl--;
 833               		.loc 2 277 0
 834 0480 8A81      		ldd r24,Y+2
 835 0482 282F      		mov r18,r24
 836 0484 30E0      		ldi r19,0
 837 0486 C901      		movw r24,r18
 838 0488 880F      		lsl r24
 839 048a 991F      		rol r25
 840 048c 880F      		lsl r24
 841 048e 991F      		rol r25
 842 0490 820F      		add r24,r18
 843 0492 931F      		adc r25,r19
 844 0494 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 845 0496 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 846 0498 FC01      		movw r30,r24
 847 049a 8081      		ld r24,Z
 848 049c 4FEF      		ldi r20,lo8(-1)
 849 049e 480F      		add r20,r24
 850 04a0 C901      		movw r24,r18
 851 04a2 880F      		lsl r24
 852 04a4 991F      		rol r25
 853 04a6 880F      		lsl r24
 854 04a8 991F      		rol r25
 855 04aa 820F      		add r24,r18
 856 04ac 931F      		adc r25,r19
 857 04ae 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 858 04b0 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 859 04b2 FC01      		movw r30,r24
 860 04b4 4083      		st Z,r20
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			restart = true;
 861               		.loc 2 278 0
 862 04b6 81E0      		ldi r24,lo8(1)
 863 04b8 8983      		std Y+1,r24
 864               	.L42:
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 865               		.loc 2 275 0 discriminator 2
 866 04ba 8A81      		ldd r24,Y+2
 867 04bc 8F5F      		subi r24,lo8(-(1))
 868 04be 8A83      		std Y+2,r24
 869               	.L41:
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 870               		.loc 2 275 0 is_stmt 0 discriminator 1
 871 04c0 8A81      		ldd r24,Y+2
 872 04c2 8233      		cpi r24,lo8(50)
 873 04c4 00F0      		brlo .L43
 874               	.LBE3:
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (restart) {
 875               		.loc 2 282 0 is_stmt 1
 876 04c6 8981      		ldd r24,Y+1
 877 04c8 8823      		tst r24
 878 04ca 01F0      		breq .L45
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		SYS_TimerStart(timer);
 879               		.loc 2 283 0
 880 04cc 8B81      		ldd r24,Y+3
 881 04ce 9C81      		ldd r25,Y+4
 882 04d0 0E94 0000 		call SYS_TimerStart
 883               	.L45:
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 884               		.loc 2 285 0
 885 04d4 0000      		nop
 886               	/* epilogue start */
 887 04d6 0F90      		pop __tmp_reg__
 888 04d8 0F90      		pop __tmp_reg__
 889 04da 0F90      		pop __tmp_reg__
 890 04dc 0F90      		pop __tmp_reg__
 891 04de DF91      		pop r29
 892 04e0 CF91      		pop r28
 893 04e2 0895      		ret
 894               		.cfi_endproc
 895               	.LFE70:
 898               	nwkRxRejectDuplicate:
 899               	.LFB71:
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxRejectDuplicate(NwkFrameHeader_t *header)
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 900               		.loc 2 290 0
 901               		.cfi_startproc
 902 04e4 CF93      		push r28
 903               	.LCFI24:
 904               		.cfi_def_cfa_offset 3
 905               		.cfi_offset 28, -2
 906 04e6 DF93      		push r29
 907               	.LCFI25:
 908               		.cfi_def_cfa_offset 4
 909               		.cfi_offset 29, -3
 910 04e8 CDB7      		in r28,__SP_L__
 911 04ea DEB7      		in r29,__SP_H__
 912               	.LCFI26:
 913               		.cfi_def_cfa_register 28
 914 04ec 2997      		sbiw r28,9
 915               	.LCFI27:
 916               		.cfi_def_cfa_offset 13
 917 04ee 0FB6      		in __tmp_reg__,__SREG__
 918 04f0 F894      		cli
 919 04f2 DEBF      		out __SP_H__,r29
 920 04f4 0FBE      		out __SREG__,__tmp_reg__
 921 04f6 CDBF      		out __SP_L__,r28
 922               	/* prologue: function */
 923               	/* frame size = 9 */
 924               	/* stack size = 11 */
 925               	.L__stack_usage = 11
 926 04f8 9987      		std Y+9,r25
 927 04fa 8887      		std Y+8,r24
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *entry;
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *freeEntry = NULL;
 928               		.loc 2 292 0
 929 04fc 1A82      		std Y+2,__zero_reg__
 930 04fe 1982      		std Y+1,__zero_reg__
 931               	.LBB4:
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 932               		.loc 2 294 0
 933 0500 1B82      		std Y+3,__zero_reg__
 934 0502 00C0      		rjmp .L47
 935               	.L53:
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 936               		.loc 2 295 0
 937 0504 8B81      		ldd r24,Y+3
 938 0506 282F      		mov r18,r24
 939 0508 30E0      		ldi r19,0
 940 050a C901      		movw r24,r18
 941 050c 880F      		lsl r24
 942 050e 991F      		rol r25
 943 0510 880F      		lsl r24
 944 0512 991F      		rol r25
 945 0514 820F      		add r24,r18
 946 0516 931F      		adc r25,r19
 947 0518 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable))
 948 051a 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable))
 949 051c 9D83      		std Y+5,r25
 950 051e 8C83      		std Y+4,r24
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (entry->ttl && header->nwkSrcAddr == entry->src) {
 951               		.loc 2 297 0
 952 0520 8C81      		ldd r24,Y+4
 953 0522 9D81      		ldd r25,Y+5
 954 0524 FC01      		movw r30,r24
 955 0526 8481      		ldd r24,Z+4
 956 0528 8823      		tst r24
 957 052a 01F4      		brne .+2
 958 052c 00C0      		rjmp .L48
 959               		.loc 2 297 0 is_stmt 0 discriminator 1
 960 052e 8885      		ldd r24,Y+8
 961 0530 9985      		ldd r25,Y+9
 962 0532 FC01      		movw r30,r24
 963 0534 2385      		ldd r18,Z+11
 964 0536 3485      		ldd r19,Z+12
 965 0538 8C81      		ldd r24,Y+4
 966 053a 9D81      		ldd r25,Y+5
 967 053c FC01      		movw r30,r24
 968 053e 8081      		ld r24,Z
 969 0540 9181      		ldd r25,Z+1
 970 0542 2817      		cp r18,r24
 971 0544 3907      		cpc r19,r25
 972 0546 01F0      		breq .+2
 973 0548 00C0      		rjmp .L48
 974               	.LBB5:
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			uint8_t diff = (int8_t)entry->seq - header->nwkSeq;
 975               		.loc 2 298 0 is_stmt 1
 976 054a 8C81      		ldd r24,Y+4
 977 054c 9D81      		ldd r25,Y+5
 978 054e FC01      		movw r30,r24
 979 0550 2281      		ldd r18,Z+2
 980 0552 8885      		ldd r24,Y+8
 981 0554 9985      		ldd r25,Y+9
 982 0556 FC01      		movw r30,r24
 983 0558 8285      		ldd r24,Z+10
 984 055a F22F      		mov r31,r18
 985 055c F81B      		sub r31,r24
 986 055e 8F2F      		mov r24,r31
 987 0560 8E83      		std Y+6,r24
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (diff < 8) {
 988               		.loc 2 300 0
 989 0562 8E81      		ldd r24,Y+6
 990 0564 8830      		cpi r24,lo8(8)
 991 0566 00F4      		brsh .L49
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				if (entry->mask & (1 << diff)) {
 992               		.loc 2 301 0
 993 0568 8C81      		ldd r24,Y+4
 994 056a 9D81      		ldd r25,Y+5
 995 056c FC01      		movw r30,r24
 996 056e 8381      		ldd r24,Z+3
 997 0570 882F      		mov r24,r24
 998 0572 90E0      		ldi r25,0
 999 0574 2E81      		ldd r18,Y+6
 1000 0576 222F      		mov r18,r18
 1001 0578 30E0      		ldi r19,0
 1002 057a 00C0      		rjmp 2f
 1003               		1:
 1004 057c 9595      		asr r25
 1005 057e 8795      		ror r24
 1006               		2:
 1007 0580 2A95      		dec r18
 1008 0582 02F4      		brpl 1b
 1009 0584 8170      		andi r24,1
 1010 0586 9927      		clr r25
 1011 0588 892B      		or r24,r25
 1012 058a 01F0      		breq .L50
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#ifdef NWK_ENABLE_ROUTING
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					if (nwkIb.addr == header->macDstAddr) {
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 						nwkRouteRemove(
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkDstAddr,
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkFcf.multicast);
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					}
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#endif
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					return true;
 1013               		.loc 2 310 0
 1014 058c 81E0      		ldi r24,lo8(1)
 1015 058e 00C0      		rjmp .L51
 1016               	.L50:
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				}
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask |= (1 << diff);
 1017               		.loc 2 313 0
 1018 0590 8C81      		ldd r24,Y+4
 1019 0592 9D81      		ldd r25,Y+5
 1020 0594 FC01      		movw r30,r24
 1021 0596 8381      		ldd r24,Z+3
 1022 0598 482F      		mov r20,r24
 1023 059a 8E81      		ldd r24,Y+6
 1024 059c 282F      		mov r18,r24
 1025 059e 30E0      		ldi r19,0
 1026 05a0 81E0      		ldi r24,lo8(1)
 1027 05a2 90E0      		ldi r25,0
 1028 05a4 00C0      		rjmp 2f
 1029               		1:
 1030 05a6 880F      		lsl r24
 1031 05a8 991F      		rol r25
 1032               		2:
 1033 05aa 2A95      		dec r18
 1034 05ac 02F4      		brpl 1b
 1035 05ae 842B      		or r24,r20
 1036 05b0 282F      		mov r18,r24
 1037 05b2 8C81      		ldd r24,Y+4
 1038 05b4 9D81      		ldd r25,Y+5
 1039 05b6 FC01      		movw r30,r24
 1040 05b8 2383      		std Z+3,r18
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1041               		.loc 2 314 0
 1042 05ba 80E0      		ldi r24,0
 1043 05bc 00C0      		rjmp .L51
 1044               	.L49:
 1045               	.LBB6:
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				uint8_t shift = -(int8_t)diff;
 1046               		.loc 2 316 0
 1047 05be 8E81      		ldd r24,Y+6
 1048 05c0 8195      		neg r24
 1049 05c2 8F83      		std Y+7,r24
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->seq = header->nwkSeq;
 1050               		.loc 2 318 0
 1051 05c4 8885      		ldd r24,Y+8
 1052 05c6 9985      		ldd r25,Y+9
 1053 05c8 FC01      		movw r30,r24
 1054 05ca 2285      		ldd r18,Z+10
 1055 05cc 8C81      		ldd r24,Y+4
 1056 05ce 9D81      		ldd r25,Y+5
 1057 05d0 FC01      		movw r30,r24
 1058 05d2 2283      		std Z+2,r18
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask = (entry->mask << shift) | 1;
 1059               		.loc 2 319 0
 1060 05d4 8C81      		ldd r24,Y+4
 1061 05d6 9D81      		ldd r25,Y+5
 1062 05d8 FC01      		movw r30,r24
 1063 05da 8381      		ldd r24,Z+3
 1064 05dc 882F      		mov r24,r24
 1065 05de 90E0      		ldi r25,0
 1066 05e0 2F81      		ldd r18,Y+7
 1067 05e2 222F      		mov r18,r18
 1068 05e4 30E0      		ldi r19,0
 1069 05e6 00C0      		rjmp 2f
 1070               		1:
 1071 05e8 880F      		lsl r24
 1072 05ea 991F      		rol r25
 1073               		2:
 1074 05ec 2A95      		dec r18
 1075 05ee 02F4      		brpl 1b
 1076 05f0 8160      		ori r24,lo8(1)
 1077 05f2 282F      		mov r18,r24
 1078 05f4 8C81      		ldd r24,Y+4
 1079 05f6 9D81      		ldd r25,Y+5
 1080 05f8 FC01      		movw r30,r24
 1081 05fa 2383      		std Z+3,r18
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->ttl = DUPLICATE_REJECTION_TTL;
 1082               		.loc 2 320 0
 1083 05fc 8C81      		ldd r24,Y+4
 1084 05fe 9D81      		ldd r25,Y+5
 1085 0600 25E1      		ldi r18,lo8(21)
 1086 0602 FC01      		movw r30,r24
 1087 0604 2483      		std Z+4,r18
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1088               		.loc 2 321 0
 1089 0606 80E0      		ldi r24,0
 1090 0608 00C0      		rjmp .L51
 1091               	.L48:
 1092               	.LBE6:
 1093               	.LBE5:
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (0 == entry->ttl) {
 1094               		.loc 2 325 0
 1095 060a 8C81      		ldd r24,Y+4
 1096 060c 9D81      		ldd r25,Y+5
 1097 060e FC01      		movw r30,r24
 1098 0610 8481      		ldd r24,Z+4
 1099 0612 8823      		tst r24
 1100 0614 01F4      		brne .L52
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			freeEntry = entry;
 1101               		.loc 2 326 0
 1102 0616 8C81      		ldd r24,Y+4
 1103 0618 9D81      		ldd r25,Y+5
 1104 061a 9A83      		std Y+2,r25
 1105 061c 8983      		std Y+1,r24
 1106               	.L52:
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1107               		.loc 2 294 0 discriminator 2
 1108 061e 8B81      		ldd r24,Y+3
 1109 0620 8F5F      		subi r24,lo8(-(1))
 1110 0622 8B83      		std Y+3,r24
 1111               	.L47:
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1112               		.loc 2 294 0 is_stmt 0 discriminator 1
 1113 0624 8B81      		ldd r24,Y+3
 1114 0626 8233      		cpi r24,lo8(50)
 1115 0628 00F4      		brsh .+2
 1116 062a 00C0      		rjmp .L53
 1117               	.LBE4:
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == freeEntry) {
 1118               		.loc 2 330 0 is_stmt 1
 1119 062c 8981      		ldd r24,Y+1
 1120 062e 9A81      		ldd r25,Y+2
 1121 0630 892B      		or r24,r25
 1122 0632 01F4      		brne .L54
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return true;
 1123               		.loc 2 331 0
 1124 0634 81E0      		ldi r24,lo8(1)
 1125 0636 00C0      		rjmp .L51
 1126               	.L54:
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->src = header->nwkSrcAddr;
 1127               		.loc 2 334 0
 1128 0638 8885      		ldd r24,Y+8
 1129 063a 9985      		ldd r25,Y+9
 1130 063c FC01      		movw r30,r24
 1131 063e 2385      		ldd r18,Z+11
 1132 0640 3485      		ldd r19,Z+12
 1133 0642 8981      		ldd r24,Y+1
 1134 0644 9A81      		ldd r25,Y+2
 1135 0646 FC01      		movw r30,r24
 1136 0648 3183      		std Z+1,r19
 1137 064a 2083      		st Z,r18
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->seq = header->nwkSeq;
 1138               		.loc 2 335 0
 1139 064c 8885      		ldd r24,Y+8
 1140 064e 9985      		ldd r25,Y+9
 1141 0650 FC01      		movw r30,r24
 1142 0652 2285      		ldd r18,Z+10
 1143 0654 8981      		ldd r24,Y+1
 1144 0656 9A81      		ldd r25,Y+2
 1145 0658 FC01      		movw r30,r24
 1146 065a 2283      		std Z+2,r18
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->mask = 1;
 1147               		.loc 2 336 0
 1148 065c 8981      		ldd r24,Y+1
 1149 065e 9A81      		ldd r25,Y+2
 1150 0660 21E0      		ldi r18,lo8(1)
 1151 0662 FC01      		movw r30,r24
 1152 0664 2383      		std Z+3,r18
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->ttl = DUPLICATE_REJECTION_TTL;
 1153               		.loc 2 337 0
 1154 0666 8981      		ldd r24,Y+1
 1155 0668 9A81      		ldd r25,Y+2
 1156 066a 25E1      		ldi r18,lo8(21)
 1157 066c FC01      		movw r30,r24
 1158 066e 2483      		std Z+4,r18
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 1159               		.loc 2 339 0
 1160 0670 80E0      		ldi r24,lo8(nwkRxDuplicateRejectionTimer)
 1161 0672 90E0      		ldi r25,hi8(nwkRxDuplicateRejectionTimer)
 1162 0674 0E94 0000 		call SYS_TimerStart
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1163               		.loc 2 341 0
 1164 0678 80E0      		ldi r24,0
 1165               	.L51:
 1166               	/* epilogue start */
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1167               		.loc 2 342 0
 1168 067a 2996      		adiw r28,9
 1169 067c 0FB6      		in __tmp_reg__,__SREG__
 1170 067e F894      		cli
 1171 0680 DEBF      		out __SP_H__,r29
 1172 0682 0FBE      		out __SREG__,__tmp_reg__
 1173 0684 CDBF      		out __SP_L__,r28
 1174 0686 DF91      		pop r29
 1175 0688 CF91      		pop r28
 1176 068a 0895      		ret
 1177               		.cfi_endproc
 1178               	.LFE71:
 1181               	nwkRxSeriveDataInd:
 1182               	.LFB72:
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind)
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1183               		.loc 2 347 0
 1184               		.cfi_startproc
 1185 068c CF93      		push r28
 1186               	.LCFI28:
 1187               		.cfi_def_cfa_offset 3
 1188               		.cfi_offset 28, -2
 1189 068e DF93      		push r29
 1190               	.LCFI29:
 1191               		.cfi_def_cfa_offset 4
 1192               		.cfi_offset 29, -3
 1193 0690 00D0      		rcall .
 1194               	.LCFI30:
 1195               		.cfi_def_cfa_offset 6
 1196 0692 CDB7      		in r28,__SP_L__
 1197 0694 DEB7      		in r29,__SP_H__
 1198               	.LCFI31:
 1199               		.cfi_def_cfa_register 28
 1200               	/* prologue: function */
 1201               	/* frame size = 2 */
 1202               	/* stack size = 4 */
 1203               	.L__stack_usage = 4
 1204 0696 9A83      		std Y+2,r25
 1205 0698 8983      		std Y+1,r24
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == (ind->options & NWK_IND_OPT_SECURED)) {
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ind->size < 1) {
 1206               		.loc 2 355 0
 1207 069a 8981      		ldd r24,Y+1
 1208 069c 9A81      		ldd r25,Y+2
 1209 069e FC01      		movw r30,r24
 1210 06a0 8285      		ldd r24,Z+10
 1211 06a2 8823      		tst r24
 1212 06a4 01F4      		brne .L56
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1213               		.loc 2 356 0
 1214 06a6 80E0      		ldi r24,0
 1215 06a8 00C0      		rjmp .L57
 1216               	.L56:
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	switch (ind->data[0]) {
 1217               		.loc 2 359 0
 1218 06aa 8981      		ldd r24,Y+1
 1219 06ac 9A81      		ldd r25,Y+2
 1220 06ae FC01      		movw r30,r24
 1221 06b0 8085      		ldd r24,Z+8
 1222 06b2 9185      		ldd r25,Z+9
 1223 06b4 FC01      		movw r30,r24
 1224 06b6 8081      		ld r24,Z
 1225 06b8 882F      		mov r24,r24
 1226 06ba 90E0      		ldi r25,0
 1227 06bc 892B      		or r24,r25
 1228 06be 01F4      		brne .L60
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ACK:
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkTxAckReceived(ind);
 1229               		.loc 2 361 0
 1230 06c0 8981      		ldd r24,Y+1
 1231 06c2 9A81      		ldd r25,Y+2
 1232 06c4 0E94 0000 		call nwkTxAckReceived
 1233 06c8 00C0      		rjmp .L57
 1234               	.L60:
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_ERROR:
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteErrorReceived(ind);
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTE_DISCOVERY
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REQUEST:
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryRequestReceived(ind);
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REPLY:
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryReplyReceived(ind);
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	default:
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1235               		.loc 2 379 0
 1236 06ca 80E0      		ldi r24,0
 1237               	.L57:
 1238               	/* epilogue start */
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1239               		.loc 2 381 0
 1240 06cc 0F90      		pop __tmp_reg__
 1241 06ce 0F90      		pop __tmp_reg__
 1242 06d0 DF91      		pop r29
 1243 06d2 CF91      		pop r28
 1244 06d4 0895      		ret
 1245               		.cfi_endproc
 1246               	.LFE72:
 1249               	nwkRxHandleReceivedFrame:
 1250               	.LFB73:
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleReceivedFrame(NwkFrame_t *frame)
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1251               		.loc 2 386 0
 1252               		.cfi_startproc
 1253 06d6 CF93      		push r28
 1254               	.LCFI32:
 1255               		.cfi_def_cfa_offset 3
 1256               		.cfi_offset 28, -2
 1257 06d8 DF93      		push r29
 1258               	.LCFI33:
 1259               		.cfi_def_cfa_offset 4
 1260               		.cfi_offset 29, -3
 1261 06da CDB7      		in r28,__SP_L__
 1262 06dc DEB7      		in r29,__SP_H__
 1263               	.LCFI34:
 1264               		.cfi_def_cfa_register 28
 1265 06de 2897      		sbiw r28,8
 1266               	.LCFI35:
 1267               		.cfi_def_cfa_offset 12
 1268 06e0 0FB6      		in __tmp_reg__,__SREG__
 1269 06e2 F894      		cli
 1270 06e4 DEBF      		out __SP_H__,r29
 1271 06e6 0FBE      		out __SREG__,__tmp_reg__
 1272 06e8 CDBF      		out __SP_L__,r28
 1273               	/* prologue: function */
 1274               	/* frame size = 8 */
 1275               	/* stack size = 10 */
 1276               	.L__stack_usage = 10
 1277 06ea 9887      		std Y+8,r25
 1278 06ec 8F83      		std Y+7,r24
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1279               		.loc 2 387 0
 1280 06ee 8F81      		ldd r24,Y+7
 1281 06f0 9885      		ldd r25,Y+8
 1282 06f2 0296      		adiw r24,2
 1283 06f4 9B83      		std Y+3,r25
 1284 06f6 8A83      		std Y+2,r24
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1285               		.loc 2 389 0
 1286 06f8 8F81      		ldd r24,Y+7
 1287 06fa 9885      		ldd r25,Y+8
 1288 06fc 24E2      		ldi r18,lo8(36)
 1289 06fe FC01      		movw r30,r24
 1290 0700 2083      		st Z,r18
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifndef NWK_ENABLE_SECURITY
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.security) {
 1291               		.loc 2 392 0
 1292 0702 8A81      		ldd r24,Y+2
 1293 0704 9B81      		ldd r25,Y+3
 1294 0706 FC01      		movw r30,r24
 1295 0708 8185      		ldd r24,Z+9
 1296 070a 8270      		andi r24,lo8(2)
 1297 070c 8823      		tst r24
 1298 070e 01F0      		breq .+2
 1299 0710 00C0      		rjmp .L82
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast && header->nwkFcf.ackRequest) {
 1300               		.loc 2 399 0
 1301 0712 8A81      		ldd r24,Y+2
 1302 0714 9B81      		ldd r25,Y+3
 1303 0716 FC01      		movw r30,r24
 1304 0718 8185      		ldd r24,Z+9
 1305 071a 8870      		andi r24,lo8(8)
 1306 071c 8823      		tst r24
 1307 071e 01F0      		breq .L64
 1308               		.loc 2 399 0 is_stmt 0 discriminator 1
 1309 0720 8A81      		ldd r24,Y+2
 1310 0722 9B81      		ldd r25,Y+3
 1311 0724 FC01      		movw r30,r24
 1312 0726 8185      		ldd r24,Z+9
 1313 0728 8170      		andi r24,lo8(1)
 1314 072a 8823      		tst r24
 1315 072c 01F0      		breq .+2
 1316 072e 00C0      		rjmp .L83
 1317               	.L64:
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #else
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == header->macDstPanId)
 1318               		.loc 2 410 0 is_stmt 1
 1319 0730 8A81      		ldd r24,Y+2
 1320 0732 9B81      		ldd r25,Y+3
 1321 0734 FC01      		movw r30,r24
 1322 0736 8381      		ldd r24,Z+3
 1323 0738 9481      		ldd r25,Z+4
 1324 073a 0196      		adiw r24,1
 1325 073c 01F4      		brne .L65
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR == header->nwkDstAddr)
 1326               		.loc 2 412 0
 1327 073e 2091 0000 		lds r18,nwkIb
 1328 0742 3091 0000 		lds r19,nwkIb+1
 1329 0746 8A81      		ldd r24,Y+2
 1330 0748 9B81      		ldd r25,Y+3
 1331 074a FC01      		movw r30,r24
 1332 074c 8585      		ldd r24,Z+13
 1333 074e 9685      		ldd r25,Z+14
 1334 0750 2817      		cp r18,r24
 1335 0752 3907      		cpc r19,r25
 1336 0754 01F0      		breq .L66
 1337               		.loc 2 412 0 is_stmt 0 discriminator 1
 1338 0756 8A81      		ldd r24,Y+2
 1339 0758 9B81      		ldd r25,Y+3
 1340 075a FC01      		movw r30,r24
 1341 075c 8585      		ldd r24,Z+13
 1342 075e 9685      		ldd r25,Z+14
 1343 0760 0196      		adiw r24,1
 1344 0762 01F0      		breq .+2
 1345 0764 00C0      		rjmp .L84
 1346               	.L66:
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security)
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			{
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1347               		.loc 2 421 0 is_stmt 1
 1348 0766 8F81      		ldd r24,Y+7
 1349 0768 9885      		ldd r25,Y+8
 1350 076a 22E2      		ldi r18,lo8(34)
 1351 076c FC01      		movw r30,r24
 1352 076e 2083      		st Z,r18
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 1353               		.loc 2 424 0
 1354 0770 00C0      		rjmp .L84
 1355               	.L65:
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ADDRESS_FILTER
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (!NWK_FilterAddress(header->macSrcAddr, &frame->rx.lqi)) {
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == header->nwkDstAddr && header->nwkFcf.ackRequest)
 1356               		.loc 2 434 0
 1357 0772 8A81      		ldd r24,Y+2
 1358 0774 9B81      		ldd r25,Y+3
 1359 0776 FC01      		movw r30,r24
 1360 0778 8585      		ldd r24,Z+13
 1361 077a 9685      		ldd r25,Z+14
 1362 077c 0196      		adiw r24,1
 1363 077e 01F4      		brne .L68
 1364               		.loc 2 434 0 is_stmt 0 discriminator 1
 1365 0780 8A81      		ldd r24,Y+2
 1366 0782 9B81      		ldd r25,Y+3
 1367 0784 FC01      		movw r30,r24
 1368 0786 8185      		ldd r24,Z+9
 1369 0788 8170      		andi r24,lo8(1)
 1370 078a 8823      		tst r24
 1371 078c 01F0      		breq .+2
 1372 078e 00C0      		rjmp .L85
 1373               	.L68:
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkIb.addr == header->nwkSrcAddr)
 1374               		.loc 2 439 0 is_stmt 1
 1375 0790 2091 0000 		lds r18,nwkIb
 1376 0794 3091 0000 		lds r19,nwkIb+1
 1377 0798 8A81      		ldd r24,Y+2
 1378 079a 9B81      		ldd r25,Y+3
 1379 079c FC01      		movw r30,r24
 1380 079e 8385      		ldd r24,Z+11
 1381 07a0 9485      		ldd r25,Z+12
 1382 07a2 2817      		cp r18,r24
 1383 07a4 3907      		cpc r19,r25
 1384 07a6 01F4      		brne .+2
 1385 07a8 00C0      		rjmp .L86
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 445:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRouteFrameReceived(frame);
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkRxRejectDuplicate(header))
 1386               		.loc 2 448 0
 1387 07aa 8A81      		ldd r24,Y+2
 1388 07ac 9B81      		ldd r25,Y+3
 1389 07ae 0E94 0000 		call nwkRxRejectDuplicate
 1390 07b2 8823      		tst r24
 1391 07b4 01F0      		breq .+2
 1392 07b6 00C0      		rjmp .L87
 449:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 451:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 1393               		.loc 2 454 0
 1394 07b8 8A81      		ldd r24,Y+2
 1395 07ba 9B81      		ldd r25,Y+3
 1396 07bc FC01      		movw r30,r24
 1397 07be 8185      		ldd r24,Z+9
 1398 07c0 8870      		andi r24,lo8(8)
 1399 07c2 8823      		tst r24
 1400 07c4 01F4      		brne .+2
 1401 07c6 00C0      		rjmp .L71
 1402               	.LBB7:
 455:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameMulticastHeader_t *mcHeader
 1403               		.loc 2 455 0
 1404 07c8 8F81      		ldd r24,Y+7
 1405 07ca 9885      		ldd r25,Y+8
 1406 07cc 8F57      		subi r24,127
 1407 07ce 9F4F      		sbci r25,-1
 1408 07d0 FC01      		movw r30,r24
 1409 07d2 8081      		ld r24,Z
 1410 07d4 9181      		ldd r25,Z+1
 1411 07d6 9D83      		std Y+5,r25
 1412 07d8 8C83      		std Y+4,r24
 456:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			= (NwkFrameMulticastHeader_t *)frame->payload;
 457:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool member = NWK_GroupIsMember(header->nwkDstAddr);
 1413               		.loc 2 457 0
 1414 07da 8A81      		ldd r24,Y+2
 1415 07dc 9B81      		ldd r25,Y+3
 1416 07de FC01      		movw r30,r24
 1417 07e0 8585      		ldd r24,Z+13
 1418 07e2 9685      		ldd r25,Z+14
 1419 07e4 0E94 0000 		call NWK_GroupIsMember
 1420 07e8 8E83      		std Y+6,r24
 458:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool broadcast = false;
 1421               		.loc 2 458 0
 1422 07ea 1982      		std Y+1,__zero_reg__
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 460:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 1423               		.loc 2 460 0
 1424 07ec 8A81      		ldd r24,Y+2
 1425 07ee 9B81      		ldd r25,Y+3
 1426 07f0 FC01      		movw r30,r24
 1427 07f2 8581      		ldd r24,Z+5
 1428 07f4 9681      		ldd r25,Z+6
 1429 07f6 0196      		adiw r24,1
 1430 07f8 01F0      		breq .+2
 1431 07fa 00C0      		rjmp .L72
 461:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1432               		.loc 2 461 0
 1433 07fc 8E81      		ldd r24,Y+6
 1434 07fe 8823      		tst r24
 1435 0800 01F0      		breq .L73
 462:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->memberRadius > 0;
 1436               		.loc 2 462 0
 1437 0802 8C81      		ldd r24,Y+4
 1438 0804 9D81      		ldd r25,Y+5
 1439 0806 FC01      		movw r30,r24
 1440 0808 8181      		ldd r24,Z+1
 1441 080a 8F70      		andi r24,lo8(15)
 1442 080c 882F      		mov r24,r24
 1443 080e 90E0      		ldi r25,0
 1444 0810 21E0      		ldi r18,lo8(1)
 1445 0812 1816      		cp __zero_reg__,r24
 1446 0814 1906      		cpc __zero_reg__,r25
 1447 0816 04F0      		brlt .L74
 1448 0818 20E0      		ldi r18,0
 1449               	.L74:
 1450 081a 2983      		std Y+1,r18
 463:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius--;
 1451               		.loc 2 463 0
 1452 081c 8C81      		ldd r24,Y+4
 1453 081e 9D81      		ldd r25,Y+5
 1454 0820 FC01      		movw r30,r24
 1455 0822 8181      		ldd r24,Z+1
 1456 0824 8F70      		andi r24,lo8(15)
 1457 0826 2FE0      		ldi r18,lo8(15)
 1458 0828 280F      		add r18,r24
 1459 082a 2F70      		andi r18,lo8(15)
 1460 082c 8C81      		ldd r24,Y+4
 1461 082e 9D81      		ldd r25,Y+5
 1462 0830 2F70      		andi r18,lo8(15)
 1463 0832 FC01      		movw r30,r24
 1464 0834 3181      		ldd r19,Z+1
 1465 0836 307F      		andi r19,lo8(-16)
 1466 0838 232B      		or r18,r19
 1467 083a FC01      		movw r30,r24
 1468 083c 2183      		std Z+1,r18
 464:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius
 465:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxNonMemberRadius;
 1469               		.loc 2 465 0
 1470 083e 8C81      		ldd r24,Y+4
 1471 0840 9D81      		ldd r25,Y+5
 1472 0842 FC01      		movw r30,r24
 1473 0844 8081      		ld r24,Z
 1474 0846 282F      		mov r18,r24
 1475 0848 2295      		swap r18
 1476 084a 2F70      		andi r18,lo8(15)
 1477 084c 8C81      		ldd r24,Y+4
 1478 084e 9D81      		ldd r25,Y+5
 1479 0850 2F70      		andi r18,lo8(15)
 1480 0852 FC01      		movw r30,r24
 1481 0854 3081      		ld r19,Z
 1482 0856 307F      		andi r19,lo8(-16)
 1483 0858 232B      		or r18,r19
 1484 085a FC01      		movw r30,r24
 1485 085c 2083      		st Z,r18
 1486 085e 00C0      		rjmp .L77
 1487               	.L73:
 466:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 467:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->nonMemberRadius > 0;
 1488               		.loc 2 467 0
 1489 0860 8C81      		ldd r24,Y+4
 1490 0862 9D81      		ldd r25,Y+5
 1491 0864 FC01      		movw r30,r24
 1492 0866 8081      		ld r24,Z
 1493 0868 8F70      		andi r24,lo8(15)
 1494 086a 882F      		mov r24,r24
 1495 086c 90E0      		ldi r25,0
 1496 086e 21E0      		ldi r18,lo8(1)
 1497 0870 1816      		cp __zero_reg__,r24
 1498 0872 1906      		cpc __zero_reg__,r25
 1499 0874 04F0      		brlt .L76
 1500 0876 20E0      		ldi r18,0
 1501               	.L76:
 1502 0878 2983      		std Y+1,r18
 468:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius--;
 1503               		.loc 2 468 0
 1504 087a 8C81      		ldd r24,Y+4
 1505 087c 9D81      		ldd r25,Y+5
 1506 087e FC01      		movw r30,r24
 1507 0880 8081      		ld r24,Z
 1508 0882 8F70      		andi r24,lo8(15)
 1509 0884 2FE0      		ldi r18,lo8(15)
 1510 0886 280F      		add r18,r24
 1511 0888 2F70      		andi r18,lo8(15)
 1512 088a 8C81      		ldd r24,Y+4
 1513 088c 9D81      		ldd r25,Y+5
 1514 088e 2F70      		andi r18,lo8(15)
 1515 0890 FC01      		movw r30,r24
 1516 0892 3081      		ld r19,Z
 1517 0894 307F      		andi r19,lo8(-16)
 1518 0896 232B      		or r18,r19
 1519 0898 FC01      		movw r30,r24
 1520 089a 2083      		st Z,r18
 469:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius
 470:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxMemberRadius;
 1521               		.loc 2 470 0
 1522 089c 8C81      		ldd r24,Y+4
 1523 089e 9D81      		ldd r25,Y+5
 1524 08a0 FC01      		movw r30,r24
 1525 08a2 8181      		ldd r24,Z+1
 1526 08a4 282F      		mov r18,r24
 1527 08a6 2295      		swap r18
 1528 08a8 2F70      		andi r18,lo8(15)
 1529 08aa 8C81      		ldd r24,Y+4
 1530 08ac 9D81      		ldd r25,Y+5
 1531 08ae 2F70      		andi r18,lo8(15)
 1532 08b0 FC01      		movw r30,r24
 1533 08b2 3181      		ldd r19,Z+1
 1534 08b4 307F      		andi r19,lo8(-16)
 1535 08b6 232B      		or r18,r19
 1536 08b8 FC01      		movw r30,r24
 1537 08ba 2183      		std Z+1,r18
 1538 08bc 00C0      		rjmp .L77
 1539               	.L72:
 471:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 472:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		} else {
 473:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1540               		.loc 2 473 0
 1541 08be 8E81      		ldd r24,Y+6
 1542 08c0 8823      		tst r24
 1543 08c2 01F0      		breq .L77
 474:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = true;
 1544               		.loc 2 474 0
 1545 08c4 81E0      		ldi r24,lo8(1)
 1546 08c6 8983      		std Y+1,r24
 475:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkFcf.linkLocal = 1;
 1547               		.loc 2 475 0
 1548 08c8 8A81      		ldd r24,Y+2
 1549 08ca 9B81      		ldd r25,Y+3
 1550 08cc FC01      		movw r30,r24
 1551 08ce 2185      		ldd r18,Z+9
 1552 08d0 2460      		ori r18,lo8(4)
 1553 08d2 FC01      		movw r30,r24
 1554 08d4 2187      		std Z+9,r18
 1555               	.L77:
 476:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 477:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 478:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_ROUTING
 479:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else {
 480:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_ROUTE;
 481:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 482:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 485:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (broadcast) {
 1556               		.loc 2 485 0
 1557 08d6 8981      		ldd r24,Y+1
 1558 08d8 8823      		tst r24
 1559 08da 01F0      		breq .L78
 486:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1560               		.loc 2 486 0
 1561 08dc 8F81      		ldd r24,Y+7
 1562 08de 9885      		ldd r25,Y+8
 1563 08e0 0E94 0000 		call nwkTxBroadcastFrame
 1564               	.L78:
 487:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (member) {
 1565               		.loc 2 489 0
 1566 08e4 8E81      		ldd r24,Y+6
 1567 08e6 8823      		tst r24
 1568 08e8 01F4      		brne .+2
 1569 08ea 00C0      		rjmp .L61
 490:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 1570               		.loc 2 490 0
 1571 08ec 8F81      		ldd r24,Y+7
 1572 08ee 9885      		ldd r25,Y+8
 1573 08f0 8F57      		subi r24,127
 1574 08f2 9F4F      		sbci r25,-1
 1575 08f4 FC01      		movw r30,r24
 1576 08f6 8081      		ld r24,Z
 1577 08f8 9181      		ldd r25,Z+1
 1578 08fa 9C01      		movw r18,r24
 1579 08fc 2E5F      		subi r18,-2
 1580 08fe 3F4F      		sbci r19,-1
 1581 0900 8F81      		ldd r24,Y+7
 1582 0902 9885      		ldd r25,Y+8
 1583 0904 8F57      		subi r24,127
 1584 0906 9F4F      		sbci r25,-1
 1585 0908 FC01      		movw r30,r24
 1586 090a 3183      		std Z+1,r19
 1587 090c 2083      		st Z,r18
 491:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 492:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 495:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 496:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 497:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1588               		.loc 2 497 0
 1589 090e 8F81      		ldd r24,Y+7
 1590 0910 9885      		ldd r25,Y+8
 1591 0912 22E2      		ldi r18,lo8(34)
 1592 0914 FC01      		movw r30,r24
 1593 0916 2083      		st Z,r18
 1594 0918 00C0      		rjmp .L61
 1595               	.L71:
 1596               	.LBE7:
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif /* NWK_ENABLE_MULTICAST */
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr && nwkIb.addr !=
 1597               		.loc 2 502 0
 1598 091a 8A81      		ldd r24,Y+2
 1599 091c 9B81      		ldd r25,Y+3
 1600 091e FC01      		movw r30,r24
 1601 0920 8581      		ldd r24,Z+5
 1602 0922 9681      		ldd r25,Z+6
 1603 0924 0196      		adiw r24,1
 1604 0926 01F4      		brne .L80
 1605               		.loc 2 502 0 is_stmt 0 discriminator 1
 1606 0928 2091 0000 		lds r18,nwkIb
 1607 092c 3091 0000 		lds r19,nwkIb+1
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1608               		.loc 2 503 0 is_stmt 1 discriminator 1
 1609 0930 8A81      		ldd r24,Y+2
 1610 0932 9B81      		ldd r25,Y+3
 1611 0934 FC01      		movw r30,r24
 1612 0936 8585      		ldd r24,Z+13
 1613 0938 9685      		ldd r25,Z+14
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1614               		.loc 2 502 0 discriminator 1
 1615 093a 2817      		cp r18,r24
 1616 093c 3907      		cpc r19,r25
 1617 093e 01F0      		breq .L80
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				0 == header->nwkFcf.linkLocal) {
 1618               		.loc 2 504 0
 1619 0940 8A81      		ldd r24,Y+2
 1620 0942 9B81      		ldd r25,Y+3
 1621 0944 FC01      		movw r30,r24
 1622 0946 8185      		ldd r24,Z+9
 1623 0948 8470      		andi r24,lo8(4)
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1624               		.loc 2 503 0
 1625 094a 8823      		tst r24
 1626 094c 01F4      		brne .L80
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1627               		.loc 2 505 0
 1628 094e 8F81      		ldd r24,Y+7
 1629 0950 9885      		ldd r25,Y+8
 1630 0952 0E94 0000 		call nwkTxBroadcastFrame
 1631               	.L80:
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 507:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR ==
 1632               		.loc 2 508 0
 1633 0956 2091 0000 		lds r18,nwkIb
 1634 095a 3091 0000 		lds r19,nwkIb+1
 1635 095e 8A81      		ldd r24,Y+2
 1636 0960 9B81      		ldd r25,Y+3
 1637 0962 FC01      		movw r30,r24
 1638 0964 8585      		ldd r24,Z+13
 1639 0966 9685      		ldd r25,Z+14
 1640 0968 2817      		cp r18,r24
 1641 096a 3907      		cpc r19,r25
 1642 096c 01F0      		breq .L81
 509:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1643               		.loc 2 509 0 discriminator 1
 1644 096e 8A81      		ldd r24,Y+2
 1645 0970 9B81      		ldd r25,Y+3
 1646 0972 FC01      		movw r30,r24
 1647 0974 8585      		ldd r24,Z+13
 1648 0976 9685      		ldd r25,Z+14
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1649               		.loc 2 508 0 discriminator 1
 1650 0978 0196      		adiw r24,1
 1651 097a 01F4      		brne .L61
 1652               	.L81:
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 511:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 512:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 513:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 514:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 515:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1653               		.loc 2 515 0
 1654 097c 8F81      		ldd r24,Y+7
 1655 097e 9885      		ldd r25,Y+8
 1656 0980 22E2      		ldi r18,lo8(34)
 1657 0982 FC01      		movw r30,r24
 1658 0984 2083      		st Z,r18
 1659 0986 00C0      		rjmp .L61
 1660               	.L82:
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1661               		.loc 2 393 0
 1662 0988 0000      		nop
 1663 098a 00C0      		rjmp .L61
 1664               	.L83:
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1665               		.loc 2 400 0
 1666 098c 0000      		nop
 1667 098e 00C0      		rjmp .L61
 1668               	.L84:
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1669               		.loc 2 424 0
 1670 0990 0000      		nop
 1671 0992 00C0      		rjmp .L61
 1672               	.L85:
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1673               		.loc 2 436 0
 1674 0994 0000      		nop
 1675 0996 00C0      		rjmp .L61
 1676               	.L86:
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1677               		.loc 2 441 0
 1678 0998 0000      		nop
 1679 099a 00C0      		rjmp .L61
 1680               	.L87:
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1681               		.loc 2 450 0
 1682 099c 0000      		nop
 1683               	.L61:
 1684               	/* epilogue start */
 516:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 517:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 518:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #ifdef NWK_ENABLE_ROUTING
 519:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if (nwkIb.addr == header->macDstAddr) {
 520:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_ROUTE;
 521:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 522:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #endif
 523:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 524:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1685               		.loc 2 524 0
 1686 099e 2896      		adiw r28,8
 1687 09a0 0FB6      		in __tmp_reg__,__SREG__
 1688 09a2 F894      		cli
 1689 09a4 DEBF      		out __SP_H__,r29
 1690 09a6 0FBE      		out __SREG__,__tmp_reg__
 1691 09a8 CDBF      		out __SP_L__,r28
 1692 09aa DF91      		pop r29
 1693 09ac CF91      		pop r28
 1694 09ae 0895      		ret
 1695               		.cfi_endproc
 1696               	.LFE73:
 1699               	nwkRxIndicateDataFrame:
 1700               	.LFB74:
 525:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 526:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 527:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 528:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateDataFrame(NwkFrame_t *frame)
 529:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1701               		.loc 2 529 0
 1702               		.cfi_startproc
 1703 09b0 CF93      		push r28
 1704               	.LCFI36:
 1705               		.cfi_def_cfa_offset 3
 1706               		.cfi_offset 28, -2
 1707 09b2 DF93      		push r29
 1708               	.LCFI37:
 1709               		.cfi_def_cfa_offset 4
 1710               		.cfi_offset 29, -3
 1711 09b4 CDB7      		in r28,__SP_L__
 1712 09b6 DEB7      		in r29,__SP_H__
 1713               	.LCFI38:
 1714               		.cfi_def_cfa_register 28
 1715 09b8 6197      		sbiw r28,17
 1716               	.LCFI39:
 1717               		.cfi_def_cfa_offset 21
 1718 09ba 0FB6      		in __tmp_reg__,__SREG__
 1719 09bc F894      		cli
 1720 09be DEBF      		out __SP_H__,r29
 1721 09c0 0FBE      		out __SREG__,__tmp_reg__
 1722 09c2 CDBF      		out __SP_L__,r28
 1723               	/* prologue: function */
 1724               	/* frame size = 17 */
 1725               	/* stack size = 19 */
 1726               	.L__stack_usage = 19
 1727 09c4 998B      		std Y+17,r25
 1728 09c6 888B      		std Y+16,r24
 530:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1729               		.loc 2 530 0
 1730 09c8 8889      		ldd r24,Y+16
 1731 09ca 9989      		ldd r25,Y+17
 1732 09cc 0296      		adiw r24,2
 1733 09ce 9A83      		std Y+2,r25
 1734 09d0 8983      		std Y+1,r24
 531:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 532:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 533:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[header->nwkDstEndpoint]) {
 1735               		.loc 2 533 0
 1736 09d2 8981      		ldd r24,Y+1
 1737 09d4 9A81      		ldd r25,Y+2
 1738 09d6 FC01      		movw r30,r24
 1739 09d8 8785      		ldd r24,Z+15
 1740 09da 8295      		swap r24
 1741 09dc 8F70      		andi r24,lo8(15)
 1742 09de 882F      		mov r24,r24
 1743 09e0 90E0      		ldi r25,0
 1744 09e2 0396      		adiw r24,3
 1745 09e4 880F      		lsl r24
 1746 09e6 991F      		rol r25
 1747 09e8 8050      		subi r24,lo8(-(nwkIb))
 1748 09ea 9040      		sbci r25,hi8(-(nwkIb))
 1749 09ec FC01      		movw r30,r24
 1750 09ee 8081      		ld r24,Z
 1751 09f0 9181      		ldd r25,Z+1
 1752 09f2 892B      		or r24,r25
 1753 09f4 01F4      		brne .L89
 534:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1754               		.loc 2 534 0
 1755 09f6 80E0      		ldi r24,0
 1756 09f8 00C0      		rjmp .L104
 1757               	.L89:
 535:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 536:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 537:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = header->nwkSrcAddr;
 1758               		.loc 2 537 0
 1759 09fa 8981      		ldd r24,Y+1
 1760 09fc 9A81      		ldd r25,Y+2
 1761 09fe FC01      		movw r30,r24
 1762 0a00 8385      		ldd r24,Z+11
 1763 0a02 9485      		ldd r25,Z+12
 1764 0a04 9C83      		std Y+4,r25
 1765 0a06 8B83      		std Y+3,r24
 538:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = header->nwkDstAddr;
 1766               		.loc 2 538 0
 1767 0a08 8981      		ldd r24,Y+1
 1768 0a0a 9A81      		ldd r25,Y+2
 1769 0a0c FC01      		movw r30,r24
 1770 0a0e 8585      		ldd r24,Z+13
 1771 0a10 9685      		ldd r25,Z+14
 1772 0a12 9E83      		std Y+6,r25
 1773 0a14 8D83      		std Y+5,r24
 539:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = header->nwkSrcEndpoint;
 1774               		.loc 2 539 0
 1775 0a16 8981      		ldd r24,Y+1
 1776 0a18 9A81      		ldd r25,Y+2
 1777 0a1a FC01      		movw r30,r24
 1778 0a1c 8785      		ldd r24,Z+15
 1779 0a1e 8F70      		andi r24,lo8(15)
 1780 0a20 8F83      		std Y+7,r24
 540:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = header->nwkDstEndpoint;
 1781               		.loc 2 540 0
 1782 0a22 8981      		ldd r24,Y+1
 1783 0a24 9A81      		ldd r25,Y+2
 1784 0a26 FC01      		movw r30,r24
 1785 0a28 8785      		ldd r24,Z+15
 1786 0a2a 8295      		swap r24
 1787 0a2c 8F70      		andi r24,lo8(15)
 1788 0a2e 8887      		std Y+8,r24
 541:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1789               		.loc 2 541 0
 1790 0a30 8889      		ldd r24,Y+16
 1791 0a32 9989      		ldd r25,Y+17
 1792 0a34 8F57      		subi r24,127
 1793 0a36 9F4F      		sbci r25,-1
 1794 0a38 FC01      		movw r30,r24
 1795 0a3a 8081      		ld r24,Z
 1796 0a3c 9181      		ldd r25,Z+1
 1797 0a3e 9C87      		std Y+12,r25
 1798 0a40 8B87      		std Y+11,r24
 542:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1799               		.loc 2 542 0
 1800 0a42 8889      		ldd r24,Y+16
 1801 0a44 9989      		ldd r25,Y+17
 1802 0a46 0E94 0000 		call nwkFramePayloadSize
 1803 0a4a 8D87      		std Y+13,r24
 543:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1804               		.loc 2 543 0
 1805 0a4c 8889      		ldd r24,Y+16
 1806 0a4e 9989      		ldd r25,Y+17
 1807 0a50 8D57      		subi r24,125
 1808 0a52 9F4F      		sbci r25,-1
 1809 0a54 FC01      		movw r30,r24
 1810 0a56 8081      		ld r24,Z
 1811 0a58 8E87      		std Y+14,r24
 544:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1812               		.loc 2 544 0
 1813 0a5a 8889      		ldd r24,Y+16
 1814 0a5c 9989      		ldd r25,Y+17
 1815 0a5e 8C57      		subi r24,124
 1816 0a60 9F4F      		sbci r25,-1
 1817 0a62 FC01      		movw r30,r24
 1818 0a64 8081      		ld r24,Z
 1819 0a66 8F87      		std Y+15,r24
 545:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 546:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK_REQUESTED : 0;
 1820               		.loc 2 546 0
 1821 0a68 8981      		ldd r24,Y+1
 1822 0a6a 9A81      		ldd r25,Y+2
 1823 0a6c FC01      		movw r30,r24
 1824 0a6e 8185      		ldd r24,Z+9
 1825 0a70 982F      		mov r25,r24
 1826 0a72 9170      		andi r25,lo8(1)
 1827 0a74 81E0      		ldi r24,lo8(1)
 1828 0a76 9923      		tst r25
 1829 0a78 01F4      		brne .L91
 1830 0a7a 80E0      		ldi r24,0
 1831               	.L91:
 1832 0a7c 882F      		mov r24,r24
 1833 0a7e 90E0      		ldi r25,0
 1834 0a80 9A87      		std Y+10,r25
 1835 0a82 8987      		std Y+9,r24
 547:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECURED : 0;
 1836               		.loc 2 547 0
 1837 0a84 2985      		ldd r18,Y+9
 1838 0a86 3A85      		ldd r19,Y+10
 1839 0a88 8981      		ldd r24,Y+1
 1840 0a8a 9A81      		ldd r25,Y+2
 1841 0a8c FC01      		movw r30,r24
 1842 0a8e 8185      		ldd r24,Z+9
 1843 0a90 882F      		mov r24,r24
 1844 0a92 90E0      		ldi r25,0
 1845 0a94 8270      		andi r24,2
 1846 0a96 9927      		clr r25
 1847 0a98 822B      		or r24,r18
 1848 0a9a 932B      		or r25,r19
 1849 0a9c 9A87      		std Y+10,r25
 1850 0a9e 8987      		std Y+9,r24
 548:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LINK_LOCAL : 0;
 1851               		.loc 2 548 0
 1852 0aa0 2985      		ldd r18,Y+9
 1853 0aa2 3A85      		ldd r19,Y+10
 1854 0aa4 8981      		ldd r24,Y+1
 1855 0aa6 9A81      		ldd r25,Y+2
 1856 0aa8 FC01      		movw r30,r24
 1857 0aaa 8185      		ldd r24,Z+9
 1858 0aac 8470      		andi r24,lo8(4)
 1859 0aae 8823      		tst r24
 1860 0ab0 01F0      		breq .L92
 1861               		.loc 2 548 0 is_stmt 0 discriminator 1
 1862 0ab2 80E2      		ldi r24,lo8(32)
 1863 0ab4 90E0      		ldi r25,0
 1864 0ab6 00C0      		rjmp .L93
 1865               	.L92:
 1866               		.loc 2 548 0 discriminator 2
 1867 0ab8 80E0      		ldi r24,0
 1868 0aba 90E0      		ldi r25,0
 1869               	.L93:
 1870               		.loc 2 548 0 discriminator 4
 1871 0abc 822B      		or r24,r18
 1872 0abe 932B      		or r25,r19
 1873 0ac0 9A87      		std Y+10,r25
 1874 0ac2 8987      		std Y+9,r24
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MULTICAST : 0;
 1875               		.loc 2 549 0 is_stmt 1 discriminator 4
 1876 0ac4 2985      		ldd r18,Y+9
 1877 0ac6 3A85      		ldd r19,Y+10
 1878 0ac8 8981      		ldd r24,Y+1
 1879 0aca 9A81      		ldd r25,Y+2
 1880 0acc FC01      		movw r30,r24
 1881 0ace 8185      		ldd r24,Z+9
 1882 0ad0 8870      		andi r24,lo8(8)
 1883 0ad2 8823      		tst r24
 1884 0ad4 01F0      		breq .L94
 1885               		.loc 2 549 0 is_stmt 0 discriminator 1
 1886 0ad6 80E4      		ldi r24,lo8(64)
 1887 0ad8 90E0      		ldi r25,0
 1888 0ada 00C0      		rjmp .L95
 1889               	.L94:
 1890               		.loc 2 549 0 discriminator 2
 1891 0adc 80E0      		ldi r24,0
 1892 0ade 90E0      		ldi r25,0
 1893               	.L95:
 1894               		.loc 2 549 0 discriminator 4
 1895 0ae0 822B      		or r24,r18
 1896 0ae2 932B      		or r25,r19
 1897 0ae4 9A87      		std Y+10,r25
 1898 0ae6 8987      		std Y+9,r24
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.beacon) ? NWK_IND_OPT_BEACON : 0;
 1899               		.loc 2 550 0 is_stmt 1 discriminator 4
 1900 0ae8 2985      		ldd r18,Y+9
 1901 0aea 3A85      		ldd r19,Y+10
 1902 0aec 8981      		ldd r24,Y+1
 1903 0aee 9A81      		ldd r25,Y+2
 1904 0af0 FC01      		movw r30,r24
 1905 0af2 8185      		ldd r24,Z+9
 1906 0af4 8071      		andi r24,lo8(16)
 1907 0af6 8823      		tst r24
 1908 0af8 01F0      		breq .L96
 1909               		.loc 2 550 0 is_stmt 0 discriminator 1
 1910 0afa 80E8      		ldi r24,lo8(-128)
 1911 0afc 90E0      		ldi r25,0
 1912 0afe 00C0      		rjmp .L97
 1913               	.L96:
 1914               		.loc 2 550 0 discriminator 2
 1915 0b00 80E0      		ldi r24,0
 1916 0b02 90E0      		ldi r25,0
 1917               	.L97:
 1918               		.loc 2 550 0 discriminator 4
 1919 0b04 822B      		or r24,r18
 1920 0b06 932B      		or r25,r19
 1921 0b08 9A87      		std Y+10,r25
 1922 0b0a 8987      		std Y+9,r24
 551:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_ADDR == header->nwkDstAddr) ? NWK_IND_OPT_BROADCAST : 0;
 1923               		.loc 2 551 0 is_stmt 1 discriminator 4
 1924 0b0c 2985      		ldd r18,Y+9
 1925 0b0e 3A85      		ldd r19,Y+10
 1926 0b10 8981      		ldd r24,Y+1
 1927 0b12 9A81      		ldd r25,Y+2
 1928 0b14 FC01      		movw r30,r24
 1929 0b16 8585      		ldd r24,Z+13
 1930 0b18 9685      		ldd r25,Z+14
 1931 0b1a 0196      		adiw r24,1
 1932 0b1c 01F4      		brne .L98
 1933               		.loc 2 551 0 is_stmt 0 discriminator 1
 1934 0b1e 84E0      		ldi r24,lo8(4)
 1935 0b20 90E0      		ldi r25,0
 1936 0b22 00C0      		rjmp .L99
 1937               	.L98:
 1938               		.loc 2 551 0 discriminator 2
 1939 0b24 80E0      		ldi r24,0
 1940 0b26 90E0      		ldi r25,0
 1941               	.L99:
 1942               		.loc 2 551 0 discriminator 4
 1943 0b28 822B      		or r24,r18
 1944 0b2a 932B      		or r25,r19
 1945 0b2c 9A87      		std Y+10,r25
 1946 0b2e 8987      		std Y+9,r24
 552:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (header->nwkSrcAddr == header->macSrcAddr) ? NWK_IND_OPT_LOCAL : 0;
 1947               		.loc 2 552 0 is_stmt 1 discriminator 4
 1948 0b30 2985      		ldd r18,Y+9
 1949 0b32 3A85      		ldd r19,Y+10
 1950 0b34 8981      		ldd r24,Y+1
 1951 0b36 9A81      		ldd r25,Y+2
 1952 0b38 FC01      		movw r30,r24
 1953 0b3a 4385      		ldd r20,Z+11
 1954 0b3c 5485      		ldd r21,Z+12
 1955 0b3e 8981      		ldd r24,Y+1
 1956 0b40 9A81      		ldd r25,Y+2
 1957 0b42 FC01      		movw r30,r24
 1958 0b44 8781      		ldd r24,Z+7
 1959 0b46 9085      		ldd r25,Z+8
 1960 0b48 4817      		cp r20,r24
 1961 0b4a 5907      		cpc r21,r25
 1962 0b4c 01F4      		brne .L100
 1963               		.loc 2 552 0 is_stmt 0 discriminator 1
 1964 0b4e 88E0      		ldi r24,lo8(8)
 1965 0b50 90E0      		ldi r25,0
 1966 0b52 00C0      		rjmp .L101
 1967               	.L100:
 1968               		.loc 2 552 0 discriminator 2
 1969 0b54 80E0      		ldi r24,0
 1970 0b56 90E0      		ldi r25,0
 1971               	.L101:
 1972               		.loc 2 552 0 discriminator 4
 1973 0b58 822B      		or r24,r18
 1974 0b5a 932B      		or r25,r19
 1975 0b5c 9A87      		std Y+10,r25
 1976 0b5e 8987      		std Y+9,r24
 553:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_PANID == header->macDstPanId) ? NWK_IND_OPT_BROADCAST_PAN_ID : 0;
 1977               		.loc 2 553 0 is_stmt 1 discriminator 4
 1978 0b60 2985      		ldd r18,Y+9
 1979 0b62 3A85      		ldd r19,Y+10
 1980 0b64 8981      		ldd r24,Y+1
 1981 0b66 9A81      		ldd r25,Y+2
 1982 0b68 FC01      		movw r30,r24
 1983 0b6a 8381      		ldd r24,Z+3
 1984 0b6c 9481      		ldd r25,Z+4
 1985 0b6e 0196      		adiw r24,1
 1986 0b70 01F4      		brne .L102
 1987               		.loc 2 553 0 is_stmt 0 discriminator 1
 1988 0b72 80E1      		ldi r24,lo8(16)
 1989 0b74 90E0      		ldi r25,0
 1990 0b76 00C0      		rjmp .L103
 1991               	.L102:
 1992               		.loc 2 553 0 discriminator 2
 1993 0b78 80E0      		ldi r24,0
 1994 0b7a 90E0      		ldi r25,0
 1995               	.L103:
 1996               		.loc 2 553 0 discriminator 4
 1997 0b7c 822B      		or r24,r18
 1998 0b7e 932B      		or r25,r19
 1999 0b80 9A87      		std Y+10,r25
 2000 0b82 8987      		std Y+9,r24
 554:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 555:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2001               		.loc 2 555 0 is_stmt 1 discriminator 4
 2002 0b84 8981      		ldd r24,Y+1
 2003 0b86 9A81      		ldd r25,Y+2
 2004 0b88 FC01      		movw r30,r24
 2005 0b8a 8785      		ldd r24,Z+15
 2006 0b8c 8295      		swap r24
 2007 0b8e 8F70      		andi r24,lo8(15)
 2008 0b90 882F      		mov r24,r24
 2009 0b92 90E0      		ldi r25,0
 2010 0b94 0396      		adiw r24,3
 2011 0b96 880F      		lsl r24
 2012 0b98 991F      		rol r25
 2013 0b9a 8050      		subi r24,lo8(-(nwkIb))
 2014 0b9c 9040      		sbci r25,hi8(-(nwkIb))
 2015 0b9e FC01      		movw r30,r24
 2016 0ba0 2081      		ld r18,Z
 2017 0ba2 3181      		ldd r19,Z+1
 2018 0ba4 CE01      		movw r24,r28
 2019 0ba6 0396      		adiw r24,3
 2020 0ba8 F901      		movw r30,r18
 2021 0baa 0995      		icall
 2022               	.L104:
 2023               	/* epilogue start */
 556:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2024               		.loc 2 556 0 discriminator 1
 2025 0bac 6196      		adiw r28,17
 2026 0bae 0FB6      		in __tmp_reg__,__SREG__
 2027 0bb0 F894      		cli
 2028 0bb2 DEBF      		out __SP_H__,r29
 2029 0bb4 0FBE      		out __SREG__,__tmp_reg__
 2030 0bb6 CDBF      		out __SP_L__,r28
 2031 0bb8 DF91      		pop r29
 2032 0bba CF91      		pop r28
 2033 0bbc 0895      		ret
 2034               		.cfi_endproc
 2035               	.LFE74:
 2038               	nwkRxIndicateBeaconFrame:
 2039               	.LFB75:
 557:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 558:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 559:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 560:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateBeaconFrame(NwkFrame_t *frame)
 561:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2040               		.loc 2 561 0
 2041               		.cfi_startproc
 2042 0bbe CF93      		push r28
 2043               	.LCFI40:
 2044               		.cfi_def_cfa_offset 3
 2045               		.cfi_offset 28, -2
 2046 0bc0 DF93      		push r29
 2047               	.LCFI41:
 2048               		.cfi_def_cfa_offset 4
 2049               		.cfi_offset 29, -3
 2050 0bc2 CDB7      		in r28,__SP_L__
 2051 0bc4 DEB7      		in r29,__SP_H__
 2052               	.LCFI42:
 2053               		.cfi_def_cfa_register 28
 2054 0bc6 6197      		sbiw r28,17
 2055               	.LCFI43:
 2056               		.cfi_def_cfa_offset 21
 2057 0bc8 0FB6      		in __tmp_reg__,__SREG__
 2058 0bca F894      		cli
 2059 0bcc DEBF      		out __SP_H__,r29
 2060 0bce 0FBE      		out __SREG__,__tmp_reg__
 2061 0bd0 CDBF      		out __SP_L__,r28
 2062               	/* prologue: function */
 2063               	/* frame size = 17 */
 2064               	/* stack size = 19 */
 2065               	.L__stack_usage = 19
 2066 0bd2 998B      		std Y+17,r25
 2067 0bd4 888B      		std Y+16,r24
 562:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 2068               		.loc 2 562 0
 2069 0bd6 8889      		ldd r24,Y+16
 2070 0bd8 9989      		ldd r25,Y+17
 2071 0bda 0296      		adiw r24,2
 2072 0bdc 9A83      		std Y+2,r25
 2073 0bde 8983      		std Y+1,r24
 563:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 564:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 565:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2074               		.loc 2 565 0
 2075 0be0 8889      		ldd r24,Y+16
 2076 0be2 9989      		ldd r25,Y+17
 2077 0be4 24E2      		ldi r18,lo8(36)
 2078 0be6 FC01      		movw r30,r24
 2079 0be8 2083      		st Z,r18
 566:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 567:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[0]) {
 2080               		.loc 2 567 0
 2081 0bea 8091 0000 		lds r24,nwkIb+6
 2082 0bee 9091 0000 		lds r25,nwkIb+6+1
 2083 0bf2 892B      		or r24,r25
 2084 0bf4 01F4      		brne .L106
 568:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2085               		.loc 2 568 0
 2086 0bf6 80E0      		ldi r24,0
 2087 0bf8 00C0      		rjmp .L108
 2088               	.L106:
 569:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 570:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 571:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = frame->beacon.macSrcAddr;
 2089               		.loc 2 571 0
 2090 0bfa 8889      		ldd r24,Y+16
 2091 0bfc 9989      		ldd r25,Y+17
 2092 0bfe FC01      		movw r30,r24
 2093 0c00 8781      		ldd r24,Z+7
 2094 0c02 9085      		ldd r25,Z+8
 2095 0c04 9C83      		std Y+4,r25
 2096 0c06 8B83      		std Y+3,r24
 572:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = frame->beacon.macSrcAddr;
 2097               		.loc 2 572 0
 2098 0c08 8889      		ldd r24,Y+16
 2099 0c0a 9989      		ldd r25,Y+17
 2100 0c0c FC01      		movw r30,r24
 2101 0c0e 8781      		ldd r24,Z+7
 2102 0c10 9085      		ldd r25,Z+8
 2103 0c12 9E83      		std Y+6,r25
 2104 0c14 8D83      		std Y+5,r24
 573:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2105               		.loc 2 573 0
 2106 0c16 1F82      		std Y+7,__zero_reg__
 574:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2107               		.loc 2 574 0
 2108 0c18 1886      		std Y+8,__zero_reg__
 575:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2109               		.loc 2 575 0
 2110 0c1a 8889      		ldd r24,Y+16
 2111 0c1c 9989      		ldd r25,Y+17
 2112 0c1e 8F57      		subi r24,127
 2113 0c20 9F4F      		sbci r25,-1
 2114 0c22 FC01      		movw r30,r24
 2115 0c24 8081      		ld r24,Z
 2116 0c26 9181      		ldd r25,Z+1
 2117 0c28 9C87      		std Y+12,r25
 2118 0c2a 8B87      		std Y+11,r24
 576:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2119               		.loc 2 576 0
 2120 0c2c 8889      		ldd r24,Y+16
 2121 0c2e 9989      		ldd r25,Y+17
 2122 0c30 0E94 0000 		call nwkFramePayloadSize
 2123 0c34 8D87      		std Y+13,r24
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2124               		.loc 2 577 0
 2125 0c36 8889      		ldd r24,Y+16
 2126 0c38 9989      		ldd r25,Y+17
 2127 0c3a 8D57      		subi r24,125
 2128 0c3c 9F4F      		sbci r25,-1
 2129 0c3e FC01      		movw r30,r24
 2130 0c40 8081      		ld r24,Z
 2131 0c42 8E87      		std Y+14,r24
 578:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2132               		.loc 2 578 0
 2133 0c44 8889      		ldd r24,Y+16
 2134 0c46 9989      		ldd r25,Y+17
 2135 0c48 8C57      		subi r24,124
 2136 0c4a 9F4F      		sbci r25,-1
 2137 0c4c FC01      		movw r30,r24
 2138 0c4e 8081      		ld r24,Z
 2139 0c50 8F87      		std Y+15,r24
 579:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 580:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_BEACON;
 2140               		.loc 2 580 0
 2141 0c52 80E8      		ldi r24,lo8(-128)
 2142 0c54 90E0      		ldi r25,0
 2143 0c56 9A87      		std Y+10,r25
 2144 0c58 8987      		std Y+9,r24
 581:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 582:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2145               		.loc 2 582 0
 2146 0c5a 8981      		ldd r24,Y+1
 2147 0c5c 9A81      		ldd r25,Y+2
 2148 0c5e FC01      		movw r30,r24
 2149 0c60 8785      		ldd r24,Z+15
 2150 0c62 8295      		swap r24
 2151 0c64 8F70      		andi r24,lo8(15)
 2152 0c66 882F      		mov r24,r24
 2153 0c68 90E0      		ldi r25,0
 2154 0c6a 0396      		adiw r24,3
 2155 0c6c 880F      		lsl r24
 2156 0c6e 991F      		rol r25
 2157 0c70 8050      		subi r24,lo8(-(nwkIb))
 2158 0c72 9040      		sbci r25,hi8(-(nwkIb))
 2159 0c74 FC01      		movw r30,r24
 2160 0c76 2081      		ld r18,Z
 2161 0c78 3181      		ldd r19,Z+1
 2162 0c7a CE01      		movw r24,r28
 2163 0c7c 0396      		adiw r24,3
 2164 0c7e F901      		movw r30,r18
 2165 0c80 0995      		icall
 2166               	.L108:
 2167               	/* epilogue start */
 583:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2168               		.loc 2 583 0 discriminator 1
 2169 0c82 6196      		adiw r28,17
 2170 0c84 0FB6      		in __tmp_reg__,__SREG__
 2171 0c86 F894      		cli
 2172 0c88 DEBF      		out __SP_H__,r29
 2173 0c8a 0FBE      		out __SREG__,__tmp_reg__
 2174 0c8c CDBF      		out __SP_L__,r28
 2175 0c8e DF91      		pop r29
 2176 0c90 CF91      		pop r28
 2177 0c92 0895      		ret
 2178               		.cfi_endproc
 2179               	.LFE75:
 2182               	nwkRxIndicateLLBeaconFrame:
 2183               	.LFB76:
 584:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 585:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 586:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 587:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 588:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLBeaconFrame(NwkFrame_t *frame)
 589:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2184               		.loc 2 589 0
 2185               		.cfi_startproc
 2186 0c94 CF93      		push r28
 2187               	.LCFI44:
 2188               		.cfi_def_cfa_offset 3
 2189               		.cfi_offset 28, -2
 2190 0c96 DF93      		push r29
 2191               	.LCFI45:
 2192               		.cfi_def_cfa_offset 4
 2193               		.cfi_offset 29, -3
 2194 0c98 CDB7      		in r28,__SP_L__
 2195 0c9a DEB7      		in r29,__SP_H__
 2196               	.LCFI46:
 2197               		.cfi_def_cfa_register 28
 2198 0c9c 2F97      		sbiw r28,15
 2199               	.LCFI47:
 2200               		.cfi_def_cfa_offset 19
 2201 0c9e 0FB6      		in __tmp_reg__,__SREG__
 2202 0ca0 F894      		cli
 2203 0ca2 DEBF      		out __SP_H__,r29
 2204 0ca4 0FBE      		out __SREG__,__tmp_reg__
 2205 0ca6 CDBF      		out __SP_L__,r28
 2206               	/* prologue: function */
 2207               	/* frame size = 15 */
 2208               	/* stack size = 17 */
 2209               	.L__stack_usage = 17
 2210 0ca8 9F87      		std Y+15,r25
 2211 0caa 8E87      		std Y+14,r24
 590:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 591:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 592:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2212               		.loc 2 592 0
 2213 0cac 8E85      		ldd r24,Y+14
 2214 0cae 9F85      		ldd r25,Y+15
 2215 0cb0 24E2      		ldi r18,lo8(36)
 2216 0cb2 FC01      		movw r30,r24
 2217 0cb4 2083      		st Z,r18
 593:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 594:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_BEACON_ENDPOINT]) {
 2218               		.loc 2 594 0
 2219 0cb6 8091 0000 		lds r24,nwkIb+6
 2220 0cba 9091 0000 		lds r25,nwkIb+6+1
 2221 0cbe 892B      		or r24,r25
 2222 0cc0 01F4      		brne .L110
 595:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2223               		.loc 2 595 0
 2224 0cc2 80E0      		ldi r24,0
 2225 0cc4 00C0      		rjmp .L112
 2226               	.L110:
 596:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 597:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Beacon as they are in standart 802.15.4
 598:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 599:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 600:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2227               		.loc 2 600 0
 2228 0cc6 1A82      		std Y+2,__zero_reg__
 2229 0cc8 1982      		std Y+1,__zero_reg__
 601:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2230               		.loc 2 601 0
 2231 0cca 1C82      		std Y+4,__zero_reg__
 2232 0ccc 1B82      		std Y+3,__zero_reg__
 602:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2233               		.loc 2 602 0
 2234 0cce 1D82      		std Y+5,__zero_reg__
 603:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2235               		.loc 2 603 0
 2236 0cd0 1E82      		std Y+6,__zero_reg__
 604:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 605:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->LLbeacon;
 2237               		.loc 2 605 0
 2238 0cd2 8E85      		ldd r24,Y+14
 2239 0cd4 9F85      		ldd r25,Y+15
 2240 0cd6 0296      		adiw r24,2
 2241 0cd8 9A87      		std Y+10,r25
 2242 0cda 8987      		std Y+9,r24
 606:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2243               		.loc 2 606 0
 2244 0cdc 8E85      		ldd r24,Y+14
 2245 0cde 9F85      		ldd r25,Y+15
 2246 0ce0 0E94 0000 		call nwkFramePayloadSize
 2247 0ce4 8B87      		std Y+11,r24
 607:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2248               		.loc 2 607 0
 2249 0ce6 8E85      		ldd r24,Y+14
 2250 0ce8 9F85      		ldd r25,Y+15
 2251 0cea 8D57      		subi r24,125
 2252 0cec 9F4F      		sbci r25,-1
 2253 0cee FC01      		movw r30,r24
 2254 0cf0 8081      		ld r24,Z
 2255 0cf2 8C87      		std Y+12,r24
 608:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2256               		.loc 2 608 0
 2257 0cf4 8E85      		ldd r24,Y+14
 2258 0cf6 9F85      		ldd r25,Y+15
 2259 0cf8 8C57      		subi r24,124
 2260 0cfa 9F4F      		sbci r25,-1
 2261 0cfc FC01      		movw r30,r24
 2262 0cfe 8081      		ld r24,Z
 2263 0d00 8D87      		std Y+13,r24
 609:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 610:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_BEACON;
 2264               		.loc 2 610 0
 2265 0d02 80E0      		ldi r24,0
 2266 0d04 91E0      		ldi r25,lo8(1)
 2267 0d06 9887      		std Y+8,r25
 2268 0d08 8F83      		std Y+7,r24
 611:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 612:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 613:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_BEACON_ENDPOINT](&ind);
 2269               		.loc 2 613 0
 2270 0d0a 2091 0000 		lds r18,nwkIb+6
 2271 0d0e 3091 0000 		lds r19,nwkIb+6+1
 2272 0d12 CE01      		movw r24,r28
 2273 0d14 0196      		adiw r24,1
 2274 0d16 F901      		movw r30,r18
 2275 0d18 0995      		icall
 2276               	.L112:
 2277               	/* epilogue start */
 614:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2278               		.loc 2 614 0 discriminator 1
 2279 0d1a 2F96      		adiw r28,15
 2280 0d1c 0FB6      		in __tmp_reg__,__SREG__
 2281 0d1e F894      		cli
 2282 0d20 DEBF      		out __SP_H__,r29
 2283 0d22 0FBE      		out __SREG__,__tmp_reg__
 2284 0d24 CDBF      		out __SP_L__,r28
 2285 0d26 DF91      		pop r29
 2286 0d28 CF91      		pop r28
 2287 0d2a 0895      		ret
 2288               		.cfi_endproc
 2289               	.LFE76:
 2292               	nwkRxIndicateLLCommandFrame:
 2293               	.LFB77:
 615:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 616:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLCommandFrame(NwkFrame_t *frame)
 617:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2294               		.loc 2 617 0
 2295               		.cfi_startproc
 2296 0d2c CF93      		push r28
 2297               	.LCFI48:
 2298               		.cfi_def_cfa_offset 3
 2299               		.cfi_offset 28, -2
 2300 0d2e DF93      		push r29
 2301               	.LCFI49:
 2302               		.cfi_def_cfa_offset 4
 2303               		.cfi_offset 29, -3
 2304 0d30 CDB7      		in r28,__SP_L__
 2305 0d32 DEB7      		in r29,__SP_H__
 2306               	.LCFI50:
 2307               		.cfi_def_cfa_register 28
 2308 0d34 6197      		sbiw r28,17
 2309               	.LCFI51:
 2310               		.cfi_def_cfa_offset 21
 2311 0d36 0FB6      		in __tmp_reg__,__SREG__
 2312 0d38 F894      		cli
 2313 0d3a DEBF      		out __SP_H__,r29
 2314 0d3c 0FBE      		out __SREG__,__tmp_reg__
 2315 0d3e CDBF      		out __SP_L__,r28
 2316               	/* prologue: function */
 2317               	/* frame size = 17 */
 2318               	/* stack size = 19 */
 2319               	.L__stack_usage = 19
 2320 0d40 998B      		std Y+17,r25
 2321 0d42 888B      		std Y+16,r24
 618:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 619:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 620:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2322               		.loc 2 620 0
 2323 0d44 8889      		ldd r24,Y+16
 2324 0d46 9989      		ldd r25,Y+17
 2325 0d48 0296      		adiw r24,2
 2326 0d4a 9A83      		std Y+2,r25
 2327 0d4c 8983      		std Y+1,r24
 621:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 622:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 623:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2328               		.loc 2 623 0
 2329 0d4e 8889      		ldd r24,Y+16
 2330 0d50 9989      		ldd r25,Y+17
 2331 0d52 24E2      		ldi r18,lo8(36)
 2332 0d54 FC01      		movw r30,r24
 2333 0d56 2083      		st Z,r18
 624:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 625:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_COMMAND_ENDPOINT]) {
 2334               		.loc 2 625 0
 2335 0d58 8091 0000 		lds r24,nwkIb+12
 2336 0d5c 9091 0000 		lds r25,nwkIb+12+1
 2337 0d60 892B      		or r24,r25
 2338 0d62 01F4      		brne .L114
 626:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2339               		.loc 2 626 0
 2340 0d64 80E0      		ldi r24,0
 2341 0d66 00C0      		rjmp .L116
 2342               	.L114:
 627:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 628:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 629:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 630:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 631:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 632:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2343               		.loc 2 632 0
 2344 0d68 1C82      		std Y+4,__zero_reg__
 2345 0d6a 1B82      		std Y+3,__zero_reg__
 633:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2346               		.loc 2 633 0
 2347 0d6c 1E82      		std Y+6,__zero_reg__
 2348 0d6e 1D82      		std Y+5,__zero_reg__
 634:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2349               		.loc 2 634 0
 2350 0d70 1F82      		std Y+7,__zero_reg__
 635:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2351               		.loc 2 635 0
 2352 0d72 1886      		std Y+8,__zero_reg__
 636:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 637:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 638:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2353               		.loc 2 638 0
 2354 0d74 8889      		ldd r24,Y+16
 2355 0d76 9989      		ldd r25,Y+17
 2356 0d78 8F57      		subi r24,127
 2357 0d7a 9F4F      		sbci r25,-1
 2358 0d7c FC01      		movw r30,r24
 2359 0d7e 8081      		ld r24,Z
 2360 0d80 9181      		ldd r25,Z+1
 2361 0d82 9C87      		std Y+12,r25
 2362 0d84 8B87      		std Y+11,r24
 639:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2363               		.loc 2 640 0
 2364 0d86 8889      		ldd r24,Y+16
 2365 0d88 9989      		ldd r25,Y+17
 2366 0d8a 0E94 0000 		call nwkFramePayloadSize
 2367 0d8e 8D87      		std Y+13,r24
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2368               		.loc 2 641 0
 2369 0d90 8889      		ldd r24,Y+16
 2370 0d92 9989      		ldd r25,Y+17
 2371 0d94 8D57      		subi r24,125
 2372 0d96 9F4F      		sbci r25,-1
 2373 0d98 FC01      		movw r30,r24
 2374 0d9a 8081      		ld r24,Z
 2375 0d9c 8E87      		std Y+14,r24
 642:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2376               		.loc 2 642 0
 2377 0d9e 8889      		ldd r24,Y+16
 2378 0da0 9989      		ldd r25,Y+17
 2379 0da2 8C57      		subi r24,124
 2380 0da4 9F4F      		sbci r25,-1
 2381 0da6 FC01      		movw r30,r24
 2382 0da8 8081      		ld r24,Z
 2383 0daa 8F87      		std Y+15,r24
 643:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 644:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_MACCOMMAND;
 2384               		.loc 2 644 0
 2385 0dac 80E0      		ldi r24,0
 2386 0dae 92E0      		ldi r25,lo8(2)
 2387 0db0 9A87      		std Y+10,r25
 2388 0db2 8987      		std Y+9,r24
 645:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 646:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_COMMAND_ENDPOINT](&ind);
 2389               		.loc 2 646 0
 2390 0db4 2091 0000 		lds r18,nwkIb+12
 2391 0db8 3091 0000 		lds r19,nwkIb+12+1
 2392 0dbc CE01      		movw r24,r28
 2393 0dbe 0396      		adiw r24,3
 2394 0dc0 F901      		movw r30,r18
 2395 0dc2 0995      		icall
 2396               	.L116:
 2397               	/* epilogue start */
 647:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2398               		.loc 2 647 0 discriminator 1
 2399 0dc4 6196      		adiw r28,17
 2400 0dc6 0FB6      		in __tmp_reg__,__SREG__
 2401 0dc8 F894      		cli
 2402 0dca DEBF      		out __SP_H__,r29
 2403 0dcc 0FBE      		out __SREG__,__tmp_reg__
 2404 0dce CDBF      		out __SP_L__,r28
 2405 0dd0 DF91      		pop r29
 2406 0dd2 CF91      		pop r28
 2407 0dd4 0895      		ret
 2408               		.cfi_endproc
 2409               	.LFE77:
 2412               	nwkRxIndicateLLDataFrame:
 2413               	.LFB78:
 648:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 649:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLDataFrame(NwkFrame_t *frame)
 650:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {		
 2414               		.loc 2 650 0
 2415               		.cfi_startproc
 2416 0dd6 CF93      		push r28
 2417               	.LCFI52:
 2418               		.cfi_def_cfa_offset 3
 2419               		.cfi_offset 28, -2
 2420 0dd8 DF93      		push r29
 2421               	.LCFI53:
 2422               		.cfi_def_cfa_offset 4
 2423               		.cfi_offset 29, -3
 2424 0dda CDB7      		in r28,__SP_L__
 2425 0ddc DEB7      		in r29,__SP_H__
 2426               	.LCFI54:
 2427               		.cfi_def_cfa_register 28
 2428 0dde 6197      		sbiw r28,17
 2429               	.LCFI55:
 2430               		.cfi_def_cfa_offset 21
 2431 0de0 0FB6      		in __tmp_reg__,__SREG__
 2432 0de2 F894      		cli
 2433 0de4 DEBF      		out __SP_H__,r29
 2434 0de6 0FBE      		out __SREG__,__tmp_reg__
 2435 0de8 CDBF      		out __SP_L__,r28
 2436               	/* prologue: function */
 2437               	/* frame size = 17 */
 2438               	/* stack size = 19 */
 2439               	.L__stack_usage = 19
 2440 0dea 998B      		std Y+17,r25
 2441 0dec 888B      		std Y+16,r24
 651:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2442               		.loc 2 651 0
 2443 0dee 8889      		ldd r24,Y+16
 2444 0df0 9989      		ldd r25,Y+17
 2445 0df2 0296      		adiw r24,2
 2446 0df4 9A83      		std Y+2,r25
 2447 0df6 8983      		std Y+1,r24
 652:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 653:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 654:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2448               		.loc 2 654 0
 2449 0df8 8889      		ldd r24,Y+16
 2450 0dfa 9989      		ldd r25,Y+17
 2451 0dfc 24E2      		ldi r18,lo8(36)
 2452 0dfe FC01      		movw r30,r24
 2453 0e00 2083      		st Z,r18
 655:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 656:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_DATA_ENDPOINT]) {
 2454               		.loc 2 656 0
 2455 0e02 8091 0000 		lds r24,nwkIb+8
 2456 0e06 9091 0000 		lds r25,nwkIb+8+1
 2457 0e0a 892B      		or r24,r25
 2458 0e0c 01F4      		brne .L118
 657:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2459               		.loc 2 657 0
 2460 0e0e 80E0      		ldi r24,0
 2461 0e10 00C0      		rjmp .L120
 2462               	.L118:
 658:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 659:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 660:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 661:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 662:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 663:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2463               		.loc 2 663 0
 2464 0e12 1C82      		std Y+4,__zero_reg__
 2465 0e14 1B82      		std Y+3,__zero_reg__
 664:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2466               		.loc 2 664 0
 2467 0e16 1E82      		std Y+6,__zero_reg__
 2468 0e18 1D82      		std Y+5,__zero_reg__
 665:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2469               		.loc 2 665 0
 2470 0e1a 1F82      		std Y+7,__zero_reg__
 666:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2471               		.loc 2 666 0
 2472 0e1c 1886      		std Y+8,__zero_reg__
 667:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 669:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2473               		.loc 2 669 0
 2474 0e1e 8889      		ldd r24,Y+16
 2475 0e20 9989      		ldd r25,Y+17
 2476 0e22 8F57      		subi r24,127
 2477 0e24 9F4F      		sbci r25,-1
 2478 0e26 FC01      		movw r30,r24
 2479 0e28 8081      		ld r24,Z
 2480 0e2a 9181      		ldd r25,Z+1
 2481 0e2c 9C87      		std Y+12,r25
 2482 0e2e 8B87      		std Y+11,r24
 670:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 671:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2483               		.loc 2 671 0
 2484 0e30 8889      		ldd r24,Y+16
 2485 0e32 9989      		ldd r25,Y+17
 2486 0e34 0E94 0000 		call nwkFramePayloadSize
 2487 0e38 8D87      		std Y+13,r24
 672:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2488               		.loc 2 672 0
 2489 0e3a 8889      		ldd r24,Y+16
 2490 0e3c 9989      		ldd r25,Y+17
 2491 0e3e 8D57      		subi r24,125
 2492 0e40 9F4F      		sbci r25,-1
 2493 0e42 FC01      		movw r30,r24
 2494 0e44 8081      		ld r24,Z
 2495 0e46 8E87      		std Y+14,r24
 673:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2496               		.loc 2 673 0
 2497 0e48 8889      		ldd r24,Y+16
 2498 0e4a 9989      		ldd r25,Y+17
 2499 0e4c 8C57      		subi r24,124
 2500 0e4e 9F4F      		sbci r25,-1
 2501 0e50 FC01      		movw r30,r24
 2502 0e52 8081      		ld r24,Z
 2503 0e54 8F87      		std Y+15,r24
 674:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 675:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_DATA;
 2504               		.loc 2 675 0
 2505 0e56 80E0      		ldi r24,0
 2506 0e58 94E0      		ldi r25,lo8(4)
 2507 0e5a 9A87      		std Y+10,r25
 2508 0e5c 8987      		std Y+9,r24
 676:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 677:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_DATA_ENDPOINT](&ind);
 2509               		.loc 2 677 0
 2510 0e5e 2091 0000 		lds r18,nwkIb+8
 2511 0e62 3091 0000 		lds r19,nwkIb+8+1
 2512 0e66 CE01      		movw r24,r28
 2513 0e68 0396      		adiw r24,3
 2514 0e6a F901      		movw r30,r18
 2515 0e6c 0995      		icall
 2516               	.L120:
 2517               	/* epilogue start */
 678:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2518               		.loc 2 678 0 discriminator 1
 2519 0e6e 6196      		adiw r28,17
 2520 0e70 0FB6      		in __tmp_reg__,__SREG__
 2521 0e72 F894      		cli
 2522 0e74 DEBF      		out __SP_H__,r29
 2523 0e76 0FBE      		out __SREG__,__tmp_reg__
 2524 0e78 CDBF      		out __SP_L__,r28
 2525 0e7a DF91      		pop r29
 2526 0e7c CF91      		pop r28
 2527 0e7e 0895      		ret
 2528               		.cfi_endproc
 2529               	.LFE78:
 2532               	nwkRxIndicateLLACKFrame:
 2533               	.LFB79:
 679:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 680:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLACKFrame(NwkFrame_t *frame)
 681:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2534               		.loc 2 681 0
 2535               		.cfi_startproc
 2536 0e80 CF93      		push r28
 2537               	.LCFI56:
 2538               		.cfi_def_cfa_offset 3
 2539               		.cfi_offset 28, -2
 2540 0e82 DF93      		push r29
 2541               	.LCFI57:
 2542               		.cfi_def_cfa_offset 4
 2543               		.cfi_offset 29, -3
 2544 0e84 CDB7      		in r28,__SP_L__
 2545 0e86 DEB7      		in r29,__SP_H__
 2546               	.LCFI58:
 2547               		.cfi_def_cfa_register 28
 2548 0e88 6197      		sbiw r28,17
 2549               	.LCFI59:
 2550               		.cfi_def_cfa_offset 21
 2551 0e8a 0FB6      		in __tmp_reg__,__SREG__
 2552 0e8c F894      		cli
 2553 0e8e DEBF      		out __SP_H__,r29
 2554 0e90 0FBE      		out __SREG__,__tmp_reg__
 2555 0e92 CDBF      		out __SP_L__,r28
 2556               	/* prologue: function */
 2557               	/* frame size = 17 */
 2558               	/* stack size = 19 */
 2559               	.L__stack_usage = 19
 2560 0e94 998B      		std Y+17,r25
 2561 0e96 888B      		std Y+16,r24
 682:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 683:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2562               		.loc 2 683 0
 2563 0e98 8889      		ldd r24,Y+16
 2564 0e9a 9989      		ldd r25,Y+17
 2565 0e9c 0296      		adiw r24,2
 2566 0e9e 9A83      		std Y+2,r25
 2567 0ea0 8983      		std Y+1,r24
 684:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 685:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 686:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2568               		.loc 2 686 0
 2569 0ea2 8889      		ldd r24,Y+16
 2570 0ea4 9989      		ldd r25,Y+17
 2571 0ea6 24E2      		ldi r18,lo8(36)
 2572 0ea8 FC01      		movw r30,r24
 2573 0eaa 2083      		st Z,r18
 687:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 688:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_ACK_ENDPOINT]) {
 2574               		.loc 2 688 0
 2575 0eac 8091 0000 		lds r24,nwkIb+14
 2576 0eb0 9091 0000 		lds r25,nwkIb+14+1
 2577 0eb4 892B      		or r24,r25
 2578 0eb6 01F4      		brne .L122
 689:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2579               		.loc 2 689 0
 2580 0eb8 80E0      		ldi r24,0
 2581 0eba 00C0      		rjmp .L124
 2582               	.L122:
 690:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 691:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 692:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* 
 693:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * this informations are not received in a LLDN Command as they are in standart 802.15.4
 694:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 695:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 696:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2583               		.loc 2 696 0
 2584 0ebc 1C82      		std Y+4,__zero_reg__
 2585 0ebe 1B82      		std Y+3,__zero_reg__
 697:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2586               		.loc 2 697 0
 2587 0ec0 1E82      		std Y+6,__zero_reg__
 2588 0ec2 1D82      		std Y+5,__zero_reg__
 698:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2589               		.loc 2 698 0
 2590 0ec4 1F82      		std Y+7,__zero_reg__
 699:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2591               		.loc 2 699 0
 2592 0ec6 1886      		std Y+8,__zero_reg__
 700:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 701:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data =  frame->payload;
 2593               		.loc 2 701 0
 2594 0ec8 8889      		ldd r24,Y+16
 2595 0eca 9989      		ldd r25,Y+17
 2596 0ecc 8F57      		subi r24,127
 2597 0ece 9F4F      		sbci r25,-1
 2598 0ed0 FC01      		movw r30,r24
 2599 0ed2 8081      		ld r24,Z
 2600 0ed4 9181      		ldd r25,Z+1
 2601 0ed6 9C87      		std Y+12,r25
 2602 0ed8 8B87      		std Y+11,r24
 702:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2603               		.loc 2 702 0
 2604 0eda 8889      		ldd r24,Y+16
 2605 0edc 9989      		ldd r25,Y+17
 2606 0ede 0E94 0000 		call nwkFramePayloadSize
 2607 0ee2 8D87      		std Y+13,r24
 703:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2608               		.loc 2 703 0
 2609 0ee4 8889      		ldd r24,Y+16
 2610 0ee6 9989      		ldd r25,Y+17
 2611 0ee8 8D57      		subi r24,125
 2612 0eea 9F4F      		sbci r25,-1
 2613 0eec FC01      		movw r30,r24
 2614 0eee 8081      		ld r24,Z
 2615 0ef0 8E87      		std Y+14,r24
 704:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2616               		.loc 2 704 0
 2617 0ef2 8889      		ldd r24,Y+16
 2618 0ef4 9989      		ldd r25,Y+17
 2619 0ef6 8C57      		subi r24,124
 2620 0ef8 9F4F      		sbci r25,-1
 2621 0efa FC01      		movw r30,r24
 2622 0efc 8081      		ld r24,Z
 2623 0efe 8F87      		std Y+15,r24
 705:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 706:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_OPT_LLDN_ACK;
 2624               		.loc 2 706 0
 2625 0f00 80E0      		ldi r24,0
 2626 0f02 90E4      		ldi r25,lo8(64)
 2627 0f04 9A87      		std Y+10,r25
 2628 0f06 8987      		std Y+9,r24
 707:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 708:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_ACK_ENDPOINT](&ind);
 2629               		.loc 2 708 0
 2630 0f08 2091 0000 		lds r18,nwkIb+14
 2631 0f0c 3091 0000 		lds r19,nwkIb+14+1
 2632 0f10 CE01      		movw r24,r28
 2633 0f12 0396      		adiw r24,3
 2634 0f14 F901      		movw r30,r18
 2635 0f16 0995      		icall
 2636               	.L124:
 2637               	/* epilogue start */
 709:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2638               		.loc 2 709 0 discriminator 1
 2639 0f18 6196      		adiw r28,17
 2640 0f1a 0FB6      		in __tmp_reg__,__SREG__
 2641 0f1c F894      		cli
 2642 0f1e DEBF      		out __SP_H__,r29
 2643 0f20 0FBE      		out __SREG__,__tmp_reg__
 2644 0f22 CDBF      		out __SP_L__,r28
 2645 0f24 DF91      		pop r29
 2646 0f26 CF91      		pop r28
 2647 0f28 0895      		ret
 2648               		.cfi_endproc
 2649               	.LFE79:
 2652               	nwkRxHandleIndication:
 2653               	.LFB80:
 710:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 711:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 712:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 713:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleIndication(NwkFrame_t *frame)
 714:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2654               		.loc 2 714 0
 2655               		.cfi_startproc
 2656 0f2a CF93      		push r28
 2657               	.LCFI60:
 2658               		.cfi_def_cfa_offset 3
 2659               		.cfi_offset 28, -2
 2660 0f2c DF93      		push r29
 2661               	.LCFI61:
 2662               		.cfi_def_cfa_offset 4
 2663               		.cfi_offset 29, -3
 2664 0f2e 00D0      		rcall .
 2665 0f30 1F92      		push __zero_reg__
 2666               	.LCFI62:
 2667               		.cfi_def_cfa_offset 7
 2668 0f32 CDB7      		in r28,__SP_L__
 2669 0f34 DEB7      		in r29,__SP_H__
 2670               	.LCFI63:
 2671               		.cfi_def_cfa_register 28
 2672               	/* prologue: function */
 2673               	/* frame size = 3 */
 2674               	/* stack size = 5 */
 2675               	.L__stack_usage = 5
 2676 0f36 9B83      		std Y+3,r25
 2677 0f38 8A83      		std Y+2,r24
 715:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool ack;
 716:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 717:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = 0;
 2678               		.loc 2 717 0
 2679 0f3a 1092 0000 		sts nwkRxAckControl,__zero_reg__
 718:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack = nwkRxIndicateDataFrame(frame);
 2680               		.loc 2 718 0
 2681 0f3e 8A81      		ldd r24,Y+2
 2682 0f40 9B81      		ldd r25,Y+3
 2683 0f42 0E94 0000 		call nwkRxIndicateDataFrame
 2684 0f46 8983      		std Y+1,r24
 719:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 720:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == frame->header.nwkFcf.ackRequest) {
 2685               		.loc 2 720 0
 2686 0f48 8A81      		ldd r24,Y+2
 2687 0f4a 9B81      		ldd r25,Y+3
 2688 0f4c FC01      		movw r30,r24
 2689 0f4e 8385      		ldd r24,Z+11
 2690 0f50 8170      		andi r24,lo8(1)
 2691 0f52 8823      		tst r24
 2692 0f54 01F4      		brne .L126
 721:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2693               		.loc 2 721 0
 2694 0f56 1982      		std Y+1,__zero_reg__
 2695               	.L126:
 722:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 724:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == frame->header.macDstAddr &&
 2696               		.loc 2 724 0
 2697 0f58 8A81      		ldd r24,Y+2
 2698 0f5a 9B81      		ldd r25,Y+3
 2699 0f5c FC01      		movw r30,r24
 2700 0f5e 8781      		ldd r24,Z+7
 2701 0f60 9085      		ldd r25,Z+8
 2702 0f62 0196      		adiw r24,1
 2703 0f64 01F4      		brne .L127
 725:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2704               		.loc 2 725 0 discriminator 1
 2705 0f66 2091 0000 		lds r18,nwkIb
 2706 0f6a 3091 0000 		lds r19,nwkIb+1
 2707 0f6e 8A81      		ldd r24,Y+2
 2708 0f70 9B81      		ldd r25,Y+3
 2709 0f72 FC01      		movw r30,r24
 2710 0f74 8785      		ldd r24,Z+15
 2711 0f76 9089      		ldd r25,Z+16
 724:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2712               		.loc 2 724 0 discriminator 1
 2713 0f78 2817      		cp r18,r24
 2714 0f7a 3907      		cpc r19,r25
 2715 0f7c 01F4      		brne .L127
 726:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			0 == frame->header.nwkFcf.multicast) {
 2716               		.loc 2 726 0
 2717 0f7e 8A81      		ldd r24,Y+2
 2718 0f80 9B81      		ldd r25,Y+3
 2719 0f82 FC01      		movw r30,r24
 2720 0f84 8385      		ldd r24,Z+11
 2721 0f86 8870      		andi r24,lo8(8)
 725:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2722               		.loc 2 725 0
 2723 0f88 8823      		tst r24
 2724 0f8a 01F4      		brne .L127
 727:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = true;
 2725               		.loc 2 727 0
 2726 0f8c 81E0      		ldi r24,lo8(1)
 2727 0f8e 8983      		std Y+1,r24
 2728               	.L127:
 728:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 729:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 730:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == frame->header.macDstPanId) {
 2729               		.loc 2 730 0
 2730 0f90 8A81      		ldd r24,Y+2
 2731 0f92 9B81      		ldd r25,Y+3
 2732 0f94 FC01      		movw r30,r24
 2733 0f96 8581      		ldd r24,Z+5
 2734 0f98 9681      		ldd r25,Z+6
 2735 0f9a 0196      		adiw r24,1
 2736 0f9c 01F4      		brne .L128
 731:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2737               		.loc 2 731 0
 2738 0f9e 1982      		std Y+1,__zero_reg__
 2739               	.L128:
 732:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 733:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 734:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == nwkIb.addr) {
 2740               		.loc 2 734 0
 2741 0fa0 8091 0000 		lds r24,nwkIb
 2742 0fa4 9091 0000 		lds r25,nwkIb+1
 2743 0fa8 0196      		adiw r24,1
 2744 0faa 01F4      		brne .L129
 735:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2745               		.loc 2 735 0
 2746 0fac 1982      		std Y+1,__zero_reg__
 2747               	.L129:
 736:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 737:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 738:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ack) {
 2748               		.loc 2 738 0
 2749 0fae 8981      		ldd r24,Y+1
 2750 0fb0 8823      		tst r24
 2751 0fb2 01F0      		breq .L130
 739:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxSendAck(frame);
 2752               		.loc 2 739 0
 2753 0fb4 8A81      		ldd r24,Y+2
 2754 0fb6 9B81      		ldd r25,Y+3
 2755 0fb8 0E94 0000 		call nwkRxSendAck
 2756               	.L130:
 740:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 741:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 742:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2757               		.loc 2 742 0
 2758 0fbc 8A81      		ldd r24,Y+2
 2759 0fbe 9B81      		ldd r25,Y+3
 2760 0fc0 24E2      		ldi r18,lo8(36)
 2761 0fc2 FC01      		movw r30,r24
 2762 0fc4 2083      		st Z,r18
 743:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2763               		.loc 2 743 0
 2764 0fc6 0000      		nop
 2765               	/* epilogue start */
 2766 0fc8 0F90      		pop __tmp_reg__
 2767 0fca 0F90      		pop __tmp_reg__
 2768 0fcc 0F90      		pop __tmp_reg__
 2769 0fce DF91      		pop r29
 2770 0fd0 CF91      		pop r28
 2771 0fd2 0895      		ret
 2772               		.cfi_endproc
 2773               	.LFE80:
 2775               	.global	nwkRxTaskHandler
 2777               	nwkRxTaskHandler:
 2778               	.LFB81:
 744:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 745:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 746:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Rx Module task handler
 747:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 748:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxTaskHandler(void)
 749:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2779               		.loc 2 749 0
 2780               		.cfi_startproc
 2781 0fd4 CF93      		push r28
 2782               	.LCFI64:
 2783               		.cfi_def_cfa_offset 3
 2784               		.cfi_offset 28, -2
 2785 0fd6 DF93      		push r29
 2786               	.LCFI65:
 2787               		.cfi_def_cfa_offset 4
 2788               		.cfi_offset 29, -3
 2789 0fd8 00D0      		rcall .
 2790               	.LCFI66:
 2791               		.cfi_def_cfa_offset 6
 2792 0fda CDB7      		in r28,__SP_L__
 2793 0fdc DEB7      		in r29,__SP_H__
 2794               	.LCFI67:
 2795               		.cfi_def_cfa_register 28
 2796               	/* prologue: function */
 2797               	/* frame size = 2 */
 2798               	/* stack size = 4 */
 2799               	.L__stack_usage = 4
 750:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame = NULL;
 2800               		.loc 2 750 0
 2801 0fde 1A82      		std Y+2,__zero_reg__
 2802 0fe0 1982      		std Y+1,__zero_reg__
 751:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 752:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 2803               		.loc 2 752 0
 2804 0fe2 00C0      		rjmp .L132
 2805               	.L142:
 753:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2806               		.loc 2 753 0
 2807 0fe4 8981      		ldd r24,Y+1
 2808 0fe6 9A81      		ldd r25,Y+2
 2809 0fe8 FC01      		movw r30,r24
 2810 0fea 8081      		ld r24,Z
 2811 0fec 882F      		mov r24,r24
 2812 0fee 90E0      		ldi r25,0
 2813 0ff0 092E      		mov __tmp_reg__,r25
 2814 0ff2 000C      		lsl r0
 2815 0ff4 AA0B      		sbc r26,r26
 2816 0ff6 BB0B      		sbc r27,r27
 2817 0ff8 40E2      		ldi r20,lo8(32)
 2818 0ffa 50E0      		ldi r21,0
 2819 0ffc 29E0      		ldi r18,lo8(9)
 2820 0ffe 30E0      		ldi r19,0
 2821 1000 841B      		sub r24,r20
 2822 1002 950B      		sbc r25,r21
 2823 1004 2817      		cp r18,r24
 2824 1006 3907      		cpc r19,r25
 2825 1008 00F0      		brlo .L132
 2826 100a 8050      		subi r24,lo8(-(gs(.L134)))
 2827 100c 9040      		sbci r25,hi8(-(gs(.L134)))
 2828 100e FC01      		movw r30,r24
 2829 1010 0C94 0000 		jmp __tablejump2__
 2830               		.section	.progmem.gcc_sw_table,"a",@progbits
 2831               		.p2align	1
 2832               	.L134:
 2833 0000 0000      		.word gs(.L133)
 2834 0002 0000      		.word gs(.L132)
 2835 0004 0000      		.word gs(.L135)
 2836 0006 0000      		.word gs(.L132)
 2837 0008 0000      		.word gs(.L136)
 2838 000a 0000      		.word gs(.L137)
 2839 000c 0000      		.word gs(.L138)
 2840 000e 0000      		.word gs(.L139)
 2841 0010 0000      		.word gs(.L140)
 2842 0012 0000      		.word gs(.L141)
 2843               		.text
 2844               	.L133:
 754:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_RECEIVED:
 755:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 756:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleReceivedFrame(frame);
 2845               		.loc 2 756 0
 2846 1014 8981      		ldd r24,Y+1
 2847 1016 9A81      		ldd r25,Y+2
 2848 1018 0E94 0000 		call nwkRxHandleReceivedFrame
 757:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 758:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2849               		.loc 2 758 0
 2850 101c 00C0      		rjmp .L132
 2851               	.L135:
 759:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 760:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 761:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_DECRYPT:
 762:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 763:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkSecurityProcess(frame, false);
 764:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 765:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 766:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 767:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 768:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_INDICATE:
 769:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 770:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleIndication(frame);
 2852               		.loc 2 770 0
 2853 101e 8981      		ldd r24,Y+1
 2854 1020 9A81      		ldd r25,Y+2
 2855 1022 0E94 0000 		call nwkRxHandleIndication
 771:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 772:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2856               		.loc 2 772 0
 2857 1026 00C0      		rjmp .L132
 2858               	.L136:
 773:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 774:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 775:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_ROUTE:
 776:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 777:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRouteFrame(frame);
 778:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 779:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 780:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 781:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 782:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_FINISH:
 783:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 784:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkFrameFree(frame);
 2859               		.loc 2 784 0
 2860 1028 8981      		ldd r24,Y+1
 2861 102a 9A81      		ldd r25,Y+2
 2862 102c 0E94 0000 		call nwkFrameFree
 785:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 786:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2863               		.loc 2 786 0
 2864 1030 00C0      		rjmp .L132
 2865               	.L137:
 787:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 788:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_BEACON:
 789:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 790:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateBeaconFrame(frame);
 2866               		.loc 2 790 0
 2867 1032 8981      		ldd r24,Y+1
 2868 1034 9A81      		ldd r25,Y+2
 2869 1036 0E94 0000 		call nwkRxIndicateBeaconFrame
 791:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 792:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2870               		.loc 2 792 0
 2871 103a 00C0      		rjmp .L132
 2872               	.L138:
 793:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 794:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 795:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLBEACON:
 796:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 797:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLBeaconFrame(frame);
 2873               		.loc 2 797 0
 2874 103c 8981      		ldd r24,Y+1
 2875 103e 9A81      		ldd r25,Y+2
 2876 1040 0E94 0000 		call nwkRxIndicateLLBeaconFrame
 798:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 799:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2877               		.loc 2 799 0
 2878 1044 00C0      		rjmp .L132
 2879               	.L139:
 800:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 801:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLCOMMAND:
 802:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 803:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLCommandFrame(frame);
 2880               		.loc 2 803 0
 2881 1046 8981      		ldd r24,Y+1
 2882 1048 9A81      		ldd r25,Y+2
 2883 104a 0E94 0000 		call nwkRxIndicateLLCommandFrame
 804:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 805:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2884               		.loc 2 805 0
 2885 104e 00C0      		rjmp .L132
 2886               	.L141:
 806:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 807:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLDATA:
 808:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 809:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLDataFrame(frame);
 2887               		.loc 2 809 0
 2888 1050 8981      		ldd r24,Y+1
 2889 1052 9A81      		ldd r25,Y+2
 2890 1054 0E94 0000 		call nwkRxIndicateLLDataFrame
 2891               	.L140:
 810:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 811:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 812:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLACKFRAME:
 813:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 814:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLACKFrame(frame);
 2892               		.loc 2 814 0
 2893 1058 8981      		ldd r24,Y+1
 2894 105a 9A81      		ldd r25,Y+2
 2895 105c 0E94 0000 		call nwkRxIndicateLLACKFrame
 815:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 816:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2896               		.loc 2 816 0
 2897 1060 0000      		nop
 2898               	.L132:
 752:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2899               		.loc 2 752 0
 2900 1062 8981      		ldd r24,Y+1
 2901 1064 9A81      		ldd r25,Y+2
 2902 1066 0E94 0000 		call nwkFrameNext
 2903 106a 9A83      		std Y+2,r25
 2904 106c 8983      		std Y+1,r24
 2905 106e 8981      		ldd r24,Y+1
 2906 1070 9A81      		ldd r25,Y+2
 2907 1072 892B      		or r24,r25
 2908 1074 01F0      		breq .+2
 2909 1076 00C0      		rjmp .L142
 817:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 818:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 819:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 820:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2910               		.loc 2 820 0
 2911 1078 0000      		nop
 2912               	/* epilogue start */
 2913 107a 0F90      		pop __tmp_reg__
 2914 107c 0F90      		pop __tmp_reg__
 2915 107e DF91      		pop r29
 2916 1080 CF91      		pop r28
 2917 1082 0895      		ret
 2918               		.cfi_endproc
 2919               	.LFE81:
 2921               	.Letext0:
 2922               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 2923               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 2924               		.file 5 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 2925               		.file 6 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 2926               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwkDataReq.h"
 2927               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 2928               		.file 9 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
 2929               		.file 10 "config/config.h"
 2930               		.file 11 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkRx.c
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:7      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 n
                            *COM*:00000004 tTS
                            *COM*:00000002 macLLDNnumTimeSlots
                            *COM*:00000002 macLLDNnumUplinkTS
                            *COM*:00000002 macLLDNRetransmitTS
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:17     .text:00000000 nwkFramePayloadSize
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:79     .bss.nwkRxDuplicateRejectionTable:00000000 nwkRxDuplicateRejectionTable
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:84     .bss.nwkRxAckControl:00000000 nwkRxAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:89     .bss.nwkRxDuplicateRejectionTimer:00000000 nwkRxDuplicateRejectionTimer
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:94     .text:00000044 nwkRxInit
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:783    .text:0000044a nwkRxDuplicateRejectionTimerHandler
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:1181   .text:0000068c nwkRxSeriveDataInd
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:181    .text:000000b6 PHY_DataInd
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:573    .text:00000320 nwkRxSendAck
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:745    .text:0000042e NWK_SetAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:898    .text:000004e4 nwkRxRejectDuplicate
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:1249   .text:000006d6 nwkRxHandleReceivedFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:1699   .text:000009b0 nwkRxIndicateDataFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:2038   .text:00000bbe nwkRxIndicateBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:2182   .text:00000c94 nwkRxIndicateLLBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:2292   .text:00000d2c nwkRxIndicateLLCommandFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:2412   .text:00000dd6 nwkRxIndicateLLDataFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:2532   .text:00000e80 nwkRxIndicateLLACKFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:2652   .text:00000f2a nwkRxHandleIndication
C:\Users\GUILHE~1\AppData\Local\Temp\cci2OSea.s:2777   .text:00000fd4 nwkRxTaskHandler

UNDEFINED SYMBOLS
NWK_OpenEndpoint
putchar
nwkFrameAlloc
nwkFrameAlloc_LLDN
memcpy
nwkFrameCommandInit
nwkTxFrame
SYS_TimerStart
nwkTxAckReceived
nwkIb
NWK_GroupIsMember
nwkTxBroadcastFrame
__tablejump2__
nwkFrameFree
nwkFrameNext
__do_clear_bss
