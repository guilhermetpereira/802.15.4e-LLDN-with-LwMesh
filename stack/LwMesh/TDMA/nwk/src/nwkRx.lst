   1               		.file	"nwkRx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	n,1,1
  12               		.comm	tTS,4,1
  13               		.comm	macLLDNnumTimeSlots,2,1
  14               		.comm	macLLDNnumUplinkTS,2,1
  15               		.comm	macLLDNRetransmitTS,2,1
  17               	nwkFramePayloadSize:
  18               	.LFB65:
  19               		.file 1 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
   1:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /**
   2:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \file nwkFrame.h
   3:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   4:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \brief Frame buffers management interface
   5:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   6:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   8:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  10:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  13:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  16:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  20:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  23:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  26:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  38:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  40:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  41:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  42:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  43:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*
  44:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  46:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  48:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  49:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #ifndef _NWK_FRAME_H_
  50:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define _NWK_FRAME_H_
  51:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  52:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Includes ---------------------------------------------------------------*/
  53:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include <stdint.h>
  54:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include "compiler.h"
  55:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  56:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Definitions ------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define NWK_FRAME_MAX_PAYLOAD_SIZE   127
  58:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  59:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Types ------------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_SET(1)
  61:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameHeader_t {
  62:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  63:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  64:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstPanId;
  65:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstAddr;
  66:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  67:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  68:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  69:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t ackRequest : 1;
  70:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t security   : 1;
  71:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t linkLocal  : 1;
  72:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t multicast  : 1;
  73:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t beacon     : 1;
  74:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved   : 3;
  75:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} nwkFcf;
  76:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t nwkSeq;
  77:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkSrcAddr;
  78:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkDstAddr;
  79:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  80:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkSrcEndpoint : 4;
  81:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkDstEndpoint : 4;
  82:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
  83:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameHeader_t;
  84:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  85:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeader_t {
  86:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  87:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  88:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcPanId;
  89:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  90:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
  91:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
  92:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t beaconOrder			: 4;
  93:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t superframeOrder		: 4;
  94:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t finalCAPslot			: 4;
  95:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t BatteryLifeExtension	: 1;
  96:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t Reserved				: 1;
  97:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t PANCoordinator			: 1;
  98:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t AssociationPermit		: 1;
  99:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSFS;
 100:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macGTS;
 101:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macPending;
 102:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeader_t;
 103:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 104:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 105:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeaderLLDN_t {
 106:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/******* MHR *****/
 107:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// struct
 108:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// {
 109:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameType 				: 3;
 110:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SecurityEnabled 	: 1;
 111:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameVersion			: 1;
 112:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t ackRequest				: 1;
 113:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SubFrameType			: 2;
 114:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// } macFcf;
 115:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 116:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 117:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 118:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 119:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 120:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 121:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 122:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 123:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 124:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 125:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/****** MAC Payload *******/
 126:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 127:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 128:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txState 			: 3;
 129:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txDir 				: 1;
 130:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved			: 1;
 131:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t numBaseMgmtTimeslots: 3; // number of managment time slots
 132:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 										// uplink and downlink must be equal
 133:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} Flags;
 134:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 135:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t PanId;
 136:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t confSeqNumber;
 137:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t TimeSlotSize;
 138:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t NumberOfBaseTimeslotsinSuperframe;
 139:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 140:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeaderLLDN_t;
 141:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 142:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameGeneralHeaderLLDN_t {
 143:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	#if (TAL_TYPE == AT86RF233)
 144:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	#endif
 145:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// uint8_t PHR;
 146:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 147:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 148:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 149:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 150:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 151:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 152:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 153:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 154:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 155:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 156:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 157:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameGeneralHeaderLLDN_t;
 158:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 159:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 160:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameMulticastHeader_t {
 161:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nonMemberRadius    : 4;
 162:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxNonMemberRadius : 4;
 163:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t memberRadius       : 4;
 164:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxMemberRadius    : 4;
 165:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameMulticastHeader_t;
 166:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 167:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct NwkFrame_t {
 168:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t state;
 169:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t size;
 170:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 171:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 172:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameHeader_t header;
 173:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeader_t beacon;
 174:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeaderLLDN_t LLbeacon;
 175:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameGeneralHeaderLLDN_t LLgeneral;
 176:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t data[NWK_FRAME_MAX_PAYLOAD_SIZE];
 177:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 178:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 179:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t *payload;
 180:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 181:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 182:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 183:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t lqi;
 184:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			int8_t rssi;
 185:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} rx;
 186:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 187:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 188:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t status;
 189:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint16_t timeout;
 190:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t control;
 191:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			void (*confirm)(struct NwkFrame_t *frame);
 192:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} tx;
 193:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 194:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrame_t;
 195:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_RESET()
 196:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Prototypes -------------------------------------------------------------*/
 197:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameInit(void);
 198:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc(void);
 199:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameFree(NwkFrame_t *frame);
 200:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);
 201:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameCommandInit(NwkFrame_t *frame);
 202:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 203:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame);
 204:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Implementations --------------------------------------------------------*/
 205:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 206:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*************************************************************************//**
 207:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** *****************************************************************************/
 208:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** static inline uint8_t nwkFramePayloadSize(NwkFrame_t *frame)
 209:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** {
  20               		.loc 1 209 0
  21               		.cfi_startproc
  22 0000 CF93      		push r28
  23               	.LCFI0:
  24               		.cfi_def_cfa_offset 3
  25               		.cfi_offset 28, -2
  26 0002 DF93      		push r29
  27               	.LCFI1:
  28               		.cfi_def_cfa_offset 4
  29               		.cfi_offset 29, -3
  30 0004 00D0      		rcall .
  31               	.LCFI2:
  32               		.cfi_def_cfa_offset 6
  33 0006 CDB7      		in r28,__SP_L__
  34 0008 DEB7      		in r29,__SP_H__
  35               	.LCFI3:
  36               		.cfi_def_cfa_register 28
  37               	/* prologue: function */
  38               	/* frame size = 2 */
  39               	/* stack size = 4 */
  40               	.L__stack_usage = 4
  41 000a 9A83      		std Y+2,r25
  42 000c 8983      		std Y+1,r24
 210:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	return frame->size - (frame->payload - frame->data);
  43               		.loc 1 210 0
  44 000e 8981      		ldd r24,Y+1
  45 0010 9A81      		ldd r25,Y+2
  46 0012 FC01      		movw r30,r24
  47 0014 4181      		ldd r20,Z+1
  48 0016 8981      		ldd r24,Y+1
  49 0018 9A81      		ldd r25,Y+2
  50 001a 8F57      		subi r24,127
  51 001c 9F4F      		sbci r25,-1
  52 001e FC01      		movw r30,r24
  53 0020 8081      		ld r24,Z
  54 0022 9181      		ldd r25,Z+1
  55 0024 9C01      		movw r18,r24
  56 0026 8981      		ldd r24,Y+1
  57 0028 9A81      		ldd r25,Y+2
  58 002a 0296      		adiw r24,2
  59 002c B901      		movw r22,r18
  60 002e 681B      		sub r22,r24
  61 0030 790B      		sbc r23,r25
  62 0032 CB01      		movw r24,r22
  63 0034 742F      		mov r23,r20
  64 0036 781B      		sub r23,r24
  65 0038 872F      		mov r24,r23
  66               	/* epilogue start */
 211:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** }
  67               		.loc 1 211 0
  68 003a 0F90      		pop __tmp_reg__
  69 003c 0F90      		pop __tmp_reg__
  70 003e DF91      		pop r29
  71 0040 CF91      		pop r28
  72 0042 0895      		ret
  73               		.cfi_endproc
  74               	.LFE65:
  76               		.section	.bss.nwkRxDuplicateRejectionTable,"aw",@nobits
  79               	nwkRxDuplicateRejectionTable:
  80 0000 0000 0000 		.zero	250
  80      0000 0000 
  80      0000 0000 
  80      0000 0000 
  80      0000 0000 
  81               		.section	.bss.nwkRxAckControl,"aw",@nobits
  84               	nwkRxAckControl:
  85 0000 00        		.zero	1
  86               		.section	.bss.nwkRxDuplicateRejectionTimer,"aw",@nobits
  89               	nwkRxDuplicateRejectionTimer:
  90 0000 0000 0000 		.zero	13
  90      0000 0000 
  90      0000 0000 
  90      00
  91               		.text
  92               	.global	nwkRxInit
  94               	nwkRxInit:
  95               	.LFB66:
  96               		.file 2 "../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \file nwkRx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \brief Receive routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkGroup.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRoute.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkCommand.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkSecurity.h"
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRouteDiscovery.h"
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Definitions ------------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL   100 /* ms */
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define DUPLICATE_REJECTION_TTL	\
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	((NWK_DUPLICATE_REJECTION_TTL /	\
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL) + 1)
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_SERVICE_ENDPOINT_ID    0
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Types ------------------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** enum {
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_RECEIVED = 0x20,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_DECRYPT  = 0x21,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_INDICATE = 0x22,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_ROUTE    = 0x23,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_FINISH   = 0x24,
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_BEACON   = 0x25,
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLBEACON 	= 0x26,
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLCOMMAND 	= 0x27,
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLACKFRAME = 0x28,
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLDATA		= 0x29
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** };
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** typedef struct NwkDuplicateRejectionEntry_t {
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint16_t src;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t seq;
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t mask;
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t ttl;
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** } NwkDuplicateRejectionEntry_t;
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Prototypes -------------------------------------------------------------*/
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer);
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind);
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Variables --------------------------------------------------------------*/
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static NwkDuplicateRejectionEntry_t nwkRxDuplicateRejectionTable[
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DUPLICATE_REJECTION_TABLE_SIZE];
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static uint8_t nwkRxAckControl;
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static SYS_Timer_t nwkRxDuplicateRejectionTimer;
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Implementations --------------------------------------------------------*/
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Initializes the Rx module
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxInit(void)
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
  97               		.loc 2 110 0
  98               		.cfi_startproc
  99 0044 CF93      		push r28
 100               	.LCFI4:
 101               		.cfi_def_cfa_offset 3
 102               		.cfi_offset 28, -2
 103 0046 DF93      		push r29
 104               	.LCFI5:
 105               		.cfi_def_cfa_offset 4
 106               		.cfi_offset 29, -3
 107 0048 1F92      		push __zero_reg__
 108               	.LCFI6:
 109               		.cfi_def_cfa_offset 5
 110 004a CDB7      		in r28,__SP_L__
 111 004c DEB7      		in r29,__SP_H__
 112               	.LCFI7:
 113               		.cfi_def_cfa_register 28
 114               	/* prologue: function */
 115               	/* frame size = 1 */
 116               	/* stack size = 3 */
 117               	.L__stack_usage = 3
 118               	.LBB2:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 119               		.loc 2 111 0
 120 004e 1982      		std Y+1,__zero_reg__
 121 0050 00C0      		rjmp .L4
 122               	.L5:
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxDuplicateRejectionTable[i].ttl = 0;
 123               		.loc 2 112 0 discriminator 3
 124 0052 8981      		ldd r24,Y+1
 125 0054 282F      		mov r18,r24
 126 0056 30E0      		ldi r19,0
 127 0058 C901      		movw r24,r18
 128 005a 880F      		lsl r24
 129 005c 991F      		rol r25
 130 005e 880F      		lsl r24
 131 0060 991F      		rol r25
 132 0062 820F      		add r24,r18
 133 0064 931F      		adc r25,r19
 134 0066 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 135 0068 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 136 006a FC01      		movw r30,r24
 137 006c 1082      		st Z,__zero_reg__
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 138               		.loc 2 111 0 discriminator 3
 139 006e 8981      		ldd r24,Y+1
 140 0070 8F5F      		subi r24,lo8(-(1))
 141 0072 8983      		std Y+1,r24
 142               	.L4:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 143               		.loc 2 111 0 is_stmt 0 discriminator 1
 144 0074 8981      		ldd r24,Y+1
 145 0076 8233      		cpi r24,lo8(50)
 146 0078 00F0      		brlo .L5
 147               	.LBE2:
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.interval
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL;
 148               		.loc 2 116 0 is_stmt 1
 149 007a 84E6      		ldi r24,lo8(100)
 150 007c 90E0      		ldi r25,0
 151 007e A0E0      		ldi r26,0
 152 0080 B0E0      		ldi r27,0
 153 0082 8093 0000 		sts nwkRxDuplicateRejectionTimer+6,r24
 154 0086 9093 0000 		sts nwkRxDuplicateRejectionTimer+6+1,r25
 155 008a A093 0000 		sts nwkRxDuplicateRejectionTimer+6+2,r26
 156 008e B093 0000 		sts nwkRxDuplicateRejectionTimer+6+3,r27
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE;
 157               		.loc 2 117 0
 158 0092 1092 0000 		sts nwkRxDuplicateRejectionTimer+10,__zero_reg__
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.handler
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= nwkRxDuplicateRejectionTimerHandler;
 159               		.loc 2 119 0
 160 0096 80E0      		ldi r24,lo8(gs(nwkRxDuplicateRejectionTimerHandler))
 161 0098 90E0      		ldi r25,hi8(gs(nwkRxDuplicateRejectionTimerHandler))
 162 009a 9093 0000 		sts nwkRxDuplicateRejectionTimer+11+1,r25
 163 009e 8093 0000 		sts nwkRxDuplicateRejectionTimer+11,r24
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_OpenEndpoint(NWK_SERVICE_ENDPOINT_ID, nwkRxSeriveDataInd);
 164               		.loc 2 121 0
 165 00a2 60E0      		ldi r22,lo8(gs(nwkRxSeriveDataInd))
 166 00a4 70E0      		ldi r23,hi8(gs(nwkRxSeriveDataInd))
 167 00a6 80E0      		ldi r24,0
 168 00a8 0E94 0000 		call NWK_OpenEndpoint
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 169               		.loc 2 122 0
 170 00ac 0000      		nop
 171               	/* epilogue start */
 172 00ae 0F90      		pop __tmp_reg__
 173 00b0 DF91      		pop r29
 174 00b2 CF91      		pop r28
 175 00b4 0895      		ret
 176               		.cfi_endproc
 177               	.LFE66:
 179               		.section	.rodata
 180               	.LC0:
 181 0000 2568 6878 		.string	"%hhx "
 181      2000 
 182               		.text
 183               		.weak	PHY_DataInd
 185               	PHY_DataInd:
 186               	.LFB67:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void __attribute__((weak)) PHY_DataInd(PHY_DataInd_t *ind)
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 187               		.loc 2 127 0
 188               		.cfi_startproc
 189 00b6 CF93      		push r28
 190               	.LCFI8:
 191               		.cfi_def_cfa_offset 3
 192               		.cfi_offset 28, -2
 193 00b8 DF93      		push r29
 194               	.LCFI9:
 195               		.cfi_def_cfa_offset 4
 196               		.cfi_offset 29, -3
 197 00ba 00D0      		rcall .
 198 00bc 00D0      		rcall .
 199 00be 00D0      		rcall .
 200               	.LCFI10:
 201               		.cfi_def_cfa_offset 10
 202 00c0 CDB7      		in r28,__SP_L__
 203 00c2 DEB7      		in r29,__SP_H__
 204               	.LCFI11:
 205               		.cfi_def_cfa_register 28
 206               	/* prologue: function */
 207               	/* frame size = 6 */
 208               	/* stack size = 8 */
 209               	.L__stack_usage = 8
 210 00c4 9E83      		std Y+6,r25
 211 00c6 8D83      		std Y+5,r24
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame;
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* implementar contador */
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	if(ind->size > 50)
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 		return false;
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-Beacon frame
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	printf("\n");
 212               		.loc 2 134 0
 213 00c8 8AE0      		ldi r24,lo8(10)
 214 00ca 90E0      		ldi r25,0
 215 00cc 0E94 0000 		call putchar
 216               	.LBB3:
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		for (int i = 0; i < ind->size; i++)
 217               		.loc 2 135 0
 218 00d0 1C82      		std Y+4,__zero_reg__
 219 00d2 1B82      		std Y+3,__zero_reg__
 220 00d4 00C0      		rjmp .L7
 221               	.L8:
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			printf("%hhx ", ind->data[i]);
 222               		.loc 2 137 0 discriminator 3
 223 00d6 8D81      		ldd r24,Y+5
 224 00d8 9E81      		ldd r25,Y+6
 225 00da FC01      		movw r30,r24
 226 00dc 2081      		ld r18,Z
 227 00de 3181      		ldd r19,Z+1
 228 00e0 8B81      		ldd r24,Y+3
 229 00e2 9C81      		ldd r25,Y+4
 230 00e4 820F      		add r24,r18
 231 00e6 931F      		adc r25,r19
 232 00e8 FC01      		movw r30,r24
 233 00ea 8081      		ld r24,Z
 234 00ec 882F      		mov r24,r24
 235 00ee 90E0      		ldi r25,0
 236 00f0 292F      		mov r18,r25
 237 00f2 2F93      		push r18
 238 00f4 8F93      		push r24
 239 00f6 80E0      		ldi r24,lo8(.LC0)
 240 00f8 90E0      		ldi r25,hi8(.LC0)
 241 00fa 892F      		mov r24,r25
 242 00fc 8F93      		push r24
 243 00fe 80E0      		ldi r24,lo8(.LC0)
 244 0100 90E0      		ldi r25,hi8(.LC0)
 245 0102 8F93      		push r24
 246 0104 0E94 0000 		call printf
 247 0108 0F90      		pop __tmp_reg__
 248 010a 0F90      		pop __tmp_reg__
 249 010c 0F90      		pop __tmp_reg__
 250 010e 0F90      		pop __tmp_reg__
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		for (int i = 0; i < ind->size; i++)
 251               		.loc 2 135 0 discriminator 3
 252 0110 8B81      		ldd r24,Y+3
 253 0112 9C81      		ldd r25,Y+4
 254 0114 0196      		adiw r24,1
 255 0116 9C83      		std Y+4,r25
 256 0118 8B83      		std Y+3,r24
 257               	.L7:
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		for (int i = 0; i < ind->size; i++)
 258               		.loc 2 135 0 is_stmt 0 discriminator 1
 259 011a 8D81      		ldd r24,Y+5
 260 011c 9E81      		ldd r25,Y+6
 261 011e FC01      		movw r30,r24
 262 0120 8281      		ldd r24,Z+2
 263 0122 282F      		mov r18,r24
 264 0124 30E0      		ldi r19,0
 265 0126 8B81      		ldd r24,Y+3
 266 0128 9C81      		ldd r25,Y+4
 267 012a 8217      		cp r24,r18
 268 012c 9307      		cpc r25,r19
 269 012e 04F0      		brlt .L8
 270               	.LBE3:
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   		}
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(0x0c == ind->data[0])
 271               		.loc 2 141 0 is_stmt 1
 272 0130 8D81      		ldd r24,Y+5
 273 0132 9E81      		ldd r25,Y+6
 274 0134 FC01      		movw r30,r24
 275 0136 8081      		ld r24,Z
 276 0138 9181      		ldd r25,Z+1
 277 013a FC01      		movw r30,r24
 278 013c 8081      		ld r24,Z
 279 013e 8C30      		cpi r24,lo8(12)
 280 0140 01F4      		brne .L9
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameBeaconHeaderLLDN_t))
 281               		.loc 2 143 0
 282 0142 8D81      		ldd r24,Y+5
 283 0144 9E81      		ldd r25,Y+6
 284 0146 FC01      		movw r30,r24
 285 0148 8281      		ldd r24,Z+2
 286 014a 8830      		cpi r24,lo8(8)
 287 014c 00F0      		brlo .+2
 288 014e 00C0      		rjmp .L10
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 289               		.loc 2 145 0
 290 0150 00C0      		rjmp .L6
 291               	.L9:
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-MAC Command frame
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0xcc == ind->data[0] || 0x8c == ind->data[0] || 0x4c == ind->data[0])
 292               		.loc 2 149 0
 293 0152 8D81      		ldd r24,Y+5
 294 0154 9E81      		ldd r25,Y+6
 295 0156 FC01      		movw r30,r24
 296 0158 8081      		ld r24,Z
 297 015a 9181      		ldd r25,Z+1
 298 015c FC01      		movw r30,r24
 299 015e 8081      		ld r24,Z
 300 0160 8C3C      		cpi r24,lo8(-52)
 301 0162 01F0      		breq .L12
 302               		.loc 2 149 0 is_stmt 0 discriminator 1
 303 0164 8D81      		ldd r24,Y+5
 304 0166 9E81      		ldd r25,Y+6
 305 0168 FC01      		movw r30,r24
 306 016a 8081      		ld r24,Z
 307 016c 9181      		ldd r25,Z+1
 308 016e FC01      		movw r30,r24
 309 0170 8081      		ld r24,Z
 310 0172 8C38      		cpi r24,lo8(-116)
 311 0174 01F0      		breq .L12
 312               		.loc 2 149 0 discriminator 2
 313 0176 8D81      		ldd r24,Y+5
 314 0178 9E81      		ldd r25,Y+6
 315 017a FC01      		movw r30,r24
 316 017c 8081      		ld r24,Z
 317 017e 9181      		ldd r25,Z+1
 318 0180 FC01      		movw r30,r24
 319 0182 8081      		ld r24,Z
 320 0184 8C34      		cpi r24,lo8(76)
 321 0186 01F4      		brne .L13
 322               	.L12:
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameGeneralHeaderLLDN_t))
 323               		.loc 2 151 0 is_stmt 1
 324 0188 8D81      		ldd r24,Y+5
 325 018a 9E81      		ldd r25,Y+6
 326 018c FC01      		movw r30,r24
 327 018e 8281      		ldd r24,Z+2
 328 0190 8330      		cpi r24,lo8(3)
 329 0192 00F0      		brlo .+2
 330 0194 00C0      		rjmp .L10
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 331               		.loc 2 153 0
 332 0196 00C0      		rjmp .L6
 333               	.L13:
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x88 == ind->data[1])
 334               		.loc 2 156 0
 335 0198 8D81      		ldd r24,Y+5
 336 019a 9E81      		ldd r25,Y+6
 337 019c FC01      		movw r30,r24
 338 019e 8081      		ld r24,Z
 339 01a0 9181      		ldd r25,Z+1
 340 01a2 0196      		adiw r24,1
 341 01a4 FC01      		movw r30,r24
 342 01a6 8081      		ld r24,Z
 343 01a8 8838      		cpi r24,lo8(-120)
 344 01aa 01F4      		brne .L15
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x61 != ind->data[0] && 0x41 != ind->data[0]) || ind->size < sizeof(NwkFrameHeader_t))
 345               		.loc 2 158 0
 346 01ac 8D81      		ldd r24,Y+5
 347 01ae 9E81      		ldd r25,Y+6
 348 01b0 FC01      		movw r30,r24
 349 01b2 8081      		ld r24,Z
 350 01b4 9181      		ldd r25,Z+1
 351 01b6 FC01      		movw r30,r24
 352 01b8 8081      		ld r24,Z
 353 01ba 8136      		cpi r24,lo8(97)
 354 01bc 01F0      		breq .L16
 355               		.loc 2 158 0 is_stmt 0 discriminator 1
 356 01be 8D81      		ldd r24,Y+5
 357 01c0 9E81      		ldd r25,Y+6
 358 01c2 FC01      		movw r30,r24
 359 01c4 8081      		ld r24,Z
 360 01c6 9181      		ldd r25,Z+1
 361 01c8 FC01      		movw r30,r24
 362 01ca 8081      		ld r24,Z
 363 01cc 8134      		cpi r24,lo8(65)
 364 01ce 01F0      		breq .+2
 365 01d0 00C0      		rjmp .L31
 366               	.L16:
 367               		.loc 2 158 0 discriminator 3
 368 01d2 8D81      		ldd r24,Y+5
 369 01d4 9E81      		ldd r25,Y+6
 370 01d6 FC01      		movw r30,r24
 371 01d8 8281      		ldd r24,Z+2
 372 01da 8031      		cpi r24,lo8(16)
 373 01dc 00F4      		brsh .L10
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 374               		.loc 2 160 0 is_stmt 1
 375 01de 00C0      		rjmp .L31
 376               	.L15:
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x80 == ind->data[1])
 377               		.loc 2 163 0
 378 01e0 8D81      		ldd r24,Y+5
 379 01e2 9E81      		ldd r25,Y+6
 380 01e4 FC01      		movw r30,r24
 381 01e6 8081      		ld r24,Z
 382 01e8 9181      		ldd r25,Z+1
 383 01ea 0196      		adiw r24,1
 384 01ec FC01      		movw r30,r24
 385 01ee 8081      		ld r24,Z
 386 01f0 8038      		cpi r24,lo8(-128)
 387 01f2 01F0      		breq .+2
 388 01f4 00C0      		rjmp .L32
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x00 != ind->data[0]) || ind->size < (sizeof(NwkFrameBeaconHeader_t)))
 389               		.loc 2 165 0
 390 01f6 8D81      		ldd r24,Y+5
 391 01f8 9E81      		ldd r25,Y+6
 392 01fa FC01      		movw r30,r24
 393 01fc 8081      		ld r24,Z
 394 01fe 9181      		ldd r25,Z+1
 395 0200 FC01      		movw r30,r24
 396 0202 8081      		ld r24,Z
 397 0204 8823      		tst r24
 398 0206 01F0      		breq .+2
 399 0208 00C0      		rjmp .L33
 400               		.loc 2 165 0 is_stmt 0 discriminator 1
 401 020a 8D81      		ldd r24,Y+5
 402 020c 9E81      		ldd r25,Y+6
 403 020e FC01      		movw r30,r24
 404 0210 8281      		ldd r24,Z+2
 405 0212 8B30      		cpi r24,lo8(11)
 406 0214 00F4      		brsh .+2
 407 0216 00C0      		rjmp .L33
 408               	.L10:
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(ind->data[1] == 0x88 || ind->data[1] == 0x80)
 409               		.loc 2 175 0 is_stmt 1
 410 0218 8D81      		ldd r24,Y+5
 411 021a 9E81      		ldd r25,Y+6
 412 021c FC01      		movw r30,r24
 413 021e 8081      		ld r24,Z
 414 0220 9181      		ldd r25,Z+1
 415 0222 0196      		adiw r24,1
 416 0224 FC01      		movw r30,r24
 417 0226 8081      		ld r24,Z
 418 0228 8838      		cpi r24,lo8(-120)
 419 022a 01F0      		breq .L20
 420               		.loc 2 175 0 is_stmt 0 discriminator 1
 421 022c 8D81      		ldd r24,Y+5
 422 022e 9E81      		ldd r25,Y+6
 423 0230 FC01      		movw r30,r24
 424 0232 8081      		ld r24,Z
 425 0234 9181      		ldd r25,Z+1
 426 0236 0196      		adiw r24,1
 427 0238 FC01      		movw r30,r24
 428 023a 8081      		ld r24,Z
 429 023c 8038      		cpi r24,lo8(-128)
 430 023e 01F4      		brne .L21
 431               	.L20:
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc())) {
 432               		.loc 2 177 0 is_stmt 1
 433 0240 0E94 0000 		call nwkFrameAlloc
 434 0244 9A83      		std Y+2,r25
 435 0246 8983      		std Y+1,r24
 436 0248 8981      		ldd r24,Y+1
 437 024a 9A81      		ldd r25,Y+2
 438 024c 892B      		or r24,r25
 439 024e 01F4      		brne .+2
 440 0250 00C0      		rjmp .L34
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame received is NwkFrameHeader change state to Receveid
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is a 802.15.4 beacon change state to Beacon
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = ((0x88 == ind->data[1]) ? NWK_RX_STATE_RECEIVED : NWK_RX_STATE_BEACON);
 441               		.loc 2 182 0
 442 0252 8D81      		ldd r24,Y+5
 443 0254 9E81      		ldd r25,Y+6
 444 0256 FC01      		movw r30,r24
 445 0258 8081      		ld r24,Z
 446 025a 9181      		ldd r25,Z+1
 447 025c 0196      		adiw r24,1
 448 025e FC01      		movw r30,r24
 449 0260 8081      		ld r24,Z
 450 0262 8838      		cpi r24,lo8(-120)
 451 0264 01F4      		brne .L23
 452               		.loc 2 182 0 is_stmt 0 discriminator 1
 453 0266 20E2      		ldi r18,lo8(32)
 454 0268 00C0      		rjmp .L24
 455               	.L23:
 456               		.loc 2 182 0 discriminator 2
 457 026a 25E2      		ldi r18,lo8(37)
 458               	.L24:
 459               		.loc 2 182 0 discriminator 4
 460 026c 8981      		ldd r24,Y+1
 461 026e 9A81      		ldd r25,Y+2
 462 0270 FC01      		movw r30,r24
 463 0272 2083      		st Z,r18
 464 0274 00C0      		rjmp .L25
 465               	.L21:
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// allocate frame buffer according to received frame
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(ind->data[0] == 0x0c)
 466               		.loc 2 185 0 is_stmt 1
 467 0276 8D81      		ldd r24,Y+5
 468 0278 9E81      		ldd r25,Y+6
 469 027a FC01      		movw r30,r24
 470 027c 8081      		ld r24,Z
 471 027e 9181      		ldd r25,Z+1
 472 0280 FC01      		movw r30,r24
 473 0282 8081      		ld r24,Z
 474 0284 8C30      		cpi r24,lo8(12)
 475 0286 01F4      		brne .L26
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-Beacon frame
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(true))){
 476               		.loc 2 188 0
 477 0288 81E0      		ldi r24,lo8(1)
 478 028a 0E94 0000 		call nwkFrameAlloc_LLDN
 479 028e 9A83      		std Y+2,r25
 480 0290 8983      		std Y+1,r24
 481 0292 8981      		ldd r24,Y+1
 482 0294 9A81      		ldd r25,Y+2
 483 0296 892B      		or r24,r25
 484 0298 01F4      		brne .+2
 485 029a 00C0      		rjmp .L35
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-Beacon change state to LLBEACON
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLBEACON;
 486               		.loc 2 192 0
 487 029c 8981      		ldd r24,Y+1
 488 029e 9A81      		ldd r25,Y+2
 489 02a0 26E2      		ldi r18,lo8(38)
 490 02a2 FC01      		movw r30,r24
 491 02a4 2083      		st Z,r18
 492 02a6 00C0      		rjmp .L25
 493               	.L26:
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-MAC command or LL-Data frame
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(false))){
 494               		.loc 2 197 0
 495 02a8 80E0      		ldi r24,0
 496 02aa 0E94 0000 		call nwkFrameAlloc_LLDN
 497 02ae 9A83      		std Y+2,r25
 498 02b0 8983      		std Y+1,r24
 499 02b2 8981      		ldd r24,Y+1
 500 02b4 9A81      		ldd r25,Y+2
 501 02b6 892B      		or r24,r25
 502 02b8 01F4      		brne .+2
 503 02ba 00C0      		rjmp .L36
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-AckFrame change state to LLACKFRAME
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-MACComand change state to LLCOMMAND
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->data[0] == 0x8c) 
 504               		.loc 2 202 0
 505 02bc 8D81      		ldd r24,Y+5
 506 02be 9E81      		ldd r25,Y+6
 507 02c0 FC01      		movw r30,r24
 508 02c2 8081      		ld r24,Z
 509 02c4 9181      		ldd r25,Z+1
 510 02c6 FC01      		movw r30,r24
 511 02c8 8081      		ld r24,Z
 512 02ca 8C38      		cpi r24,lo8(-116)
 513 02cc 01F4      		brne .L29
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLACKFRAME;
 514               		.loc 2 203 0
 515 02ce 8981      		ldd r24,Y+1
 516 02d0 9A81      		ldd r25,Y+2
 517 02d2 28E2      		ldi r18,lo8(40)
 518 02d4 FC01      		movw r30,r24
 519 02d6 2083      		st Z,r18
 520 02d8 00C0      		rjmp .L25
 521               	.L29:
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if(ind->data[0] == 0xcc)
 522               		.loc 2 204 0
 523 02da 8D81      		ldd r24,Y+5
 524 02dc 9E81      		ldd r25,Y+6
 525 02de FC01      		movw r30,r24
 526 02e0 8081      		ld r24,Z
 527 02e2 9181      		ldd r25,Z+1
 528 02e4 FC01      		movw r30,r24
 529 02e6 8081      		ld r24,Z
 530 02e8 8C3C      		cpi r24,lo8(-52)
 531 02ea 01F4      		brne .L30
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLCOMMAND;
 532               		.loc 2 205 0
 533 02ec 8981      		ldd r24,Y+1
 534 02ee 9A81      		ldd r25,Y+2
 535 02f0 27E2      		ldi r18,lo8(39)
 536 02f2 FC01      		movw r30,r24
 537 02f4 2083      		st Z,r18
 538 02f6 00C0      		rjmp .L25
 539               	.L30:
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLDATA;	
 540               		.loc 2 207 0
 541 02f8 8981      		ldd r24,Y+1
 542 02fa 9A81      		ldd r25,Y+2
 543 02fc 29E2      		ldi r18,lo8(41)
 544 02fe FC01      		movw r30,r24
 545 0300 2083      		st Z,r18
 546               	.L25:
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size = ind->size;
 547               		.loc 2 210 0
 548 0302 8D81      		ldd r24,Y+5
 549 0304 9E81      		ldd r25,Y+6
 550 0306 FC01      		movw r30,r24
 551 0308 2281      		ldd r18,Z+2
 552 030a 8981      		ldd r24,Y+1
 553 030c 9A81      		ldd r25,Y+2
 554 030e FC01      		movw r30,r24
 555 0310 2183      		std Z+1,r18
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\nframe->size = %hhx", frame->size);
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.lqi = ind->lqi;
 556               		.loc 2 212 0
 557 0312 8D81      		ldd r24,Y+5
 558 0314 9E81      		ldd r25,Y+6
 559 0316 FC01      		movw r30,r24
 560 0318 2381      		ldd r18,Z+3
 561 031a 8981      		ldd r24,Y+1
 562 031c 9A81      		ldd r25,Y+2
 563 031e 8D57      		subi r24,125
 564 0320 9F4F      		sbci r25,-1
 565 0322 FC01      		movw r30,r24
 566 0324 2083      		st Z,r18
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.rssi = ind->rssi;
 567               		.loc 2 213 0
 568 0326 8D81      		ldd r24,Y+5
 569 0328 9E81      		ldd r25,Y+6
 570 032a FC01      		movw r30,r24
 571 032c 2481      		ldd r18,Z+4
 572 032e 8981      		ldd r24,Y+1
 573 0330 9A81      		ldd r25,Y+2
 574 0332 8C57      		subi r24,124
 575 0334 9F4F      		sbci r25,-1
 576 0336 FC01      		movw r30,r24
 577 0338 2083      		st Z,r18
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	memcpy(frame->data, ind->data, ind->size);
 578               		.loc 2 214 0
 579 033a 8D81      		ldd r24,Y+5
 580 033c 9E81      		ldd r25,Y+6
 581 033e FC01      		movw r30,r24
 582 0340 8281      		ldd r24,Z+2
 583 0342 482F      		mov r20,r24
 584 0344 50E0      		ldi r21,0
 585 0346 8D81      		ldd r24,Y+5
 586 0348 9E81      		ldd r25,Y+6
 587 034a FC01      		movw r30,r24
 588 034c 2081      		ld r18,Z
 589 034e 3181      		ldd r19,Z+1
 590 0350 8981      		ldd r24,Y+1
 591 0352 9A81      		ldd r25,Y+2
 592 0354 0296      		adiw r24,2
 593 0356 B901      		movw r22,r18
 594 0358 0E94 0000 		call memcpy
 595 035c 00C0      		rjmp .L6
 596               	.L31:
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 597               		.loc 2 160 0
 598 035e 0000      		nop
 599 0360 00C0      		rjmp .L6
 600               	.L32:
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 601               		.loc 2 172 0
 602 0362 0000      		nop
 603 0364 00C0      		rjmp .L6
 604               	.L33:
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 605               		.loc 2 167 0
 606 0366 0000      		nop
 607 0368 00C0      		rjmp .L6
 608               	.L34:
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 609               		.loc 2 178 0
 610 036a 0000      		nop
 611 036c 00C0      		rjmp .L6
 612               	.L35:
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 613               		.loc 2 189 0
 614 036e 0000      		nop
 615 0370 00C0      		rjmp .L6
 616               	.L36:
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 617               		.loc 2 198 0
 618 0372 0000      		nop
 619               	.L6:
 620               	/* epilogue start */
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\nframe->payload[2] = %hhx", frame->payload[2]);
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 621               		.loc 2 217 0
 622 0374 2696      		adiw r28,6
 623 0376 0FB6      		in __tmp_reg__,__SREG__
 624 0378 F894      		cli
 625 037a DEBF      		out __SP_H__,r29
 626 037c 0FBE      		out __SREG__,__tmp_reg__
 627 037e CDBF      		out __SP_L__,r28
 628 0380 DF91      		pop r29
 629 0382 CF91      		pop r28
 630 0384 0895      		ret
 631               		.cfi_endproc
 632               	.LFE67:
 635               	nwkRxSendAck:
 636               	.LFB68:
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxSendAck(NwkFrame_t *frame)
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 637               		.loc 2 222 0
 638               		.cfi_startproc
 639 0386 CF93      		push r28
 640               	.LCFI12:
 641               		.cfi_def_cfa_offset 3
 642               		.cfi_offset 28, -2
 643 0388 DF93      		push r29
 644               	.LCFI13:
 645               		.cfi_def_cfa_offset 4
 646               		.cfi_offset 29, -3
 647 038a 00D0      		rcall .
 648 038c 00D0      		rcall .
 649 038e 00D0      		rcall .
 650               	.LCFI14:
 651               		.cfi_def_cfa_offset 10
 652 0390 CDB7      		in r28,__SP_L__
 653 0392 DEB7      		in r29,__SP_H__
 654               	.LCFI15:
 655               		.cfi_def_cfa_register 28
 656               	/* prologue: function */
 657               	/* frame size = 6 */
 658               	/* stack size = 8 */
 659               	.L__stack_usage = 8
 660 0394 9E83      		std Y+6,r25
 661 0396 8D83      		std Y+5,r24
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *ack;
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkCommandAck_t *command;
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (ack = nwkFrameAlloc())) {
 662               		.loc 2 226 0
 663 0398 0E94 0000 		call nwkFrameAlloc
 664 039c 9A83      		std Y+2,r25
 665 039e 8983      		std Y+1,r24
 666 03a0 8981      		ldd r24,Y+1
 667 03a2 9A81      		ldd r25,Y+2
 668 03a4 892B      		or r24,r25
 669 03a6 01F4      		brne .+2
 670 03a8 00C0      		rjmp .L40
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size += sizeof(NwkFrameHeader_t);
 671               		.loc 2 230 0
 672 03aa 8D81      		ldd r24,Y+5
 673 03ac 9E81      		ldd r25,Y+6
 674 03ae FC01      		movw r30,r24
 675 03b0 8181      		ldd r24,Z+1
 676 03b2 20E1      		ldi r18,lo8(16)
 677 03b4 280F      		add r18,r24
 678 03b6 8D81      		ldd r24,Y+5
 679 03b8 9E81      		ldd r25,Y+6
 680 03ba FC01      		movw r30,r24
 681 03bc 2183      		std Z+1,r18
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->payload += sizeof(NwkFrameHeader_t);
 682               		.loc 2 231 0
 683 03be 8D81      		ldd r24,Y+5
 684 03c0 9E81      		ldd r25,Y+6
 685 03c2 8F57      		subi r24,127
 686 03c4 9F4F      		sbci r25,-1
 687 03c6 FC01      		movw r30,r24
 688 03c8 8081      		ld r24,Z
 689 03ca 9181      		ldd r25,Z+1
 690 03cc 9C01      		movw r18,r24
 691 03ce 205F      		subi r18,-16
 692 03d0 3F4F      		sbci r19,-1
 693 03d2 8D81      		ldd r24,Y+5
 694 03d4 9E81      		ldd r25,Y+6
 695 03d6 8F57      		subi r24,127
 696 03d8 9F4F      		sbci r25,-1
 697 03da FC01      		movw r30,r24
 698 03dc 3183      		std Z+1,r19
 699 03de 2083      		st Z,r18
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkFrameCommandInit(ack);
 700               		.loc 2 233 0
 701 03e0 8981      		ldd r24,Y+1
 702 03e2 9A81      		ldd r25,Y+2
 703 03e4 0E94 0000 		call nwkFrameCommandInit
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->size += sizeof(NwkCommandAck_t);
 704               		.loc 2 235 0
 705 03e8 8981      		ldd r24,Y+1
 706 03ea 9A81      		ldd r25,Y+2
 707 03ec FC01      		movw r30,r24
 708 03ee 8181      		ldd r24,Z+1
 709 03f0 23E0      		ldi r18,lo8(3)
 710 03f2 280F      		add r18,r24
 711 03f4 8981      		ldd r24,Y+1
 712 03f6 9A81      		ldd r25,Y+2
 713 03f8 FC01      		movw r30,r24
 714 03fa 2183      		std Z+1,r18
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->tx.confirm = NULL;
 715               		.loc 2 236 0
 716 03fc 8981      		ldd r24,Y+1
 717 03fe 9A81      		ldd r25,Y+2
 718 0400 8957      		subi r24,121
 719 0402 9F4F      		sbci r25,-1
 720 0404 FC01      		movw r30,r24
 721 0406 1182      		std Z+1,__zero_reg__
 722 0408 1082      		st Z,__zero_reg__
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkFcf.security = frame->header.nwkFcf.security;
 723               		.loc 2 238 0
 724 040a 8D81      		ldd r24,Y+5
 725 040c 9E81      		ldd r25,Y+6
 726 040e FC01      		movw r30,r24
 727 0410 8385      		ldd r24,Z+11
 728 0412 81FB      		bst r24,1
 729 0414 2227      		clr r18
 730 0416 20F9      		bld r18,0
 731 0418 8981      		ldd r24,Y+1
 732 041a 9A81      		ldd r25,Y+2
 733 041c 2170      		andi r18,lo8(1)
 734 041e 220F      		lsl r18
 735 0420 FC01      		movw r30,r24
 736 0422 3385      		ldd r19,Z+11
 737 0424 3D7F      		andi r19,lo8(-3)
 738 0426 232B      		or r18,r19
 739 0428 FC01      		movw r30,r24
 740 042a 2387      		std Z+11,r18
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 741               		.loc 2 239 0
 742 042c 8D81      		ldd r24,Y+5
 743 042e 9E81      		ldd r25,Y+6
 744 0430 FC01      		movw r30,r24
 745 0432 2585      		ldd r18,Z+13
 746 0434 3685      		ldd r19,Z+14
 747 0436 8981      		ldd r24,Y+1
 748 0438 9A81      		ldd r25,Y+2
 749 043a FC01      		movw r30,r24
 750 043c 308B      		std Z+16,r19
 751 043e 2787      		std Z+15,r18
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command = (NwkCommandAck_t *)ack->payload;
 752               		.loc 2 241 0
 753 0440 8981      		ldd r24,Y+1
 754 0442 9A81      		ldd r25,Y+2
 755 0444 8F57      		subi r24,127
 756 0446 9F4F      		sbci r25,-1
 757 0448 FC01      		movw r30,r24
 758 044a 8081      		ld r24,Z
 759 044c 9181      		ldd r25,Z+1
 760 044e 9C83      		std Y+4,r25
 761 0450 8B83      		std Y+3,r24
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->id = NWK_COMMAND_ACK;
 762               		.loc 2 242 0
 763 0452 8B81      		ldd r24,Y+3
 764 0454 9C81      		ldd r25,Y+4
 765 0456 FC01      		movw r30,r24
 766 0458 1082      		st Z,__zero_reg__
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->control = nwkRxAckControl;
 767               		.loc 2 243 0
 768 045a 2091 0000 		lds r18,nwkRxAckControl
 769 045e 8B81      		ldd r24,Y+3
 770 0460 9C81      		ldd r25,Y+4
 771 0462 FC01      		movw r30,r24
 772 0464 2283      		std Z+2,r18
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->seq = frame->header.nwkSeq;
 773               		.loc 2 244 0
 774 0466 8D81      		ldd r24,Y+5
 775 0468 9E81      		ldd r25,Y+6
 776 046a FC01      		movw r30,r24
 777 046c 2485      		ldd r18,Z+12
 778 046e 8B81      		ldd r24,Y+3
 779 0470 9C81      		ldd r25,Y+4
 780 0472 FC01      		movw r30,r24
 781 0474 2183      		std Z+1,r18
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkTxFrame(ack);
 782               		.loc 2 246 0
 783 0476 8981      		ldd r24,Y+1
 784 0478 9A81      		ldd r25,Y+2
 785 047a 0E94 0000 		call nwkTxFrame
 786 047e 00C0      		rjmp .L37
 787               	.L40:
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 788               		.loc 2 227 0
 789 0480 0000      		nop
 790               	.L37:
 791               	/* epilogue start */
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 792               		.loc 2 247 0
 793 0482 2696      		adiw r28,6
 794 0484 0FB6      		in __tmp_reg__,__SREG__
 795 0486 F894      		cli
 796 0488 DEBF      		out __SP_H__,r29
 797 048a 0FBE      		out __SREG__,__tmp_reg__
 798 048c CDBF      		out __SP_L__,r28
 799 048e DF91      		pop r29
 800 0490 CF91      		pop r28
 801 0492 0895      		ret
 802               		.cfi_endproc
 803               	.LFE68:
 805               	.global	NWK_SetAckControl
 807               	NWK_SetAckControl:
 808               	.LFB69:
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void NWK_SetAckControl(uint8_t control)
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 809               		.loc 2 252 0
 810               		.cfi_startproc
 811 0494 CF93      		push r28
 812               	.LCFI16:
 813               		.cfi_def_cfa_offset 3
 814               		.cfi_offset 28, -2
 815 0496 DF93      		push r29
 816               	.LCFI17:
 817               		.cfi_def_cfa_offset 4
 818               		.cfi_offset 29, -3
 819 0498 1F92      		push __zero_reg__
 820               	.LCFI18:
 821               		.cfi_def_cfa_offset 5
 822 049a CDB7      		in r28,__SP_L__
 823 049c DEB7      		in r29,__SP_H__
 824               	.LCFI19:
 825               		.cfi_def_cfa_register 28
 826               	/* prologue: function */
 827               	/* frame size = 1 */
 828               	/* stack size = 3 */
 829               	.L__stack_usage = 3
 830 049e 8983      		std Y+1,r24
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = control;
 831               		.loc 2 253 0
 832 04a0 8981      		ldd r24,Y+1
 833 04a2 8093 0000 		sts nwkRxAckControl,r24
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 834               		.loc 2 254 0
 835 04a6 0000      		nop
 836               	/* epilogue start */
 837 04a8 0F90      		pop __tmp_reg__
 838 04aa DF91      		pop r29
 839 04ac CF91      		pop r28
 840 04ae 0895      		ret
 841               		.cfi_endproc
 842               	.LFE69:
 845               	nwkRxDuplicateRejectionTimerHandler:
 846               	.LFB70:
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxDecryptConf(NwkFrame_t *frame, bool status)
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (status) {
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_INDICATE;
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else {
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_FINISH;
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer)
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 847               		.loc 2 274 0
 848               		.cfi_startproc
 849 04b0 CF93      		push r28
 850               	.LCFI20:
 851               		.cfi_def_cfa_offset 3
 852               		.cfi_offset 28, -2
 853 04b2 DF93      		push r29
 854               	.LCFI21:
 855               		.cfi_def_cfa_offset 4
 856               		.cfi_offset 29, -3
 857 04b4 00D0      		rcall .
 858 04b6 00D0      		rcall .
 859               	.LCFI22:
 860               		.cfi_def_cfa_offset 8
 861 04b8 CDB7      		in r28,__SP_L__
 862 04ba DEB7      		in r29,__SP_H__
 863               	.LCFI23:
 864               		.cfi_def_cfa_register 28
 865               	/* prologue: function */
 866               	/* frame size = 4 */
 867               	/* stack size = 6 */
 868               	.L__stack_usage = 6
 869 04bc 9C83      		std Y+4,r25
 870 04be 8B83      		std Y+3,r24
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool restart = false;
 871               		.loc 2 275 0
 872 04c0 1982      		std Y+1,__zero_reg__
 873               	.LBB4:
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 874               		.loc 2 277 0
 875 04c2 1A82      		std Y+2,__zero_reg__
 876 04c4 00C0      		rjmp .L43
 877               	.L45:
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 878               		.loc 2 278 0
 879 04c6 8A81      		ldd r24,Y+2
 880 04c8 282F      		mov r18,r24
 881 04ca 30E0      		ldi r19,0
 882 04cc C901      		movw r24,r18
 883 04ce 880F      		lsl r24
 884 04d0 991F      		rol r25
 885 04d2 880F      		lsl r24
 886 04d4 991F      		rol r25
 887 04d6 820F      		add r24,r18
 888 04d8 931F      		adc r25,r19
 889 04da 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 890 04dc 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 891 04de FC01      		movw r30,r24
 892 04e0 8081      		ld r24,Z
 893 04e2 8823      		tst r24
 894 04e4 01F0      		breq .L44
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxDuplicateRejectionTable[i].ttl--;
 895               		.loc 2 279 0
 896 04e6 8A81      		ldd r24,Y+2
 897 04e8 282F      		mov r18,r24
 898 04ea 30E0      		ldi r19,0
 899 04ec C901      		movw r24,r18
 900 04ee 880F      		lsl r24
 901 04f0 991F      		rol r25
 902 04f2 880F      		lsl r24
 903 04f4 991F      		rol r25
 904 04f6 820F      		add r24,r18
 905 04f8 931F      		adc r25,r19
 906 04fa 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 907 04fc 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 908 04fe FC01      		movw r30,r24
 909 0500 8081      		ld r24,Z
 910 0502 4FEF      		ldi r20,lo8(-1)
 911 0504 480F      		add r20,r24
 912 0506 C901      		movw r24,r18
 913 0508 880F      		lsl r24
 914 050a 991F      		rol r25
 915 050c 880F      		lsl r24
 916 050e 991F      		rol r25
 917 0510 820F      		add r24,r18
 918 0512 931F      		adc r25,r19
 919 0514 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 920 0516 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 921 0518 FC01      		movw r30,r24
 922 051a 4083      		st Z,r20
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			restart = true;
 923               		.loc 2 280 0
 924 051c 81E0      		ldi r24,lo8(1)
 925 051e 8983      		std Y+1,r24
 926               	.L44:
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 927               		.loc 2 277 0 discriminator 2
 928 0520 8A81      		ldd r24,Y+2
 929 0522 8F5F      		subi r24,lo8(-(1))
 930 0524 8A83      		std Y+2,r24
 931               	.L43:
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 932               		.loc 2 277 0 is_stmt 0 discriminator 1
 933 0526 8A81      		ldd r24,Y+2
 934 0528 8233      		cpi r24,lo8(50)
 935 052a 00F0      		brlo .L45
 936               	.LBE4:
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (restart) {
 937               		.loc 2 284 0 is_stmt 1
 938 052c 8981      		ldd r24,Y+1
 939 052e 8823      		tst r24
 940 0530 01F0      		breq .L47
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		SYS_TimerStart(timer);
 941               		.loc 2 285 0
 942 0532 8B81      		ldd r24,Y+3
 943 0534 9C81      		ldd r25,Y+4
 944 0536 0E94 0000 		call SYS_TimerStart
 945               	.L47:
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 946               		.loc 2 287 0
 947 053a 0000      		nop
 948               	/* epilogue start */
 949 053c 0F90      		pop __tmp_reg__
 950 053e 0F90      		pop __tmp_reg__
 951 0540 0F90      		pop __tmp_reg__
 952 0542 0F90      		pop __tmp_reg__
 953 0544 DF91      		pop r29
 954 0546 CF91      		pop r28
 955 0548 0895      		ret
 956               		.cfi_endproc
 957               	.LFE70:
 960               	nwkRxRejectDuplicate:
 961               	.LFB71:
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxRejectDuplicate(NwkFrameHeader_t *header)
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 962               		.loc 2 292 0
 963               		.cfi_startproc
 964 054a CF93      		push r28
 965               	.LCFI24:
 966               		.cfi_def_cfa_offset 3
 967               		.cfi_offset 28, -2
 968 054c DF93      		push r29
 969               	.LCFI25:
 970               		.cfi_def_cfa_offset 4
 971               		.cfi_offset 29, -3
 972 054e CDB7      		in r28,__SP_L__
 973 0550 DEB7      		in r29,__SP_H__
 974               	.LCFI26:
 975               		.cfi_def_cfa_register 28
 976 0552 2997      		sbiw r28,9
 977               	.LCFI27:
 978               		.cfi_def_cfa_offset 13
 979 0554 0FB6      		in __tmp_reg__,__SREG__
 980 0556 F894      		cli
 981 0558 DEBF      		out __SP_H__,r29
 982 055a 0FBE      		out __SREG__,__tmp_reg__
 983 055c CDBF      		out __SP_L__,r28
 984               	/* prologue: function */
 985               	/* frame size = 9 */
 986               	/* stack size = 11 */
 987               	.L__stack_usage = 11
 988 055e 9987      		std Y+9,r25
 989 0560 8887      		std Y+8,r24
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *entry;
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *freeEntry = NULL;
 990               		.loc 2 294 0
 991 0562 1A82      		std Y+2,__zero_reg__
 992 0564 1982      		std Y+1,__zero_reg__
 993               	.LBB5:
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 994               		.loc 2 296 0
 995 0566 1B82      		std Y+3,__zero_reg__
 996 0568 00C0      		rjmp .L49
 997               	.L55:
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 998               		.loc 2 297 0
 999 056a 8B81      		ldd r24,Y+3
 1000 056c 282F      		mov r18,r24
 1001 056e 30E0      		ldi r19,0
 1002 0570 C901      		movw r24,r18
 1003 0572 880F      		lsl r24
 1004 0574 991F      		rol r25
 1005 0576 880F      		lsl r24
 1006 0578 991F      		rol r25
 1007 057a 820F      		add r24,r18
 1008 057c 931F      		adc r25,r19
 1009 057e 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable))
 1010 0580 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable))
 1011 0582 9D83      		std Y+5,r25
 1012 0584 8C83      		std Y+4,r24
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (entry->ttl && header->nwkSrcAddr == entry->src) {
 1013               		.loc 2 299 0
 1014 0586 8C81      		ldd r24,Y+4
 1015 0588 9D81      		ldd r25,Y+5
 1016 058a FC01      		movw r30,r24
 1017 058c 8481      		ldd r24,Z+4
 1018 058e 8823      		tst r24
 1019 0590 01F4      		brne .+2
 1020 0592 00C0      		rjmp .L50
 1021               		.loc 2 299 0 is_stmt 0 discriminator 1
 1022 0594 8885      		ldd r24,Y+8
 1023 0596 9985      		ldd r25,Y+9
 1024 0598 FC01      		movw r30,r24
 1025 059a 2385      		ldd r18,Z+11
 1026 059c 3485      		ldd r19,Z+12
 1027 059e 8C81      		ldd r24,Y+4
 1028 05a0 9D81      		ldd r25,Y+5
 1029 05a2 FC01      		movw r30,r24
 1030 05a4 8081      		ld r24,Z
 1031 05a6 9181      		ldd r25,Z+1
 1032 05a8 2817      		cp r18,r24
 1033 05aa 3907      		cpc r19,r25
 1034 05ac 01F0      		breq .+2
 1035 05ae 00C0      		rjmp .L50
 1036               	.LBB6:
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			uint8_t diff = (int8_t)entry->seq - header->nwkSeq;
 1037               		.loc 2 300 0 is_stmt 1
 1038 05b0 8C81      		ldd r24,Y+4
 1039 05b2 9D81      		ldd r25,Y+5
 1040 05b4 FC01      		movw r30,r24
 1041 05b6 2281      		ldd r18,Z+2
 1042 05b8 8885      		ldd r24,Y+8
 1043 05ba 9985      		ldd r25,Y+9
 1044 05bc FC01      		movw r30,r24
 1045 05be 8285      		ldd r24,Z+10
 1046 05c0 F22F      		mov r31,r18
 1047 05c2 F81B      		sub r31,r24
 1048 05c4 8F2F      		mov r24,r31
 1049 05c6 8E83      		std Y+6,r24
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (diff < 8) {
 1050               		.loc 2 302 0
 1051 05c8 8E81      		ldd r24,Y+6
 1052 05ca 8830      		cpi r24,lo8(8)
 1053 05cc 00F4      		brsh .L51
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				if (entry->mask & (1 << diff)) {
 1054               		.loc 2 303 0
 1055 05ce 8C81      		ldd r24,Y+4
 1056 05d0 9D81      		ldd r25,Y+5
 1057 05d2 FC01      		movw r30,r24
 1058 05d4 8381      		ldd r24,Z+3
 1059 05d6 882F      		mov r24,r24
 1060 05d8 90E0      		ldi r25,0
 1061 05da 2E81      		ldd r18,Y+6
 1062 05dc 222F      		mov r18,r18
 1063 05de 30E0      		ldi r19,0
 1064 05e0 00C0      		rjmp 2f
 1065               		1:
 1066 05e2 9595      		asr r25
 1067 05e4 8795      		ror r24
 1068               		2:
 1069 05e6 2A95      		dec r18
 1070 05e8 02F4      		brpl 1b
 1071 05ea 8170      		andi r24,1
 1072 05ec 9927      		clr r25
 1073 05ee 892B      		or r24,r25
 1074 05f0 01F0      		breq .L52
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#ifdef NWK_ENABLE_ROUTING
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					if (nwkIb.addr == header->macDstAddr) {
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 						nwkRouteRemove(
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkDstAddr,
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkFcf.multicast);
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					}
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#endif
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					return true;
 1075               		.loc 2 312 0
 1076 05f2 81E0      		ldi r24,lo8(1)
 1077 05f4 00C0      		rjmp .L53
 1078               	.L52:
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				}
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask |= (1 << diff);
 1079               		.loc 2 315 0
 1080 05f6 8C81      		ldd r24,Y+4
 1081 05f8 9D81      		ldd r25,Y+5
 1082 05fa FC01      		movw r30,r24
 1083 05fc 8381      		ldd r24,Z+3
 1084 05fe 482F      		mov r20,r24
 1085 0600 8E81      		ldd r24,Y+6
 1086 0602 282F      		mov r18,r24
 1087 0604 30E0      		ldi r19,0
 1088 0606 81E0      		ldi r24,lo8(1)
 1089 0608 90E0      		ldi r25,0
 1090 060a 00C0      		rjmp 2f
 1091               		1:
 1092 060c 880F      		lsl r24
 1093 060e 991F      		rol r25
 1094               		2:
 1095 0610 2A95      		dec r18
 1096 0612 02F4      		brpl 1b
 1097 0614 842B      		or r24,r20
 1098 0616 282F      		mov r18,r24
 1099 0618 8C81      		ldd r24,Y+4
 1100 061a 9D81      		ldd r25,Y+5
 1101 061c FC01      		movw r30,r24
 1102 061e 2383      		std Z+3,r18
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1103               		.loc 2 316 0
 1104 0620 80E0      		ldi r24,0
 1105 0622 00C0      		rjmp .L53
 1106               	.L51:
 1107               	.LBB7:
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				uint8_t shift = -(int8_t)diff;
 1108               		.loc 2 318 0
 1109 0624 8E81      		ldd r24,Y+6
 1110 0626 8195      		neg r24
 1111 0628 8F83      		std Y+7,r24
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->seq = header->nwkSeq;
 1112               		.loc 2 320 0
 1113 062a 8885      		ldd r24,Y+8
 1114 062c 9985      		ldd r25,Y+9
 1115 062e FC01      		movw r30,r24
 1116 0630 2285      		ldd r18,Z+10
 1117 0632 8C81      		ldd r24,Y+4
 1118 0634 9D81      		ldd r25,Y+5
 1119 0636 FC01      		movw r30,r24
 1120 0638 2283      		std Z+2,r18
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask = (entry->mask << shift) | 1;
 1121               		.loc 2 321 0
 1122 063a 8C81      		ldd r24,Y+4
 1123 063c 9D81      		ldd r25,Y+5
 1124 063e FC01      		movw r30,r24
 1125 0640 8381      		ldd r24,Z+3
 1126 0642 882F      		mov r24,r24
 1127 0644 90E0      		ldi r25,0
 1128 0646 2F81      		ldd r18,Y+7
 1129 0648 222F      		mov r18,r18
 1130 064a 30E0      		ldi r19,0
 1131 064c 00C0      		rjmp 2f
 1132               		1:
 1133 064e 880F      		lsl r24
 1134 0650 991F      		rol r25
 1135               		2:
 1136 0652 2A95      		dec r18
 1137 0654 02F4      		brpl 1b
 1138 0656 8160      		ori r24,lo8(1)
 1139 0658 282F      		mov r18,r24
 1140 065a 8C81      		ldd r24,Y+4
 1141 065c 9D81      		ldd r25,Y+5
 1142 065e FC01      		movw r30,r24
 1143 0660 2383      		std Z+3,r18
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->ttl = DUPLICATE_REJECTION_TTL;
 1144               		.loc 2 322 0
 1145 0662 8C81      		ldd r24,Y+4
 1146 0664 9D81      		ldd r25,Y+5
 1147 0666 25E1      		ldi r18,lo8(21)
 1148 0668 FC01      		movw r30,r24
 1149 066a 2483      		std Z+4,r18
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1150               		.loc 2 323 0
 1151 066c 80E0      		ldi r24,0
 1152 066e 00C0      		rjmp .L53
 1153               	.L50:
 1154               	.LBE7:
 1155               	.LBE6:
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (0 == entry->ttl) {
 1156               		.loc 2 327 0
 1157 0670 8C81      		ldd r24,Y+4
 1158 0672 9D81      		ldd r25,Y+5
 1159 0674 FC01      		movw r30,r24
 1160 0676 8481      		ldd r24,Z+4
 1161 0678 8823      		tst r24
 1162 067a 01F4      		brne .L54
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			freeEntry = entry;
 1163               		.loc 2 328 0
 1164 067c 8C81      		ldd r24,Y+4
 1165 067e 9D81      		ldd r25,Y+5
 1166 0680 9A83      		std Y+2,r25
 1167 0682 8983      		std Y+1,r24
 1168               	.L54:
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1169               		.loc 2 296 0 discriminator 2
 1170 0684 8B81      		ldd r24,Y+3
 1171 0686 8F5F      		subi r24,lo8(-(1))
 1172 0688 8B83      		std Y+3,r24
 1173               	.L49:
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1174               		.loc 2 296 0 is_stmt 0 discriminator 1
 1175 068a 8B81      		ldd r24,Y+3
 1176 068c 8233      		cpi r24,lo8(50)
 1177 068e 00F4      		brsh .+2
 1178 0690 00C0      		rjmp .L55
 1179               	.LBE5:
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == freeEntry) {
 1180               		.loc 2 332 0 is_stmt 1
 1181 0692 8981      		ldd r24,Y+1
 1182 0694 9A81      		ldd r25,Y+2
 1183 0696 892B      		or r24,r25
 1184 0698 01F4      		brne .L56
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return true;
 1185               		.loc 2 333 0
 1186 069a 81E0      		ldi r24,lo8(1)
 1187 069c 00C0      		rjmp .L53
 1188               	.L56:
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->src = header->nwkSrcAddr;
 1189               		.loc 2 336 0
 1190 069e 8885      		ldd r24,Y+8
 1191 06a0 9985      		ldd r25,Y+9
 1192 06a2 FC01      		movw r30,r24
 1193 06a4 2385      		ldd r18,Z+11
 1194 06a6 3485      		ldd r19,Z+12
 1195 06a8 8981      		ldd r24,Y+1
 1196 06aa 9A81      		ldd r25,Y+2
 1197 06ac FC01      		movw r30,r24
 1198 06ae 3183      		std Z+1,r19
 1199 06b0 2083      		st Z,r18
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->seq = header->nwkSeq;
 1200               		.loc 2 337 0
 1201 06b2 8885      		ldd r24,Y+8
 1202 06b4 9985      		ldd r25,Y+9
 1203 06b6 FC01      		movw r30,r24
 1204 06b8 2285      		ldd r18,Z+10
 1205 06ba 8981      		ldd r24,Y+1
 1206 06bc 9A81      		ldd r25,Y+2
 1207 06be FC01      		movw r30,r24
 1208 06c0 2283      		std Z+2,r18
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->mask = 1;
 1209               		.loc 2 338 0
 1210 06c2 8981      		ldd r24,Y+1
 1211 06c4 9A81      		ldd r25,Y+2
 1212 06c6 21E0      		ldi r18,lo8(1)
 1213 06c8 FC01      		movw r30,r24
 1214 06ca 2383      		std Z+3,r18
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->ttl = DUPLICATE_REJECTION_TTL;
 1215               		.loc 2 339 0
 1216 06cc 8981      		ldd r24,Y+1
 1217 06ce 9A81      		ldd r25,Y+2
 1218 06d0 25E1      		ldi r18,lo8(21)
 1219 06d2 FC01      		movw r30,r24
 1220 06d4 2483      		std Z+4,r18
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 1221               		.loc 2 341 0
 1222 06d6 80E0      		ldi r24,lo8(nwkRxDuplicateRejectionTimer)
 1223 06d8 90E0      		ldi r25,hi8(nwkRxDuplicateRejectionTimer)
 1224 06da 0E94 0000 		call SYS_TimerStart
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1225               		.loc 2 343 0
 1226 06de 80E0      		ldi r24,0
 1227               	.L53:
 1228               	/* epilogue start */
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1229               		.loc 2 344 0
 1230 06e0 2996      		adiw r28,9
 1231 06e2 0FB6      		in __tmp_reg__,__SREG__
 1232 06e4 F894      		cli
 1233 06e6 DEBF      		out __SP_H__,r29
 1234 06e8 0FBE      		out __SREG__,__tmp_reg__
 1235 06ea CDBF      		out __SP_L__,r28
 1236 06ec DF91      		pop r29
 1237 06ee CF91      		pop r28
 1238 06f0 0895      		ret
 1239               		.cfi_endproc
 1240               	.LFE71:
 1243               	nwkRxSeriveDataInd:
 1244               	.LFB72:
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind)
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1245               		.loc 2 349 0
 1246               		.cfi_startproc
 1247 06f2 CF93      		push r28
 1248               	.LCFI28:
 1249               		.cfi_def_cfa_offset 3
 1250               		.cfi_offset 28, -2
 1251 06f4 DF93      		push r29
 1252               	.LCFI29:
 1253               		.cfi_def_cfa_offset 4
 1254               		.cfi_offset 29, -3
 1255 06f6 00D0      		rcall .
 1256               	.LCFI30:
 1257               		.cfi_def_cfa_offset 6
 1258 06f8 CDB7      		in r28,__SP_L__
 1259 06fa DEB7      		in r29,__SP_H__
 1260               	.LCFI31:
 1261               		.cfi_def_cfa_register 28
 1262               	/* prologue: function */
 1263               	/* frame size = 2 */
 1264               	/* stack size = 4 */
 1265               	.L__stack_usage = 4
 1266 06fc 9A83      		std Y+2,r25
 1267 06fe 8983      		std Y+1,r24
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == (ind->options & NWK_IND_OPT_SECURED)) {
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ind->size < 1) {
 1268               		.loc 2 357 0
 1269 0700 8981      		ldd r24,Y+1
 1270 0702 9A81      		ldd r25,Y+2
 1271 0704 FC01      		movw r30,r24
 1272 0706 8285      		ldd r24,Z+10
 1273 0708 8823      		tst r24
 1274 070a 01F4      		brne .L58
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1275               		.loc 2 358 0
 1276 070c 80E0      		ldi r24,0
 1277 070e 00C0      		rjmp .L59
 1278               	.L58:
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	switch (ind->data[0]) {
 1279               		.loc 2 361 0
 1280 0710 8981      		ldd r24,Y+1
 1281 0712 9A81      		ldd r25,Y+2
 1282 0714 FC01      		movw r30,r24
 1283 0716 8085      		ldd r24,Z+8
 1284 0718 9185      		ldd r25,Z+9
 1285 071a FC01      		movw r30,r24
 1286 071c 8081      		ld r24,Z
 1287 071e 882F      		mov r24,r24
 1288 0720 90E0      		ldi r25,0
 1289 0722 892B      		or r24,r25
 1290 0724 01F4      		brne .L62
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ACK:
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkTxAckReceived(ind);
 1291               		.loc 2 363 0
 1292 0726 8981      		ldd r24,Y+1
 1293 0728 9A81      		ldd r25,Y+2
 1294 072a 0E94 0000 		call nwkTxAckReceived
 1295 072e 00C0      		rjmp .L59
 1296               	.L62:
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_ERROR:
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteErrorReceived(ind);
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTE_DISCOVERY
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REQUEST:
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryRequestReceived(ind);
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REPLY:
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryReplyReceived(ind);
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	default:
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1297               		.loc 2 381 0
 1298 0730 80E0      		ldi r24,0
 1299               	.L59:
 1300               	/* epilogue start */
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1301               		.loc 2 383 0
 1302 0732 0F90      		pop __tmp_reg__
 1303 0734 0F90      		pop __tmp_reg__
 1304 0736 DF91      		pop r29
 1305 0738 CF91      		pop r28
 1306 073a 0895      		ret
 1307               		.cfi_endproc
 1308               	.LFE72:
 1311               	nwkRxHandleReceivedFrame:
 1312               	.LFB73:
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleReceivedFrame(NwkFrame_t *frame)
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1313               		.loc 2 388 0
 1314               		.cfi_startproc
 1315 073c CF93      		push r28
 1316               	.LCFI32:
 1317               		.cfi_def_cfa_offset 3
 1318               		.cfi_offset 28, -2
 1319 073e DF93      		push r29
 1320               	.LCFI33:
 1321               		.cfi_def_cfa_offset 4
 1322               		.cfi_offset 29, -3
 1323 0740 CDB7      		in r28,__SP_L__
 1324 0742 DEB7      		in r29,__SP_H__
 1325               	.LCFI34:
 1326               		.cfi_def_cfa_register 28
 1327 0744 2897      		sbiw r28,8
 1328               	.LCFI35:
 1329               		.cfi_def_cfa_offset 12
 1330 0746 0FB6      		in __tmp_reg__,__SREG__
 1331 0748 F894      		cli
 1332 074a DEBF      		out __SP_H__,r29
 1333 074c 0FBE      		out __SREG__,__tmp_reg__
 1334 074e CDBF      		out __SP_L__,r28
 1335               	/* prologue: function */
 1336               	/* frame size = 8 */
 1337               	/* stack size = 10 */
 1338               	.L__stack_usage = 10
 1339 0750 9887      		std Y+8,r25
 1340 0752 8F83      		std Y+7,r24
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1341               		.loc 2 389 0
 1342 0754 8F81      		ldd r24,Y+7
 1343 0756 9885      		ldd r25,Y+8
 1344 0758 0296      		adiw r24,2
 1345 075a 9B83      		std Y+3,r25
 1346 075c 8A83      		std Y+2,r24
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1347               		.loc 2 391 0
 1348 075e 8F81      		ldd r24,Y+7
 1349 0760 9885      		ldd r25,Y+8
 1350 0762 24E2      		ldi r18,lo8(36)
 1351 0764 FC01      		movw r30,r24
 1352 0766 2083      		st Z,r18
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifndef NWK_ENABLE_SECURITY
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.security) {
 1353               		.loc 2 394 0
 1354 0768 8A81      		ldd r24,Y+2
 1355 076a 9B81      		ldd r25,Y+3
 1356 076c FC01      		movw r30,r24
 1357 076e 8185      		ldd r24,Z+9
 1358 0770 8270      		andi r24,lo8(2)
 1359 0772 8823      		tst r24
 1360 0774 01F0      		breq .+2
 1361 0776 00C0      		rjmp .L84
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast && header->nwkFcf.ackRequest) {
 1362               		.loc 2 401 0
 1363 0778 8A81      		ldd r24,Y+2
 1364 077a 9B81      		ldd r25,Y+3
 1365 077c FC01      		movw r30,r24
 1366 077e 8185      		ldd r24,Z+9
 1367 0780 8870      		andi r24,lo8(8)
 1368 0782 8823      		tst r24
 1369 0784 01F0      		breq .L66
 1370               		.loc 2 401 0 is_stmt 0 discriminator 1
 1371 0786 8A81      		ldd r24,Y+2
 1372 0788 9B81      		ldd r25,Y+3
 1373 078a FC01      		movw r30,r24
 1374 078c 8185      		ldd r24,Z+9
 1375 078e 8170      		andi r24,lo8(1)
 1376 0790 8823      		tst r24
 1377 0792 01F0      		breq .+2
 1378 0794 00C0      		rjmp .L85
 1379               	.L66:
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #else
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == header->macDstPanId)
 1380               		.loc 2 412 0 is_stmt 1
 1381 0796 8A81      		ldd r24,Y+2
 1382 0798 9B81      		ldd r25,Y+3
 1383 079a FC01      		movw r30,r24
 1384 079c 8381      		ldd r24,Z+3
 1385 079e 9481      		ldd r25,Z+4
 1386 07a0 0196      		adiw r24,1
 1387 07a2 01F4      		brne .L67
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR == header->nwkDstAddr)
 1388               		.loc 2 414 0
 1389 07a4 2091 0000 		lds r18,nwkIb
 1390 07a8 3091 0000 		lds r19,nwkIb+1
 1391 07ac 8A81      		ldd r24,Y+2
 1392 07ae 9B81      		ldd r25,Y+3
 1393 07b0 FC01      		movw r30,r24
 1394 07b2 8585      		ldd r24,Z+13
 1395 07b4 9685      		ldd r25,Z+14
 1396 07b6 2817      		cp r18,r24
 1397 07b8 3907      		cpc r19,r25
 1398 07ba 01F0      		breq .L68
 1399               		.loc 2 414 0 is_stmt 0 discriminator 1
 1400 07bc 8A81      		ldd r24,Y+2
 1401 07be 9B81      		ldd r25,Y+3
 1402 07c0 FC01      		movw r30,r24
 1403 07c2 8585      		ldd r24,Z+13
 1404 07c4 9685      		ldd r25,Z+14
 1405 07c6 0196      		adiw r24,1
 1406 07c8 01F0      		breq .+2
 1407 07ca 00C0      		rjmp .L86
 1408               	.L68:
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security)
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			{
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1409               		.loc 2 423 0 is_stmt 1
 1410 07cc 8F81      		ldd r24,Y+7
 1411 07ce 9885      		ldd r25,Y+8
 1412 07d0 22E2      		ldi r18,lo8(34)
 1413 07d2 FC01      		movw r30,r24
 1414 07d4 2083      		st Z,r18
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 1415               		.loc 2 426 0
 1416 07d6 00C0      		rjmp .L86
 1417               	.L67:
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ADDRESS_FILTER
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (!NWK_FilterAddress(header->macSrcAddr, &frame->rx.lqi)) {
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == header->nwkDstAddr && header->nwkFcf.ackRequest)
 1418               		.loc 2 436 0
 1419 07d8 8A81      		ldd r24,Y+2
 1420 07da 9B81      		ldd r25,Y+3
 1421 07dc FC01      		movw r30,r24
 1422 07de 8585      		ldd r24,Z+13
 1423 07e0 9685      		ldd r25,Z+14
 1424 07e2 0196      		adiw r24,1
 1425 07e4 01F4      		brne .L70
 1426               		.loc 2 436 0 is_stmt 0 discriminator 1
 1427 07e6 8A81      		ldd r24,Y+2
 1428 07e8 9B81      		ldd r25,Y+3
 1429 07ea FC01      		movw r30,r24
 1430 07ec 8185      		ldd r24,Z+9
 1431 07ee 8170      		andi r24,lo8(1)
 1432 07f0 8823      		tst r24
 1433 07f2 01F0      		breq .+2
 1434 07f4 00C0      		rjmp .L87
 1435               	.L70:
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkIb.addr == header->nwkSrcAddr)
 1436               		.loc 2 441 0 is_stmt 1
 1437 07f6 2091 0000 		lds r18,nwkIb
 1438 07fa 3091 0000 		lds r19,nwkIb+1
 1439 07fe 8A81      		ldd r24,Y+2
 1440 0800 9B81      		ldd r25,Y+3
 1441 0802 FC01      		movw r30,r24
 1442 0804 8385      		ldd r24,Z+11
 1443 0806 9485      		ldd r25,Z+12
 1444 0808 2817      		cp r18,r24
 1445 080a 3907      		cpc r19,r25
 1446 080c 01F4      		brne .+2
 1447 080e 00C0      		rjmp .L88
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 445:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRouteFrameReceived(frame);
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 449:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkRxRejectDuplicate(header))
 1448               		.loc 2 450 0
 1449 0810 8A81      		ldd r24,Y+2
 1450 0812 9B81      		ldd r25,Y+3
 1451 0814 0E94 0000 		call nwkRxRejectDuplicate
 1452 0818 8823      		tst r24
 1453 081a 01F0      		breq .+2
 1454 081c 00C0      		rjmp .L89
 451:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 455:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 456:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 1455               		.loc 2 456 0
 1456 081e 8A81      		ldd r24,Y+2
 1457 0820 9B81      		ldd r25,Y+3
 1458 0822 FC01      		movw r30,r24
 1459 0824 8185      		ldd r24,Z+9
 1460 0826 8870      		andi r24,lo8(8)
 1461 0828 8823      		tst r24
 1462 082a 01F4      		brne .+2
 1463 082c 00C0      		rjmp .L73
 1464               	.LBB8:
 457:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameMulticastHeader_t *mcHeader
 1465               		.loc 2 457 0
 1466 082e 8F81      		ldd r24,Y+7
 1467 0830 9885      		ldd r25,Y+8
 1468 0832 8F57      		subi r24,127
 1469 0834 9F4F      		sbci r25,-1
 1470 0836 FC01      		movw r30,r24
 1471 0838 8081      		ld r24,Z
 1472 083a 9181      		ldd r25,Z+1
 1473 083c 9D83      		std Y+5,r25
 1474 083e 8C83      		std Y+4,r24
 458:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			= (NwkFrameMulticastHeader_t *)frame->payload;
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool member = NWK_GroupIsMember(header->nwkDstAddr);
 1475               		.loc 2 459 0
 1476 0840 8A81      		ldd r24,Y+2
 1477 0842 9B81      		ldd r25,Y+3
 1478 0844 FC01      		movw r30,r24
 1479 0846 8585      		ldd r24,Z+13
 1480 0848 9685      		ldd r25,Z+14
 1481 084a 0E94 0000 		call NWK_GroupIsMember
 1482 084e 8E83      		std Y+6,r24
 460:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool broadcast = false;
 1483               		.loc 2 460 0
 1484 0850 1982      		std Y+1,__zero_reg__
 461:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 462:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 1485               		.loc 2 462 0
 1486 0852 8A81      		ldd r24,Y+2
 1487 0854 9B81      		ldd r25,Y+3
 1488 0856 FC01      		movw r30,r24
 1489 0858 8581      		ldd r24,Z+5
 1490 085a 9681      		ldd r25,Z+6
 1491 085c 0196      		adiw r24,1
 1492 085e 01F0      		breq .+2
 1493 0860 00C0      		rjmp .L74
 463:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1494               		.loc 2 463 0
 1495 0862 8E81      		ldd r24,Y+6
 1496 0864 8823      		tst r24
 1497 0866 01F0      		breq .L75
 464:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->memberRadius > 0;
 1498               		.loc 2 464 0
 1499 0868 8C81      		ldd r24,Y+4
 1500 086a 9D81      		ldd r25,Y+5
 1501 086c FC01      		movw r30,r24
 1502 086e 8181      		ldd r24,Z+1
 1503 0870 8F70      		andi r24,lo8(15)
 1504 0872 882F      		mov r24,r24
 1505 0874 90E0      		ldi r25,0
 1506 0876 21E0      		ldi r18,lo8(1)
 1507 0878 1816      		cp __zero_reg__,r24
 1508 087a 1906      		cpc __zero_reg__,r25
 1509 087c 04F0      		brlt .L76
 1510 087e 20E0      		ldi r18,0
 1511               	.L76:
 1512 0880 2983      		std Y+1,r18
 465:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius--;
 1513               		.loc 2 465 0
 1514 0882 8C81      		ldd r24,Y+4
 1515 0884 9D81      		ldd r25,Y+5
 1516 0886 FC01      		movw r30,r24
 1517 0888 8181      		ldd r24,Z+1
 1518 088a 8F70      		andi r24,lo8(15)
 1519 088c 2FE0      		ldi r18,lo8(15)
 1520 088e 280F      		add r18,r24
 1521 0890 2F70      		andi r18,lo8(15)
 1522 0892 8C81      		ldd r24,Y+4
 1523 0894 9D81      		ldd r25,Y+5
 1524 0896 2F70      		andi r18,lo8(15)
 1525 0898 FC01      		movw r30,r24
 1526 089a 3181      		ldd r19,Z+1
 1527 089c 307F      		andi r19,lo8(-16)
 1528 089e 232B      		or r18,r19
 1529 08a0 FC01      		movw r30,r24
 1530 08a2 2183      		std Z+1,r18
 466:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius
 467:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxNonMemberRadius;
 1531               		.loc 2 467 0
 1532 08a4 8C81      		ldd r24,Y+4
 1533 08a6 9D81      		ldd r25,Y+5
 1534 08a8 FC01      		movw r30,r24
 1535 08aa 8081      		ld r24,Z
 1536 08ac 282F      		mov r18,r24
 1537 08ae 2295      		swap r18
 1538 08b0 2F70      		andi r18,lo8(15)
 1539 08b2 8C81      		ldd r24,Y+4
 1540 08b4 9D81      		ldd r25,Y+5
 1541 08b6 2F70      		andi r18,lo8(15)
 1542 08b8 FC01      		movw r30,r24
 1543 08ba 3081      		ld r19,Z
 1544 08bc 307F      		andi r19,lo8(-16)
 1545 08be 232B      		or r18,r19
 1546 08c0 FC01      		movw r30,r24
 1547 08c2 2083      		st Z,r18
 1548 08c4 00C0      		rjmp .L79
 1549               	.L75:
 468:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 469:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->nonMemberRadius > 0;
 1550               		.loc 2 469 0
 1551 08c6 8C81      		ldd r24,Y+4
 1552 08c8 9D81      		ldd r25,Y+5
 1553 08ca FC01      		movw r30,r24
 1554 08cc 8081      		ld r24,Z
 1555 08ce 8F70      		andi r24,lo8(15)
 1556 08d0 882F      		mov r24,r24
 1557 08d2 90E0      		ldi r25,0
 1558 08d4 21E0      		ldi r18,lo8(1)
 1559 08d6 1816      		cp __zero_reg__,r24
 1560 08d8 1906      		cpc __zero_reg__,r25
 1561 08da 04F0      		brlt .L78
 1562 08dc 20E0      		ldi r18,0
 1563               	.L78:
 1564 08de 2983      		std Y+1,r18
 470:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius--;
 1565               		.loc 2 470 0
 1566 08e0 8C81      		ldd r24,Y+4
 1567 08e2 9D81      		ldd r25,Y+5
 1568 08e4 FC01      		movw r30,r24
 1569 08e6 8081      		ld r24,Z
 1570 08e8 8F70      		andi r24,lo8(15)
 1571 08ea 2FE0      		ldi r18,lo8(15)
 1572 08ec 280F      		add r18,r24
 1573 08ee 2F70      		andi r18,lo8(15)
 1574 08f0 8C81      		ldd r24,Y+4
 1575 08f2 9D81      		ldd r25,Y+5
 1576 08f4 2F70      		andi r18,lo8(15)
 1577 08f6 FC01      		movw r30,r24
 1578 08f8 3081      		ld r19,Z
 1579 08fa 307F      		andi r19,lo8(-16)
 1580 08fc 232B      		or r18,r19
 1581 08fe FC01      		movw r30,r24
 1582 0900 2083      		st Z,r18
 471:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius
 472:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxMemberRadius;
 1583               		.loc 2 472 0
 1584 0902 8C81      		ldd r24,Y+4
 1585 0904 9D81      		ldd r25,Y+5
 1586 0906 FC01      		movw r30,r24
 1587 0908 8181      		ldd r24,Z+1
 1588 090a 282F      		mov r18,r24
 1589 090c 2295      		swap r18
 1590 090e 2F70      		andi r18,lo8(15)
 1591 0910 8C81      		ldd r24,Y+4
 1592 0912 9D81      		ldd r25,Y+5
 1593 0914 2F70      		andi r18,lo8(15)
 1594 0916 FC01      		movw r30,r24
 1595 0918 3181      		ldd r19,Z+1
 1596 091a 307F      		andi r19,lo8(-16)
 1597 091c 232B      		or r18,r19
 1598 091e FC01      		movw r30,r24
 1599 0920 2183      		std Z+1,r18
 1600 0922 00C0      		rjmp .L79
 1601               	.L74:
 473:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 474:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		} else {
 475:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1602               		.loc 2 475 0
 1603 0924 8E81      		ldd r24,Y+6
 1604 0926 8823      		tst r24
 1605 0928 01F0      		breq .L79
 476:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = true;
 1606               		.loc 2 476 0
 1607 092a 81E0      		ldi r24,lo8(1)
 1608 092c 8983      		std Y+1,r24
 477:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkFcf.linkLocal = 1;
 1609               		.loc 2 477 0
 1610 092e 8A81      		ldd r24,Y+2
 1611 0930 9B81      		ldd r25,Y+3
 1612 0932 FC01      		movw r30,r24
 1613 0934 2185      		ldd r18,Z+9
 1614 0936 2460      		ori r18,lo8(4)
 1615 0938 FC01      		movw r30,r24
 1616 093a 2187      		std Z+9,r18
 1617               	.L79:
 478:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 479:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 480:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_ROUTING
 481:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else {
 482:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_ROUTE;
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 485:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 486:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 487:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (broadcast) {
 1618               		.loc 2 487 0
 1619 093c 8981      		ldd r24,Y+1
 1620 093e 8823      		tst r24
 1621 0940 01F0      		breq .L80
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1622               		.loc 2 488 0
 1623 0942 8F81      		ldd r24,Y+7
 1624 0944 9885      		ldd r25,Y+8
 1625 0946 0E94 0000 		call nwkTxBroadcastFrame
 1626               	.L80:
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 490:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 491:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (member) {
 1627               		.loc 2 491 0
 1628 094a 8E81      		ldd r24,Y+6
 1629 094c 8823      		tst r24
 1630 094e 01F4      		brne .+2
 1631 0950 00C0      		rjmp .L63
 492:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 1632               		.loc 2 492 0
 1633 0952 8F81      		ldd r24,Y+7
 1634 0954 9885      		ldd r25,Y+8
 1635 0956 8F57      		subi r24,127
 1636 0958 9F4F      		sbci r25,-1
 1637 095a FC01      		movw r30,r24
 1638 095c 8081      		ld r24,Z
 1639 095e 9181      		ldd r25,Z+1
 1640 0960 9C01      		movw r18,r24
 1641 0962 2E5F      		subi r18,-2
 1642 0964 3F4F      		sbci r19,-1
 1643 0966 8F81      		ldd r24,Y+7
 1644 0968 9885      		ldd r25,Y+8
 1645 096a 8F57      		subi r24,127
 1646 096c 9F4F      		sbci r25,-1
 1647 096e FC01      		movw r30,r24
 1648 0970 3183      		std Z+1,r19
 1649 0972 2083      		st Z,r18
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 495:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 496:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 497:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1650               		.loc 2 499 0
 1651 0974 8F81      		ldd r24,Y+7
 1652 0976 9885      		ldd r25,Y+8
 1653 0978 22E2      		ldi r18,lo8(34)
 1654 097a FC01      		movw r30,r24
 1655 097c 2083      		st Z,r18
 1656 097e 00C0      		rjmp .L63
 1657               	.L73:
 1658               	.LBE8:
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif /* NWK_ENABLE_MULTICAST */
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr && nwkIb.addr !=
 1659               		.loc 2 504 0
 1660 0980 8A81      		ldd r24,Y+2
 1661 0982 9B81      		ldd r25,Y+3
 1662 0984 FC01      		movw r30,r24
 1663 0986 8581      		ldd r24,Z+5
 1664 0988 9681      		ldd r25,Z+6
 1665 098a 0196      		adiw r24,1
 1666 098c 01F4      		brne .L82
 1667               		.loc 2 504 0 is_stmt 0 discriminator 1
 1668 098e 2091 0000 		lds r18,nwkIb
 1669 0992 3091 0000 		lds r19,nwkIb+1
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1670               		.loc 2 505 0 is_stmt 1 discriminator 1
 1671 0996 8A81      		ldd r24,Y+2
 1672 0998 9B81      		ldd r25,Y+3
 1673 099a FC01      		movw r30,r24
 1674 099c 8585      		ldd r24,Z+13
 1675 099e 9685      		ldd r25,Z+14
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1676               		.loc 2 504 0 discriminator 1
 1677 09a0 2817      		cp r18,r24
 1678 09a2 3907      		cpc r19,r25
 1679 09a4 01F0      		breq .L82
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				0 == header->nwkFcf.linkLocal) {
 1680               		.loc 2 506 0
 1681 09a6 8A81      		ldd r24,Y+2
 1682 09a8 9B81      		ldd r25,Y+3
 1683 09aa FC01      		movw r30,r24
 1684 09ac 8185      		ldd r24,Z+9
 1685 09ae 8470      		andi r24,lo8(4)
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1686               		.loc 2 505 0
 1687 09b0 8823      		tst r24
 1688 09b2 01F4      		brne .L82
 507:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1689               		.loc 2 507 0
 1690 09b4 8F81      		ldd r24,Y+7
 1691 09b6 9885      		ldd r25,Y+8
 1692 09b8 0E94 0000 		call nwkTxBroadcastFrame
 1693               	.L82:
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 509:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR ==
 1694               		.loc 2 510 0
 1695 09bc 2091 0000 		lds r18,nwkIb
 1696 09c0 3091 0000 		lds r19,nwkIb+1
 1697 09c4 8A81      		ldd r24,Y+2
 1698 09c6 9B81      		ldd r25,Y+3
 1699 09c8 FC01      		movw r30,r24
 1700 09ca 8585      		ldd r24,Z+13
 1701 09cc 9685      		ldd r25,Z+14
 1702 09ce 2817      		cp r18,r24
 1703 09d0 3907      		cpc r19,r25
 1704 09d2 01F0      		breq .L83
 511:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1705               		.loc 2 511 0 discriminator 1
 1706 09d4 8A81      		ldd r24,Y+2
 1707 09d6 9B81      		ldd r25,Y+3
 1708 09d8 FC01      		movw r30,r24
 1709 09da 8585      		ldd r24,Z+13
 1710 09dc 9685      		ldd r25,Z+14
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1711               		.loc 2 510 0 discriminator 1
 1712 09de 0196      		adiw r24,1
 1713 09e0 01F4      		brne .L63
 1714               	.L83:
 512:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 513:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 514:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 515:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 516:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 517:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1715               		.loc 2 517 0
 1716 09e2 8F81      		ldd r24,Y+7
 1717 09e4 9885      		ldd r25,Y+8
 1718 09e6 22E2      		ldi r18,lo8(34)
 1719 09e8 FC01      		movw r30,r24
 1720 09ea 2083      		st Z,r18
 1721 09ec 00C0      		rjmp .L63
 1722               	.L84:
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1723               		.loc 2 395 0
 1724 09ee 0000      		nop
 1725 09f0 00C0      		rjmp .L63
 1726               	.L85:
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1727               		.loc 2 402 0
 1728 09f2 0000      		nop
 1729 09f4 00C0      		rjmp .L63
 1730               	.L86:
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1731               		.loc 2 426 0
 1732 09f6 0000      		nop
 1733 09f8 00C0      		rjmp .L63
 1734               	.L87:
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1735               		.loc 2 438 0
 1736 09fa 0000      		nop
 1737 09fc 00C0      		rjmp .L63
 1738               	.L88:
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1739               		.loc 2 443 0
 1740 09fe 0000      		nop
 1741 0a00 00C0      		rjmp .L63
 1742               	.L89:
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1743               		.loc 2 452 0
 1744 0a02 0000      		nop
 1745               	.L63:
 1746               	/* epilogue start */
 518:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 519:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 520:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #ifdef NWK_ENABLE_ROUTING
 521:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if (nwkIb.addr == header->macDstAddr) {
 522:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_ROUTE;
 523:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 524:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #endif
 525:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 526:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1747               		.loc 2 526 0
 1748 0a04 2896      		adiw r28,8
 1749 0a06 0FB6      		in __tmp_reg__,__SREG__
 1750 0a08 F894      		cli
 1751 0a0a DEBF      		out __SP_H__,r29
 1752 0a0c 0FBE      		out __SREG__,__tmp_reg__
 1753 0a0e CDBF      		out __SP_L__,r28
 1754 0a10 DF91      		pop r29
 1755 0a12 CF91      		pop r28
 1756 0a14 0895      		ret
 1757               		.cfi_endproc
 1758               	.LFE73:
 1761               	nwkRxIndicateDataFrame:
 1762               	.LFB74:
 527:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 528:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 529:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 530:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateDataFrame(NwkFrame_t *frame)
 531:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1763               		.loc 2 531 0
 1764               		.cfi_startproc
 1765 0a16 CF93      		push r28
 1766               	.LCFI36:
 1767               		.cfi_def_cfa_offset 3
 1768               		.cfi_offset 28, -2
 1769 0a18 DF93      		push r29
 1770               	.LCFI37:
 1771               		.cfi_def_cfa_offset 4
 1772               		.cfi_offset 29, -3
 1773 0a1a CDB7      		in r28,__SP_L__
 1774 0a1c DEB7      		in r29,__SP_H__
 1775               	.LCFI38:
 1776               		.cfi_def_cfa_register 28
 1777 0a1e 6197      		sbiw r28,17
 1778               	.LCFI39:
 1779               		.cfi_def_cfa_offset 21
 1780 0a20 0FB6      		in __tmp_reg__,__SREG__
 1781 0a22 F894      		cli
 1782 0a24 DEBF      		out __SP_H__,r29
 1783 0a26 0FBE      		out __SREG__,__tmp_reg__
 1784 0a28 CDBF      		out __SP_L__,r28
 1785               	/* prologue: function */
 1786               	/* frame size = 17 */
 1787               	/* stack size = 19 */
 1788               	.L__stack_usage = 19
 1789 0a2a 998B      		std Y+17,r25
 1790 0a2c 888B      		std Y+16,r24
 532:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1791               		.loc 2 532 0
 1792 0a2e 8889      		ldd r24,Y+16
 1793 0a30 9989      		ldd r25,Y+17
 1794 0a32 0296      		adiw r24,2
 1795 0a34 9A83      		std Y+2,r25
 1796 0a36 8983      		std Y+1,r24
 533:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 534:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 535:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[header->nwkDstEndpoint]) {
 1797               		.loc 2 535 0
 1798 0a38 8981      		ldd r24,Y+1
 1799 0a3a 9A81      		ldd r25,Y+2
 1800 0a3c FC01      		movw r30,r24
 1801 0a3e 8785      		ldd r24,Z+15
 1802 0a40 8295      		swap r24
 1803 0a42 8F70      		andi r24,lo8(15)
 1804 0a44 882F      		mov r24,r24
 1805 0a46 90E0      		ldi r25,0
 1806 0a48 0396      		adiw r24,3
 1807 0a4a 880F      		lsl r24
 1808 0a4c 991F      		rol r25
 1809 0a4e 8050      		subi r24,lo8(-(nwkIb))
 1810 0a50 9040      		sbci r25,hi8(-(nwkIb))
 1811 0a52 FC01      		movw r30,r24
 1812 0a54 8081      		ld r24,Z
 1813 0a56 9181      		ldd r25,Z+1
 1814 0a58 892B      		or r24,r25
 1815 0a5a 01F4      		brne .L91
 536:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1816               		.loc 2 536 0
 1817 0a5c 80E0      		ldi r24,0
 1818 0a5e 00C0      		rjmp .L106
 1819               	.L91:
 537:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 538:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 539:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = header->nwkSrcAddr;
 1820               		.loc 2 539 0
 1821 0a60 8981      		ldd r24,Y+1
 1822 0a62 9A81      		ldd r25,Y+2
 1823 0a64 FC01      		movw r30,r24
 1824 0a66 8385      		ldd r24,Z+11
 1825 0a68 9485      		ldd r25,Z+12
 1826 0a6a 9C83      		std Y+4,r25
 1827 0a6c 8B83      		std Y+3,r24
 540:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = header->nwkDstAddr;
 1828               		.loc 2 540 0
 1829 0a6e 8981      		ldd r24,Y+1
 1830 0a70 9A81      		ldd r25,Y+2
 1831 0a72 FC01      		movw r30,r24
 1832 0a74 8585      		ldd r24,Z+13
 1833 0a76 9685      		ldd r25,Z+14
 1834 0a78 9E83      		std Y+6,r25
 1835 0a7a 8D83      		std Y+5,r24
 541:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = header->nwkSrcEndpoint;
 1836               		.loc 2 541 0
 1837 0a7c 8981      		ldd r24,Y+1
 1838 0a7e 9A81      		ldd r25,Y+2
 1839 0a80 FC01      		movw r30,r24
 1840 0a82 8785      		ldd r24,Z+15
 1841 0a84 8F70      		andi r24,lo8(15)
 1842 0a86 8F83      		std Y+7,r24
 542:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = header->nwkDstEndpoint;
 1843               		.loc 2 542 0
 1844 0a88 8981      		ldd r24,Y+1
 1845 0a8a 9A81      		ldd r25,Y+2
 1846 0a8c FC01      		movw r30,r24
 1847 0a8e 8785      		ldd r24,Z+15
 1848 0a90 8295      		swap r24
 1849 0a92 8F70      		andi r24,lo8(15)
 1850 0a94 8887      		std Y+8,r24
 543:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1851               		.loc 2 543 0
 1852 0a96 8889      		ldd r24,Y+16
 1853 0a98 9989      		ldd r25,Y+17
 1854 0a9a 8F57      		subi r24,127
 1855 0a9c 9F4F      		sbci r25,-1
 1856 0a9e FC01      		movw r30,r24
 1857 0aa0 8081      		ld r24,Z
 1858 0aa2 9181      		ldd r25,Z+1
 1859 0aa4 9C87      		std Y+12,r25
 1860 0aa6 8B87      		std Y+11,r24
 544:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1861               		.loc 2 544 0
 1862 0aa8 8889      		ldd r24,Y+16
 1863 0aaa 9989      		ldd r25,Y+17
 1864 0aac 0E94 0000 		call nwkFramePayloadSize
 1865 0ab0 8D87      		std Y+13,r24
 545:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1866               		.loc 2 545 0
 1867 0ab2 8889      		ldd r24,Y+16
 1868 0ab4 9989      		ldd r25,Y+17
 1869 0ab6 8D57      		subi r24,125
 1870 0ab8 9F4F      		sbci r25,-1
 1871 0aba FC01      		movw r30,r24
 1872 0abc 8081      		ld r24,Z
 1873 0abe 8E87      		std Y+14,r24
 546:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1874               		.loc 2 546 0
 1875 0ac0 8889      		ldd r24,Y+16
 1876 0ac2 9989      		ldd r25,Y+17
 1877 0ac4 8C57      		subi r24,124
 1878 0ac6 9F4F      		sbci r25,-1
 1879 0ac8 FC01      		movw r30,r24
 1880 0aca 8081      		ld r24,Z
 1881 0acc 8F87      		std Y+15,r24
 547:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 548:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK_REQUESTED : 0;
 1882               		.loc 2 548 0
 1883 0ace 8981      		ldd r24,Y+1
 1884 0ad0 9A81      		ldd r25,Y+2
 1885 0ad2 FC01      		movw r30,r24
 1886 0ad4 8185      		ldd r24,Z+9
 1887 0ad6 982F      		mov r25,r24
 1888 0ad8 9170      		andi r25,lo8(1)
 1889 0ada 81E0      		ldi r24,lo8(1)
 1890 0adc 9923      		tst r25
 1891 0ade 01F4      		brne .L93
 1892 0ae0 80E0      		ldi r24,0
 1893               	.L93:
 1894 0ae2 882F      		mov r24,r24
 1895 0ae4 90E0      		ldi r25,0
 1896 0ae6 9A87      		std Y+10,r25
 1897 0ae8 8987      		std Y+9,r24
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECURED : 0;
 1898               		.loc 2 549 0
 1899 0aea 2985      		ldd r18,Y+9
 1900 0aec 3A85      		ldd r19,Y+10
 1901 0aee 8981      		ldd r24,Y+1
 1902 0af0 9A81      		ldd r25,Y+2
 1903 0af2 FC01      		movw r30,r24
 1904 0af4 8185      		ldd r24,Z+9
 1905 0af6 882F      		mov r24,r24
 1906 0af8 90E0      		ldi r25,0
 1907 0afa 8270      		andi r24,2
 1908 0afc 9927      		clr r25
 1909 0afe 822B      		or r24,r18
 1910 0b00 932B      		or r25,r19
 1911 0b02 9A87      		std Y+10,r25
 1912 0b04 8987      		std Y+9,r24
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LINK_LOCAL : 0;
 1913               		.loc 2 550 0
 1914 0b06 2985      		ldd r18,Y+9
 1915 0b08 3A85      		ldd r19,Y+10
 1916 0b0a 8981      		ldd r24,Y+1
 1917 0b0c 9A81      		ldd r25,Y+2
 1918 0b0e FC01      		movw r30,r24
 1919 0b10 8185      		ldd r24,Z+9
 1920 0b12 8470      		andi r24,lo8(4)
 1921 0b14 8823      		tst r24
 1922 0b16 01F0      		breq .L94
 1923               		.loc 2 550 0 is_stmt 0 discriminator 1
 1924 0b18 80E2      		ldi r24,lo8(32)
 1925 0b1a 90E0      		ldi r25,0
 1926 0b1c 00C0      		rjmp .L95
 1927               	.L94:
 1928               		.loc 2 550 0 discriminator 2
 1929 0b1e 80E0      		ldi r24,0
 1930 0b20 90E0      		ldi r25,0
 1931               	.L95:
 1932               		.loc 2 550 0 discriminator 4
 1933 0b22 822B      		or r24,r18
 1934 0b24 932B      		or r25,r19
 1935 0b26 9A87      		std Y+10,r25
 1936 0b28 8987      		std Y+9,r24
 551:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MULTICAST : 0;
 1937               		.loc 2 551 0 is_stmt 1 discriminator 4
 1938 0b2a 2985      		ldd r18,Y+9
 1939 0b2c 3A85      		ldd r19,Y+10
 1940 0b2e 8981      		ldd r24,Y+1
 1941 0b30 9A81      		ldd r25,Y+2
 1942 0b32 FC01      		movw r30,r24
 1943 0b34 8185      		ldd r24,Z+9
 1944 0b36 8870      		andi r24,lo8(8)
 1945 0b38 8823      		tst r24
 1946 0b3a 01F0      		breq .L96
 1947               		.loc 2 551 0 is_stmt 0 discriminator 1
 1948 0b3c 80E4      		ldi r24,lo8(64)
 1949 0b3e 90E0      		ldi r25,0
 1950 0b40 00C0      		rjmp .L97
 1951               	.L96:
 1952               		.loc 2 551 0 discriminator 2
 1953 0b42 80E0      		ldi r24,0
 1954 0b44 90E0      		ldi r25,0
 1955               	.L97:
 1956               		.loc 2 551 0 discriminator 4
 1957 0b46 822B      		or r24,r18
 1958 0b48 932B      		or r25,r19
 1959 0b4a 9A87      		std Y+10,r25
 1960 0b4c 8987      		std Y+9,r24
 552:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.beacon) ? NWK_IND_OPT_BEACON : 0;
 1961               		.loc 2 552 0 is_stmt 1 discriminator 4
 1962 0b4e 2985      		ldd r18,Y+9
 1963 0b50 3A85      		ldd r19,Y+10
 1964 0b52 8981      		ldd r24,Y+1
 1965 0b54 9A81      		ldd r25,Y+2
 1966 0b56 FC01      		movw r30,r24
 1967 0b58 8185      		ldd r24,Z+9
 1968 0b5a 8071      		andi r24,lo8(16)
 1969 0b5c 8823      		tst r24
 1970 0b5e 01F0      		breq .L98
 1971               		.loc 2 552 0 is_stmt 0 discriminator 1
 1972 0b60 80E8      		ldi r24,lo8(-128)
 1973 0b62 90E0      		ldi r25,0
 1974 0b64 00C0      		rjmp .L99
 1975               	.L98:
 1976               		.loc 2 552 0 discriminator 2
 1977 0b66 80E0      		ldi r24,0
 1978 0b68 90E0      		ldi r25,0
 1979               	.L99:
 1980               		.loc 2 552 0 discriminator 4
 1981 0b6a 822B      		or r24,r18
 1982 0b6c 932B      		or r25,r19
 1983 0b6e 9A87      		std Y+10,r25
 1984 0b70 8987      		std Y+9,r24
 553:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_ADDR == header->nwkDstAddr) ? NWK_IND_OPT_BROADCAST : 0;
 1985               		.loc 2 553 0 is_stmt 1 discriminator 4
 1986 0b72 2985      		ldd r18,Y+9
 1987 0b74 3A85      		ldd r19,Y+10
 1988 0b76 8981      		ldd r24,Y+1
 1989 0b78 9A81      		ldd r25,Y+2
 1990 0b7a FC01      		movw r30,r24
 1991 0b7c 8585      		ldd r24,Z+13
 1992 0b7e 9685      		ldd r25,Z+14
 1993 0b80 0196      		adiw r24,1
 1994 0b82 01F4      		brne .L100
 1995               		.loc 2 553 0 is_stmt 0 discriminator 1
 1996 0b84 84E0      		ldi r24,lo8(4)
 1997 0b86 90E0      		ldi r25,0
 1998 0b88 00C0      		rjmp .L101
 1999               	.L100:
 2000               		.loc 2 553 0 discriminator 2
 2001 0b8a 80E0      		ldi r24,0
 2002 0b8c 90E0      		ldi r25,0
 2003               	.L101:
 2004               		.loc 2 553 0 discriminator 4
 2005 0b8e 822B      		or r24,r18
 2006 0b90 932B      		or r25,r19
 2007 0b92 9A87      		std Y+10,r25
 2008 0b94 8987      		std Y+9,r24
 554:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (header->nwkSrcAddr == header->macSrcAddr) ? NWK_IND_OPT_LOCAL : 0;
 2009               		.loc 2 554 0 is_stmt 1 discriminator 4
 2010 0b96 2985      		ldd r18,Y+9
 2011 0b98 3A85      		ldd r19,Y+10
 2012 0b9a 8981      		ldd r24,Y+1
 2013 0b9c 9A81      		ldd r25,Y+2
 2014 0b9e FC01      		movw r30,r24
 2015 0ba0 4385      		ldd r20,Z+11
 2016 0ba2 5485      		ldd r21,Z+12
 2017 0ba4 8981      		ldd r24,Y+1
 2018 0ba6 9A81      		ldd r25,Y+2
 2019 0ba8 FC01      		movw r30,r24
 2020 0baa 8781      		ldd r24,Z+7
 2021 0bac 9085      		ldd r25,Z+8
 2022 0bae 4817      		cp r20,r24
 2023 0bb0 5907      		cpc r21,r25
 2024 0bb2 01F4      		brne .L102
 2025               		.loc 2 554 0 is_stmt 0 discriminator 1
 2026 0bb4 88E0      		ldi r24,lo8(8)
 2027 0bb6 90E0      		ldi r25,0
 2028 0bb8 00C0      		rjmp .L103
 2029               	.L102:
 2030               		.loc 2 554 0 discriminator 2
 2031 0bba 80E0      		ldi r24,0
 2032 0bbc 90E0      		ldi r25,0
 2033               	.L103:
 2034               		.loc 2 554 0 discriminator 4
 2035 0bbe 822B      		or r24,r18
 2036 0bc0 932B      		or r25,r19
 2037 0bc2 9A87      		std Y+10,r25
 2038 0bc4 8987      		std Y+9,r24
 555:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_PANID == header->macDstPanId) ? NWK_IND_OPT_BROADCAST_PAN_ID : 0;
 2039               		.loc 2 555 0 is_stmt 1 discriminator 4
 2040 0bc6 2985      		ldd r18,Y+9
 2041 0bc8 3A85      		ldd r19,Y+10
 2042 0bca 8981      		ldd r24,Y+1
 2043 0bcc 9A81      		ldd r25,Y+2
 2044 0bce FC01      		movw r30,r24
 2045 0bd0 8381      		ldd r24,Z+3
 2046 0bd2 9481      		ldd r25,Z+4
 2047 0bd4 0196      		adiw r24,1
 2048 0bd6 01F4      		brne .L104
 2049               		.loc 2 555 0 is_stmt 0 discriminator 1
 2050 0bd8 80E1      		ldi r24,lo8(16)
 2051 0bda 90E0      		ldi r25,0
 2052 0bdc 00C0      		rjmp .L105
 2053               	.L104:
 2054               		.loc 2 555 0 discriminator 2
 2055 0bde 80E0      		ldi r24,0
 2056 0be0 90E0      		ldi r25,0
 2057               	.L105:
 2058               		.loc 2 555 0 discriminator 4
 2059 0be2 822B      		or r24,r18
 2060 0be4 932B      		or r25,r19
 2061 0be6 9A87      		std Y+10,r25
 2062 0be8 8987      		std Y+9,r24
 556:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 557:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2063               		.loc 2 557 0 is_stmt 1 discriminator 4
 2064 0bea 8981      		ldd r24,Y+1
 2065 0bec 9A81      		ldd r25,Y+2
 2066 0bee FC01      		movw r30,r24
 2067 0bf0 8785      		ldd r24,Z+15
 2068 0bf2 8295      		swap r24
 2069 0bf4 8F70      		andi r24,lo8(15)
 2070 0bf6 882F      		mov r24,r24
 2071 0bf8 90E0      		ldi r25,0
 2072 0bfa 0396      		adiw r24,3
 2073 0bfc 880F      		lsl r24
 2074 0bfe 991F      		rol r25
 2075 0c00 8050      		subi r24,lo8(-(nwkIb))
 2076 0c02 9040      		sbci r25,hi8(-(nwkIb))
 2077 0c04 FC01      		movw r30,r24
 2078 0c06 2081      		ld r18,Z
 2079 0c08 3181      		ldd r19,Z+1
 2080 0c0a CE01      		movw r24,r28
 2081 0c0c 0396      		adiw r24,3
 2082 0c0e F901      		movw r30,r18
 2083 0c10 0995      		icall
 2084               	.L106:
 2085               	/* epilogue start */
 558:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2086               		.loc 2 558 0 discriminator 1
 2087 0c12 6196      		adiw r28,17
 2088 0c14 0FB6      		in __tmp_reg__,__SREG__
 2089 0c16 F894      		cli
 2090 0c18 DEBF      		out __SP_H__,r29
 2091 0c1a 0FBE      		out __SREG__,__tmp_reg__
 2092 0c1c CDBF      		out __SP_L__,r28
 2093 0c1e DF91      		pop r29
 2094 0c20 CF91      		pop r28
 2095 0c22 0895      		ret
 2096               		.cfi_endproc
 2097               	.LFE74:
 2100               	nwkRxIndicateBeaconFrame:
 2101               	.LFB75:
 559:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 560:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 561:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 562:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateBeaconFrame(NwkFrame_t *frame)
 563:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2102               		.loc 2 563 0
 2103               		.cfi_startproc
 2104 0c24 CF93      		push r28
 2105               	.LCFI40:
 2106               		.cfi_def_cfa_offset 3
 2107               		.cfi_offset 28, -2
 2108 0c26 DF93      		push r29
 2109               	.LCFI41:
 2110               		.cfi_def_cfa_offset 4
 2111               		.cfi_offset 29, -3
 2112 0c28 CDB7      		in r28,__SP_L__
 2113 0c2a DEB7      		in r29,__SP_H__
 2114               	.LCFI42:
 2115               		.cfi_def_cfa_register 28
 2116 0c2c 6197      		sbiw r28,17
 2117               	.LCFI43:
 2118               		.cfi_def_cfa_offset 21
 2119 0c2e 0FB6      		in __tmp_reg__,__SREG__
 2120 0c30 F894      		cli
 2121 0c32 DEBF      		out __SP_H__,r29
 2122 0c34 0FBE      		out __SREG__,__tmp_reg__
 2123 0c36 CDBF      		out __SP_L__,r28
 2124               	/* prologue: function */
 2125               	/* frame size = 17 */
 2126               	/* stack size = 19 */
 2127               	.L__stack_usage = 19
 2128 0c38 998B      		std Y+17,r25
 2129 0c3a 888B      		std Y+16,r24
 564:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 2130               		.loc 2 564 0
 2131 0c3c 8889      		ldd r24,Y+16
 2132 0c3e 9989      		ldd r25,Y+17
 2133 0c40 0296      		adiw r24,2
 2134 0c42 9A83      		std Y+2,r25
 2135 0c44 8983      		std Y+1,r24
 565:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 566:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 567:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2136               		.loc 2 567 0
 2137 0c46 8889      		ldd r24,Y+16
 2138 0c48 9989      		ldd r25,Y+17
 2139 0c4a 24E2      		ldi r18,lo8(36)
 2140 0c4c FC01      		movw r30,r24
 2141 0c4e 2083      		st Z,r18
 568:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 569:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[0]) {
 2142               		.loc 2 569 0
 2143 0c50 8091 0000 		lds r24,nwkIb+6
 2144 0c54 9091 0000 		lds r25,nwkIb+6+1
 2145 0c58 892B      		or r24,r25
 2146 0c5a 01F4      		brne .L108
 570:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2147               		.loc 2 570 0
 2148 0c5c 80E0      		ldi r24,0
 2149 0c5e 00C0      		rjmp .L110
 2150               	.L108:
 571:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 572:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 573:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = frame->beacon.macSrcAddr;
 2151               		.loc 2 573 0
 2152 0c60 8889      		ldd r24,Y+16
 2153 0c62 9989      		ldd r25,Y+17
 2154 0c64 FC01      		movw r30,r24
 2155 0c66 8781      		ldd r24,Z+7
 2156 0c68 9085      		ldd r25,Z+8
 2157 0c6a 9C83      		std Y+4,r25
 2158 0c6c 8B83      		std Y+3,r24
 574:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = frame->beacon.macSrcAddr;
 2159               		.loc 2 574 0
 2160 0c6e 8889      		ldd r24,Y+16
 2161 0c70 9989      		ldd r25,Y+17
 2162 0c72 FC01      		movw r30,r24
 2163 0c74 8781      		ldd r24,Z+7
 2164 0c76 9085      		ldd r25,Z+8
 2165 0c78 9E83      		std Y+6,r25
 2166 0c7a 8D83      		std Y+5,r24
 575:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2167               		.loc 2 575 0
 2168 0c7c 1F82      		std Y+7,__zero_reg__
 576:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2169               		.loc 2 576 0
 2170 0c7e 1886      		std Y+8,__zero_reg__
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2171               		.loc 2 577 0
 2172 0c80 8889      		ldd r24,Y+16
 2173 0c82 9989      		ldd r25,Y+17
 2174 0c84 8F57      		subi r24,127
 2175 0c86 9F4F      		sbci r25,-1
 2176 0c88 FC01      		movw r30,r24
 2177 0c8a 8081      		ld r24,Z
 2178 0c8c 9181      		ldd r25,Z+1
 2179 0c8e 9C87      		std Y+12,r25
 2180 0c90 8B87      		std Y+11,r24
 578:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2181               		.loc 2 578 0
 2182 0c92 8889      		ldd r24,Y+16
 2183 0c94 9989      		ldd r25,Y+17
 2184 0c96 0E94 0000 		call nwkFramePayloadSize
 2185 0c9a 8D87      		std Y+13,r24
 579:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2186               		.loc 2 579 0
 2187 0c9c 8889      		ldd r24,Y+16
 2188 0c9e 9989      		ldd r25,Y+17
 2189 0ca0 8D57      		subi r24,125
 2190 0ca2 9F4F      		sbci r25,-1
 2191 0ca4 FC01      		movw r30,r24
 2192 0ca6 8081      		ld r24,Z
 2193 0ca8 8E87      		std Y+14,r24
 580:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2194               		.loc 2 580 0
 2195 0caa 8889      		ldd r24,Y+16
 2196 0cac 9989      		ldd r25,Y+17
 2197 0cae 8C57      		subi r24,124
 2198 0cb0 9F4F      		sbci r25,-1
 2199 0cb2 FC01      		movw r30,r24
 2200 0cb4 8081      		ld r24,Z
 2201 0cb6 8F87      		std Y+15,r24
 581:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 582:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_BEACON;
 2202               		.loc 2 582 0
 2203 0cb8 80E8      		ldi r24,lo8(-128)
 2204 0cba 90E0      		ldi r25,0
 2205 0cbc 9A87      		std Y+10,r25
 2206 0cbe 8987      		std Y+9,r24
 583:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 584:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2207               		.loc 2 584 0
 2208 0cc0 8981      		ldd r24,Y+1
 2209 0cc2 9A81      		ldd r25,Y+2
 2210 0cc4 FC01      		movw r30,r24
 2211 0cc6 8785      		ldd r24,Z+15
 2212 0cc8 8295      		swap r24
 2213 0cca 8F70      		andi r24,lo8(15)
 2214 0ccc 882F      		mov r24,r24
 2215 0cce 90E0      		ldi r25,0
 2216 0cd0 0396      		adiw r24,3
 2217 0cd2 880F      		lsl r24
 2218 0cd4 991F      		rol r25
 2219 0cd6 8050      		subi r24,lo8(-(nwkIb))
 2220 0cd8 9040      		sbci r25,hi8(-(nwkIb))
 2221 0cda FC01      		movw r30,r24
 2222 0cdc 2081      		ld r18,Z
 2223 0cde 3181      		ldd r19,Z+1
 2224 0ce0 CE01      		movw r24,r28
 2225 0ce2 0396      		adiw r24,3
 2226 0ce4 F901      		movw r30,r18
 2227 0ce6 0995      		icall
 2228               	.L110:
 2229               	/* epilogue start */
 585:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2230               		.loc 2 585 0 discriminator 1
 2231 0ce8 6196      		adiw r28,17
 2232 0cea 0FB6      		in __tmp_reg__,__SREG__
 2233 0cec F894      		cli
 2234 0cee DEBF      		out __SP_H__,r29
 2235 0cf0 0FBE      		out __SREG__,__tmp_reg__
 2236 0cf2 CDBF      		out __SP_L__,r28
 2237 0cf4 DF91      		pop r29
 2238 0cf6 CF91      		pop r28
 2239 0cf8 0895      		ret
 2240               		.cfi_endproc
 2241               	.LFE75:
 2244               	nwkRxIndicateLLBeaconFrame:
 2245               	.LFB76:
 586:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 587:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 588:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 589:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 590:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLBeaconFrame(NwkFrame_t *frame)
 591:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2246               		.loc 2 591 0
 2247               		.cfi_startproc
 2248 0cfa CF93      		push r28
 2249               	.LCFI44:
 2250               		.cfi_def_cfa_offset 3
 2251               		.cfi_offset 28, -2
 2252 0cfc DF93      		push r29
 2253               	.LCFI45:
 2254               		.cfi_def_cfa_offset 4
 2255               		.cfi_offset 29, -3
 2256 0cfe CDB7      		in r28,__SP_L__
 2257 0d00 DEB7      		in r29,__SP_H__
 2258               	.LCFI46:
 2259               		.cfi_def_cfa_register 28
 2260 0d02 2F97      		sbiw r28,15
 2261               	.LCFI47:
 2262               		.cfi_def_cfa_offset 19
 2263 0d04 0FB6      		in __tmp_reg__,__SREG__
 2264 0d06 F894      		cli
 2265 0d08 DEBF      		out __SP_H__,r29
 2266 0d0a 0FBE      		out __SREG__,__tmp_reg__
 2267 0d0c CDBF      		out __SP_L__,r28
 2268               	/* prologue: function */
 2269               	/* frame size = 15 */
 2270               	/* stack size = 17 */
 2271               	.L__stack_usage = 17
 2272 0d0e 9F87      		std Y+15,r25
 2273 0d10 8E87      		std Y+14,r24
 592:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 593:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 594:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2274               		.loc 2 594 0
 2275 0d12 8E85      		ldd r24,Y+14
 2276 0d14 9F85      		ldd r25,Y+15
 2277 0d16 24E2      		ldi r18,lo8(36)
 2278 0d18 FC01      		movw r30,r24
 2279 0d1a 2083      		st Z,r18
 595:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 596:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_BEACON_ENDPOINT]) {
 2280               		.loc 2 596 0
 2281 0d1c 8091 0000 		lds r24,nwkIb+6
 2282 0d20 9091 0000 		lds r25,nwkIb+6+1
 2283 0d24 892B      		or r24,r25
 2284 0d26 01F4      		brne .L112
 597:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2285               		.loc 2 597 0
 2286 0d28 80E0      		ldi r24,0
 2287 0d2a 00C0      		rjmp .L114
 2288               	.L112:
 598:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 599:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Beacon as they are in standart 802.15.4
 600:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 601:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 602:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2289               		.loc 2 602 0
 2290 0d2c 1A82      		std Y+2,__zero_reg__
 2291 0d2e 1982      		std Y+1,__zero_reg__
 603:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2292               		.loc 2 603 0
 2293 0d30 1C82      		std Y+4,__zero_reg__
 2294 0d32 1B82      		std Y+3,__zero_reg__
 604:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2295               		.loc 2 604 0
 2296 0d34 1D82      		std Y+5,__zero_reg__
 605:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2297               		.loc 2 605 0
 2298 0d36 1E82      		std Y+6,__zero_reg__
 606:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 607:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->LLbeacon;
 2299               		.loc 2 607 0
 2300 0d38 8E85      		ldd r24,Y+14
 2301 0d3a 9F85      		ldd r25,Y+15
 2302 0d3c 0296      		adiw r24,2
 2303 0d3e 9A87      		std Y+10,r25
 2304 0d40 8987      		std Y+9,r24
 608:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2305               		.loc 2 608 0
 2306 0d42 8E85      		ldd r24,Y+14
 2307 0d44 9F85      		ldd r25,Y+15
 2308 0d46 0E94 0000 		call nwkFramePayloadSize
 2309 0d4a 8B87      		std Y+11,r24
 609:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2310               		.loc 2 609 0
 2311 0d4c 8E85      		ldd r24,Y+14
 2312 0d4e 9F85      		ldd r25,Y+15
 2313 0d50 8D57      		subi r24,125
 2314 0d52 9F4F      		sbci r25,-1
 2315 0d54 FC01      		movw r30,r24
 2316 0d56 8081      		ld r24,Z
 2317 0d58 8C87      		std Y+12,r24
 610:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2318               		.loc 2 610 0
 2319 0d5a 8E85      		ldd r24,Y+14
 2320 0d5c 9F85      		ldd r25,Y+15
 2321 0d5e 8C57      		subi r24,124
 2322 0d60 9F4F      		sbci r25,-1
 2323 0d62 FC01      		movw r30,r24
 2324 0d64 8081      		ld r24,Z
 2325 0d66 8D87      		std Y+13,r24
 611:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 612:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_BEACON;
 2326               		.loc 2 612 0
 2327 0d68 80E0      		ldi r24,0
 2328 0d6a 91E0      		ldi r25,lo8(1)
 2329 0d6c 9887      		std Y+8,r25
 2330 0d6e 8F83      		std Y+7,r24
 613:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 614:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 615:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_BEACON_ENDPOINT](&ind);
 2331               		.loc 2 615 0
 2332 0d70 2091 0000 		lds r18,nwkIb+6
 2333 0d74 3091 0000 		lds r19,nwkIb+6+1
 2334 0d78 CE01      		movw r24,r28
 2335 0d7a 0196      		adiw r24,1
 2336 0d7c F901      		movw r30,r18
 2337 0d7e 0995      		icall
 2338               	.L114:
 2339               	/* epilogue start */
 616:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2340               		.loc 2 616 0 discriminator 1
 2341 0d80 2F96      		adiw r28,15
 2342 0d82 0FB6      		in __tmp_reg__,__SREG__
 2343 0d84 F894      		cli
 2344 0d86 DEBF      		out __SP_H__,r29
 2345 0d88 0FBE      		out __SREG__,__tmp_reg__
 2346 0d8a CDBF      		out __SP_L__,r28
 2347 0d8c DF91      		pop r29
 2348 0d8e CF91      		pop r28
 2349 0d90 0895      		ret
 2350               		.cfi_endproc
 2351               	.LFE76:
 2354               	nwkRxIndicateLLCommandFrame:
 2355               	.LFB77:
 617:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 618:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLCommandFrame(NwkFrame_t *frame)
 619:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2356               		.loc 2 619 0
 2357               		.cfi_startproc
 2358 0d92 CF93      		push r28
 2359               	.LCFI48:
 2360               		.cfi_def_cfa_offset 3
 2361               		.cfi_offset 28, -2
 2362 0d94 DF93      		push r29
 2363               	.LCFI49:
 2364               		.cfi_def_cfa_offset 4
 2365               		.cfi_offset 29, -3
 2366 0d96 CDB7      		in r28,__SP_L__
 2367 0d98 DEB7      		in r29,__SP_H__
 2368               	.LCFI50:
 2369               		.cfi_def_cfa_register 28
 2370 0d9a 6197      		sbiw r28,17
 2371               	.LCFI51:
 2372               		.cfi_def_cfa_offset 21
 2373 0d9c 0FB6      		in __tmp_reg__,__SREG__
 2374 0d9e F894      		cli
 2375 0da0 DEBF      		out __SP_H__,r29
 2376 0da2 0FBE      		out __SREG__,__tmp_reg__
 2377 0da4 CDBF      		out __SP_L__,r28
 2378               	/* prologue: function */
 2379               	/* frame size = 17 */
 2380               	/* stack size = 19 */
 2381               	.L__stack_usage = 19
 2382 0da6 998B      		std Y+17,r25
 2383 0da8 888B      		std Y+16,r24
 620:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 621:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 622:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2384               		.loc 2 622 0
 2385 0daa 8889      		ldd r24,Y+16
 2386 0dac 9989      		ldd r25,Y+17
 2387 0dae 0296      		adiw r24,2
 2388 0db0 9A83      		std Y+2,r25
 2389 0db2 8983      		std Y+1,r24
 623:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 624:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 625:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2390               		.loc 2 625 0
 2391 0db4 8889      		ldd r24,Y+16
 2392 0db6 9989      		ldd r25,Y+17
 2393 0db8 24E2      		ldi r18,lo8(36)
 2394 0dba FC01      		movw r30,r24
 2395 0dbc 2083      		st Z,r18
 626:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 627:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_COMMAND_ENDPOINT]) {
 2396               		.loc 2 627 0
 2397 0dbe 8091 0000 		lds r24,nwkIb+12
 2398 0dc2 9091 0000 		lds r25,nwkIb+12+1
 2399 0dc6 892B      		or r24,r25
 2400 0dc8 01F4      		brne .L116
 628:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2401               		.loc 2 628 0
 2402 0dca 80E0      		ldi r24,0
 2403 0dcc 00C0      		rjmp .L118
 2404               	.L116:
 629:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 630:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 631:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 632:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 633:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 634:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2405               		.loc 2 634 0
 2406 0dce 1C82      		std Y+4,__zero_reg__
 2407 0dd0 1B82      		std Y+3,__zero_reg__
 635:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2408               		.loc 2 635 0
 2409 0dd2 1E82      		std Y+6,__zero_reg__
 2410 0dd4 1D82      		std Y+5,__zero_reg__
 636:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2411               		.loc 2 636 0
 2412 0dd6 1F82      		std Y+7,__zero_reg__
 637:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2413               		.loc 2 637 0
 2414 0dd8 1886      		std Y+8,__zero_reg__
 638:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 639:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2415               		.loc 2 640 0
 2416 0dda 8889      		ldd r24,Y+16
 2417 0ddc 9989      		ldd r25,Y+17
 2418 0dde 8F57      		subi r24,127
 2419 0de0 9F4F      		sbci r25,-1
 2420 0de2 FC01      		movw r30,r24
 2421 0de4 8081      		ld r24,Z
 2422 0de6 9181      		ldd r25,Z+1
 2423 0de8 9C87      		std Y+12,r25
 2424 0dea 8B87      		std Y+11,r24
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 642:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2425               		.loc 2 642 0
 2426 0dec 8889      		ldd r24,Y+16
 2427 0dee 9989      		ldd r25,Y+17
 2428 0df0 0E94 0000 		call nwkFramePayloadSize
 2429 0df4 8D87      		std Y+13,r24
 643:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2430               		.loc 2 643 0
 2431 0df6 8889      		ldd r24,Y+16
 2432 0df8 9989      		ldd r25,Y+17
 2433 0dfa 8D57      		subi r24,125
 2434 0dfc 9F4F      		sbci r25,-1
 2435 0dfe FC01      		movw r30,r24
 2436 0e00 8081      		ld r24,Z
 2437 0e02 8E87      		std Y+14,r24
 644:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2438               		.loc 2 644 0
 2439 0e04 8889      		ldd r24,Y+16
 2440 0e06 9989      		ldd r25,Y+17
 2441 0e08 8C57      		subi r24,124
 2442 0e0a 9F4F      		sbci r25,-1
 2443 0e0c FC01      		movw r30,r24
 2444 0e0e 8081      		ld r24,Z
 2445 0e10 8F87      		std Y+15,r24
 645:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 646:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_MACCOMMAND;
 2446               		.loc 2 646 0
 2447 0e12 80E0      		ldi r24,0
 2448 0e14 92E0      		ldi r25,lo8(2)
 2449 0e16 9A87      		std Y+10,r25
 2450 0e18 8987      		std Y+9,r24
 647:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 648:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_COMMAND_ENDPOINT](&ind);
 2451               		.loc 2 648 0
 2452 0e1a 2091 0000 		lds r18,nwkIb+12
 2453 0e1e 3091 0000 		lds r19,nwkIb+12+1
 2454 0e22 CE01      		movw r24,r28
 2455 0e24 0396      		adiw r24,3
 2456 0e26 F901      		movw r30,r18
 2457 0e28 0995      		icall
 2458               	.L118:
 2459               	/* epilogue start */
 649:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2460               		.loc 2 649 0 discriminator 1
 2461 0e2a 6196      		adiw r28,17
 2462 0e2c 0FB6      		in __tmp_reg__,__SREG__
 2463 0e2e F894      		cli
 2464 0e30 DEBF      		out __SP_H__,r29
 2465 0e32 0FBE      		out __SREG__,__tmp_reg__
 2466 0e34 CDBF      		out __SP_L__,r28
 2467 0e36 DF91      		pop r29
 2468 0e38 CF91      		pop r28
 2469 0e3a 0895      		ret
 2470               		.cfi_endproc
 2471               	.LFE77:
 2474               	nwkRxIndicateLLDataFrame:
 2475               	.LFB78:
 650:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 651:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLDataFrame(NwkFrame_t *frame)
 652:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {		
 2476               		.loc 2 652 0
 2477               		.cfi_startproc
 2478 0e3c CF93      		push r28
 2479               	.LCFI52:
 2480               		.cfi_def_cfa_offset 3
 2481               		.cfi_offset 28, -2
 2482 0e3e DF93      		push r29
 2483               	.LCFI53:
 2484               		.cfi_def_cfa_offset 4
 2485               		.cfi_offset 29, -3
 2486 0e40 CDB7      		in r28,__SP_L__
 2487 0e42 DEB7      		in r29,__SP_H__
 2488               	.LCFI54:
 2489               		.cfi_def_cfa_register 28
 2490 0e44 6197      		sbiw r28,17
 2491               	.LCFI55:
 2492               		.cfi_def_cfa_offset 21
 2493 0e46 0FB6      		in __tmp_reg__,__SREG__
 2494 0e48 F894      		cli
 2495 0e4a DEBF      		out __SP_H__,r29
 2496 0e4c 0FBE      		out __SREG__,__tmp_reg__
 2497 0e4e CDBF      		out __SP_L__,r28
 2498               	/* prologue: function */
 2499               	/* frame size = 17 */
 2500               	/* stack size = 19 */
 2501               	.L__stack_usage = 19
 2502 0e50 998B      		std Y+17,r25
 2503 0e52 888B      		std Y+16,r24
 653:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2504               		.loc 2 653 0
 2505 0e54 8889      		ldd r24,Y+16
 2506 0e56 9989      		ldd r25,Y+17
 2507 0e58 0296      		adiw r24,2
 2508 0e5a 9A83      		std Y+2,r25
 2509 0e5c 8983      		std Y+1,r24
 654:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 655:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 656:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2510               		.loc 2 656 0
 2511 0e5e 8889      		ldd r24,Y+16
 2512 0e60 9989      		ldd r25,Y+17
 2513 0e62 24E2      		ldi r18,lo8(36)
 2514 0e64 FC01      		movw r30,r24
 2515 0e66 2083      		st Z,r18
 657:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 658:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_DATA_ENDPOINT]) {
 2516               		.loc 2 658 0
 2517 0e68 8091 0000 		lds r24,nwkIb+8
 2518 0e6c 9091 0000 		lds r25,nwkIb+8+1
 2519 0e70 892B      		or r24,r25
 2520 0e72 01F4      		brne .L120
 659:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2521               		.loc 2 659 0
 2522 0e74 80E0      		ldi r24,0
 2523 0e76 00C0      		rjmp .L122
 2524               	.L120:
 660:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 661:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 662:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 663:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 664:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 665:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2525               		.loc 2 665 0
 2526 0e78 1C82      		std Y+4,__zero_reg__
 2527 0e7a 1B82      		std Y+3,__zero_reg__
 666:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2528               		.loc 2 666 0
 2529 0e7c 1E82      		std Y+6,__zero_reg__
 2530 0e7e 1D82      		std Y+5,__zero_reg__
 667:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2531               		.loc 2 667 0
 2532 0e80 1F82      		std Y+7,__zero_reg__
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2533               		.loc 2 668 0
 2534 0e82 1886      		std Y+8,__zero_reg__
 669:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 670:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 671:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2535               		.loc 2 671 0
 2536 0e84 8889      		ldd r24,Y+16
 2537 0e86 9989      		ldd r25,Y+17
 2538 0e88 8F57      		subi r24,127
 2539 0e8a 9F4F      		sbci r25,-1
 2540 0e8c FC01      		movw r30,r24
 2541 0e8e 8081      		ld r24,Z
 2542 0e90 9181      		ldd r25,Z+1
 2543 0e92 9C87      		std Y+12,r25
 2544 0e94 8B87      		std Y+11,r24
 672:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 673:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2545               		.loc 2 673 0
 2546 0e96 8889      		ldd r24,Y+16
 2547 0e98 9989      		ldd r25,Y+17
 2548 0e9a 0E94 0000 		call nwkFramePayloadSize
 2549 0e9e 8D87      		std Y+13,r24
 674:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2550               		.loc 2 674 0
 2551 0ea0 8889      		ldd r24,Y+16
 2552 0ea2 9989      		ldd r25,Y+17
 2553 0ea4 8D57      		subi r24,125
 2554 0ea6 9F4F      		sbci r25,-1
 2555 0ea8 FC01      		movw r30,r24
 2556 0eaa 8081      		ld r24,Z
 2557 0eac 8E87      		std Y+14,r24
 675:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2558               		.loc 2 675 0
 2559 0eae 8889      		ldd r24,Y+16
 2560 0eb0 9989      		ldd r25,Y+17
 2561 0eb2 8C57      		subi r24,124
 2562 0eb4 9F4F      		sbci r25,-1
 2563 0eb6 FC01      		movw r30,r24
 2564 0eb8 8081      		ld r24,Z
 2565 0eba 8F87      		std Y+15,r24
 676:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 677:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_DATA;
 2566               		.loc 2 677 0
 2567 0ebc 80E0      		ldi r24,0
 2568 0ebe 94E0      		ldi r25,lo8(4)
 2569 0ec0 9A87      		std Y+10,r25
 2570 0ec2 8987      		std Y+9,r24
 678:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 679:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_DATA_ENDPOINT](&ind);
 2571               		.loc 2 679 0
 2572 0ec4 2091 0000 		lds r18,nwkIb+8
 2573 0ec8 3091 0000 		lds r19,nwkIb+8+1
 2574 0ecc CE01      		movw r24,r28
 2575 0ece 0396      		adiw r24,3
 2576 0ed0 F901      		movw r30,r18
 2577 0ed2 0995      		icall
 2578               	.L122:
 2579               	/* epilogue start */
 680:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2580               		.loc 2 680 0 discriminator 1
 2581 0ed4 6196      		adiw r28,17
 2582 0ed6 0FB6      		in __tmp_reg__,__SREG__
 2583 0ed8 F894      		cli
 2584 0eda DEBF      		out __SP_H__,r29
 2585 0edc 0FBE      		out __SREG__,__tmp_reg__
 2586 0ede CDBF      		out __SP_L__,r28
 2587 0ee0 DF91      		pop r29
 2588 0ee2 CF91      		pop r28
 2589 0ee4 0895      		ret
 2590               		.cfi_endproc
 2591               	.LFE78:
 2594               	nwkRxIndicateLLACKFrame:
 2595               	.LFB79:
 681:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 682:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLACKFrame(NwkFrame_t *frame)
 683:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2596               		.loc 2 683 0
 2597               		.cfi_startproc
 2598 0ee6 CF93      		push r28
 2599               	.LCFI56:
 2600               		.cfi_def_cfa_offset 3
 2601               		.cfi_offset 28, -2
 2602 0ee8 DF93      		push r29
 2603               	.LCFI57:
 2604               		.cfi_def_cfa_offset 4
 2605               		.cfi_offset 29, -3
 2606 0eea CDB7      		in r28,__SP_L__
 2607 0eec DEB7      		in r29,__SP_H__
 2608               	.LCFI58:
 2609               		.cfi_def_cfa_register 28
 2610 0eee 6197      		sbiw r28,17
 2611               	.LCFI59:
 2612               		.cfi_def_cfa_offset 21
 2613 0ef0 0FB6      		in __tmp_reg__,__SREG__
 2614 0ef2 F894      		cli
 2615 0ef4 DEBF      		out __SP_H__,r29
 2616 0ef6 0FBE      		out __SREG__,__tmp_reg__
 2617 0ef8 CDBF      		out __SP_L__,r28
 2618               	/* prologue: function */
 2619               	/* frame size = 17 */
 2620               	/* stack size = 19 */
 2621               	.L__stack_usage = 19
 2622 0efa 998B      		std Y+17,r25
 2623 0efc 888B      		std Y+16,r24
 684:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 685:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2624               		.loc 2 685 0
 2625 0efe 8889      		ldd r24,Y+16
 2626 0f00 9989      		ldd r25,Y+17
 2627 0f02 0296      		adiw r24,2
 2628 0f04 9A83      		std Y+2,r25
 2629 0f06 8983      		std Y+1,r24
 686:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 687:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 688:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2630               		.loc 2 688 0
 2631 0f08 8889      		ldd r24,Y+16
 2632 0f0a 9989      		ldd r25,Y+17
 2633 0f0c 24E2      		ldi r18,lo8(36)
 2634 0f0e FC01      		movw r30,r24
 2635 0f10 2083      		st Z,r18
 689:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 690:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_ACK_ENDPOINT]) {
 2636               		.loc 2 690 0
 2637 0f12 8091 0000 		lds r24,nwkIb+14
 2638 0f16 9091 0000 		lds r25,nwkIb+14+1
 2639 0f1a 892B      		or r24,r25
 2640 0f1c 01F4      		brne .L124
 691:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2641               		.loc 2 691 0
 2642 0f1e 80E0      		ldi r24,0
 2643 0f20 00C0      		rjmp .L126
 2644               	.L124:
 692:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 693:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 694:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* 
 695:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * this informations are not received in a LLDN Command as they are in standart 802.15.4
 696:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 697:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 698:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2645               		.loc 2 698 0
 2646 0f22 1C82      		std Y+4,__zero_reg__
 2647 0f24 1B82      		std Y+3,__zero_reg__
 699:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2648               		.loc 2 699 0
 2649 0f26 1E82      		std Y+6,__zero_reg__
 2650 0f28 1D82      		std Y+5,__zero_reg__
 700:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2651               		.loc 2 700 0
 2652 0f2a 1F82      		std Y+7,__zero_reg__
 701:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2653               		.loc 2 701 0
 2654 0f2c 1886      		std Y+8,__zero_reg__
 702:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 703:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data =  frame->payload;
 2655               		.loc 2 703 0
 2656 0f2e 8889      		ldd r24,Y+16
 2657 0f30 9989      		ldd r25,Y+17
 2658 0f32 8F57      		subi r24,127
 2659 0f34 9F4F      		sbci r25,-1
 2660 0f36 FC01      		movw r30,r24
 2661 0f38 8081      		ld r24,Z
 2662 0f3a 9181      		ldd r25,Z+1
 2663 0f3c 9C87      		std Y+12,r25
 2664 0f3e 8B87      		std Y+11,r24
 704:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2665               		.loc 2 704 0
 2666 0f40 8889      		ldd r24,Y+16
 2667 0f42 9989      		ldd r25,Y+17
 2668 0f44 0E94 0000 		call nwkFramePayloadSize
 2669 0f48 8D87      		std Y+13,r24
 705:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2670               		.loc 2 705 0
 2671 0f4a 8889      		ldd r24,Y+16
 2672 0f4c 9989      		ldd r25,Y+17
 2673 0f4e 8D57      		subi r24,125
 2674 0f50 9F4F      		sbci r25,-1
 2675 0f52 FC01      		movw r30,r24
 2676 0f54 8081      		ld r24,Z
 2677 0f56 8E87      		std Y+14,r24
 706:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2678               		.loc 2 706 0
 2679 0f58 8889      		ldd r24,Y+16
 2680 0f5a 9989      		ldd r25,Y+17
 2681 0f5c 8C57      		subi r24,124
 2682 0f5e 9F4F      		sbci r25,-1
 2683 0f60 FC01      		movw r30,r24
 2684 0f62 8081      		ld r24,Z
 2685 0f64 8F87      		std Y+15,r24
 707:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 708:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_OPT_LLDN_ACK;
 2686               		.loc 2 708 0
 2687 0f66 80E0      		ldi r24,0
 2688 0f68 90E4      		ldi r25,lo8(64)
 2689 0f6a 9A87      		std Y+10,r25
 2690 0f6c 8987      		std Y+9,r24
 709:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 710:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_ACK_ENDPOINT](&ind);
 2691               		.loc 2 710 0
 2692 0f6e 2091 0000 		lds r18,nwkIb+14
 2693 0f72 3091 0000 		lds r19,nwkIb+14+1
 2694 0f76 CE01      		movw r24,r28
 2695 0f78 0396      		adiw r24,3
 2696 0f7a F901      		movw r30,r18
 2697 0f7c 0995      		icall
 2698               	.L126:
 2699               	/* epilogue start */
 711:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2700               		.loc 2 711 0 discriminator 1
 2701 0f7e 6196      		adiw r28,17
 2702 0f80 0FB6      		in __tmp_reg__,__SREG__
 2703 0f82 F894      		cli
 2704 0f84 DEBF      		out __SP_H__,r29
 2705 0f86 0FBE      		out __SREG__,__tmp_reg__
 2706 0f88 CDBF      		out __SP_L__,r28
 2707 0f8a DF91      		pop r29
 2708 0f8c CF91      		pop r28
 2709 0f8e 0895      		ret
 2710               		.cfi_endproc
 2711               	.LFE79:
 2714               	nwkRxHandleIndication:
 2715               	.LFB80:
 712:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 713:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 714:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 715:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleIndication(NwkFrame_t *frame)
 716:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2716               		.loc 2 716 0
 2717               		.cfi_startproc
 2718 0f90 CF93      		push r28
 2719               	.LCFI60:
 2720               		.cfi_def_cfa_offset 3
 2721               		.cfi_offset 28, -2
 2722 0f92 DF93      		push r29
 2723               	.LCFI61:
 2724               		.cfi_def_cfa_offset 4
 2725               		.cfi_offset 29, -3
 2726 0f94 00D0      		rcall .
 2727 0f96 1F92      		push __zero_reg__
 2728               	.LCFI62:
 2729               		.cfi_def_cfa_offset 7
 2730 0f98 CDB7      		in r28,__SP_L__
 2731 0f9a DEB7      		in r29,__SP_H__
 2732               	.LCFI63:
 2733               		.cfi_def_cfa_register 28
 2734               	/* prologue: function */
 2735               	/* frame size = 3 */
 2736               	/* stack size = 5 */
 2737               	.L__stack_usage = 5
 2738 0f9c 9B83      		std Y+3,r25
 2739 0f9e 8A83      		std Y+2,r24
 717:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool ack;
 718:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 719:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = 0;
 2740               		.loc 2 719 0
 2741 0fa0 1092 0000 		sts nwkRxAckControl,__zero_reg__
 720:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack = nwkRxIndicateDataFrame(frame);
 2742               		.loc 2 720 0
 2743 0fa4 8A81      		ldd r24,Y+2
 2744 0fa6 9B81      		ldd r25,Y+3
 2745 0fa8 0E94 0000 		call nwkRxIndicateDataFrame
 2746 0fac 8983      		std Y+1,r24
 721:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 722:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == frame->header.nwkFcf.ackRequest) {
 2747               		.loc 2 722 0
 2748 0fae 8A81      		ldd r24,Y+2
 2749 0fb0 9B81      		ldd r25,Y+3
 2750 0fb2 FC01      		movw r30,r24
 2751 0fb4 8385      		ldd r24,Z+11
 2752 0fb6 8170      		andi r24,lo8(1)
 2753 0fb8 8823      		tst r24
 2754 0fba 01F4      		brne .L128
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2755               		.loc 2 723 0
 2756 0fbc 1982      		std Y+1,__zero_reg__
 2757               	.L128:
 724:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 725:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 726:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == frame->header.macDstAddr &&
 2758               		.loc 2 726 0
 2759 0fbe 8A81      		ldd r24,Y+2
 2760 0fc0 9B81      		ldd r25,Y+3
 2761 0fc2 FC01      		movw r30,r24
 2762 0fc4 8781      		ldd r24,Z+7
 2763 0fc6 9085      		ldd r25,Z+8
 2764 0fc8 0196      		adiw r24,1
 2765 0fca 01F4      		brne .L129
 727:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2766               		.loc 2 727 0 discriminator 1
 2767 0fcc 2091 0000 		lds r18,nwkIb
 2768 0fd0 3091 0000 		lds r19,nwkIb+1
 2769 0fd4 8A81      		ldd r24,Y+2
 2770 0fd6 9B81      		ldd r25,Y+3
 2771 0fd8 FC01      		movw r30,r24
 2772 0fda 8785      		ldd r24,Z+15
 2773 0fdc 9089      		ldd r25,Z+16
 726:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2774               		.loc 2 726 0 discriminator 1
 2775 0fde 2817      		cp r18,r24
 2776 0fe0 3907      		cpc r19,r25
 2777 0fe2 01F4      		brne .L129
 728:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			0 == frame->header.nwkFcf.multicast) {
 2778               		.loc 2 728 0
 2779 0fe4 8A81      		ldd r24,Y+2
 2780 0fe6 9B81      		ldd r25,Y+3
 2781 0fe8 FC01      		movw r30,r24
 2782 0fea 8385      		ldd r24,Z+11
 2783 0fec 8870      		andi r24,lo8(8)
 727:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2784               		.loc 2 727 0
 2785 0fee 8823      		tst r24
 2786 0ff0 01F4      		brne .L129
 729:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = true;
 2787               		.loc 2 729 0
 2788 0ff2 81E0      		ldi r24,lo8(1)
 2789 0ff4 8983      		std Y+1,r24
 2790               	.L129:
 730:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 731:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 732:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == frame->header.macDstPanId) {
 2791               		.loc 2 732 0
 2792 0ff6 8A81      		ldd r24,Y+2
 2793 0ff8 9B81      		ldd r25,Y+3
 2794 0ffa FC01      		movw r30,r24
 2795 0ffc 8581      		ldd r24,Z+5
 2796 0ffe 9681      		ldd r25,Z+6
 2797 1000 0196      		adiw r24,1
 2798 1002 01F4      		brne .L130
 733:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2799               		.loc 2 733 0
 2800 1004 1982      		std Y+1,__zero_reg__
 2801               	.L130:
 734:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 735:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 736:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == nwkIb.addr) {
 2802               		.loc 2 736 0
 2803 1006 8091 0000 		lds r24,nwkIb
 2804 100a 9091 0000 		lds r25,nwkIb+1
 2805 100e 0196      		adiw r24,1
 2806 1010 01F4      		brne .L131
 737:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2807               		.loc 2 737 0
 2808 1012 1982      		std Y+1,__zero_reg__
 2809               	.L131:
 738:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 739:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 740:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ack) {
 2810               		.loc 2 740 0
 2811 1014 8981      		ldd r24,Y+1
 2812 1016 8823      		tst r24
 2813 1018 01F0      		breq .L132
 741:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxSendAck(frame);
 2814               		.loc 2 741 0
 2815 101a 8A81      		ldd r24,Y+2
 2816 101c 9B81      		ldd r25,Y+3
 2817 101e 0E94 0000 		call nwkRxSendAck
 2818               	.L132:
 742:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 743:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 744:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2819               		.loc 2 744 0
 2820 1022 8A81      		ldd r24,Y+2
 2821 1024 9B81      		ldd r25,Y+3
 2822 1026 24E2      		ldi r18,lo8(36)
 2823 1028 FC01      		movw r30,r24
 2824 102a 2083      		st Z,r18
 745:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2825               		.loc 2 745 0
 2826 102c 0000      		nop
 2827               	/* epilogue start */
 2828 102e 0F90      		pop __tmp_reg__
 2829 1030 0F90      		pop __tmp_reg__
 2830 1032 0F90      		pop __tmp_reg__
 2831 1034 DF91      		pop r29
 2832 1036 CF91      		pop r28
 2833 1038 0895      		ret
 2834               		.cfi_endproc
 2835               	.LFE80:
 2837               	.global	nwkRxTaskHandler
 2839               	nwkRxTaskHandler:
 2840               	.LFB81:
 746:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 747:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 748:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Rx Module task handler
 749:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 750:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxTaskHandler(void)
 751:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2841               		.loc 2 751 0
 2842               		.cfi_startproc
 2843 103a CF93      		push r28
 2844               	.LCFI64:
 2845               		.cfi_def_cfa_offset 3
 2846               		.cfi_offset 28, -2
 2847 103c DF93      		push r29
 2848               	.LCFI65:
 2849               		.cfi_def_cfa_offset 4
 2850               		.cfi_offset 29, -3
 2851 103e 00D0      		rcall .
 2852               	.LCFI66:
 2853               		.cfi_def_cfa_offset 6
 2854 1040 CDB7      		in r28,__SP_L__
 2855 1042 DEB7      		in r29,__SP_H__
 2856               	.LCFI67:
 2857               		.cfi_def_cfa_register 28
 2858               	/* prologue: function */
 2859               	/* frame size = 2 */
 2860               	/* stack size = 4 */
 2861               	.L__stack_usage = 4
 752:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame = NULL;
 2862               		.loc 2 752 0
 2863 1044 1A82      		std Y+2,__zero_reg__
 2864 1046 1982      		std Y+1,__zero_reg__
 753:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 754:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 2865               		.loc 2 754 0
 2866 1048 00C0      		rjmp .L134
 2867               	.L144:
 755:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2868               		.loc 2 755 0
 2869 104a 8981      		ldd r24,Y+1
 2870 104c 9A81      		ldd r25,Y+2
 2871 104e FC01      		movw r30,r24
 2872 1050 8081      		ld r24,Z
 2873 1052 882F      		mov r24,r24
 2874 1054 90E0      		ldi r25,0
 2875 1056 092E      		mov __tmp_reg__,r25
 2876 1058 000C      		lsl r0
 2877 105a AA0B      		sbc r26,r26
 2878 105c BB0B      		sbc r27,r27
 2879 105e 40E2      		ldi r20,lo8(32)
 2880 1060 50E0      		ldi r21,0
 2881 1062 29E0      		ldi r18,lo8(9)
 2882 1064 30E0      		ldi r19,0
 2883 1066 841B      		sub r24,r20
 2884 1068 950B      		sbc r25,r21
 2885 106a 2817      		cp r18,r24
 2886 106c 3907      		cpc r19,r25
 2887 106e 00F0      		brlo .L134
 2888 1070 8050      		subi r24,lo8(-(gs(.L136)))
 2889 1072 9040      		sbci r25,hi8(-(gs(.L136)))
 2890 1074 FC01      		movw r30,r24
 2891 1076 0C94 0000 		jmp __tablejump2__
 2892               		.section	.progmem.gcc_sw_table,"a",@progbits
 2893               		.p2align	1
 2894               	.L136:
 2895 0000 0000      		.word gs(.L135)
 2896 0002 0000      		.word gs(.L134)
 2897 0004 0000      		.word gs(.L137)
 2898 0006 0000      		.word gs(.L134)
 2899 0008 0000      		.word gs(.L138)
 2900 000a 0000      		.word gs(.L139)
 2901 000c 0000      		.word gs(.L140)
 2902 000e 0000      		.word gs(.L141)
 2903 0010 0000      		.word gs(.L142)
 2904 0012 0000      		.word gs(.L143)
 2905               		.text
 2906               	.L135:
 756:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_RECEIVED:
 757:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 758:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleReceivedFrame(frame);
 2907               		.loc 2 758 0
 2908 107a 8981      		ldd r24,Y+1
 2909 107c 9A81      		ldd r25,Y+2
 2910 107e 0E94 0000 		call nwkRxHandleReceivedFrame
 759:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 760:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2911               		.loc 2 760 0
 2912 1082 00C0      		rjmp .L134
 2913               	.L137:
 761:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 762:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 763:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_DECRYPT:
 764:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 765:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkSecurityProcess(frame, false);
 766:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 767:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 768:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 769:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 770:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_INDICATE:
 771:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 772:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleIndication(frame);
 2914               		.loc 2 772 0
 2915 1084 8981      		ldd r24,Y+1
 2916 1086 9A81      		ldd r25,Y+2
 2917 1088 0E94 0000 		call nwkRxHandleIndication
 773:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 774:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2918               		.loc 2 774 0
 2919 108c 00C0      		rjmp .L134
 2920               	.L138:
 775:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 776:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 777:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_ROUTE:
 778:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 779:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRouteFrame(frame);
 780:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 781:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 782:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 783:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 784:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_FINISH:
 785:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 786:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkFrameFree(frame);
 2921               		.loc 2 786 0
 2922 108e 8981      		ldd r24,Y+1
 2923 1090 9A81      		ldd r25,Y+2
 2924 1092 0E94 0000 		call nwkFrameFree
 787:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 788:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2925               		.loc 2 788 0
 2926 1096 00C0      		rjmp .L134
 2927               	.L139:
 789:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 790:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_BEACON:
 791:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 792:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateBeaconFrame(frame);
 2928               		.loc 2 792 0
 2929 1098 8981      		ldd r24,Y+1
 2930 109a 9A81      		ldd r25,Y+2
 2931 109c 0E94 0000 		call nwkRxIndicateBeaconFrame
 793:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 794:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2932               		.loc 2 794 0
 2933 10a0 00C0      		rjmp .L134
 2934               	.L140:
 795:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 796:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 797:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLBEACON:
 798:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 799:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLBeaconFrame(frame);
 2935               		.loc 2 799 0
 2936 10a2 8981      		ldd r24,Y+1
 2937 10a4 9A81      		ldd r25,Y+2
 2938 10a6 0E94 0000 		call nwkRxIndicateLLBeaconFrame
 800:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 801:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2939               		.loc 2 801 0
 2940 10aa 00C0      		rjmp .L134
 2941               	.L141:
 802:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 803:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLCOMMAND:
 804:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 805:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLCommandFrame(frame);
 2942               		.loc 2 805 0
 2943 10ac 8981      		ldd r24,Y+1
 2944 10ae 9A81      		ldd r25,Y+2
 2945 10b0 0E94 0000 		call nwkRxIndicateLLCommandFrame
 806:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 807:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2946               		.loc 2 807 0
 2947 10b4 00C0      		rjmp .L134
 2948               	.L143:
 808:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 809:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLDATA:
 810:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 811:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLDataFrame(frame);
 2949               		.loc 2 811 0
 2950 10b6 8981      		ldd r24,Y+1
 2951 10b8 9A81      		ldd r25,Y+2
 2952 10ba 0E94 0000 		call nwkRxIndicateLLDataFrame
 2953               	.L142:
 812:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 813:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 814:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLACKFRAME:
 815:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 816:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLACKFrame(frame);
 2954               		.loc 2 816 0
 2955 10be 8981      		ldd r24,Y+1
 2956 10c0 9A81      		ldd r25,Y+2
 2957 10c2 0E94 0000 		call nwkRxIndicateLLACKFrame
 817:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 818:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2958               		.loc 2 818 0
 2959 10c6 0000      		nop
 2960               	.L134:
 754:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2961               		.loc 2 754 0
 2962 10c8 8981      		ldd r24,Y+1
 2963 10ca 9A81      		ldd r25,Y+2
 2964 10cc 0E94 0000 		call nwkFrameNext
 2965 10d0 9A83      		std Y+2,r25
 2966 10d2 8983      		std Y+1,r24
 2967 10d4 8981      		ldd r24,Y+1
 2968 10d6 9A81      		ldd r25,Y+2
 2969 10d8 892B      		or r24,r25
 2970 10da 01F0      		breq .+2
 2971 10dc 00C0      		rjmp .L144
 819:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 820:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 821:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 822:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2972               		.loc 2 822 0
 2973 10de 0000      		nop
 2974               	/* epilogue start */
 2975 10e0 0F90      		pop __tmp_reg__
 2976 10e2 0F90      		pop __tmp_reg__
 2977 10e4 DF91      		pop r29
 2978 10e6 CF91      		pop r28
 2979 10e8 0895      		ret
 2980               		.cfi_endproc
 2981               	.LFE81:
 2983               	.Letext0:
 2984               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 2985               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 2986               		.file 5 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 2987               		.file 6 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 2988               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwkDataReq.h"
 2989               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 2990               		.file 9 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
 2991               		.file 10 "config/config.h"
 2992               		.file 11 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkRx.c
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:7      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 n
                            *COM*:00000004 tTS
                            *COM*:00000002 macLLDNnumTimeSlots
                            *COM*:00000002 macLLDNnumUplinkTS
                            *COM*:00000002 macLLDNRetransmitTS
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:17     .text:00000000 nwkFramePayloadSize
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:79     .bss.nwkRxDuplicateRejectionTable:00000000 nwkRxDuplicateRejectionTable
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:84     .bss.nwkRxAckControl:00000000 nwkRxAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:89     .bss.nwkRxDuplicateRejectionTimer:00000000 nwkRxDuplicateRejectionTimer
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:94     .text:00000044 nwkRxInit
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:845    .text:000004b0 nwkRxDuplicateRejectionTimerHandler
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:1243   .text:000006f2 nwkRxSeriveDataInd
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:185    .text:000000b6 PHY_DataInd
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:635    .text:00000386 nwkRxSendAck
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:807    .text:00000494 NWK_SetAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:960    .text:0000054a nwkRxRejectDuplicate
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:1311   .text:0000073c nwkRxHandleReceivedFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:1761   .text:00000a16 nwkRxIndicateDataFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:2100   .text:00000c24 nwkRxIndicateBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:2244   .text:00000cfa nwkRxIndicateLLBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:2354   .text:00000d92 nwkRxIndicateLLCommandFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:2474   .text:00000e3c nwkRxIndicateLLDataFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:2594   .text:00000ee6 nwkRxIndicateLLACKFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:2714   .text:00000f90 nwkRxHandleIndication
C:\Users\GUILHE~1\AppData\Local\Temp\ccI4FjMa.s:2839   .text:0000103a nwkRxTaskHandler

UNDEFINED SYMBOLS
NWK_OpenEndpoint
putchar
printf
nwkFrameAlloc
nwkFrameAlloc_LLDN
memcpy
nwkFrameCommandInit
nwkTxFrame
SYS_TimerStart
nwkTxAckReceived
nwkIb
NWK_GroupIsMember
nwkTxBroadcastFrame
__tablejump2__
nwkFrameFree
nwkFrameNext
__do_copy_data
__do_clear_bss
