   1               		.file	"nwkRx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.bss.n,"aw",@nobits
  14               	n:
  15 0000 00        		.zero	1
  16               		.section	.bss.tTS,"aw",@nobits
  19               	tTS:
  20 0000 0000 0000 		.zero	4
  21               		.text
  23               	nwkFramePayloadSize:
  24               	.LFB65:
  25               		.file 1 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
   1:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /**
   2:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \file nwkFrame.h
   3:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   4:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \brief Frame buffers management interface
   5:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   6:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   8:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  10:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  13:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  16:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  20:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  23:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  26:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  38:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  40:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  41:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  42:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  43:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*
  44:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  46:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  48:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  49:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #ifndef _NWK_FRAME_H_
  50:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define _NWK_FRAME_H_
  51:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  52:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Includes ---------------------------------------------------------------*/
  53:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include <stdint.h>
  54:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include "compiler.h"
  55:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  56:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Definitions ------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define NWK_FRAME_MAX_PAYLOAD_SIZE   127
  58:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  59:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Types ------------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_SET(1)
  61:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameHeader_t {
  62:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  63:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  64:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstPanId;
  65:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstAddr;
  66:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  67:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  68:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  69:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t ackRequest : 1;
  70:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t security   : 1;
  71:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t linkLocal  : 1;
  72:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t multicast  : 1;
  73:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t beacon     : 1;
  74:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved   : 3;
  75:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} nwkFcf;
  76:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t nwkSeq;
  77:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkSrcAddr;
  78:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkDstAddr;
  79:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  80:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkSrcEndpoint : 4;
  81:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkDstEndpoint : 4;
  82:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
  83:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameHeader_t;
  84:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  85:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeader_t {
  86:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  87:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  88:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcPanId;
  89:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  90:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
  91:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
  92:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t beaconOrder			: 4;
  93:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t superframeOrder		: 4;
  94:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t finalCAPslot			: 4;
  95:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t BatteryLifeExtension	: 1;
  96:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t Reserved				: 1;
  97:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t PANCoordinator			: 1;
  98:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t AssociationPermit		: 1;
  99:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSFS;
 100:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macGTS;
 101:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macPending;
 102:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeader_t;
 103:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 104:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 105:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeaderLLDN_t {
 106:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/******* MHR *****/
 107:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// struct
 108:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// {
 109:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameType 				: 3;
 110:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SecurityEnabled 	: 1;
 111:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameVersion			: 1;
 112:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t ackRequest				: 1;
 113:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SubFrameType			: 2;
 114:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// } macFcf;
 115:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 116:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 117:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 118:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 119:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 120:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 121:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 122:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 123:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 124:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 125:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/****** MAC Payload *******/
 126:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 127:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 128:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txState 				: 3;
 129:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txDir 					: 1;
 130:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved				: 1;
 131:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t numMgmtTimeslots: 3; // number of managment time slots
 132:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		// uplink and downlink must be equal
 133:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  } Flags;
 134:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 135:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t PanId;
 136:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t confSeqNumber;
 137:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t TimeSlotSize;
 138:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 139:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 140:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeaderLLDN_t;
 141:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 142:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameGeneralHeaderLLDN_t {
 143:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 144:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 145:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 146:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 147:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 148:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 149:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 150:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 151:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 152:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 153:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameGeneralHeaderLLDN_t;
 154:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 155:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 156:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameMulticastHeader_t {
 157:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nonMemberRadius    : 4;
 158:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxNonMemberRadius : 4;
 159:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t memberRadius       : 4;
 160:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxMemberRadius    : 4;
 161:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameMulticastHeader_t;
 162:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 163:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct NwkFrame_t {
 164:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t state;
 165:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t size;
 166:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 167:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 168:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameHeader_t header;
 169:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeader_t beacon;
 170:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeaderLLDN_t LLbeacon;
 171:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameGeneralHeaderLLDN_t LLgeneral;
 172:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t data[NWK_FRAME_MAX_PAYLOAD_SIZE];
 173:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 174:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 175:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t *payload;
 176:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 177:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 178:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 179:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t lqi;
 180:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			int8_t rssi;
 181:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} rx;
 182:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 183:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 184:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t status;
 185:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint16_t timeout;
 186:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t control;
 187:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			void (*confirm)(struct NwkFrame_t *frame);
 188:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} tx;
 189:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 190:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrame_t;
 191:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_RESET()
 192:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Prototypes -------------------------------------------------------------*/
 193:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameInit(void);
 194:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc(void);
 195:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameFree(NwkFrame_t *frame);
 196:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);
 197:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameCommandInit(NwkFrame_t *frame);
 198:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 199:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame);
 200:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Implementations --------------------------------------------------------*/
 201:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 202:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*************************************************************************//**
 203:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** *****************************************************************************/
 204:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** static inline uint8_t nwkFramePayloadSize(NwkFrame_t *frame)
 205:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** {
  26               		.loc 1 205 0
  27               		.cfi_startproc
  28 0000 CF93      		push r28
  29               	.LCFI0:
  30               		.cfi_def_cfa_offset 3
  31               		.cfi_offset 28, -2
  32 0002 DF93      		push r29
  33               	.LCFI1:
  34               		.cfi_def_cfa_offset 4
  35               		.cfi_offset 29, -3
  36 0004 00D0      		rcall .
  37               	.LCFI2:
  38               		.cfi_def_cfa_offset 6
  39 0006 CDB7      		in r28,__SP_L__
  40 0008 DEB7      		in r29,__SP_H__
  41               	.LCFI3:
  42               		.cfi_def_cfa_register 28
  43               	/* prologue: function */
  44               	/* frame size = 2 */
  45               	/* stack size = 4 */
  46               	.L__stack_usage = 4
  47 000a 9A83      		std Y+2,r25
  48 000c 8983      		std Y+1,r24
 206:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	return frame->size - (frame->payload - frame->data);
  49               		.loc 1 206 0
  50 000e 8981      		ldd r24,Y+1
  51 0010 9A81      		ldd r25,Y+2
  52 0012 FC01      		movw r30,r24
  53 0014 4181      		ldd r20,Z+1
  54 0016 8981      		ldd r24,Y+1
  55 0018 9A81      		ldd r25,Y+2
  56 001a 8F57      		subi r24,127
  57 001c 9F4F      		sbci r25,-1
  58 001e FC01      		movw r30,r24
  59 0020 8081      		ld r24,Z
  60 0022 9181      		ldd r25,Z+1
  61 0024 9C01      		movw r18,r24
  62 0026 8981      		ldd r24,Y+1
  63 0028 9A81      		ldd r25,Y+2
  64 002a 0296      		adiw r24,2
  65 002c B901      		movw r22,r18
  66 002e 681B      		sub r22,r24
  67 0030 790B      		sbc r23,r25
  68 0032 CB01      		movw r24,r22
  69 0034 742F      		mov r23,r20
  70 0036 781B      		sub r23,r24
  71 0038 872F      		mov r24,r23
  72               	/* epilogue start */
 207:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** }
  73               		.loc 1 207 0
  74 003a 0F90      		pop __tmp_reg__
  75 003c 0F90      		pop __tmp_reg__
  76 003e DF91      		pop r29
  77 0040 CF91      		pop r28
  78 0042 0895      		ret
  79               		.cfi_endproc
  80               	.LFE65:
  82               		.section	.bss.nwkRxDuplicateRejectionTable,"aw",@nobits
  85               	nwkRxDuplicateRejectionTable:
  86 0000 0000 0000 		.zero	250
  86      0000 0000 
  86      0000 0000 
  86      0000 0000 
  86      0000 0000 
  87               		.section	.bss.nwkRxAckControl,"aw",@nobits
  90               	nwkRxAckControl:
  91 0000 00        		.zero	1
  92               		.section	.bss.nwkRxDuplicateRejectionTimer,"aw",@nobits
  95               	nwkRxDuplicateRejectionTimer:
  96 0000 0000 0000 		.zero	13
  96      0000 0000 
  96      0000 0000 
  96      00
  97               		.text
  98               	.global	nwkRxInit
 100               	nwkRxInit:
 101               	.LFB66:
 102               		.file 2 "../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \file nwkRx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \brief Receive routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkGroup.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRoute.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkCommand.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkSecurity.h"
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRouteDiscovery.h"
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Definitions ------------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL   100 /* ms */
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define DUPLICATE_REJECTION_TTL	\
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	((NWK_DUPLICATE_REJECTION_TTL /	\
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL) + 1)
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_SERVICE_ENDPOINT_ID    0
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Types ------------------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** enum {
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_RECEIVED = 0x20,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_DECRYPT  = 0x21,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_INDICATE = 0x22,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_ROUTE    = 0x23,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_FINISH   = 0x24,
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_BEACON   = 0x25,
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLBEACON 	= 0x26,
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLCOMMAND 	= 0x27,
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** };
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** typedef struct NwkDuplicateRejectionEntry_t {
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint16_t src;
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t seq;
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t mask;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t ttl;
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** } NwkDuplicateRejectionEntry_t;
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Prototypes -------------------------------------------------------------*/
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer);
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind);
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Variables --------------------------------------------------------------*/
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static NwkDuplicateRejectionEntry_t nwkRxDuplicateRejectionTable[
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DUPLICATE_REJECTION_TABLE_SIZE];
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static uint8_t nwkRxAckControl;
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static SYS_Timer_t nwkRxDuplicateRejectionTimer;
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Implementations --------------------------------------------------------*/
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Initializes the Rx module
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxInit(void)
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 103               		.loc 2 108 0
 104               		.cfi_startproc
 105 0044 CF93      		push r28
 106               	.LCFI4:
 107               		.cfi_def_cfa_offset 3
 108               		.cfi_offset 28, -2
 109 0046 DF93      		push r29
 110               	.LCFI5:
 111               		.cfi_def_cfa_offset 4
 112               		.cfi_offset 29, -3
 113 0048 1F92      		push __zero_reg__
 114               	.LCFI6:
 115               		.cfi_def_cfa_offset 5
 116 004a CDB7      		in r28,__SP_L__
 117 004c DEB7      		in r29,__SP_H__
 118               	.LCFI7:
 119               		.cfi_def_cfa_register 28
 120               	/* prologue: function */
 121               	/* frame size = 1 */
 122               	/* stack size = 3 */
 123               	.L__stack_usage = 3
 124               	.LBB2:
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 125               		.loc 2 109 0
 126 004e 1982      		std Y+1,__zero_reg__
 127 0050 00C0      		rjmp .L4
 128               	.L5:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxDuplicateRejectionTable[i].ttl = 0;
 129               		.loc 2 110 0 discriminator 3
 130 0052 8981      		ldd r24,Y+1
 131 0054 282F      		mov r18,r24
 132 0056 30E0      		ldi r19,0
 133 0058 C901      		movw r24,r18
 134 005a 880F      		lsl r24
 135 005c 991F      		rol r25
 136 005e 880F      		lsl r24
 137 0060 991F      		rol r25
 138 0062 820F      		add r24,r18
 139 0064 931F      		adc r25,r19
 140 0066 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 141 0068 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 142 006a FC01      		movw r30,r24
 143 006c 1082      		st Z,__zero_reg__
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 144               		.loc 2 109 0 discriminator 3
 145 006e 8981      		ldd r24,Y+1
 146 0070 8F5F      		subi r24,lo8(-(1))
 147 0072 8983      		std Y+1,r24
 148               	.L4:
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 149               		.loc 2 109 0 is_stmt 0 discriminator 1
 150 0074 8981      		ldd r24,Y+1
 151 0076 8233      		cpi r24,lo8(50)
 152 0078 00F0      		brlo .L5
 153               	.LBE2:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.interval
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL;
 154               		.loc 2 114 0 is_stmt 1
 155 007a 84E6      		ldi r24,lo8(100)
 156 007c 90E0      		ldi r25,0
 157 007e A0E0      		ldi r26,0
 158 0080 B0E0      		ldi r27,0
 159 0082 8093 0000 		sts nwkRxDuplicateRejectionTimer+6,r24
 160 0086 9093 0000 		sts nwkRxDuplicateRejectionTimer+6+1,r25
 161 008a A093 0000 		sts nwkRxDuplicateRejectionTimer+6+2,r26
 162 008e B093 0000 		sts nwkRxDuplicateRejectionTimer+6+3,r27
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE;
 163               		.loc 2 115 0
 164 0092 1092 0000 		sts nwkRxDuplicateRejectionTimer+10,__zero_reg__
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.handler
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= nwkRxDuplicateRejectionTimerHandler;
 165               		.loc 2 117 0
 166 0096 80E0      		ldi r24,lo8(gs(nwkRxDuplicateRejectionTimerHandler))
 167 0098 90E0      		ldi r25,hi8(gs(nwkRxDuplicateRejectionTimerHandler))
 168 009a 9093 0000 		sts nwkRxDuplicateRejectionTimer+11+1,r25
 169 009e 8093 0000 		sts nwkRxDuplicateRejectionTimer+11,r24
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_OpenEndpoint(NWK_SERVICE_ENDPOINT_ID, nwkRxSeriveDataInd);
 170               		.loc 2 119 0
 171 00a2 60E0      		ldi r22,lo8(gs(nwkRxSeriveDataInd))
 172 00a4 70E0      		ldi r23,hi8(gs(nwkRxSeriveDataInd))
 173 00a6 80E0      		ldi r24,0
 174 00a8 0E94 0000 		call NWK_OpenEndpoint
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 175               		.loc 2 120 0
 176 00ac 0000      		nop
 177               	/* epilogue start */
 178 00ae 0F90      		pop __tmp_reg__
 179 00b0 DF91      		pop r29
 180 00b2 CF91      		pop r28
 181 00b4 0895      		ret
 182               		.cfi_endproc
 183               	.LFE66:
 185               		.weak	PHY_DataInd
 187               	PHY_DataInd:
 188               	.LFB67:
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void __attribute__((weak)) PHY_DataInd(PHY_DataInd_t *ind)
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 189               		.loc 2 125 0
 190               		.cfi_startproc
 191 00b6 CF93      		push r28
 192               	.LCFI8:
 193               		.cfi_def_cfa_offset 3
 194               		.cfi_offset 28, -2
 195 00b8 DF93      		push r29
 196               	.LCFI9:
 197               		.cfi_def_cfa_offset 4
 198               		.cfi_offset 29, -3
 199 00ba 00D0      		rcall .
 200 00bc 00D0      		rcall .
 201               	.LCFI10:
 202               		.cfi_def_cfa_offset 8
 203 00be CDB7      		in r28,__SP_L__
 204 00c0 DEB7      		in r29,__SP_H__
 205               	.LCFI11:
 206               		.cfi_def_cfa_register 28
 207               	/* prologue: function */
 208               	/* frame size = 4 */
 209               	/* stack size = 6 */
 210               	.L__stack_usage = 6
 211 00c2 9C83      		std Y+4,r25
 212 00c4 8B83      		std Y+3,r24
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame;
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-Beacon frame
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(0x0c == ind->data[0])
 213               		.loc 2 129 0
 214 00c6 8B81      		ldd r24,Y+3
 215 00c8 9C81      		ldd r25,Y+4
 216 00ca FC01      		movw r30,r24
 217 00cc 8081      		ld r24,Z
 218 00ce 9181      		ldd r25,Z+1
 219 00d0 FC01      		movw r30,r24
 220 00d2 8081      		ld r24,Z
 221 00d4 8C30      		cpi r24,lo8(12)
 222 00d6 01F4      		brne .L7
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameBeaconHeaderLLDN_t))
 223               		.loc 2 131 0
 224 00d8 8B81      		ldd r24,Y+3
 225 00da 9C81      		ldd r25,Y+4
 226 00dc FC01      		movw r30,r24
 227 00de 8281      		ldd r24,Z+2
 228 00e0 8730      		cpi r24,lo8(7)
 229 00e2 00F0      		brlo .+2
 230 00e4 00C0      		rjmp .L8
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 231               		.loc 2 133 0
 232 00e6 00C0      		rjmp .L6
 233               	.L7:
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-MAC Command frame
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0xcc == ind->data[0])
 234               		.loc 2 137 0
 235 00e8 8B81      		ldd r24,Y+3
 236 00ea 9C81      		ldd r25,Y+4
 237 00ec FC01      		movw r30,r24
 238 00ee 8081      		ld r24,Z
 239 00f0 9181      		ldd r25,Z+1
 240 00f2 FC01      		movw r30,r24
 241 00f4 8081      		ld r24,Z
 242 00f6 8C3C      		cpi r24,lo8(-52)
 243 00f8 01F4      		brne .L10
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameGeneralHeaderLLDN_t))
 244               		.loc 2 139 0
 245 00fa 8B81      		ldd r24,Y+3
 246 00fc 9C81      		ldd r25,Y+4
 247 00fe FC01      		movw r30,r24
 248 0100 8281      		ldd r24,Z+2
 249 0102 8330      		cpi r24,lo8(3)
 250 0104 00F0      		brlo .+2
 251 0106 00C0      		rjmp .L8
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 252               		.loc 2 141 0
 253 0108 00C0      		rjmp .L6
 254               	.L10:
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x88 == ind->data[1])
 255               		.loc 2 144 0
 256 010a 8B81      		ldd r24,Y+3
 257 010c 9C81      		ldd r25,Y+4
 258 010e FC01      		movw r30,r24
 259 0110 8081      		ld r24,Z
 260 0112 9181      		ldd r25,Z+1
 261 0114 0196      		adiw r24,1
 262 0116 FC01      		movw r30,r24
 263 0118 8081      		ld r24,Z
 264 011a 8838      		cpi r24,lo8(-120)
 265 011c 01F4      		brne .L11
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x61 != ind->data[0] && 0x41 != ind->data[0]) || ind->size < sizeof(NwkFrameHeader_t))
 266               		.loc 2 146 0
 267 011e 8B81      		ldd r24,Y+3
 268 0120 9C81      		ldd r25,Y+4
 269 0122 FC01      		movw r30,r24
 270 0124 8081      		ld r24,Z
 271 0126 9181      		ldd r25,Z+1
 272 0128 FC01      		movw r30,r24
 273 012a 8081      		ld r24,Z
 274 012c 8136      		cpi r24,lo8(97)
 275 012e 01F0      		breq .L12
 276               		.loc 2 146 0 is_stmt 0 discriminator 1
 277 0130 8B81      		ldd r24,Y+3
 278 0132 9C81      		ldd r25,Y+4
 279 0134 FC01      		movw r30,r24
 280 0136 8081      		ld r24,Z
 281 0138 9181      		ldd r25,Z+1
 282 013a FC01      		movw r30,r24
 283 013c 8081      		ld r24,Z
 284 013e 8134      		cpi r24,lo8(65)
 285 0140 01F0      		breq .+2
 286 0142 00C0      		rjmp .L25
 287               	.L12:
 288               		.loc 2 146 0 discriminator 3
 289 0144 8B81      		ldd r24,Y+3
 290 0146 9C81      		ldd r25,Y+4
 291 0148 FC01      		movw r30,r24
 292 014a 8281      		ldd r24,Z+2
 293 014c 8031      		cpi r24,lo8(16)
 294 014e 00F4      		brsh .L8
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 295               		.loc 2 148 0 is_stmt 1
 296 0150 00C0      		rjmp .L25
 297               	.L11:
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x80 == ind->data[1])
 298               		.loc 2 151 0
 299 0152 8B81      		ldd r24,Y+3
 300 0154 9C81      		ldd r25,Y+4
 301 0156 FC01      		movw r30,r24
 302 0158 8081      		ld r24,Z
 303 015a 9181      		ldd r25,Z+1
 304 015c 0196      		adiw r24,1
 305 015e FC01      		movw r30,r24
 306 0160 8081      		ld r24,Z
 307 0162 8038      		cpi r24,lo8(-128)
 308 0164 01F0      		breq .+2
 309 0166 00C0      		rjmp .L26
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x00 != ind->data[0]) || ind->size < (sizeof(NwkFrameBeaconHeader_t)))
 310               		.loc 2 153 0
 311 0168 8B81      		ldd r24,Y+3
 312 016a 9C81      		ldd r25,Y+4
 313 016c FC01      		movw r30,r24
 314 016e 8081      		ld r24,Z
 315 0170 9181      		ldd r25,Z+1
 316 0172 FC01      		movw r30,r24
 317 0174 8081      		ld r24,Z
 318 0176 8823      		tst r24
 319 0178 01F0      		breq .+2
 320 017a 00C0      		rjmp .L27
 321               		.loc 2 153 0 is_stmt 0 discriminator 1
 322 017c 8B81      		ldd r24,Y+3
 323 017e 9C81      		ldd r25,Y+4
 324 0180 FC01      		movw r30,r24
 325 0182 8281      		ldd r24,Z+2
 326 0184 8B30      		cpi r24,lo8(11)
 327 0186 00F4      		brsh .+2
 328 0188 00C0      		rjmp .L27
 329               	.L8:
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(ind->data[1] == 0x88 || ind->data[1] == 0x80)
 330               		.loc 2 163 0 is_stmt 1
 331 018a 8B81      		ldd r24,Y+3
 332 018c 9C81      		ldd r25,Y+4
 333 018e FC01      		movw r30,r24
 334 0190 8081      		ld r24,Z
 335 0192 9181      		ldd r25,Z+1
 336 0194 0196      		adiw r24,1
 337 0196 FC01      		movw r30,r24
 338 0198 8081      		ld r24,Z
 339 019a 8838      		cpi r24,lo8(-120)
 340 019c 01F0      		breq .L16
 341               		.loc 2 163 0 is_stmt 0 discriminator 1
 342 019e 8B81      		ldd r24,Y+3
 343 01a0 9C81      		ldd r25,Y+4
 344 01a2 FC01      		movw r30,r24
 345 01a4 8081      		ld r24,Z
 346 01a6 9181      		ldd r25,Z+1
 347 01a8 0196      		adiw r24,1
 348 01aa FC01      		movw r30,r24
 349 01ac 8081      		ld r24,Z
 350 01ae 8038      		cpi r24,lo8(-128)
 351 01b0 01F4      		brne .L17
 352               	.L16:
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc())) {
 353               		.loc 2 165 0 is_stmt 1
 354 01b2 0E94 0000 		call nwkFrameAlloc
 355 01b6 9A83      		std Y+2,r25
 356 01b8 8983      		std Y+1,r24
 357 01ba 8981      		ldd r24,Y+1
 358 01bc 9A81      		ldd r25,Y+2
 359 01be 892B      		or r24,r25
 360 01c0 01F4      		brne .+2
 361 01c2 00C0      		rjmp .L28
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame received is NwkFrameHeader change state to Receveid
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is a 802.15.4 beacon change state to Beacon
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = ((0x88 == ind->data[1]) ? NWK_RX_STATE_RECEIVED : NWK_RX_STATE_BEACON);
 362               		.loc 2 170 0
 363 01c4 8B81      		ldd r24,Y+3
 364 01c6 9C81      		ldd r25,Y+4
 365 01c8 FC01      		movw r30,r24
 366 01ca 8081      		ld r24,Z
 367 01cc 9181      		ldd r25,Z+1
 368 01ce 0196      		adiw r24,1
 369 01d0 FC01      		movw r30,r24
 370 01d2 8081      		ld r24,Z
 371 01d4 8838      		cpi r24,lo8(-120)
 372 01d6 01F4      		brne .L19
 373               		.loc 2 170 0 is_stmt 0 discriminator 1
 374 01d8 20E2      		ldi r18,lo8(32)
 375 01da 00C0      		rjmp .L20
 376               	.L19:
 377               		.loc 2 170 0 discriminator 2
 378 01dc 25E2      		ldi r18,lo8(37)
 379               	.L20:
 380               		.loc 2 170 0 discriminator 4
 381 01de 8981      		ldd r24,Y+1
 382 01e0 9A81      		ldd r25,Y+2
 383 01e2 FC01      		movw r30,r24
 384 01e4 2083      		st Z,r18
 385 01e6 00C0      		rjmp .L21
 386               	.L17:
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// allocate frame buffer according to received frame
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(ind->data[0] == 0x0c)
 387               		.loc 2 173 0 is_stmt 1
 388 01e8 8B81      		ldd r24,Y+3
 389 01ea 9C81      		ldd r25,Y+4
 390 01ec FC01      		movw r30,r24
 391 01ee 8081      		ld r24,Z
 392 01f0 9181      		ldd r25,Z+1
 393 01f2 FC01      		movw r30,r24
 394 01f4 8081      		ld r24,Z
 395 01f6 8C30      		cpi r24,lo8(12)
 396 01f8 01F4      		brne .L22
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-Beacon frame
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(true))){
 397               		.loc 2 176 0
 398 01fa 81E0      		ldi r24,lo8(1)
 399 01fc 0E94 0000 		call nwkFrameAlloc_LLDN
 400 0200 9A83      		std Y+2,r25
 401 0202 8983      		std Y+1,r24
 402 0204 8981      		ldd r24,Y+1
 403 0206 9A81      		ldd r25,Y+2
 404 0208 892B      		or r24,r25
 405 020a 01F4      		brne .+2
 406 020c 00C0      		rjmp .L29
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-Beacon change state to LLBEACON
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLBEACON;
 407               		.loc 2 180 0
 408 020e 8981      		ldd r24,Y+1
 409 0210 9A81      		ldd r25,Y+2
 410 0212 26E2      		ldi r18,lo8(38)
 411 0214 FC01      		movw r30,r24
 412 0216 2083      		st Z,r18
 413 0218 00C0      		rjmp .L21
 414               	.L22:
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-MAC command or LL-Data frame
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(false))){
 415               		.loc 2 185 0
 416 021a 80E0      		ldi r24,0
 417 021c 0E94 0000 		call nwkFrameAlloc_LLDN
 418 0220 9A83      		std Y+2,r25
 419 0222 8983      		std Y+1,r24
 420 0224 8981      		ldd r24,Y+1
 421 0226 9A81      		ldd r25,Y+2
 422 0228 892B      		or r24,r25
 423 022a 01F0      		breq .L30
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-MACComand change state to LLCOMMAND
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLCOMMAND;
 424               		.loc 2 189 0
 425 022c 8981      		ldd r24,Y+1
 426 022e 9A81      		ldd r25,Y+2
 427 0230 27E2      		ldi r18,lo8(39)
 428 0232 FC01      		movw r30,r24
 429 0234 2083      		st Z,r18
 430               	.L21:
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size = ind->size;
 431               		.loc 2 192 0
 432 0236 8B81      		ldd r24,Y+3
 433 0238 9C81      		ldd r25,Y+4
 434 023a FC01      		movw r30,r24
 435 023c 2281      		ldd r18,Z+2
 436 023e 8981      		ldd r24,Y+1
 437 0240 9A81      		ldd r25,Y+2
 438 0242 FC01      		movw r30,r24
 439 0244 2183      		std Z+1,r18
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.lqi = ind->lqi;
 440               		.loc 2 193 0
 441 0246 8B81      		ldd r24,Y+3
 442 0248 9C81      		ldd r25,Y+4
 443 024a FC01      		movw r30,r24
 444 024c 2381      		ldd r18,Z+3
 445 024e 8981      		ldd r24,Y+1
 446 0250 9A81      		ldd r25,Y+2
 447 0252 8D57      		subi r24,125
 448 0254 9F4F      		sbci r25,-1
 449 0256 FC01      		movw r30,r24
 450 0258 2083      		st Z,r18
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.rssi = ind->rssi;
 451               		.loc 2 194 0
 452 025a 8B81      		ldd r24,Y+3
 453 025c 9C81      		ldd r25,Y+4
 454 025e FC01      		movw r30,r24
 455 0260 2481      		ldd r18,Z+4
 456 0262 8981      		ldd r24,Y+1
 457 0264 9A81      		ldd r25,Y+2
 458 0266 8C57      		subi r24,124
 459 0268 9F4F      		sbci r25,-1
 460 026a FC01      		movw r30,r24
 461 026c 2083      		st Z,r18
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	memcpy(frame->data, ind->data, ind->size);
 462               		.loc 2 195 0
 463 026e 8B81      		ldd r24,Y+3
 464 0270 9C81      		ldd r25,Y+4
 465 0272 FC01      		movw r30,r24
 466 0274 8281      		ldd r24,Z+2
 467 0276 482F      		mov r20,r24
 468 0278 50E0      		ldi r21,0
 469 027a 8B81      		ldd r24,Y+3
 470 027c 9C81      		ldd r25,Y+4
 471 027e FC01      		movw r30,r24
 472 0280 2081      		ld r18,Z
 473 0282 3181      		ldd r19,Z+1
 474 0284 8981      		ldd r24,Y+1
 475 0286 9A81      		ldd r25,Y+2
 476 0288 0296      		adiw r24,2
 477 028a B901      		movw r22,r18
 478 028c 0E94 0000 		call memcpy
 479 0290 00C0      		rjmp .L6
 480               	.L25:
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 481               		.loc 2 148 0
 482 0292 0000      		nop
 483 0294 00C0      		rjmp .L6
 484               	.L26:
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 485               		.loc 2 160 0
 486 0296 0000      		nop
 487 0298 00C0      		rjmp .L6
 488               	.L27:
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 489               		.loc 2 155 0
 490 029a 0000      		nop
 491 029c 00C0      		rjmp .L6
 492               	.L28:
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 493               		.loc 2 166 0
 494 029e 0000      		nop
 495 02a0 00C0      		rjmp .L6
 496               	.L29:
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 497               		.loc 2 177 0
 498 02a2 0000      		nop
 499 02a4 00C0      		rjmp .L6
 500               	.L30:
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 501               		.loc 2 186 0
 502 02a6 0000      		nop
 503               	.L6:
 504               	/* epilogue start */
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 505               		.loc 2 196 0
 506 02a8 0F90      		pop __tmp_reg__
 507 02aa 0F90      		pop __tmp_reg__
 508 02ac 0F90      		pop __tmp_reg__
 509 02ae 0F90      		pop __tmp_reg__
 510 02b0 DF91      		pop r29
 511 02b2 CF91      		pop r28
 512 02b4 0895      		ret
 513               		.cfi_endproc
 514               	.LFE67:
 517               	nwkRxSendAck:
 518               	.LFB68:
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxSendAck(NwkFrame_t *frame)
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 519               		.loc 2 201 0
 520               		.cfi_startproc
 521 02b6 CF93      		push r28
 522               	.LCFI12:
 523               		.cfi_def_cfa_offset 3
 524               		.cfi_offset 28, -2
 525 02b8 DF93      		push r29
 526               	.LCFI13:
 527               		.cfi_def_cfa_offset 4
 528               		.cfi_offset 29, -3
 529 02ba 00D0      		rcall .
 530 02bc 00D0      		rcall .
 531 02be 00D0      		rcall .
 532               	.LCFI14:
 533               		.cfi_def_cfa_offset 10
 534 02c0 CDB7      		in r28,__SP_L__
 535 02c2 DEB7      		in r29,__SP_H__
 536               	.LCFI15:
 537               		.cfi_def_cfa_register 28
 538               	/* prologue: function */
 539               	/* frame size = 6 */
 540               	/* stack size = 8 */
 541               	.L__stack_usage = 8
 542 02c4 9E83      		std Y+6,r25
 543 02c6 8D83      		std Y+5,r24
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *ack;
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkCommandAck_t *command;
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (ack = nwkFrameAlloc())) {
 544               		.loc 2 205 0
 545 02c8 0E94 0000 		call nwkFrameAlloc
 546 02cc 9A83      		std Y+2,r25
 547 02ce 8983      		std Y+1,r24
 548 02d0 8981      		ldd r24,Y+1
 549 02d2 9A81      		ldd r25,Y+2
 550 02d4 892B      		or r24,r25
 551 02d6 01F4      		brne .+2
 552 02d8 00C0      		rjmp .L34
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size += sizeof(NwkFrameHeader_t);
 553               		.loc 2 209 0
 554 02da 8D81      		ldd r24,Y+5
 555 02dc 9E81      		ldd r25,Y+6
 556 02de FC01      		movw r30,r24
 557 02e0 8181      		ldd r24,Z+1
 558 02e2 20E1      		ldi r18,lo8(16)
 559 02e4 280F      		add r18,r24
 560 02e6 8D81      		ldd r24,Y+5
 561 02e8 9E81      		ldd r25,Y+6
 562 02ea FC01      		movw r30,r24
 563 02ec 2183      		std Z+1,r18
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->payload += sizeof(NwkFrameHeader_t);
 564               		.loc 2 210 0
 565 02ee 8D81      		ldd r24,Y+5
 566 02f0 9E81      		ldd r25,Y+6
 567 02f2 8F57      		subi r24,127
 568 02f4 9F4F      		sbci r25,-1
 569 02f6 FC01      		movw r30,r24
 570 02f8 8081      		ld r24,Z
 571 02fa 9181      		ldd r25,Z+1
 572 02fc 9C01      		movw r18,r24
 573 02fe 205F      		subi r18,-16
 574 0300 3F4F      		sbci r19,-1
 575 0302 8D81      		ldd r24,Y+5
 576 0304 9E81      		ldd r25,Y+6
 577 0306 8F57      		subi r24,127
 578 0308 9F4F      		sbci r25,-1
 579 030a FC01      		movw r30,r24
 580 030c 3183      		std Z+1,r19
 581 030e 2083      		st Z,r18
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkFrameCommandInit(ack);
 582               		.loc 2 212 0
 583 0310 8981      		ldd r24,Y+1
 584 0312 9A81      		ldd r25,Y+2
 585 0314 0E94 0000 		call nwkFrameCommandInit
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->size += sizeof(NwkCommandAck_t);
 586               		.loc 2 214 0
 587 0318 8981      		ldd r24,Y+1
 588 031a 9A81      		ldd r25,Y+2
 589 031c FC01      		movw r30,r24
 590 031e 8181      		ldd r24,Z+1
 591 0320 23E0      		ldi r18,lo8(3)
 592 0322 280F      		add r18,r24
 593 0324 8981      		ldd r24,Y+1
 594 0326 9A81      		ldd r25,Y+2
 595 0328 FC01      		movw r30,r24
 596 032a 2183      		std Z+1,r18
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->tx.confirm = NULL;
 597               		.loc 2 215 0
 598 032c 8981      		ldd r24,Y+1
 599 032e 9A81      		ldd r25,Y+2
 600 0330 8957      		subi r24,121
 601 0332 9F4F      		sbci r25,-1
 602 0334 FC01      		movw r30,r24
 603 0336 1182      		std Z+1,__zero_reg__
 604 0338 1082      		st Z,__zero_reg__
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkFcf.security = frame->header.nwkFcf.security;
 605               		.loc 2 217 0
 606 033a 8D81      		ldd r24,Y+5
 607 033c 9E81      		ldd r25,Y+6
 608 033e FC01      		movw r30,r24
 609 0340 8385      		ldd r24,Z+11
 610 0342 81FB      		bst r24,1
 611 0344 2227      		clr r18
 612 0346 20F9      		bld r18,0
 613 0348 8981      		ldd r24,Y+1
 614 034a 9A81      		ldd r25,Y+2
 615 034c 2170      		andi r18,lo8(1)
 616 034e 220F      		lsl r18
 617 0350 FC01      		movw r30,r24
 618 0352 3385      		ldd r19,Z+11
 619 0354 3D7F      		andi r19,lo8(-3)
 620 0356 232B      		or r18,r19
 621 0358 FC01      		movw r30,r24
 622 035a 2387      		std Z+11,r18
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 623               		.loc 2 218 0
 624 035c 8D81      		ldd r24,Y+5
 625 035e 9E81      		ldd r25,Y+6
 626 0360 FC01      		movw r30,r24
 627 0362 2585      		ldd r18,Z+13
 628 0364 3685      		ldd r19,Z+14
 629 0366 8981      		ldd r24,Y+1
 630 0368 9A81      		ldd r25,Y+2
 631 036a FC01      		movw r30,r24
 632 036c 308B      		std Z+16,r19
 633 036e 2787      		std Z+15,r18
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command = (NwkCommandAck_t *)ack->payload;
 634               		.loc 2 220 0
 635 0370 8981      		ldd r24,Y+1
 636 0372 9A81      		ldd r25,Y+2
 637 0374 8F57      		subi r24,127
 638 0376 9F4F      		sbci r25,-1
 639 0378 FC01      		movw r30,r24
 640 037a 8081      		ld r24,Z
 641 037c 9181      		ldd r25,Z+1
 642 037e 9C83      		std Y+4,r25
 643 0380 8B83      		std Y+3,r24
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->id = NWK_COMMAND_ACK;
 644               		.loc 2 221 0
 645 0382 8B81      		ldd r24,Y+3
 646 0384 9C81      		ldd r25,Y+4
 647 0386 FC01      		movw r30,r24
 648 0388 1082      		st Z,__zero_reg__
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->control = nwkRxAckControl;
 649               		.loc 2 222 0
 650 038a 2091 0000 		lds r18,nwkRxAckControl
 651 038e 8B81      		ldd r24,Y+3
 652 0390 9C81      		ldd r25,Y+4
 653 0392 FC01      		movw r30,r24
 654 0394 2283      		std Z+2,r18
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->seq = frame->header.nwkSeq;
 655               		.loc 2 223 0
 656 0396 8D81      		ldd r24,Y+5
 657 0398 9E81      		ldd r25,Y+6
 658 039a FC01      		movw r30,r24
 659 039c 2485      		ldd r18,Z+12
 660 039e 8B81      		ldd r24,Y+3
 661 03a0 9C81      		ldd r25,Y+4
 662 03a2 FC01      		movw r30,r24
 663 03a4 2183      		std Z+1,r18
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkTxFrame(ack);
 664               		.loc 2 225 0
 665 03a6 8981      		ldd r24,Y+1
 666 03a8 9A81      		ldd r25,Y+2
 667 03aa 0E94 0000 		call nwkTxFrame
 668 03ae 00C0      		rjmp .L31
 669               	.L34:
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 670               		.loc 2 206 0
 671 03b0 0000      		nop
 672               	.L31:
 673               	/* epilogue start */
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 674               		.loc 2 226 0
 675 03b2 2696      		adiw r28,6
 676 03b4 0FB6      		in __tmp_reg__,__SREG__
 677 03b6 F894      		cli
 678 03b8 DEBF      		out __SP_H__,r29
 679 03ba 0FBE      		out __SREG__,__tmp_reg__
 680 03bc CDBF      		out __SP_L__,r28
 681 03be DF91      		pop r29
 682 03c0 CF91      		pop r28
 683 03c2 0895      		ret
 684               		.cfi_endproc
 685               	.LFE68:
 687               	.global	NWK_SetAckControl
 689               	NWK_SetAckControl:
 690               	.LFB69:
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void NWK_SetAckControl(uint8_t control)
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 691               		.loc 2 231 0
 692               		.cfi_startproc
 693 03c4 CF93      		push r28
 694               	.LCFI16:
 695               		.cfi_def_cfa_offset 3
 696               		.cfi_offset 28, -2
 697 03c6 DF93      		push r29
 698               	.LCFI17:
 699               		.cfi_def_cfa_offset 4
 700               		.cfi_offset 29, -3
 701 03c8 1F92      		push __zero_reg__
 702               	.LCFI18:
 703               		.cfi_def_cfa_offset 5
 704 03ca CDB7      		in r28,__SP_L__
 705 03cc DEB7      		in r29,__SP_H__
 706               	.LCFI19:
 707               		.cfi_def_cfa_register 28
 708               	/* prologue: function */
 709               	/* frame size = 1 */
 710               	/* stack size = 3 */
 711               	.L__stack_usage = 3
 712 03ce 8983      		std Y+1,r24
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = control;
 713               		.loc 2 232 0
 714 03d0 8981      		ldd r24,Y+1
 715 03d2 8093 0000 		sts nwkRxAckControl,r24
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 716               		.loc 2 233 0
 717 03d6 0000      		nop
 718               	/* epilogue start */
 719 03d8 0F90      		pop __tmp_reg__
 720 03da DF91      		pop r29
 721 03dc CF91      		pop r28
 722 03de 0895      		ret
 723               		.cfi_endproc
 724               	.LFE69:
 727               	nwkRxDuplicateRejectionTimerHandler:
 728               	.LFB70:
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxDecryptConf(NwkFrame_t *frame, bool status)
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (status) {
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_INDICATE;
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else {
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_FINISH;
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer)
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 729               		.loc 2 253 0
 730               		.cfi_startproc
 731 03e0 CF93      		push r28
 732               	.LCFI20:
 733               		.cfi_def_cfa_offset 3
 734               		.cfi_offset 28, -2
 735 03e2 DF93      		push r29
 736               	.LCFI21:
 737               		.cfi_def_cfa_offset 4
 738               		.cfi_offset 29, -3
 739 03e4 00D0      		rcall .
 740 03e6 00D0      		rcall .
 741               	.LCFI22:
 742               		.cfi_def_cfa_offset 8
 743 03e8 CDB7      		in r28,__SP_L__
 744 03ea DEB7      		in r29,__SP_H__
 745               	.LCFI23:
 746               		.cfi_def_cfa_register 28
 747               	/* prologue: function */
 748               	/* frame size = 4 */
 749               	/* stack size = 6 */
 750               	.L__stack_usage = 6
 751 03ec 9C83      		std Y+4,r25
 752 03ee 8B83      		std Y+3,r24
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool restart = false;
 753               		.loc 2 254 0
 754 03f0 1982      		std Y+1,__zero_reg__
 755               	.LBB3:
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 756               		.loc 2 256 0
 757 03f2 1A82      		std Y+2,__zero_reg__
 758 03f4 00C0      		rjmp .L37
 759               	.L39:
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 760               		.loc 2 257 0
 761 03f6 8A81      		ldd r24,Y+2
 762 03f8 282F      		mov r18,r24
 763 03fa 30E0      		ldi r19,0
 764 03fc C901      		movw r24,r18
 765 03fe 880F      		lsl r24
 766 0400 991F      		rol r25
 767 0402 880F      		lsl r24
 768 0404 991F      		rol r25
 769 0406 820F      		add r24,r18
 770 0408 931F      		adc r25,r19
 771 040a 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 772 040c 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 773 040e FC01      		movw r30,r24
 774 0410 8081      		ld r24,Z
 775 0412 8823      		tst r24
 776 0414 01F0      		breq .L38
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxDuplicateRejectionTable[i].ttl--;
 777               		.loc 2 258 0
 778 0416 8A81      		ldd r24,Y+2
 779 0418 282F      		mov r18,r24
 780 041a 30E0      		ldi r19,0
 781 041c C901      		movw r24,r18
 782 041e 880F      		lsl r24
 783 0420 991F      		rol r25
 784 0422 880F      		lsl r24
 785 0424 991F      		rol r25
 786 0426 820F      		add r24,r18
 787 0428 931F      		adc r25,r19
 788 042a 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 789 042c 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 790 042e FC01      		movw r30,r24
 791 0430 8081      		ld r24,Z
 792 0432 4FEF      		ldi r20,lo8(-1)
 793 0434 480F      		add r20,r24
 794 0436 C901      		movw r24,r18
 795 0438 880F      		lsl r24
 796 043a 991F      		rol r25
 797 043c 880F      		lsl r24
 798 043e 991F      		rol r25
 799 0440 820F      		add r24,r18
 800 0442 931F      		adc r25,r19
 801 0444 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 802 0446 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 803 0448 FC01      		movw r30,r24
 804 044a 4083      		st Z,r20
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			restart = true;
 805               		.loc 2 259 0
 806 044c 81E0      		ldi r24,lo8(1)
 807 044e 8983      		std Y+1,r24
 808               	.L38:
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 809               		.loc 2 256 0 discriminator 2
 810 0450 8A81      		ldd r24,Y+2
 811 0452 8F5F      		subi r24,lo8(-(1))
 812 0454 8A83      		std Y+2,r24
 813               	.L37:
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 814               		.loc 2 256 0 is_stmt 0 discriminator 1
 815 0456 8A81      		ldd r24,Y+2
 816 0458 8233      		cpi r24,lo8(50)
 817 045a 00F0      		brlo .L39
 818               	.LBE3:
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (restart) {
 819               		.loc 2 263 0 is_stmt 1
 820 045c 8981      		ldd r24,Y+1
 821 045e 8823      		tst r24
 822 0460 01F0      		breq .L41
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		SYS_TimerStart(timer);
 823               		.loc 2 264 0
 824 0462 8B81      		ldd r24,Y+3
 825 0464 9C81      		ldd r25,Y+4
 826 0466 0E94 0000 		call SYS_TimerStart
 827               	.L41:
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 828               		.loc 2 266 0
 829 046a 0000      		nop
 830               	/* epilogue start */
 831 046c 0F90      		pop __tmp_reg__
 832 046e 0F90      		pop __tmp_reg__
 833 0470 0F90      		pop __tmp_reg__
 834 0472 0F90      		pop __tmp_reg__
 835 0474 DF91      		pop r29
 836 0476 CF91      		pop r28
 837 0478 0895      		ret
 838               		.cfi_endproc
 839               	.LFE70:
 842               	nwkRxRejectDuplicate:
 843               	.LFB71:
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxRejectDuplicate(NwkFrameHeader_t *header)
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 844               		.loc 2 271 0
 845               		.cfi_startproc
 846 047a CF93      		push r28
 847               	.LCFI24:
 848               		.cfi_def_cfa_offset 3
 849               		.cfi_offset 28, -2
 850 047c DF93      		push r29
 851               	.LCFI25:
 852               		.cfi_def_cfa_offset 4
 853               		.cfi_offset 29, -3
 854 047e CDB7      		in r28,__SP_L__
 855 0480 DEB7      		in r29,__SP_H__
 856               	.LCFI26:
 857               		.cfi_def_cfa_register 28
 858 0482 2997      		sbiw r28,9
 859               	.LCFI27:
 860               		.cfi_def_cfa_offset 13
 861 0484 0FB6      		in __tmp_reg__,__SREG__
 862 0486 F894      		cli
 863 0488 DEBF      		out __SP_H__,r29
 864 048a 0FBE      		out __SREG__,__tmp_reg__
 865 048c CDBF      		out __SP_L__,r28
 866               	/* prologue: function */
 867               	/* frame size = 9 */
 868               	/* stack size = 11 */
 869               	.L__stack_usage = 11
 870 048e 9987      		std Y+9,r25
 871 0490 8887      		std Y+8,r24
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *entry;
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *freeEntry = NULL;
 872               		.loc 2 273 0
 873 0492 1A82      		std Y+2,__zero_reg__
 874 0494 1982      		std Y+1,__zero_reg__
 875               	.LBB4:
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 876               		.loc 2 275 0
 877 0496 1B82      		std Y+3,__zero_reg__
 878 0498 00C0      		rjmp .L43
 879               	.L49:
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 880               		.loc 2 276 0
 881 049a 8B81      		ldd r24,Y+3
 882 049c 282F      		mov r18,r24
 883 049e 30E0      		ldi r19,0
 884 04a0 C901      		movw r24,r18
 885 04a2 880F      		lsl r24
 886 04a4 991F      		rol r25
 887 04a6 880F      		lsl r24
 888 04a8 991F      		rol r25
 889 04aa 820F      		add r24,r18
 890 04ac 931F      		adc r25,r19
 891 04ae 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable))
 892 04b0 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable))
 893 04b2 9D83      		std Y+5,r25
 894 04b4 8C83      		std Y+4,r24
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (entry->ttl && header->nwkSrcAddr == entry->src) {
 895               		.loc 2 278 0
 896 04b6 8C81      		ldd r24,Y+4
 897 04b8 9D81      		ldd r25,Y+5
 898 04ba FC01      		movw r30,r24
 899 04bc 8481      		ldd r24,Z+4
 900 04be 8823      		tst r24
 901 04c0 01F4      		brne .+2
 902 04c2 00C0      		rjmp .L44
 903               		.loc 2 278 0 is_stmt 0 discriminator 1
 904 04c4 8885      		ldd r24,Y+8
 905 04c6 9985      		ldd r25,Y+9
 906 04c8 FC01      		movw r30,r24
 907 04ca 2385      		ldd r18,Z+11
 908 04cc 3485      		ldd r19,Z+12
 909 04ce 8C81      		ldd r24,Y+4
 910 04d0 9D81      		ldd r25,Y+5
 911 04d2 FC01      		movw r30,r24
 912 04d4 8081      		ld r24,Z
 913 04d6 9181      		ldd r25,Z+1
 914 04d8 2817      		cp r18,r24
 915 04da 3907      		cpc r19,r25
 916 04dc 01F0      		breq .+2
 917 04de 00C0      		rjmp .L44
 918               	.LBB5:
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			uint8_t diff = (int8_t)entry->seq - header->nwkSeq;
 919               		.loc 2 279 0 is_stmt 1
 920 04e0 8C81      		ldd r24,Y+4
 921 04e2 9D81      		ldd r25,Y+5
 922 04e4 FC01      		movw r30,r24
 923 04e6 2281      		ldd r18,Z+2
 924 04e8 8885      		ldd r24,Y+8
 925 04ea 9985      		ldd r25,Y+9
 926 04ec FC01      		movw r30,r24
 927 04ee 8285      		ldd r24,Z+10
 928 04f0 F22F      		mov r31,r18
 929 04f2 F81B      		sub r31,r24
 930 04f4 8F2F      		mov r24,r31
 931 04f6 8E83      		std Y+6,r24
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (diff < 8) {
 932               		.loc 2 281 0
 933 04f8 8E81      		ldd r24,Y+6
 934 04fa 8830      		cpi r24,lo8(8)
 935 04fc 00F4      		brsh .L45
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				if (entry->mask & (1 << diff)) {
 936               		.loc 2 282 0
 937 04fe 8C81      		ldd r24,Y+4
 938 0500 9D81      		ldd r25,Y+5
 939 0502 FC01      		movw r30,r24
 940 0504 8381      		ldd r24,Z+3
 941 0506 882F      		mov r24,r24
 942 0508 90E0      		ldi r25,0
 943 050a 2E81      		ldd r18,Y+6
 944 050c 222F      		mov r18,r18
 945 050e 30E0      		ldi r19,0
 946 0510 00C0      		rjmp 2f
 947               		1:
 948 0512 9595      		asr r25
 949 0514 8795      		ror r24
 950               		2:
 951 0516 2A95      		dec r18
 952 0518 02F4      		brpl 1b
 953 051a 8170      		andi r24,1
 954 051c 9927      		clr r25
 955 051e 892B      		or r24,r25
 956 0520 01F0      		breq .L46
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#ifdef NWK_ENABLE_ROUTING
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					if (nwkIb.addr == header->macDstAddr) {
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 						nwkRouteRemove(
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkDstAddr,
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkFcf.multicast);
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					}
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#endif
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					return true;
 957               		.loc 2 291 0
 958 0522 81E0      		ldi r24,lo8(1)
 959 0524 00C0      		rjmp .L47
 960               	.L46:
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				}
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask |= (1 << diff);
 961               		.loc 2 294 0
 962 0526 8C81      		ldd r24,Y+4
 963 0528 9D81      		ldd r25,Y+5
 964 052a FC01      		movw r30,r24
 965 052c 8381      		ldd r24,Z+3
 966 052e 482F      		mov r20,r24
 967 0530 8E81      		ldd r24,Y+6
 968 0532 282F      		mov r18,r24
 969 0534 30E0      		ldi r19,0
 970 0536 81E0      		ldi r24,lo8(1)
 971 0538 90E0      		ldi r25,0
 972 053a 00C0      		rjmp 2f
 973               		1:
 974 053c 880F      		lsl r24
 975 053e 991F      		rol r25
 976               		2:
 977 0540 2A95      		dec r18
 978 0542 02F4      		brpl 1b
 979 0544 842B      		or r24,r20
 980 0546 282F      		mov r18,r24
 981 0548 8C81      		ldd r24,Y+4
 982 054a 9D81      		ldd r25,Y+5
 983 054c FC01      		movw r30,r24
 984 054e 2383      		std Z+3,r18
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 985               		.loc 2 295 0
 986 0550 80E0      		ldi r24,0
 987 0552 00C0      		rjmp .L47
 988               	.L45:
 989               	.LBB6:
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				uint8_t shift = -(int8_t)diff;
 990               		.loc 2 297 0
 991 0554 8E81      		ldd r24,Y+6
 992 0556 8195      		neg r24
 993 0558 8F83      		std Y+7,r24
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->seq = header->nwkSeq;
 994               		.loc 2 299 0
 995 055a 8885      		ldd r24,Y+8
 996 055c 9985      		ldd r25,Y+9
 997 055e FC01      		movw r30,r24
 998 0560 2285      		ldd r18,Z+10
 999 0562 8C81      		ldd r24,Y+4
 1000 0564 9D81      		ldd r25,Y+5
 1001 0566 FC01      		movw r30,r24
 1002 0568 2283      		std Z+2,r18
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask = (entry->mask << shift) | 1;
 1003               		.loc 2 300 0
 1004 056a 8C81      		ldd r24,Y+4
 1005 056c 9D81      		ldd r25,Y+5
 1006 056e FC01      		movw r30,r24
 1007 0570 8381      		ldd r24,Z+3
 1008 0572 882F      		mov r24,r24
 1009 0574 90E0      		ldi r25,0
 1010 0576 2F81      		ldd r18,Y+7
 1011 0578 222F      		mov r18,r18
 1012 057a 30E0      		ldi r19,0
 1013 057c 00C0      		rjmp 2f
 1014               		1:
 1015 057e 880F      		lsl r24
 1016 0580 991F      		rol r25
 1017               		2:
 1018 0582 2A95      		dec r18
 1019 0584 02F4      		brpl 1b
 1020 0586 8160      		ori r24,lo8(1)
 1021 0588 282F      		mov r18,r24
 1022 058a 8C81      		ldd r24,Y+4
 1023 058c 9D81      		ldd r25,Y+5
 1024 058e FC01      		movw r30,r24
 1025 0590 2383      		std Z+3,r18
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->ttl = DUPLICATE_REJECTION_TTL;
 1026               		.loc 2 301 0
 1027 0592 8C81      		ldd r24,Y+4
 1028 0594 9D81      		ldd r25,Y+5
 1029 0596 25E1      		ldi r18,lo8(21)
 1030 0598 FC01      		movw r30,r24
 1031 059a 2483      		std Z+4,r18
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1032               		.loc 2 302 0
 1033 059c 80E0      		ldi r24,0
 1034 059e 00C0      		rjmp .L47
 1035               	.L44:
 1036               	.LBE6:
 1037               	.LBE5:
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (0 == entry->ttl) {
 1038               		.loc 2 306 0
 1039 05a0 8C81      		ldd r24,Y+4
 1040 05a2 9D81      		ldd r25,Y+5
 1041 05a4 FC01      		movw r30,r24
 1042 05a6 8481      		ldd r24,Z+4
 1043 05a8 8823      		tst r24
 1044 05aa 01F4      		brne .L48
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			freeEntry = entry;
 1045               		.loc 2 307 0
 1046 05ac 8C81      		ldd r24,Y+4
 1047 05ae 9D81      		ldd r25,Y+5
 1048 05b0 9A83      		std Y+2,r25
 1049 05b2 8983      		std Y+1,r24
 1050               	.L48:
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1051               		.loc 2 275 0 discriminator 2
 1052 05b4 8B81      		ldd r24,Y+3
 1053 05b6 8F5F      		subi r24,lo8(-(1))
 1054 05b8 8B83      		std Y+3,r24
 1055               	.L43:
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1056               		.loc 2 275 0 is_stmt 0 discriminator 1
 1057 05ba 8B81      		ldd r24,Y+3
 1058 05bc 8233      		cpi r24,lo8(50)
 1059 05be 00F4      		brsh .+2
 1060 05c0 00C0      		rjmp .L49
 1061               	.LBE4:
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == freeEntry) {
 1062               		.loc 2 311 0 is_stmt 1
 1063 05c2 8981      		ldd r24,Y+1
 1064 05c4 9A81      		ldd r25,Y+2
 1065 05c6 892B      		or r24,r25
 1066 05c8 01F4      		brne .L50
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return true;
 1067               		.loc 2 312 0
 1068 05ca 81E0      		ldi r24,lo8(1)
 1069 05cc 00C0      		rjmp .L47
 1070               	.L50:
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->src = header->nwkSrcAddr;
 1071               		.loc 2 315 0
 1072 05ce 8885      		ldd r24,Y+8
 1073 05d0 9985      		ldd r25,Y+9
 1074 05d2 FC01      		movw r30,r24
 1075 05d4 2385      		ldd r18,Z+11
 1076 05d6 3485      		ldd r19,Z+12
 1077 05d8 8981      		ldd r24,Y+1
 1078 05da 9A81      		ldd r25,Y+2
 1079 05dc FC01      		movw r30,r24
 1080 05de 3183      		std Z+1,r19
 1081 05e0 2083      		st Z,r18
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->seq = header->nwkSeq;
 1082               		.loc 2 316 0
 1083 05e2 8885      		ldd r24,Y+8
 1084 05e4 9985      		ldd r25,Y+9
 1085 05e6 FC01      		movw r30,r24
 1086 05e8 2285      		ldd r18,Z+10
 1087 05ea 8981      		ldd r24,Y+1
 1088 05ec 9A81      		ldd r25,Y+2
 1089 05ee FC01      		movw r30,r24
 1090 05f0 2283      		std Z+2,r18
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->mask = 1;
 1091               		.loc 2 317 0
 1092 05f2 8981      		ldd r24,Y+1
 1093 05f4 9A81      		ldd r25,Y+2
 1094 05f6 21E0      		ldi r18,lo8(1)
 1095 05f8 FC01      		movw r30,r24
 1096 05fa 2383      		std Z+3,r18
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->ttl = DUPLICATE_REJECTION_TTL;
 1097               		.loc 2 318 0
 1098 05fc 8981      		ldd r24,Y+1
 1099 05fe 9A81      		ldd r25,Y+2
 1100 0600 25E1      		ldi r18,lo8(21)
 1101 0602 FC01      		movw r30,r24
 1102 0604 2483      		std Z+4,r18
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 1103               		.loc 2 320 0
 1104 0606 80E0      		ldi r24,lo8(nwkRxDuplicateRejectionTimer)
 1105 0608 90E0      		ldi r25,hi8(nwkRxDuplicateRejectionTimer)
 1106 060a 0E94 0000 		call SYS_TimerStart
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1107               		.loc 2 322 0
 1108 060e 80E0      		ldi r24,0
 1109               	.L47:
 1110               	/* epilogue start */
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1111               		.loc 2 323 0
 1112 0610 2996      		adiw r28,9
 1113 0612 0FB6      		in __tmp_reg__,__SREG__
 1114 0614 F894      		cli
 1115 0616 DEBF      		out __SP_H__,r29
 1116 0618 0FBE      		out __SREG__,__tmp_reg__
 1117 061a CDBF      		out __SP_L__,r28
 1118 061c DF91      		pop r29
 1119 061e CF91      		pop r28
 1120 0620 0895      		ret
 1121               		.cfi_endproc
 1122               	.LFE71:
 1125               	nwkRxSeriveDataInd:
 1126               	.LFB72:
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind)
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1127               		.loc 2 328 0
 1128               		.cfi_startproc
 1129 0622 CF93      		push r28
 1130               	.LCFI28:
 1131               		.cfi_def_cfa_offset 3
 1132               		.cfi_offset 28, -2
 1133 0624 DF93      		push r29
 1134               	.LCFI29:
 1135               		.cfi_def_cfa_offset 4
 1136               		.cfi_offset 29, -3
 1137 0626 00D0      		rcall .
 1138               	.LCFI30:
 1139               		.cfi_def_cfa_offset 6
 1140 0628 CDB7      		in r28,__SP_L__
 1141 062a DEB7      		in r29,__SP_H__
 1142               	.LCFI31:
 1143               		.cfi_def_cfa_register 28
 1144               	/* prologue: function */
 1145               	/* frame size = 2 */
 1146               	/* stack size = 4 */
 1147               	.L__stack_usage = 4
 1148 062c 9A83      		std Y+2,r25
 1149 062e 8983      		std Y+1,r24
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == (ind->options & NWK_IND_OPT_SECURED)) {
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ind->size < 1) {
 1150               		.loc 2 336 0
 1151 0630 8981      		ldd r24,Y+1
 1152 0632 9A81      		ldd r25,Y+2
 1153 0634 FC01      		movw r30,r24
 1154 0636 8285      		ldd r24,Z+10
 1155 0638 8823      		tst r24
 1156 063a 01F4      		brne .L52
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1157               		.loc 2 337 0
 1158 063c 80E0      		ldi r24,0
 1159 063e 00C0      		rjmp .L53
 1160               	.L52:
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	switch (ind->data[0]) {
 1161               		.loc 2 340 0
 1162 0640 8981      		ldd r24,Y+1
 1163 0642 9A81      		ldd r25,Y+2
 1164 0644 FC01      		movw r30,r24
 1165 0646 8085      		ldd r24,Z+8
 1166 0648 9185      		ldd r25,Z+9
 1167 064a FC01      		movw r30,r24
 1168 064c 8081      		ld r24,Z
 1169 064e 882F      		mov r24,r24
 1170 0650 90E0      		ldi r25,0
 1171 0652 892B      		or r24,r25
 1172 0654 01F4      		brne .L56
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ACK:
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkTxAckReceived(ind);
 1173               		.loc 2 342 0
 1174 0656 8981      		ldd r24,Y+1
 1175 0658 9A81      		ldd r25,Y+2
 1176 065a 0E94 0000 		call nwkTxAckReceived
 1177 065e 00C0      		rjmp .L53
 1178               	.L56:
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_ERROR:
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteErrorReceived(ind);
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTE_DISCOVERY
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REQUEST:
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryRequestReceived(ind);
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REPLY:
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryReplyReceived(ind);
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	default:
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1179               		.loc 2 360 0
 1180 0660 80E0      		ldi r24,0
 1181               	.L53:
 1182               	/* epilogue start */
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1183               		.loc 2 362 0
 1184 0662 0F90      		pop __tmp_reg__
 1185 0664 0F90      		pop __tmp_reg__
 1186 0666 DF91      		pop r29
 1187 0668 CF91      		pop r28
 1188 066a 0895      		ret
 1189               		.cfi_endproc
 1190               	.LFE72:
 1193               	nwkRxHandleReceivedFrame:
 1194               	.LFB73:
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleReceivedFrame(NwkFrame_t *frame)
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1195               		.loc 2 367 0
 1196               		.cfi_startproc
 1197 066c CF93      		push r28
 1198               	.LCFI32:
 1199               		.cfi_def_cfa_offset 3
 1200               		.cfi_offset 28, -2
 1201 066e DF93      		push r29
 1202               	.LCFI33:
 1203               		.cfi_def_cfa_offset 4
 1204               		.cfi_offset 29, -3
 1205 0670 CDB7      		in r28,__SP_L__
 1206 0672 DEB7      		in r29,__SP_H__
 1207               	.LCFI34:
 1208               		.cfi_def_cfa_register 28
 1209 0674 2897      		sbiw r28,8
 1210               	.LCFI35:
 1211               		.cfi_def_cfa_offset 12
 1212 0676 0FB6      		in __tmp_reg__,__SREG__
 1213 0678 F894      		cli
 1214 067a DEBF      		out __SP_H__,r29
 1215 067c 0FBE      		out __SREG__,__tmp_reg__
 1216 067e CDBF      		out __SP_L__,r28
 1217               	/* prologue: function */
 1218               	/* frame size = 8 */
 1219               	/* stack size = 10 */
 1220               	.L__stack_usage = 10
 1221 0680 9887      		std Y+8,r25
 1222 0682 8F83      		std Y+7,r24
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1223               		.loc 2 368 0
 1224 0684 8F81      		ldd r24,Y+7
 1225 0686 9885      		ldd r25,Y+8
 1226 0688 0296      		adiw r24,2
 1227 068a 9B83      		std Y+3,r25
 1228 068c 8A83      		std Y+2,r24
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1229               		.loc 2 370 0
 1230 068e 8F81      		ldd r24,Y+7
 1231 0690 9885      		ldd r25,Y+8
 1232 0692 24E2      		ldi r18,lo8(36)
 1233 0694 FC01      		movw r30,r24
 1234 0696 2083      		st Z,r18
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifndef NWK_ENABLE_SECURITY
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.security) {
 1235               		.loc 2 373 0
 1236 0698 8A81      		ldd r24,Y+2
 1237 069a 9B81      		ldd r25,Y+3
 1238 069c FC01      		movw r30,r24
 1239 069e 8185      		ldd r24,Z+9
 1240 06a0 8270      		andi r24,lo8(2)
 1241 06a2 8823      		tst r24
 1242 06a4 01F0      		breq .+2
 1243 06a6 00C0      		rjmp .L78
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast && header->nwkFcf.ackRequest) {
 1244               		.loc 2 380 0
 1245 06a8 8A81      		ldd r24,Y+2
 1246 06aa 9B81      		ldd r25,Y+3
 1247 06ac FC01      		movw r30,r24
 1248 06ae 8185      		ldd r24,Z+9
 1249 06b0 8870      		andi r24,lo8(8)
 1250 06b2 8823      		tst r24
 1251 06b4 01F0      		breq .L60
 1252               		.loc 2 380 0 is_stmt 0 discriminator 1
 1253 06b6 8A81      		ldd r24,Y+2
 1254 06b8 9B81      		ldd r25,Y+3
 1255 06ba FC01      		movw r30,r24
 1256 06bc 8185      		ldd r24,Z+9
 1257 06be 8170      		andi r24,lo8(1)
 1258 06c0 8823      		tst r24
 1259 06c2 01F0      		breq .+2
 1260 06c4 00C0      		rjmp .L79
 1261               	.L60:
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #else
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == header->macDstPanId)
 1262               		.loc 2 391 0 is_stmt 1
 1263 06c6 8A81      		ldd r24,Y+2
 1264 06c8 9B81      		ldd r25,Y+3
 1265 06ca FC01      		movw r30,r24
 1266 06cc 8381      		ldd r24,Z+3
 1267 06ce 9481      		ldd r25,Z+4
 1268 06d0 0196      		adiw r24,1
 1269 06d2 01F4      		brne .L61
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR == header->nwkDstAddr)
 1270               		.loc 2 393 0
 1271 06d4 2091 0000 		lds r18,nwkIb
 1272 06d8 3091 0000 		lds r19,nwkIb+1
 1273 06dc 8A81      		ldd r24,Y+2
 1274 06de 9B81      		ldd r25,Y+3
 1275 06e0 FC01      		movw r30,r24
 1276 06e2 8585      		ldd r24,Z+13
 1277 06e4 9685      		ldd r25,Z+14
 1278 06e6 2817      		cp r18,r24
 1279 06e8 3907      		cpc r19,r25
 1280 06ea 01F0      		breq .L62
 1281               		.loc 2 393 0 is_stmt 0 discriminator 1
 1282 06ec 8A81      		ldd r24,Y+2
 1283 06ee 9B81      		ldd r25,Y+3
 1284 06f0 FC01      		movw r30,r24
 1285 06f2 8585      		ldd r24,Z+13
 1286 06f4 9685      		ldd r25,Z+14
 1287 06f6 0196      		adiw r24,1
 1288 06f8 01F0      		breq .+2
 1289 06fa 00C0      		rjmp .L80
 1290               	.L62:
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security)
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			{
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1291               		.loc 2 402 0 is_stmt 1
 1292 06fc 8F81      		ldd r24,Y+7
 1293 06fe 9885      		ldd r25,Y+8
 1294 0700 22E2      		ldi r18,lo8(34)
 1295 0702 FC01      		movw r30,r24
 1296 0704 2083      		st Z,r18
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 1297               		.loc 2 405 0
 1298 0706 00C0      		rjmp .L80
 1299               	.L61:
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ADDRESS_FILTER
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (!NWK_FilterAddress(header->macSrcAddr, &frame->rx.lqi)) {
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == header->nwkDstAddr && header->nwkFcf.ackRequest)
 1300               		.loc 2 415 0
 1301 0708 8A81      		ldd r24,Y+2
 1302 070a 9B81      		ldd r25,Y+3
 1303 070c FC01      		movw r30,r24
 1304 070e 8585      		ldd r24,Z+13
 1305 0710 9685      		ldd r25,Z+14
 1306 0712 0196      		adiw r24,1
 1307 0714 01F4      		brne .L64
 1308               		.loc 2 415 0 is_stmt 0 discriminator 1
 1309 0716 8A81      		ldd r24,Y+2
 1310 0718 9B81      		ldd r25,Y+3
 1311 071a FC01      		movw r30,r24
 1312 071c 8185      		ldd r24,Z+9
 1313 071e 8170      		andi r24,lo8(1)
 1314 0720 8823      		tst r24
 1315 0722 01F0      		breq .+2
 1316 0724 00C0      		rjmp .L81
 1317               	.L64:
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkIb.addr == header->nwkSrcAddr)
 1318               		.loc 2 420 0 is_stmt 1
 1319 0726 2091 0000 		lds r18,nwkIb
 1320 072a 3091 0000 		lds r19,nwkIb+1
 1321 072e 8A81      		ldd r24,Y+2
 1322 0730 9B81      		ldd r25,Y+3
 1323 0732 FC01      		movw r30,r24
 1324 0734 8385      		ldd r24,Z+11
 1325 0736 9485      		ldd r25,Z+12
 1326 0738 2817      		cp r18,r24
 1327 073a 3907      		cpc r19,r25
 1328 073c 01F4      		brne .+2
 1329 073e 00C0      		rjmp .L82
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRouteFrameReceived(frame);
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkRxRejectDuplicate(header))
 1330               		.loc 2 429 0
 1331 0740 8A81      		ldd r24,Y+2
 1332 0742 9B81      		ldd r25,Y+3
 1333 0744 0E94 0000 		call nwkRxRejectDuplicate
 1334 0748 8823      		tst r24
 1335 074a 01F0      		breq .+2
 1336 074c 00C0      		rjmp .L83
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 1337               		.loc 2 435 0
 1338 074e 8A81      		ldd r24,Y+2
 1339 0750 9B81      		ldd r25,Y+3
 1340 0752 FC01      		movw r30,r24
 1341 0754 8185      		ldd r24,Z+9
 1342 0756 8870      		andi r24,lo8(8)
 1343 0758 8823      		tst r24
 1344 075a 01F4      		brne .+2
 1345 075c 00C0      		rjmp .L67
 1346               	.LBB7:
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameMulticastHeader_t *mcHeader
 1347               		.loc 2 436 0
 1348 075e 8F81      		ldd r24,Y+7
 1349 0760 9885      		ldd r25,Y+8
 1350 0762 8F57      		subi r24,127
 1351 0764 9F4F      		sbci r25,-1
 1352 0766 FC01      		movw r30,r24
 1353 0768 8081      		ld r24,Z
 1354 076a 9181      		ldd r25,Z+1
 1355 076c 9D83      		std Y+5,r25
 1356 076e 8C83      		std Y+4,r24
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			= (NwkFrameMulticastHeader_t *)frame->payload;
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool member = NWK_GroupIsMember(header->nwkDstAddr);
 1357               		.loc 2 438 0
 1358 0770 8A81      		ldd r24,Y+2
 1359 0772 9B81      		ldd r25,Y+3
 1360 0774 FC01      		movw r30,r24
 1361 0776 8585      		ldd r24,Z+13
 1362 0778 9685      		ldd r25,Z+14
 1363 077a 0E94 0000 		call NWK_GroupIsMember
 1364 077e 8E83      		std Y+6,r24
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool broadcast = false;
 1365               		.loc 2 439 0
 1366 0780 1982      		std Y+1,__zero_reg__
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 1367               		.loc 2 441 0
 1368 0782 8A81      		ldd r24,Y+2
 1369 0784 9B81      		ldd r25,Y+3
 1370 0786 FC01      		movw r30,r24
 1371 0788 8581      		ldd r24,Z+5
 1372 078a 9681      		ldd r25,Z+6
 1373 078c 0196      		adiw r24,1
 1374 078e 01F0      		breq .+2
 1375 0790 00C0      		rjmp .L68
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1376               		.loc 2 442 0
 1377 0792 8E81      		ldd r24,Y+6
 1378 0794 8823      		tst r24
 1379 0796 01F0      		breq .L69
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->memberRadius > 0;
 1380               		.loc 2 443 0
 1381 0798 8C81      		ldd r24,Y+4
 1382 079a 9D81      		ldd r25,Y+5
 1383 079c FC01      		movw r30,r24
 1384 079e 8181      		ldd r24,Z+1
 1385 07a0 8F70      		andi r24,lo8(15)
 1386 07a2 882F      		mov r24,r24
 1387 07a4 90E0      		ldi r25,0
 1388 07a6 21E0      		ldi r18,lo8(1)
 1389 07a8 1816      		cp __zero_reg__,r24
 1390 07aa 1906      		cpc __zero_reg__,r25
 1391 07ac 04F0      		brlt .L70
 1392 07ae 20E0      		ldi r18,0
 1393               	.L70:
 1394 07b0 2983      		std Y+1,r18
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius--;
 1395               		.loc 2 444 0
 1396 07b2 8C81      		ldd r24,Y+4
 1397 07b4 9D81      		ldd r25,Y+5
 1398 07b6 FC01      		movw r30,r24
 1399 07b8 8181      		ldd r24,Z+1
 1400 07ba 8F70      		andi r24,lo8(15)
 1401 07bc 2FE0      		ldi r18,lo8(15)
 1402 07be 280F      		add r18,r24
 1403 07c0 2F70      		andi r18,lo8(15)
 1404 07c2 8C81      		ldd r24,Y+4
 1405 07c4 9D81      		ldd r25,Y+5
 1406 07c6 2F70      		andi r18,lo8(15)
 1407 07c8 FC01      		movw r30,r24
 1408 07ca 3181      		ldd r19,Z+1
 1409 07cc 307F      		andi r19,lo8(-16)
 1410 07ce 232B      		or r18,r19
 1411 07d0 FC01      		movw r30,r24
 1412 07d2 2183      		std Z+1,r18
 445:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxNonMemberRadius;
 1413               		.loc 2 446 0
 1414 07d4 8C81      		ldd r24,Y+4
 1415 07d6 9D81      		ldd r25,Y+5
 1416 07d8 FC01      		movw r30,r24
 1417 07da 8081      		ld r24,Z
 1418 07dc 282F      		mov r18,r24
 1419 07de 2295      		swap r18
 1420 07e0 2F70      		andi r18,lo8(15)
 1421 07e2 8C81      		ldd r24,Y+4
 1422 07e4 9D81      		ldd r25,Y+5
 1423 07e6 2F70      		andi r18,lo8(15)
 1424 07e8 FC01      		movw r30,r24
 1425 07ea 3081      		ld r19,Z
 1426 07ec 307F      		andi r19,lo8(-16)
 1427 07ee 232B      		or r18,r19
 1428 07f0 FC01      		movw r30,r24
 1429 07f2 2083      		st Z,r18
 1430 07f4 00C0      		rjmp .L73
 1431               	.L69:
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->nonMemberRadius > 0;
 1432               		.loc 2 448 0
 1433 07f6 8C81      		ldd r24,Y+4
 1434 07f8 9D81      		ldd r25,Y+5
 1435 07fa FC01      		movw r30,r24
 1436 07fc 8081      		ld r24,Z
 1437 07fe 8F70      		andi r24,lo8(15)
 1438 0800 882F      		mov r24,r24
 1439 0802 90E0      		ldi r25,0
 1440 0804 21E0      		ldi r18,lo8(1)
 1441 0806 1816      		cp __zero_reg__,r24
 1442 0808 1906      		cpc __zero_reg__,r25
 1443 080a 04F0      		brlt .L72
 1444 080c 20E0      		ldi r18,0
 1445               	.L72:
 1446 080e 2983      		std Y+1,r18
 449:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius--;
 1447               		.loc 2 449 0
 1448 0810 8C81      		ldd r24,Y+4
 1449 0812 9D81      		ldd r25,Y+5
 1450 0814 FC01      		movw r30,r24
 1451 0816 8081      		ld r24,Z
 1452 0818 8F70      		andi r24,lo8(15)
 1453 081a 2FE0      		ldi r18,lo8(15)
 1454 081c 280F      		add r18,r24
 1455 081e 2F70      		andi r18,lo8(15)
 1456 0820 8C81      		ldd r24,Y+4
 1457 0822 9D81      		ldd r25,Y+5
 1458 0824 2F70      		andi r18,lo8(15)
 1459 0826 FC01      		movw r30,r24
 1460 0828 3081      		ld r19,Z
 1461 082a 307F      		andi r19,lo8(-16)
 1462 082c 232B      		or r18,r19
 1463 082e FC01      		movw r30,r24
 1464 0830 2083      		st Z,r18
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius
 451:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxMemberRadius;
 1465               		.loc 2 451 0
 1466 0832 8C81      		ldd r24,Y+4
 1467 0834 9D81      		ldd r25,Y+5
 1468 0836 FC01      		movw r30,r24
 1469 0838 8181      		ldd r24,Z+1
 1470 083a 282F      		mov r18,r24
 1471 083c 2295      		swap r18
 1472 083e 2F70      		andi r18,lo8(15)
 1473 0840 8C81      		ldd r24,Y+4
 1474 0842 9D81      		ldd r25,Y+5
 1475 0844 2F70      		andi r18,lo8(15)
 1476 0846 FC01      		movw r30,r24
 1477 0848 3181      		ldd r19,Z+1
 1478 084a 307F      		andi r19,lo8(-16)
 1479 084c 232B      		or r18,r19
 1480 084e FC01      		movw r30,r24
 1481 0850 2183      		std Z+1,r18
 1482 0852 00C0      		rjmp .L73
 1483               	.L68:
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		} else {
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1484               		.loc 2 454 0
 1485 0854 8E81      		ldd r24,Y+6
 1486 0856 8823      		tst r24
 1487 0858 01F0      		breq .L73
 455:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = true;
 1488               		.loc 2 455 0
 1489 085a 81E0      		ldi r24,lo8(1)
 1490 085c 8983      		std Y+1,r24
 456:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkFcf.linkLocal = 1;
 1491               		.loc 2 456 0
 1492 085e 8A81      		ldd r24,Y+2
 1493 0860 9B81      		ldd r25,Y+3
 1494 0862 FC01      		movw r30,r24
 1495 0864 2185      		ldd r18,Z+9
 1496 0866 2460      		ori r18,lo8(4)
 1497 0868 FC01      		movw r30,r24
 1498 086a 2187      		std Z+9,r18
 1499               	.L73:
 457:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 458:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_ROUTING
 460:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else {
 461:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_ROUTE;
 462:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 463:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 464:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 465:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 466:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (broadcast) {
 1500               		.loc 2 466 0
 1501 086c 8981      		ldd r24,Y+1
 1502 086e 8823      		tst r24
 1503 0870 01F0      		breq .L74
 467:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1504               		.loc 2 467 0
 1505 0872 8F81      		ldd r24,Y+7
 1506 0874 9885      		ldd r25,Y+8
 1507 0876 0E94 0000 		call nwkTxBroadcastFrame
 1508               	.L74:
 468:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 469:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 470:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (member) {
 1509               		.loc 2 470 0
 1510 087a 8E81      		ldd r24,Y+6
 1511 087c 8823      		tst r24
 1512 087e 01F4      		brne .+2
 1513 0880 00C0      		rjmp .L57
 471:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 1514               		.loc 2 471 0
 1515 0882 8F81      		ldd r24,Y+7
 1516 0884 9885      		ldd r25,Y+8
 1517 0886 8F57      		subi r24,127
 1518 0888 9F4F      		sbci r25,-1
 1519 088a FC01      		movw r30,r24
 1520 088c 8081      		ld r24,Z
 1521 088e 9181      		ldd r25,Z+1
 1522 0890 9C01      		movw r18,r24
 1523 0892 2E5F      		subi r18,-2
 1524 0894 3F4F      		sbci r19,-1
 1525 0896 8F81      		ldd r24,Y+7
 1526 0898 9885      		ldd r25,Y+8
 1527 089a 8F57      		subi r24,127
 1528 089c 9F4F      		sbci r25,-1
 1529 089e FC01      		movw r30,r24
 1530 08a0 3183      		std Z+1,r19
 1531 08a2 2083      		st Z,r18
 472:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 473:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 474:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 475:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 476:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 477:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 478:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1532               		.loc 2 478 0
 1533 08a4 8F81      		ldd r24,Y+7
 1534 08a6 9885      		ldd r25,Y+8
 1535 08a8 22E2      		ldi r18,lo8(34)
 1536 08aa FC01      		movw r30,r24
 1537 08ac 2083      		st Z,r18
 1538 08ae 00C0      		rjmp .L57
 1539               	.L67:
 1540               	.LBE7:
 479:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 480:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else
 481:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif /* NWK_ENABLE_MULTICAST */
 482:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr && nwkIb.addr !=
 1541               		.loc 2 483 0
 1542 08b0 8A81      		ldd r24,Y+2
 1543 08b2 9B81      		ldd r25,Y+3
 1544 08b4 FC01      		movw r30,r24
 1545 08b6 8581      		ldd r24,Z+5
 1546 08b8 9681      		ldd r25,Z+6
 1547 08ba 0196      		adiw r24,1
 1548 08bc 01F4      		brne .L76
 1549               		.loc 2 483 0 is_stmt 0 discriminator 1
 1550 08be 2091 0000 		lds r18,nwkIb
 1551 08c2 3091 0000 		lds r19,nwkIb+1
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1552               		.loc 2 484 0 is_stmt 1 discriminator 1
 1553 08c6 8A81      		ldd r24,Y+2
 1554 08c8 9B81      		ldd r25,Y+3
 1555 08ca FC01      		movw r30,r24
 1556 08cc 8585      		ldd r24,Z+13
 1557 08ce 9685      		ldd r25,Z+14
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1558               		.loc 2 483 0 discriminator 1
 1559 08d0 2817      		cp r18,r24
 1560 08d2 3907      		cpc r19,r25
 1561 08d4 01F0      		breq .L76
 485:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				0 == header->nwkFcf.linkLocal) {
 1562               		.loc 2 485 0
 1563 08d6 8A81      		ldd r24,Y+2
 1564 08d8 9B81      		ldd r25,Y+3
 1565 08da FC01      		movw r30,r24
 1566 08dc 8185      		ldd r24,Z+9
 1567 08de 8470      		andi r24,lo8(4)
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1568               		.loc 2 484 0
 1569 08e0 8823      		tst r24
 1570 08e2 01F4      		brne .L76
 486:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1571               		.loc 2 486 0
 1572 08e4 8F81      		ldd r24,Y+7
 1573 08e6 9885      		ldd r25,Y+8
 1574 08e8 0E94 0000 		call nwkTxBroadcastFrame
 1575               	.L76:
 487:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR ==
 1576               		.loc 2 489 0
 1577 08ec 2091 0000 		lds r18,nwkIb
 1578 08f0 3091 0000 		lds r19,nwkIb+1
 1579 08f4 8A81      		ldd r24,Y+2
 1580 08f6 9B81      		ldd r25,Y+3
 1581 08f8 FC01      		movw r30,r24
 1582 08fa 8585      		ldd r24,Z+13
 1583 08fc 9685      		ldd r25,Z+14
 1584 08fe 2817      		cp r18,r24
 1585 0900 3907      		cpc r19,r25
 1586 0902 01F0      		breq .L77
 490:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1587               		.loc 2 490 0 discriminator 1
 1588 0904 8A81      		ldd r24,Y+2
 1589 0906 9B81      		ldd r25,Y+3
 1590 0908 FC01      		movw r30,r24
 1591 090a 8585      		ldd r24,Z+13
 1592 090c 9685      		ldd r25,Z+14
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1593               		.loc 2 489 0 discriminator 1
 1594 090e 0196      		adiw r24,1
 1595 0910 01F4      		brne .L57
 1596               	.L77:
 491:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 492:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 495:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 496:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1597               		.loc 2 496 0
 1598 0912 8F81      		ldd r24,Y+7
 1599 0914 9885      		ldd r25,Y+8
 1600 0916 22E2      		ldi r18,lo8(34)
 1601 0918 FC01      		movw r30,r24
 1602 091a 2083      		st Z,r18
 1603 091c 00C0      		rjmp .L57
 1604               	.L78:
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1605               		.loc 2 374 0
 1606 091e 0000      		nop
 1607 0920 00C0      		rjmp .L57
 1608               	.L79:
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1609               		.loc 2 381 0
 1610 0922 0000      		nop
 1611 0924 00C0      		rjmp .L57
 1612               	.L80:
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1613               		.loc 2 405 0
 1614 0926 0000      		nop
 1615 0928 00C0      		rjmp .L57
 1616               	.L81:
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1617               		.loc 2 417 0
 1618 092a 0000      		nop
 1619 092c 00C0      		rjmp .L57
 1620               	.L82:
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1621               		.loc 2 422 0
 1622 092e 0000      		nop
 1623 0930 00C0      		rjmp .L57
 1624               	.L83:
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1625               		.loc 2 431 0
 1626 0932 0000      		nop
 1627               	.L57:
 1628               	/* epilogue start */
 497:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #ifdef NWK_ENABLE_ROUTING
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if (nwkIb.addr == header->macDstAddr) {
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_ROUTE;
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #endif
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1629               		.loc 2 505 0
 1630 0934 2896      		adiw r28,8
 1631 0936 0FB6      		in __tmp_reg__,__SREG__
 1632 0938 F894      		cli
 1633 093a DEBF      		out __SP_H__,r29
 1634 093c 0FBE      		out __SREG__,__tmp_reg__
 1635 093e CDBF      		out __SP_L__,r28
 1636 0940 DF91      		pop r29
 1637 0942 CF91      		pop r28
 1638 0944 0895      		ret
 1639               		.cfi_endproc
 1640               	.LFE73:
 1643               	nwkRxIndicateDataFrame:
 1644               	.LFB74:
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 507:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 509:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateDataFrame(NwkFrame_t *frame)
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1645               		.loc 2 510 0
 1646               		.cfi_startproc
 1647 0946 CF93      		push r28
 1648               	.LCFI36:
 1649               		.cfi_def_cfa_offset 3
 1650               		.cfi_offset 28, -2
 1651 0948 DF93      		push r29
 1652               	.LCFI37:
 1653               		.cfi_def_cfa_offset 4
 1654               		.cfi_offset 29, -3
 1655 094a CDB7      		in r28,__SP_L__
 1656 094c DEB7      		in r29,__SP_H__
 1657               	.LCFI38:
 1658               		.cfi_def_cfa_register 28
 1659 094e 6197      		sbiw r28,17
 1660               	.LCFI39:
 1661               		.cfi_def_cfa_offset 21
 1662 0950 0FB6      		in __tmp_reg__,__SREG__
 1663 0952 F894      		cli
 1664 0954 DEBF      		out __SP_H__,r29
 1665 0956 0FBE      		out __SREG__,__tmp_reg__
 1666 0958 CDBF      		out __SP_L__,r28
 1667               	/* prologue: function */
 1668               	/* frame size = 17 */
 1669               	/* stack size = 19 */
 1670               	.L__stack_usage = 19
 1671 095a 998B      		std Y+17,r25
 1672 095c 888B      		std Y+16,r24
 511:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1673               		.loc 2 511 0
 1674 095e 8889      		ldd r24,Y+16
 1675 0960 9989      		ldd r25,Y+17
 1676 0962 0296      		adiw r24,2
 1677 0964 9A83      		std Y+2,r25
 1678 0966 8983      		std Y+1,r24
 512:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 513:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 514:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[header->nwkDstEndpoint]) {
 1679               		.loc 2 514 0
 1680 0968 8981      		ldd r24,Y+1
 1681 096a 9A81      		ldd r25,Y+2
 1682 096c FC01      		movw r30,r24
 1683 096e 8785      		ldd r24,Z+15
 1684 0970 8295      		swap r24
 1685 0972 8F70      		andi r24,lo8(15)
 1686 0974 882F      		mov r24,r24
 1687 0976 90E0      		ldi r25,0
 1688 0978 0396      		adiw r24,3
 1689 097a 880F      		lsl r24
 1690 097c 991F      		rol r25
 1691 097e 8050      		subi r24,lo8(-(nwkIb))
 1692 0980 9040      		sbci r25,hi8(-(nwkIb))
 1693 0982 FC01      		movw r30,r24
 1694 0984 8081      		ld r24,Z
 1695 0986 9181      		ldd r25,Z+1
 1696 0988 892B      		or r24,r25
 1697 098a 01F4      		brne .L85
 515:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1698               		.loc 2 515 0
 1699 098c 80E0      		ldi r24,0
 1700 098e 00C0      		rjmp .L100
 1701               	.L85:
 516:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 517:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 518:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = header->nwkSrcAddr;
 1702               		.loc 2 518 0
 1703 0990 8981      		ldd r24,Y+1
 1704 0992 9A81      		ldd r25,Y+2
 1705 0994 FC01      		movw r30,r24
 1706 0996 8385      		ldd r24,Z+11
 1707 0998 9485      		ldd r25,Z+12
 1708 099a 9C83      		std Y+4,r25
 1709 099c 8B83      		std Y+3,r24
 519:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = header->nwkDstAddr;
 1710               		.loc 2 519 0
 1711 099e 8981      		ldd r24,Y+1
 1712 09a0 9A81      		ldd r25,Y+2
 1713 09a2 FC01      		movw r30,r24
 1714 09a4 8585      		ldd r24,Z+13
 1715 09a6 9685      		ldd r25,Z+14
 1716 09a8 9E83      		std Y+6,r25
 1717 09aa 8D83      		std Y+5,r24
 520:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = header->nwkSrcEndpoint;
 1718               		.loc 2 520 0
 1719 09ac 8981      		ldd r24,Y+1
 1720 09ae 9A81      		ldd r25,Y+2
 1721 09b0 FC01      		movw r30,r24
 1722 09b2 8785      		ldd r24,Z+15
 1723 09b4 8F70      		andi r24,lo8(15)
 1724 09b6 8F83      		std Y+7,r24
 521:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = header->nwkDstEndpoint;
 1725               		.loc 2 521 0
 1726 09b8 8981      		ldd r24,Y+1
 1727 09ba 9A81      		ldd r25,Y+2
 1728 09bc FC01      		movw r30,r24
 1729 09be 8785      		ldd r24,Z+15
 1730 09c0 8295      		swap r24
 1731 09c2 8F70      		andi r24,lo8(15)
 1732 09c4 8887      		std Y+8,r24
 522:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1733               		.loc 2 522 0
 1734 09c6 8889      		ldd r24,Y+16
 1735 09c8 9989      		ldd r25,Y+17
 1736 09ca 8F57      		subi r24,127
 1737 09cc 9F4F      		sbci r25,-1
 1738 09ce FC01      		movw r30,r24
 1739 09d0 8081      		ld r24,Z
 1740 09d2 9181      		ldd r25,Z+1
 1741 09d4 9C87      		std Y+12,r25
 1742 09d6 8B87      		std Y+11,r24
 523:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1743               		.loc 2 523 0
 1744 09d8 8889      		ldd r24,Y+16
 1745 09da 9989      		ldd r25,Y+17
 1746 09dc 0E94 0000 		call nwkFramePayloadSize
 1747 09e0 8D87      		std Y+13,r24
 524:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1748               		.loc 2 524 0
 1749 09e2 8889      		ldd r24,Y+16
 1750 09e4 9989      		ldd r25,Y+17
 1751 09e6 8D57      		subi r24,125
 1752 09e8 9F4F      		sbci r25,-1
 1753 09ea FC01      		movw r30,r24
 1754 09ec 8081      		ld r24,Z
 1755 09ee 8E87      		std Y+14,r24
 525:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1756               		.loc 2 525 0
 1757 09f0 8889      		ldd r24,Y+16
 1758 09f2 9989      		ldd r25,Y+17
 1759 09f4 8C57      		subi r24,124
 1760 09f6 9F4F      		sbci r25,-1
 1761 09f8 FC01      		movw r30,r24
 1762 09fa 8081      		ld r24,Z
 1763 09fc 8F87      		std Y+15,r24
 526:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 527:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK_REQUESTED : 0;
 1764               		.loc 2 527 0
 1765 09fe 8981      		ldd r24,Y+1
 1766 0a00 9A81      		ldd r25,Y+2
 1767 0a02 FC01      		movw r30,r24
 1768 0a04 8185      		ldd r24,Z+9
 1769 0a06 982F      		mov r25,r24
 1770 0a08 9170      		andi r25,lo8(1)
 1771 0a0a 81E0      		ldi r24,lo8(1)
 1772 0a0c 9923      		tst r25
 1773 0a0e 01F4      		brne .L87
 1774 0a10 80E0      		ldi r24,0
 1775               	.L87:
 1776 0a12 882F      		mov r24,r24
 1777 0a14 90E0      		ldi r25,0
 1778 0a16 9A87      		std Y+10,r25
 1779 0a18 8987      		std Y+9,r24
 528:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECURED : 0;
 1780               		.loc 2 528 0
 1781 0a1a 2985      		ldd r18,Y+9
 1782 0a1c 3A85      		ldd r19,Y+10
 1783 0a1e 8981      		ldd r24,Y+1
 1784 0a20 9A81      		ldd r25,Y+2
 1785 0a22 FC01      		movw r30,r24
 1786 0a24 8185      		ldd r24,Z+9
 1787 0a26 882F      		mov r24,r24
 1788 0a28 90E0      		ldi r25,0
 1789 0a2a 8270      		andi r24,2
 1790 0a2c 9927      		clr r25
 1791 0a2e 822B      		or r24,r18
 1792 0a30 932B      		or r25,r19
 1793 0a32 9A87      		std Y+10,r25
 1794 0a34 8987      		std Y+9,r24
 529:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LINK_LOCAL : 0;
 1795               		.loc 2 529 0
 1796 0a36 2985      		ldd r18,Y+9
 1797 0a38 3A85      		ldd r19,Y+10
 1798 0a3a 8981      		ldd r24,Y+1
 1799 0a3c 9A81      		ldd r25,Y+2
 1800 0a3e FC01      		movw r30,r24
 1801 0a40 8185      		ldd r24,Z+9
 1802 0a42 8470      		andi r24,lo8(4)
 1803 0a44 8823      		tst r24
 1804 0a46 01F0      		breq .L88
 1805               		.loc 2 529 0 is_stmt 0 discriminator 1
 1806 0a48 80E2      		ldi r24,lo8(32)
 1807 0a4a 90E0      		ldi r25,0
 1808 0a4c 00C0      		rjmp .L89
 1809               	.L88:
 1810               		.loc 2 529 0 discriminator 2
 1811 0a4e 80E0      		ldi r24,0
 1812 0a50 90E0      		ldi r25,0
 1813               	.L89:
 1814               		.loc 2 529 0 discriminator 4
 1815 0a52 822B      		or r24,r18
 1816 0a54 932B      		or r25,r19
 1817 0a56 9A87      		std Y+10,r25
 1818 0a58 8987      		std Y+9,r24
 530:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MULTICAST : 0;
 1819               		.loc 2 530 0 is_stmt 1 discriminator 4
 1820 0a5a 2985      		ldd r18,Y+9
 1821 0a5c 3A85      		ldd r19,Y+10
 1822 0a5e 8981      		ldd r24,Y+1
 1823 0a60 9A81      		ldd r25,Y+2
 1824 0a62 FC01      		movw r30,r24
 1825 0a64 8185      		ldd r24,Z+9
 1826 0a66 8870      		andi r24,lo8(8)
 1827 0a68 8823      		tst r24
 1828 0a6a 01F0      		breq .L90
 1829               		.loc 2 530 0 is_stmt 0 discriminator 1
 1830 0a6c 80E4      		ldi r24,lo8(64)
 1831 0a6e 90E0      		ldi r25,0
 1832 0a70 00C0      		rjmp .L91
 1833               	.L90:
 1834               		.loc 2 530 0 discriminator 2
 1835 0a72 80E0      		ldi r24,0
 1836 0a74 90E0      		ldi r25,0
 1837               	.L91:
 1838               		.loc 2 530 0 discriminator 4
 1839 0a76 822B      		or r24,r18
 1840 0a78 932B      		or r25,r19
 1841 0a7a 9A87      		std Y+10,r25
 1842 0a7c 8987      		std Y+9,r24
 531:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.beacon) ? NWK_IND_OPT_BEACON : 0;
 1843               		.loc 2 531 0 is_stmt 1 discriminator 4
 1844 0a7e 2985      		ldd r18,Y+9
 1845 0a80 3A85      		ldd r19,Y+10
 1846 0a82 8981      		ldd r24,Y+1
 1847 0a84 9A81      		ldd r25,Y+2
 1848 0a86 FC01      		movw r30,r24
 1849 0a88 8185      		ldd r24,Z+9
 1850 0a8a 8071      		andi r24,lo8(16)
 1851 0a8c 8823      		tst r24
 1852 0a8e 01F0      		breq .L92
 1853               		.loc 2 531 0 is_stmt 0 discriminator 1
 1854 0a90 80E8      		ldi r24,lo8(-128)
 1855 0a92 90E0      		ldi r25,0
 1856 0a94 00C0      		rjmp .L93
 1857               	.L92:
 1858               		.loc 2 531 0 discriminator 2
 1859 0a96 80E0      		ldi r24,0
 1860 0a98 90E0      		ldi r25,0
 1861               	.L93:
 1862               		.loc 2 531 0 discriminator 4
 1863 0a9a 822B      		or r24,r18
 1864 0a9c 932B      		or r25,r19
 1865 0a9e 9A87      		std Y+10,r25
 1866 0aa0 8987      		std Y+9,r24
 532:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_ADDR == header->nwkDstAddr) ? NWK_IND_OPT_BROADCAST : 0;
 1867               		.loc 2 532 0 is_stmt 1 discriminator 4
 1868 0aa2 2985      		ldd r18,Y+9
 1869 0aa4 3A85      		ldd r19,Y+10
 1870 0aa6 8981      		ldd r24,Y+1
 1871 0aa8 9A81      		ldd r25,Y+2
 1872 0aaa FC01      		movw r30,r24
 1873 0aac 8585      		ldd r24,Z+13
 1874 0aae 9685      		ldd r25,Z+14
 1875 0ab0 0196      		adiw r24,1
 1876 0ab2 01F4      		brne .L94
 1877               		.loc 2 532 0 is_stmt 0 discriminator 1
 1878 0ab4 84E0      		ldi r24,lo8(4)
 1879 0ab6 90E0      		ldi r25,0
 1880 0ab8 00C0      		rjmp .L95
 1881               	.L94:
 1882               		.loc 2 532 0 discriminator 2
 1883 0aba 80E0      		ldi r24,0
 1884 0abc 90E0      		ldi r25,0
 1885               	.L95:
 1886               		.loc 2 532 0 discriminator 4
 1887 0abe 822B      		or r24,r18
 1888 0ac0 932B      		or r25,r19
 1889 0ac2 9A87      		std Y+10,r25
 1890 0ac4 8987      		std Y+9,r24
 533:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (header->nwkSrcAddr == header->macSrcAddr) ? NWK_IND_OPT_LOCAL : 0;
 1891               		.loc 2 533 0 is_stmt 1 discriminator 4
 1892 0ac6 2985      		ldd r18,Y+9
 1893 0ac8 3A85      		ldd r19,Y+10
 1894 0aca 8981      		ldd r24,Y+1
 1895 0acc 9A81      		ldd r25,Y+2
 1896 0ace FC01      		movw r30,r24
 1897 0ad0 4385      		ldd r20,Z+11
 1898 0ad2 5485      		ldd r21,Z+12
 1899 0ad4 8981      		ldd r24,Y+1
 1900 0ad6 9A81      		ldd r25,Y+2
 1901 0ad8 FC01      		movw r30,r24
 1902 0ada 8781      		ldd r24,Z+7
 1903 0adc 9085      		ldd r25,Z+8
 1904 0ade 4817      		cp r20,r24
 1905 0ae0 5907      		cpc r21,r25
 1906 0ae2 01F4      		brne .L96
 1907               		.loc 2 533 0 is_stmt 0 discriminator 1
 1908 0ae4 88E0      		ldi r24,lo8(8)
 1909 0ae6 90E0      		ldi r25,0
 1910 0ae8 00C0      		rjmp .L97
 1911               	.L96:
 1912               		.loc 2 533 0 discriminator 2
 1913 0aea 80E0      		ldi r24,0
 1914 0aec 90E0      		ldi r25,0
 1915               	.L97:
 1916               		.loc 2 533 0 discriminator 4
 1917 0aee 822B      		or r24,r18
 1918 0af0 932B      		or r25,r19
 1919 0af2 9A87      		std Y+10,r25
 1920 0af4 8987      		std Y+9,r24
 534:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_PANID == header->macDstPanId) ? NWK_IND_OPT_BROADCAST_PAN_ID : 0;
 1921               		.loc 2 534 0 is_stmt 1 discriminator 4
 1922 0af6 2985      		ldd r18,Y+9
 1923 0af8 3A85      		ldd r19,Y+10
 1924 0afa 8981      		ldd r24,Y+1
 1925 0afc 9A81      		ldd r25,Y+2
 1926 0afe FC01      		movw r30,r24
 1927 0b00 8381      		ldd r24,Z+3
 1928 0b02 9481      		ldd r25,Z+4
 1929 0b04 0196      		adiw r24,1
 1930 0b06 01F4      		brne .L98
 1931               		.loc 2 534 0 is_stmt 0 discriminator 1
 1932 0b08 80E1      		ldi r24,lo8(16)
 1933 0b0a 90E0      		ldi r25,0
 1934 0b0c 00C0      		rjmp .L99
 1935               	.L98:
 1936               		.loc 2 534 0 discriminator 2
 1937 0b0e 80E0      		ldi r24,0
 1938 0b10 90E0      		ldi r25,0
 1939               	.L99:
 1940               		.loc 2 534 0 discriminator 4
 1941 0b12 822B      		or r24,r18
 1942 0b14 932B      		or r25,r19
 1943 0b16 9A87      		std Y+10,r25
 1944 0b18 8987      		std Y+9,r24
 535:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 536:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 1945               		.loc 2 536 0 is_stmt 1 discriminator 4
 1946 0b1a 8981      		ldd r24,Y+1
 1947 0b1c 9A81      		ldd r25,Y+2
 1948 0b1e FC01      		movw r30,r24
 1949 0b20 8785      		ldd r24,Z+15
 1950 0b22 8295      		swap r24
 1951 0b24 8F70      		andi r24,lo8(15)
 1952 0b26 882F      		mov r24,r24
 1953 0b28 90E0      		ldi r25,0
 1954 0b2a 0396      		adiw r24,3
 1955 0b2c 880F      		lsl r24
 1956 0b2e 991F      		rol r25
 1957 0b30 8050      		subi r24,lo8(-(nwkIb))
 1958 0b32 9040      		sbci r25,hi8(-(nwkIb))
 1959 0b34 FC01      		movw r30,r24
 1960 0b36 2081      		ld r18,Z
 1961 0b38 3181      		ldd r19,Z+1
 1962 0b3a CE01      		movw r24,r28
 1963 0b3c 0396      		adiw r24,3
 1964 0b3e F901      		movw r30,r18
 1965 0b40 0995      		icall
 1966               	.L100:
 1967               	/* epilogue start */
 537:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1968               		.loc 2 537 0 discriminator 1
 1969 0b42 6196      		adiw r28,17
 1970 0b44 0FB6      		in __tmp_reg__,__SREG__
 1971 0b46 F894      		cli
 1972 0b48 DEBF      		out __SP_H__,r29
 1973 0b4a 0FBE      		out __SREG__,__tmp_reg__
 1974 0b4c CDBF      		out __SP_L__,r28
 1975 0b4e DF91      		pop r29
 1976 0b50 CF91      		pop r28
 1977 0b52 0895      		ret
 1978               		.cfi_endproc
 1979               	.LFE74:
 1982               	nwkRxIndicateBeaconFrame:
 1983               	.LFB75:
 538:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 539:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 540:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 541:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateBeaconFrame(NwkFrame_t *frame)
 542:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1984               		.loc 2 542 0
 1985               		.cfi_startproc
 1986 0b54 CF93      		push r28
 1987               	.LCFI40:
 1988               		.cfi_def_cfa_offset 3
 1989               		.cfi_offset 28, -2
 1990 0b56 DF93      		push r29
 1991               	.LCFI41:
 1992               		.cfi_def_cfa_offset 4
 1993               		.cfi_offset 29, -3
 1994 0b58 CDB7      		in r28,__SP_L__
 1995 0b5a DEB7      		in r29,__SP_H__
 1996               	.LCFI42:
 1997               		.cfi_def_cfa_register 28
 1998 0b5c 6197      		sbiw r28,17
 1999               	.LCFI43:
 2000               		.cfi_def_cfa_offset 21
 2001 0b5e 0FB6      		in __tmp_reg__,__SREG__
 2002 0b60 F894      		cli
 2003 0b62 DEBF      		out __SP_H__,r29
 2004 0b64 0FBE      		out __SREG__,__tmp_reg__
 2005 0b66 CDBF      		out __SP_L__,r28
 2006               	/* prologue: function */
 2007               	/* frame size = 17 */
 2008               	/* stack size = 19 */
 2009               	.L__stack_usage = 19
 2010 0b68 998B      		std Y+17,r25
 2011 0b6a 888B      		std Y+16,r24
 543:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 2012               		.loc 2 543 0
 2013 0b6c 8889      		ldd r24,Y+16
 2014 0b6e 9989      		ldd r25,Y+17
 2015 0b70 0296      		adiw r24,2
 2016 0b72 9A83      		std Y+2,r25
 2017 0b74 8983      		std Y+1,r24
 544:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 545:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 546:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2018               		.loc 2 546 0
 2019 0b76 8889      		ldd r24,Y+16
 2020 0b78 9989      		ldd r25,Y+17
 2021 0b7a 24E2      		ldi r18,lo8(36)
 2022 0b7c FC01      		movw r30,r24
 2023 0b7e 2083      		st Z,r18
 547:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 548:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[0]) {
 2024               		.loc 2 548 0
 2025 0b80 8091 0000 		lds r24,nwkIb+6
 2026 0b84 9091 0000 		lds r25,nwkIb+6+1
 2027 0b88 892B      		or r24,r25
 2028 0b8a 01F4      		brne .L102
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2029               		.loc 2 549 0
 2030 0b8c 80E0      		ldi r24,0
 2031 0b8e 00C0      		rjmp .L104
 2032               	.L102:
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 551:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 552:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = frame->beacon.macSrcAddr;
 2033               		.loc 2 552 0
 2034 0b90 8889      		ldd r24,Y+16
 2035 0b92 9989      		ldd r25,Y+17
 2036 0b94 FC01      		movw r30,r24
 2037 0b96 8781      		ldd r24,Z+7
 2038 0b98 9085      		ldd r25,Z+8
 2039 0b9a 9C83      		std Y+4,r25
 2040 0b9c 8B83      		std Y+3,r24
 553:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = frame->beacon.macSrcAddr;
 2041               		.loc 2 553 0
 2042 0b9e 8889      		ldd r24,Y+16
 2043 0ba0 9989      		ldd r25,Y+17
 2044 0ba2 FC01      		movw r30,r24
 2045 0ba4 8781      		ldd r24,Z+7
 2046 0ba6 9085      		ldd r25,Z+8
 2047 0ba8 9E83      		std Y+6,r25
 2048 0baa 8D83      		std Y+5,r24
 554:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2049               		.loc 2 554 0
 2050 0bac 1F82      		std Y+7,__zero_reg__
 555:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2051               		.loc 2 555 0
 2052 0bae 1886      		std Y+8,__zero_reg__
 556:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2053               		.loc 2 556 0
 2054 0bb0 8889      		ldd r24,Y+16
 2055 0bb2 9989      		ldd r25,Y+17
 2056 0bb4 8F57      		subi r24,127
 2057 0bb6 9F4F      		sbci r25,-1
 2058 0bb8 FC01      		movw r30,r24
 2059 0bba 8081      		ld r24,Z
 2060 0bbc 9181      		ldd r25,Z+1
 2061 0bbe 9C87      		std Y+12,r25
 2062 0bc0 8B87      		std Y+11,r24
 557:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2063               		.loc 2 557 0
 2064 0bc2 8889      		ldd r24,Y+16
 2065 0bc4 9989      		ldd r25,Y+17
 2066 0bc6 0E94 0000 		call nwkFramePayloadSize
 2067 0bca 8D87      		std Y+13,r24
 558:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2068               		.loc 2 558 0
 2069 0bcc 8889      		ldd r24,Y+16
 2070 0bce 9989      		ldd r25,Y+17
 2071 0bd0 8D57      		subi r24,125
 2072 0bd2 9F4F      		sbci r25,-1
 2073 0bd4 FC01      		movw r30,r24
 2074 0bd6 8081      		ld r24,Z
 2075 0bd8 8E87      		std Y+14,r24
 559:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2076               		.loc 2 559 0
 2077 0bda 8889      		ldd r24,Y+16
 2078 0bdc 9989      		ldd r25,Y+17
 2079 0bde 8C57      		subi r24,124
 2080 0be0 9F4F      		sbci r25,-1
 2081 0be2 FC01      		movw r30,r24
 2082 0be4 8081      		ld r24,Z
 2083 0be6 8F87      		std Y+15,r24
 560:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 561:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_BEACON;
 2084               		.loc 2 561 0
 2085 0be8 80E8      		ldi r24,lo8(-128)
 2086 0bea 90E0      		ldi r25,0
 2087 0bec 9A87      		std Y+10,r25
 2088 0bee 8987      		std Y+9,r24
 562:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 563:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2089               		.loc 2 563 0
 2090 0bf0 8981      		ldd r24,Y+1
 2091 0bf2 9A81      		ldd r25,Y+2
 2092 0bf4 FC01      		movw r30,r24
 2093 0bf6 8785      		ldd r24,Z+15
 2094 0bf8 8295      		swap r24
 2095 0bfa 8F70      		andi r24,lo8(15)
 2096 0bfc 882F      		mov r24,r24
 2097 0bfe 90E0      		ldi r25,0
 2098 0c00 0396      		adiw r24,3
 2099 0c02 880F      		lsl r24
 2100 0c04 991F      		rol r25
 2101 0c06 8050      		subi r24,lo8(-(nwkIb))
 2102 0c08 9040      		sbci r25,hi8(-(nwkIb))
 2103 0c0a FC01      		movw r30,r24
 2104 0c0c 2081      		ld r18,Z
 2105 0c0e 3181      		ldd r19,Z+1
 2106 0c10 CE01      		movw r24,r28
 2107 0c12 0396      		adiw r24,3
 2108 0c14 F901      		movw r30,r18
 2109 0c16 0995      		icall
 2110               	.L104:
 2111               	/* epilogue start */
 564:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2112               		.loc 2 564 0 discriminator 1
 2113 0c18 6196      		adiw r28,17
 2114 0c1a 0FB6      		in __tmp_reg__,__SREG__
 2115 0c1c F894      		cli
 2116 0c1e DEBF      		out __SP_H__,r29
 2117 0c20 0FBE      		out __SREG__,__tmp_reg__
 2118 0c22 CDBF      		out __SP_L__,r28
 2119 0c24 DF91      		pop r29
 2120 0c26 CF91      		pop r28
 2121 0c28 0895      		ret
 2122               		.cfi_endproc
 2123               	.LFE75:
 2126               	nwkRxIndicateLLBeaconFrame:
 2127               	.LFB76:
 565:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 566:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 567:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 568:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 569:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLBeaconFrame(NwkFrame_t *frame)
 570:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2128               		.loc 2 570 0
 2129               		.cfi_startproc
 2130 0c2a CF93      		push r28
 2131               	.LCFI44:
 2132               		.cfi_def_cfa_offset 3
 2133               		.cfi_offset 28, -2
 2134 0c2c DF93      		push r29
 2135               	.LCFI45:
 2136               		.cfi_def_cfa_offset 4
 2137               		.cfi_offset 29, -3
 2138 0c2e CDB7      		in r28,__SP_L__
 2139 0c30 DEB7      		in r29,__SP_H__
 2140               	.LCFI46:
 2141               		.cfi_def_cfa_register 28
 2142 0c32 2F97      		sbiw r28,15
 2143               	.LCFI47:
 2144               		.cfi_def_cfa_offset 19
 2145 0c34 0FB6      		in __tmp_reg__,__SREG__
 2146 0c36 F894      		cli
 2147 0c38 DEBF      		out __SP_H__,r29
 2148 0c3a 0FBE      		out __SREG__,__tmp_reg__
 2149 0c3c CDBF      		out __SP_L__,r28
 2150               	/* prologue: function */
 2151               	/* frame size = 15 */
 2152               	/* stack size = 17 */
 2153               	.L__stack_usage = 17
 2154 0c3e 9F87      		std Y+15,r25
 2155 0c40 8E87      		std Y+14,r24
 571:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 572:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 573:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2156               		.loc 2 573 0
 2157 0c42 8E85      		ldd r24,Y+14
 2158 0c44 9F85      		ldd r25,Y+15
 2159 0c46 24E2      		ldi r18,lo8(36)
 2160 0c48 FC01      		movw r30,r24
 2161 0c4a 2083      		st Z,r18
 574:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 575:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_BEACON_ENDPOINT]) {
 2162               		.loc 2 575 0
 2163 0c4c 8091 0000 		lds r24,nwkIb+6
 2164 0c50 9091 0000 		lds r25,nwkIb+6+1
 2165 0c54 892B      		or r24,r25
 2166 0c56 01F4      		brne .L106
 576:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2167               		.loc 2 576 0
 2168 0c58 80E0      		ldi r24,0
 2169 0c5a 00C0      		rjmp .L108
 2170               	.L106:
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 578:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Beacon as they are in standart 802.15.4
 579:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 580:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 581:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2171               		.loc 2 581 0
 2172 0c5c 1A82      		std Y+2,__zero_reg__
 2173 0c5e 1982      		std Y+1,__zero_reg__
 582:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2174               		.loc 2 582 0
 2175 0c60 1C82      		std Y+4,__zero_reg__
 2176 0c62 1B82      		std Y+3,__zero_reg__
 583:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2177               		.loc 2 583 0
 2178 0c64 1D82      		std Y+5,__zero_reg__
 584:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2179               		.loc 2 584 0
 2180 0c66 1E82      		std Y+6,__zero_reg__
 585:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 586:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->LLbeacon;
 2181               		.loc 2 586 0
 2182 0c68 8E85      		ldd r24,Y+14
 2183 0c6a 9F85      		ldd r25,Y+15
 2184 0c6c 0296      		adiw r24,2
 2185 0c6e 9A87      		std Y+10,r25
 2186 0c70 8987      		std Y+9,r24
 587:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2187               		.loc 2 587 0
 2188 0c72 8E85      		ldd r24,Y+14
 2189 0c74 9F85      		ldd r25,Y+15
 2190 0c76 0E94 0000 		call nwkFramePayloadSize
 2191 0c7a 8B87      		std Y+11,r24
 588:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2192               		.loc 2 588 0
 2193 0c7c 8E85      		ldd r24,Y+14
 2194 0c7e 9F85      		ldd r25,Y+15
 2195 0c80 8D57      		subi r24,125
 2196 0c82 9F4F      		sbci r25,-1
 2197 0c84 FC01      		movw r30,r24
 2198 0c86 8081      		ld r24,Z
 2199 0c88 8C87      		std Y+12,r24
 589:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2200               		.loc 2 589 0
 2201 0c8a 8E85      		ldd r24,Y+14
 2202 0c8c 9F85      		ldd r25,Y+15
 2203 0c8e 8C57      		subi r24,124
 2204 0c90 9F4F      		sbci r25,-1
 2205 0c92 FC01      		movw r30,r24
 2206 0c94 8081      		ld r24,Z
 2207 0c96 8D87      		std Y+13,r24
 590:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 591:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_BEACON;
 2208               		.loc 2 591 0
 2209 0c98 80E0      		ldi r24,0
 2210 0c9a 91E0      		ldi r25,lo8(1)
 2211 0c9c 9887      		std Y+8,r25
 2212 0c9e 8F83      		std Y+7,r24
 592:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 593:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 594:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_BEACON_ENDPOINT](&ind);
 2213               		.loc 2 594 0
 2214 0ca0 2091 0000 		lds r18,nwkIb+6
 2215 0ca4 3091 0000 		lds r19,nwkIb+6+1
 2216 0ca8 CE01      		movw r24,r28
 2217 0caa 0196      		adiw r24,1
 2218 0cac F901      		movw r30,r18
 2219 0cae 0995      		icall
 2220               	.L108:
 2221               	/* epilogue start */
 595:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2222               		.loc 2 595 0 discriminator 1
 2223 0cb0 2F96      		adiw r28,15
 2224 0cb2 0FB6      		in __tmp_reg__,__SREG__
 2225 0cb4 F894      		cli
 2226 0cb6 DEBF      		out __SP_H__,r29
 2227 0cb8 0FBE      		out __SREG__,__tmp_reg__
 2228 0cba CDBF      		out __SP_L__,r28
 2229 0cbc DF91      		pop r29
 2230 0cbe CF91      		pop r28
 2231 0cc0 0895      		ret
 2232               		.cfi_endproc
 2233               	.LFE76:
 2236               	nwkRxIndicateLLCommandFrame:
 2237               	.LFB77:
 596:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 597:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLCommandFrame(NwkFrame_t *frame)
 598:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2238               		.loc 2 598 0
 2239               		.cfi_startproc
 2240 0cc2 CF93      		push r28
 2241               	.LCFI48:
 2242               		.cfi_def_cfa_offset 3
 2243               		.cfi_offset 28, -2
 2244 0cc4 DF93      		push r29
 2245               	.LCFI49:
 2246               		.cfi_def_cfa_offset 4
 2247               		.cfi_offset 29, -3
 2248 0cc6 CDB7      		in r28,__SP_L__
 2249 0cc8 DEB7      		in r29,__SP_H__
 2250               	.LCFI50:
 2251               		.cfi_def_cfa_register 28
 2252 0cca 6197      		sbiw r28,17
 2253               	.LCFI51:
 2254               		.cfi_def_cfa_offset 21
 2255 0ccc 0FB6      		in __tmp_reg__,__SREG__
 2256 0cce F894      		cli
 2257 0cd0 DEBF      		out __SP_H__,r29
 2258 0cd2 0FBE      		out __SREG__,__tmp_reg__
 2259 0cd4 CDBF      		out __SP_L__,r28
 2260               	/* prologue: function */
 2261               	/* frame size = 17 */
 2262               	/* stack size = 19 */
 2263               	.L__stack_usage = 19
 2264 0cd6 998B      		std Y+17,r25
 2265 0cd8 888B      		std Y+16,r24
 599:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2266               		.loc 2 599 0
 2267 0cda 8889      		ldd r24,Y+16
 2268 0cdc 9989      		ldd r25,Y+17
 2269 0cde 0296      		adiw r24,2
 2270 0ce0 9A83      		std Y+2,r25
 2271 0ce2 8983      		std Y+1,r24
 600:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 601:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 602:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2272               		.loc 2 602 0
 2273 0ce4 8889      		ldd r24,Y+16
 2274 0ce6 9989      		ldd r25,Y+17
 2275 0ce8 24E2      		ldi r18,lo8(36)
 2276 0cea FC01      		movw r30,r24
 2277 0cec 2083      		st Z,r18
 603:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 604:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_COMMAND_ENDPOINT]) {
 2278               		.loc 2 604 0
 2279 0cee 8091 0000 		lds r24,nwkIb+12
 2280 0cf2 9091 0000 		lds r25,nwkIb+12+1
 2281 0cf6 892B      		or r24,r25
 2282 0cf8 01F4      		brne .L110
 605:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2283               		.loc 2 605 0
 2284 0cfa 80E0      		ldi r24,0
 2285 0cfc 00C0      		rjmp .L112
 2286               	.L110:
 606:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 607:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 608:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 609:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 610:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 611:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2287               		.loc 2 611 0
 2288 0cfe 1C82      		std Y+4,__zero_reg__
 2289 0d00 1B82      		std Y+3,__zero_reg__
 612:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2290               		.loc 2 612 0
 2291 0d02 1E82      		std Y+6,__zero_reg__
 2292 0d04 1D82      		std Y+5,__zero_reg__
 613:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2293               		.loc 2 613 0
 2294 0d06 1F82      		std Y+7,__zero_reg__
 614:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2295               		.loc 2 614 0
 2296 0d08 1886      		std Y+8,__zero_reg__
 615:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 616:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->data;
 2297               		.loc 2 616 0
 2298 0d0a 8889      		ldd r24,Y+16
 2299 0d0c 9989      		ldd r25,Y+17
 2300 0d0e 0296      		adiw r24,2
 2301 0d10 9C87      		std Y+12,r25
 2302 0d12 8B87      		std Y+11,r24
 617:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2303               		.loc 2 617 0
 2304 0d14 8889      		ldd r24,Y+16
 2305 0d16 9989      		ldd r25,Y+17
 2306 0d18 0E94 0000 		call nwkFramePayloadSize
 2307 0d1c 8D87      		std Y+13,r24
 618:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2308               		.loc 2 618 0
 2309 0d1e 8889      		ldd r24,Y+16
 2310 0d20 9989      		ldd r25,Y+17
 2311 0d22 8D57      		subi r24,125
 2312 0d24 9F4F      		sbci r25,-1
 2313 0d26 FC01      		movw r30,r24
 2314 0d28 8081      		ld r24,Z
 2315 0d2a 8E87      		std Y+14,r24
 619:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2316               		.loc 2 619 0
 2317 0d2c 8889      		ldd r24,Y+16
 2318 0d2e 9989      		ldd r25,Y+17
 2319 0d30 8C57      		subi r24,124
 2320 0d32 9F4F      		sbci r25,-1
 2321 0d34 FC01      		movw r30,r24
 2322 0d36 8081      		ld r24,Z
 2323 0d38 8F87      		std Y+15,r24
 620:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 621:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_MACCOMMAND;
 2324               		.loc 2 621 0
 2325 0d3a 80E0      		ldi r24,0
 2326 0d3c 92E0      		ldi r25,lo8(2)
 2327 0d3e 9A87      		std Y+10,r25
 2328 0d40 8987      		std Y+9,r24
 622:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 623:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_COMMAND_ENDPOINT](&ind);
 2329               		.loc 2 623 0
 2330 0d42 2091 0000 		lds r18,nwkIb+12
 2331 0d46 3091 0000 		lds r19,nwkIb+12+1
 2332 0d4a CE01      		movw r24,r28
 2333 0d4c 0396      		adiw r24,3
 2334 0d4e F901      		movw r30,r18
 2335 0d50 0995      		icall
 2336               	.L112:
 2337               	/* epilogue start */
 624:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2338               		.loc 2 624 0 discriminator 1
 2339 0d52 6196      		adiw r28,17
 2340 0d54 0FB6      		in __tmp_reg__,__SREG__
 2341 0d56 F894      		cli
 2342 0d58 DEBF      		out __SP_H__,r29
 2343 0d5a 0FBE      		out __SREG__,__tmp_reg__
 2344 0d5c CDBF      		out __SP_L__,r28
 2345 0d5e DF91      		pop r29
 2346 0d60 CF91      		pop r28
 2347 0d62 0895      		ret
 2348               		.cfi_endproc
 2349               	.LFE77:
 2352               	nwkRxHandleIndication:
 2353               	.LFB78:
 625:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 626:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 627:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 628:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 629:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleIndication(NwkFrame_t *frame)
 630:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2354               		.loc 2 630 0
 2355               		.cfi_startproc
 2356 0d64 CF93      		push r28
 2357               	.LCFI52:
 2358               		.cfi_def_cfa_offset 3
 2359               		.cfi_offset 28, -2
 2360 0d66 DF93      		push r29
 2361               	.LCFI53:
 2362               		.cfi_def_cfa_offset 4
 2363               		.cfi_offset 29, -3
 2364 0d68 00D0      		rcall .
 2365 0d6a 1F92      		push __zero_reg__
 2366               	.LCFI54:
 2367               		.cfi_def_cfa_offset 7
 2368 0d6c CDB7      		in r28,__SP_L__
 2369 0d6e DEB7      		in r29,__SP_H__
 2370               	.LCFI55:
 2371               		.cfi_def_cfa_register 28
 2372               	/* prologue: function */
 2373               	/* frame size = 3 */
 2374               	/* stack size = 5 */
 2375               	.L__stack_usage = 5
 2376 0d70 9B83      		std Y+3,r25
 2377 0d72 8A83      		std Y+2,r24
 631:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool ack;
 632:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 633:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = 0;
 2378               		.loc 2 633 0
 2379 0d74 1092 0000 		sts nwkRxAckControl,__zero_reg__
 634:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack = nwkRxIndicateDataFrame(frame);
 2380               		.loc 2 634 0
 2381 0d78 8A81      		ldd r24,Y+2
 2382 0d7a 9B81      		ldd r25,Y+3
 2383 0d7c 0E94 0000 		call nwkRxIndicateDataFrame
 2384 0d80 8983      		std Y+1,r24
 635:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 636:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == frame->header.nwkFcf.ackRequest) {
 2385               		.loc 2 636 0
 2386 0d82 8A81      		ldd r24,Y+2
 2387 0d84 9B81      		ldd r25,Y+3
 2388 0d86 FC01      		movw r30,r24
 2389 0d88 8385      		ldd r24,Z+11
 2390 0d8a 8170      		andi r24,lo8(1)
 2391 0d8c 8823      		tst r24
 2392 0d8e 01F4      		brne .L114
 637:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2393               		.loc 2 637 0
 2394 0d90 1982      		std Y+1,__zero_reg__
 2395               	.L114:
 638:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 639:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == frame->header.macDstAddr &&
 2396               		.loc 2 640 0
 2397 0d92 8A81      		ldd r24,Y+2
 2398 0d94 9B81      		ldd r25,Y+3
 2399 0d96 FC01      		movw r30,r24
 2400 0d98 8781      		ldd r24,Z+7
 2401 0d9a 9085      		ldd r25,Z+8
 2402 0d9c 0196      		adiw r24,1
 2403 0d9e 01F4      		brne .L115
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2404               		.loc 2 641 0 discriminator 1
 2405 0da0 2091 0000 		lds r18,nwkIb
 2406 0da4 3091 0000 		lds r19,nwkIb+1
 2407 0da8 8A81      		ldd r24,Y+2
 2408 0daa 9B81      		ldd r25,Y+3
 2409 0dac FC01      		movw r30,r24
 2410 0dae 8785      		ldd r24,Z+15
 2411 0db0 9089      		ldd r25,Z+16
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2412               		.loc 2 640 0 discriminator 1
 2413 0db2 2817      		cp r18,r24
 2414 0db4 3907      		cpc r19,r25
 2415 0db6 01F4      		brne .L115
 642:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			0 == frame->header.nwkFcf.multicast) {
 2416               		.loc 2 642 0
 2417 0db8 8A81      		ldd r24,Y+2
 2418 0dba 9B81      		ldd r25,Y+3
 2419 0dbc FC01      		movw r30,r24
 2420 0dbe 8385      		ldd r24,Z+11
 2421 0dc0 8870      		andi r24,lo8(8)
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2422               		.loc 2 641 0
 2423 0dc2 8823      		tst r24
 2424 0dc4 01F4      		brne .L115
 643:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = true;
 2425               		.loc 2 643 0
 2426 0dc6 81E0      		ldi r24,lo8(1)
 2427 0dc8 8983      		std Y+1,r24
 2428               	.L115:
 644:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 645:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 646:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == frame->header.macDstPanId) {
 2429               		.loc 2 646 0
 2430 0dca 8A81      		ldd r24,Y+2
 2431 0dcc 9B81      		ldd r25,Y+3
 2432 0dce FC01      		movw r30,r24
 2433 0dd0 8581      		ldd r24,Z+5
 2434 0dd2 9681      		ldd r25,Z+6
 2435 0dd4 0196      		adiw r24,1
 2436 0dd6 01F4      		brne .L116
 647:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2437               		.loc 2 647 0
 2438 0dd8 1982      		std Y+1,__zero_reg__
 2439               	.L116:
 648:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 649:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 650:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == nwkIb.addr) {
 2440               		.loc 2 650 0
 2441 0dda 8091 0000 		lds r24,nwkIb
 2442 0dde 9091 0000 		lds r25,nwkIb+1
 2443 0de2 0196      		adiw r24,1
 2444 0de4 01F4      		brne .L117
 651:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2445               		.loc 2 651 0
 2446 0de6 1982      		std Y+1,__zero_reg__
 2447               	.L117:
 652:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 653:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 654:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ack) {
 2448               		.loc 2 654 0
 2449 0de8 8981      		ldd r24,Y+1
 2450 0dea 8823      		tst r24
 2451 0dec 01F0      		breq .L118
 655:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxSendAck(frame);
 2452               		.loc 2 655 0
 2453 0dee 8A81      		ldd r24,Y+2
 2454 0df0 9B81      		ldd r25,Y+3
 2455 0df2 0E94 0000 		call nwkRxSendAck
 2456               	.L118:
 656:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 657:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 658:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2457               		.loc 2 658 0
 2458 0df6 8A81      		ldd r24,Y+2
 2459 0df8 9B81      		ldd r25,Y+3
 2460 0dfa 24E2      		ldi r18,lo8(36)
 2461 0dfc FC01      		movw r30,r24
 2462 0dfe 2083      		st Z,r18
 659:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2463               		.loc 2 659 0
 2464 0e00 0000      		nop
 2465               	/* epilogue start */
 2466 0e02 0F90      		pop __tmp_reg__
 2467 0e04 0F90      		pop __tmp_reg__
 2468 0e06 0F90      		pop __tmp_reg__
 2469 0e08 DF91      		pop r29
 2470 0e0a CF91      		pop r28
 2471 0e0c 0895      		ret
 2472               		.cfi_endproc
 2473               	.LFE78:
 2475               	.global	nwkRxTaskHandler
 2477               	nwkRxTaskHandler:
 2478               	.LFB79:
 660:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 661:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 662:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Rx Module task handler
 663:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 664:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxTaskHandler(void)
 665:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2479               		.loc 2 665 0
 2480               		.cfi_startproc
 2481 0e0e CF93      		push r28
 2482               	.LCFI56:
 2483               		.cfi_def_cfa_offset 3
 2484               		.cfi_offset 28, -2
 2485 0e10 DF93      		push r29
 2486               	.LCFI57:
 2487               		.cfi_def_cfa_offset 4
 2488               		.cfi_offset 29, -3
 2489 0e12 00D0      		rcall .
 2490               	.LCFI58:
 2491               		.cfi_def_cfa_offset 6
 2492 0e14 CDB7      		in r28,__SP_L__
 2493 0e16 DEB7      		in r29,__SP_H__
 2494               	.LCFI59:
 2495               		.cfi_def_cfa_register 28
 2496               	/* prologue: function */
 2497               	/* frame size = 2 */
 2498               	/* stack size = 4 */
 2499               	.L__stack_usage = 4
 666:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame = NULL;
 2500               		.loc 2 666 0
 2501 0e18 1A82      		std Y+2,__zero_reg__
 2502 0e1a 1982      		std Y+1,__zero_reg__
 667:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 2503               		.loc 2 668 0
 2504 0e1c 00C0      		rjmp .L120
 2505               	.L128:
 669:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2506               		.loc 2 669 0
 2507 0e1e 8981      		ldd r24,Y+1
 2508 0e20 9A81      		ldd r25,Y+2
 2509 0e22 FC01      		movw r30,r24
 2510 0e24 8081      		ld r24,Z
 2511 0e26 882F      		mov r24,r24
 2512 0e28 90E0      		ldi r25,0
 2513 0e2a 8432      		cpi r24,36
 2514 0e2c 9105      		cpc r25,__zero_reg__
 2515 0e2e 01F0      		breq .L121
 2516 0e30 8532      		cpi r24,37
 2517 0e32 9105      		cpc r25,__zero_reg__
 2518 0e34 04F4      		brge .L122
 2519 0e36 8032      		cpi r24,32
 2520 0e38 9105      		cpc r25,__zero_reg__
 2521 0e3a 01F0      		breq .L123
 2522 0e3c 8297      		sbiw r24,34
 2523 0e3e 01F0      		breq .L124
 2524 0e40 00C0      		rjmp .L120
 2525               	.L122:
 2526 0e42 8632      		cpi r24,38
 2527 0e44 9105      		cpc r25,__zero_reg__
 2528 0e46 01F0      		breq .L125
 2529 0e48 8632      		cpi r24,38
 2530 0e4a 9105      		cpc r25,__zero_reg__
 2531 0e4c 04F0      		brlt .L126
 2532 0e4e 8797      		sbiw r24,39
 2533 0e50 01F0      		breq .L127
 2534 0e52 00C0      		rjmp .L120
 2535               	.L123:
 670:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_RECEIVED:
 671:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 672:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleReceivedFrame(frame);
 2536               		.loc 2 672 0
 2537 0e54 8981      		ldd r24,Y+1
 2538 0e56 9A81      		ldd r25,Y+2
 2539 0e58 0E94 0000 		call nwkRxHandleReceivedFrame
 673:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 674:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2540               		.loc 2 674 0
 2541 0e5c 00C0      		rjmp .L120
 2542               	.L124:
 675:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 676:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 677:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_DECRYPT:
 678:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 679:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkSecurityProcess(frame, false);
 680:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 681:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 682:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 683:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 684:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_INDICATE:
 685:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 686:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleIndication(frame);
 2543               		.loc 2 686 0
 2544 0e5e 8981      		ldd r24,Y+1
 2545 0e60 9A81      		ldd r25,Y+2
 2546 0e62 0E94 0000 		call nwkRxHandleIndication
 687:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 688:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2547               		.loc 2 688 0
 2548 0e66 00C0      		rjmp .L120
 2549               	.L121:
 689:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 690:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 691:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_ROUTE:
 692:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 693:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRouteFrame(frame);
 694:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 695:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 696:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 697:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 698:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_FINISH:
 699:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 700:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkFrameFree(frame);
 2550               		.loc 2 700 0
 2551 0e68 8981      		ldd r24,Y+1
 2552 0e6a 9A81      		ldd r25,Y+2
 2553 0e6c 0E94 0000 		call nwkFrameFree
 701:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 702:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2554               		.loc 2 702 0
 2555 0e70 00C0      		rjmp .L120
 2556               	.L126:
 703:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 704:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_BEACON:
 705:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 706:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateBeaconFrame(frame);
 2557               		.loc 2 706 0
 2558 0e72 8981      		ldd r24,Y+1
 2559 0e74 9A81      		ldd r25,Y+2
 2560 0e76 0E94 0000 		call nwkRxIndicateBeaconFrame
 707:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 708:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2561               		.loc 2 708 0
 2562 0e7a 00C0      		rjmp .L120
 2563               	.L125:
 709:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 710:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 711:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLBEACON:
 712:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 713:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLBeaconFrame(frame);
 2564               		.loc 2 713 0
 2565 0e7c 8981      		ldd r24,Y+1
 2566 0e7e 9A81      		ldd r25,Y+2
 2567 0e80 0E94 0000 		call nwkRxIndicateLLBeaconFrame
 714:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 715:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2568               		.loc 2 715 0
 2569 0e84 00C0      		rjmp .L120
 2570               	.L127:
 716:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLCOMMAND:
 717:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 718:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLCommandFrame(frame);
 2571               		.loc 2 718 0
 2572 0e86 8981      		ldd r24,Y+1
 2573 0e88 9A81      		ldd r25,Y+2
 2574 0e8a 0E94 0000 		call nwkRxIndicateLLCommandFrame
 719:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 720:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2575               		.loc 2 720 0
 2576 0e8e 0000      		nop
 2577               	.L120:
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2578               		.loc 2 668 0
 2579 0e90 8981      		ldd r24,Y+1
 2580 0e92 9A81      		ldd r25,Y+2
 2581 0e94 0E94 0000 		call nwkFrameNext
 2582 0e98 9A83      		std Y+2,r25
 2583 0e9a 8983      		std Y+1,r24
 2584 0e9c 8981      		ldd r24,Y+1
 2585 0e9e 9A81      		ldd r25,Y+2
 2586 0ea0 892B      		or r24,r25
 2587 0ea2 01F0      		breq .+2
 2588 0ea4 00C0      		rjmp .L128
 721:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 722:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2589               		.loc 2 723 0
 2590 0ea6 0000      		nop
 2591               	/* epilogue start */
 2592 0ea8 0F90      		pop __tmp_reg__
 2593 0eaa 0F90      		pop __tmp_reg__
 2594 0eac DF91      		pop r29
 2595 0eae CF91      		pop r28
 2596 0eb0 0895      		ret
 2597               		.cfi_endproc
 2598               	.LFE79:
 2600               	.Letext0:
 2601               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 2602               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 2603               		.file 5 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 2604               		.file 6 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 2605               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 2606               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
 2607               		.file 9 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkRx.c
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:7      *ABS*:00000001 __zero_reg__
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:14     .bss.n:00000000 n
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:19     .bss.tTS:00000000 tTS
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:23     .text:00000000 nwkFramePayloadSize
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:85     .bss.nwkRxDuplicateRejectionTable:00000000 nwkRxDuplicateRejectionTable
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:90     .bss.nwkRxAckControl:00000000 nwkRxAckControl
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:95     .bss.nwkRxDuplicateRejectionTimer:00000000 nwkRxDuplicateRejectionTimer
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:100    .text:00000044 nwkRxInit
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:727    .text:000003e0 nwkRxDuplicateRejectionTimerHandler
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:1125   .text:00000622 nwkRxSeriveDataInd
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:187    .text:000000b6 PHY_DataInd
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:517    .text:000002b6 nwkRxSendAck
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:689    .text:000003c4 NWK_SetAckControl
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:842    .text:0000047a nwkRxRejectDuplicate
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:1193   .text:0000066c nwkRxHandleReceivedFrame
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:1643   .text:00000946 nwkRxIndicateDataFrame
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:1982   .text:00000b54 nwkRxIndicateBeaconFrame
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:2126   .text:00000c2a nwkRxIndicateLLBeaconFrame
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:2236   .text:00000cc2 nwkRxIndicateLLCommandFrame
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:2352   .text:00000d64 nwkRxHandleIndication
C:\Users\guilh\AppData\Local\Temp\ccG5Ws7X.s:2477   .text:00000e0e nwkRxTaskHandler

UNDEFINED SYMBOLS
NWK_OpenEndpoint
nwkFrameAlloc
nwkFrameAlloc_LLDN
memcpy
nwkFrameCommandInit
nwkTxFrame
SYS_TimerStart
nwkTxAckReceived
nwkIb
NWK_GroupIsMember
nwkTxBroadcastFrame
nwkFrameFree
nwkFrameNext
__do_clear_bss
