   1               		.file	"nwkRx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	n,1,1
  12               		.comm	tTS,4,1
  13               		.comm	macLLDNnumTimeSlots,2,1
  14               		.comm	macLLDNnumUplinkTS,2,1
  15               		.comm	macLLDNRetransmitTS,2,1
  17               	nwkFramePayloadSize:
  18               	.LFB65:
  19               		.file 1 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
   1:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /**
   2:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \file nwkFrame.h
   3:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   4:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \brief Frame buffers management interface
   5:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   6:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   8:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  10:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  13:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  16:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  20:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  23:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  26:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  38:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  40:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  41:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  42:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  43:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*
  44:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  46:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  48:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  49:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #ifndef _NWK_FRAME_H_
  50:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define _NWK_FRAME_H_
  51:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  52:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Includes ---------------------------------------------------------------*/
  53:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include <stdint.h>
  54:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include "compiler.h"
  55:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  56:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Definitions ------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define NWK_FRAME_MAX_PAYLOAD_SIZE   127
  58:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  59:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Types ------------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_SET(1)
  61:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameHeader_t {
  62:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  63:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  64:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstPanId;
  65:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstAddr;
  66:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  67:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  68:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  69:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t ackRequest : 1;
  70:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t security   : 1;
  71:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t linkLocal  : 1;
  72:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t multicast  : 1;
  73:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t beacon     : 1;
  74:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved   : 3;
  75:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} nwkFcf;
  76:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t nwkSeq;
  77:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkSrcAddr;
  78:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkDstAddr;
  79:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  80:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkSrcEndpoint : 4;
  81:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkDstEndpoint : 4;
  82:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
  83:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameHeader_t;
  84:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  85:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeader_t {
  86:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  87:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  88:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcPanId;
  89:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  90:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
  91:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
  92:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t beaconOrder			: 4;
  93:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t superframeOrder		: 4;
  94:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t finalCAPslot			: 4;
  95:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t BatteryLifeExtension	: 1;
  96:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t Reserved				: 1;
  97:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t PANCoordinator			: 1;
  98:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t AssociationPermit		: 1;
  99:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSFS;
 100:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macGTS;
 101:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macPending;
 102:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeader_t;
 103:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 104:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 105:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeaderLLDN_t {
 106:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/******* MHR *****/
 107:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// struct
 108:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// {
 109:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameType 				: 3;
 110:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SecurityEnabled 	: 1;
 111:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameVersion			: 1;
 112:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t ackRequest				: 1;
 113:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SubFrameType			: 2;
 114:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// } macFcf;
 115:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 116:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 117:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 118:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 119:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 120:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 121:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 122:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 123:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 124:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 125:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/****** MAC Payload *******/
 126:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 127:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 128:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txState 			: 3;
 129:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txDir 				: 1;
 130:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved			: 1;
 131:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t numBaseMgmtTimeslots: 3; // number of managment time slots
 132:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 										// uplink and downlink must be equal
 133:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} Flags;
 134:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 135:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t PanId;
 136:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t confSeqNumber;
 137:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t TimeSlotSize;
 138:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t NumberOfBaseTimeslotsinSuperframe;
 139:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 140:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeaderLLDN_t;
 141:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 142:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameGeneralHeaderLLDN_t {
 143:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	#if (TAL_TYPE == AT86RF233)
 144:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	#endif
 145:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// uint8_t PHR;
 146:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 147:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 148:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 149:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 150:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 151:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 152:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 153:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 154:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 155:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 156:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 157:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameGeneralHeaderLLDN_t;
 158:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 159:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 160:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameMulticastHeader_t {
 161:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nonMemberRadius    : 4;
 162:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxNonMemberRadius : 4;
 163:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t memberRadius       : 4;
 164:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxMemberRadius    : 4;
 165:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameMulticastHeader_t;
 166:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 167:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct NwkFrame_t {
 168:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t state;
 169:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t size;
 170:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 171:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 172:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameHeader_t header;
 173:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeader_t beacon;
 174:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeaderLLDN_t LLbeacon;
 175:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameGeneralHeaderLLDN_t LLgeneral;
 176:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t data[NWK_FRAME_MAX_PAYLOAD_SIZE];
 177:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 178:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 179:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t *payload;
 180:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 181:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 182:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 183:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t lqi;
 184:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			int8_t rssi;
 185:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} rx;
 186:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 187:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 188:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t status;
 189:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint16_t timeout;
 190:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t control;
 191:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			void (*confirm)(struct NwkFrame_t *frame);
 192:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} tx;
 193:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 194:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrame_t;
 195:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_RESET()
 196:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Prototypes -------------------------------------------------------------*/
 197:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameInit(void);
 198:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc(void);
 199:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameFree(NwkFrame_t *frame);
 200:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);
 201:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameCommandInit(NwkFrame_t *frame);
 202:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 203:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame);
 204:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Implementations --------------------------------------------------------*/
 205:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 206:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*************************************************************************//**
 207:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** *****************************************************************************/
 208:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** static inline uint8_t nwkFramePayloadSize(NwkFrame_t *frame)
 209:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** {
  20               		.loc 1 209 0
  21               		.cfi_startproc
  22 0000 CF93      		push r28
  23               	.LCFI0:
  24               		.cfi_def_cfa_offset 3
  25               		.cfi_offset 28, -2
  26 0002 DF93      		push r29
  27               	.LCFI1:
  28               		.cfi_def_cfa_offset 4
  29               		.cfi_offset 29, -3
  30 0004 00D0      		rcall .
  31               	.LCFI2:
  32               		.cfi_def_cfa_offset 6
  33 0006 CDB7      		in r28,__SP_L__
  34 0008 DEB7      		in r29,__SP_H__
  35               	.LCFI3:
  36               		.cfi_def_cfa_register 28
  37               	/* prologue: function */
  38               	/* frame size = 2 */
  39               	/* stack size = 4 */
  40               	.L__stack_usage = 4
  41 000a 9A83      		std Y+2,r25
  42 000c 8983      		std Y+1,r24
 210:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	return frame->size - (frame->payload - frame->data);
  43               		.loc 1 210 0
  44 000e 8981      		ldd r24,Y+1
  45 0010 9A81      		ldd r25,Y+2
  46 0012 FC01      		movw r30,r24
  47 0014 4181      		ldd r20,Z+1
  48 0016 8981      		ldd r24,Y+1
  49 0018 9A81      		ldd r25,Y+2
  50 001a 8F57      		subi r24,127
  51 001c 9F4F      		sbci r25,-1
  52 001e FC01      		movw r30,r24
  53 0020 8081      		ld r24,Z
  54 0022 9181      		ldd r25,Z+1
  55 0024 9C01      		movw r18,r24
  56 0026 8981      		ldd r24,Y+1
  57 0028 9A81      		ldd r25,Y+2
  58 002a 0296      		adiw r24,2
  59 002c B901      		movw r22,r18
  60 002e 681B      		sub r22,r24
  61 0030 790B      		sbc r23,r25
  62 0032 CB01      		movw r24,r22
  63 0034 742F      		mov r23,r20
  64 0036 781B      		sub r23,r24
  65 0038 872F      		mov r24,r23
  66               	/* epilogue start */
 211:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** }
  67               		.loc 1 211 0
  68 003a 0F90      		pop __tmp_reg__
  69 003c 0F90      		pop __tmp_reg__
  70 003e DF91      		pop r29
  71 0040 CF91      		pop r28
  72 0042 0895      		ret
  73               		.cfi_endproc
  74               	.LFE65:
  76               		.section	.bss.nwkRxDuplicateRejectionTable,"aw",@nobits
  79               	nwkRxDuplicateRejectionTable:
  80 0000 0000 0000 		.zero	250
  80      0000 0000 
  80      0000 0000 
  80      0000 0000 
  80      0000 0000 
  81               		.section	.bss.nwkRxAckControl,"aw",@nobits
  84               	nwkRxAckControl:
  85 0000 00        		.zero	1
  86               		.section	.bss.nwkRxDuplicateRejectionTimer,"aw",@nobits
  89               	nwkRxDuplicateRejectionTimer:
  90 0000 0000 0000 		.zero	13
  90      0000 0000 
  90      0000 0000 
  90      00
  91               		.text
  92               	.global	nwkRxInit
  94               	nwkRxInit:
  95               	.LFB66:
  96               		.file 2 "../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \file nwkRx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \brief Receive routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkGroup.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRoute.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkCommand.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkSecurity.h"
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRouteDiscovery.h"
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Definitions ------------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL   100 /* ms */
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define DUPLICATE_REJECTION_TTL	\
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	((NWK_DUPLICATE_REJECTION_TTL /	\
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL) + 1)
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_SERVICE_ENDPOINT_ID    0
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Types ------------------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** enum {
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_RECEIVED = 0x20,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_DECRYPT  = 0x21,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_INDICATE = 0x22,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_ROUTE    = 0x23,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_FINISH   = 0x24,
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_BEACON   = 0x25,
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLBEACON 	= 0x26,
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLCOMMAND 	= 0x27,
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLACKFRAME = 0x28,
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLDATA		= 0x29
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** };
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** typedef struct NwkDuplicateRejectionEntry_t {
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint16_t src;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t seq;
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t mask;
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t ttl;
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** } NwkDuplicateRejectionEntry_t;
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Prototypes -------------------------------------------------------------*/
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer);
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind);
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Variables --------------------------------------------------------------*/
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static NwkDuplicateRejectionEntry_t nwkRxDuplicateRejectionTable[
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DUPLICATE_REJECTION_TABLE_SIZE];
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static uint8_t nwkRxAckControl;
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static SYS_Timer_t nwkRxDuplicateRejectionTimer;
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Implementations --------------------------------------------------------*/
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Initializes the Rx module
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxInit(void)
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
  97               		.loc 2 110 0
  98               		.cfi_startproc
  99 0044 CF93      		push r28
 100               	.LCFI4:
 101               		.cfi_def_cfa_offset 3
 102               		.cfi_offset 28, -2
 103 0046 DF93      		push r29
 104               	.LCFI5:
 105               		.cfi_def_cfa_offset 4
 106               		.cfi_offset 29, -3
 107 0048 1F92      		push __zero_reg__
 108               	.LCFI6:
 109               		.cfi_def_cfa_offset 5
 110 004a CDB7      		in r28,__SP_L__
 111 004c DEB7      		in r29,__SP_H__
 112               	.LCFI7:
 113               		.cfi_def_cfa_register 28
 114               	/* prologue: function */
 115               	/* frame size = 1 */
 116               	/* stack size = 3 */
 117               	.L__stack_usage = 3
 118               	.LBB2:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 119               		.loc 2 111 0
 120 004e 1982      		std Y+1,__zero_reg__
 121 0050 00C0      		rjmp .L4
 122               	.L5:
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxDuplicateRejectionTable[i].ttl = 0;
 123               		.loc 2 112 0 discriminator 3
 124 0052 8981      		ldd r24,Y+1
 125 0054 282F      		mov r18,r24
 126 0056 30E0      		ldi r19,0
 127 0058 C901      		movw r24,r18
 128 005a 880F      		lsl r24
 129 005c 991F      		rol r25
 130 005e 880F      		lsl r24
 131 0060 991F      		rol r25
 132 0062 820F      		add r24,r18
 133 0064 931F      		adc r25,r19
 134 0066 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 135 0068 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 136 006a FC01      		movw r30,r24
 137 006c 1082      		st Z,__zero_reg__
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 138               		.loc 2 111 0 discriminator 3
 139 006e 8981      		ldd r24,Y+1
 140 0070 8F5F      		subi r24,lo8(-(1))
 141 0072 8983      		std Y+1,r24
 142               	.L4:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 143               		.loc 2 111 0 is_stmt 0 discriminator 1
 144 0074 8981      		ldd r24,Y+1
 145 0076 8233      		cpi r24,lo8(50)
 146 0078 00F0      		brlo .L5
 147               	.LBE2:
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.interval
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL;
 148               		.loc 2 116 0 is_stmt 1
 149 007a 84E6      		ldi r24,lo8(100)
 150 007c 90E0      		ldi r25,0
 151 007e A0E0      		ldi r26,0
 152 0080 B0E0      		ldi r27,0
 153 0082 8093 0000 		sts nwkRxDuplicateRejectionTimer+6,r24
 154 0086 9093 0000 		sts nwkRxDuplicateRejectionTimer+6+1,r25
 155 008a A093 0000 		sts nwkRxDuplicateRejectionTimer+6+2,r26
 156 008e B093 0000 		sts nwkRxDuplicateRejectionTimer+6+3,r27
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE;
 157               		.loc 2 117 0
 158 0092 1092 0000 		sts nwkRxDuplicateRejectionTimer+10,__zero_reg__
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.handler
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= nwkRxDuplicateRejectionTimerHandler;
 159               		.loc 2 119 0
 160 0096 80E0      		ldi r24,lo8(gs(nwkRxDuplicateRejectionTimerHandler))
 161 0098 90E0      		ldi r25,hi8(gs(nwkRxDuplicateRejectionTimerHandler))
 162 009a 9093 0000 		sts nwkRxDuplicateRejectionTimer+11+1,r25
 163 009e 8093 0000 		sts nwkRxDuplicateRejectionTimer+11,r24
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_OpenEndpoint(NWK_SERVICE_ENDPOINT_ID, nwkRxSeriveDataInd);
 164               		.loc 2 121 0
 165 00a2 60E0      		ldi r22,lo8(gs(nwkRxSeriveDataInd))
 166 00a4 70E0      		ldi r23,hi8(gs(nwkRxSeriveDataInd))
 167 00a6 80E0      		ldi r24,0
 168 00a8 0E94 0000 		call NWK_OpenEndpoint
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 169               		.loc 2 122 0
 170 00ac 0000      		nop
 171               	/* epilogue start */
 172 00ae 0F90      		pop __tmp_reg__
 173 00b0 DF91      		pop r29
 174 00b2 CF91      		pop r28
 175 00b4 0895      		ret
 176               		.cfi_endproc
 177               	.LFE66:
 179               		.weak	PHY_DataInd
 181               	PHY_DataInd:
 182               	.LFB67:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void __attribute__((weak)) PHY_DataInd(PHY_DataInd_t *ind)
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 183               		.loc 2 127 0
 184               		.cfi_startproc
 185 00b6 CF93      		push r28
 186               	.LCFI8:
 187               		.cfi_def_cfa_offset 3
 188               		.cfi_offset 28, -2
 189 00b8 DF93      		push r29
 190               	.LCFI9:
 191               		.cfi_def_cfa_offset 4
 192               		.cfi_offset 29, -3
 193 00ba 00D0      		rcall .
 194 00bc 00D0      		rcall .
 195               	.LCFI10:
 196               		.cfi_def_cfa_offset 8
 197 00be CDB7      		in r28,__SP_L__
 198 00c0 DEB7      		in r29,__SP_H__
 199               	.LCFI11:
 200               		.cfi_def_cfa_register 28
 201               	/* prologue: function */
 202               	/* frame size = 4 */
 203               	/* stack size = 6 */
 204               	.L__stack_usage = 6
 205 00c2 9C83      		std Y+4,r25
 206 00c4 8B83      		std Y+3,r24
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame;
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-Beacon frame
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 		for (int i = 0; i < ind->size; i++)
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 		{
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 			printf("\ndata[%d] %hhx", i,ind->data[i]);
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // /  		}
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(0x0c == ind->data[0])
 207               		.loc 2 137 0
 208 00c6 8B81      		ldd r24,Y+3
 209 00c8 9C81      		ldd r25,Y+4
 210 00ca FC01      		movw r30,r24
 211 00cc 8081      		ld r24,Z
 212 00ce 9181      		ldd r25,Z+1
 213 00d0 FC01      		movw r30,r24
 214 00d2 8081      		ld r24,Z
 215 00d4 8C30      		cpi r24,lo8(12)
 216 00d6 01F4      		brne .L7
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameBeaconHeaderLLDN_t))
 217               		.loc 2 139 0
 218 00d8 8B81      		ldd r24,Y+3
 219 00da 9C81      		ldd r25,Y+4
 220 00dc FC01      		movw r30,r24
 221 00de 8281      		ldd r24,Z+2
 222 00e0 8830      		cpi r24,lo8(8)
 223 00e2 00F0      		brlo .+2
 224 00e4 00C0      		rjmp .L8
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 225               		.loc 2 141 0
 226 00e6 00C0      		rjmp .L6
 227               	.L7:
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-MAC Command frame
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0xcc == ind->data[0] || 0x8c == ind->data[0] || 0x4c == ind->data[0])
 228               		.loc 2 145 0
 229 00e8 8B81      		ldd r24,Y+3
 230 00ea 9C81      		ldd r25,Y+4
 231 00ec FC01      		movw r30,r24
 232 00ee 8081      		ld r24,Z
 233 00f0 9181      		ldd r25,Z+1
 234 00f2 FC01      		movw r30,r24
 235 00f4 8081      		ld r24,Z
 236 00f6 8C3C      		cpi r24,lo8(-52)
 237 00f8 01F0      		breq .L10
 238               		.loc 2 145 0 is_stmt 0 discriminator 1
 239 00fa 8B81      		ldd r24,Y+3
 240 00fc 9C81      		ldd r25,Y+4
 241 00fe FC01      		movw r30,r24
 242 0100 8081      		ld r24,Z
 243 0102 9181      		ldd r25,Z+1
 244 0104 FC01      		movw r30,r24
 245 0106 8081      		ld r24,Z
 246 0108 8C38      		cpi r24,lo8(-116)
 247 010a 01F0      		breq .L10
 248               		.loc 2 145 0 discriminator 2
 249 010c 8B81      		ldd r24,Y+3
 250 010e 9C81      		ldd r25,Y+4
 251 0110 FC01      		movw r30,r24
 252 0112 8081      		ld r24,Z
 253 0114 9181      		ldd r25,Z+1
 254 0116 FC01      		movw r30,r24
 255 0118 8081      		ld r24,Z
 256 011a 8C34      		cpi r24,lo8(76)
 257 011c 01F4      		brne .L11
 258               	.L10:
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameGeneralHeaderLLDN_t))
 259               		.loc 2 147 0 is_stmt 1
 260 011e 8B81      		ldd r24,Y+3
 261 0120 9C81      		ldd r25,Y+4
 262 0122 FC01      		movw r30,r24
 263 0124 8281      		ldd r24,Z+2
 264 0126 8330      		cpi r24,lo8(3)
 265 0128 00F0      		brlo .+2
 266 012a 00C0      		rjmp .L8
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 267               		.loc 2 149 0
 268 012c 00C0      		rjmp .L6
 269               	.L11:
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x88 == ind->data[1])
 270               		.loc 2 152 0
 271 012e 8B81      		ldd r24,Y+3
 272 0130 9C81      		ldd r25,Y+4
 273 0132 FC01      		movw r30,r24
 274 0134 8081      		ld r24,Z
 275 0136 9181      		ldd r25,Z+1
 276 0138 0196      		adiw r24,1
 277 013a FC01      		movw r30,r24
 278 013c 8081      		ld r24,Z
 279 013e 8838      		cpi r24,lo8(-120)
 280 0140 01F4      		brne .L13
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x61 != ind->data[0] && 0x41 != ind->data[0]) || ind->size < sizeof(NwkFrameHeader_t))
 281               		.loc 2 154 0
 282 0142 8B81      		ldd r24,Y+3
 283 0144 9C81      		ldd r25,Y+4
 284 0146 FC01      		movw r30,r24
 285 0148 8081      		ld r24,Z
 286 014a 9181      		ldd r25,Z+1
 287 014c FC01      		movw r30,r24
 288 014e 8081      		ld r24,Z
 289 0150 8136      		cpi r24,lo8(97)
 290 0152 01F0      		breq .L14
 291               		.loc 2 154 0 is_stmt 0 discriminator 1
 292 0154 8B81      		ldd r24,Y+3
 293 0156 9C81      		ldd r25,Y+4
 294 0158 FC01      		movw r30,r24
 295 015a 8081      		ld r24,Z
 296 015c 9181      		ldd r25,Z+1
 297 015e FC01      		movw r30,r24
 298 0160 8081      		ld r24,Z
 299 0162 8134      		cpi r24,lo8(65)
 300 0164 01F0      		breq .+2
 301 0166 00C0      		rjmp .L29
 302               	.L14:
 303               		.loc 2 154 0 discriminator 3
 304 0168 8B81      		ldd r24,Y+3
 305 016a 9C81      		ldd r25,Y+4
 306 016c FC01      		movw r30,r24
 307 016e 8281      		ldd r24,Z+2
 308 0170 8031      		cpi r24,lo8(16)
 309 0172 00F4      		brsh .L8
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 310               		.loc 2 156 0 is_stmt 1
 311 0174 00C0      		rjmp .L29
 312               	.L13:
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x80 == ind->data[1])
 313               		.loc 2 159 0
 314 0176 8B81      		ldd r24,Y+3
 315 0178 9C81      		ldd r25,Y+4
 316 017a FC01      		movw r30,r24
 317 017c 8081      		ld r24,Z
 318 017e 9181      		ldd r25,Z+1
 319 0180 0196      		adiw r24,1
 320 0182 FC01      		movw r30,r24
 321 0184 8081      		ld r24,Z
 322 0186 8038      		cpi r24,lo8(-128)
 323 0188 01F0      		breq .+2
 324 018a 00C0      		rjmp .L30
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x00 != ind->data[0]) || ind->size < (sizeof(NwkFrameBeaconHeader_t)))
 325               		.loc 2 161 0
 326 018c 8B81      		ldd r24,Y+3
 327 018e 9C81      		ldd r25,Y+4
 328 0190 FC01      		movw r30,r24
 329 0192 8081      		ld r24,Z
 330 0194 9181      		ldd r25,Z+1
 331 0196 FC01      		movw r30,r24
 332 0198 8081      		ld r24,Z
 333 019a 8823      		tst r24
 334 019c 01F0      		breq .+2
 335 019e 00C0      		rjmp .L31
 336               		.loc 2 161 0 is_stmt 0 discriminator 1
 337 01a0 8B81      		ldd r24,Y+3
 338 01a2 9C81      		ldd r25,Y+4
 339 01a4 FC01      		movw r30,r24
 340 01a6 8281      		ldd r24,Z+2
 341 01a8 8B30      		cpi r24,lo8(11)
 342 01aa 00F4      		brsh .+2
 343 01ac 00C0      		rjmp .L31
 344               	.L8:
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(ind->data[1] == 0x88 || ind->data[1] == 0x80)
 345               		.loc 2 171 0 is_stmt 1
 346 01ae 8B81      		ldd r24,Y+3
 347 01b0 9C81      		ldd r25,Y+4
 348 01b2 FC01      		movw r30,r24
 349 01b4 8081      		ld r24,Z
 350 01b6 9181      		ldd r25,Z+1
 351 01b8 0196      		adiw r24,1
 352 01ba FC01      		movw r30,r24
 353 01bc 8081      		ld r24,Z
 354 01be 8838      		cpi r24,lo8(-120)
 355 01c0 01F0      		breq .L18
 356               		.loc 2 171 0 is_stmt 0 discriminator 1
 357 01c2 8B81      		ldd r24,Y+3
 358 01c4 9C81      		ldd r25,Y+4
 359 01c6 FC01      		movw r30,r24
 360 01c8 8081      		ld r24,Z
 361 01ca 9181      		ldd r25,Z+1
 362 01cc 0196      		adiw r24,1
 363 01ce FC01      		movw r30,r24
 364 01d0 8081      		ld r24,Z
 365 01d2 8038      		cpi r24,lo8(-128)
 366 01d4 01F4      		brne .L19
 367               	.L18:
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc())) {
 368               		.loc 2 173 0 is_stmt 1
 369 01d6 0E94 0000 		call nwkFrameAlloc
 370 01da 9A83      		std Y+2,r25
 371 01dc 8983      		std Y+1,r24
 372 01de 8981      		ldd r24,Y+1
 373 01e0 9A81      		ldd r25,Y+2
 374 01e2 892B      		or r24,r25
 375 01e4 01F4      		brne .+2
 376 01e6 00C0      		rjmp .L32
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame received is NwkFrameHeader change state to Receveid
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is a 802.15.4 beacon change state to Beacon
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = ((0x88 == ind->data[1]) ? NWK_RX_STATE_RECEIVED : NWK_RX_STATE_BEACON);
 377               		.loc 2 178 0
 378 01e8 8B81      		ldd r24,Y+3
 379 01ea 9C81      		ldd r25,Y+4
 380 01ec FC01      		movw r30,r24
 381 01ee 8081      		ld r24,Z
 382 01f0 9181      		ldd r25,Z+1
 383 01f2 0196      		adiw r24,1
 384 01f4 FC01      		movw r30,r24
 385 01f6 8081      		ld r24,Z
 386 01f8 8838      		cpi r24,lo8(-120)
 387 01fa 01F4      		brne .L21
 388               		.loc 2 178 0 is_stmt 0 discriminator 1
 389 01fc 20E2      		ldi r18,lo8(32)
 390 01fe 00C0      		rjmp .L22
 391               	.L21:
 392               		.loc 2 178 0 discriminator 2
 393 0200 25E2      		ldi r18,lo8(37)
 394               	.L22:
 395               		.loc 2 178 0 discriminator 4
 396 0202 8981      		ldd r24,Y+1
 397 0204 9A81      		ldd r25,Y+2
 398 0206 FC01      		movw r30,r24
 399 0208 2083      		st Z,r18
 400 020a 00C0      		rjmp .L23
 401               	.L19:
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// allocate frame buffer according to received frame
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(ind->data[0] == 0x0c)
 402               		.loc 2 181 0 is_stmt 1
 403 020c 8B81      		ldd r24,Y+3
 404 020e 9C81      		ldd r25,Y+4
 405 0210 FC01      		movw r30,r24
 406 0212 8081      		ld r24,Z
 407 0214 9181      		ldd r25,Z+1
 408 0216 FC01      		movw r30,r24
 409 0218 8081      		ld r24,Z
 410 021a 8C30      		cpi r24,lo8(12)
 411 021c 01F4      		brne .L24
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-Beacon frame
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(true))){
 412               		.loc 2 184 0
 413 021e 81E0      		ldi r24,lo8(1)
 414 0220 0E94 0000 		call nwkFrameAlloc_LLDN
 415 0224 9A83      		std Y+2,r25
 416 0226 8983      		std Y+1,r24
 417 0228 8981      		ldd r24,Y+1
 418 022a 9A81      		ldd r25,Y+2
 419 022c 892B      		or r24,r25
 420 022e 01F4      		brne .+2
 421 0230 00C0      		rjmp .L33
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-Beacon change state to LLBEACON
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLBEACON;
 422               		.loc 2 188 0
 423 0232 8981      		ldd r24,Y+1
 424 0234 9A81      		ldd r25,Y+2
 425 0236 26E2      		ldi r18,lo8(38)
 426 0238 FC01      		movw r30,r24
 427 023a 2083      		st Z,r18
 428 023c 00C0      		rjmp .L23
 429               	.L24:
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-MAC command or LL-Data frame
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(false))){
 430               		.loc 2 193 0
 431 023e 80E0      		ldi r24,0
 432 0240 0E94 0000 		call nwkFrameAlloc_LLDN
 433 0244 9A83      		std Y+2,r25
 434 0246 8983      		std Y+1,r24
 435 0248 8981      		ldd r24,Y+1
 436 024a 9A81      		ldd r25,Y+2
 437 024c 892B      		or r24,r25
 438 024e 01F4      		brne .+2
 439 0250 00C0      		rjmp .L34
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-AckFrame change state to LLACKFRAME
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-MACComand change state to LLCOMMAND
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->data[0] == 0x8c) 
 440               		.loc 2 198 0
 441 0252 8B81      		ldd r24,Y+3
 442 0254 9C81      		ldd r25,Y+4
 443 0256 FC01      		movw r30,r24
 444 0258 8081      		ld r24,Z
 445 025a 9181      		ldd r25,Z+1
 446 025c FC01      		movw r30,r24
 447 025e 8081      		ld r24,Z
 448 0260 8C38      		cpi r24,lo8(-116)
 449 0262 01F4      		brne .L27
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLACKFRAME;
 450               		.loc 2 199 0
 451 0264 8981      		ldd r24,Y+1
 452 0266 9A81      		ldd r25,Y+2
 453 0268 28E2      		ldi r18,lo8(40)
 454 026a FC01      		movw r30,r24
 455 026c 2083      		st Z,r18
 456 026e 00C0      		rjmp .L23
 457               	.L27:
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if(ind->data[0] == 0xcc)
 458               		.loc 2 200 0
 459 0270 8B81      		ldd r24,Y+3
 460 0272 9C81      		ldd r25,Y+4
 461 0274 FC01      		movw r30,r24
 462 0276 8081      		ld r24,Z
 463 0278 9181      		ldd r25,Z+1
 464 027a FC01      		movw r30,r24
 465 027c 8081      		ld r24,Z
 466 027e 8C3C      		cpi r24,lo8(-52)
 467 0280 01F4      		brne .L28
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLCOMMAND;
 468               		.loc 2 201 0
 469 0282 8981      		ldd r24,Y+1
 470 0284 9A81      		ldd r25,Y+2
 471 0286 27E2      		ldi r18,lo8(39)
 472 0288 FC01      		movw r30,r24
 473 028a 2083      		st Z,r18
 474 028c 00C0      		rjmp .L23
 475               	.L28:
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLDATA;	
 476               		.loc 2 203 0
 477 028e 8981      		ldd r24,Y+1
 478 0290 9A81      		ldd r25,Y+2
 479 0292 29E2      		ldi r18,lo8(41)
 480 0294 FC01      		movw r30,r24
 481 0296 2083      		st Z,r18
 482               	.L23:
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size = ind->size;
 483               		.loc 2 206 0
 484 0298 8B81      		ldd r24,Y+3
 485 029a 9C81      		ldd r25,Y+4
 486 029c FC01      		movw r30,r24
 487 029e 2281      		ldd r18,Z+2
 488 02a0 8981      		ldd r24,Y+1
 489 02a2 9A81      		ldd r25,Y+2
 490 02a4 FC01      		movw r30,r24
 491 02a6 2183      		std Z+1,r18
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\nframe->size = %hhx", frame->size);
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.lqi = ind->lqi;
 492               		.loc 2 208 0
 493 02a8 8B81      		ldd r24,Y+3
 494 02aa 9C81      		ldd r25,Y+4
 495 02ac FC01      		movw r30,r24
 496 02ae 2381      		ldd r18,Z+3
 497 02b0 8981      		ldd r24,Y+1
 498 02b2 9A81      		ldd r25,Y+2
 499 02b4 8D57      		subi r24,125
 500 02b6 9F4F      		sbci r25,-1
 501 02b8 FC01      		movw r30,r24
 502 02ba 2083      		st Z,r18
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.rssi = ind->rssi;
 503               		.loc 2 209 0
 504 02bc 8B81      		ldd r24,Y+3
 505 02be 9C81      		ldd r25,Y+4
 506 02c0 FC01      		movw r30,r24
 507 02c2 2481      		ldd r18,Z+4
 508 02c4 8981      		ldd r24,Y+1
 509 02c6 9A81      		ldd r25,Y+2
 510 02c8 8C57      		subi r24,124
 511 02ca 9F4F      		sbci r25,-1
 512 02cc FC01      		movw r30,r24
 513 02ce 2083      		st Z,r18
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	memcpy(frame->data, ind->data, ind->size);
 514               		.loc 2 210 0
 515 02d0 8B81      		ldd r24,Y+3
 516 02d2 9C81      		ldd r25,Y+4
 517 02d4 FC01      		movw r30,r24
 518 02d6 8281      		ldd r24,Z+2
 519 02d8 482F      		mov r20,r24
 520 02da 50E0      		ldi r21,0
 521 02dc 8B81      		ldd r24,Y+3
 522 02de 9C81      		ldd r25,Y+4
 523 02e0 FC01      		movw r30,r24
 524 02e2 2081      		ld r18,Z
 525 02e4 3181      		ldd r19,Z+1
 526 02e6 8981      		ldd r24,Y+1
 527 02e8 9A81      		ldd r25,Y+2
 528 02ea 0296      		adiw r24,2
 529 02ec B901      		movw r22,r18
 530 02ee 0E94 0000 		call memcpy
 531 02f2 00C0      		rjmp .L6
 532               	.L29:
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 533               		.loc 2 156 0
 534 02f4 0000      		nop
 535 02f6 00C0      		rjmp .L6
 536               	.L30:
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 537               		.loc 2 168 0
 538 02f8 0000      		nop
 539 02fa 00C0      		rjmp .L6
 540               	.L31:
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 541               		.loc 2 163 0
 542 02fc 0000      		nop
 543 02fe 00C0      		rjmp .L6
 544               	.L32:
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 545               		.loc 2 174 0
 546 0300 0000      		nop
 547 0302 00C0      		rjmp .L6
 548               	.L33:
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 549               		.loc 2 185 0
 550 0304 0000      		nop
 551 0306 00C0      		rjmp .L6
 552               	.L34:
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 553               		.loc 2 194 0
 554 0308 0000      		nop
 555               	.L6:
 556               	/* epilogue start */
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\nframe->payload[2] = %hhx", frame->payload[2]);
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 557               		.loc 2 213 0
 558 030a 0F90      		pop __tmp_reg__
 559 030c 0F90      		pop __tmp_reg__
 560 030e 0F90      		pop __tmp_reg__
 561 0310 0F90      		pop __tmp_reg__
 562 0312 DF91      		pop r29
 563 0314 CF91      		pop r28
 564 0316 0895      		ret
 565               		.cfi_endproc
 566               	.LFE67:
 569               	nwkRxSendAck:
 570               	.LFB68:
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxSendAck(NwkFrame_t *frame)
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 571               		.loc 2 218 0
 572               		.cfi_startproc
 573 0318 CF93      		push r28
 574               	.LCFI12:
 575               		.cfi_def_cfa_offset 3
 576               		.cfi_offset 28, -2
 577 031a DF93      		push r29
 578               	.LCFI13:
 579               		.cfi_def_cfa_offset 4
 580               		.cfi_offset 29, -3
 581 031c 00D0      		rcall .
 582 031e 00D0      		rcall .
 583 0320 00D0      		rcall .
 584               	.LCFI14:
 585               		.cfi_def_cfa_offset 10
 586 0322 CDB7      		in r28,__SP_L__
 587 0324 DEB7      		in r29,__SP_H__
 588               	.LCFI15:
 589               		.cfi_def_cfa_register 28
 590               	/* prologue: function */
 591               	/* frame size = 6 */
 592               	/* stack size = 8 */
 593               	.L__stack_usage = 8
 594 0326 9E83      		std Y+6,r25
 595 0328 8D83      		std Y+5,r24
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *ack;
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkCommandAck_t *command;
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (ack = nwkFrameAlloc())) {
 596               		.loc 2 222 0
 597 032a 0E94 0000 		call nwkFrameAlloc
 598 032e 9A83      		std Y+2,r25
 599 0330 8983      		std Y+1,r24
 600 0332 8981      		ldd r24,Y+1
 601 0334 9A81      		ldd r25,Y+2
 602 0336 892B      		or r24,r25
 603 0338 01F4      		brne .+2
 604 033a 00C0      		rjmp .L38
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size += sizeof(NwkFrameHeader_t);
 605               		.loc 2 226 0
 606 033c 8D81      		ldd r24,Y+5
 607 033e 9E81      		ldd r25,Y+6
 608 0340 FC01      		movw r30,r24
 609 0342 8181      		ldd r24,Z+1
 610 0344 20E1      		ldi r18,lo8(16)
 611 0346 280F      		add r18,r24
 612 0348 8D81      		ldd r24,Y+5
 613 034a 9E81      		ldd r25,Y+6
 614 034c FC01      		movw r30,r24
 615 034e 2183      		std Z+1,r18
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->payload += sizeof(NwkFrameHeader_t);
 616               		.loc 2 227 0
 617 0350 8D81      		ldd r24,Y+5
 618 0352 9E81      		ldd r25,Y+6
 619 0354 8F57      		subi r24,127
 620 0356 9F4F      		sbci r25,-1
 621 0358 FC01      		movw r30,r24
 622 035a 8081      		ld r24,Z
 623 035c 9181      		ldd r25,Z+1
 624 035e 9C01      		movw r18,r24
 625 0360 205F      		subi r18,-16
 626 0362 3F4F      		sbci r19,-1
 627 0364 8D81      		ldd r24,Y+5
 628 0366 9E81      		ldd r25,Y+6
 629 0368 8F57      		subi r24,127
 630 036a 9F4F      		sbci r25,-1
 631 036c FC01      		movw r30,r24
 632 036e 3183      		std Z+1,r19
 633 0370 2083      		st Z,r18
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkFrameCommandInit(ack);
 634               		.loc 2 229 0
 635 0372 8981      		ldd r24,Y+1
 636 0374 9A81      		ldd r25,Y+2
 637 0376 0E94 0000 		call nwkFrameCommandInit
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->size += sizeof(NwkCommandAck_t);
 638               		.loc 2 231 0
 639 037a 8981      		ldd r24,Y+1
 640 037c 9A81      		ldd r25,Y+2
 641 037e FC01      		movw r30,r24
 642 0380 8181      		ldd r24,Z+1
 643 0382 23E0      		ldi r18,lo8(3)
 644 0384 280F      		add r18,r24
 645 0386 8981      		ldd r24,Y+1
 646 0388 9A81      		ldd r25,Y+2
 647 038a FC01      		movw r30,r24
 648 038c 2183      		std Z+1,r18
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->tx.confirm = NULL;
 649               		.loc 2 232 0
 650 038e 8981      		ldd r24,Y+1
 651 0390 9A81      		ldd r25,Y+2
 652 0392 8957      		subi r24,121
 653 0394 9F4F      		sbci r25,-1
 654 0396 FC01      		movw r30,r24
 655 0398 1182      		std Z+1,__zero_reg__
 656 039a 1082      		st Z,__zero_reg__
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkFcf.security = frame->header.nwkFcf.security;
 657               		.loc 2 234 0
 658 039c 8D81      		ldd r24,Y+5
 659 039e 9E81      		ldd r25,Y+6
 660 03a0 FC01      		movw r30,r24
 661 03a2 8385      		ldd r24,Z+11
 662 03a4 81FB      		bst r24,1
 663 03a6 2227      		clr r18
 664 03a8 20F9      		bld r18,0
 665 03aa 8981      		ldd r24,Y+1
 666 03ac 9A81      		ldd r25,Y+2
 667 03ae 2170      		andi r18,lo8(1)
 668 03b0 220F      		lsl r18
 669 03b2 FC01      		movw r30,r24
 670 03b4 3385      		ldd r19,Z+11
 671 03b6 3D7F      		andi r19,lo8(-3)
 672 03b8 232B      		or r18,r19
 673 03ba FC01      		movw r30,r24
 674 03bc 2387      		std Z+11,r18
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 675               		.loc 2 235 0
 676 03be 8D81      		ldd r24,Y+5
 677 03c0 9E81      		ldd r25,Y+6
 678 03c2 FC01      		movw r30,r24
 679 03c4 2585      		ldd r18,Z+13
 680 03c6 3685      		ldd r19,Z+14
 681 03c8 8981      		ldd r24,Y+1
 682 03ca 9A81      		ldd r25,Y+2
 683 03cc FC01      		movw r30,r24
 684 03ce 308B      		std Z+16,r19
 685 03d0 2787      		std Z+15,r18
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command = (NwkCommandAck_t *)ack->payload;
 686               		.loc 2 237 0
 687 03d2 8981      		ldd r24,Y+1
 688 03d4 9A81      		ldd r25,Y+2
 689 03d6 8F57      		subi r24,127
 690 03d8 9F4F      		sbci r25,-1
 691 03da FC01      		movw r30,r24
 692 03dc 8081      		ld r24,Z
 693 03de 9181      		ldd r25,Z+1
 694 03e0 9C83      		std Y+4,r25
 695 03e2 8B83      		std Y+3,r24
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->id = NWK_COMMAND_ACK;
 696               		.loc 2 238 0
 697 03e4 8B81      		ldd r24,Y+3
 698 03e6 9C81      		ldd r25,Y+4
 699 03e8 FC01      		movw r30,r24
 700 03ea 1082      		st Z,__zero_reg__
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->control = nwkRxAckControl;
 701               		.loc 2 239 0
 702 03ec 2091 0000 		lds r18,nwkRxAckControl
 703 03f0 8B81      		ldd r24,Y+3
 704 03f2 9C81      		ldd r25,Y+4
 705 03f4 FC01      		movw r30,r24
 706 03f6 2283      		std Z+2,r18
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->seq = frame->header.nwkSeq;
 707               		.loc 2 240 0
 708 03f8 8D81      		ldd r24,Y+5
 709 03fa 9E81      		ldd r25,Y+6
 710 03fc FC01      		movw r30,r24
 711 03fe 2485      		ldd r18,Z+12
 712 0400 8B81      		ldd r24,Y+3
 713 0402 9C81      		ldd r25,Y+4
 714 0404 FC01      		movw r30,r24
 715 0406 2183      		std Z+1,r18
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkTxFrame(ack);
 716               		.loc 2 242 0
 717 0408 8981      		ldd r24,Y+1
 718 040a 9A81      		ldd r25,Y+2
 719 040c 0E94 0000 		call nwkTxFrame
 720 0410 00C0      		rjmp .L35
 721               	.L38:
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 722               		.loc 2 223 0
 723 0412 0000      		nop
 724               	.L35:
 725               	/* epilogue start */
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 726               		.loc 2 243 0
 727 0414 2696      		adiw r28,6
 728 0416 0FB6      		in __tmp_reg__,__SREG__
 729 0418 F894      		cli
 730 041a DEBF      		out __SP_H__,r29
 731 041c 0FBE      		out __SREG__,__tmp_reg__
 732 041e CDBF      		out __SP_L__,r28
 733 0420 DF91      		pop r29
 734 0422 CF91      		pop r28
 735 0424 0895      		ret
 736               		.cfi_endproc
 737               	.LFE68:
 739               	.global	NWK_SetAckControl
 741               	NWK_SetAckControl:
 742               	.LFB69:
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void NWK_SetAckControl(uint8_t control)
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 743               		.loc 2 248 0
 744               		.cfi_startproc
 745 0426 CF93      		push r28
 746               	.LCFI16:
 747               		.cfi_def_cfa_offset 3
 748               		.cfi_offset 28, -2
 749 0428 DF93      		push r29
 750               	.LCFI17:
 751               		.cfi_def_cfa_offset 4
 752               		.cfi_offset 29, -3
 753 042a 1F92      		push __zero_reg__
 754               	.LCFI18:
 755               		.cfi_def_cfa_offset 5
 756 042c CDB7      		in r28,__SP_L__
 757 042e DEB7      		in r29,__SP_H__
 758               	.LCFI19:
 759               		.cfi_def_cfa_register 28
 760               	/* prologue: function */
 761               	/* frame size = 1 */
 762               	/* stack size = 3 */
 763               	.L__stack_usage = 3
 764 0430 8983      		std Y+1,r24
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = control;
 765               		.loc 2 249 0
 766 0432 8981      		ldd r24,Y+1
 767 0434 8093 0000 		sts nwkRxAckControl,r24
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 768               		.loc 2 250 0
 769 0438 0000      		nop
 770               	/* epilogue start */
 771 043a 0F90      		pop __tmp_reg__
 772 043c DF91      		pop r29
 773 043e CF91      		pop r28
 774 0440 0895      		ret
 775               		.cfi_endproc
 776               	.LFE69:
 779               	nwkRxDuplicateRejectionTimerHandler:
 780               	.LFB70:
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxDecryptConf(NwkFrame_t *frame, bool status)
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (status) {
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_INDICATE;
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else {
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_FINISH;
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer)
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 781               		.loc 2 270 0
 782               		.cfi_startproc
 783 0442 CF93      		push r28
 784               	.LCFI20:
 785               		.cfi_def_cfa_offset 3
 786               		.cfi_offset 28, -2
 787 0444 DF93      		push r29
 788               	.LCFI21:
 789               		.cfi_def_cfa_offset 4
 790               		.cfi_offset 29, -3
 791 0446 00D0      		rcall .
 792 0448 00D0      		rcall .
 793               	.LCFI22:
 794               		.cfi_def_cfa_offset 8
 795 044a CDB7      		in r28,__SP_L__
 796 044c DEB7      		in r29,__SP_H__
 797               	.LCFI23:
 798               		.cfi_def_cfa_register 28
 799               	/* prologue: function */
 800               	/* frame size = 4 */
 801               	/* stack size = 6 */
 802               	.L__stack_usage = 6
 803 044e 9C83      		std Y+4,r25
 804 0450 8B83      		std Y+3,r24
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool restart = false;
 805               		.loc 2 271 0
 806 0452 1982      		std Y+1,__zero_reg__
 807               	.LBB3:
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 808               		.loc 2 273 0
 809 0454 1A82      		std Y+2,__zero_reg__
 810 0456 00C0      		rjmp .L41
 811               	.L43:
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 812               		.loc 2 274 0
 813 0458 8A81      		ldd r24,Y+2
 814 045a 282F      		mov r18,r24
 815 045c 30E0      		ldi r19,0
 816 045e C901      		movw r24,r18
 817 0460 880F      		lsl r24
 818 0462 991F      		rol r25
 819 0464 880F      		lsl r24
 820 0466 991F      		rol r25
 821 0468 820F      		add r24,r18
 822 046a 931F      		adc r25,r19
 823 046c 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 824 046e 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 825 0470 FC01      		movw r30,r24
 826 0472 8081      		ld r24,Z
 827 0474 8823      		tst r24
 828 0476 01F0      		breq .L42
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxDuplicateRejectionTable[i].ttl--;
 829               		.loc 2 275 0
 830 0478 8A81      		ldd r24,Y+2
 831 047a 282F      		mov r18,r24
 832 047c 30E0      		ldi r19,0
 833 047e C901      		movw r24,r18
 834 0480 880F      		lsl r24
 835 0482 991F      		rol r25
 836 0484 880F      		lsl r24
 837 0486 991F      		rol r25
 838 0488 820F      		add r24,r18
 839 048a 931F      		adc r25,r19
 840 048c 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 841 048e 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 842 0490 FC01      		movw r30,r24
 843 0492 8081      		ld r24,Z
 844 0494 4FEF      		ldi r20,lo8(-1)
 845 0496 480F      		add r20,r24
 846 0498 C901      		movw r24,r18
 847 049a 880F      		lsl r24
 848 049c 991F      		rol r25
 849 049e 880F      		lsl r24
 850 04a0 991F      		rol r25
 851 04a2 820F      		add r24,r18
 852 04a4 931F      		adc r25,r19
 853 04a6 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 854 04a8 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 855 04aa FC01      		movw r30,r24
 856 04ac 4083      		st Z,r20
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			restart = true;
 857               		.loc 2 276 0
 858 04ae 81E0      		ldi r24,lo8(1)
 859 04b0 8983      		std Y+1,r24
 860               	.L42:
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 861               		.loc 2 273 0 discriminator 2
 862 04b2 8A81      		ldd r24,Y+2
 863 04b4 8F5F      		subi r24,lo8(-(1))
 864 04b6 8A83      		std Y+2,r24
 865               	.L41:
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 866               		.loc 2 273 0 is_stmt 0 discriminator 1
 867 04b8 8A81      		ldd r24,Y+2
 868 04ba 8233      		cpi r24,lo8(50)
 869 04bc 00F0      		brlo .L43
 870               	.LBE3:
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (restart) {
 871               		.loc 2 280 0 is_stmt 1
 872 04be 8981      		ldd r24,Y+1
 873 04c0 8823      		tst r24
 874 04c2 01F0      		breq .L45
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		SYS_TimerStart(timer);
 875               		.loc 2 281 0
 876 04c4 8B81      		ldd r24,Y+3
 877 04c6 9C81      		ldd r25,Y+4
 878 04c8 0E94 0000 		call SYS_TimerStart
 879               	.L45:
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 880               		.loc 2 283 0
 881 04cc 0000      		nop
 882               	/* epilogue start */
 883 04ce 0F90      		pop __tmp_reg__
 884 04d0 0F90      		pop __tmp_reg__
 885 04d2 0F90      		pop __tmp_reg__
 886 04d4 0F90      		pop __tmp_reg__
 887 04d6 DF91      		pop r29
 888 04d8 CF91      		pop r28
 889 04da 0895      		ret
 890               		.cfi_endproc
 891               	.LFE70:
 894               	nwkRxRejectDuplicate:
 895               	.LFB71:
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxRejectDuplicate(NwkFrameHeader_t *header)
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 896               		.loc 2 288 0
 897               		.cfi_startproc
 898 04dc CF93      		push r28
 899               	.LCFI24:
 900               		.cfi_def_cfa_offset 3
 901               		.cfi_offset 28, -2
 902 04de DF93      		push r29
 903               	.LCFI25:
 904               		.cfi_def_cfa_offset 4
 905               		.cfi_offset 29, -3
 906 04e0 CDB7      		in r28,__SP_L__
 907 04e2 DEB7      		in r29,__SP_H__
 908               	.LCFI26:
 909               		.cfi_def_cfa_register 28
 910 04e4 2997      		sbiw r28,9
 911               	.LCFI27:
 912               		.cfi_def_cfa_offset 13
 913 04e6 0FB6      		in __tmp_reg__,__SREG__
 914 04e8 F894      		cli
 915 04ea DEBF      		out __SP_H__,r29
 916 04ec 0FBE      		out __SREG__,__tmp_reg__
 917 04ee CDBF      		out __SP_L__,r28
 918               	/* prologue: function */
 919               	/* frame size = 9 */
 920               	/* stack size = 11 */
 921               	.L__stack_usage = 11
 922 04f0 9987      		std Y+9,r25
 923 04f2 8887      		std Y+8,r24
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *entry;
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *freeEntry = NULL;
 924               		.loc 2 290 0
 925 04f4 1A82      		std Y+2,__zero_reg__
 926 04f6 1982      		std Y+1,__zero_reg__
 927               	.LBB4:
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 928               		.loc 2 292 0
 929 04f8 1B82      		std Y+3,__zero_reg__
 930 04fa 00C0      		rjmp .L47
 931               	.L53:
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 932               		.loc 2 293 0
 933 04fc 8B81      		ldd r24,Y+3
 934 04fe 282F      		mov r18,r24
 935 0500 30E0      		ldi r19,0
 936 0502 C901      		movw r24,r18
 937 0504 880F      		lsl r24
 938 0506 991F      		rol r25
 939 0508 880F      		lsl r24
 940 050a 991F      		rol r25
 941 050c 820F      		add r24,r18
 942 050e 931F      		adc r25,r19
 943 0510 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable))
 944 0512 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable))
 945 0514 9D83      		std Y+5,r25
 946 0516 8C83      		std Y+4,r24
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (entry->ttl && header->nwkSrcAddr == entry->src) {
 947               		.loc 2 295 0
 948 0518 8C81      		ldd r24,Y+4
 949 051a 9D81      		ldd r25,Y+5
 950 051c FC01      		movw r30,r24
 951 051e 8481      		ldd r24,Z+4
 952 0520 8823      		tst r24
 953 0522 01F4      		brne .+2
 954 0524 00C0      		rjmp .L48
 955               		.loc 2 295 0 is_stmt 0 discriminator 1
 956 0526 8885      		ldd r24,Y+8
 957 0528 9985      		ldd r25,Y+9
 958 052a FC01      		movw r30,r24
 959 052c 2385      		ldd r18,Z+11
 960 052e 3485      		ldd r19,Z+12
 961 0530 8C81      		ldd r24,Y+4
 962 0532 9D81      		ldd r25,Y+5
 963 0534 FC01      		movw r30,r24
 964 0536 8081      		ld r24,Z
 965 0538 9181      		ldd r25,Z+1
 966 053a 2817      		cp r18,r24
 967 053c 3907      		cpc r19,r25
 968 053e 01F0      		breq .+2
 969 0540 00C0      		rjmp .L48
 970               	.LBB5:
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			uint8_t diff = (int8_t)entry->seq - header->nwkSeq;
 971               		.loc 2 296 0 is_stmt 1
 972 0542 8C81      		ldd r24,Y+4
 973 0544 9D81      		ldd r25,Y+5
 974 0546 FC01      		movw r30,r24
 975 0548 2281      		ldd r18,Z+2
 976 054a 8885      		ldd r24,Y+8
 977 054c 9985      		ldd r25,Y+9
 978 054e FC01      		movw r30,r24
 979 0550 8285      		ldd r24,Z+10
 980 0552 F22F      		mov r31,r18
 981 0554 F81B      		sub r31,r24
 982 0556 8F2F      		mov r24,r31
 983 0558 8E83      		std Y+6,r24
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (diff < 8) {
 984               		.loc 2 298 0
 985 055a 8E81      		ldd r24,Y+6
 986 055c 8830      		cpi r24,lo8(8)
 987 055e 00F4      		brsh .L49
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				if (entry->mask & (1 << diff)) {
 988               		.loc 2 299 0
 989 0560 8C81      		ldd r24,Y+4
 990 0562 9D81      		ldd r25,Y+5
 991 0564 FC01      		movw r30,r24
 992 0566 8381      		ldd r24,Z+3
 993 0568 882F      		mov r24,r24
 994 056a 90E0      		ldi r25,0
 995 056c 2E81      		ldd r18,Y+6
 996 056e 222F      		mov r18,r18
 997 0570 30E0      		ldi r19,0
 998 0572 00C0      		rjmp 2f
 999               		1:
 1000 0574 9595      		asr r25
 1001 0576 8795      		ror r24
 1002               		2:
 1003 0578 2A95      		dec r18
 1004 057a 02F4      		brpl 1b
 1005 057c 8170      		andi r24,1
 1006 057e 9927      		clr r25
 1007 0580 892B      		or r24,r25
 1008 0582 01F0      		breq .L50
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#ifdef NWK_ENABLE_ROUTING
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					if (nwkIb.addr == header->macDstAddr) {
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 						nwkRouteRemove(
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkDstAddr,
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkFcf.multicast);
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					}
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#endif
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					return true;
 1009               		.loc 2 308 0
 1010 0584 81E0      		ldi r24,lo8(1)
 1011 0586 00C0      		rjmp .L51
 1012               	.L50:
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				}
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask |= (1 << diff);
 1013               		.loc 2 311 0
 1014 0588 8C81      		ldd r24,Y+4
 1015 058a 9D81      		ldd r25,Y+5
 1016 058c FC01      		movw r30,r24
 1017 058e 8381      		ldd r24,Z+3
 1018 0590 482F      		mov r20,r24
 1019 0592 8E81      		ldd r24,Y+6
 1020 0594 282F      		mov r18,r24
 1021 0596 30E0      		ldi r19,0
 1022 0598 81E0      		ldi r24,lo8(1)
 1023 059a 90E0      		ldi r25,0
 1024 059c 00C0      		rjmp 2f
 1025               		1:
 1026 059e 880F      		lsl r24
 1027 05a0 991F      		rol r25
 1028               		2:
 1029 05a2 2A95      		dec r18
 1030 05a4 02F4      		brpl 1b
 1031 05a6 842B      		or r24,r20
 1032 05a8 282F      		mov r18,r24
 1033 05aa 8C81      		ldd r24,Y+4
 1034 05ac 9D81      		ldd r25,Y+5
 1035 05ae FC01      		movw r30,r24
 1036 05b0 2383      		std Z+3,r18
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1037               		.loc 2 312 0
 1038 05b2 80E0      		ldi r24,0
 1039 05b4 00C0      		rjmp .L51
 1040               	.L49:
 1041               	.LBB6:
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				uint8_t shift = -(int8_t)diff;
 1042               		.loc 2 314 0
 1043 05b6 8E81      		ldd r24,Y+6
 1044 05b8 8195      		neg r24
 1045 05ba 8F83      		std Y+7,r24
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->seq = header->nwkSeq;
 1046               		.loc 2 316 0
 1047 05bc 8885      		ldd r24,Y+8
 1048 05be 9985      		ldd r25,Y+9
 1049 05c0 FC01      		movw r30,r24
 1050 05c2 2285      		ldd r18,Z+10
 1051 05c4 8C81      		ldd r24,Y+4
 1052 05c6 9D81      		ldd r25,Y+5
 1053 05c8 FC01      		movw r30,r24
 1054 05ca 2283      		std Z+2,r18
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask = (entry->mask << shift) | 1;
 1055               		.loc 2 317 0
 1056 05cc 8C81      		ldd r24,Y+4
 1057 05ce 9D81      		ldd r25,Y+5
 1058 05d0 FC01      		movw r30,r24
 1059 05d2 8381      		ldd r24,Z+3
 1060 05d4 882F      		mov r24,r24
 1061 05d6 90E0      		ldi r25,0
 1062 05d8 2F81      		ldd r18,Y+7
 1063 05da 222F      		mov r18,r18
 1064 05dc 30E0      		ldi r19,0
 1065 05de 00C0      		rjmp 2f
 1066               		1:
 1067 05e0 880F      		lsl r24
 1068 05e2 991F      		rol r25
 1069               		2:
 1070 05e4 2A95      		dec r18
 1071 05e6 02F4      		brpl 1b
 1072 05e8 8160      		ori r24,lo8(1)
 1073 05ea 282F      		mov r18,r24
 1074 05ec 8C81      		ldd r24,Y+4
 1075 05ee 9D81      		ldd r25,Y+5
 1076 05f0 FC01      		movw r30,r24
 1077 05f2 2383      		std Z+3,r18
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->ttl = DUPLICATE_REJECTION_TTL;
 1078               		.loc 2 318 0
 1079 05f4 8C81      		ldd r24,Y+4
 1080 05f6 9D81      		ldd r25,Y+5
 1081 05f8 25E1      		ldi r18,lo8(21)
 1082 05fa FC01      		movw r30,r24
 1083 05fc 2483      		std Z+4,r18
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1084               		.loc 2 319 0
 1085 05fe 80E0      		ldi r24,0
 1086 0600 00C0      		rjmp .L51
 1087               	.L48:
 1088               	.LBE6:
 1089               	.LBE5:
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (0 == entry->ttl) {
 1090               		.loc 2 323 0
 1091 0602 8C81      		ldd r24,Y+4
 1092 0604 9D81      		ldd r25,Y+5
 1093 0606 FC01      		movw r30,r24
 1094 0608 8481      		ldd r24,Z+4
 1095 060a 8823      		tst r24
 1096 060c 01F4      		brne .L52
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			freeEntry = entry;
 1097               		.loc 2 324 0
 1098 060e 8C81      		ldd r24,Y+4
 1099 0610 9D81      		ldd r25,Y+5
 1100 0612 9A83      		std Y+2,r25
 1101 0614 8983      		std Y+1,r24
 1102               	.L52:
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1103               		.loc 2 292 0 discriminator 2
 1104 0616 8B81      		ldd r24,Y+3
 1105 0618 8F5F      		subi r24,lo8(-(1))
 1106 061a 8B83      		std Y+3,r24
 1107               	.L47:
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1108               		.loc 2 292 0 is_stmt 0 discriminator 1
 1109 061c 8B81      		ldd r24,Y+3
 1110 061e 8233      		cpi r24,lo8(50)
 1111 0620 00F4      		brsh .+2
 1112 0622 00C0      		rjmp .L53
 1113               	.LBE4:
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == freeEntry) {
 1114               		.loc 2 328 0 is_stmt 1
 1115 0624 8981      		ldd r24,Y+1
 1116 0626 9A81      		ldd r25,Y+2
 1117 0628 892B      		or r24,r25
 1118 062a 01F4      		brne .L54
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return true;
 1119               		.loc 2 329 0
 1120 062c 81E0      		ldi r24,lo8(1)
 1121 062e 00C0      		rjmp .L51
 1122               	.L54:
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->src = header->nwkSrcAddr;
 1123               		.loc 2 332 0
 1124 0630 8885      		ldd r24,Y+8
 1125 0632 9985      		ldd r25,Y+9
 1126 0634 FC01      		movw r30,r24
 1127 0636 2385      		ldd r18,Z+11
 1128 0638 3485      		ldd r19,Z+12
 1129 063a 8981      		ldd r24,Y+1
 1130 063c 9A81      		ldd r25,Y+2
 1131 063e FC01      		movw r30,r24
 1132 0640 3183      		std Z+1,r19
 1133 0642 2083      		st Z,r18
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->seq = header->nwkSeq;
 1134               		.loc 2 333 0
 1135 0644 8885      		ldd r24,Y+8
 1136 0646 9985      		ldd r25,Y+9
 1137 0648 FC01      		movw r30,r24
 1138 064a 2285      		ldd r18,Z+10
 1139 064c 8981      		ldd r24,Y+1
 1140 064e 9A81      		ldd r25,Y+2
 1141 0650 FC01      		movw r30,r24
 1142 0652 2283      		std Z+2,r18
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->mask = 1;
 1143               		.loc 2 334 0
 1144 0654 8981      		ldd r24,Y+1
 1145 0656 9A81      		ldd r25,Y+2
 1146 0658 21E0      		ldi r18,lo8(1)
 1147 065a FC01      		movw r30,r24
 1148 065c 2383      		std Z+3,r18
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->ttl = DUPLICATE_REJECTION_TTL;
 1149               		.loc 2 335 0
 1150 065e 8981      		ldd r24,Y+1
 1151 0660 9A81      		ldd r25,Y+2
 1152 0662 25E1      		ldi r18,lo8(21)
 1153 0664 FC01      		movw r30,r24
 1154 0666 2483      		std Z+4,r18
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 1155               		.loc 2 337 0
 1156 0668 80E0      		ldi r24,lo8(nwkRxDuplicateRejectionTimer)
 1157 066a 90E0      		ldi r25,hi8(nwkRxDuplicateRejectionTimer)
 1158 066c 0E94 0000 		call SYS_TimerStart
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1159               		.loc 2 339 0
 1160 0670 80E0      		ldi r24,0
 1161               	.L51:
 1162               	/* epilogue start */
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1163               		.loc 2 340 0
 1164 0672 2996      		adiw r28,9
 1165 0674 0FB6      		in __tmp_reg__,__SREG__
 1166 0676 F894      		cli
 1167 0678 DEBF      		out __SP_H__,r29
 1168 067a 0FBE      		out __SREG__,__tmp_reg__
 1169 067c CDBF      		out __SP_L__,r28
 1170 067e DF91      		pop r29
 1171 0680 CF91      		pop r28
 1172 0682 0895      		ret
 1173               		.cfi_endproc
 1174               	.LFE71:
 1177               	nwkRxSeriveDataInd:
 1178               	.LFB72:
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind)
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1179               		.loc 2 345 0
 1180               		.cfi_startproc
 1181 0684 CF93      		push r28
 1182               	.LCFI28:
 1183               		.cfi_def_cfa_offset 3
 1184               		.cfi_offset 28, -2
 1185 0686 DF93      		push r29
 1186               	.LCFI29:
 1187               		.cfi_def_cfa_offset 4
 1188               		.cfi_offset 29, -3
 1189 0688 00D0      		rcall .
 1190               	.LCFI30:
 1191               		.cfi_def_cfa_offset 6
 1192 068a CDB7      		in r28,__SP_L__
 1193 068c DEB7      		in r29,__SP_H__
 1194               	.LCFI31:
 1195               		.cfi_def_cfa_register 28
 1196               	/* prologue: function */
 1197               	/* frame size = 2 */
 1198               	/* stack size = 4 */
 1199               	.L__stack_usage = 4
 1200 068e 9A83      		std Y+2,r25
 1201 0690 8983      		std Y+1,r24
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == (ind->options & NWK_IND_OPT_SECURED)) {
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ind->size < 1) {
 1202               		.loc 2 353 0
 1203 0692 8981      		ldd r24,Y+1
 1204 0694 9A81      		ldd r25,Y+2
 1205 0696 FC01      		movw r30,r24
 1206 0698 8285      		ldd r24,Z+10
 1207 069a 8823      		tst r24
 1208 069c 01F4      		brne .L56
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1209               		.loc 2 354 0
 1210 069e 80E0      		ldi r24,0
 1211 06a0 00C0      		rjmp .L57
 1212               	.L56:
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	switch (ind->data[0]) {
 1213               		.loc 2 357 0
 1214 06a2 8981      		ldd r24,Y+1
 1215 06a4 9A81      		ldd r25,Y+2
 1216 06a6 FC01      		movw r30,r24
 1217 06a8 8085      		ldd r24,Z+8
 1218 06aa 9185      		ldd r25,Z+9
 1219 06ac FC01      		movw r30,r24
 1220 06ae 8081      		ld r24,Z
 1221 06b0 882F      		mov r24,r24
 1222 06b2 90E0      		ldi r25,0
 1223 06b4 892B      		or r24,r25
 1224 06b6 01F4      		brne .L60
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ACK:
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkTxAckReceived(ind);
 1225               		.loc 2 359 0
 1226 06b8 8981      		ldd r24,Y+1
 1227 06ba 9A81      		ldd r25,Y+2
 1228 06bc 0E94 0000 		call nwkTxAckReceived
 1229 06c0 00C0      		rjmp .L57
 1230               	.L60:
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_ERROR:
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteErrorReceived(ind);
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTE_DISCOVERY
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REQUEST:
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryRequestReceived(ind);
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REPLY:
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryReplyReceived(ind);
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	default:
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1231               		.loc 2 377 0
 1232 06c2 80E0      		ldi r24,0
 1233               	.L57:
 1234               	/* epilogue start */
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1235               		.loc 2 379 0
 1236 06c4 0F90      		pop __tmp_reg__
 1237 06c6 0F90      		pop __tmp_reg__
 1238 06c8 DF91      		pop r29
 1239 06ca CF91      		pop r28
 1240 06cc 0895      		ret
 1241               		.cfi_endproc
 1242               	.LFE72:
 1245               	nwkRxHandleReceivedFrame:
 1246               	.LFB73:
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleReceivedFrame(NwkFrame_t *frame)
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1247               		.loc 2 384 0
 1248               		.cfi_startproc
 1249 06ce CF93      		push r28
 1250               	.LCFI32:
 1251               		.cfi_def_cfa_offset 3
 1252               		.cfi_offset 28, -2
 1253 06d0 DF93      		push r29
 1254               	.LCFI33:
 1255               		.cfi_def_cfa_offset 4
 1256               		.cfi_offset 29, -3
 1257 06d2 CDB7      		in r28,__SP_L__
 1258 06d4 DEB7      		in r29,__SP_H__
 1259               	.LCFI34:
 1260               		.cfi_def_cfa_register 28
 1261 06d6 2897      		sbiw r28,8
 1262               	.LCFI35:
 1263               		.cfi_def_cfa_offset 12
 1264 06d8 0FB6      		in __tmp_reg__,__SREG__
 1265 06da F894      		cli
 1266 06dc DEBF      		out __SP_H__,r29
 1267 06de 0FBE      		out __SREG__,__tmp_reg__
 1268 06e0 CDBF      		out __SP_L__,r28
 1269               	/* prologue: function */
 1270               	/* frame size = 8 */
 1271               	/* stack size = 10 */
 1272               	.L__stack_usage = 10
 1273 06e2 9887      		std Y+8,r25
 1274 06e4 8F83      		std Y+7,r24
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1275               		.loc 2 385 0
 1276 06e6 8F81      		ldd r24,Y+7
 1277 06e8 9885      		ldd r25,Y+8
 1278 06ea 0296      		adiw r24,2
 1279 06ec 9B83      		std Y+3,r25
 1280 06ee 8A83      		std Y+2,r24
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1281               		.loc 2 387 0
 1282 06f0 8F81      		ldd r24,Y+7
 1283 06f2 9885      		ldd r25,Y+8
 1284 06f4 24E2      		ldi r18,lo8(36)
 1285 06f6 FC01      		movw r30,r24
 1286 06f8 2083      		st Z,r18
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifndef NWK_ENABLE_SECURITY
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.security) {
 1287               		.loc 2 390 0
 1288 06fa 8A81      		ldd r24,Y+2
 1289 06fc 9B81      		ldd r25,Y+3
 1290 06fe FC01      		movw r30,r24
 1291 0700 8185      		ldd r24,Z+9
 1292 0702 8270      		andi r24,lo8(2)
 1293 0704 8823      		tst r24
 1294 0706 01F0      		breq .+2
 1295 0708 00C0      		rjmp .L82
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast && header->nwkFcf.ackRequest) {
 1296               		.loc 2 397 0
 1297 070a 8A81      		ldd r24,Y+2
 1298 070c 9B81      		ldd r25,Y+3
 1299 070e FC01      		movw r30,r24
 1300 0710 8185      		ldd r24,Z+9
 1301 0712 8870      		andi r24,lo8(8)
 1302 0714 8823      		tst r24
 1303 0716 01F0      		breq .L64
 1304               		.loc 2 397 0 is_stmt 0 discriminator 1
 1305 0718 8A81      		ldd r24,Y+2
 1306 071a 9B81      		ldd r25,Y+3
 1307 071c FC01      		movw r30,r24
 1308 071e 8185      		ldd r24,Z+9
 1309 0720 8170      		andi r24,lo8(1)
 1310 0722 8823      		tst r24
 1311 0724 01F0      		breq .+2
 1312 0726 00C0      		rjmp .L83
 1313               	.L64:
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #else
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == header->macDstPanId)
 1314               		.loc 2 408 0 is_stmt 1
 1315 0728 8A81      		ldd r24,Y+2
 1316 072a 9B81      		ldd r25,Y+3
 1317 072c FC01      		movw r30,r24
 1318 072e 8381      		ldd r24,Z+3
 1319 0730 9481      		ldd r25,Z+4
 1320 0732 0196      		adiw r24,1
 1321 0734 01F4      		brne .L65
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR == header->nwkDstAddr)
 1322               		.loc 2 410 0
 1323 0736 2091 0000 		lds r18,nwkIb
 1324 073a 3091 0000 		lds r19,nwkIb+1
 1325 073e 8A81      		ldd r24,Y+2
 1326 0740 9B81      		ldd r25,Y+3
 1327 0742 FC01      		movw r30,r24
 1328 0744 8585      		ldd r24,Z+13
 1329 0746 9685      		ldd r25,Z+14
 1330 0748 2817      		cp r18,r24
 1331 074a 3907      		cpc r19,r25
 1332 074c 01F0      		breq .L66
 1333               		.loc 2 410 0 is_stmt 0 discriminator 1
 1334 074e 8A81      		ldd r24,Y+2
 1335 0750 9B81      		ldd r25,Y+3
 1336 0752 FC01      		movw r30,r24
 1337 0754 8585      		ldd r24,Z+13
 1338 0756 9685      		ldd r25,Z+14
 1339 0758 0196      		adiw r24,1
 1340 075a 01F0      		breq .+2
 1341 075c 00C0      		rjmp .L84
 1342               	.L66:
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security)
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			{
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1343               		.loc 2 419 0 is_stmt 1
 1344 075e 8F81      		ldd r24,Y+7
 1345 0760 9885      		ldd r25,Y+8
 1346 0762 22E2      		ldi r18,lo8(34)
 1347 0764 FC01      		movw r30,r24
 1348 0766 2083      		st Z,r18
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 1349               		.loc 2 422 0
 1350 0768 00C0      		rjmp .L84
 1351               	.L65:
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ADDRESS_FILTER
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (!NWK_FilterAddress(header->macSrcAddr, &frame->rx.lqi)) {
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == header->nwkDstAddr && header->nwkFcf.ackRequest)
 1352               		.loc 2 432 0
 1353 076a 8A81      		ldd r24,Y+2
 1354 076c 9B81      		ldd r25,Y+3
 1355 076e FC01      		movw r30,r24
 1356 0770 8585      		ldd r24,Z+13
 1357 0772 9685      		ldd r25,Z+14
 1358 0774 0196      		adiw r24,1
 1359 0776 01F4      		brne .L68
 1360               		.loc 2 432 0 is_stmt 0 discriminator 1
 1361 0778 8A81      		ldd r24,Y+2
 1362 077a 9B81      		ldd r25,Y+3
 1363 077c FC01      		movw r30,r24
 1364 077e 8185      		ldd r24,Z+9
 1365 0780 8170      		andi r24,lo8(1)
 1366 0782 8823      		tst r24
 1367 0784 01F0      		breq .+2
 1368 0786 00C0      		rjmp .L85
 1369               	.L68:
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkIb.addr == header->nwkSrcAddr)
 1370               		.loc 2 437 0 is_stmt 1
 1371 0788 2091 0000 		lds r18,nwkIb
 1372 078c 3091 0000 		lds r19,nwkIb+1
 1373 0790 8A81      		ldd r24,Y+2
 1374 0792 9B81      		ldd r25,Y+3
 1375 0794 FC01      		movw r30,r24
 1376 0796 8385      		ldd r24,Z+11
 1377 0798 9485      		ldd r25,Z+12
 1378 079a 2817      		cp r18,r24
 1379 079c 3907      		cpc r19,r25
 1380 079e 01F4      		brne .+2
 1381 07a0 00C0      		rjmp .L86
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRouteFrameReceived(frame);
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 445:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkRxRejectDuplicate(header))
 1382               		.loc 2 446 0
 1383 07a2 8A81      		ldd r24,Y+2
 1384 07a4 9B81      		ldd r25,Y+3
 1385 07a6 0E94 0000 		call nwkRxRejectDuplicate
 1386 07aa 8823      		tst r24
 1387 07ac 01F0      		breq .+2
 1388 07ae 00C0      		rjmp .L87
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 449:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 451:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 1389               		.loc 2 452 0
 1390 07b0 8A81      		ldd r24,Y+2
 1391 07b2 9B81      		ldd r25,Y+3
 1392 07b4 FC01      		movw r30,r24
 1393 07b6 8185      		ldd r24,Z+9
 1394 07b8 8870      		andi r24,lo8(8)
 1395 07ba 8823      		tst r24
 1396 07bc 01F4      		brne .+2
 1397 07be 00C0      		rjmp .L71
 1398               	.LBB7:
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameMulticastHeader_t *mcHeader
 1399               		.loc 2 453 0
 1400 07c0 8F81      		ldd r24,Y+7
 1401 07c2 9885      		ldd r25,Y+8
 1402 07c4 8F57      		subi r24,127
 1403 07c6 9F4F      		sbci r25,-1
 1404 07c8 FC01      		movw r30,r24
 1405 07ca 8081      		ld r24,Z
 1406 07cc 9181      		ldd r25,Z+1
 1407 07ce 9D83      		std Y+5,r25
 1408 07d0 8C83      		std Y+4,r24
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			= (NwkFrameMulticastHeader_t *)frame->payload;
 455:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool member = NWK_GroupIsMember(header->nwkDstAddr);
 1409               		.loc 2 455 0
 1410 07d2 8A81      		ldd r24,Y+2
 1411 07d4 9B81      		ldd r25,Y+3
 1412 07d6 FC01      		movw r30,r24
 1413 07d8 8585      		ldd r24,Z+13
 1414 07da 9685      		ldd r25,Z+14
 1415 07dc 0E94 0000 		call NWK_GroupIsMember
 1416 07e0 8E83      		std Y+6,r24
 456:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool broadcast = false;
 1417               		.loc 2 456 0
 1418 07e2 1982      		std Y+1,__zero_reg__
 457:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 458:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 1419               		.loc 2 458 0
 1420 07e4 8A81      		ldd r24,Y+2
 1421 07e6 9B81      		ldd r25,Y+3
 1422 07e8 FC01      		movw r30,r24
 1423 07ea 8581      		ldd r24,Z+5
 1424 07ec 9681      		ldd r25,Z+6
 1425 07ee 0196      		adiw r24,1
 1426 07f0 01F0      		breq .+2
 1427 07f2 00C0      		rjmp .L72
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1428               		.loc 2 459 0
 1429 07f4 8E81      		ldd r24,Y+6
 1430 07f6 8823      		tst r24
 1431 07f8 01F0      		breq .L73
 460:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->memberRadius > 0;
 1432               		.loc 2 460 0
 1433 07fa 8C81      		ldd r24,Y+4
 1434 07fc 9D81      		ldd r25,Y+5
 1435 07fe FC01      		movw r30,r24
 1436 0800 8181      		ldd r24,Z+1
 1437 0802 8F70      		andi r24,lo8(15)
 1438 0804 882F      		mov r24,r24
 1439 0806 90E0      		ldi r25,0
 1440 0808 21E0      		ldi r18,lo8(1)
 1441 080a 1816      		cp __zero_reg__,r24
 1442 080c 1906      		cpc __zero_reg__,r25
 1443 080e 04F0      		brlt .L74
 1444 0810 20E0      		ldi r18,0
 1445               	.L74:
 1446 0812 2983      		std Y+1,r18
 461:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius--;
 1447               		.loc 2 461 0
 1448 0814 8C81      		ldd r24,Y+4
 1449 0816 9D81      		ldd r25,Y+5
 1450 0818 FC01      		movw r30,r24
 1451 081a 8181      		ldd r24,Z+1
 1452 081c 8F70      		andi r24,lo8(15)
 1453 081e 2FE0      		ldi r18,lo8(15)
 1454 0820 280F      		add r18,r24
 1455 0822 2F70      		andi r18,lo8(15)
 1456 0824 8C81      		ldd r24,Y+4
 1457 0826 9D81      		ldd r25,Y+5
 1458 0828 2F70      		andi r18,lo8(15)
 1459 082a FC01      		movw r30,r24
 1460 082c 3181      		ldd r19,Z+1
 1461 082e 307F      		andi r19,lo8(-16)
 1462 0830 232B      		or r18,r19
 1463 0832 FC01      		movw r30,r24
 1464 0834 2183      		std Z+1,r18
 462:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius
 463:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxNonMemberRadius;
 1465               		.loc 2 463 0
 1466 0836 8C81      		ldd r24,Y+4
 1467 0838 9D81      		ldd r25,Y+5
 1468 083a FC01      		movw r30,r24
 1469 083c 8081      		ld r24,Z
 1470 083e 282F      		mov r18,r24
 1471 0840 2295      		swap r18
 1472 0842 2F70      		andi r18,lo8(15)
 1473 0844 8C81      		ldd r24,Y+4
 1474 0846 9D81      		ldd r25,Y+5
 1475 0848 2F70      		andi r18,lo8(15)
 1476 084a FC01      		movw r30,r24
 1477 084c 3081      		ld r19,Z
 1478 084e 307F      		andi r19,lo8(-16)
 1479 0850 232B      		or r18,r19
 1480 0852 FC01      		movw r30,r24
 1481 0854 2083      		st Z,r18
 1482 0856 00C0      		rjmp .L77
 1483               	.L73:
 464:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 465:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->nonMemberRadius > 0;
 1484               		.loc 2 465 0
 1485 0858 8C81      		ldd r24,Y+4
 1486 085a 9D81      		ldd r25,Y+5
 1487 085c FC01      		movw r30,r24
 1488 085e 8081      		ld r24,Z
 1489 0860 8F70      		andi r24,lo8(15)
 1490 0862 882F      		mov r24,r24
 1491 0864 90E0      		ldi r25,0
 1492 0866 21E0      		ldi r18,lo8(1)
 1493 0868 1816      		cp __zero_reg__,r24
 1494 086a 1906      		cpc __zero_reg__,r25
 1495 086c 04F0      		brlt .L76
 1496 086e 20E0      		ldi r18,0
 1497               	.L76:
 1498 0870 2983      		std Y+1,r18
 466:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius--;
 1499               		.loc 2 466 0
 1500 0872 8C81      		ldd r24,Y+4
 1501 0874 9D81      		ldd r25,Y+5
 1502 0876 FC01      		movw r30,r24
 1503 0878 8081      		ld r24,Z
 1504 087a 8F70      		andi r24,lo8(15)
 1505 087c 2FE0      		ldi r18,lo8(15)
 1506 087e 280F      		add r18,r24
 1507 0880 2F70      		andi r18,lo8(15)
 1508 0882 8C81      		ldd r24,Y+4
 1509 0884 9D81      		ldd r25,Y+5
 1510 0886 2F70      		andi r18,lo8(15)
 1511 0888 FC01      		movw r30,r24
 1512 088a 3081      		ld r19,Z
 1513 088c 307F      		andi r19,lo8(-16)
 1514 088e 232B      		or r18,r19
 1515 0890 FC01      		movw r30,r24
 1516 0892 2083      		st Z,r18
 467:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius
 468:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxMemberRadius;
 1517               		.loc 2 468 0
 1518 0894 8C81      		ldd r24,Y+4
 1519 0896 9D81      		ldd r25,Y+5
 1520 0898 FC01      		movw r30,r24
 1521 089a 8181      		ldd r24,Z+1
 1522 089c 282F      		mov r18,r24
 1523 089e 2295      		swap r18
 1524 08a0 2F70      		andi r18,lo8(15)
 1525 08a2 8C81      		ldd r24,Y+4
 1526 08a4 9D81      		ldd r25,Y+5
 1527 08a6 2F70      		andi r18,lo8(15)
 1528 08a8 FC01      		movw r30,r24
 1529 08aa 3181      		ldd r19,Z+1
 1530 08ac 307F      		andi r19,lo8(-16)
 1531 08ae 232B      		or r18,r19
 1532 08b0 FC01      		movw r30,r24
 1533 08b2 2183      		std Z+1,r18
 1534 08b4 00C0      		rjmp .L77
 1535               	.L72:
 469:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 470:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		} else {
 471:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1536               		.loc 2 471 0
 1537 08b6 8E81      		ldd r24,Y+6
 1538 08b8 8823      		tst r24
 1539 08ba 01F0      		breq .L77
 472:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = true;
 1540               		.loc 2 472 0
 1541 08bc 81E0      		ldi r24,lo8(1)
 1542 08be 8983      		std Y+1,r24
 473:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkFcf.linkLocal = 1;
 1543               		.loc 2 473 0
 1544 08c0 8A81      		ldd r24,Y+2
 1545 08c2 9B81      		ldd r25,Y+3
 1546 08c4 FC01      		movw r30,r24
 1547 08c6 2185      		ldd r18,Z+9
 1548 08c8 2460      		ori r18,lo8(4)
 1549 08ca FC01      		movw r30,r24
 1550 08cc 2187      		std Z+9,r18
 1551               	.L77:
 474:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 475:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 476:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_ROUTING
 477:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else {
 478:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_ROUTE;
 479:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 480:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 481:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 482:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (broadcast) {
 1552               		.loc 2 483 0
 1553 08ce 8981      		ldd r24,Y+1
 1554 08d0 8823      		tst r24
 1555 08d2 01F0      		breq .L78
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1556               		.loc 2 484 0
 1557 08d4 8F81      		ldd r24,Y+7
 1558 08d6 9885      		ldd r25,Y+8
 1559 08d8 0E94 0000 		call nwkTxBroadcastFrame
 1560               	.L78:
 485:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 486:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 487:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (member) {
 1561               		.loc 2 487 0
 1562 08dc 8E81      		ldd r24,Y+6
 1563 08de 8823      		tst r24
 1564 08e0 01F4      		brne .+2
 1565 08e2 00C0      		rjmp .L61
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 1566               		.loc 2 488 0
 1567 08e4 8F81      		ldd r24,Y+7
 1568 08e6 9885      		ldd r25,Y+8
 1569 08e8 8F57      		subi r24,127
 1570 08ea 9F4F      		sbci r25,-1
 1571 08ec FC01      		movw r30,r24
 1572 08ee 8081      		ld r24,Z
 1573 08f0 9181      		ldd r25,Z+1
 1574 08f2 9C01      		movw r18,r24
 1575 08f4 2E5F      		subi r18,-2
 1576 08f6 3F4F      		sbci r19,-1
 1577 08f8 8F81      		ldd r24,Y+7
 1578 08fa 9885      		ldd r25,Y+8
 1579 08fc 8F57      		subi r24,127
 1580 08fe 9F4F      		sbci r25,-1
 1581 0900 FC01      		movw r30,r24
 1582 0902 3183      		std Z+1,r19
 1583 0904 2083      		st Z,r18
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 490:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 491:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 492:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 495:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1584               		.loc 2 495 0
 1585 0906 8F81      		ldd r24,Y+7
 1586 0908 9885      		ldd r25,Y+8
 1587 090a 22E2      		ldi r18,lo8(34)
 1588 090c FC01      		movw r30,r24
 1589 090e 2083      		st Z,r18
 1590 0910 00C0      		rjmp .L61
 1591               	.L71:
 1592               	.LBE7:
 496:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 497:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif /* NWK_ENABLE_MULTICAST */
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr && nwkIb.addr !=
 1593               		.loc 2 500 0
 1594 0912 8A81      		ldd r24,Y+2
 1595 0914 9B81      		ldd r25,Y+3
 1596 0916 FC01      		movw r30,r24
 1597 0918 8581      		ldd r24,Z+5
 1598 091a 9681      		ldd r25,Z+6
 1599 091c 0196      		adiw r24,1
 1600 091e 01F4      		brne .L80
 1601               		.loc 2 500 0 is_stmt 0 discriminator 1
 1602 0920 2091 0000 		lds r18,nwkIb
 1603 0924 3091 0000 		lds r19,nwkIb+1
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1604               		.loc 2 501 0 is_stmt 1 discriminator 1
 1605 0928 8A81      		ldd r24,Y+2
 1606 092a 9B81      		ldd r25,Y+3
 1607 092c FC01      		movw r30,r24
 1608 092e 8585      		ldd r24,Z+13
 1609 0930 9685      		ldd r25,Z+14
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1610               		.loc 2 500 0 discriminator 1
 1611 0932 2817      		cp r18,r24
 1612 0934 3907      		cpc r19,r25
 1613 0936 01F0      		breq .L80
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				0 == header->nwkFcf.linkLocal) {
 1614               		.loc 2 502 0
 1615 0938 8A81      		ldd r24,Y+2
 1616 093a 9B81      		ldd r25,Y+3
 1617 093c FC01      		movw r30,r24
 1618 093e 8185      		ldd r24,Z+9
 1619 0940 8470      		andi r24,lo8(4)
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1620               		.loc 2 501 0
 1621 0942 8823      		tst r24
 1622 0944 01F4      		brne .L80
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1623               		.loc 2 503 0
 1624 0946 8F81      		ldd r24,Y+7
 1625 0948 9885      		ldd r25,Y+8
 1626 094a 0E94 0000 		call nwkTxBroadcastFrame
 1627               	.L80:
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR ==
 1628               		.loc 2 506 0
 1629 094e 2091 0000 		lds r18,nwkIb
 1630 0952 3091 0000 		lds r19,nwkIb+1
 1631 0956 8A81      		ldd r24,Y+2
 1632 0958 9B81      		ldd r25,Y+3
 1633 095a FC01      		movw r30,r24
 1634 095c 8585      		ldd r24,Z+13
 1635 095e 9685      		ldd r25,Z+14
 1636 0960 2817      		cp r18,r24
 1637 0962 3907      		cpc r19,r25
 1638 0964 01F0      		breq .L81
 507:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1639               		.loc 2 507 0 discriminator 1
 1640 0966 8A81      		ldd r24,Y+2
 1641 0968 9B81      		ldd r25,Y+3
 1642 096a FC01      		movw r30,r24
 1643 096c 8585      		ldd r24,Z+13
 1644 096e 9685      		ldd r25,Z+14
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1645               		.loc 2 506 0 discriminator 1
 1646 0970 0196      		adiw r24,1
 1647 0972 01F4      		brne .L61
 1648               	.L81:
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 509:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 511:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 512:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 513:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1649               		.loc 2 513 0
 1650 0974 8F81      		ldd r24,Y+7
 1651 0976 9885      		ldd r25,Y+8
 1652 0978 22E2      		ldi r18,lo8(34)
 1653 097a FC01      		movw r30,r24
 1654 097c 2083      		st Z,r18
 1655 097e 00C0      		rjmp .L61
 1656               	.L82:
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1657               		.loc 2 391 0
 1658 0980 0000      		nop
 1659 0982 00C0      		rjmp .L61
 1660               	.L83:
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1661               		.loc 2 398 0
 1662 0984 0000      		nop
 1663 0986 00C0      		rjmp .L61
 1664               	.L84:
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1665               		.loc 2 422 0
 1666 0988 0000      		nop
 1667 098a 00C0      		rjmp .L61
 1668               	.L85:
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1669               		.loc 2 434 0
 1670 098c 0000      		nop
 1671 098e 00C0      		rjmp .L61
 1672               	.L86:
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1673               		.loc 2 439 0
 1674 0990 0000      		nop
 1675 0992 00C0      		rjmp .L61
 1676               	.L87:
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1677               		.loc 2 448 0
 1678 0994 0000      		nop
 1679               	.L61:
 1680               	/* epilogue start */
 514:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 515:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 516:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #ifdef NWK_ENABLE_ROUTING
 517:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if (nwkIb.addr == header->macDstAddr) {
 518:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_ROUTE;
 519:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 520:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #endif
 521:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 522:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1681               		.loc 2 522 0
 1682 0996 2896      		adiw r28,8
 1683 0998 0FB6      		in __tmp_reg__,__SREG__
 1684 099a F894      		cli
 1685 099c DEBF      		out __SP_H__,r29
 1686 099e 0FBE      		out __SREG__,__tmp_reg__
 1687 09a0 CDBF      		out __SP_L__,r28
 1688 09a2 DF91      		pop r29
 1689 09a4 CF91      		pop r28
 1690 09a6 0895      		ret
 1691               		.cfi_endproc
 1692               	.LFE73:
 1695               	nwkRxIndicateDataFrame:
 1696               	.LFB74:
 523:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 524:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 525:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 526:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateDataFrame(NwkFrame_t *frame)
 527:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1697               		.loc 2 527 0
 1698               		.cfi_startproc
 1699 09a8 CF93      		push r28
 1700               	.LCFI36:
 1701               		.cfi_def_cfa_offset 3
 1702               		.cfi_offset 28, -2
 1703 09aa DF93      		push r29
 1704               	.LCFI37:
 1705               		.cfi_def_cfa_offset 4
 1706               		.cfi_offset 29, -3
 1707 09ac CDB7      		in r28,__SP_L__
 1708 09ae DEB7      		in r29,__SP_H__
 1709               	.LCFI38:
 1710               		.cfi_def_cfa_register 28
 1711 09b0 6197      		sbiw r28,17
 1712               	.LCFI39:
 1713               		.cfi_def_cfa_offset 21
 1714 09b2 0FB6      		in __tmp_reg__,__SREG__
 1715 09b4 F894      		cli
 1716 09b6 DEBF      		out __SP_H__,r29
 1717 09b8 0FBE      		out __SREG__,__tmp_reg__
 1718 09ba CDBF      		out __SP_L__,r28
 1719               	/* prologue: function */
 1720               	/* frame size = 17 */
 1721               	/* stack size = 19 */
 1722               	.L__stack_usage = 19
 1723 09bc 998B      		std Y+17,r25
 1724 09be 888B      		std Y+16,r24
 528:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1725               		.loc 2 528 0
 1726 09c0 8889      		ldd r24,Y+16
 1727 09c2 9989      		ldd r25,Y+17
 1728 09c4 0296      		adiw r24,2
 1729 09c6 9A83      		std Y+2,r25
 1730 09c8 8983      		std Y+1,r24
 529:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 530:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 531:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[header->nwkDstEndpoint]) {
 1731               		.loc 2 531 0
 1732 09ca 8981      		ldd r24,Y+1
 1733 09cc 9A81      		ldd r25,Y+2
 1734 09ce FC01      		movw r30,r24
 1735 09d0 8785      		ldd r24,Z+15
 1736 09d2 8295      		swap r24
 1737 09d4 8F70      		andi r24,lo8(15)
 1738 09d6 882F      		mov r24,r24
 1739 09d8 90E0      		ldi r25,0
 1740 09da 0396      		adiw r24,3
 1741 09dc 880F      		lsl r24
 1742 09de 991F      		rol r25
 1743 09e0 8050      		subi r24,lo8(-(nwkIb))
 1744 09e2 9040      		sbci r25,hi8(-(nwkIb))
 1745 09e4 FC01      		movw r30,r24
 1746 09e6 8081      		ld r24,Z
 1747 09e8 9181      		ldd r25,Z+1
 1748 09ea 892B      		or r24,r25
 1749 09ec 01F4      		brne .L89
 532:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1750               		.loc 2 532 0
 1751 09ee 80E0      		ldi r24,0
 1752 09f0 00C0      		rjmp .L104
 1753               	.L89:
 533:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 534:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 535:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = header->nwkSrcAddr;
 1754               		.loc 2 535 0
 1755 09f2 8981      		ldd r24,Y+1
 1756 09f4 9A81      		ldd r25,Y+2
 1757 09f6 FC01      		movw r30,r24
 1758 09f8 8385      		ldd r24,Z+11
 1759 09fa 9485      		ldd r25,Z+12
 1760 09fc 9C83      		std Y+4,r25
 1761 09fe 8B83      		std Y+3,r24
 536:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = header->nwkDstAddr;
 1762               		.loc 2 536 0
 1763 0a00 8981      		ldd r24,Y+1
 1764 0a02 9A81      		ldd r25,Y+2
 1765 0a04 FC01      		movw r30,r24
 1766 0a06 8585      		ldd r24,Z+13
 1767 0a08 9685      		ldd r25,Z+14
 1768 0a0a 9E83      		std Y+6,r25
 1769 0a0c 8D83      		std Y+5,r24
 537:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = header->nwkSrcEndpoint;
 1770               		.loc 2 537 0
 1771 0a0e 8981      		ldd r24,Y+1
 1772 0a10 9A81      		ldd r25,Y+2
 1773 0a12 FC01      		movw r30,r24
 1774 0a14 8785      		ldd r24,Z+15
 1775 0a16 8F70      		andi r24,lo8(15)
 1776 0a18 8F83      		std Y+7,r24
 538:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = header->nwkDstEndpoint;
 1777               		.loc 2 538 0
 1778 0a1a 8981      		ldd r24,Y+1
 1779 0a1c 9A81      		ldd r25,Y+2
 1780 0a1e FC01      		movw r30,r24
 1781 0a20 8785      		ldd r24,Z+15
 1782 0a22 8295      		swap r24
 1783 0a24 8F70      		andi r24,lo8(15)
 1784 0a26 8887      		std Y+8,r24
 539:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1785               		.loc 2 539 0
 1786 0a28 8889      		ldd r24,Y+16
 1787 0a2a 9989      		ldd r25,Y+17
 1788 0a2c 8F57      		subi r24,127
 1789 0a2e 9F4F      		sbci r25,-1
 1790 0a30 FC01      		movw r30,r24
 1791 0a32 8081      		ld r24,Z
 1792 0a34 9181      		ldd r25,Z+1
 1793 0a36 9C87      		std Y+12,r25
 1794 0a38 8B87      		std Y+11,r24
 540:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1795               		.loc 2 540 0
 1796 0a3a 8889      		ldd r24,Y+16
 1797 0a3c 9989      		ldd r25,Y+17
 1798 0a3e 0E94 0000 		call nwkFramePayloadSize
 1799 0a42 8D87      		std Y+13,r24
 541:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1800               		.loc 2 541 0
 1801 0a44 8889      		ldd r24,Y+16
 1802 0a46 9989      		ldd r25,Y+17
 1803 0a48 8D57      		subi r24,125
 1804 0a4a 9F4F      		sbci r25,-1
 1805 0a4c FC01      		movw r30,r24
 1806 0a4e 8081      		ld r24,Z
 1807 0a50 8E87      		std Y+14,r24
 542:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1808               		.loc 2 542 0
 1809 0a52 8889      		ldd r24,Y+16
 1810 0a54 9989      		ldd r25,Y+17
 1811 0a56 8C57      		subi r24,124
 1812 0a58 9F4F      		sbci r25,-1
 1813 0a5a FC01      		movw r30,r24
 1814 0a5c 8081      		ld r24,Z
 1815 0a5e 8F87      		std Y+15,r24
 543:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 544:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK_REQUESTED : 0;
 1816               		.loc 2 544 0
 1817 0a60 8981      		ldd r24,Y+1
 1818 0a62 9A81      		ldd r25,Y+2
 1819 0a64 FC01      		movw r30,r24
 1820 0a66 8185      		ldd r24,Z+9
 1821 0a68 982F      		mov r25,r24
 1822 0a6a 9170      		andi r25,lo8(1)
 1823 0a6c 81E0      		ldi r24,lo8(1)
 1824 0a6e 9923      		tst r25
 1825 0a70 01F4      		brne .L91
 1826 0a72 80E0      		ldi r24,0
 1827               	.L91:
 1828 0a74 882F      		mov r24,r24
 1829 0a76 90E0      		ldi r25,0
 1830 0a78 9A87      		std Y+10,r25
 1831 0a7a 8987      		std Y+9,r24
 545:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECURED : 0;
 1832               		.loc 2 545 0
 1833 0a7c 2985      		ldd r18,Y+9
 1834 0a7e 3A85      		ldd r19,Y+10
 1835 0a80 8981      		ldd r24,Y+1
 1836 0a82 9A81      		ldd r25,Y+2
 1837 0a84 FC01      		movw r30,r24
 1838 0a86 8185      		ldd r24,Z+9
 1839 0a88 882F      		mov r24,r24
 1840 0a8a 90E0      		ldi r25,0
 1841 0a8c 8270      		andi r24,2
 1842 0a8e 9927      		clr r25
 1843 0a90 822B      		or r24,r18
 1844 0a92 932B      		or r25,r19
 1845 0a94 9A87      		std Y+10,r25
 1846 0a96 8987      		std Y+9,r24
 546:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LINK_LOCAL : 0;
 1847               		.loc 2 546 0
 1848 0a98 2985      		ldd r18,Y+9
 1849 0a9a 3A85      		ldd r19,Y+10
 1850 0a9c 8981      		ldd r24,Y+1
 1851 0a9e 9A81      		ldd r25,Y+2
 1852 0aa0 FC01      		movw r30,r24
 1853 0aa2 8185      		ldd r24,Z+9
 1854 0aa4 8470      		andi r24,lo8(4)
 1855 0aa6 8823      		tst r24
 1856 0aa8 01F0      		breq .L92
 1857               		.loc 2 546 0 is_stmt 0 discriminator 1
 1858 0aaa 80E2      		ldi r24,lo8(32)
 1859 0aac 90E0      		ldi r25,0
 1860 0aae 00C0      		rjmp .L93
 1861               	.L92:
 1862               		.loc 2 546 0 discriminator 2
 1863 0ab0 80E0      		ldi r24,0
 1864 0ab2 90E0      		ldi r25,0
 1865               	.L93:
 1866               		.loc 2 546 0 discriminator 4
 1867 0ab4 822B      		or r24,r18
 1868 0ab6 932B      		or r25,r19
 1869 0ab8 9A87      		std Y+10,r25
 1870 0aba 8987      		std Y+9,r24
 547:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MULTICAST : 0;
 1871               		.loc 2 547 0 is_stmt 1 discriminator 4
 1872 0abc 2985      		ldd r18,Y+9
 1873 0abe 3A85      		ldd r19,Y+10
 1874 0ac0 8981      		ldd r24,Y+1
 1875 0ac2 9A81      		ldd r25,Y+2
 1876 0ac4 FC01      		movw r30,r24
 1877 0ac6 8185      		ldd r24,Z+9
 1878 0ac8 8870      		andi r24,lo8(8)
 1879 0aca 8823      		tst r24
 1880 0acc 01F0      		breq .L94
 1881               		.loc 2 547 0 is_stmt 0 discriminator 1
 1882 0ace 80E4      		ldi r24,lo8(64)
 1883 0ad0 90E0      		ldi r25,0
 1884 0ad2 00C0      		rjmp .L95
 1885               	.L94:
 1886               		.loc 2 547 0 discriminator 2
 1887 0ad4 80E0      		ldi r24,0
 1888 0ad6 90E0      		ldi r25,0
 1889               	.L95:
 1890               		.loc 2 547 0 discriminator 4
 1891 0ad8 822B      		or r24,r18
 1892 0ada 932B      		or r25,r19
 1893 0adc 9A87      		std Y+10,r25
 1894 0ade 8987      		std Y+9,r24
 548:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.beacon) ? NWK_IND_OPT_BEACON : 0;
 1895               		.loc 2 548 0 is_stmt 1 discriminator 4
 1896 0ae0 2985      		ldd r18,Y+9
 1897 0ae2 3A85      		ldd r19,Y+10
 1898 0ae4 8981      		ldd r24,Y+1
 1899 0ae6 9A81      		ldd r25,Y+2
 1900 0ae8 FC01      		movw r30,r24
 1901 0aea 8185      		ldd r24,Z+9
 1902 0aec 8071      		andi r24,lo8(16)
 1903 0aee 8823      		tst r24
 1904 0af0 01F0      		breq .L96
 1905               		.loc 2 548 0 is_stmt 0 discriminator 1
 1906 0af2 80E8      		ldi r24,lo8(-128)
 1907 0af4 90E0      		ldi r25,0
 1908 0af6 00C0      		rjmp .L97
 1909               	.L96:
 1910               		.loc 2 548 0 discriminator 2
 1911 0af8 80E0      		ldi r24,0
 1912 0afa 90E0      		ldi r25,0
 1913               	.L97:
 1914               		.loc 2 548 0 discriminator 4
 1915 0afc 822B      		or r24,r18
 1916 0afe 932B      		or r25,r19
 1917 0b00 9A87      		std Y+10,r25
 1918 0b02 8987      		std Y+9,r24
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_ADDR == header->nwkDstAddr) ? NWK_IND_OPT_BROADCAST : 0;
 1919               		.loc 2 549 0 is_stmt 1 discriminator 4
 1920 0b04 2985      		ldd r18,Y+9
 1921 0b06 3A85      		ldd r19,Y+10
 1922 0b08 8981      		ldd r24,Y+1
 1923 0b0a 9A81      		ldd r25,Y+2
 1924 0b0c FC01      		movw r30,r24
 1925 0b0e 8585      		ldd r24,Z+13
 1926 0b10 9685      		ldd r25,Z+14
 1927 0b12 0196      		adiw r24,1
 1928 0b14 01F4      		brne .L98
 1929               		.loc 2 549 0 is_stmt 0 discriminator 1
 1930 0b16 84E0      		ldi r24,lo8(4)
 1931 0b18 90E0      		ldi r25,0
 1932 0b1a 00C0      		rjmp .L99
 1933               	.L98:
 1934               		.loc 2 549 0 discriminator 2
 1935 0b1c 80E0      		ldi r24,0
 1936 0b1e 90E0      		ldi r25,0
 1937               	.L99:
 1938               		.loc 2 549 0 discriminator 4
 1939 0b20 822B      		or r24,r18
 1940 0b22 932B      		or r25,r19
 1941 0b24 9A87      		std Y+10,r25
 1942 0b26 8987      		std Y+9,r24
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (header->nwkSrcAddr == header->macSrcAddr) ? NWK_IND_OPT_LOCAL : 0;
 1943               		.loc 2 550 0 is_stmt 1 discriminator 4
 1944 0b28 2985      		ldd r18,Y+9
 1945 0b2a 3A85      		ldd r19,Y+10
 1946 0b2c 8981      		ldd r24,Y+1
 1947 0b2e 9A81      		ldd r25,Y+2
 1948 0b30 FC01      		movw r30,r24
 1949 0b32 4385      		ldd r20,Z+11
 1950 0b34 5485      		ldd r21,Z+12
 1951 0b36 8981      		ldd r24,Y+1
 1952 0b38 9A81      		ldd r25,Y+2
 1953 0b3a FC01      		movw r30,r24
 1954 0b3c 8781      		ldd r24,Z+7
 1955 0b3e 9085      		ldd r25,Z+8
 1956 0b40 4817      		cp r20,r24
 1957 0b42 5907      		cpc r21,r25
 1958 0b44 01F4      		brne .L100
 1959               		.loc 2 550 0 is_stmt 0 discriminator 1
 1960 0b46 88E0      		ldi r24,lo8(8)
 1961 0b48 90E0      		ldi r25,0
 1962 0b4a 00C0      		rjmp .L101
 1963               	.L100:
 1964               		.loc 2 550 0 discriminator 2
 1965 0b4c 80E0      		ldi r24,0
 1966 0b4e 90E0      		ldi r25,0
 1967               	.L101:
 1968               		.loc 2 550 0 discriminator 4
 1969 0b50 822B      		or r24,r18
 1970 0b52 932B      		or r25,r19
 1971 0b54 9A87      		std Y+10,r25
 1972 0b56 8987      		std Y+9,r24
 551:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_PANID == header->macDstPanId) ? NWK_IND_OPT_BROADCAST_PAN_ID : 0;
 1973               		.loc 2 551 0 is_stmt 1 discriminator 4
 1974 0b58 2985      		ldd r18,Y+9
 1975 0b5a 3A85      		ldd r19,Y+10
 1976 0b5c 8981      		ldd r24,Y+1
 1977 0b5e 9A81      		ldd r25,Y+2
 1978 0b60 FC01      		movw r30,r24
 1979 0b62 8381      		ldd r24,Z+3
 1980 0b64 9481      		ldd r25,Z+4
 1981 0b66 0196      		adiw r24,1
 1982 0b68 01F4      		brne .L102
 1983               		.loc 2 551 0 is_stmt 0 discriminator 1
 1984 0b6a 80E1      		ldi r24,lo8(16)
 1985 0b6c 90E0      		ldi r25,0
 1986 0b6e 00C0      		rjmp .L103
 1987               	.L102:
 1988               		.loc 2 551 0 discriminator 2
 1989 0b70 80E0      		ldi r24,0
 1990 0b72 90E0      		ldi r25,0
 1991               	.L103:
 1992               		.loc 2 551 0 discriminator 4
 1993 0b74 822B      		or r24,r18
 1994 0b76 932B      		or r25,r19
 1995 0b78 9A87      		std Y+10,r25
 1996 0b7a 8987      		std Y+9,r24
 552:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 553:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 1997               		.loc 2 553 0 is_stmt 1 discriminator 4
 1998 0b7c 8981      		ldd r24,Y+1
 1999 0b7e 9A81      		ldd r25,Y+2
 2000 0b80 FC01      		movw r30,r24
 2001 0b82 8785      		ldd r24,Z+15
 2002 0b84 8295      		swap r24
 2003 0b86 8F70      		andi r24,lo8(15)
 2004 0b88 882F      		mov r24,r24
 2005 0b8a 90E0      		ldi r25,0
 2006 0b8c 0396      		adiw r24,3
 2007 0b8e 880F      		lsl r24
 2008 0b90 991F      		rol r25
 2009 0b92 8050      		subi r24,lo8(-(nwkIb))
 2010 0b94 9040      		sbci r25,hi8(-(nwkIb))
 2011 0b96 FC01      		movw r30,r24
 2012 0b98 2081      		ld r18,Z
 2013 0b9a 3181      		ldd r19,Z+1
 2014 0b9c CE01      		movw r24,r28
 2015 0b9e 0396      		adiw r24,3
 2016 0ba0 F901      		movw r30,r18
 2017 0ba2 0995      		icall
 2018               	.L104:
 2019               	/* epilogue start */
 554:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2020               		.loc 2 554 0 discriminator 1
 2021 0ba4 6196      		adiw r28,17
 2022 0ba6 0FB6      		in __tmp_reg__,__SREG__
 2023 0ba8 F894      		cli
 2024 0baa DEBF      		out __SP_H__,r29
 2025 0bac 0FBE      		out __SREG__,__tmp_reg__
 2026 0bae CDBF      		out __SP_L__,r28
 2027 0bb0 DF91      		pop r29
 2028 0bb2 CF91      		pop r28
 2029 0bb4 0895      		ret
 2030               		.cfi_endproc
 2031               	.LFE74:
 2034               	nwkRxIndicateBeaconFrame:
 2035               	.LFB75:
 555:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 556:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 557:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 558:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateBeaconFrame(NwkFrame_t *frame)
 559:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2036               		.loc 2 559 0
 2037               		.cfi_startproc
 2038 0bb6 CF93      		push r28
 2039               	.LCFI40:
 2040               		.cfi_def_cfa_offset 3
 2041               		.cfi_offset 28, -2
 2042 0bb8 DF93      		push r29
 2043               	.LCFI41:
 2044               		.cfi_def_cfa_offset 4
 2045               		.cfi_offset 29, -3
 2046 0bba CDB7      		in r28,__SP_L__
 2047 0bbc DEB7      		in r29,__SP_H__
 2048               	.LCFI42:
 2049               		.cfi_def_cfa_register 28
 2050 0bbe 6197      		sbiw r28,17
 2051               	.LCFI43:
 2052               		.cfi_def_cfa_offset 21
 2053 0bc0 0FB6      		in __tmp_reg__,__SREG__
 2054 0bc2 F894      		cli
 2055 0bc4 DEBF      		out __SP_H__,r29
 2056 0bc6 0FBE      		out __SREG__,__tmp_reg__
 2057 0bc8 CDBF      		out __SP_L__,r28
 2058               	/* prologue: function */
 2059               	/* frame size = 17 */
 2060               	/* stack size = 19 */
 2061               	.L__stack_usage = 19
 2062 0bca 998B      		std Y+17,r25
 2063 0bcc 888B      		std Y+16,r24
 560:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 2064               		.loc 2 560 0
 2065 0bce 8889      		ldd r24,Y+16
 2066 0bd0 9989      		ldd r25,Y+17
 2067 0bd2 0296      		adiw r24,2
 2068 0bd4 9A83      		std Y+2,r25
 2069 0bd6 8983      		std Y+1,r24
 561:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 562:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 563:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2070               		.loc 2 563 0
 2071 0bd8 8889      		ldd r24,Y+16
 2072 0bda 9989      		ldd r25,Y+17
 2073 0bdc 24E2      		ldi r18,lo8(36)
 2074 0bde FC01      		movw r30,r24
 2075 0be0 2083      		st Z,r18
 564:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 565:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[0]) {
 2076               		.loc 2 565 0
 2077 0be2 8091 0000 		lds r24,nwkIb+6
 2078 0be6 9091 0000 		lds r25,nwkIb+6+1
 2079 0bea 892B      		or r24,r25
 2080 0bec 01F4      		brne .L106
 566:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2081               		.loc 2 566 0
 2082 0bee 80E0      		ldi r24,0
 2083 0bf0 00C0      		rjmp .L108
 2084               	.L106:
 567:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 568:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 569:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = frame->beacon.macSrcAddr;
 2085               		.loc 2 569 0
 2086 0bf2 8889      		ldd r24,Y+16
 2087 0bf4 9989      		ldd r25,Y+17
 2088 0bf6 FC01      		movw r30,r24
 2089 0bf8 8781      		ldd r24,Z+7
 2090 0bfa 9085      		ldd r25,Z+8
 2091 0bfc 9C83      		std Y+4,r25
 2092 0bfe 8B83      		std Y+3,r24
 570:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = frame->beacon.macSrcAddr;
 2093               		.loc 2 570 0
 2094 0c00 8889      		ldd r24,Y+16
 2095 0c02 9989      		ldd r25,Y+17
 2096 0c04 FC01      		movw r30,r24
 2097 0c06 8781      		ldd r24,Z+7
 2098 0c08 9085      		ldd r25,Z+8
 2099 0c0a 9E83      		std Y+6,r25
 2100 0c0c 8D83      		std Y+5,r24
 571:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2101               		.loc 2 571 0
 2102 0c0e 1F82      		std Y+7,__zero_reg__
 572:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2103               		.loc 2 572 0
 2104 0c10 1886      		std Y+8,__zero_reg__
 573:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2105               		.loc 2 573 0
 2106 0c12 8889      		ldd r24,Y+16
 2107 0c14 9989      		ldd r25,Y+17
 2108 0c16 8F57      		subi r24,127
 2109 0c18 9F4F      		sbci r25,-1
 2110 0c1a FC01      		movw r30,r24
 2111 0c1c 8081      		ld r24,Z
 2112 0c1e 9181      		ldd r25,Z+1
 2113 0c20 9C87      		std Y+12,r25
 2114 0c22 8B87      		std Y+11,r24
 574:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2115               		.loc 2 574 0
 2116 0c24 8889      		ldd r24,Y+16
 2117 0c26 9989      		ldd r25,Y+17
 2118 0c28 0E94 0000 		call nwkFramePayloadSize
 2119 0c2c 8D87      		std Y+13,r24
 575:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2120               		.loc 2 575 0
 2121 0c2e 8889      		ldd r24,Y+16
 2122 0c30 9989      		ldd r25,Y+17
 2123 0c32 8D57      		subi r24,125
 2124 0c34 9F4F      		sbci r25,-1
 2125 0c36 FC01      		movw r30,r24
 2126 0c38 8081      		ld r24,Z
 2127 0c3a 8E87      		std Y+14,r24
 576:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2128               		.loc 2 576 0
 2129 0c3c 8889      		ldd r24,Y+16
 2130 0c3e 9989      		ldd r25,Y+17
 2131 0c40 8C57      		subi r24,124
 2132 0c42 9F4F      		sbci r25,-1
 2133 0c44 FC01      		movw r30,r24
 2134 0c46 8081      		ld r24,Z
 2135 0c48 8F87      		std Y+15,r24
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 578:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_BEACON;
 2136               		.loc 2 578 0
 2137 0c4a 80E8      		ldi r24,lo8(-128)
 2138 0c4c 90E0      		ldi r25,0
 2139 0c4e 9A87      		std Y+10,r25
 2140 0c50 8987      		std Y+9,r24
 579:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 580:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2141               		.loc 2 580 0
 2142 0c52 8981      		ldd r24,Y+1
 2143 0c54 9A81      		ldd r25,Y+2
 2144 0c56 FC01      		movw r30,r24
 2145 0c58 8785      		ldd r24,Z+15
 2146 0c5a 8295      		swap r24
 2147 0c5c 8F70      		andi r24,lo8(15)
 2148 0c5e 882F      		mov r24,r24
 2149 0c60 90E0      		ldi r25,0
 2150 0c62 0396      		adiw r24,3
 2151 0c64 880F      		lsl r24
 2152 0c66 991F      		rol r25
 2153 0c68 8050      		subi r24,lo8(-(nwkIb))
 2154 0c6a 9040      		sbci r25,hi8(-(nwkIb))
 2155 0c6c FC01      		movw r30,r24
 2156 0c6e 2081      		ld r18,Z
 2157 0c70 3181      		ldd r19,Z+1
 2158 0c72 CE01      		movw r24,r28
 2159 0c74 0396      		adiw r24,3
 2160 0c76 F901      		movw r30,r18
 2161 0c78 0995      		icall
 2162               	.L108:
 2163               	/* epilogue start */
 581:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2164               		.loc 2 581 0 discriminator 1
 2165 0c7a 6196      		adiw r28,17
 2166 0c7c 0FB6      		in __tmp_reg__,__SREG__
 2167 0c7e F894      		cli
 2168 0c80 DEBF      		out __SP_H__,r29
 2169 0c82 0FBE      		out __SREG__,__tmp_reg__
 2170 0c84 CDBF      		out __SP_L__,r28
 2171 0c86 DF91      		pop r29
 2172 0c88 CF91      		pop r28
 2173 0c8a 0895      		ret
 2174               		.cfi_endproc
 2175               	.LFE75:
 2178               	nwkRxIndicateLLBeaconFrame:
 2179               	.LFB76:
 582:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 583:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 584:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 585:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 586:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLBeaconFrame(NwkFrame_t *frame)
 587:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2180               		.loc 2 587 0
 2181               		.cfi_startproc
 2182 0c8c CF93      		push r28
 2183               	.LCFI44:
 2184               		.cfi_def_cfa_offset 3
 2185               		.cfi_offset 28, -2
 2186 0c8e DF93      		push r29
 2187               	.LCFI45:
 2188               		.cfi_def_cfa_offset 4
 2189               		.cfi_offset 29, -3
 2190 0c90 CDB7      		in r28,__SP_L__
 2191 0c92 DEB7      		in r29,__SP_H__
 2192               	.LCFI46:
 2193               		.cfi_def_cfa_register 28
 2194 0c94 2F97      		sbiw r28,15
 2195               	.LCFI47:
 2196               		.cfi_def_cfa_offset 19
 2197 0c96 0FB6      		in __tmp_reg__,__SREG__
 2198 0c98 F894      		cli
 2199 0c9a DEBF      		out __SP_H__,r29
 2200 0c9c 0FBE      		out __SREG__,__tmp_reg__
 2201 0c9e CDBF      		out __SP_L__,r28
 2202               	/* prologue: function */
 2203               	/* frame size = 15 */
 2204               	/* stack size = 17 */
 2205               	.L__stack_usage = 17
 2206 0ca0 9F87      		std Y+15,r25
 2207 0ca2 8E87      		std Y+14,r24
 588:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 589:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 590:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2208               		.loc 2 590 0
 2209 0ca4 8E85      		ldd r24,Y+14
 2210 0ca6 9F85      		ldd r25,Y+15
 2211 0ca8 24E2      		ldi r18,lo8(36)
 2212 0caa FC01      		movw r30,r24
 2213 0cac 2083      		st Z,r18
 591:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 592:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_BEACON_ENDPOINT]) {
 2214               		.loc 2 592 0
 2215 0cae 8091 0000 		lds r24,nwkIb+6
 2216 0cb2 9091 0000 		lds r25,nwkIb+6+1
 2217 0cb6 892B      		or r24,r25
 2218 0cb8 01F4      		brne .L110
 593:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2219               		.loc 2 593 0
 2220 0cba 80E0      		ldi r24,0
 2221 0cbc 00C0      		rjmp .L112
 2222               	.L110:
 594:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 595:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Beacon as they are in standart 802.15.4
 596:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 597:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 598:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2223               		.loc 2 598 0
 2224 0cbe 1A82      		std Y+2,__zero_reg__
 2225 0cc0 1982      		std Y+1,__zero_reg__
 599:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2226               		.loc 2 599 0
 2227 0cc2 1C82      		std Y+4,__zero_reg__
 2228 0cc4 1B82      		std Y+3,__zero_reg__
 600:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2229               		.loc 2 600 0
 2230 0cc6 1D82      		std Y+5,__zero_reg__
 601:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2231               		.loc 2 601 0
 2232 0cc8 1E82      		std Y+6,__zero_reg__
 602:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 603:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->LLbeacon;
 2233               		.loc 2 603 0
 2234 0cca 8E85      		ldd r24,Y+14
 2235 0ccc 9F85      		ldd r25,Y+15
 2236 0cce 0296      		adiw r24,2
 2237 0cd0 9A87      		std Y+10,r25
 2238 0cd2 8987      		std Y+9,r24
 604:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2239               		.loc 2 604 0
 2240 0cd4 8E85      		ldd r24,Y+14
 2241 0cd6 9F85      		ldd r25,Y+15
 2242 0cd8 0E94 0000 		call nwkFramePayloadSize
 2243 0cdc 8B87      		std Y+11,r24
 605:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2244               		.loc 2 605 0
 2245 0cde 8E85      		ldd r24,Y+14
 2246 0ce0 9F85      		ldd r25,Y+15
 2247 0ce2 8D57      		subi r24,125
 2248 0ce4 9F4F      		sbci r25,-1
 2249 0ce6 FC01      		movw r30,r24
 2250 0ce8 8081      		ld r24,Z
 2251 0cea 8C87      		std Y+12,r24
 606:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2252               		.loc 2 606 0
 2253 0cec 8E85      		ldd r24,Y+14
 2254 0cee 9F85      		ldd r25,Y+15
 2255 0cf0 8C57      		subi r24,124
 2256 0cf2 9F4F      		sbci r25,-1
 2257 0cf4 FC01      		movw r30,r24
 2258 0cf6 8081      		ld r24,Z
 2259 0cf8 8D87      		std Y+13,r24
 607:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 608:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_BEACON;
 2260               		.loc 2 608 0
 2261 0cfa 80E0      		ldi r24,0
 2262 0cfc 91E0      		ldi r25,lo8(1)
 2263 0cfe 9887      		std Y+8,r25
 2264 0d00 8F83      		std Y+7,r24
 609:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 610:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 611:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_BEACON_ENDPOINT](&ind);
 2265               		.loc 2 611 0
 2266 0d02 2091 0000 		lds r18,nwkIb+6
 2267 0d06 3091 0000 		lds r19,nwkIb+6+1
 2268 0d0a CE01      		movw r24,r28
 2269 0d0c 0196      		adiw r24,1
 2270 0d0e F901      		movw r30,r18
 2271 0d10 0995      		icall
 2272               	.L112:
 2273               	/* epilogue start */
 612:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2274               		.loc 2 612 0 discriminator 1
 2275 0d12 2F96      		adiw r28,15
 2276 0d14 0FB6      		in __tmp_reg__,__SREG__
 2277 0d16 F894      		cli
 2278 0d18 DEBF      		out __SP_H__,r29
 2279 0d1a 0FBE      		out __SREG__,__tmp_reg__
 2280 0d1c CDBF      		out __SP_L__,r28
 2281 0d1e DF91      		pop r29
 2282 0d20 CF91      		pop r28
 2283 0d22 0895      		ret
 2284               		.cfi_endproc
 2285               	.LFE76:
 2288               	nwkRxIndicateLLCommandFrame:
 2289               	.LFB77:
 613:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 614:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLCommandFrame(NwkFrame_t *frame)
 615:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2290               		.loc 2 615 0
 2291               		.cfi_startproc
 2292 0d24 CF93      		push r28
 2293               	.LCFI48:
 2294               		.cfi_def_cfa_offset 3
 2295               		.cfi_offset 28, -2
 2296 0d26 DF93      		push r29
 2297               	.LCFI49:
 2298               		.cfi_def_cfa_offset 4
 2299               		.cfi_offset 29, -3
 2300 0d28 CDB7      		in r28,__SP_L__
 2301 0d2a DEB7      		in r29,__SP_H__
 2302               	.LCFI50:
 2303               		.cfi_def_cfa_register 28
 2304 0d2c 6197      		sbiw r28,17
 2305               	.LCFI51:
 2306               		.cfi_def_cfa_offset 21
 2307 0d2e 0FB6      		in __tmp_reg__,__SREG__
 2308 0d30 F894      		cli
 2309 0d32 DEBF      		out __SP_H__,r29
 2310 0d34 0FBE      		out __SREG__,__tmp_reg__
 2311 0d36 CDBF      		out __SP_L__,r28
 2312               	/* prologue: function */
 2313               	/* frame size = 17 */
 2314               	/* stack size = 19 */
 2315               	.L__stack_usage = 19
 2316 0d38 998B      		std Y+17,r25
 2317 0d3a 888B      		std Y+16,r24
 616:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 617:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 618:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2318               		.loc 2 618 0
 2319 0d3c 8889      		ldd r24,Y+16
 2320 0d3e 9989      		ldd r25,Y+17
 2321 0d40 0296      		adiw r24,2
 2322 0d42 9A83      		std Y+2,r25
 2323 0d44 8983      		std Y+1,r24
 619:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 620:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 621:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2324               		.loc 2 621 0
 2325 0d46 8889      		ldd r24,Y+16
 2326 0d48 9989      		ldd r25,Y+17
 2327 0d4a 24E2      		ldi r18,lo8(36)
 2328 0d4c FC01      		movw r30,r24
 2329 0d4e 2083      		st Z,r18
 622:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 623:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_COMMAND_ENDPOINT]) {
 2330               		.loc 2 623 0
 2331 0d50 8091 0000 		lds r24,nwkIb+12
 2332 0d54 9091 0000 		lds r25,nwkIb+12+1
 2333 0d58 892B      		or r24,r25
 2334 0d5a 01F4      		brne .L114
 624:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2335               		.loc 2 624 0
 2336 0d5c 80E0      		ldi r24,0
 2337 0d5e 00C0      		rjmp .L116
 2338               	.L114:
 625:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 626:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 627:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 628:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 629:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 630:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2339               		.loc 2 630 0
 2340 0d60 1C82      		std Y+4,__zero_reg__
 2341 0d62 1B82      		std Y+3,__zero_reg__
 631:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2342               		.loc 2 631 0
 2343 0d64 1E82      		std Y+6,__zero_reg__
 2344 0d66 1D82      		std Y+5,__zero_reg__
 632:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2345               		.loc 2 632 0
 2346 0d68 1F82      		std Y+7,__zero_reg__
 633:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2347               		.loc 2 633 0
 2348 0d6a 1886      		std Y+8,__zero_reg__
 634:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 635:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 636:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2349               		.loc 2 636 0
 2350 0d6c 8889      		ldd r24,Y+16
 2351 0d6e 9989      		ldd r25,Y+17
 2352 0d70 8F57      		subi r24,127
 2353 0d72 9F4F      		sbci r25,-1
 2354 0d74 FC01      		movw r30,r24
 2355 0d76 8081      		ld r24,Z
 2356 0d78 9181      		ldd r25,Z+1
 2357 0d7a 9C87      		std Y+12,r25
 2358 0d7c 8B87      		std Y+11,r24
 637:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 638:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2359               		.loc 2 638 0
 2360 0d7e 8889      		ldd r24,Y+16
 2361 0d80 9989      		ldd r25,Y+17
 2362 0d82 0E94 0000 		call nwkFramePayloadSize
 2363 0d86 8D87      		std Y+13,r24
 639:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2364               		.loc 2 639 0
 2365 0d88 8889      		ldd r24,Y+16
 2366 0d8a 9989      		ldd r25,Y+17
 2367 0d8c 8D57      		subi r24,125
 2368 0d8e 9F4F      		sbci r25,-1
 2369 0d90 FC01      		movw r30,r24
 2370 0d92 8081      		ld r24,Z
 2371 0d94 8E87      		std Y+14,r24
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2372               		.loc 2 640 0
 2373 0d96 8889      		ldd r24,Y+16
 2374 0d98 9989      		ldd r25,Y+17
 2375 0d9a 8C57      		subi r24,124
 2376 0d9c 9F4F      		sbci r25,-1
 2377 0d9e FC01      		movw r30,r24
 2378 0da0 8081      		ld r24,Z
 2379 0da2 8F87      		std Y+15,r24
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 642:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_MACCOMMAND;
 2380               		.loc 2 642 0
 2381 0da4 80E0      		ldi r24,0
 2382 0da6 92E0      		ldi r25,lo8(2)
 2383 0da8 9A87      		std Y+10,r25
 2384 0daa 8987      		std Y+9,r24
 643:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 644:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_COMMAND_ENDPOINT](&ind);
 2385               		.loc 2 644 0
 2386 0dac 2091 0000 		lds r18,nwkIb+12
 2387 0db0 3091 0000 		lds r19,nwkIb+12+1
 2388 0db4 CE01      		movw r24,r28
 2389 0db6 0396      		adiw r24,3
 2390 0db8 F901      		movw r30,r18
 2391 0dba 0995      		icall
 2392               	.L116:
 2393               	/* epilogue start */
 645:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2394               		.loc 2 645 0 discriminator 1
 2395 0dbc 6196      		adiw r28,17
 2396 0dbe 0FB6      		in __tmp_reg__,__SREG__
 2397 0dc0 F894      		cli
 2398 0dc2 DEBF      		out __SP_H__,r29
 2399 0dc4 0FBE      		out __SREG__,__tmp_reg__
 2400 0dc6 CDBF      		out __SP_L__,r28
 2401 0dc8 DF91      		pop r29
 2402 0dca CF91      		pop r28
 2403 0dcc 0895      		ret
 2404               		.cfi_endproc
 2405               	.LFE77:
 2408               	nwkRxIndicateLLDataFrame:
 2409               	.LFB78:
 646:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 647:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLDataFrame(NwkFrame_t *frame)
 648:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {		
 2410               		.loc 2 648 0
 2411               		.cfi_startproc
 2412 0dce CF93      		push r28
 2413               	.LCFI52:
 2414               		.cfi_def_cfa_offset 3
 2415               		.cfi_offset 28, -2
 2416 0dd0 DF93      		push r29
 2417               	.LCFI53:
 2418               		.cfi_def_cfa_offset 4
 2419               		.cfi_offset 29, -3
 2420 0dd2 CDB7      		in r28,__SP_L__
 2421 0dd4 DEB7      		in r29,__SP_H__
 2422               	.LCFI54:
 2423               		.cfi_def_cfa_register 28
 2424 0dd6 6197      		sbiw r28,17
 2425               	.LCFI55:
 2426               		.cfi_def_cfa_offset 21
 2427 0dd8 0FB6      		in __tmp_reg__,__SREG__
 2428 0dda F894      		cli
 2429 0ddc DEBF      		out __SP_H__,r29
 2430 0dde 0FBE      		out __SREG__,__tmp_reg__
 2431 0de0 CDBF      		out __SP_L__,r28
 2432               	/* prologue: function */
 2433               	/* frame size = 17 */
 2434               	/* stack size = 19 */
 2435               	.L__stack_usage = 19
 2436 0de2 998B      		std Y+17,r25
 2437 0de4 888B      		std Y+16,r24
 649:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2438               		.loc 2 649 0
 2439 0de6 8889      		ldd r24,Y+16
 2440 0de8 9989      		ldd r25,Y+17
 2441 0dea 0296      		adiw r24,2
 2442 0dec 9A83      		std Y+2,r25
 2443 0dee 8983      		std Y+1,r24
 650:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 651:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 652:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2444               		.loc 2 652 0
 2445 0df0 8889      		ldd r24,Y+16
 2446 0df2 9989      		ldd r25,Y+17
 2447 0df4 24E2      		ldi r18,lo8(36)
 2448 0df6 FC01      		movw r30,r24
 2449 0df8 2083      		st Z,r18
 653:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 654:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_DATA_ENDPOINT]) {
 2450               		.loc 2 654 0
 2451 0dfa 8091 0000 		lds r24,nwkIb+8
 2452 0dfe 9091 0000 		lds r25,nwkIb+8+1
 2453 0e02 892B      		or r24,r25
 2454 0e04 01F4      		brne .L118
 655:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2455               		.loc 2 655 0
 2456 0e06 80E0      		ldi r24,0
 2457 0e08 00C0      		rjmp .L120
 2458               	.L118:
 656:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 657:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 658:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 659:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 660:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 661:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2459               		.loc 2 661 0
 2460 0e0a 1C82      		std Y+4,__zero_reg__
 2461 0e0c 1B82      		std Y+3,__zero_reg__
 662:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2462               		.loc 2 662 0
 2463 0e0e 1E82      		std Y+6,__zero_reg__
 2464 0e10 1D82      		std Y+5,__zero_reg__
 663:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2465               		.loc 2 663 0
 2466 0e12 1F82      		std Y+7,__zero_reg__
 664:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2467               		.loc 2 664 0
 2468 0e14 1886      		std Y+8,__zero_reg__
 665:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 666:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 667:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2469               		.loc 2 667 0
 2470 0e16 8889      		ldd r24,Y+16
 2471 0e18 9989      		ldd r25,Y+17
 2472 0e1a 8F57      		subi r24,127
 2473 0e1c 9F4F      		sbci r25,-1
 2474 0e1e FC01      		movw r30,r24
 2475 0e20 8081      		ld r24,Z
 2476 0e22 9181      		ldd r25,Z+1
 2477 0e24 9C87      		std Y+12,r25
 2478 0e26 8B87      		std Y+11,r24
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 669:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2479               		.loc 2 669 0
 2480 0e28 8889      		ldd r24,Y+16
 2481 0e2a 9989      		ldd r25,Y+17
 2482 0e2c 0E94 0000 		call nwkFramePayloadSize
 2483 0e30 8D87      		std Y+13,r24
 670:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2484               		.loc 2 670 0
 2485 0e32 8889      		ldd r24,Y+16
 2486 0e34 9989      		ldd r25,Y+17
 2487 0e36 8D57      		subi r24,125
 2488 0e38 9F4F      		sbci r25,-1
 2489 0e3a FC01      		movw r30,r24
 2490 0e3c 8081      		ld r24,Z
 2491 0e3e 8E87      		std Y+14,r24
 671:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2492               		.loc 2 671 0
 2493 0e40 8889      		ldd r24,Y+16
 2494 0e42 9989      		ldd r25,Y+17
 2495 0e44 8C57      		subi r24,124
 2496 0e46 9F4F      		sbci r25,-1
 2497 0e48 FC01      		movw r30,r24
 2498 0e4a 8081      		ld r24,Z
 2499 0e4c 8F87      		std Y+15,r24
 672:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 673:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_DATA;
 2500               		.loc 2 673 0
 2501 0e4e 80E0      		ldi r24,0
 2502 0e50 94E0      		ldi r25,lo8(4)
 2503 0e52 9A87      		std Y+10,r25
 2504 0e54 8987      		std Y+9,r24
 674:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 675:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_DATA_ENDPOINT](&ind);
 2505               		.loc 2 675 0
 2506 0e56 2091 0000 		lds r18,nwkIb+8
 2507 0e5a 3091 0000 		lds r19,nwkIb+8+1
 2508 0e5e CE01      		movw r24,r28
 2509 0e60 0396      		adiw r24,3
 2510 0e62 F901      		movw r30,r18
 2511 0e64 0995      		icall
 2512               	.L120:
 2513               	/* epilogue start */
 676:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2514               		.loc 2 676 0 discriminator 1
 2515 0e66 6196      		adiw r28,17
 2516 0e68 0FB6      		in __tmp_reg__,__SREG__
 2517 0e6a F894      		cli
 2518 0e6c DEBF      		out __SP_H__,r29
 2519 0e6e 0FBE      		out __SREG__,__tmp_reg__
 2520 0e70 CDBF      		out __SP_L__,r28
 2521 0e72 DF91      		pop r29
 2522 0e74 CF91      		pop r28
 2523 0e76 0895      		ret
 2524               		.cfi_endproc
 2525               	.LFE78:
 2528               	nwkRxIndicateLLACKFrame:
 2529               	.LFB79:
 677:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 678:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLACKFrame(NwkFrame_t *frame)
 679:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2530               		.loc 2 679 0
 2531               		.cfi_startproc
 2532 0e78 CF93      		push r28
 2533               	.LCFI56:
 2534               		.cfi_def_cfa_offset 3
 2535               		.cfi_offset 28, -2
 2536 0e7a DF93      		push r29
 2537               	.LCFI57:
 2538               		.cfi_def_cfa_offset 4
 2539               		.cfi_offset 29, -3
 2540 0e7c CDB7      		in r28,__SP_L__
 2541 0e7e DEB7      		in r29,__SP_H__
 2542               	.LCFI58:
 2543               		.cfi_def_cfa_register 28
 2544 0e80 6197      		sbiw r28,17
 2545               	.LCFI59:
 2546               		.cfi_def_cfa_offset 21
 2547 0e82 0FB6      		in __tmp_reg__,__SREG__
 2548 0e84 F894      		cli
 2549 0e86 DEBF      		out __SP_H__,r29
 2550 0e88 0FBE      		out __SREG__,__tmp_reg__
 2551 0e8a CDBF      		out __SP_L__,r28
 2552               	/* prologue: function */
 2553               	/* frame size = 17 */
 2554               	/* stack size = 19 */
 2555               	.L__stack_usage = 19
 2556 0e8c 998B      		std Y+17,r25
 2557 0e8e 888B      		std Y+16,r24
 680:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 681:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2558               		.loc 2 681 0
 2559 0e90 8889      		ldd r24,Y+16
 2560 0e92 9989      		ldd r25,Y+17
 2561 0e94 0296      		adiw r24,2
 2562 0e96 9A83      		std Y+2,r25
 2563 0e98 8983      		std Y+1,r24
 682:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 683:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 684:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2564               		.loc 2 684 0
 2565 0e9a 8889      		ldd r24,Y+16
 2566 0e9c 9989      		ldd r25,Y+17
 2567 0e9e 24E2      		ldi r18,lo8(36)
 2568 0ea0 FC01      		movw r30,r24
 2569 0ea2 2083      		st Z,r18
 685:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 686:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_ACK_ENDPOINT]) {
 2570               		.loc 2 686 0
 2571 0ea4 8091 0000 		lds r24,nwkIb+14
 2572 0ea8 9091 0000 		lds r25,nwkIb+14+1
 2573 0eac 892B      		or r24,r25
 2574 0eae 01F4      		brne .L122
 687:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2575               		.loc 2 687 0
 2576 0eb0 80E0      		ldi r24,0
 2577 0eb2 00C0      		rjmp .L124
 2578               	.L122:
 688:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 689:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 690:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* 
 691:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * this informations are not received in a LLDN Command as they are in standart 802.15.4
 692:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 693:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 694:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2579               		.loc 2 694 0
 2580 0eb4 1C82      		std Y+4,__zero_reg__
 2581 0eb6 1B82      		std Y+3,__zero_reg__
 695:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2582               		.loc 2 695 0
 2583 0eb8 1E82      		std Y+6,__zero_reg__
 2584 0eba 1D82      		std Y+5,__zero_reg__
 696:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2585               		.loc 2 696 0
 2586 0ebc 1F82      		std Y+7,__zero_reg__
 697:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2587               		.loc 2 697 0
 2588 0ebe 1886      		std Y+8,__zero_reg__
 698:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 699:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data =  frame->payload;
 2589               		.loc 2 699 0
 2590 0ec0 8889      		ldd r24,Y+16
 2591 0ec2 9989      		ldd r25,Y+17
 2592 0ec4 8F57      		subi r24,127
 2593 0ec6 9F4F      		sbci r25,-1
 2594 0ec8 FC01      		movw r30,r24
 2595 0eca 8081      		ld r24,Z
 2596 0ecc 9181      		ldd r25,Z+1
 2597 0ece 9C87      		std Y+12,r25
 2598 0ed0 8B87      		std Y+11,r24
 700:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2599               		.loc 2 700 0
 2600 0ed2 8889      		ldd r24,Y+16
 2601 0ed4 9989      		ldd r25,Y+17
 2602 0ed6 0E94 0000 		call nwkFramePayloadSize
 2603 0eda 8D87      		std Y+13,r24
 701:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2604               		.loc 2 701 0
 2605 0edc 8889      		ldd r24,Y+16
 2606 0ede 9989      		ldd r25,Y+17
 2607 0ee0 8D57      		subi r24,125
 2608 0ee2 9F4F      		sbci r25,-1
 2609 0ee4 FC01      		movw r30,r24
 2610 0ee6 8081      		ld r24,Z
 2611 0ee8 8E87      		std Y+14,r24
 702:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2612               		.loc 2 702 0
 2613 0eea 8889      		ldd r24,Y+16
 2614 0eec 9989      		ldd r25,Y+17
 2615 0eee 8C57      		subi r24,124
 2616 0ef0 9F4F      		sbci r25,-1
 2617 0ef2 FC01      		movw r30,r24
 2618 0ef4 8081      		ld r24,Z
 2619 0ef6 8F87      		std Y+15,r24
 703:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 704:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_OPT_LLDN_ACK;
 2620               		.loc 2 704 0
 2621 0ef8 80E0      		ldi r24,0
 2622 0efa 90E4      		ldi r25,lo8(64)
 2623 0efc 9A87      		std Y+10,r25
 2624 0efe 8987      		std Y+9,r24
 705:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 706:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_ACK_ENDPOINT](&ind);
 2625               		.loc 2 706 0
 2626 0f00 2091 0000 		lds r18,nwkIb+14
 2627 0f04 3091 0000 		lds r19,nwkIb+14+1
 2628 0f08 CE01      		movw r24,r28
 2629 0f0a 0396      		adiw r24,3
 2630 0f0c F901      		movw r30,r18
 2631 0f0e 0995      		icall
 2632               	.L124:
 2633               	/* epilogue start */
 707:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2634               		.loc 2 707 0 discriminator 1
 2635 0f10 6196      		adiw r28,17
 2636 0f12 0FB6      		in __tmp_reg__,__SREG__
 2637 0f14 F894      		cli
 2638 0f16 DEBF      		out __SP_H__,r29
 2639 0f18 0FBE      		out __SREG__,__tmp_reg__
 2640 0f1a CDBF      		out __SP_L__,r28
 2641 0f1c DF91      		pop r29
 2642 0f1e CF91      		pop r28
 2643 0f20 0895      		ret
 2644               		.cfi_endproc
 2645               	.LFE79:
 2648               	nwkRxHandleIndication:
 2649               	.LFB80:
 708:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 709:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 710:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 711:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleIndication(NwkFrame_t *frame)
 712:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2650               		.loc 2 712 0
 2651               		.cfi_startproc
 2652 0f22 CF93      		push r28
 2653               	.LCFI60:
 2654               		.cfi_def_cfa_offset 3
 2655               		.cfi_offset 28, -2
 2656 0f24 DF93      		push r29
 2657               	.LCFI61:
 2658               		.cfi_def_cfa_offset 4
 2659               		.cfi_offset 29, -3
 2660 0f26 00D0      		rcall .
 2661 0f28 1F92      		push __zero_reg__
 2662               	.LCFI62:
 2663               		.cfi_def_cfa_offset 7
 2664 0f2a CDB7      		in r28,__SP_L__
 2665 0f2c DEB7      		in r29,__SP_H__
 2666               	.LCFI63:
 2667               		.cfi_def_cfa_register 28
 2668               	/* prologue: function */
 2669               	/* frame size = 3 */
 2670               	/* stack size = 5 */
 2671               	.L__stack_usage = 5
 2672 0f2e 9B83      		std Y+3,r25
 2673 0f30 8A83      		std Y+2,r24
 713:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool ack;
 714:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 715:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = 0;
 2674               		.loc 2 715 0
 2675 0f32 1092 0000 		sts nwkRxAckControl,__zero_reg__
 716:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack = nwkRxIndicateDataFrame(frame);
 2676               		.loc 2 716 0
 2677 0f36 8A81      		ldd r24,Y+2
 2678 0f38 9B81      		ldd r25,Y+3
 2679 0f3a 0E94 0000 		call nwkRxIndicateDataFrame
 2680 0f3e 8983      		std Y+1,r24
 717:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 718:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == frame->header.nwkFcf.ackRequest) {
 2681               		.loc 2 718 0
 2682 0f40 8A81      		ldd r24,Y+2
 2683 0f42 9B81      		ldd r25,Y+3
 2684 0f44 FC01      		movw r30,r24
 2685 0f46 8385      		ldd r24,Z+11
 2686 0f48 8170      		andi r24,lo8(1)
 2687 0f4a 8823      		tst r24
 2688 0f4c 01F4      		brne .L126
 719:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2689               		.loc 2 719 0
 2690 0f4e 1982      		std Y+1,__zero_reg__
 2691               	.L126:
 720:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 721:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 722:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == frame->header.macDstAddr &&
 2692               		.loc 2 722 0
 2693 0f50 8A81      		ldd r24,Y+2
 2694 0f52 9B81      		ldd r25,Y+3
 2695 0f54 FC01      		movw r30,r24
 2696 0f56 8781      		ldd r24,Z+7
 2697 0f58 9085      		ldd r25,Z+8
 2698 0f5a 0196      		adiw r24,1
 2699 0f5c 01F4      		brne .L127
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2700               		.loc 2 723 0 discriminator 1
 2701 0f5e 2091 0000 		lds r18,nwkIb
 2702 0f62 3091 0000 		lds r19,nwkIb+1
 2703 0f66 8A81      		ldd r24,Y+2
 2704 0f68 9B81      		ldd r25,Y+3
 2705 0f6a FC01      		movw r30,r24
 2706 0f6c 8785      		ldd r24,Z+15
 2707 0f6e 9089      		ldd r25,Z+16
 722:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2708               		.loc 2 722 0 discriminator 1
 2709 0f70 2817      		cp r18,r24
 2710 0f72 3907      		cpc r19,r25
 2711 0f74 01F4      		brne .L127
 724:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			0 == frame->header.nwkFcf.multicast) {
 2712               		.loc 2 724 0
 2713 0f76 8A81      		ldd r24,Y+2
 2714 0f78 9B81      		ldd r25,Y+3
 2715 0f7a FC01      		movw r30,r24
 2716 0f7c 8385      		ldd r24,Z+11
 2717 0f7e 8870      		andi r24,lo8(8)
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2718               		.loc 2 723 0
 2719 0f80 8823      		tst r24
 2720 0f82 01F4      		brne .L127
 725:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = true;
 2721               		.loc 2 725 0
 2722 0f84 81E0      		ldi r24,lo8(1)
 2723 0f86 8983      		std Y+1,r24
 2724               	.L127:
 726:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 727:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 728:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == frame->header.macDstPanId) {
 2725               		.loc 2 728 0
 2726 0f88 8A81      		ldd r24,Y+2
 2727 0f8a 9B81      		ldd r25,Y+3
 2728 0f8c FC01      		movw r30,r24
 2729 0f8e 8581      		ldd r24,Z+5
 2730 0f90 9681      		ldd r25,Z+6
 2731 0f92 0196      		adiw r24,1
 2732 0f94 01F4      		brne .L128
 729:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2733               		.loc 2 729 0
 2734 0f96 1982      		std Y+1,__zero_reg__
 2735               	.L128:
 730:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 731:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 732:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == nwkIb.addr) {
 2736               		.loc 2 732 0
 2737 0f98 8091 0000 		lds r24,nwkIb
 2738 0f9c 9091 0000 		lds r25,nwkIb+1
 2739 0fa0 0196      		adiw r24,1
 2740 0fa2 01F4      		brne .L129
 733:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2741               		.loc 2 733 0
 2742 0fa4 1982      		std Y+1,__zero_reg__
 2743               	.L129:
 734:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 735:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 736:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ack) {
 2744               		.loc 2 736 0
 2745 0fa6 8981      		ldd r24,Y+1
 2746 0fa8 8823      		tst r24
 2747 0faa 01F0      		breq .L130
 737:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxSendAck(frame);
 2748               		.loc 2 737 0
 2749 0fac 8A81      		ldd r24,Y+2
 2750 0fae 9B81      		ldd r25,Y+3
 2751 0fb0 0E94 0000 		call nwkRxSendAck
 2752               	.L130:
 738:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 739:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 740:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2753               		.loc 2 740 0
 2754 0fb4 8A81      		ldd r24,Y+2
 2755 0fb6 9B81      		ldd r25,Y+3
 2756 0fb8 24E2      		ldi r18,lo8(36)
 2757 0fba FC01      		movw r30,r24
 2758 0fbc 2083      		st Z,r18
 741:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2759               		.loc 2 741 0
 2760 0fbe 0000      		nop
 2761               	/* epilogue start */
 2762 0fc0 0F90      		pop __tmp_reg__
 2763 0fc2 0F90      		pop __tmp_reg__
 2764 0fc4 0F90      		pop __tmp_reg__
 2765 0fc6 DF91      		pop r29
 2766 0fc8 CF91      		pop r28
 2767 0fca 0895      		ret
 2768               		.cfi_endproc
 2769               	.LFE80:
 2771               	.global	nwkRxTaskHandler
 2773               	nwkRxTaskHandler:
 2774               	.LFB81:
 742:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 743:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 744:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Rx Module task handler
 745:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 746:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxTaskHandler(void)
 747:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2775               		.loc 2 747 0
 2776               		.cfi_startproc
 2777 0fcc CF93      		push r28
 2778               	.LCFI64:
 2779               		.cfi_def_cfa_offset 3
 2780               		.cfi_offset 28, -2
 2781 0fce DF93      		push r29
 2782               	.LCFI65:
 2783               		.cfi_def_cfa_offset 4
 2784               		.cfi_offset 29, -3
 2785 0fd0 00D0      		rcall .
 2786               	.LCFI66:
 2787               		.cfi_def_cfa_offset 6
 2788 0fd2 CDB7      		in r28,__SP_L__
 2789 0fd4 DEB7      		in r29,__SP_H__
 2790               	.LCFI67:
 2791               		.cfi_def_cfa_register 28
 2792               	/* prologue: function */
 2793               	/* frame size = 2 */
 2794               	/* stack size = 4 */
 2795               	.L__stack_usage = 4
 748:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame = NULL;
 2796               		.loc 2 748 0
 2797 0fd6 1A82      		std Y+2,__zero_reg__
 2798 0fd8 1982      		std Y+1,__zero_reg__
 749:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 750:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 2799               		.loc 2 750 0
 2800 0fda 00C0      		rjmp .L132
 2801               	.L142:
 751:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2802               		.loc 2 751 0
 2803 0fdc 8981      		ldd r24,Y+1
 2804 0fde 9A81      		ldd r25,Y+2
 2805 0fe0 FC01      		movw r30,r24
 2806 0fe2 8081      		ld r24,Z
 2807 0fe4 882F      		mov r24,r24
 2808 0fe6 90E0      		ldi r25,0
 2809 0fe8 092E      		mov __tmp_reg__,r25
 2810 0fea 000C      		lsl r0
 2811 0fec AA0B      		sbc r26,r26
 2812 0fee BB0B      		sbc r27,r27
 2813 0ff0 40E2      		ldi r20,lo8(32)
 2814 0ff2 50E0      		ldi r21,0
 2815 0ff4 29E0      		ldi r18,lo8(9)
 2816 0ff6 30E0      		ldi r19,0
 2817 0ff8 841B      		sub r24,r20
 2818 0ffa 950B      		sbc r25,r21
 2819 0ffc 2817      		cp r18,r24
 2820 0ffe 3907      		cpc r19,r25
 2821 1000 00F0      		brlo .L132
 2822 1002 8050      		subi r24,lo8(-(gs(.L134)))
 2823 1004 9040      		sbci r25,hi8(-(gs(.L134)))
 2824 1006 FC01      		movw r30,r24
 2825 1008 0C94 0000 		jmp __tablejump2__
 2826               		.section	.progmem.gcc_sw_table,"a",@progbits
 2827               		.p2align	1
 2828               	.L134:
 2829 0000 0000      		.word gs(.L133)
 2830 0002 0000      		.word gs(.L132)
 2831 0004 0000      		.word gs(.L135)
 2832 0006 0000      		.word gs(.L132)
 2833 0008 0000      		.word gs(.L136)
 2834 000a 0000      		.word gs(.L137)
 2835 000c 0000      		.word gs(.L138)
 2836 000e 0000      		.word gs(.L139)
 2837 0010 0000      		.word gs(.L140)
 2838 0012 0000      		.word gs(.L141)
 2839               		.text
 2840               	.L133:
 752:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_RECEIVED:
 753:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 754:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleReceivedFrame(frame);
 2841               		.loc 2 754 0
 2842 100c 8981      		ldd r24,Y+1
 2843 100e 9A81      		ldd r25,Y+2
 2844 1010 0E94 0000 		call nwkRxHandleReceivedFrame
 755:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 756:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2845               		.loc 2 756 0
 2846 1014 00C0      		rjmp .L132
 2847               	.L135:
 757:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 758:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 759:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_DECRYPT:
 760:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 761:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkSecurityProcess(frame, false);
 762:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 763:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 764:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 765:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 766:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_INDICATE:
 767:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 768:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleIndication(frame);
 2848               		.loc 2 768 0
 2849 1016 8981      		ldd r24,Y+1
 2850 1018 9A81      		ldd r25,Y+2
 2851 101a 0E94 0000 		call nwkRxHandleIndication
 769:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 770:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2852               		.loc 2 770 0
 2853 101e 00C0      		rjmp .L132
 2854               	.L136:
 771:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 772:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 773:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_ROUTE:
 774:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 775:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRouteFrame(frame);
 776:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 777:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 778:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 779:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 780:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_FINISH:
 781:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 782:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkFrameFree(frame);
 2855               		.loc 2 782 0
 2856 1020 8981      		ldd r24,Y+1
 2857 1022 9A81      		ldd r25,Y+2
 2858 1024 0E94 0000 		call nwkFrameFree
 783:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 784:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2859               		.loc 2 784 0
 2860 1028 00C0      		rjmp .L132
 2861               	.L137:
 785:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 786:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_BEACON:
 787:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 788:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateBeaconFrame(frame);
 2862               		.loc 2 788 0
 2863 102a 8981      		ldd r24,Y+1
 2864 102c 9A81      		ldd r25,Y+2
 2865 102e 0E94 0000 		call nwkRxIndicateBeaconFrame
 789:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 790:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2866               		.loc 2 790 0
 2867 1032 00C0      		rjmp .L132
 2868               	.L138:
 791:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 792:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 793:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLBEACON:
 794:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 795:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLBeaconFrame(frame);
 2869               		.loc 2 795 0
 2870 1034 8981      		ldd r24,Y+1
 2871 1036 9A81      		ldd r25,Y+2
 2872 1038 0E94 0000 		call nwkRxIndicateLLBeaconFrame
 796:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 797:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2873               		.loc 2 797 0
 2874 103c 00C0      		rjmp .L132
 2875               	.L139:
 798:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 799:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLCOMMAND:
 800:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 801:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLCommandFrame(frame);
 2876               		.loc 2 801 0
 2877 103e 8981      		ldd r24,Y+1
 2878 1040 9A81      		ldd r25,Y+2
 2879 1042 0E94 0000 		call nwkRxIndicateLLCommandFrame
 802:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 803:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2880               		.loc 2 803 0
 2881 1046 00C0      		rjmp .L132
 2882               	.L141:
 804:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 805:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLDATA:
 806:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 807:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLDataFrame(frame);
 2883               		.loc 2 807 0
 2884 1048 8981      		ldd r24,Y+1
 2885 104a 9A81      		ldd r25,Y+2
 2886 104c 0E94 0000 		call nwkRxIndicateLLDataFrame
 2887               	.L140:
 808:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 809:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 810:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLACKFRAME:
 811:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 812:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLACKFrame(frame);
 2888               		.loc 2 812 0
 2889 1050 8981      		ldd r24,Y+1
 2890 1052 9A81      		ldd r25,Y+2
 2891 1054 0E94 0000 		call nwkRxIndicateLLACKFrame
 813:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 814:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2892               		.loc 2 814 0
 2893 1058 0000      		nop
 2894               	.L132:
 750:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2895               		.loc 2 750 0
 2896 105a 8981      		ldd r24,Y+1
 2897 105c 9A81      		ldd r25,Y+2
 2898 105e 0E94 0000 		call nwkFrameNext
 2899 1062 9A83      		std Y+2,r25
 2900 1064 8983      		std Y+1,r24
 2901 1066 8981      		ldd r24,Y+1
 2902 1068 9A81      		ldd r25,Y+2
 2903 106a 892B      		or r24,r25
 2904 106c 01F0      		breq .+2
 2905 106e 00C0      		rjmp .L142
 815:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 816:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 817:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 818:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2906               		.loc 2 818 0
 2907 1070 0000      		nop
 2908               	/* epilogue start */
 2909 1072 0F90      		pop __tmp_reg__
 2910 1074 0F90      		pop __tmp_reg__
 2911 1076 DF91      		pop r29
 2912 1078 CF91      		pop r28
 2913 107a 0895      		ret
 2914               		.cfi_endproc
 2915               	.LFE81:
 2917               	.Letext0:
 2918               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 2919               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 2920               		.file 5 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 2921               		.file 6 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 2922               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwkDataReq.h"
 2923               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 2924               		.file 9 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
 2925               		.file 10 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkRx.c
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:7      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 n
                            *COM*:00000004 tTS
                            *COM*:00000002 macLLDNnumTimeSlots
                            *COM*:00000002 macLLDNnumUplinkTS
                            *COM*:00000002 macLLDNRetransmitTS
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:17     .text:00000000 nwkFramePayloadSize
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:79     .bss.nwkRxDuplicateRejectionTable:00000000 nwkRxDuplicateRejectionTable
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:84     .bss.nwkRxAckControl:00000000 nwkRxAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:89     .bss.nwkRxDuplicateRejectionTimer:00000000 nwkRxDuplicateRejectionTimer
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:94     .text:00000044 nwkRxInit
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:779    .text:00000442 nwkRxDuplicateRejectionTimerHandler
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:1177   .text:00000684 nwkRxSeriveDataInd
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:181    .text:000000b6 PHY_DataInd
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:569    .text:00000318 nwkRxSendAck
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:741    .text:00000426 NWK_SetAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:894    .text:000004dc nwkRxRejectDuplicate
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:1245   .text:000006ce nwkRxHandleReceivedFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:1695   .text:000009a8 nwkRxIndicateDataFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:2034   .text:00000bb6 nwkRxIndicateBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:2178   .text:00000c8c nwkRxIndicateLLBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:2288   .text:00000d24 nwkRxIndicateLLCommandFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:2408   .text:00000dce nwkRxIndicateLLDataFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:2528   .text:00000e78 nwkRxIndicateLLACKFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:2648   .text:00000f22 nwkRxHandleIndication
C:\Users\GUILHE~1\AppData\Local\Temp\cc6fxq84.s:2773   .text:00000fcc nwkRxTaskHandler

UNDEFINED SYMBOLS
NWK_OpenEndpoint
nwkFrameAlloc
nwkFrameAlloc_LLDN
memcpy
nwkFrameCommandInit
nwkTxFrame
SYS_TimerStart
nwkTxAckReceived
nwkIb
NWK_GroupIsMember
nwkTxBroadcastFrame
__tablejump2__
nwkFrameFree
nwkFrameNext
__do_clear_bss
