   1               		.file	"nwkRx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	n,1,1
  12               		.comm	tTS,4,1
  14               	nwkFramePayloadSize:
  15               	.LFB65:
  16               		.file 1 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
   1:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /**
   2:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \file nwkFrame.h
   3:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   4:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \brief Frame buffers management interface
   5:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   6:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   8:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  10:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  13:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  16:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  20:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  23:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  26:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  38:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  40:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  41:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  42:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  43:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*
  44:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  46:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  48:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  49:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #ifndef _NWK_FRAME_H_
  50:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define _NWK_FRAME_H_
  51:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  52:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Includes ---------------------------------------------------------------*/
  53:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include <stdint.h>
  54:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include "compiler.h"
  55:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  56:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Definitions ------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define NWK_FRAME_MAX_PAYLOAD_SIZE   127
  58:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  59:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Types ------------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_SET(1)
  61:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameHeader_t {
  62:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  63:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  64:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstPanId;
  65:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstAddr;
  66:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  67:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  68:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  69:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t ackRequest : 1;
  70:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t security   : 1;
  71:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t linkLocal  : 1;
  72:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t multicast  : 1;
  73:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t beacon     : 1;
  74:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved   : 3;
  75:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} nwkFcf;
  76:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t nwkSeq;
  77:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkSrcAddr;
  78:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkDstAddr;
  79:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  80:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkSrcEndpoint : 4;
  81:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkDstEndpoint : 4;
  82:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
  83:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameHeader_t;
  84:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  85:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeader_t {
  86:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  87:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  88:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcPanId;
  89:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  90:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
  91:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
  92:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t beaconOrder			: 4;
  93:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t superframeOrder		: 4;
  94:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t finalCAPslot			: 4;
  95:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t BatteryLifeExtension	: 1;
  96:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t Reserved				: 1;
  97:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t PANCoordinator			: 1;
  98:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t AssociationPermit		: 1;
  99:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSFS;
 100:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macGTS;
 101:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macPending;
 102:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeader_t;
 103:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 104:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 105:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeaderLLDN_t {
 106:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/******* MHR *****/
 107:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// struct
 108:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// {
 109:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameType 				: 3;
 110:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SecurityEnabled 	: 1;
 111:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameVersion			: 1;
 112:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t ackRequest				: 1;
 113:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SubFrameType			: 2;
 114:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// } macFcf;
 115:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 116:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 117:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 118:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 119:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 120:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 121:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 122:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 123:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 124:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 125:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/****** MAC Payload *******/
 126:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 127:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 128:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txState 			: 3;
 129:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txDir 				: 1;
 130:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved			: 1;
 131:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t numBaseMgmtTimeslots: 3; // number of managment time slots
 132:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 										// uplink and downlink must be equal
 133:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} Flags;
 134:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 135:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t PanId;
 136:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t confSeqNumber;
 137:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t TimeSlotSize;
 138:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 139:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 140:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeaderLLDN_t;
 141:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 142:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameGeneralHeaderLLDN_t {
 143:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	#if (TAL_TYPE == AT86RF233)
 144:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	#endif
 145:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// uint8_t PHR;
 146:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 147:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 148:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 149:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 150:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 151:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 152:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 153:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 154:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 155:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 156:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 157:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameGeneralHeaderLLDN_t;
 158:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 159:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 160:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameMulticastHeader_t {
 161:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nonMemberRadius    : 4;
 162:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxNonMemberRadius : 4;
 163:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t memberRadius       : 4;
 164:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxMemberRadius    : 4;
 165:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameMulticastHeader_t;
 166:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 167:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct NwkFrame_t {
 168:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t state;
 169:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t size;
 170:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 171:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 172:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameHeader_t header;
 173:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeader_t beacon;
 174:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeaderLLDN_t LLbeacon;
 175:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameGeneralHeaderLLDN_t LLgeneral;
 176:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t data[NWK_FRAME_MAX_PAYLOAD_SIZE];
 177:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 178:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 179:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t *payload;
 180:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 181:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 182:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 183:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t lqi;
 184:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			int8_t rssi;
 185:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} rx;
 186:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 187:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 188:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t status;
 189:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint16_t timeout;
 190:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t control;
 191:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			void (*confirm)(struct NwkFrame_t *frame);
 192:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} tx;
 193:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 194:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrame_t;
 195:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_RESET()
 196:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Prototypes -------------------------------------------------------------*/
 197:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameInit(void);
 198:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc(void);
 199:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameFree(NwkFrame_t *frame);
 200:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);
 201:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameCommandInit(NwkFrame_t *frame);
 202:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 203:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame);
 204:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Implementations --------------------------------------------------------*/
 205:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 206:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*************************************************************************//**
 207:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** *****************************************************************************/
 208:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** static inline uint8_t nwkFramePayloadSize(NwkFrame_t *frame)
 209:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** {
  17               		.loc 1 209 0
  18               		.cfi_startproc
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27 0004 00D0      		rcall .
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 6
  30 0006 CDB7      		in r28,__SP_L__
  31 0008 DEB7      		in r29,__SP_H__
  32               	.LCFI3:
  33               		.cfi_def_cfa_register 28
  34               	/* prologue: function */
  35               	/* frame size = 2 */
  36               	/* stack size = 4 */
  37               	.L__stack_usage = 4
  38 000a 9A83      		std Y+2,r25
  39 000c 8983      		std Y+1,r24
 210:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	return frame->size - (frame->payload - frame->data);
  40               		.loc 1 210 0
  41 000e 8981      		ldd r24,Y+1
  42 0010 9A81      		ldd r25,Y+2
  43 0012 FC01      		movw r30,r24
  44 0014 4181      		ldd r20,Z+1
  45 0016 8981      		ldd r24,Y+1
  46 0018 9A81      		ldd r25,Y+2
  47 001a 8F57      		subi r24,127
  48 001c 9F4F      		sbci r25,-1
  49 001e FC01      		movw r30,r24
  50 0020 8081      		ld r24,Z
  51 0022 9181      		ldd r25,Z+1
  52 0024 9C01      		movw r18,r24
  53 0026 8981      		ldd r24,Y+1
  54 0028 9A81      		ldd r25,Y+2
  55 002a 0296      		adiw r24,2
  56 002c B901      		movw r22,r18
  57 002e 681B      		sub r22,r24
  58 0030 790B      		sbc r23,r25
  59 0032 CB01      		movw r24,r22
  60 0034 742F      		mov r23,r20
  61 0036 781B      		sub r23,r24
  62 0038 872F      		mov r24,r23
  63               	/* epilogue start */
 211:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** }
  64               		.loc 1 211 0
  65 003a 0F90      		pop __tmp_reg__
  66 003c 0F90      		pop __tmp_reg__
  67 003e DF91      		pop r29
  68 0040 CF91      		pop r28
  69 0042 0895      		ret
  70               		.cfi_endproc
  71               	.LFE65:
  73               		.section	.bss.nwkRxDuplicateRejectionTable,"aw",@nobits
  76               	nwkRxDuplicateRejectionTable:
  77 0000 0000 0000 		.zero	250
  77      0000 0000 
  77      0000 0000 
  77      0000 0000 
  77      0000 0000 
  78               		.section	.bss.nwkRxAckControl,"aw",@nobits
  81               	nwkRxAckControl:
  82 0000 00        		.zero	1
  83               		.section	.bss.nwkRxDuplicateRejectionTimer,"aw",@nobits
  86               	nwkRxDuplicateRejectionTimer:
  87 0000 0000 0000 		.zero	13
  87      0000 0000 
  87      0000 0000 
  87      00
  88               		.text
  89               	.global	nwkRxInit
  91               	nwkRxInit:
  92               	.LFB66:
  93               		.file 2 "../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \file nwkRx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \brief Receive routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkGroup.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRoute.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkCommand.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkSecurity.h"
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRouteDiscovery.h"
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Definitions ------------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL   100 /* ms */
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define DUPLICATE_REJECTION_TTL	\
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	((NWK_DUPLICATE_REJECTION_TTL /	\
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL) + 1)
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_SERVICE_ENDPOINT_ID    0
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Types ------------------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** enum {
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_RECEIVED = 0x20,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_DECRYPT  = 0x21,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_INDICATE = 0x22,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_ROUTE    = 0x23,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_FINISH   = 0x24,
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_BEACON   = 0x25,
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLBEACON 	= 0x26,
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLCOMMAND 	= 0x27,
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLACKFRAME = 0x28,
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLDATA		= 0x29
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** };
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** typedef struct NwkDuplicateRejectionEntry_t {
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint16_t src;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t seq;
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t mask;
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t ttl;
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** } NwkDuplicateRejectionEntry_t;
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Prototypes -------------------------------------------------------------*/
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer);
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind);
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Variables --------------------------------------------------------------*/
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static NwkDuplicateRejectionEntry_t nwkRxDuplicateRejectionTable[
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DUPLICATE_REJECTION_TABLE_SIZE];
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static uint8_t nwkRxAckControl;
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static SYS_Timer_t nwkRxDuplicateRejectionTimer;
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Implementations --------------------------------------------------------*/
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Initializes the Rx module
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxInit(void)
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
  94               		.loc 2 110 0
  95               		.cfi_startproc
  96 0044 CF93      		push r28
  97               	.LCFI4:
  98               		.cfi_def_cfa_offset 3
  99               		.cfi_offset 28, -2
 100 0046 DF93      		push r29
 101               	.LCFI5:
 102               		.cfi_def_cfa_offset 4
 103               		.cfi_offset 29, -3
 104 0048 1F92      		push __zero_reg__
 105               	.LCFI6:
 106               		.cfi_def_cfa_offset 5
 107 004a CDB7      		in r28,__SP_L__
 108 004c DEB7      		in r29,__SP_H__
 109               	.LCFI7:
 110               		.cfi_def_cfa_register 28
 111               	/* prologue: function */
 112               	/* frame size = 1 */
 113               	/* stack size = 3 */
 114               	.L__stack_usage = 3
 115               	.LBB2:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 116               		.loc 2 111 0
 117 004e 1982      		std Y+1,__zero_reg__
 118 0050 00C0      		rjmp .L4
 119               	.L5:
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxDuplicateRejectionTable[i].ttl = 0;
 120               		.loc 2 112 0 discriminator 3
 121 0052 8981      		ldd r24,Y+1
 122 0054 282F      		mov r18,r24
 123 0056 30E0      		ldi r19,0
 124 0058 C901      		movw r24,r18
 125 005a 880F      		lsl r24
 126 005c 991F      		rol r25
 127 005e 880F      		lsl r24
 128 0060 991F      		rol r25
 129 0062 820F      		add r24,r18
 130 0064 931F      		adc r25,r19
 131 0066 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 132 0068 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 133 006a FC01      		movw r30,r24
 134 006c 1082      		st Z,__zero_reg__
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 135               		.loc 2 111 0 discriminator 3
 136 006e 8981      		ldd r24,Y+1
 137 0070 8F5F      		subi r24,lo8(-(1))
 138 0072 8983      		std Y+1,r24
 139               	.L4:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 140               		.loc 2 111 0 is_stmt 0 discriminator 1
 141 0074 8981      		ldd r24,Y+1
 142 0076 8233      		cpi r24,lo8(50)
 143 0078 00F0      		brlo .L5
 144               	.LBE2:
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.interval
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL;
 145               		.loc 2 116 0 is_stmt 1
 146 007a 84E6      		ldi r24,lo8(100)
 147 007c 90E0      		ldi r25,0
 148 007e A0E0      		ldi r26,0
 149 0080 B0E0      		ldi r27,0
 150 0082 8093 0000 		sts nwkRxDuplicateRejectionTimer+6,r24
 151 0086 9093 0000 		sts nwkRxDuplicateRejectionTimer+6+1,r25
 152 008a A093 0000 		sts nwkRxDuplicateRejectionTimer+6+2,r26
 153 008e B093 0000 		sts nwkRxDuplicateRejectionTimer+6+3,r27
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE;
 154               		.loc 2 117 0
 155 0092 1092 0000 		sts nwkRxDuplicateRejectionTimer+10,__zero_reg__
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.handler
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= nwkRxDuplicateRejectionTimerHandler;
 156               		.loc 2 119 0
 157 0096 80E0      		ldi r24,lo8(gs(nwkRxDuplicateRejectionTimerHandler))
 158 0098 90E0      		ldi r25,hi8(gs(nwkRxDuplicateRejectionTimerHandler))
 159 009a 9093 0000 		sts nwkRxDuplicateRejectionTimer+11+1,r25
 160 009e 8093 0000 		sts nwkRxDuplicateRejectionTimer+11,r24
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_OpenEndpoint(NWK_SERVICE_ENDPOINT_ID, nwkRxSeriveDataInd);
 161               		.loc 2 121 0
 162 00a2 60E0      		ldi r22,lo8(gs(nwkRxSeriveDataInd))
 163 00a4 70E0      		ldi r23,hi8(gs(nwkRxSeriveDataInd))
 164 00a6 80E0      		ldi r24,0
 165 00a8 0E94 0000 		call NWK_OpenEndpoint
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 166               		.loc 2 122 0
 167 00ac 0000      		nop
 168               	/* epilogue start */
 169 00ae 0F90      		pop __tmp_reg__
 170 00b0 DF91      		pop r29
 171 00b2 CF91      		pop r28
 172 00b4 0895      		ret
 173               		.cfi_endproc
 174               	.LFE66:
 176               		.weak	PHY_DataInd
 178               	PHY_DataInd:
 179               	.LFB67:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void __attribute__((weak)) PHY_DataInd(PHY_DataInd_t *ind)
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 180               		.loc 2 127 0
 181               		.cfi_startproc
 182 00b6 CF93      		push r28
 183               	.LCFI8:
 184               		.cfi_def_cfa_offset 3
 185               		.cfi_offset 28, -2
 186 00b8 DF93      		push r29
 187               	.LCFI9:
 188               		.cfi_def_cfa_offset 4
 189               		.cfi_offset 29, -3
 190 00ba 00D0      		rcall .
 191 00bc 00D0      		rcall .
 192               	.LCFI10:
 193               		.cfi_def_cfa_offset 8
 194 00be CDB7      		in r28,__SP_L__
 195 00c0 DEB7      		in r29,__SP_H__
 196               	.LCFI11:
 197               		.cfi_def_cfa_register 28
 198               	/* prologue: function */
 199               	/* frame size = 4 */
 200               	/* stack size = 6 */
 201               	.L__stack_usage = 6
 202 00c2 9C83      		std Y+4,r25
 203 00c4 8B83      		std Y+3,r24
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame;
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-Beacon frame
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 		for (int i = 0; i < ind->size; i++)
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 		{
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 			printf("\ndata[%d] %hhx", i,ind->data[i]);
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // /  		}
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(0x0c == ind->data[0])
 204               		.loc 2 137 0
 205 00c6 8B81      		ldd r24,Y+3
 206 00c8 9C81      		ldd r25,Y+4
 207 00ca FC01      		movw r30,r24
 208 00cc 8081      		ld r24,Z
 209 00ce 9181      		ldd r25,Z+1
 210 00d0 FC01      		movw r30,r24
 211 00d2 8081      		ld r24,Z
 212 00d4 8C30      		cpi r24,lo8(12)
 213 00d6 01F4      		brne .L7
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameBeaconHeaderLLDN_t))
 214               		.loc 2 139 0
 215 00d8 8B81      		ldd r24,Y+3
 216 00da 9C81      		ldd r25,Y+4
 217 00dc FC01      		movw r30,r24
 218 00de 8281      		ldd r24,Z+2
 219 00e0 8730      		cpi r24,lo8(7)
 220 00e2 00F0      		brlo .+2
 221 00e4 00C0      		rjmp .L8
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 222               		.loc 2 141 0
 223 00e6 00C0      		rjmp .L6
 224               	.L7:
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-MAC Command frame
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0xcc == ind->data[0] || 0x8c == ind->data[0] || 0x4c == ind->data[0])
 225               		.loc 2 145 0
 226 00e8 8B81      		ldd r24,Y+3
 227 00ea 9C81      		ldd r25,Y+4
 228 00ec FC01      		movw r30,r24
 229 00ee 8081      		ld r24,Z
 230 00f0 9181      		ldd r25,Z+1
 231 00f2 FC01      		movw r30,r24
 232 00f4 8081      		ld r24,Z
 233 00f6 8C3C      		cpi r24,lo8(-52)
 234 00f8 01F0      		breq .L10
 235               		.loc 2 145 0 is_stmt 0 discriminator 1
 236 00fa 8B81      		ldd r24,Y+3
 237 00fc 9C81      		ldd r25,Y+4
 238 00fe FC01      		movw r30,r24
 239 0100 8081      		ld r24,Z
 240 0102 9181      		ldd r25,Z+1
 241 0104 FC01      		movw r30,r24
 242 0106 8081      		ld r24,Z
 243 0108 8C38      		cpi r24,lo8(-116)
 244 010a 01F0      		breq .L10
 245               		.loc 2 145 0 discriminator 2
 246 010c 8B81      		ldd r24,Y+3
 247 010e 9C81      		ldd r25,Y+4
 248 0110 FC01      		movw r30,r24
 249 0112 8081      		ld r24,Z
 250 0114 9181      		ldd r25,Z+1
 251 0116 FC01      		movw r30,r24
 252 0118 8081      		ld r24,Z
 253 011a 8C34      		cpi r24,lo8(76)
 254 011c 01F4      		brne .L11
 255               	.L10:
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameGeneralHeaderLLDN_t))
 256               		.loc 2 147 0 is_stmt 1
 257 011e 8B81      		ldd r24,Y+3
 258 0120 9C81      		ldd r25,Y+4
 259 0122 FC01      		movw r30,r24
 260 0124 8281      		ldd r24,Z+2
 261 0126 8330      		cpi r24,lo8(3)
 262 0128 00F0      		brlo .+2
 263 012a 00C0      		rjmp .L8
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 264               		.loc 2 149 0
 265 012c 00C0      		rjmp .L6
 266               	.L11:
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x88 == ind->data[1])
 267               		.loc 2 152 0
 268 012e 8B81      		ldd r24,Y+3
 269 0130 9C81      		ldd r25,Y+4
 270 0132 FC01      		movw r30,r24
 271 0134 8081      		ld r24,Z
 272 0136 9181      		ldd r25,Z+1
 273 0138 0196      		adiw r24,1
 274 013a FC01      		movw r30,r24
 275 013c 8081      		ld r24,Z
 276 013e 8838      		cpi r24,lo8(-120)
 277 0140 01F4      		brne .L13
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x61 != ind->data[0] && 0x41 != ind->data[0]) || ind->size < sizeof(NwkFrameHeader_t))
 278               		.loc 2 154 0
 279 0142 8B81      		ldd r24,Y+3
 280 0144 9C81      		ldd r25,Y+4
 281 0146 FC01      		movw r30,r24
 282 0148 8081      		ld r24,Z
 283 014a 9181      		ldd r25,Z+1
 284 014c FC01      		movw r30,r24
 285 014e 8081      		ld r24,Z
 286 0150 8136      		cpi r24,lo8(97)
 287 0152 01F0      		breq .L14
 288               		.loc 2 154 0 is_stmt 0 discriminator 1
 289 0154 8B81      		ldd r24,Y+3
 290 0156 9C81      		ldd r25,Y+4
 291 0158 FC01      		movw r30,r24
 292 015a 8081      		ld r24,Z
 293 015c 9181      		ldd r25,Z+1
 294 015e FC01      		movw r30,r24
 295 0160 8081      		ld r24,Z
 296 0162 8134      		cpi r24,lo8(65)
 297 0164 01F0      		breq .+2
 298 0166 00C0      		rjmp .L29
 299               	.L14:
 300               		.loc 2 154 0 discriminator 3
 301 0168 8B81      		ldd r24,Y+3
 302 016a 9C81      		ldd r25,Y+4
 303 016c FC01      		movw r30,r24
 304 016e 8281      		ldd r24,Z+2
 305 0170 8031      		cpi r24,lo8(16)
 306 0172 00F4      		brsh .L8
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 307               		.loc 2 156 0 is_stmt 1
 308 0174 00C0      		rjmp .L29
 309               	.L13:
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x80 == ind->data[1])
 310               		.loc 2 159 0
 311 0176 8B81      		ldd r24,Y+3
 312 0178 9C81      		ldd r25,Y+4
 313 017a FC01      		movw r30,r24
 314 017c 8081      		ld r24,Z
 315 017e 9181      		ldd r25,Z+1
 316 0180 0196      		adiw r24,1
 317 0182 FC01      		movw r30,r24
 318 0184 8081      		ld r24,Z
 319 0186 8038      		cpi r24,lo8(-128)
 320 0188 01F0      		breq .+2
 321 018a 00C0      		rjmp .L30
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x00 != ind->data[0]) || ind->size < (sizeof(NwkFrameBeaconHeader_t)))
 322               		.loc 2 161 0
 323 018c 8B81      		ldd r24,Y+3
 324 018e 9C81      		ldd r25,Y+4
 325 0190 FC01      		movw r30,r24
 326 0192 8081      		ld r24,Z
 327 0194 9181      		ldd r25,Z+1
 328 0196 FC01      		movw r30,r24
 329 0198 8081      		ld r24,Z
 330 019a 8823      		tst r24
 331 019c 01F0      		breq .+2
 332 019e 00C0      		rjmp .L31
 333               		.loc 2 161 0 is_stmt 0 discriminator 1
 334 01a0 8B81      		ldd r24,Y+3
 335 01a2 9C81      		ldd r25,Y+4
 336 01a4 FC01      		movw r30,r24
 337 01a6 8281      		ldd r24,Z+2
 338 01a8 8B30      		cpi r24,lo8(11)
 339 01aa 00F4      		brsh .+2
 340 01ac 00C0      		rjmp .L31
 341               	.L8:
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(ind->data[1] == 0x88 || ind->data[1] == 0x80)
 342               		.loc 2 171 0 is_stmt 1
 343 01ae 8B81      		ldd r24,Y+3
 344 01b0 9C81      		ldd r25,Y+4
 345 01b2 FC01      		movw r30,r24
 346 01b4 8081      		ld r24,Z
 347 01b6 9181      		ldd r25,Z+1
 348 01b8 0196      		adiw r24,1
 349 01ba FC01      		movw r30,r24
 350 01bc 8081      		ld r24,Z
 351 01be 8838      		cpi r24,lo8(-120)
 352 01c0 01F0      		breq .L18
 353               		.loc 2 171 0 is_stmt 0 discriminator 1
 354 01c2 8B81      		ldd r24,Y+3
 355 01c4 9C81      		ldd r25,Y+4
 356 01c6 FC01      		movw r30,r24
 357 01c8 8081      		ld r24,Z
 358 01ca 9181      		ldd r25,Z+1
 359 01cc 0196      		adiw r24,1
 360 01ce FC01      		movw r30,r24
 361 01d0 8081      		ld r24,Z
 362 01d2 8038      		cpi r24,lo8(-128)
 363 01d4 01F4      		brne .L19
 364               	.L18:
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc())) {
 365               		.loc 2 173 0 is_stmt 1
 366 01d6 0E94 0000 		call nwkFrameAlloc
 367 01da 9A83      		std Y+2,r25
 368 01dc 8983      		std Y+1,r24
 369 01de 8981      		ldd r24,Y+1
 370 01e0 9A81      		ldd r25,Y+2
 371 01e2 892B      		or r24,r25
 372 01e4 01F4      		brne .+2
 373 01e6 00C0      		rjmp .L32
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame received is NwkFrameHeader change state to Receveid
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is a 802.15.4 beacon change state to Beacon
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = ((0x88 == ind->data[1]) ? NWK_RX_STATE_RECEIVED : NWK_RX_STATE_BEACON);
 374               		.loc 2 178 0
 375 01e8 8B81      		ldd r24,Y+3
 376 01ea 9C81      		ldd r25,Y+4
 377 01ec FC01      		movw r30,r24
 378 01ee 8081      		ld r24,Z
 379 01f0 9181      		ldd r25,Z+1
 380 01f2 0196      		adiw r24,1
 381 01f4 FC01      		movw r30,r24
 382 01f6 8081      		ld r24,Z
 383 01f8 8838      		cpi r24,lo8(-120)
 384 01fa 01F4      		brne .L21
 385               		.loc 2 178 0 is_stmt 0 discriminator 1
 386 01fc 20E2      		ldi r18,lo8(32)
 387 01fe 00C0      		rjmp .L22
 388               	.L21:
 389               		.loc 2 178 0 discriminator 2
 390 0200 25E2      		ldi r18,lo8(37)
 391               	.L22:
 392               		.loc 2 178 0 discriminator 4
 393 0202 8981      		ldd r24,Y+1
 394 0204 9A81      		ldd r25,Y+2
 395 0206 FC01      		movw r30,r24
 396 0208 2083      		st Z,r18
 397 020a 00C0      		rjmp .L23
 398               	.L19:
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// allocate frame buffer according to received frame
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(ind->data[0] == 0x0c)
 399               		.loc 2 181 0 is_stmt 1
 400 020c 8B81      		ldd r24,Y+3
 401 020e 9C81      		ldd r25,Y+4
 402 0210 FC01      		movw r30,r24
 403 0212 8081      		ld r24,Z
 404 0214 9181      		ldd r25,Z+1
 405 0216 FC01      		movw r30,r24
 406 0218 8081      		ld r24,Z
 407 021a 8C30      		cpi r24,lo8(12)
 408 021c 01F4      		brne .L24
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-Beacon frame
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(true))){
 409               		.loc 2 184 0
 410 021e 81E0      		ldi r24,lo8(1)
 411 0220 0E94 0000 		call nwkFrameAlloc_LLDN
 412 0224 9A83      		std Y+2,r25
 413 0226 8983      		std Y+1,r24
 414 0228 8981      		ldd r24,Y+1
 415 022a 9A81      		ldd r25,Y+2
 416 022c 892B      		or r24,r25
 417 022e 01F4      		brne .+2
 418 0230 00C0      		rjmp .L33
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-Beacon change state to LLBEACON
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLBEACON;
 419               		.loc 2 188 0
 420 0232 8981      		ldd r24,Y+1
 421 0234 9A81      		ldd r25,Y+2
 422 0236 26E2      		ldi r18,lo8(38)
 423 0238 FC01      		movw r30,r24
 424 023a 2083      		st Z,r18
 425 023c 00C0      		rjmp .L23
 426               	.L24:
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-MAC command or LL-Data frame
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(false))){
 427               		.loc 2 193 0
 428 023e 80E0      		ldi r24,0
 429 0240 0E94 0000 		call nwkFrameAlloc_LLDN
 430 0244 9A83      		std Y+2,r25
 431 0246 8983      		std Y+1,r24
 432 0248 8981      		ldd r24,Y+1
 433 024a 9A81      		ldd r25,Y+2
 434 024c 892B      		or r24,r25
 435 024e 01F4      		brne .+2
 436 0250 00C0      		rjmp .L34
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-AckFrame change state to LLACKFRAME
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-MACComand change state to LLCOMMAND
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->data[0] == 0x8c) 
 437               		.loc 2 198 0
 438 0252 8B81      		ldd r24,Y+3
 439 0254 9C81      		ldd r25,Y+4
 440 0256 FC01      		movw r30,r24
 441 0258 8081      		ld r24,Z
 442 025a 9181      		ldd r25,Z+1
 443 025c FC01      		movw r30,r24
 444 025e 8081      		ld r24,Z
 445 0260 8C38      		cpi r24,lo8(-116)
 446 0262 01F4      		brne .L27
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLACKFRAME;
 447               		.loc 2 199 0
 448 0264 8981      		ldd r24,Y+1
 449 0266 9A81      		ldd r25,Y+2
 450 0268 28E2      		ldi r18,lo8(40)
 451 026a FC01      		movw r30,r24
 452 026c 2083      		st Z,r18
 453 026e 00C0      		rjmp .L23
 454               	.L27:
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if(ind->data[0] == 0xcc)
 455               		.loc 2 200 0
 456 0270 8B81      		ldd r24,Y+3
 457 0272 9C81      		ldd r25,Y+4
 458 0274 FC01      		movw r30,r24
 459 0276 8081      		ld r24,Z
 460 0278 9181      		ldd r25,Z+1
 461 027a FC01      		movw r30,r24
 462 027c 8081      		ld r24,Z
 463 027e 8C3C      		cpi r24,lo8(-52)
 464 0280 01F4      		brne .L28
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLCOMMAND;
 465               		.loc 2 201 0
 466 0282 8981      		ldd r24,Y+1
 467 0284 9A81      		ldd r25,Y+2
 468 0286 27E2      		ldi r18,lo8(39)
 469 0288 FC01      		movw r30,r24
 470 028a 2083      		st Z,r18
 471 028c 00C0      		rjmp .L23
 472               	.L28:
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLDATA;	
 473               		.loc 2 203 0
 474 028e 8981      		ldd r24,Y+1
 475 0290 9A81      		ldd r25,Y+2
 476 0292 29E2      		ldi r18,lo8(41)
 477 0294 FC01      		movw r30,r24
 478 0296 2083      		st Z,r18
 479               	.L23:
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size = ind->size;
 480               		.loc 2 206 0
 481 0298 8B81      		ldd r24,Y+3
 482 029a 9C81      		ldd r25,Y+4
 483 029c FC01      		movw r30,r24
 484 029e 2281      		ldd r18,Z+2
 485 02a0 8981      		ldd r24,Y+1
 486 02a2 9A81      		ldd r25,Y+2
 487 02a4 FC01      		movw r30,r24
 488 02a6 2183      		std Z+1,r18
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\nframe->size = %hhx", frame->size);
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.lqi = ind->lqi;
 489               		.loc 2 208 0
 490 02a8 8B81      		ldd r24,Y+3
 491 02aa 9C81      		ldd r25,Y+4
 492 02ac FC01      		movw r30,r24
 493 02ae 2381      		ldd r18,Z+3
 494 02b0 8981      		ldd r24,Y+1
 495 02b2 9A81      		ldd r25,Y+2
 496 02b4 8D57      		subi r24,125
 497 02b6 9F4F      		sbci r25,-1
 498 02b8 FC01      		movw r30,r24
 499 02ba 2083      		st Z,r18
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.rssi = ind->rssi;
 500               		.loc 2 209 0
 501 02bc 8B81      		ldd r24,Y+3
 502 02be 9C81      		ldd r25,Y+4
 503 02c0 FC01      		movw r30,r24
 504 02c2 2481      		ldd r18,Z+4
 505 02c4 8981      		ldd r24,Y+1
 506 02c6 9A81      		ldd r25,Y+2
 507 02c8 8C57      		subi r24,124
 508 02ca 9F4F      		sbci r25,-1
 509 02cc FC01      		movw r30,r24
 510 02ce 2083      		st Z,r18
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	memcpy(frame->data, ind->data, ind->size);
 511               		.loc 2 210 0
 512 02d0 8B81      		ldd r24,Y+3
 513 02d2 9C81      		ldd r25,Y+4
 514 02d4 FC01      		movw r30,r24
 515 02d6 8281      		ldd r24,Z+2
 516 02d8 482F      		mov r20,r24
 517 02da 50E0      		ldi r21,0
 518 02dc 8B81      		ldd r24,Y+3
 519 02de 9C81      		ldd r25,Y+4
 520 02e0 FC01      		movw r30,r24
 521 02e2 2081      		ld r18,Z
 522 02e4 3181      		ldd r19,Z+1
 523 02e6 8981      		ldd r24,Y+1
 524 02e8 9A81      		ldd r25,Y+2
 525 02ea 0296      		adiw r24,2
 526 02ec B901      		movw r22,r18
 527 02ee 0E94 0000 		call memcpy
 528 02f2 00C0      		rjmp .L6
 529               	.L29:
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 530               		.loc 2 156 0
 531 02f4 0000      		nop
 532 02f6 00C0      		rjmp .L6
 533               	.L30:
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 534               		.loc 2 168 0
 535 02f8 0000      		nop
 536 02fa 00C0      		rjmp .L6
 537               	.L31:
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 538               		.loc 2 163 0
 539 02fc 0000      		nop
 540 02fe 00C0      		rjmp .L6
 541               	.L32:
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 542               		.loc 2 174 0
 543 0300 0000      		nop
 544 0302 00C0      		rjmp .L6
 545               	.L33:
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 546               		.loc 2 185 0
 547 0304 0000      		nop
 548 0306 00C0      		rjmp .L6
 549               	.L34:
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 550               		.loc 2 194 0
 551 0308 0000      		nop
 552               	.L6:
 553               	/* epilogue start */
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\nframe->payload[2] = %hhx", frame->payload[2]);
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 554               		.loc 2 213 0
 555 030a 0F90      		pop __tmp_reg__
 556 030c 0F90      		pop __tmp_reg__
 557 030e 0F90      		pop __tmp_reg__
 558 0310 0F90      		pop __tmp_reg__
 559 0312 DF91      		pop r29
 560 0314 CF91      		pop r28
 561 0316 0895      		ret
 562               		.cfi_endproc
 563               	.LFE67:
 566               	nwkRxSendAck:
 567               	.LFB68:
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxSendAck(NwkFrame_t *frame)
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 568               		.loc 2 218 0
 569               		.cfi_startproc
 570 0318 CF93      		push r28
 571               	.LCFI12:
 572               		.cfi_def_cfa_offset 3
 573               		.cfi_offset 28, -2
 574 031a DF93      		push r29
 575               	.LCFI13:
 576               		.cfi_def_cfa_offset 4
 577               		.cfi_offset 29, -3
 578 031c 00D0      		rcall .
 579 031e 00D0      		rcall .
 580 0320 00D0      		rcall .
 581               	.LCFI14:
 582               		.cfi_def_cfa_offset 10
 583 0322 CDB7      		in r28,__SP_L__
 584 0324 DEB7      		in r29,__SP_H__
 585               	.LCFI15:
 586               		.cfi_def_cfa_register 28
 587               	/* prologue: function */
 588               	/* frame size = 6 */
 589               	/* stack size = 8 */
 590               	.L__stack_usage = 8
 591 0326 9E83      		std Y+6,r25
 592 0328 8D83      		std Y+5,r24
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *ack;
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkCommandAck_t *command;
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (ack = nwkFrameAlloc())) {
 593               		.loc 2 222 0
 594 032a 0E94 0000 		call nwkFrameAlloc
 595 032e 9A83      		std Y+2,r25
 596 0330 8983      		std Y+1,r24
 597 0332 8981      		ldd r24,Y+1
 598 0334 9A81      		ldd r25,Y+2
 599 0336 892B      		or r24,r25
 600 0338 01F4      		brne .+2
 601 033a 00C0      		rjmp .L38
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size += sizeof(NwkFrameHeader_t);
 602               		.loc 2 226 0
 603 033c 8D81      		ldd r24,Y+5
 604 033e 9E81      		ldd r25,Y+6
 605 0340 FC01      		movw r30,r24
 606 0342 8181      		ldd r24,Z+1
 607 0344 20E1      		ldi r18,lo8(16)
 608 0346 280F      		add r18,r24
 609 0348 8D81      		ldd r24,Y+5
 610 034a 9E81      		ldd r25,Y+6
 611 034c FC01      		movw r30,r24
 612 034e 2183      		std Z+1,r18
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->payload += sizeof(NwkFrameHeader_t);
 613               		.loc 2 227 0
 614 0350 8D81      		ldd r24,Y+5
 615 0352 9E81      		ldd r25,Y+6
 616 0354 8F57      		subi r24,127
 617 0356 9F4F      		sbci r25,-1
 618 0358 FC01      		movw r30,r24
 619 035a 8081      		ld r24,Z
 620 035c 9181      		ldd r25,Z+1
 621 035e 9C01      		movw r18,r24
 622 0360 205F      		subi r18,-16
 623 0362 3F4F      		sbci r19,-1
 624 0364 8D81      		ldd r24,Y+5
 625 0366 9E81      		ldd r25,Y+6
 626 0368 8F57      		subi r24,127
 627 036a 9F4F      		sbci r25,-1
 628 036c FC01      		movw r30,r24
 629 036e 3183      		std Z+1,r19
 630 0370 2083      		st Z,r18
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkFrameCommandInit(ack);
 631               		.loc 2 229 0
 632 0372 8981      		ldd r24,Y+1
 633 0374 9A81      		ldd r25,Y+2
 634 0376 0E94 0000 		call nwkFrameCommandInit
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->size += sizeof(NwkCommandAck_t);
 635               		.loc 2 231 0
 636 037a 8981      		ldd r24,Y+1
 637 037c 9A81      		ldd r25,Y+2
 638 037e FC01      		movw r30,r24
 639 0380 8181      		ldd r24,Z+1
 640 0382 23E0      		ldi r18,lo8(3)
 641 0384 280F      		add r18,r24
 642 0386 8981      		ldd r24,Y+1
 643 0388 9A81      		ldd r25,Y+2
 644 038a FC01      		movw r30,r24
 645 038c 2183      		std Z+1,r18
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->tx.confirm = NULL;
 646               		.loc 2 232 0
 647 038e 8981      		ldd r24,Y+1
 648 0390 9A81      		ldd r25,Y+2
 649 0392 8957      		subi r24,121
 650 0394 9F4F      		sbci r25,-1
 651 0396 FC01      		movw r30,r24
 652 0398 1182      		std Z+1,__zero_reg__
 653 039a 1082      		st Z,__zero_reg__
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkFcf.security = frame->header.nwkFcf.security;
 654               		.loc 2 234 0
 655 039c 8D81      		ldd r24,Y+5
 656 039e 9E81      		ldd r25,Y+6
 657 03a0 FC01      		movw r30,r24
 658 03a2 8385      		ldd r24,Z+11
 659 03a4 81FB      		bst r24,1
 660 03a6 2227      		clr r18
 661 03a8 20F9      		bld r18,0
 662 03aa 8981      		ldd r24,Y+1
 663 03ac 9A81      		ldd r25,Y+2
 664 03ae 2170      		andi r18,lo8(1)
 665 03b0 220F      		lsl r18
 666 03b2 FC01      		movw r30,r24
 667 03b4 3385      		ldd r19,Z+11
 668 03b6 3D7F      		andi r19,lo8(-3)
 669 03b8 232B      		or r18,r19
 670 03ba FC01      		movw r30,r24
 671 03bc 2387      		std Z+11,r18
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 672               		.loc 2 235 0
 673 03be 8D81      		ldd r24,Y+5
 674 03c0 9E81      		ldd r25,Y+6
 675 03c2 FC01      		movw r30,r24
 676 03c4 2585      		ldd r18,Z+13
 677 03c6 3685      		ldd r19,Z+14
 678 03c8 8981      		ldd r24,Y+1
 679 03ca 9A81      		ldd r25,Y+2
 680 03cc FC01      		movw r30,r24
 681 03ce 308B      		std Z+16,r19
 682 03d0 2787      		std Z+15,r18
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command = (NwkCommandAck_t *)ack->payload;
 683               		.loc 2 237 0
 684 03d2 8981      		ldd r24,Y+1
 685 03d4 9A81      		ldd r25,Y+2
 686 03d6 8F57      		subi r24,127
 687 03d8 9F4F      		sbci r25,-1
 688 03da FC01      		movw r30,r24
 689 03dc 8081      		ld r24,Z
 690 03de 9181      		ldd r25,Z+1
 691 03e0 9C83      		std Y+4,r25
 692 03e2 8B83      		std Y+3,r24
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->id = NWK_COMMAND_ACK;
 693               		.loc 2 238 0
 694 03e4 8B81      		ldd r24,Y+3
 695 03e6 9C81      		ldd r25,Y+4
 696 03e8 FC01      		movw r30,r24
 697 03ea 1082      		st Z,__zero_reg__
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->control = nwkRxAckControl;
 698               		.loc 2 239 0
 699 03ec 2091 0000 		lds r18,nwkRxAckControl
 700 03f0 8B81      		ldd r24,Y+3
 701 03f2 9C81      		ldd r25,Y+4
 702 03f4 FC01      		movw r30,r24
 703 03f6 2283      		std Z+2,r18
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->seq = frame->header.nwkSeq;
 704               		.loc 2 240 0
 705 03f8 8D81      		ldd r24,Y+5
 706 03fa 9E81      		ldd r25,Y+6
 707 03fc FC01      		movw r30,r24
 708 03fe 2485      		ldd r18,Z+12
 709 0400 8B81      		ldd r24,Y+3
 710 0402 9C81      		ldd r25,Y+4
 711 0404 FC01      		movw r30,r24
 712 0406 2183      		std Z+1,r18
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkTxFrame(ack);
 713               		.loc 2 242 0
 714 0408 8981      		ldd r24,Y+1
 715 040a 9A81      		ldd r25,Y+2
 716 040c 0E94 0000 		call nwkTxFrame
 717 0410 00C0      		rjmp .L35
 718               	.L38:
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 719               		.loc 2 223 0
 720 0412 0000      		nop
 721               	.L35:
 722               	/* epilogue start */
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 723               		.loc 2 243 0
 724 0414 2696      		adiw r28,6
 725 0416 0FB6      		in __tmp_reg__,__SREG__
 726 0418 F894      		cli
 727 041a DEBF      		out __SP_H__,r29
 728 041c 0FBE      		out __SREG__,__tmp_reg__
 729 041e CDBF      		out __SP_L__,r28
 730 0420 DF91      		pop r29
 731 0422 CF91      		pop r28
 732 0424 0895      		ret
 733               		.cfi_endproc
 734               	.LFE68:
 736               	.global	NWK_SetAckControl
 738               	NWK_SetAckControl:
 739               	.LFB69:
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void NWK_SetAckControl(uint8_t control)
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 740               		.loc 2 248 0
 741               		.cfi_startproc
 742 0426 CF93      		push r28
 743               	.LCFI16:
 744               		.cfi_def_cfa_offset 3
 745               		.cfi_offset 28, -2
 746 0428 DF93      		push r29
 747               	.LCFI17:
 748               		.cfi_def_cfa_offset 4
 749               		.cfi_offset 29, -3
 750 042a 1F92      		push __zero_reg__
 751               	.LCFI18:
 752               		.cfi_def_cfa_offset 5
 753 042c CDB7      		in r28,__SP_L__
 754 042e DEB7      		in r29,__SP_H__
 755               	.LCFI19:
 756               		.cfi_def_cfa_register 28
 757               	/* prologue: function */
 758               	/* frame size = 1 */
 759               	/* stack size = 3 */
 760               	.L__stack_usage = 3
 761 0430 8983      		std Y+1,r24
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = control;
 762               		.loc 2 249 0
 763 0432 8981      		ldd r24,Y+1
 764 0434 8093 0000 		sts nwkRxAckControl,r24
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 765               		.loc 2 250 0
 766 0438 0000      		nop
 767               	/* epilogue start */
 768 043a 0F90      		pop __tmp_reg__
 769 043c DF91      		pop r29
 770 043e CF91      		pop r28
 771 0440 0895      		ret
 772               		.cfi_endproc
 773               	.LFE69:
 776               	nwkRxDuplicateRejectionTimerHandler:
 777               	.LFB70:
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxDecryptConf(NwkFrame_t *frame, bool status)
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (status) {
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_INDICATE;
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else {
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_FINISH;
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer)
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 778               		.loc 2 270 0
 779               		.cfi_startproc
 780 0442 CF93      		push r28
 781               	.LCFI20:
 782               		.cfi_def_cfa_offset 3
 783               		.cfi_offset 28, -2
 784 0444 DF93      		push r29
 785               	.LCFI21:
 786               		.cfi_def_cfa_offset 4
 787               		.cfi_offset 29, -3
 788 0446 00D0      		rcall .
 789 0448 00D0      		rcall .
 790               	.LCFI22:
 791               		.cfi_def_cfa_offset 8
 792 044a CDB7      		in r28,__SP_L__
 793 044c DEB7      		in r29,__SP_H__
 794               	.LCFI23:
 795               		.cfi_def_cfa_register 28
 796               	/* prologue: function */
 797               	/* frame size = 4 */
 798               	/* stack size = 6 */
 799               	.L__stack_usage = 6
 800 044e 9C83      		std Y+4,r25
 801 0450 8B83      		std Y+3,r24
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool restart = false;
 802               		.loc 2 271 0
 803 0452 1982      		std Y+1,__zero_reg__
 804               	.LBB3:
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 805               		.loc 2 273 0
 806 0454 1A82      		std Y+2,__zero_reg__
 807 0456 00C0      		rjmp .L41
 808               	.L43:
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 809               		.loc 2 274 0
 810 0458 8A81      		ldd r24,Y+2
 811 045a 282F      		mov r18,r24
 812 045c 30E0      		ldi r19,0
 813 045e C901      		movw r24,r18
 814 0460 880F      		lsl r24
 815 0462 991F      		rol r25
 816 0464 880F      		lsl r24
 817 0466 991F      		rol r25
 818 0468 820F      		add r24,r18
 819 046a 931F      		adc r25,r19
 820 046c 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 821 046e 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 822 0470 FC01      		movw r30,r24
 823 0472 8081      		ld r24,Z
 824 0474 8823      		tst r24
 825 0476 01F0      		breq .L42
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxDuplicateRejectionTable[i].ttl--;
 826               		.loc 2 275 0
 827 0478 8A81      		ldd r24,Y+2
 828 047a 282F      		mov r18,r24
 829 047c 30E0      		ldi r19,0
 830 047e C901      		movw r24,r18
 831 0480 880F      		lsl r24
 832 0482 991F      		rol r25
 833 0484 880F      		lsl r24
 834 0486 991F      		rol r25
 835 0488 820F      		add r24,r18
 836 048a 931F      		adc r25,r19
 837 048c 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 838 048e 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 839 0490 FC01      		movw r30,r24
 840 0492 8081      		ld r24,Z
 841 0494 4FEF      		ldi r20,lo8(-1)
 842 0496 480F      		add r20,r24
 843 0498 C901      		movw r24,r18
 844 049a 880F      		lsl r24
 845 049c 991F      		rol r25
 846 049e 880F      		lsl r24
 847 04a0 991F      		rol r25
 848 04a2 820F      		add r24,r18
 849 04a4 931F      		adc r25,r19
 850 04a6 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 851 04a8 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 852 04aa FC01      		movw r30,r24
 853 04ac 4083      		st Z,r20
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			restart = true;
 854               		.loc 2 276 0
 855 04ae 81E0      		ldi r24,lo8(1)
 856 04b0 8983      		std Y+1,r24
 857               	.L42:
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 858               		.loc 2 273 0 discriminator 2
 859 04b2 8A81      		ldd r24,Y+2
 860 04b4 8F5F      		subi r24,lo8(-(1))
 861 04b6 8A83      		std Y+2,r24
 862               	.L41:
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 863               		.loc 2 273 0 is_stmt 0 discriminator 1
 864 04b8 8A81      		ldd r24,Y+2
 865 04ba 8233      		cpi r24,lo8(50)
 866 04bc 00F0      		brlo .L43
 867               	.LBE3:
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (restart) {
 868               		.loc 2 280 0 is_stmt 1
 869 04be 8981      		ldd r24,Y+1
 870 04c0 8823      		tst r24
 871 04c2 01F0      		breq .L45
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		SYS_TimerStart(timer);
 872               		.loc 2 281 0
 873 04c4 8B81      		ldd r24,Y+3
 874 04c6 9C81      		ldd r25,Y+4
 875 04c8 0E94 0000 		call SYS_TimerStart
 876               	.L45:
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 877               		.loc 2 283 0
 878 04cc 0000      		nop
 879               	/* epilogue start */
 880 04ce 0F90      		pop __tmp_reg__
 881 04d0 0F90      		pop __tmp_reg__
 882 04d2 0F90      		pop __tmp_reg__
 883 04d4 0F90      		pop __tmp_reg__
 884 04d6 DF91      		pop r29
 885 04d8 CF91      		pop r28
 886 04da 0895      		ret
 887               		.cfi_endproc
 888               	.LFE70:
 891               	nwkRxRejectDuplicate:
 892               	.LFB71:
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxRejectDuplicate(NwkFrameHeader_t *header)
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 893               		.loc 2 288 0
 894               		.cfi_startproc
 895 04dc CF93      		push r28
 896               	.LCFI24:
 897               		.cfi_def_cfa_offset 3
 898               		.cfi_offset 28, -2
 899 04de DF93      		push r29
 900               	.LCFI25:
 901               		.cfi_def_cfa_offset 4
 902               		.cfi_offset 29, -3
 903 04e0 CDB7      		in r28,__SP_L__
 904 04e2 DEB7      		in r29,__SP_H__
 905               	.LCFI26:
 906               		.cfi_def_cfa_register 28
 907 04e4 2997      		sbiw r28,9
 908               	.LCFI27:
 909               		.cfi_def_cfa_offset 13
 910 04e6 0FB6      		in __tmp_reg__,__SREG__
 911 04e8 F894      		cli
 912 04ea DEBF      		out __SP_H__,r29
 913 04ec 0FBE      		out __SREG__,__tmp_reg__
 914 04ee CDBF      		out __SP_L__,r28
 915               	/* prologue: function */
 916               	/* frame size = 9 */
 917               	/* stack size = 11 */
 918               	.L__stack_usage = 11
 919 04f0 9987      		std Y+9,r25
 920 04f2 8887      		std Y+8,r24
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *entry;
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *freeEntry = NULL;
 921               		.loc 2 290 0
 922 04f4 1A82      		std Y+2,__zero_reg__
 923 04f6 1982      		std Y+1,__zero_reg__
 924               	.LBB4:
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 925               		.loc 2 292 0
 926 04f8 1B82      		std Y+3,__zero_reg__
 927 04fa 00C0      		rjmp .L47
 928               	.L53:
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 929               		.loc 2 293 0
 930 04fc 8B81      		ldd r24,Y+3
 931 04fe 282F      		mov r18,r24
 932 0500 30E0      		ldi r19,0
 933 0502 C901      		movw r24,r18
 934 0504 880F      		lsl r24
 935 0506 991F      		rol r25
 936 0508 880F      		lsl r24
 937 050a 991F      		rol r25
 938 050c 820F      		add r24,r18
 939 050e 931F      		adc r25,r19
 940 0510 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable))
 941 0512 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable))
 942 0514 9D83      		std Y+5,r25
 943 0516 8C83      		std Y+4,r24
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (entry->ttl && header->nwkSrcAddr == entry->src) {
 944               		.loc 2 295 0
 945 0518 8C81      		ldd r24,Y+4
 946 051a 9D81      		ldd r25,Y+5
 947 051c FC01      		movw r30,r24
 948 051e 8481      		ldd r24,Z+4
 949 0520 8823      		tst r24
 950 0522 01F4      		brne .+2
 951 0524 00C0      		rjmp .L48
 952               		.loc 2 295 0 is_stmt 0 discriminator 1
 953 0526 8885      		ldd r24,Y+8
 954 0528 9985      		ldd r25,Y+9
 955 052a FC01      		movw r30,r24
 956 052c 2385      		ldd r18,Z+11
 957 052e 3485      		ldd r19,Z+12
 958 0530 8C81      		ldd r24,Y+4
 959 0532 9D81      		ldd r25,Y+5
 960 0534 FC01      		movw r30,r24
 961 0536 8081      		ld r24,Z
 962 0538 9181      		ldd r25,Z+1
 963 053a 2817      		cp r18,r24
 964 053c 3907      		cpc r19,r25
 965 053e 01F0      		breq .+2
 966 0540 00C0      		rjmp .L48
 967               	.LBB5:
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			uint8_t diff = (int8_t)entry->seq - header->nwkSeq;
 968               		.loc 2 296 0 is_stmt 1
 969 0542 8C81      		ldd r24,Y+4
 970 0544 9D81      		ldd r25,Y+5
 971 0546 FC01      		movw r30,r24
 972 0548 2281      		ldd r18,Z+2
 973 054a 8885      		ldd r24,Y+8
 974 054c 9985      		ldd r25,Y+9
 975 054e FC01      		movw r30,r24
 976 0550 8285      		ldd r24,Z+10
 977 0552 F22F      		mov r31,r18
 978 0554 F81B      		sub r31,r24
 979 0556 8F2F      		mov r24,r31
 980 0558 8E83      		std Y+6,r24
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (diff < 8) {
 981               		.loc 2 298 0
 982 055a 8E81      		ldd r24,Y+6
 983 055c 8830      		cpi r24,lo8(8)
 984 055e 00F4      		brsh .L49
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				if (entry->mask & (1 << diff)) {
 985               		.loc 2 299 0
 986 0560 8C81      		ldd r24,Y+4
 987 0562 9D81      		ldd r25,Y+5
 988 0564 FC01      		movw r30,r24
 989 0566 8381      		ldd r24,Z+3
 990 0568 882F      		mov r24,r24
 991 056a 90E0      		ldi r25,0
 992 056c 2E81      		ldd r18,Y+6
 993 056e 222F      		mov r18,r18
 994 0570 30E0      		ldi r19,0
 995 0572 00C0      		rjmp 2f
 996               		1:
 997 0574 9595      		asr r25
 998 0576 8795      		ror r24
 999               		2:
 1000 0578 2A95      		dec r18
 1001 057a 02F4      		brpl 1b
 1002 057c 8170      		andi r24,1
 1003 057e 9927      		clr r25
 1004 0580 892B      		or r24,r25
 1005 0582 01F0      		breq .L50
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#ifdef NWK_ENABLE_ROUTING
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					if (nwkIb.addr == header->macDstAddr) {
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 						nwkRouteRemove(
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkDstAddr,
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkFcf.multicast);
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					}
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#endif
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					return true;
 1006               		.loc 2 308 0
 1007 0584 81E0      		ldi r24,lo8(1)
 1008 0586 00C0      		rjmp .L51
 1009               	.L50:
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				}
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask |= (1 << diff);
 1010               		.loc 2 311 0
 1011 0588 8C81      		ldd r24,Y+4
 1012 058a 9D81      		ldd r25,Y+5
 1013 058c FC01      		movw r30,r24
 1014 058e 8381      		ldd r24,Z+3
 1015 0590 482F      		mov r20,r24
 1016 0592 8E81      		ldd r24,Y+6
 1017 0594 282F      		mov r18,r24
 1018 0596 30E0      		ldi r19,0
 1019 0598 81E0      		ldi r24,lo8(1)
 1020 059a 90E0      		ldi r25,0
 1021 059c 00C0      		rjmp 2f
 1022               		1:
 1023 059e 880F      		lsl r24
 1024 05a0 991F      		rol r25
 1025               		2:
 1026 05a2 2A95      		dec r18
 1027 05a4 02F4      		brpl 1b
 1028 05a6 842B      		or r24,r20
 1029 05a8 282F      		mov r18,r24
 1030 05aa 8C81      		ldd r24,Y+4
 1031 05ac 9D81      		ldd r25,Y+5
 1032 05ae FC01      		movw r30,r24
 1033 05b0 2383      		std Z+3,r18
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1034               		.loc 2 312 0
 1035 05b2 80E0      		ldi r24,0
 1036 05b4 00C0      		rjmp .L51
 1037               	.L49:
 1038               	.LBB6:
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				uint8_t shift = -(int8_t)diff;
 1039               		.loc 2 314 0
 1040 05b6 8E81      		ldd r24,Y+6
 1041 05b8 8195      		neg r24
 1042 05ba 8F83      		std Y+7,r24
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->seq = header->nwkSeq;
 1043               		.loc 2 316 0
 1044 05bc 8885      		ldd r24,Y+8
 1045 05be 9985      		ldd r25,Y+9
 1046 05c0 FC01      		movw r30,r24
 1047 05c2 2285      		ldd r18,Z+10
 1048 05c4 8C81      		ldd r24,Y+4
 1049 05c6 9D81      		ldd r25,Y+5
 1050 05c8 FC01      		movw r30,r24
 1051 05ca 2283      		std Z+2,r18
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask = (entry->mask << shift) | 1;
 1052               		.loc 2 317 0
 1053 05cc 8C81      		ldd r24,Y+4
 1054 05ce 9D81      		ldd r25,Y+5
 1055 05d0 FC01      		movw r30,r24
 1056 05d2 8381      		ldd r24,Z+3
 1057 05d4 882F      		mov r24,r24
 1058 05d6 90E0      		ldi r25,0
 1059 05d8 2F81      		ldd r18,Y+7
 1060 05da 222F      		mov r18,r18
 1061 05dc 30E0      		ldi r19,0
 1062 05de 00C0      		rjmp 2f
 1063               		1:
 1064 05e0 880F      		lsl r24
 1065 05e2 991F      		rol r25
 1066               		2:
 1067 05e4 2A95      		dec r18
 1068 05e6 02F4      		brpl 1b
 1069 05e8 8160      		ori r24,lo8(1)
 1070 05ea 282F      		mov r18,r24
 1071 05ec 8C81      		ldd r24,Y+4
 1072 05ee 9D81      		ldd r25,Y+5
 1073 05f0 FC01      		movw r30,r24
 1074 05f2 2383      		std Z+3,r18
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->ttl = DUPLICATE_REJECTION_TTL;
 1075               		.loc 2 318 0
 1076 05f4 8C81      		ldd r24,Y+4
 1077 05f6 9D81      		ldd r25,Y+5
 1078 05f8 25E1      		ldi r18,lo8(21)
 1079 05fa FC01      		movw r30,r24
 1080 05fc 2483      		std Z+4,r18
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1081               		.loc 2 319 0
 1082 05fe 80E0      		ldi r24,0
 1083 0600 00C0      		rjmp .L51
 1084               	.L48:
 1085               	.LBE6:
 1086               	.LBE5:
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (0 == entry->ttl) {
 1087               		.loc 2 323 0
 1088 0602 8C81      		ldd r24,Y+4
 1089 0604 9D81      		ldd r25,Y+5
 1090 0606 FC01      		movw r30,r24
 1091 0608 8481      		ldd r24,Z+4
 1092 060a 8823      		tst r24
 1093 060c 01F4      		brne .L52
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			freeEntry = entry;
 1094               		.loc 2 324 0
 1095 060e 8C81      		ldd r24,Y+4
 1096 0610 9D81      		ldd r25,Y+5
 1097 0612 9A83      		std Y+2,r25
 1098 0614 8983      		std Y+1,r24
 1099               	.L52:
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1100               		.loc 2 292 0 discriminator 2
 1101 0616 8B81      		ldd r24,Y+3
 1102 0618 8F5F      		subi r24,lo8(-(1))
 1103 061a 8B83      		std Y+3,r24
 1104               	.L47:
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1105               		.loc 2 292 0 is_stmt 0 discriminator 1
 1106 061c 8B81      		ldd r24,Y+3
 1107 061e 8233      		cpi r24,lo8(50)
 1108 0620 00F4      		brsh .+2
 1109 0622 00C0      		rjmp .L53
 1110               	.LBE4:
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == freeEntry) {
 1111               		.loc 2 328 0 is_stmt 1
 1112 0624 8981      		ldd r24,Y+1
 1113 0626 9A81      		ldd r25,Y+2
 1114 0628 892B      		or r24,r25
 1115 062a 01F4      		brne .L54
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return true;
 1116               		.loc 2 329 0
 1117 062c 81E0      		ldi r24,lo8(1)
 1118 062e 00C0      		rjmp .L51
 1119               	.L54:
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->src = header->nwkSrcAddr;
 1120               		.loc 2 332 0
 1121 0630 8885      		ldd r24,Y+8
 1122 0632 9985      		ldd r25,Y+9
 1123 0634 FC01      		movw r30,r24
 1124 0636 2385      		ldd r18,Z+11
 1125 0638 3485      		ldd r19,Z+12
 1126 063a 8981      		ldd r24,Y+1
 1127 063c 9A81      		ldd r25,Y+2
 1128 063e FC01      		movw r30,r24
 1129 0640 3183      		std Z+1,r19
 1130 0642 2083      		st Z,r18
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->seq = header->nwkSeq;
 1131               		.loc 2 333 0
 1132 0644 8885      		ldd r24,Y+8
 1133 0646 9985      		ldd r25,Y+9
 1134 0648 FC01      		movw r30,r24
 1135 064a 2285      		ldd r18,Z+10
 1136 064c 8981      		ldd r24,Y+1
 1137 064e 9A81      		ldd r25,Y+2
 1138 0650 FC01      		movw r30,r24
 1139 0652 2283      		std Z+2,r18
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->mask = 1;
 1140               		.loc 2 334 0
 1141 0654 8981      		ldd r24,Y+1
 1142 0656 9A81      		ldd r25,Y+2
 1143 0658 21E0      		ldi r18,lo8(1)
 1144 065a FC01      		movw r30,r24
 1145 065c 2383      		std Z+3,r18
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->ttl = DUPLICATE_REJECTION_TTL;
 1146               		.loc 2 335 0
 1147 065e 8981      		ldd r24,Y+1
 1148 0660 9A81      		ldd r25,Y+2
 1149 0662 25E1      		ldi r18,lo8(21)
 1150 0664 FC01      		movw r30,r24
 1151 0666 2483      		std Z+4,r18
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 1152               		.loc 2 337 0
 1153 0668 80E0      		ldi r24,lo8(nwkRxDuplicateRejectionTimer)
 1154 066a 90E0      		ldi r25,hi8(nwkRxDuplicateRejectionTimer)
 1155 066c 0E94 0000 		call SYS_TimerStart
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1156               		.loc 2 339 0
 1157 0670 80E0      		ldi r24,0
 1158               	.L51:
 1159               	/* epilogue start */
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1160               		.loc 2 340 0
 1161 0672 2996      		adiw r28,9
 1162 0674 0FB6      		in __tmp_reg__,__SREG__
 1163 0676 F894      		cli
 1164 0678 DEBF      		out __SP_H__,r29
 1165 067a 0FBE      		out __SREG__,__tmp_reg__
 1166 067c CDBF      		out __SP_L__,r28
 1167 067e DF91      		pop r29
 1168 0680 CF91      		pop r28
 1169 0682 0895      		ret
 1170               		.cfi_endproc
 1171               	.LFE71:
 1174               	nwkRxSeriveDataInd:
 1175               	.LFB72:
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind)
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1176               		.loc 2 345 0
 1177               		.cfi_startproc
 1178 0684 CF93      		push r28
 1179               	.LCFI28:
 1180               		.cfi_def_cfa_offset 3
 1181               		.cfi_offset 28, -2
 1182 0686 DF93      		push r29
 1183               	.LCFI29:
 1184               		.cfi_def_cfa_offset 4
 1185               		.cfi_offset 29, -3
 1186 0688 00D0      		rcall .
 1187               	.LCFI30:
 1188               		.cfi_def_cfa_offset 6
 1189 068a CDB7      		in r28,__SP_L__
 1190 068c DEB7      		in r29,__SP_H__
 1191               	.LCFI31:
 1192               		.cfi_def_cfa_register 28
 1193               	/* prologue: function */
 1194               	/* frame size = 2 */
 1195               	/* stack size = 4 */
 1196               	.L__stack_usage = 4
 1197 068e 9A83      		std Y+2,r25
 1198 0690 8983      		std Y+1,r24
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == (ind->options & NWK_IND_OPT_SECURED)) {
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ind->size < 1) {
 1199               		.loc 2 353 0
 1200 0692 8981      		ldd r24,Y+1
 1201 0694 9A81      		ldd r25,Y+2
 1202 0696 FC01      		movw r30,r24
 1203 0698 8285      		ldd r24,Z+10
 1204 069a 8823      		tst r24
 1205 069c 01F4      		brne .L56
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1206               		.loc 2 354 0
 1207 069e 80E0      		ldi r24,0
 1208 06a0 00C0      		rjmp .L57
 1209               	.L56:
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	switch (ind->data[0]) {
 1210               		.loc 2 357 0
 1211 06a2 8981      		ldd r24,Y+1
 1212 06a4 9A81      		ldd r25,Y+2
 1213 06a6 FC01      		movw r30,r24
 1214 06a8 8085      		ldd r24,Z+8
 1215 06aa 9185      		ldd r25,Z+9
 1216 06ac FC01      		movw r30,r24
 1217 06ae 8081      		ld r24,Z
 1218 06b0 882F      		mov r24,r24
 1219 06b2 90E0      		ldi r25,0
 1220 06b4 892B      		or r24,r25
 1221 06b6 01F4      		brne .L60
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ACK:
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkTxAckReceived(ind);
 1222               		.loc 2 359 0
 1223 06b8 8981      		ldd r24,Y+1
 1224 06ba 9A81      		ldd r25,Y+2
 1225 06bc 0E94 0000 		call nwkTxAckReceived
 1226 06c0 00C0      		rjmp .L57
 1227               	.L60:
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_ERROR:
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteErrorReceived(ind);
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTE_DISCOVERY
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REQUEST:
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryRequestReceived(ind);
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REPLY:
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryReplyReceived(ind);
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	default:
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1228               		.loc 2 377 0
 1229 06c2 80E0      		ldi r24,0
 1230               	.L57:
 1231               	/* epilogue start */
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1232               		.loc 2 379 0
 1233 06c4 0F90      		pop __tmp_reg__
 1234 06c6 0F90      		pop __tmp_reg__
 1235 06c8 DF91      		pop r29
 1236 06ca CF91      		pop r28
 1237 06cc 0895      		ret
 1238               		.cfi_endproc
 1239               	.LFE72:
 1242               	nwkRxHandleReceivedFrame:
 1243               	.LFB73:
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleReceivedFrame(NwkFrame_t *frame)
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1244               		.loc 2 384 0
 1245               		.cfi_startproc
 1246 06ce CF93      		push r28
 1247               	.LCFI32:
 1248               		.cfi_def_cfa_offset 3
 1249               		.cfi_offset 28, -2
 1250 06d0 DF93      		push r29
 1251               	.LCFI33:
 1252               		.cfi_def_cfa_offset 4
 1253               		.cfi_offset 29, -3
 1254 06d2 CDB7      		in r28,__SP_L__
 1255 06d4 DEB7      		in r29,__SP_H__
 1256               	.LCFI34:
 1257               		.cfi_def_cfa_register 28
 1258 06d6 2897      		sbiw r28,8
 1259               	.LCFI35:
 1260               		.cfi_def_cfa_offset 12
 1261 06d8 0FB6      		in __tmp_reg__,__SREG__
 1262 06da F894      		cli
 1263 06dc DEBF      		out __SP_H__,r29
 1264 06de 0FBE      		out __SREG__,__tmp_reg__
 1265 06e0 CDBF      		out __SP_L__,r28
 1266               	/* prologue: function */
 1267               	/* frame size = 8 */
 1268               	/* stack size = 10 */
 1269               	.L__stack_usage = 10
 1270 06e2 9887      		std Y+8,r25
 1271 06e4 8F83      		std Y+7,r24
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1272               		.loc 2 385 0
 1273 06e6 8F81      		ldd r24,Y+7
 1274 06e8 9885      		ldd r25,Y+8
 1275 06ea 0296      		adiw r24,2
 1276 06ec 9B83      		std Y+3,r25
 1277 06ee 8A83      		std Y+2,r24
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1278               		.loc 2 387 0
 1279 06f0 8F81      		ldd r24,Y+7
 1280 06f2 9885      		ldd r25,Y+8
 1281 06f4 24E2      		ldi r18,lo8(36)
 1282 06f6 FC01      		movw r30,r24
 1283 06f8 2083      		st Z,r18
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifndef NWK_ENABLE_SECURITY
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.security) {
 1284               		.loc 2 390 0
 1285 06fa 8A81      		ldd r24,Y+2
 1286 06fc 9B81      		ldd r25,Y+3
 1287 06fe FC01      		movw r30,r24
 1288 0700 8185      		ldd r24,Z+9
 1289 0702 8270      		andi r24,lo8(2)
 1290 0704 8823      		tst r24
 1291 0706 01F0      		breq .+2
 1292 0708 00C0      		rjmp .L82
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast && header->nwkFcf.ackRequest) {
 1293               		.loc 2 397 0
 1294 070a 8A81      		ldd r24,Y+2
 1295 070c 9B81      		ldd r25,Y+3
 1296 070e FC01      		movw r30,r24
 1297 0710 8185      		ldd r24,Z+9
 1298 0712 8870      		andi r24,lo8(8)
 1299 0714 8823      		tst r24
 1300 0716 01F0      		breq .L64
 1301               		.loc 2 397 0 is_stmt 0 discriminator 1
 1302 0718 8A81      		ldd r24,Y+2
 1303 071a 9B81      		ldd r25,Y+3
 1304 071c FC01      		movw r30,r24
 1305 071e 8185      		ldd r24,Z+9
 1306 0720 8170      		andi r24,lo8(1)
 1307 0722 8823      		tst r24
 1308 0724 01F0      		breq .+2
 1309 0726 00C0      		rjmp .L83
 1310               	.L64:
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #else
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == header->macDstPanId)
 1311               		.loc 2 408 0 is_stmt 1
 1312 0728 8A81      		ldd r24,Y+2
 1313 072a 9B81      		ldd r25,Y+3
 1314 072c FC01      		movw r30,r24
 1315 072e 8381      		ldd r24,Z+3
 1316 0730 9481      		ldd r25,Z+4
 1317 0732 0196      		adiw r24,1
 1318 0734 01F4      		brne .L65
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR == header->nwkDstAddr)
 1319               		.loc 2 410 0
 1320 0736 2091 0000 		lds r18,nwkIb
 1321 073a 3091 0000 		lds r19,nwkIb+1
 1322 073e 8A81      		ldd r24,Y+2
 1323 0740 9B81      		ldd r25,Y+3
 1324 0742 FC01      		movw r30,r24
 1325 0744 8585      		ldd r24,Z+13
 1326 0746 9685      		ldd r25,Z+14
 1327 0748 2817      		cp r18,r24
 1328 074a 3907      		cpc r19,r25
 1329 074c 01F0      		breq .L66
 1330               		.loc 2 410 0 is_stmt 0 discriminator 1
 1331 074e 8A81      		ldd r24,Y+2
 1332 0750 9B81      		ldd r25,Y+3
 1333 0752 FC01      		movw r30,r24
 1334 0754 8585      		ldd r24,Z+13
 1335 0756 9685      		ldd r25,Z+14
 1336 0758 0196      		adiw r24,1
 1337 075a 01F0      		breq .+2
 1338 075c 00C0      		rjmp .L84
 1339               	.L66:
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security)
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			{
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1340               		.loc 2 419 0 is_stmt 1
 1341 075e 8F81      		ldd r24,Y+7
 1342 0760 9885      		ldd r25,Y+8
 1343 0762 22E2      		ldi r18,lo8(34)
 1344 0764 FC01      		movw r30,r24
 1345 0766 2083      		st Z,r18
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 1346               		.loc 2 422 0
 1347 0768 00C0      		rjmp .L84
 1348               	.L65:
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ADDRESS_FILTER
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (!NWK_FilterAddress(header->macSrcAddr, &frame->rx.lqi)) {
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == header->nwkDstAddr && header->nwkFcf.ackRequest)
 1349               		.loc 2 432 0
 1350 076a 8A81      		ldd r24,Y+2
 1351 076c 9B81      		ldd r25,Y+3
 1352 076e FC01      		movw r30,r24
 1353 0770 8585      		ldd r24,Z+13
 1354 0772 9685      		ldd r25,Z+14
 1355 0774 0196      		adiw r24,1
 1356 0776 01F4      		brne .L68
 1357               		.loc 2 432 0 is_stmt 0 discriminator 1
 1358 0778 8A81      		ldd r24,Y+2
 1359 077a 9B81      		ldd r25,Y+3
 1360 077c FC01      		movw r30,r24
 1361 077e 8185      		ldd r24,Z+9
 1362 0780 8170      		andi r24,lo8(1)
 1363 0782 8823      		tst r24
 1364 0784 01F0      		breq .+2
 1365 0786 00C0      		rjmp .L85
 1366               	.L68:
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkIb.addr == header->nwkSrcAddr)
 1367               		.loc 2 437 0 is_stmt 1
 1368 0788 2091 0000 		lds r18,nwkIb
 1369 078c 3091 0000 		lds r19,nwkIb+1
 1370 0790 8A81      		ldd r24,Y+2
 1371 0792 9B81      		ldd r25,Y+3
 1372 0794 FC01      		movw r30,r24
 1373 0796 8385      		ldd r24,Z+11
 1374 0798 9485      		ldd r25,Z+12
 1375 079a 2817      		cp r18,r24
 1376 079c 3907      		cpc r19,r25
 1377 079e 01F4      		brne .+2
 1378 07a0 00C0      		rjmp .L86
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRouteFrameReceived(frame);
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 445:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkRxRejectDuplicate(header))
 1379               		.loc 2 446 0
 1380 07a2 8A81      		ldd r24,Y+2
 1381 07a4 9B81      		ldd r25,Y+3
 1382 07a6 0E94 0000 		call nwkRxRejectDuplicate
 1383 07aa 8823      		tst r24
 1384 07ac 01F0      		breq .+2
 1385 07ae 00C0      		rjmp .L87
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 449:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 451:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 1386               		.loc 2 452 0
 1387 07b0 8A81      		ldd r24,Y+2
 1388 07b2 9B81      		ldd r25,Y+3
 1389 07b4 FC01      		movw r30,r24
 1390 07b6 8185      		ldd r24,Z+9
 1391 07b8 8870      		andi r24,lo8(8)
 1392 07ba 8823      		tst r24
 1393 07bc 01F4      		brne .+2
 1394 07be 00C0      		rjmp .L71
 1395               	.LBB7:
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameMulticastHeader_t *mcHeader
 1396               		.loc 2 453 0
 1397 07c0 8F81      		ldd r24,Y+7
 1398 07c2 9885      		ldd r25,Y+8
 1399 07c4 8F57      		subi r24,127
 1400 07c6 9F4F      		sbci r25,-1
 1401 07c8 FC01      		movw r30,r24
 1402 07ca 8081      		ld r24,Z
 1403 07cc 9181      		ldd r25,Z+1
 1404 07ce 9D83      		std Y+5,r25
 1405 07d0 8C83      		std Y+4,r24
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			= (NwkFrameMulticastHeader_t *)frame->payload;
 455:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool member = NWK_GroupIsMember(header->nwkDstAddr);
 1406               		.loc 2 455 0
 1407 07d2 8A81      		ldd r24,Y+2
 1408 07d4 9B81      		ldd r25,Y+3
 1409 07d6 FC01      		movw r30,r24
 1410 07d8 8585      		ldd r24,Z+13
 1411 07da 9685      		ldd r25,Z+14
 1412 07dc 0E94 0000 		call NWK_GroupIsMember
 1413 07e0 8E83      		std Y+6,r24
 456:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool broadcast = false;
 1414               		.loc 2 456 0
 1415 07e2 1982      		std Y+1,__zero_reg__
 457:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 458:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 1416               		.loc 2 458 0
 1417 07e4 8A81      		ldd r24,Y+2
 1418 07e6 9B81      		ldd r25,Y+3
 1419 07e8 FC01      		movw r30,r24
 1420 07ea 8581      		ldd r24,Z+5
 1421 07ec 9681      		ldd r25,Z+6
 1422 07ee 0196      		adiw r24,1
 1423 07f0 01F0      		breq .+2
 1424 07f2 00C0      		rjmp .L72
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1425               		.loc 2 459 0
 1426 07f4 8E81      		ldd r24,Y+6
 1427 07f6 8823      		tst r24
 1428 07f8 01F0      		breq .L73
 460:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->memberRadius > 0;
 1429               		.loc 2 460 0
 1430 07fa 8C81      		ldd r24,Y+4
 1431 07fc 9D81      		ldd r25,Y+5
 1432 07fe FC01      		movw r30,r24
 1433 0800 8181      		ldd r24,Z+1
 1434 0802 8F70      		andi r24,lo8(15)
 1435 0804 882F      		mov r24,r24
 1436 0806 90E0      		ldi r25,0
 1437 0808 21E0      		ldi r18,lo8(1)
 1438 080a 1816      		cp __zero_reg__,r24
 1439 080c 1906      		cpc __zero_reg__,r25
 1440 080e 04F0      		brlt .L74
 1441 0810 20E0      		ldi r18,0
 1442               	.L74:
 1443 0812 2983      		std Y+1,r18
 461:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius--;
 1444               		.loc 2 461 0
 1445 0814 8C81      		ldd r24,Y+4
 1446 0816 9D81      		ldd r25,Y+5
 1447 0818 FC01      		movw r30,r24
 1448 081a 8181      		ldd r24,Z+1
 1449 081c 8F70      		andi r24,lo8(15)
 1450 081e 2FE0      		ldi r18,lo8(15)
 1451 0820 280F      		add r18,r24
 1452 0822 2F70      		andi r18,lo8(15)
 1453 0824 8C81      		ldd r24,Y+4
 1454 0826 9D81      		ldd r25,Y+5
 1455 0828 2F70      		andi r18,lo8(15)
 1456 082a FC01      		movw r30,r24
 1457 082c 3181      		ldd r19,Z+1
 1458 082e 307F      		andi r19,lo8(-16)
 1459 0830 232B      		or r18,r19
 1460 0832 FC01      		movw r30,r24
 1461 0834 2183      		std Z+1,r18
 462:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius
 463:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxNonMemberRadius;
 1462               		.loc 2 463 0
 1463 0836 8C81      		ldd r24,Y+4
 1464 0838 9D81      		ldd r25,Y+5
 1465 083a FC01      		movw r30,r24
 1466 083c 8081      		ld r24,Z
 1467 083e 282F      		mov r18,r24
 1468 0840 2295      		swap r18
 1469 0842 2F70      		andi r18,lo8(15)
 1470 0844 8C81      		ldd r24,Y+4
 1471 0846 9D81      		ldd r25,Y+5
 1472 0848 2F70      		andi r18,lo8(15)
 1473 084a FC01      		movw r30,r24
 1474 084c 3081      		ld r19,Z
 1475 084e 307F      		andi r19,lo8(-16)
 1476 0850 232B      		or r18,r19
 1477 0852 FC01      		movw r30,r24
 1478 0854 2083      		st Z,r18
 1479 0856 00C0      		rjmp .L77
 1480               	.L73:
 464:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 465:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->nonMemberRadius > 0;
 1481               		.loc 2 465 0
 1482 0858 8C81      		ldd r24,Y+4
 1483 085a 9D81      		ldd r25,Y+5
 1484 085c FC01      		movw r30,r24
 1485 085e 8081      		ld r24,Z
 1486 0860 8F70      		andi r24,lo8(15)
 1487 0862 882F      		mov r24,r24
 1488 0864 90E0      		ldi r25,0
 1489 0866 21E0      		ldi r18,lo8(1)
 1490 0868 1816      		cp __zero_reg__,r24
 1491 086a 1906      		cpc __zero_reg__,r25
 1492 086c 04F0      		brlt .L76
 1493 086e 20E0      		ldi r18,0
 1494               	.L76:
 1495 0870 2983      		std Y+1,r18
 466:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius--;
 1496               		.loc 2 466 0
 1497 0872 8C81      		ldd r24,Y+4
 1498 0874 9D81      		ldd r25,Y+5
 1499 0876 FC01      		movw r30,r24
 1500 0878 8081      		ld r24,Z
 1501 087a 8F70      		andi r24,lo8(15)
 1502 087c 2FE0      		ldi r18,lo8(15)
 1503 087e 280F      		add r18,r24
 1504 0880 2F70      		andi r18,lo8(15)
 1505 0882 8C81      		ldd r24,Y+4
 1506 0884 9D81      		ldd r25,Y+5
 1507 0886 2F70      		andi r18,lo8(15)
 1508 0888 FC01      		movw r30,r24
 1509 088a 3081      		ld r19,Z
 1510 088c 307F      		andi r19,lo8(-16)
 1511 088e 232B      		or r18,r19
 1512 0890 FC01      		movw r30,r24
 1513 0892 2083      		st Z,r18
 467:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius
 468:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxMemberRadius;
 1514               		.loc 2 468 0
 1515 0894 8C81      		ldd r24,Y+4
 1516 0896 9D81      		ldd r25,Y+5
 1517 0898 FC01      		movw r30,r24
 1518 089a 8181      		ldd r24,Z+1
 1519 089c 282F      		mov r18,r24
 1520 089e 2295      		swap r18
 1521 08a0 2F70      		andi r18,lo8(15)
 1522 08a2 8C81      		ldd r24,Y+4
 1523 08a4 9D81      		ldd r25,Y+5
 1524 08a6 2F70      		andi r18,lo8(15)
 1525 08a8 FC01      		movw r30,r24
 1526 08aa 3181      		ldd r19,Z+1
 1527 08ac 307F      		andi r19,lo8(-16)
 1528 08ae 232B      		or r18,r19
 1529 08b0 FC01      		movw r30,r24
 1530 08b2 2183      		std Z+1,r18
 1531 08b4 00C0      		rjmp .L77
 1532               	.L72:
 469:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 470:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		} else {
 471:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1533               		.loc 2 471 0
 1534 08b6 8E81      		ldd r24,Y+6
 1535 08b8 8823      		tst r24
 1536 08ba 01F0      		breq .L77
 472:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = true;
 1537               		.loc 2 472 0
 1538 08bc 81E0      		ldi r24,lo8(1)
 1539 08be 8983      		std Y+1,r24
 473:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkFcf.linkLocal = 1;
 1540               		.loc 2 473 0
 1541 08c0 8A81      		ldd r24,Y+2
 1542 08c2 9B81      		ldd r25,Y+3
 1543 08c4 FC01      		movw r30,r24
 1544 08c6 2185      		ldd r18,Z+9
 1545 08c8 2460      		ori r18,lo8(4)
 1546 08ca FC01      		movw r30,r24
 1547 08cc 2187      		std Z+9,r18
 1548               	.L77:
 474:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 475:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 476:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_ROUTING
 477:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else {
 478:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_ROUTE;
 479:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 480:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 481:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 482:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (broadcast) {
 1549               		.loc 2 483 0
 1550 08ce 8981      		ldd r24,Y+1
 1551 08d0 8823      		tst r24
 1552 08d2 01F0      		breq .L78
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1553               		.loc 2 484 0
 1554 08d4 8F81      		ldd r24,Y+7
 1555 08d6 9885      		ldd r25,Y+8
 1556 08d8 0E94 0000 		call nwkTxBroadcastFrame
 1557               	.L78:
 485:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 486:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 487:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (member) {
 1558               		.loc 2 487 0
 1559 08dc 8E81      		ldd r24,Y+6
 1560 08de 8823      		tst r24
 1561 08e0 01F4      		brne .+2
 1562 08e2 00C0      		rjmp .L61
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 1563               		.loc 2 488 0
 1564 08e4 8F81      		ldd r24,Y+7
 1565 08e6 9885      		ldd r25,Y+8
 1566 08e8 8F57      		subi r24,127
 1567 08ea 9F4F      		sbci r25,-1
 1568 08ec FC01      		movw r30,r24
 1569 08ee 8081      		ld r24,Z
 1570 08f0 9181      		ldd r25,Z+1
 1571 08f2 9C01      		movw r18,r24
 1572 08f4 2E5F      		subi r18,-2
 1573 08f6 3F4F      		sbci r19,-1
 1574 08f8 8F81      		ldd r24,Y+7
 1575 08fa 9885      		ldd r25,Y+8
 1576 08fc 8F57      		subi r24,127
 1577 08fe 9F4F      		sbci r25,-1
 1578 0900 FC01      		movw r30,r24
 1579 0902 3183      		std Z+1,r19
 1580 0904 2083      		st Z,r18
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 490:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 491:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 492:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 495:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1581               		.loc 2 495 0
 1582 0906 8F81      		ldd r24,Y+7
 1583 0908 9885      		ldd r25,Y+8
 1584 090a 22E2      		ldi r18,lo8(34)
 1585 090c FC01      		movw r30,r24
 1586 090e 2083      		st Z,r18
 1587 0910 00C0      		rjmp .L61
 1588               	.L71:
 1589               	.LBE7:
 496:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 497:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif /* NWK_ENABLE_MULTICAST */
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr && nwkIb.addr !=
 1590               		.loc 2 500 0
 1591 0912 8A81      		ldd r24,Y+2
 1592 0914 9B81      		ldd r25,Y+3
 1593 0916 FC01      		movw r30,r24
 1594 0918 8581      		ldd r24,Z+5
 1595 091a 9681      		ldd r25,Z+6
 1596 091c 0196      		adiw r24,1
 1597 091e 01F4      		brne .L80
 1598               		.loc 2 500 0 is_stmt 0 discriminator 1
 1599 0920 2091 0000 		lds r18,nwkIb
 1600 0924 3091 0000 		lds r19,nwkIb+1
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1601               		.loc 2 501 0 is_stmt 1 discriminator 1
 1602 0928 8A81      		ldd r24,Y+2
 1603 092a 9B81      		ldd r25,Y+3
 1604 092c FC01      		movw r30,r24
 1605 092e 8585      		ldd r24,Z+13
 1606 0930 9685      		ldd r25,Z+14
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1607               		.loc 2 500 0 discriminator 1
 1608 0932 2817      		cp r18,r24
 1609 0934 3907      		cpc r19,r25
 1610 0936 01F0      		breq .L80
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				0 == header->nwkFcf.linkLocal) {
 1611               		.loc 2 502 0
 1612 0938 8A81      		ldd r24,Y+2
 1613 093a 9B81      		ldd r25,Y+3
 1614 093c FC01      		movw r30,r24
 1615 093e 8185      		ldd r24,Z+9
 1616 0940 8470      		andi r24,lo8(4)
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1617               		.loc 2 501 0
 1618 0942 8823      		tst r24
 1619 0944 01F4      		brne .L80
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1620               		.loc 2 503 0
 1621 0946 8F81      		ldd r24,Y+7
 1622 0948 9885      		ldd r25,Y+8
 1623 094a 0E94 0000 		call nwkTxBroadcastFrame
 1624               	.L80:
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR ==
 1625               		.loc 2 506 0
 1626 094e 2091 0000 		lds r18,nwkIb
 1627 0952 3091 0000 		lds r19,nwkIb+1
 1628 0956 8A81      		ldd r24,Y+2
 1629 0958 9B81      		ldd r25,Y+3
 1630 095a FC01      		movw r30,r24
 1631 095c 8585      		ldd r24,Z+13
 1632 095e 9685      		ldd r25,Z+14
 1633 0960 2817      		cp r18,r24
 1634 0962 3907      		cpc r19,r25
 1635 0964 01F0      		breq .L81
 507:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1636               		.loc 2 507 0 discriminator 1
 1637 0966 8A81      		ldd r24,Y+2
 1638 0968 9B81      		ldd r25,Y+3
 1639 096a FC01      		movw r30,r24
 1640 096c 8585      		ldd r24,Z+13
 1641 096e 9685      		ldd r25,Z+14
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1642               		.loc 2 506 0 discriminator 1
 1643 0970 0196      		adiw r24,1
 1644 0972 01F4      		brne .L61
 1645               	.L81:
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 509:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 511:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 512:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 513:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1646               		.loc 2 513 0
 1647 0974 8F81      		ldd r24,Y+7
 1648 0976 9885      		ldd r25,Y+8
 1649 0978 22E2      		ldi r18,lo8(34)
 1650 097a FC01      		movw r30,r24
 1651 097c 2083      		st Z,r18
 1652 097e 00C0      		rjmp .L61
 1653               	.L82:
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1654               		.loc 2 391 0
 1655 0980 0000      		nop
 1656 0982 00C0      		rjmp .L61
 1657               	.L83:
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1658               		.loc 2 398 0
 1659 0984 0000      		nop
 1660 0986 00C0      		rjmp .L61
 1661               	.L84:
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1662               		.loc 2 422 0
 1663 0988 0000      		nop
 1664 098a 00C0      		rjmp .L61
 1665               	.L85:
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1666               		.loc 2 434 0
 1667 098c 0000      		nop
 1668 098e 00C0      		rjmp .L61
 1669               	.L86:
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1670               		.loc 2 439 0
 1671 0990 0000      		nop
 1672 0992 00C0      		rjmp .L61
 1673               	.L87:
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1674               		.loc 2 448 0
 1675 0994 0000      		nop
 1676               	.L61:
 1677               	/* epilogue start */
 514:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 515:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 516:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #ifdef NWK_ENABLE_ROUTING
 517:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if (nwkIb.addr == header->macDstAddr) {
 518:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_ROUTE;
 519:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 520:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #endif
 521:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 522:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1678               		.loc 2 522 0
 1679 0996 2896      		adiw r28,8
 1680 0998 0FB6      		in __tmp_reg__,__SREG__
 1681 099a F894      		cli
 1682 099c DEBF      		out __SP_H__,r29
 1683 099e 0FBE      		out __SREG__,__tmp_reg__
 1684 09a0 CDBF      		out __SP_L__,r28
 1685 09a2 DF91      		pop r29
 1686 09a4 CF91      		pop r28
 1687 09a6 0895      		ret
 1688               		.cfi_endproc
 1689               	.LFE73:
 1692               	nwkRxIndicateDataFrame:
 1693               	.LFB74:
 523:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 524:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 525:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 526:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateDataFrame(NwkFrame_t *frame)
 527:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1694               		.loc 2 527 0
 1695               		.cfi_startproc
 1696 09a8 CF93      		push r28
 1697               	.LCFI36:
 1698               		.cfi_def_cfa_offset 3
 1699               		.cfi_offset 28, -2
 1700 09aa DF93      		push r29
 1701               	.LCFI37:
 1702               		.cfi_def_cfa_offset 4
 1703               		.cfi_offset 29, -3
 1704 09ac CDB7      		in r28,__SP_L__
 1705 09ae DEB7      		in r29,__SP_H__
 1706               	.LCFI38:
 1707               		.cfi_def_cfa_register 28
 1708 09b0 6197      		sbiw r28,17
 1709               	.LCFI39:
 1710               		.cfi_def_cfa_offset 21
 1711 09b2 0FB6      		in __tmp_reg__,__SREG__
 1712 09b4 F894      		cli
 1713 09b6 DEBF      		out __SP_H__,r29
 1714 09b8 0FBE      		out __SREG__,__tmp_reg__
 1715 09ba CDBF      		out __SP_L__,r28
 1716               	/* prologue: function */
 1717               	/* frame size = 17 */
 1718               	/* stack size = 19 */
 1719               	.L__stack_usage = 19
 1720 09bc 998B      		std Y+17,r25
 1721 09be 888B      		std Y+16,r24
 528:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1722               		.loc 2 528 0
 1723 09c0 8889      		ldd r24,Y+16
 1724 09c2 9989      		ldd r25,Y+17
 1725 09c4 0296      		adiw r24,2
 1726 09c6 9A83      		std Y+2,r25
 1727 09c8 8983      		std Y+1,r24
 529:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 530:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 531:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[header->nwkDstEndpoint]) {
 1728               		.loc 2 531 0
 1729 09ca 8981      		ldd r24,Y+1
 1730 09cc 9A81      		ldd r25,Y+2
 1731 09ce FC01      		movw r30,r24
 1732 09d0 8785      		ldd r24,Z+15
 1733 09d2 8295      		swap r24
 1734 09d4 8F70      		andi r24,lo8(15)
 1735 09d6 882F      		mov r24,r24
 1736 09d8 90E0      		ldi r25,0
 1737 09da 0396      		adiw r24,3
 1738 09dc 880F      		lsl r24
 1739 09de 991F      		rol r25
 1740 09e0 8050      		subi r24,lo8(-(nwkIb))
 1741 09e2 9040      		sbci r25,hi8(-(nwkIb))
 1742 09e4 FC01      		movw r30,r24
 1743 09e6 8081      		ld r24,Z
 1744 09e8 9181      		ldd r25,Z+1
 1745 09ea 892B      		or r24,r25
 1746 09ec 01F4      		brne .L89
 532:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1747               		.loc 2 532 0
 1748 09ee 80E0      		ldi r24,0
 1749 09f0 00C0      		rjmp .L104
 1750               	.L89:
 533:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 534:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 535:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = header->nwkSrcAddr;
 1751               		.loc 2 535 0
 1752 09f2 8981      		ldd r24,Y+1
 1753 09f4 9A81      		ldd r25,Y+2
 1754 09f6 FC01      		movw r30,r24
 1755 09f8 8385      		ldd r24,Z+11
 1756 09fa 9485      		ldd r25,Z+12
 1757 09fc 9C83      		std Y+4,r25
 1758 09fe 8B83      		std Y+3,r24
 536:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = header->nwkDstAddr;
 1759               		.loc 2 536 0
 1760 0a00 8981      		ldd r24,Y+1
 1761 0a02 9A81      		ldd r25,Y+2
 1762 0a04 FC01      		movw r30,r24
 1763 0a06 8585      		ldd r24,Z+13
 1764 0a08 9685      		ldd r25,Z+14
 1765 0a0a 9E83      		std Y+6,r25
 1766 0a0c 8D83      		std Y+5,r24
 537:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = header->nwkSrcEndpoint;
 1767               		.loc 2 537 0
 1768 0a0e 8981      		ldd r24,Y+1
 1769 0a10 9A81      		ldd r25,Y+2
 1770 0a12 FC01      		movw r30,r24
 1771 0a14 8785      		ldd r24,Z+15
 1772 0a16 8F70      		andi r24,lo8(15)
 1773 0a18 8F83      		std Y+7,r24
 538:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = header->nwkDstEndpoint;
 1774               		.loc 2 538 0
 1775 0a1a 8981      		ldd r24,Y+1
 1776 0a1c 9A81      		ldd r25,Y+2
 1777 0a1e FC01      		movw r30,r24
 1778 0a20 8785      		ldd r24,Z+15
 1779 0a22 8295      		swap r24
 1780 0a24 8F70      		andi r24,lo8(15)
 1781 0a26 8887      		std Y+8,r24
 539:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1782               		.loc 2 539 0
 1783 0a28 8889      		ldd r24,Y+16
 1784 0a2a 9989      		ldd r25,Y+17
 1785 0a2c 8F57      		subi r24,127
 1786 0a2e 9F4F      		sbci r25,-1
 1787 0a30 FC01      		movw r30,r24
 1788 0a32 8081      		ld r24,Z
 1789 0a34 9181      		ldd r25,Z+1
 1790 0a36 9C87      		std Y+12,r25
 1791 0a38 8B87      		std Y+11,r24
 540:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1792               		.loc 2 540 0
 1793 0a3a 8889      		ldd r24,Y+16
 1794 0a3c 9989      		ldd r25,Y+17
 1795 0a3e 0E94 0000 		call nwkFramePayloadSize
 1796 0a42 8D87      		std Y+13,r24
 541:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1797               		.loc 2 541 0
 1798 0a44 8889      		ldd r24,Y+16
 1799 0a46 9989      		ldd r25,Y+17
 1800 0a48 8D57      		subi r24,125
 1801 0a4a 9F4F      		sbci r25,-1
 1802 0a4c FC01      		movw r30,r24
 1803 0a4e 8081      		ld r24,Z
 1804 0a50 8E87      		std Y+14,r24
 542:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1805               		.loc 2 542 0
 1806 0a52 8889      		ldd r24,Y+16
 1807 0a54 9989      		ldd r25,Y+17
 1808 0a56 8C57      		subi r24,124
 1809 0a58 9F4F      		sbci r25,-1
 1810 0a5a FC01      		movw r30,r24
 1811 0a5c 8081      		ld r24,Z
 1812 0a5e 8F87      		std Y+15,r24
 543:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 544:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK_REQUESTED : 0;
 1813               		.loc 2 544 0
 1814 0a60 8981      		ldd r24,Y+1
 1815 0a62 9A81      		ldd r25,Y+2
 1816 0a64 FC01      		movw r30,r24
 1817 0a66 8185      		ldd r24,Z+9
 1818 0a68 982F      		mov r25,r24
 1819 0a6a 9170      		andi r25,lo8(1)
 1820 0a6c 81E0      		ldi r24,lo8(1)
 1821 0a6e 9923      		tst r25
 1822 0a70 01F4      		brne .L91
 1823 0a72 80E0      		ldi r24,0
 1824               	.L91:
 1825 0a74 882F      		mov r24,r24
 1826 0a76 90E0      		ldi r25,0
 1827 0a78 9A87      		std Y+10,r25
 1828 0a7a 8987      		std Y+9,r24
 545:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECURED : 0;
 1829               		.loc 2 545 0
 1830 0a7c 2985      		ldd r18,Y+9
 1831 0a7e 3A85      		ldd r19,Y+10
 1832 0a80 8981      		ldd r24,Y+1
 1833 0a82 9A81      		ldd r25,Y+2
 1834 0a84 FC01      		movw r30,r24
 1835 0a86 8185      		ldd r24,Z+9
 1836 0a88 882F      		mov r24,r24
 1837 0a8a 90E0      		ldi r25,0
 1838 0a8c 8270      		andi r24,2
 1839 0a8e 9927      		clr r25
 1840 0a90 822B      		or r24,r18
 1841 0a92 932B      		or r25,r19
 1842 0a94 9A87      		std Y+10,r25
 1843 0a96 8987      		std Y+9,r24
 546:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LINK_LOCAL : 0;
 1844               		.loc 2 546 0
 1845 0a98 2985      		ldd r18,Y+9
 1846 0a9a 3A85      		ldd r19,Y+10
 1847 0a9c 8981      		ldd r24,Y+1
 1848 0a9e 9A81      		ldd r25,Y+2
 1849 0aa0 FC01      		movw r30,r24
 1850 0aa2 8185      		ldd r24,Z+9
 1851 0aa4 8470      		andi r24,lo8(4)
 1852 0aa6 8823      		tst r24
 1853 0aa8 01F0      		breq .L92
 1854               		.loc 2 546 0 is_stmt 0 discriminator 1
 1855 0aaa 80E2      		ldi r24,lo8(32)
 1856 0aac 90E0      		ldi r25,0
 1857 0aae 00C0      		rjmp .L93
 1858               	.L92:
 1859               		.loc 2 546 0 discriminator 2
 1860 0ab0 80E0      		ldi r24,0
 1861 0ab2 90E0      		ldi r25,0
 1862               	.L93:
 1863               		.loc 2 546 0 discriminator 4
 1864 0ab4 822B      		or r24,r18
 1865 0ab6 932B      		or r25,r19
 1866 0ab8 9A87      		std Y+10,r25
 1867 0aba 8987      		std Y+9,r24
 547:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MULTICAST : 0;
 1868               		.loc 2 547 0 is_stmt 1 discriminator 4
 1869 0abc 2985      		ldd r18,Y+9
 1870 0abe 3A85      		ldd r19,Y+10
 1871 0ac0 8981      		ldd r24,Y+1
 1872 0ac2 9A81      		ldd r25,Y+2
 1873 0ac4 FC01      		movw r30,r24
 1874 0ac6 8185      		ldd r24,Z+9
 1875 0ac8 8870      		andi r24,lo8(8)
 1876 0aca 8823      		tst r24
 1877 0acc 01F0      		breq .L94
 1878               		.loc 2 547 0 is_stmt 0 discriminator 1
 1879 0ace 80E4      		ldi r24,lo8(64)
 1880 0ad0 90E0      		ldi r25,0
 1881 0ad2 00C0      		rjmp .L95
 1882               	.L94:
 1883               		.loc 2 547 0 discriminator 2
 1884 0ad4 80E0      		ldi r24,0
 1885 0ad6 90E0      		ldi r25,0
 1886               	.L95:
 1887               		.loc 2 547 0 discriminator 4
 1888 0ad8 822B      		or r24,r18
 1889 0ada 932B      		or r25,r19
 1890 0adc 9A87      		std Y+10,r25
 1891 0ade 8987      		std Y+9,r24
 548:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.beacon) ? NWK_IND_OPT_BEACON : 0;
 1892               		.loc 2 548 0 is_stmt 1 discriminator 4
 1893 0ae0 2985      		ldd r18,Y+9
 1894 0ae2 3A85      		ldd r19,Y+10
 1895 0ae4 8981      		ldd r24,Y+1
 1896 0ae6 9A81      		ldd r25,Y+2
 1897 0ae8 FC01      		movw r30,r24
 1898 0aea 8185      		ldd r24,Z+9
 1899 0aec 8071      		andi r24,lo8(16)
 1900 0aee 8823      		tst r24
 1901 0af0 01F0      		breq .L96
 1902               		.loc 2 548 0 is_stmt 0 discriminator 1
 1903 0af2 80E8      		ldi r24,lo8(-128)
 1904 0af4 90E0      		ldi r25,0
 1905 0af6 00C0      		rjmp .L97
 1906               	.L96:
 1907               		.loc 2 548 0 discriminator 2
 1908 0af8 80E0      		ldi r24,0
 1909 0afa 90E0      		ldi r25,0
 1910               	.L97:
 1911               		.loc 2 548 0 discriminator 4
 1912 0afc 822B      		or r24,r18
 1913 0afe 932B      		or r25,r19
 1914 0b00 9A87      		std Y+10,r25
 1915 0b02 8987      		std Y+9,r24
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_ADDR == header->nwkDstAddr) ? NWK_IND_OPT_BROADCAST : 0;
 1916               		.loc 2 549 0 is_stmt 1 discriminator 4
 1917 0b04 2985      		ldd r18,Y+9
 1918 0b06 3A85      		ldd r19,Y+10
 1919 0b08 8981      		ldd r24,Y+1
 1920 0b0a 9A81      		ldd r25,Y+2
 1921 0b0c FC01      		movw r30,r24
 1922 0b0e 8585      		ldd r24,Z+13
 1923 0b10 9685      		ldd r25,Z+14
 1924 0b12 0196      		adiw r24,1
 1925 0b14 01F4      		brne .L98
 1926               		.loc 2 549 0 is_stmt 0 discriminator 1
 1927 0b16 84E0      		ldi r24,lo8(4)
 1928 0b18 90E0      		ldi r25,0
 1929 0b1a 00C0      		rjmp .L99
 1930               	.L98:
 1931               		.loc 2 549 0 discriminator 2
 1932 0b1c 80E0      		ldi r24,0
 1933 0b1e 90E0      		ldi r25,0
 1934               	.L99:
 1935               		.loc 2 549 0 discriminator 4
 1936 0b20 822B      		or r24,r18
 1937 0b22 932B      		or r25,r19
 1938 0b24 9A87      		std Y+10,r25
 1939 0b26 8987      		std Y+9,r24
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (header->nwkSrcAddr == header->macSrcAddr) ? NWK_IND_OPT_LOCAL : 0;
 1940               		.loc 2 550 0 is_stmt 1 discriminator 4
 1941 0b28 2985      		ldd r18,Y+9
 1942 0b2a 3A85      		ldd r19,Y+10
 1943 0b2c 8981      		ldd r24,Y+1
 1944 0b2e 9A81      		ldd r25,Y+2
 1945 0b30 FC01      		movw r30,r24
 1946 0b32 4385      		ldd r20,Z+11
 1947 0b34 5485      		ldd r21,Z+12
 1948 0b36 8981      		ldd r24,Y+1
 1949 0b38 9A81      		ldd r25,Y+2
 1950 0b3a FC01      		movw r30,r24
 1951 0b3c 8781      		ldd r24,Z+7
 1952 0b3e 9085      		ldd r25,Z+8
 1953 0b40 4817      		cp r20,r24
 1954 0b42 5907      		cpc r21,r25
 1955 0b44 01F4      		brne .L100
 1956               		.loc 2 550 0 is_stmt 0 discriminator 1
 1957 0b46 88E0      		ldi r24,lo8(8)
 1958 0b48 90E0      		ldi r25,0
 1959 0b4a 00C0      		rjmp .L101
 1960               	.L100:
 1961               		.loc 2 550 0 discriminator 2
 1962 0b4c 80E0      		ldi r24,0
 1963 0b4e 90E0      		ldi r25,0
 1964               	.L101:
 1965               		.loc 2 550 0 discriminator 4
 1966 0b50 822B      		or r24,r18
 1967 0b52 932B      		or r25,r19
 1968 0b54 9A87      		std Y+10,r25
 1969 0b56 8987      		std Y+9,r24
 551:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_PANID == header->macDstPanId) ? NWK_IND_OPT_BROADCAST_PAN_ID : 0;
 1970               		.loc 2 551 0 is_stmt 1 discriminator 4
 1971 0b58 2985      		ldd r18,Y+9
 1972 0b5a 3A85      		ldd r19,Y+10
 1973 0b5c 8981      		ldd r24,Y+1
 1974 0b5e 9A81      		ldd r25,Y+2
 1975 0b60 FC01      		movw r30,r24
 1976 0b62 8381      		ldd r24,Z+3
 1977 0b64 9481      		ldd r25,Z+4
 1978 0b66 0196      		adiw r24,1
 1979 0b68 01F4      		brne .L102
 1980               		.loc 2 551 0 is_stmt 0 discriminator 1
 1981 0b6a 80E1      		ldi r24,lo8(16)
 1982 0b6c 90E0      		ldi r25,0
 1983 0b6e 00C0      		rjmp .L103
 1984               	.L102:
 1985               		.loc 2 551 0 discriminator 2
 1986 0b70 80E0      		ldi r24,0
 1987 0b72 90E0      		ldi r25,0
 1988               	.L103:
 1989               		.loc 2 551 0 discriminator 4
 1990 0b74 822B      		or r24,r18
 1991 0b76 932B      		or r25,r19
 1992 0b78 9A87      		std Y+10,r25
 1993 0b7a 8987      		std Y+9,r24
 552:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 553:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 1994               		.loc 2 553 0 is_stmt 1 discriminator 4
 1995 0b7c 8981      		ldd r24,Y+1
 1996 0b7e 9A81      		ldd r25,Y+2
 1997 0b80 FC01      		movw r30,r24
 1998 0b82 8785      		ldd r24,Z+15
 1999 0b84 8295      		swap r24
 2000 0b86 8F70      		andi r24,lo8(15)
 2001 0b88 882F      		mov r24,r24
 2002 0b8a 90E0      		ldi r25,0
 2003 0b8c 0396      		adiw r24,3
 2004 0b8e 880F      		lsl r24
 2005 0b90 991F      		rol r25
 2006 0b92 8050      		subi r24,lo8(-(nwkIb))
 2007 0b94 9040      		sbci r25,hi8(-(nwkIb))
 2008 0b96 FC01      		movw r30,r24
 2009 0b98 2081      		ld r18,Z
 2010 0b9a 3181      		ldd r19,Z+1
 2011 0b9c CE01      		movw r24,r28
 2012 0b9e 0396      		adiw r24,3
 2013 0ba0 F901      		movw r30,r18
 2014 0ba2 0995      		icall
 2015               	.L104:
 2016               	/* epilogue start */
 554:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2017               		.loc 2 554 0 discriminator 1
 2018 0ba4 6196      		adiw r28,17
 2019 0ba6 0FB6      		in __tmp_reg__,__SREG__
 2020 0ba8 F894      		cli
 2021 0baa DEBF      		out __SP_H__,r29
 2022 0bac 0FBE      		out __SREG__,__tmp_reg__
 2023 0bae CDBF      		out __SP_L__,r28
 2024 0bb0 DF91      		pop r29
 2025 0bb2 CF91      		pop r28
 2026 0bb4 0895      		ret
 2027               		.cfi_endproc
 2028               	.LFE74:
 2031               	nwkRxIndicateBeaconFrame:
 2032               	.LFB75:
 555:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 556:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 557:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 558:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateBeaconFrame(NwkFrame_t *frame)
 559:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2033               		.loc 2 559 0
 2034               		.cfi_startproc
 2035 0bb6 CF93      		push r28
 2036               	.LCFI40:
 2037               		.cfi_def_cfa_offset 3
 2038               		.cfi_offset 28, -2
 2039 0bb8 DF93      		push r29
 2040               	.LCFI41:
 2041               		.cfi_def_cfa_offset 4
 2042               		.cfi_offset 29, -3
 2043 0bba CDB7      		in r28,__SP_L__
 2044 0bbc DEB7      		in r29,__SP_H__
 2045               	.LCFI42:
 2046               		.cfi_def_cfa_register 28
 2047 0bbe 6197      		sbiw r28,17
 2048               	.LCFI43:
 2049               		.cfi_def_cfa_offset 21
 2050 0bc0 0FB6      		in __tmp_reg__,__SREG__
 2051 0bc2 F894      		cli
 2052 0bc4 DEBF      		out __SP_H__,r29
 2053 0bc6 0FBE      		out __SREG__,__tmp_reg__
 2054 0bc8 CDBF      		out __SP_L__,r28
 2055               	/* prologue: function */
 2056               	/* frame size = 17 */
 2057               	/* stack size = 19 */
 2058               	.L__stack_usage = 19
 2059 0bca 998B      		std Y+17,r25
 2060 0bcc 888B      		std Y+16,r24
 560:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 2061               		.loc 2 560 0
 2062 0bce 8889      		ldd r24,Y+16
 2063 0bd0 9989      		ldd r25,Y+17
 2064 0bd2 0296      		adiw r24,2
 2065 0bd4 9A83      		std Y+2,r25
 2066 0bd6 8983      		std Y+1,r24
 561:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 562:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 563:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2067               		.loc 2 563 0
 2068 0bd8 8889      		ldd r24,Y+16
 2069 0bda 9989      		ldd r25,Y+17
 2070 0bdc 24E2      		ldi r18,lo8(36)
 2071 0bde FC01      		movw r30,r24
 2072 0be0 2083      		st Z,r18
 564:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 565:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[0]) {
 2073               		.loc 2 565 0
 2074 0be2 8091 0000 		lds r24,nwkIb+6
 2075 0be6 9091 0000 		lds r25,nwkIb+6+1
 2076 0bea 892B      		or r24,r25
 2077 0bec 01F4      		brne .L106
 566:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2078               		.loc 2 566 0
 2079 0bee 80E0      		ldi r24,0
 2080 0bf0 00C0      		rjmp .L108
 2081               	.L106:
 567:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 568:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 569:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = frame->beacon.macSrcAddr;
 2082               		.loc 2 569 0
 2083 0bf2 8889      		ldd r24,Y+16
 2084 0bf4 9989      		ldd r25,Y+17
 2085 0bf6 FC01      		movw r30,r24
 2086 0bf8 8781      		ldd r24,Z+7
 2087 0bfa 9085      		ldd r25,Z+8
 2088 0bfc 9C83      		std Y+4,r25
 2089 0bfe 8B83      		std Y+3,r24
 570:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = frame->beacon.macSrcAddr;
 2090               		.loc 2 570 0
 2091 0c00 8889      		ldd r24,Y+16
 2092 0c02 9989      		ldd r25,Y+17
 2093 0c04 FC01      		movw r30,r24
 2094 0c06 8781      		ldd r24,Z+7
 2095 0c08 9085      		ldd r25,Z+8
 2096 0c0a 9E83      		std Y+6,r25
 2097 0c0c 8D83      		std Y+5,r24
 571:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2098               		.loc 2 571 0
 2099 0c0e 1F82      		std Y+7,__zero_reg__
 572:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2100               		.loc 2 572 0
 2101 0c10 1886      		std Y+8,__zero_reg__
 573:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2102               		.loc 2 573 0
 2103 0c12 8889      		ldd r24,Y+16
 2104 0c14 9989      		ldd r25,Y+17
 2105 0c16 8F57      		subi r24,127
 2106 0c18 9F4F      		sbci r25,-1
 2107 0c1a FC01      		movw r30,r24
 2108 0c1c 8081      		ld r24,Z
 2109 0c1e 9181      		ldd r25,Z+1
 2110 0c20 9C87      		std Y+12,r25
 2111 0c22 8B87      		std Y+11,r24
 574:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2112               		.loc 2 574 0
 2113 0c24 8889      		ldd r24,Y+16
 2114 0c26 9989      		ldd r25,Y+17
 2115 0c28 0E94 0000 		call nwkFramePayloadSize
 2116 0c2c 8D87      		std Y+13,r24
 575:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2117               		.loc 2 575 0
 2118 0c2e 8889      		ldd r24,Y+16
 2119 0c30 9989      		ldd r25,Y+17
 2120 0c32 8D57      		subi r24,125
 2121 0c34 9F4F      		sbci r25,-1
 2122 0c36 FC01      		movw r30,r24
 2123 0c38 8081      		ld r24,Z
 2124 0c3a 8E87      		std Y+14,r24
 576:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2125               		.loc 2 576 0
 2126 0c3c 8889      		ldd r24,Y+16
 2127 0c3e 9989      		ldd r25,Y+17
 2128 0c40 8C57      		subi r24,124
 2129 0c42 9F4F      		sbci r25,-1
 2130 0c44 FC01      		movw r30,r24
 2131 0c46 8081      		ld r24,Z
 2132 0c48 8F87      		std Y+15,r24
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 578:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_BEACON;
 2133               		.loc 2 578 0
 2134 0c4a 80E8      		ldi r24,lo8(-128)
 2135 0c4c 90E0      		ldi r25,0
 2136 0c4e 9A87      		std Y+10,r25
 2137 0c50 8987      		std Y+9,r24
 579:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 580:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2138               		.loc 2 580 0
 2139 0c52 8981      		ldd r24,Y+1
 2140 0c54 9A81      		ldd r25,Y+2
 2141 0c56 FC01      		movw r30,r24
 2142 0c58 8785      		ldd r24,Z+15
 2143 0c5a 8295      		swap r24
 2144 0c5c 8F70      		andi r24,lo8(15)
 2145 0c5e 882F      		mov r24,r24
 2146 0c60 90E0      		ldi r25,0
 2147 0c62 0396      		adiw r24,3
 2148 0c64 880F      		lsl r24
 2149 0c66 991F      		rol r25
 2150 0c68 8050      		subi r24,lo8(-(nwkIb))
 2151 0c6a 9040      		sbci r25,hi8(-(nwkIb))
 2152 0c6c FC01      		movw r30,r24
 2153 0c6e 2081      		ld r18,Z
 2154 0c70 3181      		ldd r19,Z+1
 2155 0c72 CE01      		movw r24,r28
 2156 0c74 0396      		adiw r24,3
 2157 0c76 F901      		movw r30,r18
 2158 0c78 0995      		icall
 2159               	.L108:
 2160               	/* epilogue start */
 581:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2161               		.loc 2 581 0 discriminator 1
 2162 0c7a 6196      		adiw r28,17
 2163 0c7c 0FB6      		in __tmp_reg__,__SREG__
 2164 0c7e F894      		cli
 2165 0c80 DEBF      		out __SP_H__,r29
 2166 0c82 0FBE      		out __SREG__,__tmp_reg__
 2167 0c84 CDBF      		out __SP_L__,r28
 2168 0c86 DF91      		pop r29
 2169 0c88 CF91      		pop r28
 2170 0c8a 0895      		ret
 2171               		.cfi_endproc
 2172               	.LFE75:
 2175               	nwkRxIndicateLLBeaconFrame:
 2176               	.LFB76:
 582:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 583:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 584:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 585:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 586:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLBeaconFrame(NwkFrame_t *frame)
 587:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2177               		.loc 2 587 0
 2178               		.cfi_startproc
 2179 0c8c CF93      		push r28
 2180               	.LCFI44:
 2181               		.cfi_def_cfa_offset 3
 2182               		.cfi_offset 28, -2
 2183 0c8e DF93      		push r29
 2184               	.LCFI45:
 2185               		.cfi_def_cfa_offset 4
 2186               		.cfi_offset 29, -3
 2187 0c90 CDB7      		in r28,__SP_L__
 2188 0c92 DEB7      		in r29,__SP_H__
 2189               	.LCFI46:
 2190               		.cfi_def_cfa_register 28
 2191 0c94 2F97      		sbiw r28,15
 2192               	.LCFI47:
 2193               		.cfi_def_cfa_offset 19
 2194 0c96 0FB6      		in __tmp_reg__,__SREG__
 2195 0c98 F894      		cli
 2196 0c9a DEBF      		out __SP_H__,r29
 2197 0c9c 0FBE      		out __SREG__,__tmp_reg__
 2198 0c9e CDBF      		out __SP_L__,r28
 2199               	/* prologue: function */
 2200               	/* frame size = 15 */
 2201               	/* stack size = 17 */
 2202               	.L__stack_usage = 17
 2203 0ca0 9F87      		std Y+15,r25
 2204 0ca2 8E87      		std Y+14,r24
 588:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 589:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 590:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2205               		.loc 2 590 0
 2206 0ca4 8E85      		ldd r24,Y+14
 2207 0ca6 9F85      		ldd r25,Y+15
 2208 0ca8 24E2      		ldi r18,lo8(36)
 2209 0caa FC01      		movw r30,r24
 2210 0cac 2083      		st Z,r18
 591:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 592:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_BEACON_ENDPOINT]) {
 2211               		.loc 2 592 0
 2212 0cae 8091 0000 		lds r24,nwkIb+6
 2213 0cb2 9091 0000 		lds r25,nwkIb+6+1
 2214 0cb6 892B      		or r24,r25
 2215 0cb8 01F4      		brne .L110
 593:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2216               		.loc 2 593 0
 2217 0cba 80E0      		ldi r24,0
 2218 0cbc 00C0      		rjmp .L112
 2219               	.L110:
 594:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 595:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Beacon as they are in standart 802.15.4
 596:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 597:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 598:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2220               		.loc 2 598 0
 2221 0cbe 1A82      		std Y+2,__zero_reg__
 2222 0cc0 1982      		std Y+1,__zero_reg__
 599:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2223               		.loc 2 599 0
 2224 0cc2 1C82      		std Y+4,__zero_reg__
 2225 0cc4 1B82      		std Y+3,__zero_reg__
 600:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2226               		.loc 2 600 0
 2227 0cc6 1D82      		std Y+5,__zero_reg__
 601:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2228               		.loc 2 601 0
 2229 0cc8 1E82      		std Y+6,__zero_reg__
 602:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 603:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->LLbeacon;
 2230               		.loc 2 603 0
 2231 0cca 8E85      		ldd r24,Y+14
 2232 0ccc 9F85      		ldd r25,Y+15
 2233 0cce 0296      		adiw r24,2
 2234 0cd0 9A87      		std Y+10,r25
 2235 0cd2 8987      		std Y+9,r24
 604:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2236               		.loc 2 604 0
 2237 0cd4 8E85      		ldd r24,Y+14
 2238 0cd6 9F85      		ldd r25,Y+15
 2239 0cd8 0E94 0000 		call nwkFramePayloadSize
 2240 0cdc 8B87      		std Y+11,r24
 605:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2241               		.loc 2 605 0
 2242 0cde 8E85      		ldd r24,Y+14
 2243 0ce0 9F85      		ldd r25,Y+15
 2244 0ce2 8D57      		subi r24,125
 2245 0ce4 9F4F      		sbci r25,-1
 2246 0ce6 FC01      		movw r30,r24
 2247 0ce8 8081      		ld r24,Z
 2248 0cea 8C87      		std Y+12,r24
 606:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2249               		.loc 2 606 0
 2250 0cec 8E85      		ldd r24,Y+14
 2251 0cee 9F85      		ldd r25,Y+15
 2252 0cf0 8C57      		subi r24,124
 2253 0cf2 9F4F      		sbci r25,-1
 2254 0cf4 FC01      		movw r30,r24
 2255 0cf6 8081      		ld r24,Z
 2256 0cf8 8D87      		std Y+13,r24
 607:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 608:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_BEACON;
 2257               		.loc 2 608 0
 2258 0cfa 80E0      		ldi r24,0
 2259 0cfc 91E0      		ldi r25,lo8(1)
 2260 0cfe 9887      		std Y+8,r25
 2261 0d00 8F83      		std Y+7,r24
 609:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 610:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 611:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_BEACON_ENDPOINT](&ind);
 2262               		.loc 2 611 0
 2263 0d02 2091 0000 		lds r18,nwkIb+6
 2264 0d06 3091 0000 		lds r19,nwkIb+6+1
 2265 0d0a CE01      		movw r24,r28
 2266 0d0c 0196      		adiw r24,1
 2267 0d0e F901      		movw r30,r18
 2268 0d10 0995      		icall
 2269               	.L112:
 2270               	/* epilogue start */
 612:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2271               		.loc 2 612 0 discriminator 1
 2272 0d12 2F96      		adiw r28,15
 2273 0d14 0FB6      		in __tmp_reg__,__SREG__
 2274 0d16 F894      		cli
 2275 0d18 DEBF      		out __SP_H__,r29
 2276 0d1a 0FBE      		out __SREG__,__tmp_reg__
 2277 0d1c CDBF      		out __SP_L__,r28
 2278 0d1e DF91      		pop r29
 2279 0d20 CF91      		pop r28
 2280 0d22 0895      		ret
 2281               		.cfi_endproc
 2282               	.LFE76:
 2285               	nwkRxIndicateLLCommandFrame:
 2286               	.LFB77:
 613:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 614:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLCommandFrame(NwkFrame_t *frame)
 615:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2287               		.loc 2 615 0
 2288               		.cfi_startproc
 2289 0d24 CF93      		push r28
 2290               	.LCFI48:
 2291               		.cfi_def_cfa_offset 3
 2292               		.cfi_offset 28, -2
 2293 0d26 DF93      		push r29
 2294               	.LCFI49:
 2295               		.cfi_def_cfa_offset 4
 2296               		.cfi_offset 29, -3
 2297 0d28 CDB7      		in r28,__SP_L__
 2298 0d2a DEB7      		in r29,__SP_H__
 2299               	.LCFI50:
 2300               		.cfi_def_cfa_register 28
 2301 0d2c 6197      		sbiw r28,17
 2302               	.LCFI51:
 2303               		.cfi_def_cfa_offset 21
 2304 0d2e 0FB6      		in __tmp_reg__,__SREG__
 2305 0d30 F894      		cli
 2306 0d32 DEBF      		out __SP_H__,r29
 2307 0d34 0FBE      		out __SREG__,__tmp_reg__
 2308 0d36 CDBF      		out __SP_L__,r28
 2309               	/* prologue: function */
 2310               	/* frame size = 17 */
 2311               	/* stack size = 19 */
 2312               	.L__stack_usage = 19
 2313 0d38 998B      		std Y+17,r25
 2314 0d3a 888B      		std Y+16,r24
 616:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 617:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 618:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2315               		.loc 2 618 0
 2316 0d3c 8889      		ldd r24,Y+16
 2317 0d3e 9989      		ldd r25,Y+17
 2318 0d40 0296      		adiw r24,2
 2319 0d42 9A83      		std Y+2,r25
 2320 0d44 8983      		std Y+1,r24
 619:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 620:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 621:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2321               		.loc 2 621 0
 2322 0d46 8889      		ldd r24,Y+16
 2323 0d48 9989      		ldd r25,Y+17
 2324 0d4a 24E2      		ldi r18,lo8(36)
 2325 0d4c FC01      		movw r30,r24
 2326 0d4e 2083      		st Z,r18
 622:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 623:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_COMMAND_ENDPOINT]) {
 2327               		.loc 2 623 0
 2328 0d50 8091 0000 		lds r24,nwkIb+12
 2329 0d54 9091 0000 		lds r25,nwkIb+12+1
 2330 0d58 892B      		or r24,r25
 2331 0d5a 01F4      		brne .L114
 624:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2332               		.loc 2 624 0
 2333 0d5c 80E0      		ldi r24,0
 2334 0d5e 00C0      		rjmp .L116
 2335               	.L114:
 625:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 626:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 627:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 628:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 629:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 630:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2336               		.loc 2 630 0
 2337 0d60 1C82      		std Y+4,__zero_reg__
 2338 0d62 1B82      		std Y+3,__zero_reg__
 631:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2339               		.loc 2 631 0
 2340 0d64 1E82      		std Y+6,__zero_reg__
 2341 0d66 1D82      		std Y+5,__zero_reg__
 632:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2342               		.loc 2 632 0
 2343 0d68 1F82      		std Y+7,__zero_reg__
 633:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2344               		.loc 2 633 0
 2345 0d6a 1886      		std Y+8,__zero_reg__
 634:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 635:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 636:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2346               		.loc 2 636 0
 2347 0d6c 8889      		ldd r24,Y+16
 2348 0d6e 9989      		ldd r25,Y+17
 2349 0d70 8F57      		subi r24,127
 2350 0d72 9F4F      		sbci r25,-1
 2351 0d74 FC01      		movw r30,r24
 2352 0d76 8081      		ld r24,Z
 2353 0d78 9181      		ldd r25,Z+1
 2354 0d7a 9C87      		std Y+12,r25
 2355 0d7c 8B87      		std Y+11,r24
 637:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 638:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2356               		.loc 2 638 0
 2357 0d7e 8889      		ldd r24,Y+16
 2358 0d80 9989      		ldd r25,Y+17
 2359 0d82 0E94 0000 		call nwkFramePayloadSize
 2360 0d86 8D87      		std Y+13,r24
 639:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2361               		.loc 2 639 0
 2362 0d88 8889      		ldd r24,Y+16
 2363 0d8a 9989      		ldd r25,Y+17
 2364 0d8c 8D57      		subi r24,125
 2365 0d8e 9F4F      		sbci r25,-1
 2366 0d90 FC01      		movw r30,r24
 2367 0d92 8081      		ld r24,Z
 2368 0d94 8E87      		std Y+14,r24
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2369               		.loc 2 640 0
 2370 0d96 8889      		ldd r24,Y+16
 2371 0d98 9989      		ldd r25,Y+17
 2372 0d9a 8C57      		subi r24,124
 2373 0d9c 9F4F      		sbci r25,-1
 2374 0d9e FC01      		movw r30,r24
 2375 0da0 8081      		ld r24,Z
 2376 0da2 8F87      		std Y+15,r24
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 642:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_MACCOMMAND;
 2377               		.loc 2 642 0
 2378 0da4 80E0      		ldi r24,0
 2379 0da6 92E0      		ldi r25,lo8(2)
 2380 0da8 9A87      		std Y+10,r25
 2381 0daa 8987      		std Y+9,r24
 643:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 644:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_COMMAND_ENDPOINT](&ind);
 2382               		.loc 2 644 0
 2383 0dac 2091 0000 		lds r18,nwkIb+12
 2384 0db0 3091 0000 		lds r19,nwkIb+12+1
 2385 0db4 CE01      		movw r24,r28
 2386 0db6 0396      		adiw r24,3
 2387 0db8 F901      		movw r30,r18
 2388 0dba 0995      		icall
 2389               	.L116:
 2390               	/* epilogue start */
 645:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2391               		.loc 2 645 0 discriminator 1
 2392 0dbc 6196      		adiw r28,17
 2393 0dbe 0FB6      		in __tmp_reg__,__SREG__
 2394 0dc0 F894      		cli
 2395 0dc2 DEBF      		out __SP_H__,r29
 2396 0dc4 0FBE      		out __SREG__,__tmp_reg__
 2397 0dc6 CDBF      		out __SP_L__,r28
 2398 0dc8 DF91      		pop r29
 2399 0dca CF91      		pop r28
 2400 0dcc 0895      		ret
 2401               		.cfi_endproc
 2402               	.LFE77:
 2405               	nwkRxIndicateLLDataFrame:
 2406               	.LFB78:
 646:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 647:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLDataFrame(NwkFrame_t *frame)
 648:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {		
 2407               		.loc 2 648 0
 2408               		.cfi_startproc
 2409 0dce CF93      		push r28
 2410               	.LCFI52:
 2411               		.cfi_def_cfa_offset 3
 2412               		.cfi_offset 28, -2
 2413 0dd0 DF93      		push r29
 2414               	.LCFI53:
 2415               		.cfi_def_cfa_offset 4
 2416               		.cfi_offset 29, -3
 2417 0dd2 CDB7      		in r28,__SP_L__
 2418 0dd4 DEB7      		in r29,__SP_H__
 2419               	.LCFI54:
 2420               		.cfi_def_cfa_register 28
 2421 0dd6 6197      		sbiw r28,17
 2422               	.LCFI55:
 2423               		.cfi_def_cfa_offset 21
 2424 0dd8 0FB6      		in __tmp_reg__,__SREG__
 2425 0dda F894      		cli
 2426 0ddc DEBF      		out __SP_H__,r29
 2427 0dde 0FBE      		out __SREG__,__tmp_reg__
 2428 0de0 CDBF      		out __SP_L__,r28
 2429               	/* prologue: function */
 2430               	/* frame size = 17 */
 2431               	/* stack size = 19 */
 2432               	.L__stack_usage = 19
 2433 0de2 998B      		std Y+17,r25
 2434 0de4 888B      		std Y+16,r24
 649:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2435               		.loc 2 649 0
 2436 0de6 8889      		ldd r24,Y+16
 2437 0de8 9989      		ldd r25,Y+17
 2438 0dea 0296      		adiw r24,2
 2439 0dec 9A83      		std Y+2,r25
 2440 0dee 8983      		std Y+1,r24
 650:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 651:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 652:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2441               		.loc 2 652 0
 2442 0df0 8889      		ldd r24,Y+16
 2443 0df2 9989      		ldd r25,Y+17
 2444 0df4 24E2      		ldi r18,lo8(36)
 2445 0df6 FC01      		movw r30,r24
 2446 0df8 2083      		st Z,r18
 653:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 654:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_DATA_ENDPOINT]) {
 2447               		.loc 2 654 0
 2448 0dfa 8091 0000 		lds r24,nwkIb+8
 2449 0dfe 9091 0000 		lds r25,nwkIb+8+1
 2450 0e02 892B      		or r24,r25
 2451 0e04 01F4      		brne .L118
 655:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2452               		.loc 2 655 0
 2453 0e06 80E0      		ldi r24,0
 2454 0e08 00C0      		rjmp .L120
 2455               	.L118:
 656:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 657:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 658:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 659:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 660:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 661:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2456               		.loc 2 661 0
 2457 0e0a 1C82      		std Y+4,__zero_reg__
 2458 0e0c 1B82      		std Y+3,__zero_reg__
 662:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2459               		.loc 2 662 0
 2460 0e0e 1E82      		std Y+6,__zero_reg__
 2461 0e10 1D82      		std Y+5,__zero_reg__
 663:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2462               		.loc 2 663 0
 2463 0e12 1F82      		std Y+7,__zero_reg__
 664:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2464               		.loc 2 664 0
 2465 0e14 1886      		std Y+8,__zero_reg__
 665:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 666:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 667:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2466               		.loc 2 667 0
 2467 0e16 8889      		ldd r24,Y+16
 2468 0e18 9989      		ldd r25,Y+17
 2469 0e1a 8F57      		subi r24,127
 2470 0e1c 9F4F      		sbci r25,-1
 2471 0e1e FC01      		movw r30,r24
 2472 0e20 8081      		ld r24,Z
 2473 0e22 9181      		ldd r25,Z+1
 2474 0e24 9C87      		std Y+12,r25
 2475 0e26 8B87      		std Y+11,r24
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 669:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2476               		.loc 2 669 0
 2477 0e28 8889      		ldd r24,Y+16
 2478 0e2a 9989      		ldd r25,Y+17
 2479 0e2c 0E94 0000 		call nwkFramePayloadSize
 2480 0e30 8D87      		std Y+13,r24
 670:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2481               		.loc 2 670 0
 2482 0e32 8889      		ldd r24,Y+16
 2483 0e34 9989      		ldd r25,Y+17
 2484 0e36 8D57      		subi r24,125
 2485 0e38 9F4F      		sbci r25,-1
 2486 0e3a FC01      		movw r30,r24
 2487 0e3c 8081      		ld r24,Z
 2488 0e3e 8E87      		std Y+14,r24
 671:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2489               		.loc 2 671 0
 2490 0e40 8889      		ldd r24,Y+16
 2491 0e42 9989      		ldd r25,Y+17
 2492 0e44 8C57      		subi r24,124
 2493 0e46 9F4F      		sbci r25,-1
 2494 0e48 FC01      		movw r30,r24
 2495 0e4a 8081      		ld r24,Z
 2496 0e4c 8F87      		std Y+15,r24
 672:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 673:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_DATA;
 2497               		.loc 2 673 0
 2498 0e4e 80E0      		ldi r24,0
 2499 0e50 94E0      		ldi r25,lo8(4)
 2500 0e52 9A87      		std Y+10,r25
 2501 0e54 8987      		std Y+9,r24
 674:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 675:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_DATA_ENDPOINT](&ind);
 2502               		.loc 2 675 0
 2503 0e56 2091 0000 		lds r18,nwkIb+8
 2504 0e5a 3091 0000 		lds r19,nwkIb+8+1
 2505 0e5e CE01      		movw r24,r28
 2506 0e60 0396      		adiw r24,3
 2507 0e62 F901      		movw r30,r18
 2508 0e64 0995      		icall
 2509               	.L120:
 2510               	/* epilogue start */
 676:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2511               		.loc 2 676 0 discriminator 1
 2512 0e66 6196      		adiw r28,17
 2513 0e68 0FB6      		in __tmp_reg__,__SREG__
 2514 0e6a F894      		cli
 2515 0e6c DEBF      		out __SP_H__,r29
 2516 0e6e 0FBE      		out __SREG__,__tmp_reg__
 2517 0e70 CDBF      		out __SP_L__,r28
 2518 0e72 DF91      		pop r29
 2519 0e74 CF91      		pop r28
 2520 0e76 0895      		ret
 2521               		.cfi_endproc
 2522               	.LFE78:
 2525               	nwkRxIndicateLLACKFrame:
 2526               	.LFB79:
 677:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 678:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLACKFrame(NwkFrame_t *frame)
 679:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2527               		.loc 2 679 0
 2528               		.cfi_startproc
 2529 0e78 CF93      		push r28
 2530               	.LCFI56:
 2531               		.cfi_def_cfa_offset 3
 2532               		.cfi_offset 28, -2
 2533 0e7a DF93      		push r29
 2534               	.LCFI57:
 2535               		.cfi_def_cfa_offset 4
 2536               		.cfi_offset 29, -3
 2537 0e7c CDB7      		in r28,__SP_L__
 2538 0e7e DEB7      		in r29,__SP_H__
 2539               	.LCFI58:
 2540               		.cfi_def_cfa_register 28
 2541 0e80 6197      		sbiw r28,17
 2542               	.LCFI59:
 2543               		.cfi_def_cfa_offset 21
 2544 0e82 0FB6      		in __tmp_reg__,__SREG__
 2545 0e84 F894      		cli
 2546 0e86 DEBF      		out __SP_H__,r29
 2547 0e88 0FBE      		out __SREG__,__tmp_reg__
 2548 0e8a CDBF      		out __SP_L__,r28
 2549               	/* prologue: function */
 2550               	/* frame size = 17 */
 2551               	/* stack size = 19 */
 2552               	.L__stack_usage = 19
 2553 0e8c 998B      		std Y+17,r25
 2554 0e8e 888B      		std Y+16,r24
 680:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 681:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2555               		.loc 2 681 0
 2556 0e90 8889      		ldd r24,Y+16
 2557 0e92 9989      		ldd r25,Y+17
 2558 0e94 0296      		adiw r24,2
 2559 0e96 9A83      		std Y+2,r25
 2560 0e98 8983      		std Y+1,r24
 682:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 683:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 684:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2561               		.loc 2 684 0
 2562 0e9a 8889      		ldd r24,Y+16
 2563 0e9c 9989      		ldd r25,Y+17
 2564 0e9e 24E2      		ldi r18,lo8(36)
 2565 0ea0 FC01      		movw r30,r24
 2566 0ea2 2083      		st Z,r18
 685:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 686:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_ACK_ENDPOINT]) {
 2567               		.loc 2 686 0
 2568 0ea4 8091 0000 		lds r24,nwkIb+14
 2569 0ea8 9091 0000 		lds r25,nwkIb+14+1
 2570 0eac 892B      		or r24,r25
 2571 0eae 01F4      		brne .L122
 687:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2572               		.loc 2 687 0
 2573 0eb0 80E0      		ldi r24,0
 2574 0eb2 00C0      		rjmp .L124
 2575               	.L122:
 688:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 689:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 690:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* 
 691:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * this informations are not received in a LLDN Command as they are in standart 802.15.4
 692:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 693:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 694:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2576               		.loc 2 694 0
 2577 0eb4 1C82      		std Y+4,__zero_reg__
 2578 0eb6 1B82      		std Y+3,__zero_reg__
 695:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2579               		.loc 2 695 0
 2580 0eb8 1E82      		std Y+6,__zero_reg__
 2581 0eba 1D82      		std Y+5,__zero_reg__
 696:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2582               		.loc 2 696 0
 2583 0ebc 1F82      		std Y+7,__zero_reg__
 697:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2584               		.loc 2 697 0
 2585 0ebe 1886      		std Y+8,__zero_reg__
 698:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 699:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data =  frame->payload;
 2586               		.loc 2 699 0
 2587 0ec0 8889      		ldd r24,Y+16
 2588 0ec2 9989      		ldd r25,Y+17
 2589 0ec4 8F57      		subi r24,127
 2590 0ec6 9F4F      		sbci r25,-1
 2591 0ec8 FC01      		movw r30,r24
 2592 0eca 8081      		ld r24,Z
 2593 0ecc 9181      		ldd r25,Z+1
 2594 0ece 9C87      		std Y+12,r25
 2595 0ed0 8B87      		std Y+11,r24
 700:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2596               		.loc 2 700 0
 2597 0ed2 8889      		ldd r24,Y+16
 2598 0ed4 9989      		ldd r25,Y+17
 2599 0ed6 0E94 0000 		call nwkFramePayloadSize
 2600 0eda 8D87      		std Y+13,r24
 701:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2601               		.loc 2 701 0
 2602 0edc 8889      		ldd r24,Y+16
 2603 0ede 9989      		ldd r25,Y+17
 2604 0ee0 8D57      		subi r24,125
 2605 0ee2 9F4F      		sbci r25,-1
 2606 0ee4 FC01      		movw r30,r24
 2607 0ee6 8081      		ld r24,Z
 2608 0ee8 8E87      		std Y+14,r24
 702:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2609               		.loc 2 702 0
 2610 0eea 8889      		ldd r24,Y+16
 2611 0eec 9989      		ldd r25,Y+17
 2612 0eee 8C57      		subi r24,124
 2613 0ef0 9F4F      		sbci r25,-1
 2614 0ef2 FC01      		movw r30,r24
 2615 0ef4 8081      		ld r24,Z
 2616 0ef6 8F87      		std Y+15,r24
 703:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 704:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_OPT_LLDN_ACK;
 2617               		.loc 2 704 0
 2618 0ef8 80E0      		ldi r24,0
 2619 0efa 90E4      		ldi r25,lo8(64)
 2620 0efc 9A87      		std Y+10,r25
 2621 0efe 8987      		std Y+9,r24
 705:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 706:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_ACK_ENDPOINT](&ind);
 2622               		.loc 2 706 0
 2623 0f00 2091 0000 		lds r18,nwkIb+14
 2624 0f04 3091 0000 		lds r19,nwkIb+14+1
 2625 0f08 CE01      		movw r24,r28
 2626 0f0a 0396      		adiw r24,3
 2627 0f0c F901      		movw r30,r18
 2628 0f0e 0995      		icall
 2629               	.L124:
 2630               	/* epilogue start */
 707:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2631               		.loc 2 707 0 discriminator 1
 2632 0f10 6196      		adiw r28,17
 2633 0f12 0FB6      		in __tmp_reg__,__SREG__
 2634 0f14 F894      		cli
 2635 0f16 DEBF      		out __SP_H__,r29
 2636 0f18 0FBE      		out __SREG__,__tmp_reg__
 2637 0f1a CDBF      		out __SP_L__,r28
 2638 0f1c DF91      		pop r29
 2639 0f1e CF91      		pop r28
 2640 0f20 0895      		ret
 2641               		.cfi_endproc
 2642               	.LFE79:
 2645               	nwkRxHandleIndication:
 2646               	.LFB80:
 708:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 709:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 710:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 711:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleIndication(NwkFrame_t *frame)
 712:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2647               		.loc 2 712 0
 2648               		.cfi_startproc
 2649 0f22 CF93      		push r28
 2650               	.LCFI60:
 2651               		.cfi_def_cfa_offset 3
 2652               		.cfi_offset 28, -2
 2653 0f24 DF93      		push r29
 2654               	.LCFI61:
 2655               		.cfi_def_cfa_offset 4
 2656               		.cfi_offset 29, -3
 2657 0f26 00D0      		rcall .
 2658 0f28 1F92      		push __zero_reg__
 2659               	.LCFI62:
 2660               		.cfi_def_cfa_offset 7
 2661 0f2a CDB7      		in r28,__SP_L__
 2662 0f2c DEB7      		in r29,__SP_H__
 2663               	.LCFI63:
 2664               		.cfi_def_cfa_register 28
 2665               	/* prologue: function */
 2666               	/* frame size = 3 */
 2667               	/* stack size = 5 */
 2668               	.L__stack_usage = 5
 2669 0f2e 9B83      		std Y+3,r25
 2670 0f30 8A83      		std Y+2,r24
 713:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool ack;
 714:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 715:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = 0;
 2671               		.loc 2 715 0
 2672 0f32 1092 0000 		sts nwkRxAckControl,__zero_reg__
 716:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack = nwkRxIndicateDataFrame(frame);
 2673               		.loc 2 716 0
 2674 0f36 8A81      		ldd r24,Y+2
 2675 0f38 9B81      		ldd r25,Y+3
 2676 0f3a 0E94 0000 		call nwkRxIndicateDataFrame
 2677 0f3e 8983      		std Y+1,r24
 717:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 718:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == frame->header.nwkFcf.ackRequest) {
 2678               		.loc 2 718 0
 2679 0f40 8A81      		ldd r24,Y+2
 2680 0f42 9B81      		ldd r25,Y+3
 2681 0f44 FC01      		movw r30,r24
 2682 0f46 8385      		ldd r24,Z+11
 2683 0f48 8170      		andi r24,lo8(1)
 2684 0f4a 8823      		tst r24
 2685 0f4c 01F4      		brne .L126
 719:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2686               		.loc 2 719 0
 2687 0f4e 1982      		std Y+1,__zero_reg__
 2688               	.L126:
 720:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 721:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 722:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == frame->header.macDstAddr &&
 2689               		.loc 2 722 0
 2690 0f50 8A81      		ldd r24,Y+2
 2691 0f52 9B81      		ldd r25,Y+3
 2692 0f54 FC01      		movw r30,r24
 2693 0f56 8781      		ldd r24,Z+7
 2694 0f58 9085      		ldd r25,Z+8
 2695 0f5a 0196      		adiw r24,1
 2696 0f5c 01F4      		brne .L127
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2697               		.loc 2 723 0 discriminator 1
 2698 0f5e 2091 0000 		lds r18,nwkIb
 2699 0f62 3091 0000 		lds r19,nwkIb+1
 2700 0f66 8A81      		ldd r24,Y+2
 2701 0f68 9B81      		ldd r25,Y+3
 2702 0f6a FC01      		movw r30,r24
 2703 0f6c 8785      		ldd r24,Z+15
 2704 0f6e 9089      		ldd r25,Z+16
 722:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2705               		.loc 2 722 0 discriminator 1
 2706 0f70 2817      		cp r18,r24
 2707 0f72 3907      		cpc r19,r25
 2708 0f74 01F4      		brne .L127
 724:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			0 == frame->header.nwkFcf.multicast) {
 2709               		.loc 2 724 0
 2710 0f76 8A81      		ldd r24,Y+2
 2711 0f78 9B81      		ldd r25,Y+3
 2712 0f7a FC01      		movw r30,r24
 2713 0f7c 8385      		ldd r24,Z+11
 2714 0f7e 8870      		andi r24,lo8(8)
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2715               		.loc 2 723 0
 2716 0f80 8823      		tst r24
 2717 0f82 01F4      		brne .L127
 725:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = true;
 2718               		.loc 2 725 0
 2719 0f84 81E0      		ldi r24,lo8(1)
 2720 0f86 8983      		std Y+1,r24
 2721               	.L127:
 726:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 727:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 728:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == frame->header.macDstPanId) {
 2722               		.loc 2 728 0
 2723 0f88 8A81      		ldd r24,Y+2
 2724 0f8a 9B81      		ldd r25,Y+3
 2725 0f8c FC01      		movw r30,r24
 2726 0f8e 8581      		ldd r24,Z+5
 2727 0f90 9681      		ldd r25,Z+6
 2728 0f92 0196      		adiw r24,1
 2729 0f94 01F4      		brne .L128
 729:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2730               		.loc 2 729 0
 2731 0f96 1982      		std Y+1,__zero_reg__
 2732               	.L128:
 730:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 731:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 732:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == nwkIb.addr) {
 2733               		.loc 2 732 0
 2734 0f98 8091 0000 		lds r24,nwkIb
 2735 0f9c 9091 0000 		lds r25,nwkIb+1
 2736 0fa0 0196      		adiw r24,1
 2737 0fa2 01F4      		brne .L129
 733:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2738               		.loc 2 733 0
 2739 0fa4 1982      		std Y+1,__zero_reg__
 2740               	.L129:
 734:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 735:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 736:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ack) {
 2741               		.loc 2 736 0
 2742 0fa6 8981      		ldd r24,Y+1
 2743 0fa8 8823      		tst r24
 2744 0faa 01F0      		breq .L130
 737:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxSendAck(frame);
 2745               		.loc 2 737 0
 2746 0fac 8A81      		ldd r24,Y+2
 2747 0fae 9B81      		ldd r25,Y+3
 2748 0fb0 0E94 0000 		call nwkRxSendAck
 2749               	.L130:
 738:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 739:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 740:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2750               		.loc 2 740 0
 2751 0fb4 8A81      		ldd r24,Y+2
 2752 0fb6 9B81      		ldd r25,Y+3
 2753 0fb8 24E2      		ldi r18,lo8(36)
 2754 0fba FC01      		movw r30,r24
 2755 0fbc 2083      		st Z,r18
 741:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2756               		.loc 2 741 0
 2757 0fbe 0000      		nop
 2758               	/* epilogue start */
 2759 0fc0 0F90      		pop __tmp_reg__
 2760 0fc2 0F90      		pop __tmp_reg__
 2761 0fc4 0F90      		pop __tmp_reg__
 2762 0fc6 DF91      		pop r29
 2763 0fc8 CF91      		pop r28
 2764 0fca 0895      		ret
 2765               		.cfi_endproc
 2766               	.LFE80:
 2768               	.global	nwkRxTaskHandler
 2770               	nwkRxTaskHandler:
 2771               	.LFB81:
 742:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 743:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 744:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Rx Module task handler
 745:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 746:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxTaskHandler(void)
 747:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2772               		.loc 2 747 0
 2773               		.cfi_startproc
 2774 0fcc CF93      		push r28
 2775               	.LCFI64:
 2776               		.cfi_def_cfa_offset 3
 2777               		.cfi_offset 28, -2
 2778 0fce DF93      		push r29
 2779               	.LCFI65:
 2780               		.cfi_def_cfa_offset 4
 2781               		.cfi_offset 29, -3
 2782 0fd0 00D0      		rcall .
 2783               	.LCFI66:
 2784               		.cfi_def_cfa_offset 6
 2785 0fd2 CDB7      		in r28,__SP_L__
 2786 0fd4 DEB7      		in r29,__SP_H__
 2787               	.LCFI67:
 2788               		.cfi_def_cfa_register 28
 2789               	/* prologue: function */
 2790               	/* frame size = 2 */
 2791               	/* stack size = 4 */
 2792               	.L__stack_usage = 4
 748:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame = NULL;
 2793               		.loc 2 748 0
 2794 0fd6 1A82      		std Y+2,__zero_reg__
 2795 0fd8 1982      		std Y+1,__zero_reg__
 749:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 750:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 2796               		.loc 2 750 0
 2797 0fda 00C0      		rjmp .L132
 2798               	.L142:
 751:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2799               		.loc 2 751 0
 2800 0fdc 8981      		ldd r24,Y+1
 2801 0fde 9A81      		ldd r25,Y+2
 2802 0fe0 FC01      		movw r30,r24
 2803 0fe2 8081      		ld r24,Z
 2804 0fe4 882F      		mov r24,r24
 2805 0fe6 90E0      		ldi r25,0
 2806 0fe8 092E      		mov __tmp_reg__,r25
 2807 0fea 000C      		lsl r0
 2808 0fec AA0B      		sbc r26,r26
 2809 0fee BB0B      		sbc r27,r27
 2810 0ff0 40E2      		ldi r20,lo8(32)
 2811 0ff2 50E0      		ldi r21,0
 2812 0ff4 29E0      		ldi r18,lo8(9)
 2813 0ff6 30E0      		ldi r19,0
 2814 0ff8 841B      		sub r24,r20
 2815 0ffa 950B      		sbc r25,r21
 2816 0ffc 2817      		cp r18,r24
 2817 0ffe 3907      		cpc r19,r25
 2818 1000 00F0      		brlo .L132
 2819 1002 8050      		subi r24,lo8(-(gs(.L134)))
 2820 1004 9040      		sbci r25,hi8(-(gs(.L134)))
 2821 1006 FC01      		movw r30,r24
 2822 1008 0C94 0000 		jmp __tablejump2__
 2823               		.section	.progmem.gcc_sw_table,"a",@progbits
 2824               		.p2align	1
 2825               	.L134:
 2826 0000 0000      		.word gs(.L133)
 2827 0002 0000      		.word gs(.L132)
 2828 0004 0000      		.word gs(.L135)
 2829 0006 0000      		.word gs(.L132)
 2830 0008 0000      		.word gs(.L136)
 2831 000a 0000      		.word gs(.L137)
 2832 000c 0000      		.word gs(.L138)
 2833 000e 0000      		.word gs(.L139)
 2834 0010 0000      		.word gs(.L140)
 2835 0012 0000      		.word gs(.L141)
 2836               		.text
 2837               	.L133:
 752:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_RECEIVED:
 753:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 754:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleReceivedFrame(frame);
 2838               		.loc 2 754 0
 2839 100c 8981      		ldd r24,Y+1
 2840 100e 9A81      		ldd r25,Y+2
 2841 1010 0E94 0000 		call nwkRxHandleReceivedFrame
 755:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 756:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2842               		.loc 2 756 0
 2843 1014 00C0      		rjmp .L132
 2844               	.L135:
 757:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 758:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 759:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_DECRYPT:
 760:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 761:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkSecurityProcess(frame, false);
 762:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 763:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 764:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 765:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 766:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_INDICATE:
 767:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 768:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleIndication(frame);
 2845               		.loc 2 768 0
 2846 1016 8981      		ldd r24,Y+1
 2847 1018 9A81      		ldd r25,Y+2
 2848 101a 0E94 0000 		call nwkRxHandleIndication
 769:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 770:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2849               		.loc 2 770 0
 2850 101e 00C0      		rjmp .L132
 2851               	.L136:
 771:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 772:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 773:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_ROUTE:
 774:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 775:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRouteFrame(frame);
 776:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 777:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 778:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 779:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 780:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_FINISH:
 781:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 782:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkFrameFree(frame);
 2852               		.loc 2 782 0
 2853 1020 8981      		ldd r24,Y+1
 2854 1022 9A81      		ldd r25,Y+2
 2855 1024 0E94 0000 		call nwkFrameFree
 783:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 784:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2856               		.loc 2 784 0
 2857 1028 00C0      		rjmp .L132
 2858               	.L137:
 785:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 786:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_BEACON:
 787:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 788:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateBeaconFrame(frame);
 2859               		.loc 2 788 0
 2860 102a 8981      		ldd r24,Y+1
 2861 102c 9A81      		ldd r25,Y+2
 2862 102e 0E94 0000 		call nwkRxIndicateBeaconFrame
 789:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 790:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2863               		.loc 2 790 0
 2864 1032 00C0      		rjmp .L132
 2865               	.L138:
 791:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 792:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 793:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLBEACON:
 794:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 795:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLBeaconFrame(frame);
 2866               		.loc 2 795 0
 2867 1034 8981      		ldd r24,Y+1
 2868 1036 9A81      		ldd r25,Y+2
 2869 1038 0E94 0000 		call nwkRxIndicateLLBeaconFrame
 796:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 797:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2870               		.loc 2 797 0
 2871 103c 00C0      		rjmp .L132
 2872               	.L139:
 798:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 799:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLCOMMAND:
 800:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 801:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLCommandFrame(frame);
 2873               		.loc 2 801 0
 2874 103e 8981      		ldd r24,Y+1
 2875 1040 9A81      		ldd r25,Y+2
 2876 1042 0E94 0000 		call nwkRxIndicateLLCommandFrame
 802:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 803:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2877               		.loc 2 803 0
 2878 1046 00C0      		rjmp .L132
 2879               	.L141:
 804:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 805:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLDATA:
 806:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 807:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLDataFrame(frame);
 2880               		.loc 2 807 0
 2881 1048 8981      		ldd r24,Y+1
 2882 104a 9A81      		ldd r25,Y+2
 2883 104c 0E94 0000 		call nwkRxIndicateLLDataFrame
 2884               	.L140:
 808:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 809:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 810:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLACKFRAME:
 811:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 812:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLACKFrame(frame);
 2885               		.loc 2 812 0
 2886 1050 8981      		ldd r24,Y+1
 2887 1052 9A81      		ldd r25,Y+2
 2888 1054 0E94 0000 		call nwkRxIndicateLLACKFrame
 813:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 814:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2889               		.loc 2 814 0
 2890 1058 0000      		nop
 2891               	.L132:
 750:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2892               		.loc 2 750 0
 2893 105a 8981      		ldd r24,Y+1
 2894 105c 9A81      		ldd r25,Y+2
 2895 105e 0E94 0000 		call nwkFrameNext
 2896 1062 9A83      		std Y+2,r25
 2897 1064 8983      		std Y+1,r24
 2898 1066 8981      		ldd r24,Y+1
 2899 1068 9A81      		ldd r25,Y+2
 2900 106a 892B      		or r24,r25
 2901 106c 01F0      		breq .+2
 2902 106e 00C0      		rjmp .L142
 815:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 816:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 817:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 818:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2903               		.loc 2 818 0
 2904 1070 0000      		nop
 2905               	/* epilogue start */
 2906 1072 0F90      		pop __tmp_reg__
 2907 1074 0F90      		pop __tmp_reg__
 2908 1076 DF91      		pop r29
 2909 1078 CF91      		pop r28
 2910 107a 0895      		ret
 2911               		.cfi_endproc
 2912               	.LFE81:
 2914               	.Letext0:
 2915               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 2916               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 2917               		.file 5 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 2918               		.file 6 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 2919               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwkDataReq.h"
 2920               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 2921               		.file 9 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
 2922               		.file 10 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkRx.c
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:7      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 n
                            *COM*:00000004 tTS
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:14     .text:00000000 nwkFramePayloadSize
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:76     .bss.nwkRxDuplicateRejectionTable:00000000 nwkRxDuplicateRejectionTable
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:81     .bss.nwkRxAckControl:00000000 nwkRxAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:86     .bss.nwkRxDuplicateRejectionTimer:00000000 nwkRxDuplicateRejectionTimer
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:91     .text:00000044 nwkRxInit
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:776    .text:00000442 nwkRxDuplicateRejectionTimerHandler
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:1174   .text:00000684 nwkRxSeriveDataInd
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:178    .text:000000b6 PHY_DataInd
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:566    .text:00000318 nwkRxSendAck
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:738    .text:00000426 NWK_SetAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:891    .text:000004dc nwkRxRejectDuplicate
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:1242   .text:000006ce nwkRxHandleReceivedFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:1692   .text:000009a8 nwkRxIndicateDataFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:2031   .text:00000bb6 nwkRxIndicateBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:2175   .text:00000c8c nwkRxIndicateLLBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:2285   .text:00000d24 nwkRxIndicateLLCommandFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:2405   .text:00000dce nwkRxIndicateLLDataFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:2525   .text:00000e78 nwkRxIndicateLLACKFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:2645   .text:00000f22 nwkRxHandleIndication
C:\Users\GUILHE~1\AppData\Local\Temp\cctagaUB.s:2770   .text:00000fcc nwkRxTaskHandler

UNDEFINED SYMBOLS
NWK_OpenEndpoint
nwkFrameAlloc
nwkFrameAlloc_LLDN
memcpy
nwkFrameCommandInit
nwkTxFrame
SYS_TimerStart
nwkTxAckReceived
nwkIb
NWK_GroupIsMember
nwkTxBroadcastFrame
__tablejump2__
nwkFrameFree
nwkFrameNext
__do_clear_bss
