   1               		.file	"nwkRx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.bss.tTS,"aw",@nobits
  14               	tTS:
  15 0000 0000 0000 		.zero	4
  16               		.text
  18               	nwkFramePayloadSize:
  19               	.LFB65:
  20               		.file 1 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
   1:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /**
   2:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \file nwkFrame.h
   3:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   4:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \brief Frame buffers management interface
   5:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   6:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   8:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  10:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  13:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  16:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  20:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  23:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  26:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  38:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  40:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  41:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  42:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  43:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*
  44:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  46:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  48:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  49:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #ifndef _NWK_FRAME_H_
  50:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define _NWK_FRAME_H_
  51:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  52:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Includes ---------------------------------------------------------------*/
  53:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include <stdint.h>
  54:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include "compiler.h"
  55:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  56:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Definitions ------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define NWK_FRAME_MAX_PAYLOAD_SIZE   127
  58:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  59:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Types ------------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_SET(1)
  61:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameHeader_t {
  62:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  63:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  64:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstPanId;
  65:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstAddr;
  66:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  67:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  68:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  69:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t ackRequest : 1;
  70:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t security   : 1;
  71:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t linkLocal  : 1;
  72:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t multicast  : 1;
  73:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t beacon     : 1;
  74:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved   : 3;
  75:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} nwkFcf;
  76:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t nwkSeq;
  77:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkSrcAddr;
  78:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkDstAddr;
  79:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  80:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkSrcEndpoint : 4;
  81:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkDstEndpoint : 4;
  82:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
  83:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameHeader_t;
  84:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  85:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeader_t {
  86:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  87:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  88:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcPanId;
  89:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  90:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
  91:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
  92:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t beaconOrder			: 4;
  93:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t superframeOrder		: 4;
  94:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t finalCAPslot			: 4;
  95:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t BatteryLifeExtension	: 1;
  96:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t Reserved				: 1;
  97:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t PANCoordinator			: 1;
  98:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t AssociationPermit		: 1;
  99:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSFS;
 100:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macGTS;
 101:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macPending;
 102:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeader_t;
 103:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 104:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 105:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeaderLLDN_t {
 106:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/******* MHR *****/
 107:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// struct
 108:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// {
 109:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameType 				: 3;
 110:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SecurityEnabled 	: 1;
 111:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameVersion			: 1;
 112:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t ackRequest				: 1;
 113:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SubFrameType			: 2;
 114:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// } macFcf;
 115:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 116:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 117:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 118:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 119:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 120:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 121:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 122:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 123:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 124:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 125:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/****** MAC Payload *******/
 126:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 127:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 128:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txState 				: 3;
 129:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txDir 					: 1;
 130:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved				: 1;
 131:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t numMgmtTimeslots: 3; // number of managment time slots
 132:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		// uplink and downlink must be equal
 133:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  } Flags;
 134:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 135:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t PanId;
 136:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t confSeqNumber;
 137:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t TimeSlotSize;
 138:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 139:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 140:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeaderLLDN_t;
 141:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 142:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameGeneralHeaderLLDN_t {
 143:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 144:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 145:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 146:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 147:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 148:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 149:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 150:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 151:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 152:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 153:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameGeneralHeaderLLDN_t;
 154:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 155:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 156:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameMulticastHeader_t {
 157:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nonMemberRadius    : 4;
 158:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxNonMemberRadius : 4;
 159:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t memberRadius       : 4;
 160:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxMemberRadius    : 4;
 161:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameMulticastHeader_t;
 162:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 163:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct NwkFrame_t {
 164:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t state;
 165:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t size;
 166:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 167:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 168:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameHeader_t header;
 169:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeader_t beacon;
 170:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeaderLLDN_t LLbeacon;
 171:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameGeneralHeaderLLDN_t LLgeneral;
 172:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t data[NWK_FRAME_MAX_PAYLOAD_SIZE];
 173:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 174:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 175:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t *payload;
 176:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 177:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 178:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 179:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t lqi;
 180:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			int8_t rssi;
 181:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} rx;
 182:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 183:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 184:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t status;
 185:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint16_t timeout;
 186:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t control;
 187:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			void (*confirm)(struct NwkFrame_t *frame);
 188:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} tx;
 189:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 190:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrame_t;
 191:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_RESET()
 192:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Prototypes -------------------------------------------------------------*/
 193:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameInit(void);
 194:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc(void);
 195:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameFree(NwkFrame_t *frame);
 196:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);
 197:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameCommandInit(NwkFrame_t *frame);
 198:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 199:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame);
 200:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Implementations --------------------------------------------------------*/
 201:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 202:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*************************************************************************//**
 203:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** *****************************************************************************/
 204:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** static inline uint8_t nwkFramePayloadSize(NwkFrame_t *frame)
 205:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** {
  21               		.loc 1 205 0
  22               		.cfi_startproc
  23 0000 CF93      		push r28
  24               	.LCFI0:
  25               		.cfi_def_cfa_offset 3
  26               		.cfi_offset 28, -2
  27 0002 DF93      		push r29
  28               	.LCFI1:
  29               		.cfi_def_cfa_offset 4
  30               		.cfi_offset 29, -3
  31 0004 00D0      		rcall .
  32               	.LCFI2:
  33               		.cfi_def_cfa_offset 6
  34 0006 CDB7      		in r28,__SP_L__
  35 0008 DEB7      		in r29,__SP_H__
  36               	.LCFI3:
  37               		.cfi_def_cfa_register 28
  38               	/* prologue: function */
  39               	/* frame size = 2 */
  40               	/* stack size = 4 */
  41               	.L__stack_usage = 4
  42 000a 9A83      		std Y+2,r25
  43 000c 8983      		std Y+1,r24
 206:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	return frame->size - (frame->payload - frame->data);
  44               		.loc 1 206 0
  45 000e 8981      		ldd r24,Y+1
  46 0010 9A81      		ldd r25,Y+2
  47 0012 FC01      		movw r30,r24
  48 0014 4181      		ldd r20,Z+1
  49 0016 8981      		ldd r24,Y+1
  50 0018 9A81      		ldd r25,Y+2
  51 001a 8F57      		subi r24,127
  52 001c 9F4F      		sbci r25,-1
  53 001e FC01      		movw r30,r24
  54 0020 8081      		ld r24,Z
  55 0022 9181      		ldd r25,Z+1
  56 0024 9C01      		movw r18,r24
  57 0026 8981      		ldd r24,Y+1
  58 0028 9A81      		ldd r25,Y+2
  59 002a 0296      		adiw r24,2
  60 002c B901      		movw r22,r18
  61 002e 681B      		sub r22,r24
  62 0030 790B      		sbc r23,r25
  63 0032 CB01      		movw r24,r22
  64 0034 742F      		mov r23,r20
  65 0036 781B      		sub r23,r24
  66 0038 872F      		mov r24,r23
  67               	/* epilogue start */
 207:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** }
  68               		.loc 1 207 0
  69 003a 0F90      		pop __tmp_reg__
  70 003c 0F90      		pop __tmp_reg__
  71 003e DF91      		pop r29
  72 0040 CF91      		pop r28
  73 0042 0895      		ret
  74               		.cfi_endproc
  75               	.LFE65:
  77               		.section	.bss.nwkRxDuplicateRejectionTable,"aw",@nobits
  80               	nwkRxDuplicateRejectionTable:
  81 0000 0000 0000 		.zero	250
  81      0000 0000 
  81      0000 0000 
  81      0000 0000 
  81      0000 0000 
  82               		.section	.bss.nwkRxAckControl,"aw",@nobits
  85               	nwkRxAckControl:
  86 0000 00        		.zero	1
  87               		.section	.bss.nwkRxDuplicateRejectionTimer,"aw",@nobits
  90               	nwkRxDuplicateRejectionTimer:
  91 0000 0000 0000 		.zero	13
  91      0000 0000 
  91      0000 0000 
  91      00
  92               		.text
  93               	.global	nwkRxInit
  95               	nwkRxInit:
  96               	.LFB66:
  97               		.file 2 "../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \file nwkRx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \brief Receive routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkGroup.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRoute.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkCommand.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkSecurity.h"
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRouteDiscovery.h"
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Definitions ------------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL   100 /* ms */
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define DUPLICATE_REJECTION_TTL	\
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	((NWK_DUPLICATE_REJECTION_TTL /	\
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL) + 1)
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_SERVICE_ENDPOINT_ID    0
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Types ------------------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** enum {
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_RECEIVED = 0x20,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_DECRYPT  = 0x21,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_INDICATE = 0x22,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_ROUTE    = 0x23,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_FINISH   = 0x24,
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_BEACON   = 0x25,
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLBEACON 	= 0x26,
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLCOMMAND 	= 0x27,
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** };
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** typedef struct NwkDuplicateRejectionEntry_t {
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint16_t src;
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t seq;
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t mask;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t ttl;
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** } NwkDuplicateRejectionEntry_t;
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Prototypes -------------------------------------------------------------*/
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer);
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind);
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Variables --------------------------------------------------------------*/
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static NwkDuplicateRejectionEntry_t nwkRxDuplicateRejectionTable[
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DUPLICATE_REJECTION_TABLE_SIZE];
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static uint8_t nwkRxAckControl;
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static SYS_Timer_t nwkRxDuplicateRejectionTimer;
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Implementations --------------------------------------------------------*/
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Initializes the Rx module
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxInit(void)
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
  98               		.loc 2 108 0
  99               		.cfi_startproc
 100 0044 CF93      		push r28
 101               	.LCFI4:
 102               		.cfi_def_cfa_offset 3
 103               		.cfi_offset 28, -2
 104 0046 DF93      		push r29
 105               	.LCFI5:
 106               		.cfi_def_cfa_offset 4
 107               		.cfi_offset 29, -3
 108 0048 1F92      		push __zero_reg__
 109               	.LCFI6:
 110               		.cfi_def_cfa_offset 5
 111 004a CDB7      		in r28,__SP_L__
 112 004c DEB7      		in r29,__SP_H__
 113               	.LCFI7:
 114               		.cfi_def_cfa_register 28
 115               	/* prologue: function */
 116               	/* frame size = 1 */
 117               	/* stack size = 3 */
 118               	.L__stack_usage = 3
 119               	.LBB2:
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 120               		.loc 2 109 0
 121 004e 1982      		std Y+1,__zero_reg__
 122 0050 00C0      		rjmp .L4
 123               	.L5:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxDuplicateRejectionTable[i].ttl = 0;
 124               		.loc 2 110 0 discriminator 3
 125 0052 8981      		ldd r24,Y+1
 126 0054 282F      		mov r18,r24
 127 0056 30E0      		ldi r19,0
 128 0058 C901      		movw r24,r18
 129 005a 880F      		lsl r24
 130 005c 991F      		rol r25
 131 005e 880F      		lsl r24
 132 0060 991F      		rol r25
 133 0062 820F      		add r24,r18
 134 0064 931F      		adc r25,r19
 135 0066 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 136 0068 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 137 006a FC01      		movw r30,r24
 138 006c 1082      		st Z,__zero_reg__
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 139               		.loc 2 109 0 discriminator 3
 140 006e 8981      		ldd r24,Y+1
 141 0070 8F5F      		subi r24,lo8(-(1))
 142 0072 8983      		std Y+1,r24
 143               	.L4:
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 144               		.loc 2 109 0 is_stmt 0 discriminator 1
 145 0074 8981      		ldd r24,Y+1
 146 0076 8233      		cpi r24,lo8(50)
 147 0078 00F0      		brlo .L5
 148               	.LBE2:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.interval
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL;
 149               		.loc 2 114 0 is_stmt 1
 150 007a 84E6      		ldi r24,lo8(100)
 151 007c 90E0      		ldi r25,0
 152 007e A0E0      		ldi r26,0
 153 0080 B0E0      		ldi r27,0
 154 0082 8093 0000 		sts nwkRxDuplicateRejectionTimer+6,r24
 155 0086 9093 0000 		sts nwkRxDuplicateRejectionTimer+6+1,r25
 156 008a A093 0000 		sts nwkRxDuplicateRejectionTimer+6+2,r26
 157 008e B093 0000 		sts nwkRxDuplicateRejectionTimer+6+3,r27
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE;
 158               		.loc 2 115 0
 159 0092 1092 0000 		sts nwkRxDuplicateRejectionTimer+10,__zero_reg__
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.handler
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= nwkRxDuplicateRejectionTimerHandler;
 160               		.loc 2 117 0
 161 0096 80E0      		ldi r24,lo8(gs(nwkRxDuplicateRejectionTimerHandler))
 162 0098 90E0      		ldi r25,hi8(gs(nwkRxDuplicateRejectionTimerHandler))
 163 009a 9093 0000 		sts nwkRxDuplicateRejectionTimer+11+1,r25
 164 009e 8093 0000 		sts nwkRxDuplicateRejectionTimer+11,r24
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_OpenEndpoint(NWK_SERVICE_ENDPOINT_ID, nwkRxSeriveDataInd);
 165               		.loc 2 119 0
 166 00a2 60E0      		ldi r22,lo8(gs(nwkRxSeriveDataInd))
 167 00a4 70E0      		ldi r23,hi8(gs(nwkRxSeriveDataInd))
 168 00a6 80E0      		ldi r24,0
 169 00a8 0E94 0000 		call NWK_OpenEndpoint
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 170               		.loc 2 120 0
 171 00ac 0000      		nop
 172               	/* epilogue start */
 173 00ae 0F90      		pop __tmp_reg__
 174 00b0 DF91      		pop r29
 175 00b2 CF91      		pop r28
 176 00b4 0895      		ret
 177               		.cfi_endproc
 178               	.LFE66:
 180               		.weak	PHY_DataInd
 182               	PHY_DataInd:
 183               	.LFB67:
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void __attribute__((weak)) PHY_DataInd(PHY_DataInd_t *ind)
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 184               		.loc 2 125 0
 185               		.cfi_startproc
 186 00b6 CF93      		push r28
 187               	.LCFI8:
 188               		.cfi_def_cfa_offset 3
 189               		.cfi_offset 28, -2
 190 00b8 DF93      		push r29
 191               	.LCFI9:
 192               		.cfi_def_cfa_offset 4
 193               		.cfi_offset 29, -3
 194 00ba 00D0      		rcall .
 195 00bc 00D0      		rcall .
 196               	.LCFI10:
 197               		.cfi_def_cfa_offset 8
 198 00be CDB7      		in r28,__SP_L__
 199 00c0 DEB7      		in r29,__SP_H__
 200               	.LCFI11:
 201               		.cfi_def_cfa_register 28
 202               	/* prologue: function */
 203               	/* frame size = 4 */
 204               	/* stack size = 6 */
 205               	.L__stack_usage = 6
 206 00c2 9C83      		std Y+4,r25
 207 00c4 8B83      		std Y+3,r24
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame;
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-Beacon frame
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(0x0c == ind->data[0])
 208               		.loc 2 129 0
 209 00c6 8B81      		ldd r24,Y+3
 210 00c8 9C81      		ldd r25,Y+4
 211 00ca FC01      		movw r30,r24
 212 00cc 8081      		ld r24,Z
 213 00ce 9181      		ldd r25,Z+1
 214 00d0 FC01      		movw r30,r24
 215 00d2 8081      		ld r24,Z
 216 00d4 8C30      		cpi r24,lo8(12)
 217 00d6 01F4      		brne .L7
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameBeaconHeaderLLDN_t))
 218               		.loc 2 131 0
 219 00d8 8B81      		ldd r24,Y+3
 220 00da 9C81      		ldd r25,Y+4
 221 00dc FC01      		movw r30,r24
 222 00de 8281      		ldd r24,Z+2
 223 00e0 8730      		cpi r24,lo8(7)
 224 00e2 00F0      		brlo .+2
 225 00e4 00C0      		rjmp .L8
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 226               		.loc 2 133 0
 227 00e6 00C0      		rjmp .L6
 228               	.L7:
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-MAC Command frame
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0xcc == ind->data[0])
 229               		.loc 2 137 0
 230 00e8 8B81      		ldd r24,Y+3
 231 00ea 9C81      		ldd r25,Y+4
 232 00ec FC01      		movw r30,r24
 233 00ee 8081      		ld r24,Z
 234 00f0 9181      		ldd r25,Z+1
 235 00f2 FC01      		movw r30,r24
 236 00f4 8081      		ld r24,Z
 237 00f6 8C3C      		cpi r24,lo8(-52)
 238 00f8 01F4      		brne .L10
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameGeneralHeaderLLDN_t))
 239               		.loc 2 139 0
 240 00fa 8B81      		ldd r24,Y+3
 241 00fc 9C81      		ldd r25,Y+4
 242 00fe FC01      		movw r30,r24
 243 0100 8281      		ldd r24,Z+2
 244 0102 8330      		cpi r24,lo8(3)
 245 0104 00F0      		brlo .+2
 246 0106 00C0      		rjmp .L8
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 247               		.loc 2 141 0
 248 0108 00C0      		rjmp .L6
 249               	.L10:
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x88 == ind->data[1])
 250               		.loc 2 144 0
 251 010a 8B81      		ldd r24,Y+3
 252 010c 9C81      		ldd r25,Y+4
 253 010e FC01      		movw r30,r24
 254 0110 8081      		ld r24,Z
 255 0112 9181      		ldd r25,Z+1
 256 0114 0196      		adiw r24,1
 257 0116 FC01      		movw r30,r24
 258 0118 8081      		ld r24,Z
 259 011a 8838      		cpi r24,lo8(-120)
 260 011c 01F4      		brne .L11
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x61 != ind->data[0] && 0x41 != ind->data[0]) || ind->size < sizeof(NwkFrameHeader_t))
 261               		.loc 2 146 0
 262 011e 8B81      		ldd r24,Y+3
 263 0120 9C81      		ldd r25,Y+4
 264 0122 FC01      		movw r30,r24
 265 0124 8081      		ld r24,Z
 266 0126 9181      		ldd r25,Z+1
 267 0128 FC01      		movw r30,r24
 268 012a 8081      		ld r24,Z
 269 012c 8136      		cpi r24,lo8(97)
 270 012e 01F0      		breq .L12
 271               		.loc 2 146 0 is_stmt 0 discriminator 1
 272 0130 8B81      		ldd r24,Y+3
 273 0132 9C81      		ldd r25,Y+4
 274 0134 FC01      		movw r30,r24
 275 0136 8081      		ld r24,Z
 276 0138 9181      		ldd r25,Z+1
 277 013a FC01      		movw r30,r24
 278 013c 8081      		ld r24,Z
 279 013e 8134      		cpi r24,lo8(65)
 280 0140 01F0      		breq .+2
 281 0142 00C0      		rjmp .L25
 282               	.L12:
 283               		.loc 2 146 0 discriminator 3
 284 0144 8B81      		ldd r24,Y+3
 285 0146 9C81      		ldd r25,Y+4
 286 0148 FC01      		movw r30,r24
 287 014a 8281      		ldd r24,Z+2
 288 014c 8031      		cpi r24,lo8(16)
 289 014e 00F4      		brsh .L8
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 290               		.loc 2 148 0 is_stmt 1
 291 0150 00C0      		rjmp .L25
 292               	.L11:
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x80 == ind->data[1])
 293               		.loc 2 151 0
 294 0152 8B81      		ldd r24,Y+3
 295 0154 9C81      		ldd r25,Y+4
 296 0156 FC01      		movw r30,r24
 297 0158 8081      		ld r24,Z
 298 015a 9181      		ldd r25,Z+1
 299 015c 0196      		adiw r24,1
 300 015e FC01      		movw r30,r24
 301 0160 8081      		ld r24,Z
 302 0162 8038      		cpi r24,lo8(-128)
 303 0164 01F0      		breq .+2
 304 0166 00C0      		rjmp .L26
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x00 != ind->data[0]) || ind->size < (sizeof(NwkFrameBeaconHeader_t)))
 305               		.loc 2 153 0
 306 0168 8B81      		ldd r24,Y+3
 307 016a 9C81      		ldd r25,Y+4
 308 016c FC01      		movw r30,r24
 309 016e 8081      		ld r24,Z
 310 0170 9181      		ldd r25,Z+1
 311 0172 FC01      		movw r30,r24
 312 0174 8081      		ld r24,Z
 313 0176 8823      		tst r24
 314 0178 01F0      		breq .+2
 315 017a 00C0      		rjmp .L27
 316               		.loc 2 153 0 is_stmt 0 discriminator 1
 317 017c 8B81      		ldd r24,Y+3
 318 017e 9C81      		ldd r25,Y+4
 319 0180 FC01      		movw r30,r24
 320 0182 8281      		ldd r24,Z+2
 321 0184 8B30      		cpi r24,lo8(11)
 322 0186 00F4      		brsh .+2
 323 0188 00C0      		rjmp .L27
 324               	.L8:
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(ind->data[1] == 0x88 || ind->data[1] == 0x80)
 325               		.loc 2 163 0 is_stmt 1
 326 018a 8B81      		ldd r24,Y+3
 327 018c 9C81      		ldd r25,Y+4
 328 018e FC01      		movw r30,r24
 329 0190 8081      		ld r24,Z
 330 0192 9181      		ldd r25,Z+1
 331 0194 0196      		adiw r24,1
 332 0196 FC01      		movw r30,r24
 333 0198 8081      		ld r24,Z
 334 019a 8838      		cpi r24,lo8(-120)
 335 019c 01F0      		breq .L16
 336               		.loc 2 163 0 is_stmt 0 discriminator 1
 337 019e 8B81      		ldd r24,Y+3
 338 01a0 9C81      		ldd r25,Y+4
 339 01a2 FC01      		movw r30,r24
 340 01a4 8081      		ld r24,Z
 341 01a6 9181      		ldd r25,Z+1
 342 01a8 0196      		adiw r24,1
 343 01aa FC01      		movw r30,r24
 344 01ac 8081      		ld r24,Z
 345 01ae 8038      		cpi r24,lo8(-128)
 346 01b0 01F4      		brne .L17
 347               	.L16:
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc())) {
 348               		.loc 2 165 0 is_stmt 1
 349 01b2 0E94 0000 		call nwkFrameAlloc
 350 01b6 9A83      		std Y+2,r25
 351 01b8 8983      		std Y+1,r24
 352 01ba 8981      		ldd r24,Y+1
 353 01bc 9A81      		ldd r25,Y+2
 354 01be 892B      		or r24,r25
 355 01c0 01F4      		brne .+2
 356 01c2 00C0      		rjmp .L28
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame received is NwkFrameHeader change state to Receveid
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is a 802.15.4 beacon change state to Beacon
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = ((0x88 == ind->data[1]) ? NWK_RX_STATE_RECEIVED : NWK_RX_STATE_BEACON);
 357               		.loc 2 170 0
 358 01c4 8B81      		ldd r24,Y+3
 359 01c6 9C81      		ldd r25,Y+4
 360 01c8 FC01      		movw r30,r24
 361 01ca 8081      		ld r24,Z
 362 01cc 9181      		ldd r25,Z+1
 363 01ce 0196      		adiw r24,1
 364 01d0 FC01      		movw r30,r24
 365 01d2 8081      		ld r24,Z
 366 01d4 8838      		cpi r24,lo8(-120)
 367 01d6 01F4      		brne .L19
 368               		.loc 2 170 0 is_stmt 0 discriminator 1
 369 01d8 20E2      		ldi r18,lo8(32)
 370 01da 00C0      		rjmp .L20
 371               	.L19:
 372               		.loc 2 170 0 discriminator 2
 373 01dc 25E2      		ldi r18,lo8(37)
 374               	.L20:
 375               		.loc 2 170 0 discriminator 4
 376 01de 8981      		ldd r24,Y+1
 377 01e0 9A81      		ldd r25,Y+2
 378 01e2 FC01      		movw r30,r24
 379 01e4 2083      		st Z,r18
 380 01e6 00C0      		rjmp .L21
 381               	.L17:
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// allocate frame buffer according to received frame
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(ind->data[0] == 0x0c)
 382               		.loc 2 173 0 is_stmt 1
 383 01e8 8B81      		ldd r24,Y+3
 384 01ea 9C81      		ldd r25,Y+4
 385 01ec FC01      		movw r30,r24
 386 01ee 8081      		ld r24,Z
 387 01f0 9181      		ldd r25,Z+1
 388 01f2 FC01      		movw r30,r24
 389 01f4 8081      		ld r24,Z
 390 01f6 8C30      		cpi r24,lo8(12)
 391 01f8 01F4      		brne .L22
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-Beacon frame
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(true))){
 392               		.loc 2 176 0
 393 01fa 81E0      		ldi r24,lo8(1)
 394 01fc 0E94 0000 		call nwkFrameAlloc_LLDN
 395 0200 9A83      		std Y+2,r25
 396 0202 8983      		std Y+1,r24
 397 0204 8981      		ldd r24,Y+1
 398 0206 9A81      		ldd r25,Y+2
 399 0208 892B      		or r24,r25
 400 020a 01F4      		brne .+2
 401 020c 00C0      		rjmp .L29
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-Beacon change state to LLBEACON
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLBEACON;
 402               		.loc 2 180 0
 403 020e 8981      		ldd r24,Y+1
 404 0210 9A81      		ldd r25,Y+2
 405 0212 26E2      		ldi r18,lo8(38)
 406 0214 FC01      		movw r30,r24
 407 0216 2083      		st Z,r18
 408 0218 00C0      		rjmp .L21
 409               	.L22:
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-MAC command or LL-Data frame
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(false))){
 410               		.loc 2 185 0
 411 021a 80E0      		ldi r24,0
 412 021c 0E94 0000 		call nwkFrameAlloc_LLDN
 413 0220 9A83      		std Y+2,r25
 414 0222 8983      		std Y+1,r24
 415 0224 8981      		ldd r24,Y+1
 416 0226 9A81      		ldd r25,Y+2
 417 0228 892B      		or r24,r25
 418 022a 01F0      		breq .L30
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-MACComand change state to LLCOMMAND
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLCOMMAND;
 419               		.loc 2 189 0
 420 022c 8981      		ldd r24,Y+1
 421 022e 9A81      		ldd r25,Y+2
 422 0230 27E2      		ldi r18,lo8(39)
 423 0232 FC01      		movw r30,r24
 424 0234 2083      		st Z,r18
 425               	.L21:
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size = ind->size;
 426               		.loc 2 192 0
 427 0236 8B81      		ldd r24,Y+3
 428 0238 9C81      		ldd r25,Y+4
 429 023a FC01      		movw r30,r24
 430 023c 2281      		ldd r18,Z+2
 431 023e 8981      		ldd r24,Y+1
 432 0240 9A81      		ldd r25,Y+2
 433 0242 FC01      		movw r30,r24
 434 0244 2183      		std Z+1,r18
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.lqi = ind->lqi;
 435               		.loc 2 193 0
 436 0246 8B81      		ldd r24,Y+3
 437 0248 9C81      		ldd r25,Y+4
 438 024a FC01      		movw r30,r24
 439 024c 2381      		ldd r18,Z+3
 440 024e 8981      		ldd r24,Y+1
 441 0250 9A81      		ldd r25,Y+2
 442 0252 8D57      		subi r24,125
 443 0254 9F4F      		sbci r25,-1
 444 0256 FC01      		movw r30,r24
 445 0258 2083      		st Z,r18
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.rssi = ind->rssi;
 446               		.loc 2 194 0
 447 025a 8B81      		ldd r24,Y+3
 448 025c 9C81      		ldd r25,Y+4
 449 025e FC01      		movw r30,r24
 450 0260 2481      		ldd r18,Z+4
 451 0262 8981      		ldd r24,Y+1
 452 0264 9A81      		ldd r25,Y+2
 453 0266 8C57      		subi r24,124
 454 0268 9F4F      		sbci r25,-1
 455 026a FC01      		movw r30,r24
 456 026c 2083      		st Z,r18
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	memcpy(frame->data, ind->data, ind->size);
 457               		.loc 2 195 0
 458 026e 8B81      		ldd r24,Y+3
 459 0270 9C81      		ldd r25,Y+4
 460 0272 FC01      		movw r30,r24
 461 0274 8281      		ldd r24,Z+2
 462 0276 482F      		mov r20,r24
 463 0278 50E0      		ldi r21,0
 464 027a 8B81      		ldd r24,Y+3
 465 027c 9C81      		ldd r25,Y+4
 466 027e FC01      		movw r30,r24
 467 0280 2081      		ld r18,Z
 468 0282 3181      		ldd r19,Z+1
 469 0284 8981      		ldd r24,Y+1
 470 0286 9A81      		ldd r25,Y+2
 471 0288 0296      		adiw r24,2
 472 028a B901      		movw r22,r18
 473 028c 0E94 0000 		call memcpy
 474 0290 00C0      		rjmp .L6
 475               	.L25:
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 476               		.loc 2 148 0
 477 0292 0000      		nop
 478 0294 00C0      		rjmp .L6
 479               	.L26:
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 480               		.loc 2 160 0
 481 0296 0000      		nop
 482 0298 00C0      		rjmp .L6
 483               	.L27:
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 484               		.loc 2 155 0
 485 029a 0000      		nop
 486 029c 00C0      		rjmp .L6
 487               	.L28:
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 488               		.loc 2 166 0
 489 029e 0000      		nop
 490 02a0 00C0      		rjmp .L6
 491               	.L29:
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 492               		.loc 2 177 0
 493 02a2 0000      		nop
 494 02a4 00C0      		rjmp .L6
 495               	.L30:
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 496               		.loc 2 186 0
 497 02a6 0000      		nop
 498               	.L6:
 499               	/* epilogue start */
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 500               		.loc 2 196 0
 501 02a8 0F90      		pop __tmp_reg__
 502 02aa 0F90      		pop __tmp_reg__
 503 02ac 0F90      		pop __tmp_reg__
 504 02ae 0F90      		pop __tmp_reg__
 505 02b0 DF91      		pop r29
 506 02b2 CF91      		pop r28
 507 02b4 0895      		ret
 508               		.cfi_endproc
 509               	.LFE67:
 512               	nwkRxSendAck:
 513               	.LFB68:
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxSendAck(NwkFrame_t *frame)
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 514               		.loc 2 201 0
 515               		.cfi_startproc
 516 02b6 CF93      		push r28
 517               	.LCFI12:
 518               		.cfi_def_cfa_offset 3
 519               		.cfi_offset 28, -2
 520 02b8 DF93      		push r29
 521               	.LCFI13:
 522               		.cfi_def_cfa_offset 4
 523               		.cfi_offset 29, -3
 524 02ba 00D0      		rcall .
 525 02bc 00D0      		rcall .
 526 02be 00D0      		rcall .
 527               	.LCFI14:
 528               		.cfi_def_cfa_offset 10
 529 02c0 CDB7      		in r28,__SP_L__
 530 02c2 DEB7      		in r29,__SP_H__
 531               	.LCFI15:
 532               		.cfi_def_cfa_register 28
 533               	/* prologue: function */
 534               	/* frame size = 6 */
 535               	/* stack size = 8 */
 536               	.L__stack_usage = 8
 537 02c4 9E83      		std Y+6,r25
 538 02c6 8D83      		std Y+5,r24
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *ack;
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkCommandAck_t *command;
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (ack = nwkFrameAlloc())) {
 539               		.loc 2 205 0
 540 02c8 0E94 0000 		call nwkFrameAlloc
 541 02cc 9A83      		std Y+2,r25
 542 02ce 8983      		std Y+1,r24
 543 02d0 8981      		ldd r24,Y+1
 544 02d2 9A81      		ldd r25,Y+2
 545 02d4 892B      		or r24,r25
 546 02d6 01F4      		brne .+2
 547 02d8 00C0      		rjmp .L34
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size += sizeof(NwkFrameHeader_t);
 548               		.loc 2 209 0
 549 02da 8D81      		ldd r24,Y+5
 550 02dc 9E81      		ldd r25,Y+6
 551 02de FC01      		movw r30,r24
 552 02e0 8181      		ldd r24,Z+1
 553 02e2 20E1      		ldi r18,lo8(16)
 554 02e4 280F      		add r18,r24
 555 02e6 8D81      		ldd r24,Y+5
 556 02e8 9E81      		ldd r25,Y+6
 557 02ea FC01      		movw r30,r24
 558 02ec 2183      		std Z+1,r18
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->payload += sizeof(NwkFrameHeader_t);
 559               		.loc 2 210 0
 560 02ee 8D81      		ldd r24,Y+5
 561 02f0 9E81      		ldd r25,Y+6
 562 02f2 8F57      		subi r24,127
 563 02f4 9F4F      		sbci r25,-1
 564 02f6 FC01      		movw r30,r24
 565 02f8 8081      		ld r24,Z
 566 02fa 9181      		ldd r25,Z+1
 567 02fc 9C01      		movw r18,r24
 568 02fe 205F      		subi r18,-16
 569 0300 3F4F      		sbci r19,-1
 570 0302 8D81      		ldd r24,Y+5
 571 0304 9E81      		ldd r25,Y+6
 572 0306 8F57      		subi r24,127
 573 0308 9F4F      		sbci r25,-1
 574 030a FC01      		movw r30,r24
 575 030c 3183      		std Z+1,r19
 576 030e 2083      		st Z,r18
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkFrameCommandInit(ack);
 577               		.loc 2 212 0
 578 0310 8981      		ldd r24,Y+1
 579 0312 9A81      		ldd r25,Y+2
 580 0314 0E94 0000 		call nwkFrameCommandInit
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->size += sizeof(NwkCommandAck_t);
 581               		.loc 2 214 0
 582 0318 8981      		ldd r24,Y+1
 583 031a 9A81      		ldd r25,Y+2
 584 031c FC01      		movw r30,r24
 585 031e 8181      		ldd r24,Z+1
 586 0320 23E0      		ldi r18,lo8(3)
 587 0322 280F      		add r18,r24
 588 0324 8981      		ldd r24,Y+1
 589 0326 9A81      		ldd r25,Y+2
 590 0328 FC01      		movw r30,r24
 591 032a 2183      		std Z+1,r18
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->tx.confirm = NULL;
 592               		.loc 2 215 0
 593 032c 8981      		ldd r24,Y+1
 594 032e 9A81      		ldd r25,Y+2
 595 0330 8957      		subi r24,121
 596 0332 9F4F      		sbci r25,-1
 597 0334 FC01      		movw r30,r24
 598 0336 1182      		std Z+1,__zero_reg__
 599 0338 1082      		st Z,__zero_reg__
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkFcf.security = frame->header.nwkFcf.security;
 600               		.loc 2 217 0
 601 033a 8D81      		ldd r24,Y+5
 602 033c 9E81      		ldd r25,Y+6
 603 033e FC01      		movw r30,r24
 604 0340 8385      		ldd r24,Z+11
 605 0342 81FB      		bst r24,1
 606 0344 2227      		clr r18
 607 0346 20F9      		bld r18,0
 608 0348 8981      		ldd r24,Y+1
 609 034a 9A81      		ldd r25,Y+2
 610 034c 2170      		andi r18,lo8(1)
 611 034e 220F      		lsl r18
 612 0350 FC01      		movw r30,r24
 613 0352 3385      		ldd r19,Z+11
 614 0354 3D7F      		andi r19,lo8(-3)
 615 0356 232B      		or r18,r19
 616 0358 FC01      		movw r30,r24
 617 035a 2387      		std Z+11,r18
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 618               		.loc 2 218 0
 619 035c 8D81      		ldd r24,Y+5
 620 035e 9E81      		ldd r25,Y+6
 621 0360 FC01      		movw r30,r24
 622 0362 2585      		ldd r18,Z+13
 623 0364 3685      		ldd r19,Z+14
 624 0366 8981      		ldd r24,Y+1
 625 0368 9A81      		ldd r25,Y+2
 626 036a FC01      		movw r30,r24
 627 036c 308B      		std Z+16,r19
 628 036e 2787      		std Z+15,r18
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command = (NwkCommandAck_t *)ack->payload;
 629               		.loc 2 220 0
 630 0370 8981      		ldd r24,Y+1
 631 0372 9A81      		ldd r25,Y+2
 632 0374 8F57      		subi r24,127
 633 0376 9F4F      		sbci r25,-1
 634 0378 FC01      		movw r30,r24
 635 037a 8081      		ld r24,Z
 636 037c 9181      		ldd r25,Z+1
 637 037e 9C83      		std Y+4,r25
 638 0380 8B83      		std Y+3,r24
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->id = NWK_COMMAND_ACK;
 639               		.loc 2 221 0
 640 0382 8B81      		ldd r24,Y+3
 641 0384 9C81      		ldd r25,Y+4
 642 0386 FC01      		movw r30,r24
 643 0388 1082      		st Z,__zero_reg__
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->control = nwkRxAckControl;
 644               		.loc 2 222 0
 645 038a 2091 0000 		lds r18,nwkRxAckControl
 646 038e 8B81      		ldd r24,Y+3
 647 0390 9C81      		ldd r25,Y+4
 648 0392 FC01      		movw r30,r24
 649 0394 2283      		std Z+2,r18
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->seq = frame->header.nwkSeq;
 650               		.loc 2 223 0
 651 0396 8D81      		ldd r24,Y+5
 652 0398 9E81      		ldd r25,Y+6
 653 039a FC01      		movw r30,r24
 654 039c 2485      		ldd r18,Z+12
 655 039e 8B81      		ldd r24,Y+3
 656 03a0 9C81      		ldd r25,Y+4
 657 03a2 FC01      		movw r30,r24
 658 03a4 2183      		std Z+1,r18
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkTxFrame(ack);
 659               		.loc 2 225 0
 660 03a6 8981      		ldd r24,Y+1
 661 03a8 9A81      		ldd r25,Y+2
 662 03aa 0E94 0000 		call nwkTxFrame
 663 03ae 00C0      		rjmp .L31
 664               	.L34:
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 665               		.loc 2 206 0
 666 03b0 0000      		nop
 667               	.L31:
 668               	/* epilogue start */
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 669               		.loc 2 226 0
 670 03b2 2696      		adiw r28,6
 671 03b4 0FB6      		in __tmp_reg__,__SREG__
 672 03b6 F894      		cli
 673 03b8 DEBF      		out __SP_H__,r29
 674 03ba 0FBE      		out __SREG__,__tmp_reg__
 675 03bc CDBF      		out __SP_L__,r28
 676 03be DF91      		pop r29
 677 03c0 CF91      		pop r28
 678 03c2 0895      		ret
 679               		.cfi_endproc
 680               	.LFE68:
 682               	.global	NWK_SetAckControl
 684               	NWK_SetAckControl:
 685               	.LFB69:
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void NWK_SetAckControl(uint8_t control)
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 686               		.loc 2 231 0
 687               		.cfi_startproc
 688 03c4 CF93      		push r28
 689               	.LCFI16:
 690               		.cfi_def_cfa_offset 3
 691               		.cfi_offset 28, -2
 692 03c6 DF93      		push r29
 693               	.LCFI17:
 694               		.cfi_def_cfa_offset 4
 695               		.cfi_offset 29, -3
 696 03c8 1F92      		push __zero_reg__
 697               	.LCFI18:
 698               		.cfi_def_cfa_offset 5
 699 03ca CDB7      		in r28,__SP_L__
 700 03cc DEB7      		in r29,__SP_H__
 701               	.LCFI19:
 702               		.cfi_def_cfa_register 28
 703               	/* prologue: function */
 704               	/* frame size = 1 */
 705               	/* stack size = 3 */
 706               	.L__stack_usage = 3
 707 03ce 8983      		std Y+1,r24
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = control;
 708               		.loc 2 232 0
 709 03d0 8981      		ldd r24,Y+1
 710 03d2 8093 0000 		sts nwkRxAckControl,r24
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 711               		.loc 2 233 0
 712 03d6 0000      		nop
 713               	/* epilogue start */
 714 03d8 0F90      		pop __tmp_reg__
 715 03da DF91      		pop r29
 716 03dc CF91      		pop r28
 717 03de 0895      		ret
 718               		.cfi_endproc
 719               	.LFE69:
 722               	nwkRxDuplicateRejectionTimerHandler:
 723               	.LFB70:
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxDecryptConf(NwkFrame_t *frame, bool status)
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (status) {
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_INDICATE;
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else {
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_FINISH;
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer)
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 724               		.loc 2 253 0
 725               		.cfi_startproc
 726 03e0 CF93      		push r28
 727               	.LCFI20:
 728               		.cfi_def_cfa_offset 3
 729               		.cfi_offset 28, -2
 730 03e2 DF93      		push r29
 731               	.LCFI21:
 732               		.cfi_def_cfa_offset 4
 733               		.cfi_offset 29, -3
 734 03e4 00D0      		rcall .
 735 03e6 00D0      		rcall .
 736               	.LCFI22:
 737               		.cfi_def_cfa_offset 8
 738 03e8 CDB7      		in r28,__SP_L__
 739 03ea DEB7      		in r29,__SP_H__
 740               	.LCFI23:
 741               		.cfi_def_cfa_register 28
 742               	/* prologue: function */
 743               	/* frame size = 4 */
 744               	/* stack size = 6 */
 745               	.L__stack_usage = 6
 746 03ec 9C83      		std Y+4,r25
 747 03ee 8B83      		std Y+3,r24
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool restart = false;
 748               		.loc 2 254 0
 749 03f0 1982      		std Y+1,__zero_reg__
 750               	.LBB3:
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 751               		.loc 2 256 0
 752 03f2 1A82      		std Y+2,__zero_reg__
 753 03f4 00C0      		rjmp .L37
 754               	.L39:
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 755               		.loc 2 257 0
 756 03f6 8A81      		ldd r24,Y+2
 757 03f8 282F      		mov r18,r24
 758 03fa 30E0      		ldi r19,0
 759 03fc C901      		movw r24,r18
 760 03fe 880F      		lsl r24
 761 0400 991F      		rol r25
 762 0402 880F      		lsl r24
 763 0404 991F      		rol r25
 764 0406 820F      		add r24,r18
 765 0408 931F      		adc r25,r19
 766 040a 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 767 040c 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 768 040e FC01      		movw r30,r24
 769 0410 8081      		ld r24,Z
 770 0412 8823      		tst r24
 771 0414 01F0      		breq .L38
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxDuplicateRejectionTable[i].ttl--;
 772               		.loc 2 258 0
 773 0416 8A81      		ldd r24,Y+2
 774 0418 282F      		mov r18,r24
 775 041a 30E0      		ldi r19,0
 776 041c C901      		movw r24,r18
 777 041e 880F      		lsl r24
 778 0420 991F      		rol r25
 779 0422 880F      		lsl r24
 780 0424 991F      		rol r25
 781 0426 820F      		add r24,r18
 782 0428 931F      		adc r25,r19
 783 042a 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 784 042c 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 785 042e FC01      		movw r30,r24
 786 0430 8081      		ld r24,Z
 787 0432 4FEF      		ldi r20,lo8(-1)
 788 0434 480F      		add r20,r24
 789 0436 C901      		movw r24,r18
 790 0438 880F      		lsl r24
 791 043a 991F      		rol r25
 792 043c 880F      		lsl r24
 793 043e 991F      		rol r25
 794 0440 820F      		add r24,r18
 795 0442 931F      		adc r25,r19
 796 0444 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 797 0446 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 798 0448 FC01      		movw r30,r24
 799 044a 4083      		st Z,r20
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			restart = true;
 800               		.loc 2 259 0
 801 044c 81E0      		ldi r24,lo8(1)
 802 044e 8983      		std Y+1,r24
 803               	.L38:
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 804               		.loc 2 256 0 discriminator 2
 805 0450 8A81      		ldd r24,Y+2
 806 0452 8F5F      		subi r24,lo8(-(1))
 807 0454 8A83      		std Y+2,r24
 808               	.L37:
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 809               		.loc 2 256 0 is_stmt 0 discriminator 1
 810 0456 8A81      		ldd r24,Y+2
 811 0458 8233      		cpi r24,lo8(50)
 812 045a 00F0      		brlo .L39
 813               	.LBE3:
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (restart) {
 814               		.loc 2 263 0 is_stmt 1
 815 045c 8981      		ldd r24,Y+1
 816 045e 8823      		tst r24
 817 0460 01F0      		breq .L41
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		SYS_TimerStart(timer);
 818               		.loc 2 264 0
 819 0462 8B81      		ldd r24,Y+3
 820 0464 9C81      		ldd r25,Y+4
 821 0466 0E94 0000 		call SYS_TimerStart
 822               	.L41:
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 823               		.loc 2 266 0
 824 046a 0000      		nop
 825               	/* epilogue start */
 826 046c 0F90      		pop __tmp_reg__
 827 046e 0F90      		pop __tmp_reg__
 828 0470 0F90      		pop __tmp_reg__
 829 0472 0F90      		pop __tmp_reg__
 830 0474 DF91      		pop r29
 831 0476 CF91      		pop r28
 832 0478 0895      		ret
 833               		.cfi_endproc
 834               	.LFE70:
 837               	nwkRxRejectDuplicate:
 838               	.LFB71:
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxRejectDuplicate(NwkFrameHeader_t *header)
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 839               		.loc 2 271 0
 840               		.cfi_startproc
 841 047a CF93      		push r28
 842               	.LCFI24:
 843               		.cfi_def_cfa_offset 3
 844               		.cfi_offset 28, -2
 845 047c DF93      		push r29
 846               	.LCFI25:
 847               		.cfi_def_cfa_offset 4
 848               		.cfi_offset 29, -3
 849 047e CDB7      		in r28,__SP_L__
 850 0480 DEB7      		in r29,__SP_H__
 851               	.LCFI26:
 852               		.cfi_def_cfa_register 28
 853 0482 2997      		sbiw r28,9
 854               	.LCFI27:
 855               		.cfi_def_cfa_offset 13
 856 0484 0FB6      		in __tmp_reg__,__SREG__
 857 0486 F894      		cli
 858 0488 DEBF      		out __SP_H__,r29
 859 048a 0FBE      		out __SREG__,__tmp_reg__
 860 048c CDBF      		out __SP_L__,r28
 861               	/* prologue: function */
 862               	/* frame size = 9 */
 863               	/* stack size = 11 */
 864               	.L__stack_usage = 11
 865 048e 9987      		std Y+9,r25
 866 0490 8887      		std Y+8,r24
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *entry;
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *freeEntry = NULL;
 867               		.loc 2 273 0
 868 0492 1A82      		std Y+2,__zero_reg__
 869 0494 1982      		std Y+1,__zero_reg__
 870               	.LBB4:
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 871               		.loc 2 275 0
 872 0496 1B82      		std Y+3,__zero_reg__
 873 0498 00C0      		rjmp .L43
 874               	.L49:
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 875               		.loc 2 276 0
 876 049a 8B81      		ldd r24,Y+3
 877 049c 282F      		mov r18,r24
 878 049e 30E0      		ldi r19,0
 879 04a0 C901      		movw r24,r18
 880 04a2 880F      		lsl r24
 881 04a4 991F      		rol r25
 882 04a6 880F      		lsl r24
 883 04a8 991F      		rol r25
 884 04aa 820F      		add r24,r18
 885 04ac 931F      		adc r25,r19
 886 04ae 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable))
 887 04b0 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable))
 888 04b2 9D83      		std Y+5,r25
 889 04b4 8C83      		std Y+4,r24
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (entry->ttl && header->nwkSrcAddr == entry->src) {
 890               		.loc 2 278 0
 891 04b6 8C81      		ldd r24,Y+4
 892 04b8 9D81      		ldd r25,Y+5
 893 04ba FC01      		movw r30,r24
 894 04bc 8481      		ldd r24,Z+4
 895 04be 8823      		tst r24
 896 04c0 01F4      		brne .+2
 897 04c2 00C0      		rjmp .L44
 898               		.loc 2 278 0 is_stmt 0 discriminator 1
 899 04c4 8885      		ldd r24,Y+8
 900 04c6 9985      		ldd r25,Y+9
 901 04c8 FC01      		movw r30,r24
 902 04ca 2385      		ldd r18,Z+11
 903 04cc 3485      		ldd r19,Z+12
 904 04ce 8C81      		ldd r24,Y+4
 905 04d0 9D81      		ldd r25,Y+5
 906 04d2 FC01      		movw r30,r24
 907 04d4 8081      		ld r24,Z
 908 04d6 9181      		ldd r25,Z+1
 909 04d8 2817      		cp r18,r24
 910 04da 3907      		cpc r19,r25
 911 04dc 01F0      		breq .+2
 912 04de 00C0      		rjmp .L44
 913               	.LBB5:
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			uint8_t diff = (int8_t)entry->seq - header->nwkSeq;
 914               		.loc 2 279 0 is_stmt 1
 915 04e0 8C81      		ldd r24,Y+4
 916 04e2 9D81      		ldd r25,Y+5
 917 04e4 FC01      		movw r30,r24
 918 04e6 2281      		ldd r18,Z+2
 919 04e8 8885      		ldd r24,Y+8
 920 04ea 9985      		ldd r25,Y+9
 921 04ec FC01      		movw r30,r24
 922 04ee 8285      		ldd r24,Z+10
 923 04f0 F22F      		mov r31,r18
 924 04f2 F81B      		sub r31,r24
 925 04f4 8F2F      		mov r24,r31
 926 04f6 8E83      		std Y+6,r24
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (diff < 8) {
 927               		.loc 2 281 0
 928 04f8 8E81      		ldd r24,Y+6
 929 04fa 8830      		cpi r24,lo8(8)
 930 04fc 00F4      		brsh .L45
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				if (entry->mask & (1 << diff)) {
 931               		.loc 2 282 0
 932 04fe 8C81      		ldd r24,Y+4
 933 0500 9D81      		ldd r25,Y+5
 934 0502 FC01      		movw r30,r24
 935 0504 8381      		ldd r24,Z+3
 936 0506 882F      		mov r24,r24
 937 0508 90E0      		ldi r25,0
 938 050a 2E81      		ldd r18,Y+6
 939 050c 222F      		mov r18,r18
 940 050e 30E0      		ldi r19,0
 941 0510 00C0      		rjmp 2f
 942               		1:
 943 0512 9595      		asr r25
 944 0514 8795      		ror r24
 945               		2:
 946 0516 2A95      		dec r18
 947 0518 02F4      		brpl 1b
 948 051a 8170      		andi r24,1
 949 051c 9927      		clr r25
 950 051e 892B      		or r24,r25
 951 0520 01F0      		breq .L46
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#ifdef NWK_ENABLE_ROUTING
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					if (nwkIb.addr == header->macDstAddr) {
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 						nwkRouteRemove(
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkDstAddr,
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkFcf.multicast);
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					}
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#endif
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					return true;
 952               		.loc 2 291 0
 953 0522 81E0      		ldi r24,lo8(1)
 954 0524 00C0      		rjmp .L47
 955               	.L46:
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				}
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask |= (1 << diff);
 956               		.loc 2 294 0
 957 0526 8C81      		ldd r24,Y+4
 958 0528 9D81      		ldd r25,Y+5
 959 052a FC01      		movw r30,r24
 960 052c 8381      		ldd r24,Z+3
 961 052e 482F      		mov r20,r24
 962 0530 8E81      		ldd r24,Y+6
 963 0532 282F      		mov r18,r24
 964 0534 30E0      		ldi r19,0
 965 0536 81E0      		ldi r24,lo8(1)
 966 0538 90E0      		ldi r25,0
 967 053a 00C0      		rjmp 2f
 968               		1:
 969 053c 880F      		lsl r24
 970 053e 991F      		rol r25
 971               		2:
 972 0540 2A95      		dec r18
 973 0542 02F4      		brpl 1b
 974 0544 842B      		or r24,r20
 975 0546 282F      		mov r18,r24
 976 0548 8C81      		ldd r24,Y+4
 977 054a 9D81      		ldd r25,Y+5
 978 054c FC01      		movw r30,r24
 979 054e 2383      		std Z+3,r18
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 980               		.loc 2 295 0
 981 0550 80E0      		ldi r24,0
 982 0552 00C0      		rjmp .L47
 983               	.L45:
 984               	.LBB6:
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				uint8_t shift = -(int8_t)diff;
 985               		.loc 2 297 0
 986 0554 8E81      		ldd r24,Y+6
 987 0556 8195      		neg r24
 988 0558 8F83      		std Y+7,r24
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->seq = header->nwkSeq;
 989               		.loc 2 299 0
 990 055a 8885      		ldd r24,Y+8
 991 055c 9985      		ldd r25,Y+9
 992 055e FC01      		movw r30,r24
 993 0560 2285      		ldd r18,Z+10
 994 0562 8C81      		ldd r24,Y+4
 995 0564 9D81      		ldd r25,Y+5
 996 0566 FC01      		movw r30,r24
 997 0568 2283      		std Z+2,r18
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask = (entry->mask << shift) | 1;
 998               		.loc 2 300 0
 999 056a 8C81      		ldd r24,Y+4
 1000 056c 9D81      		ldd r25,Y+5
 1001 056e FC01      		movw r30,r24
 1002 0570 8381      		ldd r24,Z+3
 1003 0572 882F      		mov r24,r24
 1004 0574 90E0      		ldi r25,0
 1005 0576 2F81      		ldd r18,Y+7
 1006 0578 222F      		mov r18,r18
 1007 057a 30E0      		ldi r19,0
 1008 057c 00C0      		rjmp 2f
 1009               		1:
 1010 057e 880F      		lsl r24
 1011 0580 991F      		rol r25
 1012               		2:
 1013 0582 2A95      		dec r18
 1014 0584 02F4      		brpl 1b
 1015 0586 8160      		ori r24,lo8(1)
 1016 0588 282F      		mov r18,r24
 1017 058a 8C81      		ldd r24,Y+4
 1018 058c 9D81      		ldd r25,Y+5
 1019 058e FC01      		movw r30,r24
 1020 0590 2383      		std Z+3,r18
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->ttl = DUPLICATE_REJECTION_TTL;
 1021               		.loc 2 301 0
 1022 0592 8C81      		ldd r24,Y+4
 1023 0594 9D81      		ldd r25,Y+5
 1024 0596 25E1      		ldi r18,lo8(21)
 1025 0598 FC01      		movw r30,r24
 1026 059a 2483      		std Z+4,r18
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1027               		.loc 2 302 0
 1028 059c 80E0      		ldi r24,0
 1029 059e 00C0      		rjmp .L47
 1030               	.L44:
 1031               	.LBE6:
 1032               	.LBE5:
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (0 == entry->ttl) {
 1033               		.loc 2 306 0
 1034 05a0 8C81      		ldd r24,Y+4
 1035 05a2 9D81      		ldd r25,Y+5
 1036 05a4 FC01      		movw r30,r24
 1037 05a6 8481      		ldd r24,Z+4
 1038 05a8 8823      		tst r24
 1039 05aa 01F4      		brne .L48
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			freeEntry = entry;
 1040               		.loc 2 307 0
 1041 05ac 8C81      		ldd r24,Y+4
 1042 05ae 9D81      		ldd r25,Y+5
 1043 05b0 9A83      		std Y+2,r25
 1044 05b2 8983      		std Y+1,r24
 1045               	.L48:
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1046               		.loc 2 275 0 discriminator 2
 1047 05b4 8B81      		ldd r24,Y+3
 1048 05b6 8F5F      		subi r24,lo8(-(1))
 1049 05b8 8B83      		std Y+3,r24
 1050               	.L43:
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1051               		.loc 2 275 0 is_stmt 0 discriminator 1
 1052 05ba 8B81      		ldd r24,Y+3
 1053 05bc 8233      		cpi r24,lo8(50)
 1054 05be 00F4      		brsh .+2
 1055 05c0 00C0      		rjmp .L49
 1056               	.LBE4:
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == freeEntry) {
 1057               		.loc 2 311 0 is_stmt 1
 1058 05c2 8981      		ldd r24,Y+1
 1059 05c4 9A81      		ldd r25,Y+2
 1060 05c6 892B      		or r24,r25
 1061 05c8 01F4      		brne .L50
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return true;
 1062               		.loc 2 312 0
 1063 05ca 81E0      		ldi r24,lo8(1)
 1064 05cc 00C0      		rjmp .L47
 1065               	.L50:
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->src = header->nwkSrcAddr;
 1066               		.loc 2 315 0
 1067 05ce 8885      		ldd r24,Y+8
 1068 05d0 9985      		ldd r25,Y+9
 1069 05d2 FC01      		movw r30,r24
 1070 05d4 2385      		ldd r18,Z+11
 1071 05d6 3485      		ldd r19,Z+12
 1072 05d8 8981      		ldd r24,Y+1
 1073 05da 9A81      		ldd r25,Y+2
 1074 05dc FC01      		movw r30,r24
 1075 05de 3183      		std Z+1,r19
 1076 05e0 2083      		st Z,r18
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->seq = header->nwkSeq;
 1077               		.loc 2 316 0
 1078 05e2 8885      		ldd r24,Y+8
 1079 05e4 9985      		ldd r25,Y+9
 1080 05e6 FC01      		movw r30,r24
 1081 05e8 2285      		ldd r18,Z+10
 1082 05ea 8981      		ldd r24,Y+1
 1083 05ec 9A81      		ldd r25,Y+2
 1084 05ee FC01      		movw r30,r24
 1085 05f0 2283      		std Z+2,r18
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->mask = 1;
 1086               		.loc 2 317 0
 1087 05f2 8981      		ldd r24,Y+1
 1088 05f4 9A81      		ldd r25,Y+2
 1089 05f6 21E0      		ldi r18,lo8(1)
 1090 05f8 FC01      		movw r30,r24
 1091 05fa 2383      		std Z+3,r18
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->ttl = DUPLICATE_REJECTION_TTL;
 1092               		.loc 2 318 0
 1093 05fc 8981      		ldd r24,Y+1
 1094 05fe 9A81      		ldd r25,Y+2
 1095 0600 25E1      		ldi r18,lo8(21)
 1096 0602 FC01      		movw r30,r24
 1097 0604 2483      		std Z+4,r18
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 1098               		.loc 2 320 0
 1099 0606 80E0      		ldi r24,lo8(nwkRxDuplicateRejectionTimer)
 1100 0608 90E0      		ldi r25,hi8(nwkRxDuplicateRejectionTimer)
 1101 060a 0E94 0000 		call SYS_TimerStart
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1102               		.loc 2 322 0
 1103 060e 80E0      		ldi r24,0
 1104               	.L47:
 1105               	/* epilogue start */
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1106               		.loc 2 323 0
 1107 0610 2996      		adiw r28,9
 1108 0612 0FB6      		in __tmp_reg__,__SREG__
 1109 0614 F894      		cli
 1110 0616 DEBF      		out __SP_H__,r29
 1111 0618 0FBE      		out __SREG__,__tmp_reg__
 1112 061a CDBF      		out __SP_L__,r28
 1113 061c DF91      		pop r29
 1114 061e CF91      		pop r28
 1115 0620 0895      		ret
 1116               		.cfi_endproc
 1117               	.LFE71:
 1120               	nwkRxSeriveDataInd:
 1121               	.LFB72:
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind)
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1122               		.loc 2 328 0
 1123               		.cfi_startproc
 1124 0622 CF93      		push r28
 1125               	.LCFI28:
 1126               		.cfi_def_cfa_offset 3
 1127               		.cfi_offset 28, -2
 1128 0624 DF93      		push r29
 1129               	.LCFI29:
 1130               		.cfi_def_cfa_offset 4
 1131               		.cfi_offset 29, -3
 1132 0626 00D0      		rcall .
 1133               	.LCFI30:
 1134               		.cfi_def_cfa_offset 6
 1135 0628 CDB7      		in r28,__SP_L__
 1136 062a DEB7      		in r29,__SP_H__
 1137               	.LCFI31:
 1138               		.cfi_def_cfa_register 28
 1139               	/* prologue: function */
 1140               	/* frame size = 2 */
 1141               	/* stack size = 4 */
 1142               	.L__stack_usage = 4
 1143 062c 9A83      		std Y+2,r25
 1144 062e 8983      		std Y+1,r24
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == (ind->options & NWK_IND_OPT_SECURED)) {
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ind->size < 1) {
 1145               		.loc 2 336 0
 1146 0630 8981      		ldd r24,Y+1
 1147 0632 9A81      		ldd r25,Y+2
 1148 0634 FC01      		movw r30,r24
 1149 0636 8285      		ldd r24,Z+10
 1150 0638 8823      		tst r24
 1151 063a 01F4      		brne .L52
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1152               		.loc 2 337 0
 1153 063c 80E0      		ldi r24,0
 1154 063e 00C0      		rjmp .L53
 1155               	.L52:
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	switch (ind->data[0]) {
 1156               		.loc 2 340 0
 1157 0640 8981      		ldd r24,Y+1
 1158 0642 9A81      		ldd r25,Y+2
 1159 0644 FC01      		movw r30,r24
 1160 0646 8085      		ldd r24,Z+8
 1161 0648 9185      		ldd r25,Z+9
 1162 064a FC01      		movw r30,r24
 1163 064c 8081      		ld r24,Z
 1164 064e 882F      		mov r24,r24
 1165 0650 90E0      		ldi r25,0
 1166 0652 892B      		or r24,r25
 1167 0654 01F4      		brne .L56
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ACK:
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkTxAckReceived(ind);
 1168               		.loc 2 342 0
 1169 0656 8981      		ldd r24,Y+1
 1170 0658 9A81      		ldd r25,Y+2
 1171 065a 0E94 0000 		call nwkTxAckReceived
 1172 065e 00C0      		rjmp .L53
 1173               	.L56:
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_ERROR:
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteErrorReceived(ind);
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTE_DISCOVERY
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REQUEST:
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryRequestReceived(ind);
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REPLY:
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryReplyReceived(ind);
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	default:
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1174               		.loc 2 360 0
 1175 0660 80E0      		ldi r24,0
 1176               	.L53:
 1177               	/* epilogue start */
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1178               		.loc 2 362 0
 1179 0662 0F90      		pop __tmp_reg__
 1180 0664 0F90      		pop __tmp_reg__
 1181 0666 DF91      		pop r29
 1182 0668 CF91      		pop r28
 1183 066a 0895      		ret
 1184               		.cfi_endproc
 1185               	.LFE72:
 1188               	nwkRxHandleReceivedFrame:
 1189               	.LFB73:
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleReceivedFrame(NwkFrame_t *frame)
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1190               		.loc 2 367 0
 1191               		.cfi_startproc
 1192 066c CF93      		push r28
 1193               	.LCFI32:
 1194               		.cfi_def_cfa_offset 3
 1195               		.cfi_offset 28, -2
 1196 066e DF93      		push r29
 1197               	.LCFI33:
 1198               		.cfi_def_cfa_offset 4
 1199               		.cfi_offset 29, -3
 1200 0670 CDB7      		in r28,__SP_L__
 1201 0672 DEB7      		in r29,__SP_H__
 1202               	.LCFI34:
 1203               		.cfi_def_cfa_register 28
 1204 0674 2897      		sbiw r28,8
 1205               	.LCFI35:
 1206               		.cfi_def_cfa_offset 12
 1207 0676 0FB6      		in __tmp_reg__,__SREG__
 1208 0678 F894      		cli
 1209 067a DEBF      		out __SP_H__,r29
 1210 067c 0FBE      		out __SREG__,__tmp_reg__
 1211 067e CDBF      		out __SP_L__,r28
 1212               	/* prologue: function */
 1213               	/* frame size = 8 */
 1214               	/* stack size = 10 */
 1215               	.L__stack_usage = 10
 1216 0680 9887      		std Y+8,r25
 1217 0682 8F83      		std Y+7,r24
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1218               		.loc 2 368 0
 1219 0684 8F81      		ldd r24,Y+7
 1220 0686 9885      		ldd r25,Y+8
 1221 0688 0296      		adiw r24,2
 1222 068a 9B83      		std Y+3,r25
 1223 068c 8A83      		std Y+2,r24
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1224               		.loc 2 370 0
 1225 068e 8F81      		ldd r24,Y+7
 1226 0690 9885      		ldd r25,Y+8
 1227 0692 24E2      		ldi r18,lo8(36)
 1228 0694 FC01      		movw r30,r24
 1229 0696 2083      		st Z,r18
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifndef NWK_ENABLE_SECURITY
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.security) {
 1230               		.loc 2 373 0
 1231 0698 8A81      		ldd r24,Y+2
 1232 069a 9B81      		ldd r25,Y+3
 1233 069c FC01      		movw r30,r24
 1234 069e 8185      		ldd r24,Z+9
 1235 06a0 8270      		andi r24,lo8(2)
 1236 06a2 8823      		tst r24
 1237 06a4 01F0      		breq .+2
 1238 06a6 00C0      		rjmp .L78
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast && header->nwkFcf.ackRequest) {
 1239               		.loc 2 380 0
 1240 06a8 8A81      		ldd r24,Y+2
 1241 06aa 9B81      		ldd r25,Y+3
 1242 06ac FC01      		movw r30,r24
 1243 06ae 8185      		ldd r24,Z+9
 1244 06b0 8870      		andi r24,lo8(8)
 1245 06b2 8823      		tst r24
 1246 06b4 01F0      		breq .L60
 1247               		.loc 2 380 0 is_stmt 0 discriminator 1
 1248 06b6 8A81      		ldd r24,Y+2
 1249 06b8 9B81      		ldd r25,Y+3
 1250 06ba FC01      		movw r30,r24
 1251 06bc 8185      		ldd r24,Z+9
 1252 06be 8170      		andi r24,lo8(1)
 1253 06c0 8823      		tst r24
 1254 06c2 01F0      		breq .+2
 1255 06c4 00C0      		rjmp .L79
 1256               	.L60:
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #else
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == header->macDstPanId)
 1257               		.loc 2 391 0 is_stmt 1
 1258 06c6 8A81      		ldd r24,Y+2
 1259 06c8 9B81      		ldd r25,Y+3
 1260 06ca FC01      		movw r30,r24
 1261 06cc 8381      		ldd r24,Z+3
 1262 06ce 9481      		ldd r25,Z+4
 1263 06d0 0196      		adiw r24,1
 1264 06d2 01F4      		brne .L61
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR == header->nwkDstAddr)
 1265               		.loc 2 393 0
 1266 06d4 2091 0000 		lds r18,nwkIb
 1267 06d8 3091 0000 		lds r19,nwkIb+1
 1268 06dc 8A81      		ldd r24,Y+2
 1269 06de 9B81      		ldd r25,Y+3
 1270 06e0 FC01      		movw r30,r24
 1271 06e2 8585      		ldd r24,Z+13
 1272 06e4 9685      		ldd r25,Z+14
 1273 06e6 2817      		cp r18,r24
 1274 06e8 3907      		cpc r19,r25
 1275 06ea 01F0      		breq .L62
 1276               		.loc 2 393 0 is_stmt 0 discriminator 1
 1277 06ec 8A81      		ldd r24,Y+2
 1278 06ee 9B81      		ldd r25,Y+3
 1279 06f0 FC01      		movw r30,r24
 1280 06f2 8585      		ldd r24,Z+13
 1281 06f4 9685      		ldd r25,Z+14
 1282 06f6 0196      		adiw r24,1
 1283 06f8 01F0      		breq .+2
 1284 06fa 00C0      		rjmp .L80
 1285               	.L62:
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security)
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			{
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1286               		.loc 2 402 0 is_stmt 1
 1287 06fc 8F81      		ldd r24,Y+7
 1288 06fe 9885      		ldd r25,Y+8
 1289 0700 22E2      		ldi r18,lo8(34)
 1290 0702 FC01      		movw r30,r24
 1291 0704 2083      		st Z,r18
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 1292               		.loc 2 405 0
 1293 0706 00C0      		rjmp .L80
 1294               	.L61:
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ADDRESS_FILTER
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (!NWK_FilterAddress(header->macSrcAddr, &frame->rx.lqi)) {
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == header->nwkDstAddr && header->nwkFcf.ackRequest)
 1295               		.loc 2 415 0
 1296 0708 8A81      		ldd r24,Y+2
 1297 070a 9B81      		ldd r25,Y+3
 1298 070c FC01      		movw r30,r24
 1299 070e 8585      		ldd r24,Z+13
 1300 0710 9685      		ldd r25,Z+14
 1301 0712 0196      		adiw r24,1
 1302 0714 01F4      		brne .L64
 1303               		.loc 2 415 0 is_stmt 0 discriminator 1
 1304 0716 8A81      		ldd r24,Y+2
 1305 0718 9B81      		ldd r25,Y+3
 1306 071a FC01      		movw r30,r24
 1307 071c 8185      		ldd r24,Z+9
 1308 071e 8170      		andi r24,lo8(1)
 1309 0720 8823      		tst r24
 1310 0722 01F0      		breq .+2
 1311 0724 00C0      		rjmp .L81
 1312               	.L64:
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkIb.addr == header->nwkSrcAddr)
 1313               		.loc 2 420 0 is_stmt 1
 1314 0726 2091 0000 		lds r18,nwkIb
 1315 072a 3091 0000 		lds r19,nwkIb+1
 1316 072e 8A81      		ldd r24,Y+2
 1317 0730 9B81      		ldd r25,Y+3
 1318 0732 FC01      		movw r30,r24
 1319 0734 8385      		ldd r24,Z+11
 1320 0736 9485      		ldd r25,Z+12
 1321 0738 2817      		cp r18,r24
 1322 073a 3907      		cpc r19,r25
 1323 073c 01F4      		brne .+2
 1324 073e 00C0      		rjmp .L82
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRouteFrameReceived(frame);
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkRxRejectDuplicate(header))
 1325               		.loc 2 429 0
 1326 0740 8A81      		ldd r24,Y+2
 1327 0742 9B81      		ldd r25,Y+3
 1328 0744 0E94 0000 		call nwkRxRejectDuplicate
 1329 0748 8823      		tst r24
 1330 074a 01F0      		breq .+2
 1331 074c 00C0      		rjmp .L83
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 1332               		.loc 2 435 0
 1333 074e 8A81      		ldd r24,Y+2
 1334 0750 9B81      		ldd r25,Y+3
 1335 0752 FC01      		movw r30,r24
 1336 0754 8185      		ldd r24,Z+9
 1337 0756 8870      		andi r24,lo8(8)
 1338 0758 8823      		tst r24
 1339 075a 01F4      		brne .+2
 1340 075c 00C0      		rjmp .L67
 1341               	.LBB7:
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameMulticastHeader_t *mcHeader
 1342               		.loc 2 436 0
 1343 075e 8F81      		ldd r24,Y+7
 1344 0760 9885      		ldd r25,Y+8
 1345 0762 8F57      		subi r24,127
 1346 0764 9F4F      		sbci r25,-1
 1347 0766 FC01      		movw r30,r24
 1348 0768 8081      		ld r24,Z
 1349 076a 9181      		ldd r25,Z+1
 1350 076c 9D83      		std Y+5,r25
 1351 076e 8C83      		std Y+4,r24
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			= (NwkFrameMulticastHeader_t *)frame->payload;
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool member = NWK_GroupIsMember(header->nwkDstAddr);
 1352               		.loc 2 438 0
 1353 0770 8A81      		ldd r24,Y+2
 1354 0772 9B81      		ldd r25,Y+3
 1355 0774 FC01      		movw r30,r24
 1356 0776 8585      		ldd r24,Z+13
 1357 0778 9685      		ldd r25,Z+14
 1358 077a 0E94 0000 		call NWK_GroupIsMember
 1359 077e 8E83      		std Y+6,r24
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool broadcast = false;
 1360               		.loc 2 439 0
 1361 0780 1982      		std Y+1,__zero_reg__
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 1362               		.loc 2 441 0
 1363 0782 8A81      		ldd r24,Y+2
 1364 0784 9B81      		ldd r25,Y+3
 1365 0786 FC01      		movw r30,r24
 1366 0788 8581      		ldd r24,Z+5
 1367 078a 9681      		ldd r25,Z+6
 1368 078c 0196      		adiw r24,1
 1369 078e 01F0      		breq .+2
 1370 0790 00C0      		rjmp .L68
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1371               		.loc 2 442 0
 1372 0792 8E81      		ldd r24,Y+6
 1373 0794 8823      		tst r24
 1374 0796 01F0      		breq .L69
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->memberRadius > 0;
 1375               		.loc 2 443 0
 1376 0798 8C81      		ldd r24,Y+4
 1377 079a 9D81      		ldd r25,Y+5
 1378 079c FC01      		movw r30,r24
 1379 079e 8181      		ldd r24,Z+1
 1380 07a0 8F70      		andi r24,lo8(15)
 1381 07a2 882F      		mov r24,r24
 1382 07a4 90E0      		ldi r25,0
 1383 07a6 21E0      		ldi r18,lo8(1)
 1384 07a8 1816      		cp __zero_reg__,r24
 1385 07aa 1906      		cpc __zero_reg__,r25
 1386 07ac 04F0      		brlt .L70
 1387 07ae 20E0      		ldi r18,0
 1388               	.L70:
 1389 07b0 2983      		std Y+1,r18
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius--;
 1390               		.loc 2 444 0
 1391 07b2 8C81      		ldd r24,Y+4
 1392 07b4 9D81      		ldd r25,Y+5
 1393 07b6 FC01      		movw r30,r24
 1394 07b8 8181      		ldd r24,Z+1
 1395 07ba 8F70      		andi r24,lo8(15)
 1396 07bc 2FE0      		ldi r18,lo8(15)
 1397 07be 280F      		add r18,r24
 1398 07c0 2F70      		andi r18,lo8(15)
 1399 07c2 8C81      		ldd r24,Y+4
 1400 07c4 9D81      		ldd r25,Y+5
 1401 07c6 2F70      		andi r18,lo8(15)
 1402 07c8 FC01      		movw r30,r24
 1403 07ca 3181      		ldd r19,Z+1
 1404 07cc 307F      		andi r19,lo8(-16)
 1405 07ce 232B      		or r18,r19
 1406 07d0 FC01      		movw r30,r24
 1407 07d2 2183      		std Z+1,r18
 445:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxNonMemberRadius;
 1408               		.loc 2 446 0
 1409 07d4 8C81      		ldd r24,Y+4
 1410 07d6 9D81      		ldd r25,Y+5
 1411 07d8 FC01      		movw r30,r24
 1412 07da 8081      		ld r24,Z
 1413 07dc 282F      		mov r18,r24
 1414 07de 2295      		swap r18
 1415 07e0 2F70      		andi r18,lo8(15)
 1416 07e2 8C81      		ldd r24,Y+4
 1417 07e4 9D81      		ldd r25,Y+5
 1418 07e6 2F70      		andi r18,lo8(15)
 1419 07e8 FC01      		movw r30,r24
 1420 07ea 3081      		ld r19,Z
 1421 07ec 307F      		andi r19,lo8(-16)
 1422 07ee 232B      		or r18,r19
 1423 07f0 FC01      		movw r30,r24
 1424 07f2 2083      		st Z,r18
 1425 07f4 00C0      		rjmp .L73
 1426               	.L69:
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->nonMemberRadius > 0;
 1427               		.loc 2 448 0
 1428 07f6 8C81      		ldd r24,Y+4
 1429 07f8 9D81      		ldd r25,Y+5
 1430 07fa FC01      		movw r30,r24
 1431 07fc 8081      		ld r24,Z
 1432 07fe 8F70      		andi r24,lo8(15)
 1433 0800 882F      		mov r24,r24
 1434 0802 90E0      		ldi r25,0
 1435 0804 21E0      		ldi r18,lo8(1)
 1436 0806 1816      		cp __zero_reg__,r24
 1437 0808 1906      		cpc __zero_reg__,r25
 1438 080a 04F0      		brlt .L72
 1439 080c 20E0      		ldi r18,0
 1440               	.L72:
 1441 080e 2983      		std Y+1,r18
 449:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius--;
 1442               		.loc 2 449 0
 1443 0810 8C81      		ldd r24,Y+4
 1444 0812 9D81      		ldd r25,Y+5
 1445 0814 FC01      		movw r30,r24
 1446 0816 8081      		ld r24,Z
 1447 0818 8F70      		andi r24,lo8(15)
 1448 081a 2FE0      		ldi r18,lo8(15)
 1449 081c 280F      		add r18,r24
 1450 081e 2F70      		andi r18,lo8(15)
 1451 0820 8C81      		ldd r24,Y+4
 1452 0822 9D81      		ldd r25,Y+5
 1453 0824 2F70      		andi r18,lo8(15)
 1454 0826 FC01      		movw r30,r24
 1455 0828 3081      		ld r19,Z
 1456 082a 307F      		andi r19,lo8(-16)
 1457 082c 232B      		or r18,r19
 1458 082e FC01      		movw r30,r24
 1459 0830 2083      		st Z,r18
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius
 451:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxMemberRadius;
 1460               		.loc 2 451 0
 1461 0832 8C81      		ldd r24,Y+4
 1462 0834 9D81      		ldd r25,Y+5
 1463 0836 FC01      		movw r30,r24
 1464 0838 8181      		ldd r24,Z+1
 1465 083a 282F      		mov r18,r24
 1466 083c 2295      		swap r18
 1467 083e 2F70      		andi r18,lo8(15)
 1468 0840 8C81      		ldd r24,Y+4
 1469 0842 9D81      		ldd r25,Y+5
 1470 0844 2F70      		andi r18,lo8(15)
 1471 0846 FC01      		movw r30,r24
 1472 0848 3181      		ldd r19,Z+1
 1473 084a 307F      		andi r19,lo8(-16)
 1474 084c 232B      		or r18,r19
 1475 084e FC01      		movw r30,r24
 1476 0850 2183      		std Z+1,r18
 1477 0852 00C0      		rjmp .L73
 1478               	.L68:
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		} else {
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1479               		.loc 2 454 0
 1480 0854 8E81      		ldd r24,Y+6
 1481 0856 8823      		tst r24
 1482 0858 01F0      		breq .L73
 455:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = true;
 1483               		.loc 2 455 0
 1484 085a 81E0      		ldi r24,lo8(1)
 1485 085c 8983      		std Y+1,r24
 456:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkFcf.linkLocal = 1;
 1486               		.loc 2 456 0
 1487 085e 8A81      		ldd r24,Y+2
 1488 0860 9B81      		ldd r25,Y+3
 1489 0862 FC01      		movw r30,r24
 1490 0864 2185      		ldd r18,Z+9
 1491 0866 2460      		ori r18,lo8(4)
 1492 0868 FC01      		movw r30,r24
 1493 086a 2187      		std Z+9,r18
 1494               	.L73:
 457:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 458:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_ROUTING
 460:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else {
 461:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_ROUTE;
 462:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 463:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 464:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 465:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 466:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (broadcast) {
 1495               		.loc 2 466 0
 1496 086c 8981      		ldd r24,Y+1
 1497 086e 8823      		tst r24
 1498 0870 01F0      		breq .L74
 467:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1499               		.loc 2 467 0
 1500 0872 8F81      		ldd r24,Y+7
 1501 0874 9885      		ldd r25,Y+8
 1502 0876 0E94 0000 		call nwkTxBroadcastFrame
 1503               	.L74:
 468:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 469:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 470:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (member) {
 1504               		.loc 2 470 0
 1505 087a 8E81      		ldd r24,Y+6
 1506 087c 8823      		tst r24
 1507 087e 01F4      		brne .+2
 1508 0880 00C0      		rjmp .L57
 471:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 1509               		.loc 2 471 0
 1510 0882 8F81      		ldd r24,Y+7
 1511 0884 9885      		ldd r25,Y+8
 1512 0886 8F57      		subi r24,127
 1513 0888 9F4F      		sbci r25,-1
 1514 088a FC01      		movw r30,r24
 1515 088c 8081      		ld r24,Z
 1516 088e 9181      		ldd r25,Z+1
 1517 0890 9C01      		movw r18,r24
 1518 0892 2E5F      		subi r18,-2
 1519 0894 3F4F      		sbci r19,-1
 1520 0896 8F81      		ldd r24,Y+7
 1521 0898 9885      		ldd r25,Y+8
 1522 089a 8F57      		subi r24,127
 1523 089c 9F4F      		sbci r25,-1
 1524 089e FC01      		movw r30,r24
 1525 08a0 3183      		std Z+1,r19
 1526 08a2 2083      		st Z,r18
 472:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 473:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 474:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 475:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 476:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 477:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 478:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1527               		.loc 2 478 0
 1528 08a4 8F81      		ldd r24,Y+7
 1529 08a6 9885      		ldd r25,Y+8
 1530 08a8 22E2      		ldi r18,lo8(34)
 1531 08aa FC01      		movw r30,r24
 1532 08ac 2083      		st Z,r18
 1533 08ae 00C0      		rjmp .L57
 1534               	.L67:
 1535               	.LBE7:
 479:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 480:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else
 481:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif /* NWK_ENABLE_MULTICAST */
 482:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr && nwkIb.addr !=
 1536               		.loc 2 483 0
 1537 08b0 8A81      		ldd r24,Y+2
 1538 08b2 9B81      		ldd r25,Y+3
 1539 08b4 FC01      		movw r30,r24
 1540 08b6 8581      		ldd r24,Z+5
 1541 08b8 9681      		ldd r25,Z+6
 1542 08ba 0196      		adiw r24,1
 1543 08bc 01F4      		brne .L76
 1544               		.loc 2 483 0 is_stmt 0 discriminator 1
 1545 08be 2091 0000 		lds r18,nwkIb
 1546 08c2 3091 0000 		lds r19,nwkIb+1
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1547               		.loc 2 484 0 is_stmt 1 discriminator 1
 1548 08c6 8A81      		ldd r24,Y+2
 1549 08c8 9B81      		ldd r25,Y+3
 1550 08ca FC01      		movw r30,r24
 1551 08cc 8585      		ldd r24,Z+13
 1552 08ce 9685      		ldd r25,Z+14
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1553               		.loc 2 483 0 discriminator 1
 1554 08d0 2817      		cp r18,r24
 1555 08d2 3907      		cpc r19,r25
 1556 08d4 01F0      		breq .L76
 485:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				0 == header->nwkFcf.linkLocal) {
 1557               		.loc 2 485 0
 1558 08d6 8A81      		ldd r24,Y+2
 1559 08d8 9B81      		ldd r25,Y+3
 1560 08da FC01      		movw r30,r24
 1561 08dc 8185      		ldd r24,Z+9
 1562 08de 8470      		andi r24,lo8(4)
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1563               		.loc 2 484 0
 1564 08e0 8823      		tst r24
 1565 08e2 01F4      		brne .L76
 486:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1566               		.loc 2 486 0
 1567 08e4 8F81      		ldd r24,Y+7
 1568 08e6 9885      		ldd r25,Y+8
 1569 08e8 0E94 0000 		call nwkTxBroadcastFrame
 1570               	.L76:
 487:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR ==
 1571               		.loc 2 489 0
 1572 08ec 2091 0000 		lds r18,nwkIb
 1573 08f0 3091 0000 		lds r19,nwkIb+1
 1574 08f4 8A81      		ldd r24,Y+2
 1575 08f6 9B81      		ldd r25,Y+3
 1576 08f8 FC01      		movw r30,r24
 1577 08fa 8585      		ldd r24,Z+13
 1578 08fc 9685      		ldd r25,Z+14
 1579 08fe 2817      		cp r18,r24
 1580 0900 3907      		cpc r19,r25
 1581 0902 01F0      		breq .L77
 490:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1582               		.loc 2 490 0 discriminator 1
 1583 0904 8A81      		ldd r24,Y+2
 1584 0906 9B81      		ldd r25,Y+3
 1585 0908 FC01      		movw r30,r24
 1586 090a 8585      		ldd r24,Z+13
 1587 090c 9685      		ldd r25,Z+14
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1588               		.loc 2 489 0 discriminator 1
 1589 090e 0196      		adiw r24,1
 1590 0910 01F4      		brne .L57
 1591               	.L77:
 491:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 492:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 495:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 496:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1592               		.loc 2 496 0
 1593 0912 8F81      		ldd r24,Y+7
 1594 0914 9885      		ldd r25,Y+8
 1595 0916 22E2      		ldi r18,lo8(34)
 1596 0918 FC01      		movw r30,r24
 1597 091a 2083      		st Z,r18
 1598 091c 00C0      		rjmp .L57
 1599               	.L78:
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1600               		.loc 2 374 0
 1601 091e 0000      		nop
 1602 0920 00C0      		rjmp .L57
 1603               	.L79:
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1604               		.loc 2 381 0
 1605 0922 0000      		nop
 1606 0924 00C0      		rjmp .L57
 1607               	.L80:
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1608               		.loc 2 405 0
 1609 0926 0000      		nop
 1610 0928 00C0      		rjmp .L57
 1611               	.L81:
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1612               		.loc 2 417 0
 1613 092a 0000      		nop
 1614 092c 00C0      		rjmp .L57
 1615               	.L82:
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1616               		.loc 2 422 0
 1617 092e 0000      		nop
 1618 0930 00C0      		rjmp .L57
 1619               	.L83:
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1620               		.loc 2 431 0
 1621 0932 0000      		nop
 1622               	.L57:
 1623               	/* epilogue start */
 497:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #ifdef NWK_ENABLE_ROUTING
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if (nwkIb.addr == header->macDstAddr) {
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_ROUTE;
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #endif
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1624               		.loc 2 505 0
 1625 0934 2896      		adiw r28,8
 1626 0936 0FB6      		in __tmp_reg__,__SREG__
 1627 0938 F894      		cli
 1628 093a DEBF      		out __SP_H__,r29
 1629 093c 0FBE      		out __SREG__,__tmp_reg__
 1630 093e CDBF      		out __SP_L__,r28
 1631 0940 DF91      		pop r29
 1632 0942 CF91      		pop r28
 1633 0944 0895      		ret
 1634               		.cfi_endproc
 1635               	.LFE73:
 1638               	nwkRxIndicateDataFrame:
 1639               	.LFB74:
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 507:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 509:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateDataFrame(NwkFrame_t *frame)
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1640               		.loc 2 510 0
 1641               		.cfi_startproc
 1642 0946 CF93      		push r28
 1643               	.LCFI36:
 1644               		.cfi_def_cfa_offset 3
 1645               		.cfi_offset 28, -2
 1646 0948 DF93      		push r29
 1647               	.LCFI37:
 1648               		.cfi_def_cfa_offset 4
 1649               		.cfi_offset 29, -3
 1650 094a CDB7      		in r28,__SP_L__
 1651 094c DEB7      		in r29,__SP_H__
 1652               	.LCFI38:
 1653               		.cfi_def_cfa_register 28
 1654 094e 6197      		sbiw r28,17
 1655               	.LCFI39:
 1656               		.cfi_def_cfa_offset 21
 1657 0950 0FB6      		in __tmp_reg__,__SREG__
 1658 0952 F894      		cli
 1659 0954 DEBF      		out __SP_H__,r29
 1660 0956 0FBE      		out __SREG__,__tmp_reg__
 1661 0958 CDBF      		out __SP_L__,r28
 1662               	/* prologue: function */
 1663               	/* frame size = 17 */
 1664               	/* stack size = 19 */
 1665               	.L__stack_usage = 19
 1666 095a 998B      		std Y+17,r25
 1667 095c 888B      		std Y+16,r24
 511:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1668               		.loc 2 511 0
 1669 095e 8889      		ldd r24,Y+16
 1670 0960 9989      		ldd r25,Y+17
 1671 0962 0296      		adiw r24,2
 1672 0964 9A83      		std Y+2,r25
 1673 0966 8983      		std Y+1,r24
 512:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 513:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 514:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[header->nwkDstEndpoint]) {
 1674               		.loc 2 514 0
 1675 0968 8981      		ldd r24,Y+1
 1676 096a 9A81      		ldd r25,Y+2
 1677 096c FC01      		movw r30,r24
 1678 096e 8785      		ldd r24,Z+15
 1679 0970 8295      		swap r24
 1680 0972 8F70      		andi r24,lo8(15)
 1681 0974 882F      		mov r24,r24
 1682 0976 90E0      		ldi r25,0
 1683 0978 0396      		adiw r24,3
 1684 097a 880F      		lsl r24
 1685 097c 991F      		rol r25
 1686 097e 8050      		subi r24,lo8(-(nwkIb))
 1687 0980 9040      		sbci r25,hi8(-(nwkIb))
 1688 0982 FC01      		movw r30,r24
 1689 0984 8081      		ld r24,Z
 1690 0986 9181      		ldd r25,Z+1
 1691 0988 892B      		or r24,r25
 1692 098a 01F4      		brne .L85
 515:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1693               		.loc 2 515 0
 1694 098c 80E0      		ldi r24,0
 1695 098e 00C0      		rjmp .L100
 1696               	.L85:
 516:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 517:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 518:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = header->nwkSrcAddr;
 1697               		.loc 2 518 0
 1698 0990 8981      		ldd r24,Y+1
 1699 0992 9A81      		ldd r25,Y+2
 1700 0994 FC01      		movw r30,r24
 1701 0996 8385      		ldd r24,Z+11
 1702 0998 9485      		ldd r25,Z+12
 1703 099a 9C83      		std Y+4,r25
 1704 099c 8B83      		std Y+3,r24
 519:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = header->nwkDstAddr;
 1705               		.loc 2 519 0
 1706 099e 8981      		ldd r24,Y+1
 1707 09a0 9A81      		ldd r25,Y+2
 1708 09a2 FC01      		movw r30,r24
 1709 09a4 8585      		ldd r24,Z+13
 1710 09a6 9685      		ldd r25,Z+14
 1711 09a8 9E83      		std Y+6,r25
 1712 09aa 8D83      		std Y+5,r24
 520:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = header->nwkSrcEndpoint;
 1713               		.loc 2 520 0
 1714 09ac 8981      		ldd r24,Y+1
 1715 09ae 9A81      		ldd r25,Y+2
 1716 09b0 FC01      		movw r30,r24
 1717 09b2 8785      		ldd r24,Z+15
 1718 09b4 8F70      		andi r24,lo8(15)
 1719 09b6 8F83      		std Y+7,r24
 521:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = header->nwkDstEndpoint;
 1720               		.loc 2 521 0
 1721 09b8 8981      		ldd r24,Y+1
 1722 09ba 9A81      		ldd r25,Y+2
 1723 09bc FC01      		movw r30,r24
 1724 09be 8785      		ldd r24,Z+15
 1725 09c0 8295      		swap r24
 1726 09c2 8F70      		andi r24,lo8(15)
 1727 09c4 8887      		std Y+8,r24
 522:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1728               		.loc 2 522 0
 1729 09c6 8889      		ldd r24,Y+16
 1730 09c8 9989      		ldd r25,Y+17
 1731 09ca 8F57      		subi r24,127
 1732 09cc 9F4F      		sbci r25,-1
 1733 09ce FC01      		movw r30,r24
 1734 09d0 8081      		ld r24,Z
 1735 09d2 9181      		ldd r25,Z+1
 1736 09d4 9C87      		std Y+12,r25
 1737 09d6 8B87      		std Y+11,r24
 523:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1738               		.loc 2 523 0
 1739 09d8 8889      		ldd r24,Y+16
 1740 09da 9989      		ldd r25,Y+17
 1741 09dc 0E94 0000 		call nwkFramePayloadSize
 1742 09e0 8D87      		std Y+13,r24
 524:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1743               		.loc 2 524 0
 1744 09e2 8889      		ldd r24,Y+16
 1745 09e4 9989      		ldd r25,Y+17
 1746 09e6 8D57      		subi r24,125
 1747 09e8 9F4F      		sbci r25,-1
 1748 09ea FC01      		movw r30,r24
 1749 09ec 8081      		ld r24,Z
 1750 09ee 8E87      		std Y+14,r24
 525:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1751               		.loc 2 525 0
 1752 09f0 8889      		ldd r24,Y+16
 1753 09f2 9989      		ldd r25,Y+17
 1754 09f4 8C57      		subi r24,124
 1755 09f6 9F4F      		sbci r25,-1
 1756 09f8 FC01      		movw r30,r24
 1757 09fa 8081      		ld r24,Z
 1758 09fc 8F87      		std Y+15,r24
 526:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 527:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK_REQUESTED : 0;
 1759               		.loc 2 527 0
 1760 09fe 8981      		ldd r24,Y+1
 1761 0a00 9A81      		ldd r25,Y+2
 1762 0a02 FC01      		movw r30,r24
 1763 0a04 8185      		ldd r24,Z+9
 1764 0a06 982F      		mov r25,r24
 1765 0a08 9170      		andi r25,lo8(1)
 1766 0a0a 81E0      		ldi r24,lo8(1)
 1767 0a0c 9923      		tst r25
 1768 0a0e 01F4      		brne .L87
 1769 0a10 80E0      		ldi r24,0
 1770               	.L87:
 1771 0a12 882F      		mov r24,r24
 1772 0a14 90E0      		ldi r25,0
 1773 0a16 9A87      		std Y+10,r25
 1774 0a18 8987      		std Y+9,r24
 528:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECURED : 0;
 1775               		.loc 2 528 0
 1776 0a1a 2985      		ldd r18,Y+9
 1777 0a1c 3A85      		ldd r19,Y+10
 1778 0a1e 8981      		ldd r24,Y+1
 1779 0a20 9A81      		ldd r25,Y+2
 1780 0a22 FC01      		movw r30,r24
 1781 0a24 8185      		ldd r24,Z+9
 1782 0a26 882F      		mov r24,r24
 1783 0a28 90E0      		ldi r25,0
 1784 0a2a 8270      		andi r24,2
 1785 0a2c 9927      		clr r25
 1786 0a2e 822B      		or r24,r18
 1787 0a30 932B      		or r25,r19
 1788 0a32 9A87      		std Y+10,r25
 1789 0a34 8987      		std Y+9,r24
 529:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LINK_LOCAL : 0;
 1790               		.loc 2 529 0
 1791 0a36 2985      		ldd r18,Y+9
 1792 0a38 3A85      		ldd r19,Y+10
 1793 0a3a 8981      		ldd r24,Y+1
 1794 0a3c 9A81      		ldd r25,Y+2
 1795 0a3e FC01      		movw r30,r24
 1796 0a40 8185      		ldd r24,Z+9
 1797 0a42 8470      		andi r24,lo8(4)
 1798 0a44 8823      		tst r24
 1799 0a46 01F0      		breq .L88
 1800               		.loc 2 529 0 is_stmt 0 discriminator 1
 1801 0a48 80E2      		ldi r24,lo8(32)
 1802 0a4a 90E0      		ldi r25,0
 1803 0a4c 00C0      		rjmp .L89
 1804               	.L88:
 1805               		.loc 2 529 0 discriminator 2
 1806 0a4e 80E0      		ldi r24,0
 1807 0a50 90E0      		ldi r25,0
 1808               	.L89:
 1809               		.loc 2 529 0 discriminator 4
 1810 0a52 822B      		or r24,r18
 1811 0a54 932B      		or r25,r19
 1812 0a56 9A87      		std Y+10,r25
 1813 0a58 8987      		std Y+9,r24
 530:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MULTICAST : 0;
 1814               		.loc 2 530 0 is_stmt 1 discriminator 4
 1815 0a5a 2985      		ldd r18,Y+9
 1816 0a5c 3A85      		ldd r19,Y+10
 1817 0a5e 8981      		ldd r24,Y+1
 1818 0a60 9A81      		ldd r25,Y+2
 1819 0a62 FC01      		movw r30,r24
 1820 0a64 8185      		ldd r24,Z+9
 1821 0a66 8870      		andi r24,lo8(8)
 1822 0a68 8823      		tst r24
 1823 0a6a 01F0      		breq .L90
 1824               		.loc 2 530 0 is_stmt 0 discriminator 1
 1825 0a6c 80E4      		ldi r24,lo8(64)
 1826 0a6e 90E0      		ldi r25,0
 1827 0a70 00C0      		rjmp .L91
 1828               	.L90:
 1829               		.loc 2 530 0 discriminator 2
 1830 0a72 80E0      		ldi r24,0
 1831 0a74 90E0      		ldi r25,0
 1832               	.L91:
 1833               		.loc 2 530 0 discriminator 4
 1834 0a76 822B      		or r24,r18
 1835 0a78 932B      		or r25,r19
 1836 0a7a 9A87      		std Y+10,r25
 1837 0a7c 8987      		std Y+9,r24
 531:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.beacon) ? NWK_IND_OPT_BEACON : 0;
 1838               		.loc 2 531 0 is_stmt 1 discriminator 4
 1839 0a7e 2985      		ldd r18,Y+9
 1840 0a80 3A85      		ldd r19,Y+10
 1841 0a82 8981      		ldd r24,Y+1
 1842 0a84 9A81      		ldd r25,Y+2
 1843 0a86 FC01      		movw r30,r24
 1844 0a88 8185      		ldd r24,Z+9
 1845 0a8a 8071      		andi r24,lo8(16)
 1846 0a8c 8823      		tst r24
 1847 0a8e 01F0      		breq .L92
 1848               		.loc 2 531 0 is_stmt 0 discriminator 1
 1849 0a90 80E8      		ldi r24,lo8(-128)
 1850 0a92 90E0      		ldi r25,0
 1851 0a94 00C0      		rjmp .L93
 1852               	.L92:
 1853               		.loc 2 531 0 discriminator 2
 1854 0a96 80E0      		ldi r24,0
 1855 0a98 90E0      		ldi r25,0
 1856               	.L93:
 1857               		.loc 2 531 0 discriminator 4
 1858 0a9a 822B      		or r24,r18
 1859 0a9c 932B      		or r25,r19
 1860 0a9e 9A87      		std Y+10,r25
 1861 0aa0 8987      		std Y+9,r24
 532:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_ADDR == header->nwkDstAddr) ? NWK_IND_OPT_BROADCAST : 0;
 1862               		.loc 2 532 0 is_stmt 1 discriminator 4
 1863 0aa2 2985      		ldd r18,Y+9
 1864 0aa4 3A85      		ldd r19,Y+10
 1865 0aa6 8981      		ldd r24,Y+1
 1866 0aa8 9A81      		ldd r25,Y+2
 1867 0aaa FC01      		movw r30,r24
 1868 0aac 8585      		ldd r24,Z+13
 1869 0aae 9685      		ldd r25,Z+14
 1870 0ab0 0196      		adiw r24,1
 1871 0ab2 01F4      		brne .L94
 1872               		.loc 2 532 0 is_stmt 0 discriminator 1
 1873 0ab4 84E0      		ldi r24,lo8(4)
 1874 0ab6 90E0      		ldi r25,0
 1875 0ab8 00C0      		rjmp .L95
 1876               	.L94:
 1877               		.loc 2 532 0 discriminator 2
 1878 0aba 80E0      		ldi r24,0
 1879 0abc 90E0      		ldi r25,0
 1880               	.L95:
 1881               		.loc 2 532 0 discriminator 4
 1882 0abe 822B      		or r24,r18
 1883 0ac0 932B      		or r25,r19
 1884 0ac2 9A87      		std Y+10,r25
 1885 0ac4 8987      		std Y+9,r24
 533:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (header->nwkSrcAddr == header->macSrcAddr) ? NWK_IND_OPT_LOCAL : 0;
 1886               		.loc 2 533 0 is_stmt 1 discriminator 4
 1887 0ac6 2985      		ldd r18,Y+9
 1888 0ac8 3A85      		ldd r19,Y+10
 1889 0aca 8981      		ldd r24,Y+1
 1890 0acc 9A81      		ldd r25,Y+2
 1891 0ace FC01      		movw r30,r24
 1892 0ad0 4385      		ldd r20,Z+11
 1893 0ad2 5485      		ldd r21,Z+12
 1894 0ad4 8981      		ldd r24,Y+1
 1895 0ad6 9A81      		ldd r25,Y+2
 1896 0ad8 FC01      		movw r30,r24
 1897 0ada 8781      		ldd r24,Z+7
 1898 0adc 9085      		ldd r25,Z+8
 1899 0ade 4817      		cp r20,r24
 1900 0ae0 5907      		cpc r21,r25
 1901 0ae2 01F4      		brne .L96
 1902               		.loc 2 533 0 is_stmt 0 discriminator 1
 1903 0ae4 88E0      		ldi r24,lo8(8)
 1904 0ae6 90E0      		ldi r25,0
 1905 0ae8 00C0      		rjmp .L97
 1906               	.L96:
 1907               		.loc 2 533 0 discriminator 2
 1908 0aea 80E0      		ldi r24,0
 1909 0aec 90E0      		ldi r25,0
 1910               	.L97:
 1911               		.loc 2 533 0 discriminator 4
 1912 0aee 822B      		or r24,r18
 1913 0af0 932B      		or r25,r19
 1914 0af2 9A87      		std Y+10,r25
 1915 0af4 8987      		std Y+9,r24
 534:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_PANID == header->macDstPanId) ? NWK_IND_OPT_BROADCAST_PAN_ID : 0;
 1916               		.loc 2 534 0 is_stmt 1 discriminator 4
 1917 0af6 2985      		ldd r18,Y+9
 1918 0af8 3A85      		ldd r19,Y+10
 1919 0afa 8981      		ldd r24,Y+1
 1920 0afc 9A81      		ldd r25,Y+2
 1921 0afe FC01      		movw r30,r24
 1922 0b00 8381      		ldd r24,Z+3
 1923 0b02 9481      		ldd r25,Z+4
 1924 0b04 0196      		adiw r24,1
 1925 0b06 01F4      		brne .L98
 1926               		.loc 2 534 0 is_stmt 0 discriminator 1
 1927 0b08 80E1      		ldi r24,lo8(16)
 1928 0b0a 90E0      		ldi r25,0
 1929 0b0c 00C0      		rjmp .L99
 1930               	.L98:
 1931               		.loc 2 534 0 discriminator 2
 1932 0b0e 80E0      		ldi r24,0
 1933 0b10 90E0      		ldi r25,0
 1934               	.L99:
 1935               		.loc 2 534 0 discriminator 4
 1936 0b12 822B      		or r24,r18
 1937 0b14 932B      		or r25,r19
 1938 0b16 9A87      		std Y+10,r25
 1939 0b18 8987      		std Y+9,r24
 535:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 536:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 1940               		.loc 2 536 0 is_stmt 1 discriminator 4
 1941 0b1a 8981      		ldd r24,Y+1
 1942 0b1c 9A81      		ldd r25,Y+2
 1943 0b1e FC01      		movw r30,r24
 1944 0b20 8785      		ldd r24,Z+15
 1945 0b22 8295      		swap r24
 1946 0b24 8F70      		andi r24,lo8(15)
 1947 0b26 882F      		mov r24,r24
 1948 0b28 90E0      		ldi r25,0
 1949 0b2a 0396      		adiw r24,3
 1950 0b2c 880F      		lsl r24
 1951 0b2e 991F      		rol r25
 1952 0b30 8050      		subi r24,lo8(-(nwkIb))
 1953 0b32 9040      		sbci r25,hi8(-(nwkIb))
 1954 0b34 FC01      		movw r30,r24
 1955 0b36 2081      		ld r18,Z
 1956 0b38 3181      		ldd r19,Z+1
 1957 0b3a CE01      		movw r24,r28
 1958 0b3c 0396      		adiw r24,3
 1959 0b3e F901      		movw r30,r18
 1960 0b40 0995      		icall
 1961               	.L100:
 1962               	/* epilogue start */
 537:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1963               		.loc 2 537 0 discriminator 1
 1964 0b42 6196      		adiw r28,17
 1965 0b44 0FB6      		in __tmp_reg__,__SREG__
 1966 0b46 F894      		cli
 1967 0b48 DEBF      		out __SP_H__,r29
 1968 0b4a 0FBE      		out __SREG__,__tmp_reg__
 1969 0b4c CDBF      		out __SP_L__,r28
 1970 0b4e DF91      		pop r29
 1971 0b50 CF91      		pop r28
 1972 0b52 0895      		ret
 1973               		.cfi_endproc
 1974               	.LFE74:
 1977               	nwkRxIndicateBeaconFrame:
 1978               	.LFB75:
 538:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 539:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 540:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 541:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateBeaconFrame(NwkFrame_t *frame)
 542:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1979               		.loc 2 542 0
 1980               		.cfi_startproc
 1981 0b54 CF93      		push r28
 1982               	.LCFI40:
 1983               		.cfi_def_cfa_offset 3
 1984               		.cfi_offset 28, -2
 1985 0b56 DF93      		push r29
 1986               	.LCFI41:
 1987               		.cfi_def_cfa_offset 4
 1988               		.cfi_offset 29, -3
 1989 0b58 CDB7      		in r28,__SP_L__
 1990 0b5a DEB7      		in r29,__SP_H__
 1991               	.LCFI42:
 1992               		.cfi_def_cfa_register 28
 1993 0b5c 6197      		sbiw r28,17
 1994               	.LCFI43:
 1995               		.cfi_def_cfa_offset 21
 1996 0b5e 0FB6      		in __tmp_reg__,__SREG__
 1997 0b60 F894      		cli
 1998 0b62 DEBF      		out __SP_H__,r29
 1999 0b64 0FBE      		out __SREG__,__tmp_reg__
 2000 0b66 CDBF      		out __SP_L__,r28
 2001               	/* prologue: function */
 2002               	/* frame size = 17 */
 2003               	/* stack size = 19 */
 2004               	.L__stack_usage = 19
 2005 0b68 998B      		std Y+17,r25
 2006 0b6a 888B      		std Y+16,r24
 543:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 2007               		.loc 2 543 0
 2008 0b6c 8889      		ldd r24,Y+16
 2009 0b6e 9989      		ldd r25,Y+17
 2010 0b70 0296      		adiw r24,2
 2011 0b72 9A83      		std Y+2,r25
 2012 0b74 8983      		std Y+1,r24
 544:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 545:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 546:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2013               		.loc 2 546 0
 2014 0b76 8889      		ldd r24,Y+16
 2015 0b78 9989      		ldd r25,Y+17
 2016 0b7a 24E2      		ldi r18,lo8(36)
 2017 0b7c FC01      		movw r30,r24
 2018 0b7e 2083      		st Z,r18
 547:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 548:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[0]) {
 2019               		.loc 2 548 0
 2020 0b80 8091 0000 		lds r24,nwkIb+6
 2021 0b84 9091 0000 		lds r25,nwkIb+6+1
 2022 0b88 892B      		or r24,r25
 2023 0b8a 01F4      		brne .L102
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2024               		.loc 2 549 0
 2025 0b8c 80E0      		ldi r24,0
 2026 0b8e 00C0      		rjmp .L104
 2027               	.L102:
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 551:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 552:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = frame->beacon.macSrcAddr;
 2028               		.loc 2 552 0
 2029 0b90 8889      		ldd r24,Y+16
 2030 0b92 9989      		ldd r25,Y+17
 2031 0b94 FC01      		movw r30,r24
 2032 0b96 8781      		ldd r24,Z+7
 2033 0b98 9085      		ldd r25,Z+8
 2034 0b9a 9C83      		std Y+4,r25
 2035 0b9c 8B83      		std Y+3,r24
 553:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = frame->beacon.macSrcAddr;
 2036               		.loc 2 553 0
 2037 0b9e 8889      		ldd r24,Y+16
 2038 0ba0 9989      		ldd r25,Y+17
 2039 0ba2 FC01      		movw r30,r24
 2040 0ba4 8781      		ldd r24,Z+7
 2041 0ba6 9085      		ldd r25,Z+8
 2042 0ba8 9E83      		std Y+6,r25
 2043 0baa 8D83      		std Y+5,r24
 554:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2044               		.loc 2 554 0
 2045 0bac 1F82      		std Y+7,__zero_reg__
 555:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2046               		.loc 2 555 0
 2047 0bae 1886      		std Y+8,__zero_reg__
 556:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2048               		.loc 2 556 0
 2049 0bb0 8889      		ldd r24,Y+16
 2050 0bb2 9989      		ldd r25,Y+17
 2051 0bb4 8F57      		subi r24,127
 2052 0bb6 9F4F      		sbci r25,-1
 2053 0bb8 FC01      		movw r30,r24
 2054 0bba 8081      		ld r24,Z
 2055 0bbc 9181      		ldd r25,Z+1
 2056 0bbe 9C87      		std Y+12,r25
 2057 0bc0 8B87      		std Y+11,r24
 557:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2058               		.loc 2 557 0
 2059 0bc2 8889      		ldd r24,Y+16
 2060 0bc4 9989      		ldd r25,Y+17
 2061 0bc6 0E94 0000 		call nwkFramePayloadSize
 2062 0bca 8D87      		std Y+13,r24
 558:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2063               		.loc 2 558 0
 2064 0bcc 8889      		ldd r24,Y+16
 2065 0bce 9989      		ldd r25,Y+17
 2066 0bd0 8D57      		subi r24,125
 2067 0bd2 9F4F      		sbci r25,-1
 2068 0bd4 FC01      		movw r30,r24
 2069 0bd6 8081      		ld r24,Z
 2070 0bd8 8E87      		std Y+14,r24
 559:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2071               		.loc 2 559 0
 2072 0bda 8889      		ldd r24,Y+16
 2073 0bdc 9989      		ldd r25,Y+17
 2074 0bde 8C57      		subi r24,124
 2075 0be0 9F4F      		sbci r25,-1
 2076 0be2 FC01      		movw r30,r24
 2077 0be4 8081      		ld r24,Z
 2078 0be6 8F87      		std Y+15,r24
 560:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 561:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_BEACON;
 2079               		.loc 2 561 0
 2080 0be8 80E8      		ldi r24,lo8(-128)
 2081 0bea 90E0      		ldi r25,0
 2082 0bec 9A87      		std Y+10,r25
 2083 0bee 8987      		std Y+9,r24
 562:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 563:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2084               		.loc 2 563 0
 2085 0bf0 8981      		ldd r24,Y+1
 2086 0bf2 9A81      		ldd r25,Y+2
 2087 0bf4 FC01      		movw r30,r24
 2088 0bf6 8785      		ldd r24,Z+15
 2089 0bf8 8295      		swap r24
 2090 0bfa 8F70      		andi r24,lo8(15)
 2091 0bfc 882F      		mov r24,r24
 2092 0bfe 90E0      		ldi r25,0
 2093 0c00 0396      		adiw r24,3
 2094 0c02 880F      		lsl r24
 2095 0c04 991F      		rol r25
 2096 0c06 8050      		subi r24,lo8(-(nwkIb))
 2097 0c08 9040      		sbci r25,hi8(-(nwkIb))
 2098 0c0a FC01      		movw r30,r24
 2099 0c0c 2081      		ld r18,Z
 2100 0c0e 3181      		ldd r19,Z+1
 2101 0c10 CE01      		movw r24,r28
 2102 0c12 0396      		adiw r24,3
 2103 0c14 F901      		movw r30,r18
 2104 0c16 0995      		icall
 2105               	.L104:
 2106               	/* epilogue start */
 564:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2107               		.loc 2 564 0 discriminator 1
 2108 0c18 6196      		adiw r28,17
 2109 0c1a 0FB6      		in __tmp_reg__,__SREG__
 2110 0c1c F894      		cli
 2111 0c1e DEBF      		out __SP_H__,r29
 2112 0c20 0FBE      		out __SREG__,__tmp_reg__
 2113 0c22 CDBF      		out __SP_L__,r28
 2114 0c24 DF91      		pop r29
 2115 0c26 CF91      		pop r28
 2116 0c28 0895      		ret
 2117               		.cfi_endproc
 2118               	.LFE75:
 2121               	nwkRxIndicateLLBeaconFrame:
 2122               	.LFB76:
 565:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 566:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 567:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 568:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 569:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLBeaconFrame(NwkFrame_t *frame)
 570:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2123               		.loc 2 570 0
 2124               		.cfi_startproc
 2125 0c2a CF93      		push r28
 2126               	.LCFI44:
 2127               		.cfi_def_cfa_offset 3
 2128               		.cfi_offset 28, -2
 2129 0c2c DF93      		push r29
 2130               	.LCFI45:
 2131               		.cfi_def_cfa_offset 4
 2132               		.cfi_offset 29, -3
 2133 0c2e CDB7      		in r28,__SP_L__
 2134 0c30 DEB7      		in r29,__SP_H__
 2135               	.LCFI46:
 2136               		.cfi_def_cfa_register 28
 2137 0c32 2F97      		sbiw r28,15
 2138               	.LCFI47:
 2139               		.cfi_def_cfa_offset 19
 2140 0c34 0FB6      		in __tmp_reg__,__SREG__
 2141 0c36 F894      		cli
 2142 0c38 DEBF      		out __SP_H__,r29
 2143 0c3a 0FBE      		out __SREG__,__tmp_reg__
 2144 0c3c CDBF      		out __SP_L__,r28
 2145               	/* prologue: function */
 2146               	/* frame size = 15 */
 2147               	/* stack size = 17 */
 2148               	.L__stack_usage = 17
 2149 0c3e 9F87      		std Y+15,r25
 2150 0c40 8E87      		std Y+14,r24
 571:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 572:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 573:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2151               		.loc 2 573 0
 2152 0c42 8E85      		ldd r24,Y+14
 2153 0c44 9F85      		ldd r25,Y+15
 2154 0c46 24E2      		ldi r18,lo8(36)
 2155 0c48 FC01      		movw r30,r24
 2156 0c4a 2083      		st Z,r18
 574:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 575:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_BEACON_ENDPOINT]) {
 2157               		.loc 2 575 0
 2158 0c4c 8091 0000 		lds r24,nwkIb+6
 2159 0c50 9091 0000 		lds r25,nwkIb+6+1
 2160 0c54 892B      		or r24,r25
 2161 0c56 01F4      		brne .L106
 576:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2162               		.loc 2 576 0
 2163 0c58 80E0      		ldi r24,0
 2164 0c5a 00C0      		rjmp .L108
 2165               	.L106:
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 578:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Beacon as they are in standart 802.15.4
 579:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 580:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 581:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2166               		.loc 2 581 0
 2167 0c5c 1A82      		std Y+2,__zero_reg__
 2168 0c5e 1982      		std Y+1,__zero_reg__
 582:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2169               		.loc 2 582 0
 2170 0c60 1C82      		std Y+4,__zero_reg__
 2171 0c62 1B82      		std Y+3,__zero_reg__
 583:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2172               		.loc 2 583 0
 2173 0c64 1D82      		std Y+5,__zero_reg__
 584:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2174               		.loc 2 584 0
 2175 0c66 1E82      		std Y+6,__zero_reg__
 585:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 586:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->LLbeacon;
 2176               		.loc 2 586 0
 2177 0c68 8E85      		ldd r24,Y+14
 2178 0c6a 9F85      		ldd r25,Y+15
 2179 0c6c 0296      		adiw r24,2
 2180 0c6e 9A87      		std Y+10,r25
 2181 0c70 8987      		std Y+9,r24
 587:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2182               		.loc 2 587 0
 2183 0c72 8E85      		ldd r24,Y+14
 2184 0c74 9F85      		ldd r25,Y+15
 2185 0c76 0E94 0000 		call nwkFramePayloadSize
 2186 0c7a 8B87      		std Y+11,r24
 588:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2187               		.loc 2 588 0
 2188 0c7c 8E85      		ldd r24,Y+14
 2189 0c7e 9F85      		ldd r25,Y+15
 2190 0c80 8D57      		subi r24,125
 2191 0c82 9F4F      		sbci r25,-1
 2192 0c84 FC01      		movw r30,r24
 2193 0c86 8081      		ld r24,Z
 2194 0c88 8C87      		std Y+12,r24
 589:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2195               		.loc 2 589 0
 2196 0c8a 8E85      		ldd r24,Y+14
 2197 0c8c 9F85      		ldd r25,Y+15
 2198 0c8e 8C57      		subi r24,124
 2199 0c90 9F4F      		sbci r25,-1
 2200 0c92 FC01      		movw r30,r24
 2201 0c94 8081      		ld r24,Z
 2202 0c96 8D87      		std Y+13,r24
 590:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 591:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_BEACON;
 2203               		.loc 2 591 0
 2204 0c98 80E0      		ldi r24,0
 2205 0c9a 91E0      		ldi r25,lo8(1)
 2206 0c9c 9887      		std Y+8,r25
 2207 0c9e 8F83      		std Y+7,r24
 592:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 593:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 594:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_BEACON_ENDPOINT](&ind);
 2208               		.loc 2 594 0
 2209 0ca0 2091 0000 		lds r18,nwkIb+6
 2210 0ca4 3091 0000 		lds r19,nwkIb+6+1
 2211 0ca8 CE01      		movw r24,r28
 2212 0caa 0196      		adiw r24,1
 2213 0cac F901      		movw r30,r18
 2214 0cae 0995      		icall
 2215               	.L108:
 2216               	/* epilogue start */
 595:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2217               		.loc 2 595 0 discriminator 1
 2218 0cb0 2F96      		adiw r28,15
 2219 0cb2 0FB6      		in __tmp_reg__,__SREG__
 2220 0cb4 F894      		cli
 2221 0cb6 DEBF      		out __SP_H__,r29
 2222 0cb8 0FBE      		out __SREG__,__tmp_reg__
 2223 0cba CDBF      		out __SP_L__,r28
 2224 0cbc DF91      		pop r29
 2225 0cbe CF91      		pop r28
 2226 0cc0 0895      		ret
 2227               		.cfi_endproc
 2228               	.LFE76:
 2231               	nwkRxIndicateLLCommandFrame:
 2232               	.LFB77:
 596:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 597:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLCommandFrame(NwkFrame_t *frame)
 598:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2233               		.loc 2 598 0
 2234               		.cfi_startproc
 2235 0cc2 CF93      		push r28
 2236               	.LCFI48:
 2237               		.cfi_def_cfa_offset 3
 2238               		.cfi_offset 28, -2
 2239 0cc4 DF93      		push r29
 2240               	.LCFI49:
 2241               		.cfi_def_cfa_offset 4
 2242               		.cfi_offset 29, -3
 2243 0cc6 CDB7      		in r28,__SP_L__
 2244 0cc8 DEB7      		in r29,__SP_H__
 2245               	.LCFI50:
 2246               		.cfi_def_cfa_register 28
 2247 0cca 6197      		sbiw r28,17
 2248               	.LCFI51:
 2249               		.cfi_def_cfa_offset 21
 2250 0ccc 0FB6      		in __tmp_reg__,__SREG__
 2251 0cce F894      		cli
 2252 0cd0 DEBF      		out __SP_H__,r29
 2253 0cd2 0FBE      		out __SREG__,__tmp_reg__
 2254 0cd4 CDBF      		out __SP_L__,r28
 2255               	/* prologue: function */
 2256               	/* frame size = 17 */
 2257               	/* stack size = 19 */
 2258               	.L__stack_usage = 19
 2259 0cd6 998B      		std Y+17,r25
 2260 0cd8 888B      		std Y+16,r24
 599:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2261               		.loc 2 599 0
 2262 0cda 8889      		ldd r24,Y+16
 2263 0cdc 9989      		ldd r25,Y+17
 2264 0cde 0296      		adiw r24,2
 2265 0ce0 9A83      		std Y+2,r25
 2266 0ce2 8983      		std Y+1,r24
 600:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 601:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 602:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2267               		.loc 2 602 0
 2268 0ce4 8889      		ldd r24,Y+16
 2269 0ce6 9989      		ldd r25,Y+17
 2270 0ce8 24E2      		ldi r18,lo8(36)
 2271 0cea FC01      		movw r30,r24
 2272 0cec 2083      		st Z,r18
 603:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 604:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_COMMAND_ENDPOINT]) {
 2273               		.loc 2 604 0
 2274 0cee 8091 0000 		lds r24,nwkIb+12
 2275 0cf2 9091 0000 		lds r25,nwkIb+12+1
 2276 0cf6 892B      		or r24,r25
 2277 0cf8 01F4      		brne .L110
 605:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2278               		.loc 2 605 0
 2279 0cfa 80E0      		ldi r24,0
 2280 0cfc 00C0      		rjmp .L112
 2281               	.L110:
 606:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 607:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 608:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 609:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 610:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 611:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2282               		.loc 2 611 0
 2283 0cfe 1C82      		std Y+4,__zero_reg__
 2284 0d00 1B82      		std Y+3,__zero_reg__
 612:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2285               		.loc 2 612 0
 2286 0d02 1E82      		std Y+6,__zero_reg__
 2287 0d04 1D82      		std Y+5,__zero_reg__
 613:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2288               		.loc 2 613 0
 2289 0d06 1F82      		std Y+7,__zero_reg__
 614:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2290               		.loc 2 614 0
 2291 0d08 1886      		std Y+8,__zero_reg__
 615:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 616:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->data;
 2292               		.loc 2 616 0
 2293 0d0a 8889      		ldd r24,Y+16
 2294 0d0c 9989      		ldd r25,Y+17
 2295 0d0e 0296      		adiw r24,2
 2296 0d10 9C87      		std Y+12,r25
 2297 0d12 8B87      		std Y+11,r24
 617:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2298               		.loc 2 617 0
 2299 0d14 8889      		ldd r24,Y+16
 2300 0d16 9989      		ldd r25,Y+17
 2301 0d18 0E94 0000 		call nwkFramePayloadSize
 2302 0d1c 8D87      		std Y+13,r24
 618:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2303               		.loc 2 618 0
 2304 0d1e 8889      		ldd r24,Y+16
 2305 0d20 9989      		ldd r25,Y+17
 2306 0d22 8D57      		subi r24,125
 2307 0d24 9F4F      		sbci r25,-1
 2308 0d26 FC01      		movw r30,r24
 2309 0d28 8081      		ld r24,Z
 2310 0d2a 8E87      		std Y+14,r24
 619:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2311               		.loc 2 619 0
 2312 0d2c 8889      		ldd r24,Y+16
 2313 0d2e 9989      		ldd r25,Y+17
 2314 0d30 8C57      		subi r24,124
 2315 0d32 9F4F      		sbci r25,-1
 2316 0d34 FC01      		movw r30,r24
 2317 0d36 8081      		ld r24,Z
 2318 0d38 8F87      		std Y+15,r24
 620:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 621:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_MACCOMMAND;
 2319               		.loc 2 621 0
 2320 0d3a 80E0      		ldi r24,0
 2321 0d3c 92E0      		ldi r25,lo8(2)
 2322 0d3e 9A87      		std Y+10,r25
 2323 0d40 8987      		std Y+9,r24
 622:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 623:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_COMMAND_ENDPOINT](&ind);
 2324               		.loc 2 623 0
 2325 0d42 2091 0000 		lds r18,nwkIb+12
 2326 0d46 3091 0000 		lds r19,nwkIb+12+1
 2327 0d4a CE01      		movw r24,r28
 2328 0d4c 0396      		adiw r24,3
 2329 0d4e F901      		movw r30,r18
 2330 0d50 0995      		icall
 2331               	.L112:
 2332               	/* epilogue start */
 624:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2333               		.loc 2 624 0 discriminator 1
 2334 0d52 6196      		adiw r28,17
 2335 0d54 0FB6      		in __tmp_reg__,__SREG__
 2336 0d56 F894      		cli
 2337 0d58 DEBF      		out __SP_H__,r29
 2338 0d5a 0FBE      		out __SREG__,__tmp_reg__
 2339 0d5c CDBF      		out __SP_L__,r28
 2340 0d5e DF91      		pop r29
 2341 0d60 CF91      		pop r28
 2342 0d62 0895      		ret
 2343               		.cfi_endproc
 2344               	.LFE77:
 2347               	nwkRxHandleIndication:
 2348               	.LFB78:
 625:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 626:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 627:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 628:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 629:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleIndication(NwkFrame_t *frame)
 630:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2349               		.loc 2 630 0
 2350               		.cfi_startproc
 2351 0d64 CF93      		push r28
 2352               	.LCFI52:
 2353               		.cfi_def_cfa_offset 3
 2354               		.cfi_offset 28, -2
 2355 0d66 DF93      		push r29
 2356               	.LCFI53:
 2357               		.cfi_def_cfa_offset 4
 2358               		.cfi_offset 29, -3
 2359 0d68 00D0      		rcall .
 2360 0d6a 1F92      		push __zero_reg__
 2361               	.LCFI54:
 2362               		.cfi_def_cfa_offset 7
 2363 0d6c CDB7      		in r28,__SP_L__
 2364 0d6e DEB7      		in r29,__SP_H__
 2365               	.LCFI55:
 2366               		.cfi_def_cfa_register 28
 2367               	/* prologue: function */
 2368               	/* frame size = 3 */
 2369               	/* stack size = 5 */
 2370               	.L__stack_usage = 5
 2371 0d70 9B83      		std Y+3,r25
 2372 0d72 8A83      		std Y+2,r24
 631:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool ack;
 632:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 633:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = 0;
 2373               		.loc 2 633 0
 2374 0d74 1092 0000 		sts nwkRxAckControl,__zero_reg__
 634:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack = nwkRxIndicateDataFrame(frame);
 2375               		.loc 2 634 0
 2376 0d78 8A81      		ldd r24,Y+2
 2377 0d7a 9B81      		ldd r25,Y+3
 2378 0d7c 0E94 0000 		call nwkRxIndicateDataFrame
 2379 0d80 8983      		std Y+1,r24
 635:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 636:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == frame->header.nwkFcf.ackRequest) {
 2380               		.loc 2 636 0
 2381 0d82 8A81      		ldd r24,Y+2
 2382 0d84 9B81      		ldd r25,Y+3
 2383 0d86 FC01      		movw r30,r24
 2384 0d88 8385      		ldd r24,Z+11
 2385 0d8a 8170      		andi r24,lo8(1)
 2386 0d8c 8823      		tst r24
 2387 0d8e 01F4      		brne .L114
 637:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2388               		.loc 2 637 0
 2389 0d90 1982      		std Y+1,__zero_reg__
 2390               	.L114:
 638:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 639:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == frame->header.macDstAddr &&
 2391               		.loc 2 640 0
 2392 0d92 8A81      		ldd r24,Y+2
 2393 0d94 9B81      		ldd r25,Y+3
 2394 0d96 FC01      		movw r30,r24
 2395 0d98 8781      		ldd r24,Z+7
 2396 0d9a 9085      		ldd r25,Z+8
 2397 0d9c 0196      		adiw r24,1
 2398 0d9e 01F4      		brne .L115
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2399               		.loc 2 641 0 discriminator 1
 2400 0da0 2091 0000 		lds r18,nwkIb
 2401 0da4 3091 0000 		lds r19,nwkIb+1
 2402 0da8 8A81      		ldd r24,Y+2
 2403 0daa 9B81      		ldd r25,Y+3
 2404 0dac FC01      		movw r30,r24
 2405 0dae 8785      		ldd r24,Z+15
 2406 0db0 9089      		ldd r25,Z+16
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2407               		.loc 2 640 0 discriminator 1
 2408 0db2 2817      		cp r18,r24
 2409 0db4 3907      		cpc r19,r25
 2410 0db6 01F4      		brne .L115
 642:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			0 == frame->header.nwkFcf.multicast) {
 2411               		.loc 2 642 0
 2412 0db8 8A81      		ldd r24,Y+2
 2413 0dba 9B81      		ldd r25,Y+3
 2414 0dbc FC01      		movw r30,r24
 2415 0dbe 8385      		ldd r24,Z+11
 2416 0dc0 8870      		andi r24,lo8(8)
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2417               		.loc 2 641 0
 2418 0dc2 8823      		tst r24
 2419 0dc4 01F4      		brne .L115
 643:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = true;
 2420               		.loc 2 643 0
 2421 0dc6 81E0      		ldi r24,lo8(1)
 2422 0dc8 8983      		std Y+1,r24
 2423               	.L115:
 644:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 645:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 646:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == frame->header.macDstPanId) {
 2424               		.loc 2 646 0
 2425 0dca 8A81      		ldd r24,Y+2
 2426 0dcc 9B81      		ldd r25,Y+3
 2427 0dce FC01      		movw r30,r24
 2428 0dd0 8581      		ldd r24,Z+5
 2429 0dd2 9681      		ldd r25,Z+6
 2430 0dd4 0196      		adiw r24,1
 2431 0dd6 01F4      		brne .L116
 647:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2432               		.loc 2 647 0
 2433 0dd8 1982      		std Y+1,__zero_reg__
 2434               	.L116:
 648:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 649:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 650:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == nwkIb.addr) {
 2435               		.loc 2 650 0
 2436 0dda 8091 0000 		lds r24,nwkIb
 2437 0dde 9091 0000 		lds r25,nwkIb+1
 2438 0de2 0196      		adiw r24,1
 2439 0de4 01F4      		brne .L117
 651:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2440               		.loc 2 651 0
 2441 0de6 1982      		std Y+1,__zero_reg__
 2442               	.L117:
 652:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 653:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 654:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ack) {
 2443               		.loc 2 654 0
 2444 0de8 8981      		ldd r24,Y+1
 2445 0dea 8823      		tst r24
 2446 0dec 01F0      		breq .L118
 655:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxSendAck(frame);
 2447               		.loc 2 655 0
 2448 0dee 8A81      		ldd r24,Y+2
 2449 0df0 9B81      		ldd r25,Y+3
 2450 0df2 0E94 0000 		call nwkRxSendAck
 2451               	.L118:
 656:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 657:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 658:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2452               		.loc 2 658 0
 2453 0df6 8A81      		ldd r24,Y+2
 2454 0df8 9B81      		ldd r25,Y+3
 2455 0dfa 24E2      		ldi r18,lo8(36)
 2456 0dfc FC01      		movw r30,r24
 2457 0dfe 2083      		st Z,r18
 659:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2458               		.loc 2 659 0
 2459 0e00 0000      		nop
 2460               	/* epilogue start */
 2461 0e02 0F90      		pop __tmp_reg__
 2462 0e04 0F90      		pop __tmp_reg__
 2463 0e06 0F90      		pop __tmp_reg__
 2464 0e08 DF91      		pop r29
 2465 0e0a CF91      		pop r28
 2466 0e0c 0895      		ret
 2467               		.cfi_endproc
 2468               	.LFE78:
 2470               	.global	nwkRxTaskHandler
 2472               	nwkRxTaskHandler:
 2473               	.LFB79:
 660:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 661:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 662:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Rx Module task handler
 663:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 664:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxTaskHandler(void)
 665:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2474               		.loc 2 665 0
 2475               		.cfi_startproc
 2476 0e0e CF93      		push r28
 2477               	.LCFI56:
 2478               		.cfi_def_cfa_offset 3
 2479               		.cfi_offset 28, -2
 2480 0e10 DF93      		push r29
 2481               	.LCFI57:
 2482               		.cfi_def_cfa_offset 4
 2483               		.cfi_offset 29, -3
 2484 0e12 00D0      		rcall .
 2485               	.LCFI58:
 2486               		.cfi_def_cfa_offset 6
 2487 0e14 CDB7      		in r28,__SP_L__
 2488 0e16 DEB7      		in r29,__SP_H__
 2489               	.LCFI59:
 2490               		.cfi_def_cfa_register 28
 2491               	/* prologue: function */
 2492               	/* frame size = 2 */
 2493               	/* stack size = 4 */
 2494               	.L__stack_usage = 4
 666:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame = NULL;
 2495               		.loc 2 666 0
 2496 0e18 1A82      		std Y+2,__zero_reg__
 2497 0e1a 1982      		std Y+1,__zero_reg__
 667:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 2498               		.loc 2 668 0
 2499 0e1c 00C0      		rjmp .L120
 2500               	.L128:
 669:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2501               		.loc 2 669 0
 2502 0e1e 8981      		ldd r24,Y+1
 2503 0e20 9A81      		ldd r25,Y+2
 2504 0e22 FC01      		movw r30,r24
 2505 0e24 8081      		ld r24,Z
 2506 0e26 882F      		mov r24,r24
 2507 0e28 90E0      		ldi r25,0
 2508 0e2a 8432      		cpi r24,36
 2509 0e2c 9105      		cpc r25,__zero_reg__
 2510 0e2e 01F0      		breq .L121
 2511 0e30 8532      		cpi r24,37
 2512 0e32 9105      		cpc r25,__zero_reg__
 2513 0e34 04F4      		brge .L122
 2514 0e36 8032      		cpi r24,32
 2515 0e38 9105      		cpc r25,__zero_reg__
 2516 0e3a 01F0      		breq .L123
 2517 0e3c 8297      		sbiw r24,34
 2518 0e3e 01F0      		breq .L124
 2519 0e40 00C0      		rjmp .L120
 2520               	.L122:
 2521 0e42 8632      		cpi r24,38
 2522 0e44 9105      		cpc r25,__zero_reg__
 2523 0e46 01F0      		breq .L125
 2524 0e48 8632      		cpi r24,38
 2525 0e4a 9105      		cpc r25,__zero_reg__
 2526 0e4c 04F0      		brlt .L126
 2527 0e4e 8797      		sbiw r24,39
 2528 0e50 01F0      		breq .L127
 2529 0e52 00C0      		rjmp .L120
 2530               	.L123:
 670:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_RECEIVED:
 671:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 672:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleReceivedFrame(frame);
 2531               		.loc 2 672 0
 2532 0e54 8981      		ldd r24,Y+1
 2533 0e56 9A81      		ldd r25,Y+2
 2534 0e58 0E94 0000 		call nwkRxHandleReceivedFrame
 673:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 674:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2535               		.loc 2 674 0
 2536 0e5c 00C0      		rjmp .L120
 2537               	.L124:
 675:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 676:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 677:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_DECRYPT:
 678:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 679:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkSecurityProcess(frame, false);
 680:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 681:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 682:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 683:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 684:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_INDICATE:
 685:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 686:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleIndication(frame);
 2538               		.loc 2 686 0
 2539 0e5e 8981      		ldd r24,Y+1
 2540 0e60 9A81      		ldd r25,Y+2
 2541 0e62 0E94 0000 		call nwkRxHandleIndication
 687:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 688:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2542               		.loc 2 688 0
 2543 0e66 00C0      		rjmp .L120
 2544               	.L121:
 689:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 690:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 691:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_ROUTE:
 692:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 693:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRouteFrame(frame);
 694:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 695:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 696:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 697:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 698:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_FINISH:
 699:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 700:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkFrameFree(frame);
 2545               		.loc 2 700 0
 2546 0e68 8981      		ldd r24,Y+1
 2547 0e6a 9A81      		ldd r25,Y+2
 2548 0e6c 0E94 0000 		call nwkFrameFree
 701:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 702:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2549               		.loc 2 702 0
 2550 0e70 00C0      		rjmp .L120
 2551               	.L126:
 703:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 704:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_BEACON:
 705:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 706:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateBeaconFrame(frame);
 2552               		.loc 2 706 0
 2553 0e72 8981      		ldd r24,Y+1
 2554 0e74 9A81      		ldd r25,Y+2
 2555 0e76 0E94 0000 		call nwkRxIndicateBeaconFrame
 707:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 708:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2556               		.loc 2 708 0
 2557 0e7a 00C0      		rjmp .L120
 2558               	.L125:
 709:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 710:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 711:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLBEACON:
 712:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 713:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLBeaconFrame(frame);
 2559               		.loc 2 713 0
 2560 0e7c 8981      		ldd r24,Y+1
 2561 0e7e 9A81      		ldd r25,Y+2
 2562 0e80 0E94 0000 		call nwkRxIndicateLLBeaconFrame
 714:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 715:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2563               		.loc 2 715 0
 2564 0e84 00C0      		rjmp .L120
 2565               	.L127:
 716:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLCOMMAND:
 717:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 718:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLCommandFrame(frame);
 2566               		.loc 2 718 0
 2567 0e86 8981      		ldd r24,Y+1
 2568 0e88 9A81      		ldd r25,Y+2
 2569 0e8a 0E94 0000 		call nwkRxIndicateLLCommandFrame
 719:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 720:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2570               		.loc 2 720 0
 2571 0e8e 0000      		nop
 2572               	.L120:
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2573               		.loc 2 668 0
 2574 0e90 8981      		ldd r24,Y+1
 2575 0e92 9A81      		ldd r25,Y+2
 2576 0e94 0E94 0000 		call nwkFrameNext
 2577 0e98 9A83      		std Y+2,r25
 2578 0e9a 8983      		std Y+1,r24
 2579 0e9c 8981      		ldd r24,Y+1
 2580 0e9e 9A81      		ldd r25,Y+2
 2581 0ea0 892B      		or r24,r25
 2582 0ea2 01F0      		breq .+2
 2583 0ea4 00C0      		rjmp .L128
 721:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 722:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2584               		.loc 2 723 0
 2585 0ea6 0000      		nop
 2586               	/* epilogue start */
 2587 0ea8 0F90      		pop __tmp_reg__
 2588 0eaa 0F90      		pop __tmp_reg__
 2589 0eac DF91      		pop r29
 2590 0eae CF91      		pop r28
 2591 0eb0 0895      		ret
 2592               		.cfi_endproc
 2593               	.LFE79:
 2595               	.Letext0:
 2596               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 2597               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 2598               		.file 5 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 2599               		.file 6 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 2600               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 2601               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
 2602               		.file 9 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkRx.c
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:7      *ABS*:00000001 __zero_reg__
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:14     .bss.tTS:00000000 tTS
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:18     .text:00000000 nwkFramePayloadSize
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:80     .bss.nwkRxDuplicateRejectionTable:00000000 nwkRxDuplicateRejectionTable
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:85     .bss.nwkRxAckControl:00000000 nwkRxAckControl
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:90     .bss.nwkRxDuplicateRejectionTimer:00000000 nwkRxDuplicateRejectionTimer
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:95     .text:00000044 nwkRxInit
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:722    .text:000003e0 nwkRxDuplicateRejectionTimerHandler
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:1120   .text:00000622 nwkRxSeriveDataInd
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:182    .text:000000b6 PHY_DataInd
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:512    .text:000002b6 nwkRxSendAck
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:684    .text:000003c4 NWK_SetAckControl
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:837    .text:0000047a nwkRxRejectDuplicate
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:1188   .text:0000066c nwkRxHandleReceivedFrame
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:1638   .text:00000946 nwkRxIndicateDataFrame
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:1977   .text:00000b54 nwkRxIndicateBeaconFrame
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:2121   .text:00000c2a nwkRxIndicateLLBeaconFrame
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:2231   .text:00000cc2 nwkRxIndicateLLCommandFrame
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:2347   .text:00000d64 nwkRxHandleIndication
C:\Users\guilh\AppData\Local\Temp\cc4NMhWf.s:2472   .text:00000e0e nwkRxTaskHandler

UNDEFINED SYMBOLS
NWK_OpenEndpoint
nwkFrameAlloc
nwkFrameAlloc_LLDN
memcpy
nwkFrameCommandInit
nwkTxFrame
SYS_TimerStart
nwkTxAckReceived
nwkIb
NWK_GroupIsMember
nwkTxBroadcastFrame
nwkFrameFree
nwkFrameNext
__do_clear_bss
