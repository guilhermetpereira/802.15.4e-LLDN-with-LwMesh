   1               		.file	"nwkRx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	n,1,1
  12               		.comm	tTS,4,1
  14               	nwkFramePayloadSize:
  15               	.LFB65:
  16               		.file 1 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
   1:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /**
   2:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \file nwkFrame.h
   3:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   4:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \brief Frame buffers management interface
   5:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   6:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   8:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  10:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  13:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  16:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  20:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  23:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  26:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  38:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  40:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  41:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  42:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  43:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*
  44:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  46:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  48:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  49:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #ifndef _NWK_FRAME_H_
  50:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define _NWK_FRAME_H_
  51:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  52:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Includes ---------------------------------------------------------------*/
  53:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include <stdint.h>
  54:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include "compiler.h"
  55:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  56:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Definitions ------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define NWK_FRAME_MAX_PAYLOAD_SIZE   127
  58:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  59:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Types ------------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_SET(1)
  61:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameHeader_t {
  62:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  63:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  64:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstPanId;
  65:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstAddr;
  66:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  67:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  68:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  69:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t ackRequest : 1;
  70:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t security   : 1;
  71:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t linkLocal  : 1;
  72:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t multicast  : 1;
  73:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t beacon     : 1;
  74:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved   : 3;
  75:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} nwkFcf;
  76:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t nwkSeq;
  77:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkSrcAddr;
  78:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkDstAddr;
  79:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  80:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkSrcEndpoint : 4;
  81:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkDstEndpoint : 4;
  82:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
  83:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameHeader_t;
  84:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  85:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeader_t {
  86:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  87:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  88:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcPanId;
  89:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  90:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
  91:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
  92:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t beaconOrder			: 4;
  93:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t superframeOrder		: 4;
  94:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t finalCAPslot			: 4;
  95:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t BatteryLifeExtension	: 1;
  96:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t Reserved				: 1;
  97:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t PANCoordinator			: 1;
  98:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t AssociationPermit		: 1;
  99:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSFS;
 100:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macGTS;
 101:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macPending;
 102:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeader_t;
 103:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 104:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 105:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeaderLLDN_t {
 106:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/******* MHR *****/
 107:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// struct
 108:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// {
 109:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameType 				: 3;
 110:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SecurityEnabled 	: 1;
 111:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameVersion			: 1;
 112:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t ackRequest				: 1;
 113:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SubFrameType			: 2;
 114:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// } macFcf;
 115:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 116:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 117:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 118:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 119:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 120:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 121:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 122:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 123:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 124:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 125:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/****** MAC Payload *******/
 126:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 127:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 128:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txState 			: 3;
 129:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txDir 				: 1;
 130:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved			: 1;
 131:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t numBaseMgmtTimeslots: 3; // number of managment time slots
 132:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 										// uplink and downlink must be equal
 133:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} Flags;
 134:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 135:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t PanId;
 136:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t confSeqNumber;
 137:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t TimeSlotSize;
 138:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 139:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 140:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeaderLLDN_t;
 141:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 142:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameGeneralHeaderLLDN_t {
 143:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	#if (TAL_TYPE == AT86RF233)
 144:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	#endif
 145:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// uint8_t PHR;
 146:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 147:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 148:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 149:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 150:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 151:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 152:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 153:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 154:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 155:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 156:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 157:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameGeneralHeaderLLDN_t;
 158:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 159:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 160:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameMulticastHeader_t {
 161:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nonMemberRadius    : 4;
 162:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxNonMemberRadius : 4;
 163:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t memberRadius       : 4;
 164:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxMemberRadius    : 4;
 165:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameMulticastHeader_t;
 166:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 167:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct NwkFrame_t {
 168:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t state;
 169:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t size;
 170:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 171:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 172:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameHeader_t header;
 173:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeader_t beacon;
 174:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeaderLLDN_t LLbeacon;
 175:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameGeneralHeaderLLDN_t LLgeneral;
 176:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t data[NWK_FRAME_MAX_PAYLOAD_SIZE];
 177:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 178:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 179:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t *payload;
 180:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 181:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 182:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 183:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t lqi;
 184:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			int8_t rssi;
 185:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} rx;
 186:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 187:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 188:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t status;
 189:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint16_t timeout;
 190:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t control;
 191:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			void (*confirm)(struct NwkFrame_t *frame);
 192:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} tx;
 193:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 194:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrame_t;
 195:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_RESET()
 196:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Prototypes -------------------------------------------------------------*/
 197:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameInit(void);
 198:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc(void);
 199:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameFree(NwkFrame_t *frame);
 200:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);
 201:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameCommandInit(NwkFrame_t *frame);
 202:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 203:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame);
 204:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Implementations --------------------------------------------------------*/
 205:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 206:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*************************************************************************//**
 207:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** *****************************************************************************/
 208:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** static inline uint8_t nwkFramePayloadSize(NwkFrame_t *frame)
 209:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** {
  17               		.loc 1 209 0
  18               		.cfi_startproc
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27 0004 00D0      		rcall .
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 6
  30 0006 CDB7      		in r28,__SP_L__
  31 0008 DEB7      		in r29,__SP_H__
  32               	.LCFI3:
  33               		.cfi_def_cfa_register 28
  34               	/* prologue: function */
  35               	/* frame size = 2 */
  36               	/* stack size = 4 */
  37               	.L__stack_usage = 4
  38 000a 9A83      		std Y+2,r25
  39 000c 8983      		std Y+1,r24
 210:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	return frame->size - (frame->payload - frame->data);
  40               		.loc 1 210 0
  41 000e 8981      		ldd r24,Y+1
  42 0010 9A81      		ldd r25,Y+2
  43 0012 FC01      		movw r30,r24
  44 0014 4181      		ldd r20,Z+1
  45 0016 8981      		ldd r24,Y+1
  46 0018 9A81      		ldd r25,Y+2
  47 001a 8F57      		subi r24,127
  48 001c 9F4F      		sbci r25,-1
  49 001e FC01      		movw r30,r24
  50 0020 8081      		ld r24,Z
  51 0022 9181      		ldd r25,Z+1
  52 0024 9C01      		movw r18,r24
  53 0026 8981      		ldd r24,Y+1
  54 0028 9A81      		ldd r25,Y+2
  55 002a 0296      		adiw r24,2
  56 002c B901      		movw r22,r18
  57 002e 681B      		sub r22,r24
  58 0030 790B      		sbc r23,r25
  59 0032 CB01      		movw r24,r22
  60 0034 742F      		mov r23,r20
  61 0036 781B      		sub r23,r24
  62 0038 872F      		mov r24,r23
  63               	/* epilogue start */
 211:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** }
  64               		.loc 1 211 0
  65 003a 0F90      		pop __tmp_reg__
  66 003c 0F90      		pop __tmp_reg__
  67 003e DF91      		pop r29
  68 0040 CF91      		pop r28
  69 0042 0895      		ret
  70               		.cfi_endproc
  71               	.LFE65:
  73               		.section	.bss.nwkRxDuplicateRejectionTable,"aw",@nobits
  76               	nwkRxDuplicateRejectionTable:
  77 0000 0000 0000 		.zero	250
  77      0000 0000 
  77      0000 0000 
  77      0000 0000 
  77      0000 0000 
  78               		.section	.bss.nwkRxAckControl,"aw",@nobits
  81               	nwkRxAckControl:
  82 0000 00        		.zero	1
  83               		.section	.bss.nwkRxDuplicateRejectionTimer,"aw",@nobits
  86               	nwkRxDuplicateRejectionTimer:
  87 0000 0000 0000 		.zero	13
  87      0000 0000 
  87      0000 0000 
  87      00
  88               		.text
  89               	.global	nwkRxInit
  91               	nwkRxInit:
  92               	.LFB66:
  93               		.file 2 "../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \file nwkRx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \brief Receive routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkGroup.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRoute.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkCommand.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkSecurity.h"
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRouteDiscovery.h"
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Definitions ------------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL   100 /* ms */
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define DUPLICATE_REJECTION_TTL	\
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	((NWK_DUPLICATE_REJECTION_TTL /	\
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL) + 1)
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_SERVICE_ENDPOINT_ID    0
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Types ------------------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** enum {
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_RECEIVED = 0x20,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_DECRYPT  = 0x21,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_INDICATE = 0x22,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_ROUTE    = 0x23,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_FINISH   = 0x24,
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_BEACON   = 0x25,
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLBEACON 	= 0x26,
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLCOMMAND 	= 0x27,
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLACKFRAME = 0x28,
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** };
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** typedef struct NwkDuplicateRejectionEntry_t {
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint16_t src;
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t seq;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t mask;
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t ttl;
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** } NwkDuplicateRejectionEntry_t;
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Prototypes -------------------------------------------------------------*/
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer);
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind);
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Variables --------------------------------------------------------------*/
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static NwkDuplicateRejectionEntry_t nwkRxDuplicateRejectionTable[
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DUPLICATE_REJECTION_TABLE_SIZE];
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static uint8_t nwkRxAckControl;
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static SYS_Timer_t nwkRxDuplicateRejectionTimer;
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Implementations --------------------------------------------------------*/
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Initializes the Rx module
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxInit(void)
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
  94               		.loc 2 109 0
  95               		.cfi_startproc
  96 0044 CF93      		push r28
  97               	.LCFI4:
  98               		.cfi_def_cfa_offset 3
  99               		.cfi_offset 28, -2
 100 0046 DF93      		push r29
 101               	.LCFI5:
 102               		.cfi_def_cfa_offset 4
 103               		.cfi_offset 29, -3
 104 0048 1F92      		push __zero_reg__
 105               	.LCFI6:
 106               		.cfi_def_cfa_offset 5
 107 004a CDB7      		in r28,__SP_L__
 108 004c DEB7      		in r29,__SP_H__
 109               	.LCFI7:
 110               		.cfi_def_cfa_register 28
 111               	/* prologue: function */
 112               	/* frame size = 1 */
 113               	/* stack size = 3 */
 114               	.L__stack_usage = 3
 115               	.LBB2:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 116               		.loc 2 110 0
 117 004e 1982      		std Y+1,__zero_reg__
 118 0050 00C0      		rjmp .L4
 119               	.L5:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxDuplicateRejectionTable[i].ttl = 0;
 120               		.loc 2 111 0 discriminator 3
 121 0052 8981      		ldd r24,Y+1
 122 0054 282F      		mov r18,r24
 123 0056 30E0      		ldi r19,0
 124 0058 C901      		movw r24,r18
 125 005a 880F      		lsl r24
 126 005c 991F      		rol r25
 127 005e 880F      		lsl r24
 128 0060 991F      		rol r25
 129 0062 820F      		add r24,r18
 130 0064 931F      		adc r25,r19
 131 0066 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 132 0068 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 133 006a FC01      		movw r30,r24
 134 006c 1082      		st Z,__zero_reg__
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 135               		.loc 2 110 0 discriminator 3
 136 006e 8981      		ldd r24,Y+1
 137 0070 8F5F      		subi r24,lo8(-(1))
 138 0072 8983      		std Y+1,r24
 139               	.L4:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 140               		.loc 2 110 0 is_stmt 0 discriminator 1
 141 0074 8981      		ldd r24,Y+1
 142 0076 8233      		cpi r24,lo8(50)
 143 0078 00F0      		brlo .L5
 144               	.LBE2:
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.interval
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL;
 145               		.loc 2 115 0 is_stmt 1
 146 007a 84E6      		ldi r24,lo8(100)
 147 007c 90E0      		ldi r25,0
 148 007e A0E0      		ldi r26,0
 149 0080 B0E0      		ldi r27,0
 150 0082 8093 0000 		sts nwkRxDuplicateRejectionTimer+6,r24
 151 0086 9093 0000 		sts nwkRxDuplicateRejectionTimer+6+1,r25
 152 008a A093 0000 		sts nwkRxDuplicateRejectionTimer+6+2,r26
 153 008e B093 0000 		sts nwkRxDuplicateRejectionTimer+6+3,r27
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE;
 154               		.loc 2 116 0
 155 0092 1092 0000 		sts nwkRxDuplicateRejectionTimer+10,__zero_reg__
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.handler
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= nwkRxDuplicateRejectionTimerHandler;
 156               		.loc 2 118 0
 157 0096 80E0      		ldi r24,lo8(gs(nwkRxDuplicateRejectionTimerHandler))
 158 0098 90E0      		ldi r25,hi8(gs(nwkRxDuplicateRejectionTimerHandler))
 159 009a 9093 0000 		sts nwkRxDuplicateRejectionTimer+11+1,r25
 160 009e 8093 0000 		sts nwkRxDuplicateRejectionTimer+11,r24
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_OpenEndpoint(NWK_SERVICE_ENDPOINT_ID, nwkRxSeriveDataInd);
 161               		.loc 2 120 0
 162 00a2 60E0      		ldi r22,lo8(gs(nwkRxSeriveDataInd))
 163 00a4 70E0      		ldi r23,hi8(gs(nwkRxSeriveDataInd))
 164 00a6 80E0      		ldi r24,0
 165 00a8 0E94 0000 		call NWK_OpenEndpoint
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 166               		.loc 2 121 0
 167 00ac 0000      		nop
 168               	/* epilogue start */
 169 00ae 0F90      		pop __tmp_reg__
 170 00b0 DF91      		pop r29
 171 00b2 CF91      		pop r28
 172 00b4 0895      		ret
 173               		.cfi_endproc
 174               	.LFE66:
 176               		.weak	PHY_DataInd
 178               	PHY_DataInd:
 179               	.LFB67:
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void __attribute__((weak)) PHY_DataInd(PHY_DataInd_t *ind)
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 180               		.loc 2 126 0
 181               		.cfi_startproc
 182 00b6 CF93      		push r28
 183               	.LCFI8:
 184               		.cfi_def_cfa_offset 3
 185               		.cfi_offset 28, -2
 186 00b8 DF93      		push r29
 187               	.LCFI9:
 188               		.cfi_def_cfa_offset 4
 189               		.cfi_offset 29, -3
 190 00ba 00D0      		rcall .
 191 00bc 00D0      		rcall .
 192               	.LCFI10:
 193               		.cfi_def_cfa_offset 8
 194 00be CDB7      		in r28,__SP_L__
 195 00c0 DEB7      		in r29,__SP_H__
 196               	.LCFI11:
 197               		.cfi_def_cfa_register 28
 198               	/* prologue: function */
 199               	/* frame size = 4 */
 200               	/* stack size = 6 */
 201               	.L__stack_usage = 6
 202 00c2 9C83      		std Y+4,r25
 203 00c4 8B83      		std Y+3,r24
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame;
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-Beacon frame
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 		for (int i = 0; i < ind->size; i++)
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 		{
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 			printf("\ndata[%d] %hhx", i,ind->data[i]);
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** //  		}
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(0x0c == ind->data[0])
 204               		.loc 2 136 0
 205 00c6 8B81      		ldd r24,Y+3
 206 00c8 9C81      		ldd r25,Y+4
 207 00ca FC01      		movw r30,r24
 208 00cc 8081      		ld r24,Z
 209 00ce 9181      		ldd r25,Z+1
 210 00d0 FC01      		movw r30,r24
 211 00d2 8081      		ld r24,Z
 212 00d4 8C30      		cpi r24,lo8(12)
 213 00d6 01F4      		brne .L7
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameBeaconHeaderLLDN_t))
 214               		.loc 2 138 0
 215 00d8 8B81      		ldd r24,Y+3
 216 00da 9C81      		ldd r25,Y+4
 217 00dc FC01      		movw r30,r24
 218 00de 8281      		ldd r24,Z+2
 219 00e0 8730      		cpi r24,lo8(7)
 220 00e2 00F0      		brlo .+2
 221 00e4 00C0      		rjmp .L8
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 222               		.loc 2 140 0
 223 00e6 00C0      		rjmp .L6
 224               	.L7:
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-MAC Command frame
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0xcc == ind->data[0] || 0x8c == ind->data[0])
 225               		.loc 2 144 0
 226 00e8 8B81      		ldd r24,Y+3
 227 00ea 9C81      		ldd r25,Y+4
 228 00ec FC01      		movw r30,r24
 229 00ee 8081      		ld r24,Z
 230 00f0 9181      		ldd r25,Z+1
 231 00f2 FC01      		movw r30,r24
 232 00f4 8081      		ld r24,Z
 233 00f6 8C3C      		cpi r24,lo8(-52)
 234 00f8 01F0      		breq .L10
 235               		.loc 2 144 0 is_stmt 0 discriminator 1
 236 00fa 8B81      		ldd r24,Y+3
 237 00fc 9C81      		ldd r25,Y+4
 238 00fe FC01      		movw r30,r24
 239 0100 8081      		ld r24,Z
 240 0102 9181      		ldd r25,Z+1
 241 0104 FC01      		movw r30,r24
 242 0106 8081      		ld r24,Z
 243 0108 8C38      		cpi r24,lo8(-116)
 244 010a 01F4      		brne .L11
 245               	.L10:
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameGeneralHeaderLLDN_t))
 246               		.loc 2 146 0 is_stmt 1
 247 010c 8B81      		ldd r24,Y+3
 248 010e 9C81      		ldd r25,Y+4
 249 0110 FC01      		movw r30,r24
 250 0112 8281      		ldd r24,Z+2
 251 0114 8330      		cpi r24,lo8(3)
 252 0116 00F0      		brlo .+2
 253 0118 00C0      		rjmp .L8
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 254               		.loc 2 148 0
 255 011a 00C0      		rjmp .L6
 256               	.L11:
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x88 == ind->data[1])
 257               		.loc 2 151 0
 258 011c 8B81      		ldd r24,Y+3
 259 011e 9C81      		ldd r25,Y+4
 260 0120 FC01      		movw r30,r24
 261 0122 8081      		ld r24,Z
 262 0124 9181      		ldd r25,Z+1
 263 0126 0196      		adiw r24,1
 264 0128 FC01      		movw r30,r24
 265 012a 8081      		ld r24,Z
 266 012c 8838      		cpi r24,lo8(-120)
 267 012e 01F4      		brne .L13
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x61 != ind->data[0] && 0x41 != ind->data[0]) || ind->size < sizeof(NwkFrameHeader_t))
 268               		.loc 2 153 0
 269 0130 8B81      		ldd r24,Y+3
 270 0132 9C81      		ldd r25,Y+4
 271 0134 FC01      		movw r30,r24
 272 0136 8081      		ld r24,Z
 273 0138 9181      		ldd r25,Z+1
 274 013a FC01      		movw r30,r24
 275 013c 8081      		ld r24,Z
 276 013e 8136      		cpi r24,lo8(97)
 277 0140 01F0      		breq .L14
 278               		.loc 2 153 0 is_stmt 0 discriminator 1
 279 0142 8B81      		ldd r24,Y+3
 280 0144 9C81      		ldd r25,Y+4
 281 0146 FC01      		movw r30,r24
 282 0148 8081      		ld r24,Z
 283 014a 9181      		ldd r25,Z+1
 284 014c FC01      		movw r30,r24
 285 014e 8081      		ld r24,Z
 286 0150 8134      		cpi r24,lo8(65)
 287 0152 01F0      		breq .+2
 288 0154 00C0      		rjmp .L28
 289               	.L14:
 290               		.loc 2 153 0 discriminator 3
 291 0156 8B81      		ldd r24,Y+3
 292 0158 9C81      		ldd r25,Y+4
 293 015a FC01      		movw r30,r24
 294 015c 8281      		ldd r24,Z+2
 295 015e 8031      		cpi r24,lo8(16)
 296 0160 00F4      		brsh .L8
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 297               		.loc 2 155 0 is_stmt 1
 298 0162 00C0      		rjmp .L28
 299               	.L13:
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x80 == ind->data[1])
 300               		.loc 2 158 0
 301 0164 8B81      		ldd r24,Y+3
 302 0166 9C81      		ldd r25,Y+4
 303 0168 FC01      		movw r30,r24
 304 016a 8081      		ld r24,Z
 305 016c 9181      		ldd r25,Z+1
 306 016e 0196      		adiw r24,1
 307 0170 FC01      		movw r30,r24
 308 0172 8081      		ld r24,Z
 309 0174 8038      		cpi r24,lo8(-128)
 310 0176 01F0      		breq .+2
 311 0178 00C0      		rjmp .L29
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x00 != ind->data[0]) || ind->size < (sizeof(NwkFrameBeaconHeader_t)))
 312               		.loc 2 160 0
 313 017a 8B81      		ldd r24,Y+3
 314 017c 9C81      		ldd r25,Y+4
 315 017e FC01      		movw r30,r24
 316 0180 8081      		ld r24,Z
 317 0182 9181      		ldd r25,Z+1
 318 0184 FC01      		movw r30,r24
 319 0186 8081      		ld r24,Z
 320 0188 8823      		tst r24
 321 018a 01F0      		breq .+2
 322 018c 00C0      		rjmp .L30
 323               		.loc 2 160 0 is_stmt 0 discriminator 1
 324 018e 8B81      		ldd r24,Y+3
 325 0190 9C81      		ldd r25,Y+4
 326 0192 FC01      		movw r30,r24
 327 0194 8281      		ldd r24,Z+2
 328 0196 8B30      		cpi r24,lo8(11)
 329 0198 00F4      		brsh .+2
 330 019a 00C0      		rjmp .L30
 331               	.L8:
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(ind->data[1] == 0x88 || ind->data[1] == 0x80)
 332               		.loc 2 170 0 is_stmt 1
 333 019c 8B81      		ldd r24,Y+3
 334 019e 9C81      		ldd r25,Y+4
 335 01a0 FC01      		movw r30,r24
 336 01a2 8081      		ld r24,Z
 337 01a4 9181      		ldd r25,Z+1
 338 01a6 0196      		adiw r24,1
 339 01a8 FC01      		movw r30,r24
 340 01aa 8081      		ld r24,Z
 341 01ac 8838      		cpi r24,lo8(-120)
 342 01ae 01F0      		breq .L18
 343               		.loc 2 170 0 is_stmt 0 discriminator 1
 344 01b0 8B81      		ldd r24,Y+3
 345 01b2 9C81      		ldd r25,Y+4
 346 01b4 FC01      		movw r30,r24
 347 01b6 8081      		ld r24,Z
 348 01b8 9181      		ldd r25,Z+1
 349 01ba 0196      		adiw r24,1
 350 01bc FC01      		movw r30,r24
 351 01be 8081      		ld r24,Z
 352 01c0 8038      		cpi r24,lo8(-128)
 353 01c2 01F4      		brne .L19
 354               	.L18:
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc())) {
 355               		.loc 2 172 0 is_stmt 1
 356 01c4 0E94 0000 		call nwkFrameAlloc
 357 01c8 9A83      		std Y+2,r25
 358 01ca 8983      		std Y+1,r24
 359 01cc 8981      		ldd r24,Y+1
 360 01ce 9A81      		ldd r25,Y+2
 361 01d0 892B      		or r24,r25
 362 01d2 01F4      		brne .+2
 363 01d4 00C0      		rjmp .L31
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame received is NwkFrameHeader change state to Receveid
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is a 802.15.4 beacon change state to Beacon
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = ((0x88 == ind->data[1]) ? NWK_RX_STATE_RECEIVED : NWK_RX_STATE_BEACON);
 364               		.loc 2 177 0
 365 01d6 8B81      		ldd r24,Y+3
 366 01d8 9C81      		ldd r25,Y+4
 367 01da FC01      		movw r30,r24
 368 01dc 8081      		ld r24,Z
 369 01de 9181      		ldd r25,Z+1
 370 01e0 0196      		adiw r24,1
 371 01e2 FC01      		movw r30,r24
 372 01e4 8081      		ld r24,Z
 373 01e6 8838      		cpi r24,lo8(-120)
 374 01e8 01F4      		brne .L21
 375               		.loc 2 177 0 is_stmt 0 discriminator 1
 376 01ea 20E2      		ldi r18,lo8(32)
 377 01ec 00C0      		rjmp .L22
 378               	.L21:
 379               		.loc 2 177 0 discriminator 2
 380 01ee 25E2      		ldi r18,lo8(37)
 381               	.L22:
 382               		.loc 2 177 0 discriminator 4
 383 01f0 8981      		ldd r24,Y+1
 384 01f2 9A81      		ldd r25,Y+2
 385 01f4 FC01      		movw r30,r24
 386 01f6 2083      		st Z,r18
 387 01f8 00C0      		rjmp .L23
 388               	.L19:
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// allocate frame buffer according to received frame
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(ind->data[0] == 0x0c)
 389               		.loc 2 180 0 is_stmt 1
 390 01fa 8B81      		ldd r24,Y+3
 391 01fc 9C81      		ldd r25,Y+4
 392 01fe FC01      		movw r30,r24
 393 0200 8081      		ld r24,Z
 394 0202 9181      		ldd r25,Z+1
 395 0204 FC01      		movw r30,r24
 396 0206 8081      		ld r24,Z
 397 0208 8C30      		cpi r24,lo8(12)
 398 020a 01F4      		brne .L24
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-Beacon frame
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(true))){
 399               		.loc 2 183 0
 400 020c 81E0      		ldi r24,lo8(1)
 401 020e 0E94 0000 		call nwkFrameAlloc_LLDN
 402 0212 9A83      		std Y+2,r25
 403 0214 8983      		std Y+1,r24
 404 0216 8981      		ldd r24,Y+1
 405 0218 9A81      		ldd r25,Y+2
 406 021a 892B      		or r24,r25
 407 021c 01F4      		brne .+2
 408 021e 00C0      		rjmp .L32
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-Beacon change state to LLBEACON
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLBEACON;
 409               		.loc 2 187 0
 410 0220 8981      		ldd r24,Y+1
 411 0222 9A81      		ldd r25,Y+2
 412 0224 26E2      		ldi r18,lo8(38)
 413 0226 FC01      		movw r30,r24
 414 0228 2083      		st Z,r18
 415 022a 00C0      		rjmp .L23
 416               	.L24:
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-MAC command or LL-Data frame
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(false))){
 417               		.loc 2 192 0
 418 022c 80E0      		ldi r24,0
 419 022e 0E94 0000 		call nwkFrameAlloc_LLDN
 420 0232 9A83      		std Y+2,r25
 421 0234 8983      		std Y+1,r24
 422 0236 8981      		ldd r24,Y+1
 423 0238 9A81      		ldd r25,Y+2
 424 023a 892B      		or r24,r25
 425 023c 01F4      		brne .+2
 426 023e 00C0      		rjmp .L33
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-AckFrame change state to LLACKFRAME
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-MACComand change state to LLCOMMAND
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->data[0] == 0x8c) 
 427               		.loc 2 197 0
 428 0240 8B81      		ldd r24,Y+3
 429 0242 9C81      		ldd r25,Y+4
 430 0244 FC01      		movw r30,r24
 431 0246 8081      		ld r24,Z
 432 0248 9181      		ldd r25,Z+1
 433 024a FC01      		movw r30,r24
 434 024c 8081      		ld r24,Z
 435 024e 8C38      		cpi r24,lo8(-116)
 436 0250 01F4      		brne .L27
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLACKFRAME;
 437               		.loc 2 198 0
 438 0252 8981      		ldd r24,Y+1
 439 0254 9A81      		ldd r25,Y+2
 440 0256 28E2      		ldi r18,lo8(40)
 441 0258 FC01      		movw r30,r24
 442 025a 2083      		st Z,r18
 443 025c 00C0      		rjmp .L23
 444               	.L27:
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{ 
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLCOMMAND;
 445               		.loc 2 201 0
 446 025e 8981      		ldd r24,Y+1
 447 0260 9A81      		ldd r25,Y+2
 448 0262 27E2      		ldi r18,lo8(39)
 449 0264 FC01      		movw r30,r24
 450 0266 2083      		st Z,r18
 451               	.L23:
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size = ind->size;
 452               		.loc 2 205 0
 453 0268 8B81      		ldd r24,Y+3
 454 026a 9C81      		ldd r25,Y+4
 455 026c FC01      		movw r30,r24
 456 026e 2281      		ldd r18,Z+2
 457 0270 8981      		ldd r24,Y+1
 458 0272 9A81      		ldd r25,Y+2
 459 0274 FC01      		movw r30,r24
 460 0276 2183      		std Z+1,r18
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\nframe->size = %hhx", frame->size);
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.lqi = ind->lqi;
 461               		.loc 2 207 0
 462 0278 8B81      		ldd r24,Y+3
 463 027a 9C81      		ldd r25,Y+4
 464 027c FC01      		movw r30,r24
 465 027e 2381      		ldd r18,Z+3
 466 0280 8981      		ldd r24,Y+1
 467 0282 9A81      		ldd r25,Y+2
 468 0284 8D57      		subi r24,125
 469 0286 9F4F      		sbci r25,-1
 470 0288 FC01      		movw r30,r24
 471 028a 2083      		st Z,r18
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.rssi = ind->rssi;
 472               		.loc 2 208 0
 473 028c 8B81      		ldd r24,Y+3
 474 028e 9C81      		ldd r25,Y+4
 475 0290 FC01      		movw r30,r24
 476 0292 2481      		ldd r18,Z+4
 477 0294 8981      		ldd r24,Y+1
 478 0296 9A81      		ldd r25,Y+2
 479 0298 8C57      		subi r24,124
 480 029a 9F4F      		sbci r25,-1
 481 029c FC01      		movw r30,r24
 482 029e 2083      		st Z,r18
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	memcpy(frame->data, ind->data, ind->size);
 483               		.loc 2 209 0
 484 02a0 8B81      		ldd r24,Y+3
 485 02a2 9C81      		ldd r25,Y+4
 486 02a4 FC01      		movw r30,r24
 487 02a6 8281      		ldd r24,Z+2
 488 02a8 482F      		mov r20,r24
 489 02aa 50E0      		ldi r21,0
 490 02ac 8B81      		ldd r24,Y+3
 491 02ae 9C81      		ldd r25,Y+4
 492 02b0 FC01      		movw r30,r24
 493 02b2 2081      		ld r18,Z
 494 02b4 3181      		ldd r19,Z+1
 495 02b6 8981      		ldd r24,Y+1
 496 02b8 9A81      		ldd r25,Y+2
 497 02ba 0296      		adiw r24,2
 498 02bc B901      		movw r22,r18
 499 02be 0E94 0000 		call memcpy
 500 02c2 00C0      		rjmp .L6
 501               	.L28:
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 502               		.loc 2 155 0
 503 02c4 0000      		nop
 504 02c6 00C0      		rjmp .L6
 505               	.L29:
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 506               		.loc 2 167 0
 507 02c8 0000      		nop
 508 02ca 00C0      		rjmp .L6
 509               	.L30:
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 510               		.loc 2 162 0
 511 02cc 0000      		nop
 512 02ce 00C0      		rjmp .L6
 513               	.L31:
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 514               		.loc 2 173 0
 515 02d0 0000      		nop
 516 02d2 00C0      		rjmp .L6
 517               	.L32:
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 518               		.loc 2 184 0
 519 02d4 0000      		nop
 520 02d6 00C0      		rjmp .L6
 521               	.L33:
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 522               		.loc 2 193 0
 523 02d8 0000      		nop
 524               	.L6:
 525               	/* epilogue start */
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\nframe->payload[2] = %hhx", frame->payload[2]);
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 526               		.loc 2 212 0
 527 02da 0F90      		pop __tmp_reg__
 528 02dc 0F90      		pop __tmp_reg__
 529 02de 0F90      		pop __tmp_reg__
 530 02e0 0F90      		pop __tmp_reg__
 531 02e2 DF91      		pop r29
 532 02e4 CF91      		pop r28
 533 02e6 0895      		ret
 534               		.cfi_endproc
 535               	.LFE67:
 538               	nwkRxSendAck:
 539               	.LFB68:
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxSendAck(NwkFrame_t *frame)
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 540               		.loc 2 217 0
 541               		.cfi_startproc
 542 02e8 CF93      		push r28
 543               	.LCFI12:
 544               		.cfi_def_cfa_offset 3
 545               		.cfi_offset 28, -2
 546 02ea DF93      		push r29
 547               	.LCFI13:
 548               		.cfi_def_cfa_offset 4
 549               		.cfi_offset 29, -3
 550 02ec 00D0      		rcall .
 551 02ee 00D0      		rcall .
 552 02f0 00D0      		rcall .
 553               	.LCFI14:
 554               		.cfi_def_cfa_offset 10
 555 02f2 CDB7      		in r28,__SP_L__
 556 02f4 DEB7      		in r29,__SP_H__
 557               	.LCFI15:
 558               		.cfi_def_cfa_register 28
 559               	/* prologue: function */
 560               	/* frame size = 6 */
 561               	/* stack size = 8 */
 562               	.L__stack_usage = 8
 563 02f6 9E83      		std Y+6,r25
 564 02f8 8D83      		std Y+5,r24
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *ack;
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkCommandAck_t *command;
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (ack = nwkFrameAlloc())) {
 565               		.loc 2 221 0
 566 02fa 0E94 0000 		call nwkFrameAlloc
 567 02fe 9A83      		std Y+2,r25
 568 0300 8983      		std Y+1,r24
 569 0302 8981      		ldd r24,Y+1
 570 0304 9A81      		ldd r25,Y+2
 571 0306 892B      		or r24,r25
 572 0308 01F4      		brne .+2
 573 030a 00C0      		rjmp .L37
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size += sizeof(NwkFrameHeader_t);
 574               		.loc 2 225 0
 575 030c 8D81      		ldd r24,Y+5
 576 030e 9E81      		ldd r25,Y+6
 577 0310 FC01      		movw r30,r24
 578 0312 8181      		ldd r24,Z+1
 579 0314 20E1      		ldi r18,lo8(16)
 580 0316 280F      		add r18,r24
 581 0318 8D81      		ldd r24,Y+5
 582 031a 9E81      		ldd r25,Y+6
 583 031c FC01      		movw r30,r24
 584 031e 2183      		std Z+1,r18
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->payload += sizeof(NwkFrameHeader_t);
 585               		.loc 2 226 0
 586 0320 8D81      		ldd r24,Y+5
 587 0322 9E81      		ldd r25,Y+6
 588 0324 8F57      		subi r24,127
 589 0326 9F4F      		sbci r25,-1
 590 0328 FC01      		movw r30,r24
 591 032a 8081      		ld r24,Z
 592 032c 9181      		ldd r25,Z+1
 593 032e 9C01      		movw r18,r24
 594 0330 205F      		subi r18,-16
 595 0332 3F4F      		sbci r19,-1
 596 0334 8D81      		ldd r24,Y+5
 597 0336 9E81      		ldd r25,Y+6
 598 0338 8F57      		subi r24,127
 599 033a 9F4F      		sbci r25,-1
 600 033c FC01      		movw r30,r24
 601 033e 3183      		std Z+1,r19
 602 0340 2083      		st Z,r18
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkFrameCommandInit(ack);
 603               		.loc 2 228 0
 604 0342 8981      		ldd r24,Y+1
 605 0344 9A81      		ldd r25,Y+2
 606 0346 0E94 0000 		call nwkFrameCommandInit
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->size += sizeof(NwkCommandAck_t);
 607               		.loc 2 230 0
 608 034a 8981      		ldd r24,Y+1
 609 034c 9A81      		ldd r25,Y+2
 610 034e FC01      		movw r30,r24
 611 0350 8181      		ldd r24,Z+1
 612 0352 23E0      		ldi r18,lo8(3)
 613 0354 280F      		add r18,r24
 614 0356 8981      		ldd r24,Y+1
 615 0358 9A81      		ldd r25,Y+2
 616 035a FC01      		movw r30,r24
 617 035c 2183      		std Z+1,r18
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->tx.confirm = NULL;
 618               		.loc 2 231 0
 619 035e 8981      		ldd r24,Y+1
 620 0360 9A81      		ldd r25,Y+2
 621 0362 8957      		subi r24,121
 622 0364 9F4F      		sbci r25,-1
 623 0366 FC01      		movw r30,r24
 624 0368 1182      		std Z+1,__zero_reg__
 625 036a 1082      		st Z,__zero_reg__
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkFcf.security = frame->header.nwkFcf.security;
 626               		.loc 2 233 0
 627 036c 8D81      		ldd r24,Y+5
 628 036e 9E81      		ldd r25,Y+6
 629 0370 FC01      		movw r30,r24
 630 0372 8385      		ldd r24,Z+11
 631 0374 81FB      		bst r24,1
 632 0376 2227      		clr r18
 633 0378 20F9      		bld r18,0
 634 037a 8981      		ldd r24,Y+1
 635 037c 9A81      		ldd r25,Y+2
 636 037e 2170      		andi r18,lo8(1)
 637 0380 220F      		lsl r18
 638 0382 FC01      		movw r30,r24
 639 0384 3385      		ldd r19,Z+11
 640 0386 3D7F      		andi r19,lo8(-3)
 641 0388 232B      		or r18,r19
 642 038a FC01      		movw r30,r24
 643 038c 2387      		std Z+11,r18
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 644               		.loc 2 234 0
 645 038e 8D81      		ldd r24,Y+5
 646 0390 9E81      		ldd r25,Y+6
 647 0392 FC01      		movw r30,r24
 648 0394 2585      		ldd r18,Z+13
 649 0396 3685      		ldd r19,Z+14
 650 0398 8981      		ldd r24,Y+1
 651 039a 9A81      		ldd r25,Y+2
 652 039c FC01      		movw r30,r24
 653 039e 308B      		std Z+16,r19
 654 03a0 2787      		std Z+15,r18
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command = (NwkCommandAck_t *)ack->payload;
 655               		.loc 2 236 0
 656 03a2 8981      		ldd r24,Y+1
 657 03a4 9A81      		ldd r25,Y+2
 658 03a6 8F57      		subi r24,127
 659 03a8 9F4F      		sbci r25,-1
 660 03aa FC01      		movw r30,r24
 661 03ac 8081      		ld r24,Z
 662 03ae 9181      		ldd r25,Z+1
 663 03b0 9C83      		std Y+4,r25
 664 03b2 8B83      		std Y+3,r24
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->id = NWK_COMMAND_ACK;
 665               		.loc 2 237 0
 666 03b4 8B81      		ldd r24,Y+3
 667 03b6 9C81      		ldd r25,Y+4
 668 03b8 FC01      		movw r30,r24
 669 03ba 1082      		st Z,__zero_reg__
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->control = nwkRxAckControl;
 670               		.loc 2 238 0
 671 03bc 2091 0000 		lds r18,nwkRxAckControl
 672 03c0 8B81      		ldd r24,Y+3
 673 03c2 9C81      		ldd r25,Y+4
 674 03c4 FC01      		movw r30,r24
 675 03c6 2283      		std Z+2,r18
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->seq = frame->header.nwkSeq;
 676               		.loc 2 239 0
 677 03c8 8D81      		ldd r24,Y+5
 678 03ca 9E81      		ldd r25,Y+6
 679 03cc FC01      		movw r30,r24
 680 03ce 2485      		ldd r18,Z+12
 681 03d0 8B81      		ldd r24,Y+3
 682 03d2 9C81      		ldd r25,Y+4
 683 03d4 FC01      		movw r30,r24
 684 03d6 2183      		std Z+1,r18
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkTxFrame(ack);
 685               		.loc 2 241 0
 686 03d8 8981      		ldd r24,Y+1
 687 03da 9A81      		ldd r25,Y+2
 688 03dc 0E94 0000 		call nwkTxFrame
 689 03e0 00C0      		rjmp .L34
 690               	.L37:
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 691               		.loc 2 222 0
 692 03e2 0000      		nop
 693               	.L34:
 694               	/* epilogue start */
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 695               		.loc 2 242 0
 696 03e4 2696      		adiw r28,6
 697 03e6 0FB6      		in __tmp_reg__,__SREG__
 698 03e8 F894      		cli
 699 03ea DEBF      		out __SP_H__,r29
 700 03ec 0FBE      		out __SREG__,__tmp_reg__
 701 03ee CDBF      		out __SP_L__,r28
 702 03f0 DF91      		pop r29
 703 03f2 CF91      		pop r28
 704 03f4 0895      		ret
 705               		.cfi_endproc
 706               	.LFE68:
 708               	.global	NWK_SetAckControl
 710               	NWK_SetAckControl:
 711               	.LFB69:
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void NWK_SetAckControl(uint8_t control)
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 712               		.loc 2 247 0
 713               		.cfi_startproc
 714 03f6 CF93      		push r28
 715               	.LCFI16:
 716               		.cfi_def_cfa_offset 3
 717               		.cfi_offset 28, -2
 718 03f8 DF93      		push r29
 719               	.LCFI17:
 720               		.cfi_def_cfa_offset 4
 721               		.cfi_offset 29, -3
 722 03fa 1F92      		push __zero_reg__
 723               	.LCFI18:
 724               		.cfi_def_cfa_offset 5
 725 03fc CDB7      		in r28,__SP_L__
 726 03fe DEB7      		in r29,__SP_H__
 727               	.LCFI19:
 728               		.cfi_def_cfa_register 28
 729               	/* prologue: function */
 730               	/* frame size = 1 */
 731               	/* stack size = 3 */
 732               	.L__stack_usage = 3
 733 0400 8983      		std Y+1,r24
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = control;
 734               		.loc 2 248 0
 735 0402 8981      		ldd r24,Y+1
 736 0404 8093 0000 		sts nwkRxAckControl,r24
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 737               		.loc 2 249 0
 738 0408 0000      		nop
 739               	/* epilogue start */
 740 040a 0F90      		pop __tmp_reg__
 741 040c DF91      		pop r29
 742 040e CF91      		pop r28
 743 0410 0895      		ret
 744               		.cfi_endproc
 745               	.LFE69:
 748               	nwkRxDuplicateRejectionTimerHandler:
 749               	.LFB70:
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxDecryptConf(NwkFrame_t *frame, bool status)
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (status) {
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_INDICATE;
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else {
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_FINISH;
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer)
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 750               		.loc 2 269 0
 751               		.cfi_startproc
 752 0412 CF93      		push r28
 753               	.LCFI20:
 754               		.cfi_def_cfa_offset 3
 755               		.cfi_offset 28, -2
 756 0414 DF93      		push r29
 757               	.LCFI21:
 758               		.cfi_def_cfa_offset 4
 759               		.cfi_offset 29, -3
 760 0416 00D0      		rcall .
 761 0418 00D0      		rcall .
 762               	.LCFI22:
 763               		.cfi_def_cfa_offset 8
 764 041a CDB7      		in r28,__SP_L__
 765 041c DEB7      		in r29,__SP_H__
 766               	.LCFI23:
 767               		.cfi_def_cfa_register 28
 768               	/* prologue: function */
 769               	/* frame size = 4 */
 770               	/* stack size = 6 */
 771               	.L__stack_usage = 6
 772 041e 9C83      		std Y+4,r25
 773 0420 8B83      		std Y+3,r24
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool restart = false;
 774               		.loc 2 270 0
 775 0422 1982      		std Y+1,__zero_reg__
 776               	.LBB3:
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 777               		.loc 2 272 0
 778 0424 1A82      		std Y+2,__zero_reg__
 779 0426 00C0      		rjmp .L40
 780               	.L42:
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 781               		.loc 2 273 0
 782 0428 8A81      		ldd r24,Y+2
 783 042a 282F      		mov r18,r24
 784 042c 30E0      		ldi r19,0
 785 042e C901      		movw r24,r18
 786 0430 880F      		lsl r24
 787 0432 991F      		rol r25
 788 0434 880F      		lsl r24
 789 0436 991F      		rol r25
 790 0438 820F      		add r24,r18
 791 043a 931F      		adc r25,r19
 792 043c 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 793 043e 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 794 0440 FC01      		movw r30,r24
 795 0442 8081      		ld r24,Z
 796 0444 8823      		tst r24
 797 0446 01F0      		breq .L41
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxDuplicateRejectionTable[i].ttl--;
 798               		.loc 2 274 0
 799 0448 8A81      		ldd r24,Y+2
 800 044a 282F      		mov r18,r24
 801 044c 30E0      		ldi r19,0
 802 044e C901      		movw r24,r18
 803 0450 880F      		lsl r24
 804 0452 991F      		rol r25
 805 0454 880F      		lsl r24
 806 0456 991F      		rol r25
 807 0458 820F      		add r24,r18
 808 045a 931F      		adc r25,r19
 809 045c 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 810 045e 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 811 0460 FC01      		movw r30,r24
 812 0462 8081      		ld r24,Z
 813 0464 4FEF      		ldi r20,lo8(-1)
 814 0466 480F      		add r20,r24
 815 0468 C901      		movw r24,r18
 816 046a 880F      		lsl r24
 817 046c 991F      		rol r25
 818 046e 880F      		lsl r24
 819 0470 991F      		rol r25
 820 0472 820F      		add r24,r18
 821 0474 931F      		adc r25,r19
 822 0476 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 823 0478 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 824 047a FC01      		movw r30,r24
 825 047c 4083      		st Z,r20
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			restart = true;
 826               		.loc 2 275 0
 827 047e 81E0      		ldi r24,lo8(1)
 828 0480 8983      		std Y+1,r24
 829               	.L41:
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 830               		.loc 2 272 0 discriminator 2
 831 0482 8A81      		ldd r24,Y+2
 832 0484 8F5F      		subi r24,lo8(-(1))
 833 0486 8A83      		std Y+2,r24
 834               	.L40:
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 835               		.loc 2 272 0 is_stmt 0 discriminator 1
 836 0488 8A81      		ldd r24,Y+2
 837 048a 8233      		cpi r24,lo8(50)
 838 048c 00F0      		brlo .L42
 839               	.LBE3:
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (restart) {
 840               		.loc 2 279 0 is_stmt 1
 841 048e 8981      		ldd r24,Y+1
 842 0490 8823      		tst r24
 843 0492 01F0      		breq .L44
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		SYS_TimerStart(timer);
 844               		.loc 2 280 0
 845 0494 8B81      		ldd r24,Y+3
 846 0496 9C81      		ldd r25,Y+4
 847 0498 0E94 0000 		call SYS_TimerStart
 848               	.L44:
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 849               		.loc 2 282 0
 850 049c 0000      		nop
 851               	/* epilogue start */
 852 049e 0F90      		pop __tmp_reg__
 853 04a0 0F90      		pop __tmp_reg__
 854 04a2 0F90      		pop __tmp_reg__
 855 04a4 0F90      		pop __tmp_reg__
 856 04a6 DF91      		pop r29
 857 04a8 CF91      		pop r28
 858 04aa 0895      		ret
 859               		.cfi_endproc
 860               	.LFE70:
 863               	nwkRxRejectDuplicate:
 864               	.LFB71:
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxRejectDuplicate(NwkFrameHeader_t *header)
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 865               		.loc 2 287 0
 866               		.cfi_startproc
 867 04ac CF93      		push r28
 868               	.LCFI24:
 869               		.cfi_def_cfa_offset 3
 870               		.cfi_offset 28, -2
 871 04ae DF93      		push r29
 872               	.LCFI25:
 873               		.cfi_def_cfa_offset 4
 874               		.cfi_offset 29, -3
 875 04b0 CDB7      		in r28,__SP_L__
 876 04b2 DEB7      		in r29,__SP_H__
 877               	.LCFI26:
 878               		.cfi_def_cfa_register 28
 879 04b4 2997      		sbiw r28,9
 880               	.LCFI27:
 881               		.cfi_def_cfa_offset 13
 882 04b6 0FB6      		in __tmp_reg__,__SREG__
 883 04b8 F894      		cli
 884 04ba DEBF      		out __SP_H__,r29
 885 04bc 0FBE      		out __SREG__,__tmp_reg__
 886 04be CDBF      		out __SP_L__,r28
 887               	/* prologue: function */
 888               	/* frame size = 9 */
 889               	/* stack size = 11 */
 890               	.L__stack_usage = 11
 891 04c0 9987      		std Y+9,r25
 892 04c2 8887      		std Y+8,r24
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *entry;
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *freeEntry = NULL;
 893               		.loc 2 289 0
 894 04c4 1A82      		std Y+2,__zero_reg__
 895 04c6 1982      		std Y+1,__zero_reg__
 896               	.LBB4:
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 897               		.loc 2 291 0
 898 04c8 1B82      		std Y+3,__zero_reg__
 899 04ca 00C0      		rjmp .L46
 900               	.L52:
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 901               		.loc 2 292 0
 902 04cc 8B81      		ldd r24,Y+3
 903 04ce 282F      		mov r18,r24
 904 04d0 30E0      		ldi r19,0
 905 04d2 C901      		movw r24,r18
 906 04d4 880F      		lsl r24
 907 04d6 991F      		rol r25
 908 04d8 880F      		lsl r24
 909 04da 991F      		rol r25
 910 04dc 820F      		add r24,r18
 911 04de 931F      		adc r25,r19
 912 04e0 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable))
 913 04e2 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable))
 914 04e4 9D83      		std Y+5,r25
 915 04e6 8C83      		std Y+4,r24
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (entry->ttl && header->nwkSrcAddr == entry->src) {
 916               		.loc 2 294 0
 917 04e8 8C81      		ldd r24,Y+4
 918 04ea 9D81      		ldd r25,Y+5
 919 04ec FC01      		movw r30,r24
 920 04ee 8481      		ldd r24,Z+4
 921 04f0 8823      		tst r24
 922 04f2 01F4      		brne .+2
 923 04f4 00C0      		rjmp .L47
 924               		.loc 2 294 0 is_stmt 0 discriminator 1
 925 04f6 8885      		ldd r24,Y+8
 926 04f8 9985      		ldd r25,Y+9
 927 04fa FC01      		movw r30,r24
 928 04fc 2385      		ldd r18,Z+11
 929 04fe 3485      		ldd r19,Z+12
 930 0500 8C81      		ldd r24,Y+4
 931 0502 9D81      		ldd r25,Y+5
 932 0504 FC01      		movw r30,r24
 933 0506 8081      		ld r24,Z
 934 0508 9181      		ldd r25,Z+1
 935 050a 2817      		cp r18,r24
 936 050c 3907      		cpc r19,r25
 937 050e 01F0      		breq .+2
 938 0510 00C0      		rjmp .L47
 939               	.LBB5:
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			uint8_t diff = (int8_t)entry->seq - header->nwkSeq;
 940               		.loc 2 295 0 is_stmt 1
 941 0512 8C81      		ldd r24,Y+4
 942 0514 9D81      		ldd r25,Y+5
 943 0516 FC01      		movw r30,r24
 944 0518 2281      		ldd r18,Z+2
 945 051a 8885      		ldd r24,Y+8
 946 051c 9985      		ldd r25,Y+9
 947 051e FC01      		movw r30,r24
 948 0520 8285      		ldd r24,Z+10
 949 0522 F22F      		mov r31,r18
 950 0524 F81B      		sub r31,r24
 951 0526 8F2F      		mov r24,r31
 952 0528 8E83      		std Y+6,r24
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (diff < 8) {
 953               		.loc 2 297 0
 954 052a 8E81      		ldd r24,Y+6
 955 052c 8830      		cpi r24,lo8(8)
 956 052e 00F4      		brsh .L48
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				if (entry->mask & (1 << diff)) {
 957               		.loc 2 298 0
 958 0530 8C81      		ldd r24,Y+4
 959 0532 9D81      		ldd r25,Y+5
 960 0534 FC01      		movw r30,r24
 961 0536 8381      		ldd r24,Z+3
 962 0538 882F      		mov r24,r24
 963 053a 90E0      		ldi r25,0
 964 053c 2E81      		ldd r18,Y+6
 965 053e 222F      		mov r18,r18
 966 0540 30E0      		ldi r19,0
 967 0542 00C0      		rjmp 2f
 968               		1:
 969 0544 9595      		asr r25
 970 0546 8795      		ror r24
 971               		2:
 972 0548 2A95      		dec r18
 973 054a 02F4      		brpl 1b
 974 054c 8170      		andi r24,1
 975 054e 9927      		clr r25
 976 0550 892B      		or r24,r25
 977 0552 01F0      		breq .L49
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#ifdef NWK_ENABLE_ROUTING
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					if (nwkIb.addr == header->macDstAddr) {
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 						nwkRouteRemove(
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkDstAddr,
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkFcf.multicast);
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					}
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#endif
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					return true;
 978               		.loc 2 307 0
 979 0554 81E0      		ldi r24,lo8(1)
 980 0556 00C0      		rjmp .L50
 981               	.L49:
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				}
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask |= (1 << diff);
 982               		.loc 2 310 0
 983 0558 8C81      		ldd r24,Y+4
 984 055a 9D81      		ldd r25,Y+5
 985 055c FC01      		movw r30,r24
 986 055e 8381      		ldd r24,Z+3
 987 0560 482F      		mov r20,r24
 988 0562 8E81      		ldd r24,Y+6
 989 0564 282F      		mov r18,r24
 990 0566 30E0      		ldi r19,0
 991 0568 81E0      		ldi r24,lo8(1)
 992 056a 90E0      		ldi r25,0
 993 056c 00C0      		rjmp 2f
 994               		1:
 995 056e 880F      		lsl r24
 996 0570 991F      		rol r25
 997               		2:
 998 0572 2A95      		dec r18
 999 0574 02F4      		brpl 1b
 1000 0576 842B      		or r24,r20
 1001 0578 282F      		mov r18,r24
 1002 057a 8C81      		ldd r24,Y+4
 1003 057c 9D81      		ldd r25,Y+5
 1004 057e FC01      		movw r30,r24
 1005 0580 2383      		std Z+3,r18
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1006               		.loc 2 311 0
 1007 0582 80E0      		ldi r24,0
 1008 0584 00C0      		rjmp .L50
 1009               	.L48:
 1010               	.LBB6:
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				uint8_t shift = -(int8_t)diff;
 1011               		.loc 2 313 0
 1012 0586 8E81      		ldd r24,Y+6
 1013 0588 8195      		neg r24
 1014 058a 8F83      		std Y+7,r24
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->seq = header->nwkSeq;
 1015               		.loc 2 315 0
 1016 058c 8885      		ldd r24,Y+8
 1017 058e 9985      		ldd r25,Y+9
 1018 0590 FC01      		movw r30,r24
 1019 0592 2285      		ldd r18,Z+10
 1020 0594 8C81      		ldd r24,Y+4
 1021 0596 9D81      		ldd r25,Y+5
 1022 0598 FC01      		movw r30,r24
 1023 059a 2283      		std Z+2,r18
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask = (entry->mask << shift) | 1;
 1024               		.loc 2 316 0
 1025 059c 8C81      		ldd r24,Y+4
 1026 059e 9D81      		ldd r25,Y+5
 1027 05a0 FC01      		movw r30,r24
 1028 05a2 8381      		ldd r24,Z+3
 1029 05a4 882F      		mov r24,r24
 1030 05a6 90E0      		ldi r25,0
 1031 05a8 2F81      		ldd r18,Y+7
 1032 05aa 222F      		mov r18,r18
 1033 05ac 30E0      		ldi r19,0
 1034 05ae 00C0      		rjmp 2f
 1035               		1:
 1036 05b0 880F      		lsl r24
 1037 05b2 991F      		rol r25
 1038               		2:
 1039 05b4 2A95      		dec r18
 1040 05b6 02F4      		brpl 1b
 1041 05b8 8160      		ori r24,lo8(1)
 1042 05ba 282F      		mov r18,r24
 1043 05bc 8C81      		ldd r24,Y+4
 1044 05be 9D81      		ldd r25,Y+5
 1045 05c0 FC01      		movw r30,r24
 1046 05c2 2383      		std Z+3,r18
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->ttl = DUPLICATE_REJECTION_TTL;
 1047               		.loc 2 317 0
 1048 05c4 8C81      		ldd r24,Y+4
 1049 05c6 9D81      		ldd r25,Y+5
 1050 05c8 25E1      		ldi r18,lo8(21)
 1051 05ca FC01      		movw r30,r24
 1052 05cc 2483      		std Z+4,r18
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1053               		.loc 2 318 0
 1054 05ce 80E0      		ldi r24,0
 1055 05d0 00C0      		rjmp .L50
 1056               	.L47:
 1057               	.LBE6:
 1058               	.LBE5:
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (0 == entry->ttl) {
 1059               		.loc 2 322 0
 1060 05d2 8C81      		ldd r24,Y+4
 1061 05d4 9D81      		ldd r25,Y+5
 1062 05d6 FC01      		movw r30,r24
 1063 05d8 8481      		ldd r24,Z+4
 1064 05da 8823      		tst r24
 1065 05dc 01F4      		brne .L51
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			freeEntry = entry;
 1066               		.loc 2 323 0
 1067 05de 8C81      		ldd r24,Y+4
 1068 05e0 9D81      		ldd r25,Y+5
 1069 05e2 9A83      		std Y+2,r25
 1070 05e4 8983      		std Y+1,r24
 1071               	.L51:
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1072               		.loc 2 291 0 discriminator 2
 1073 05e6 8B81      		ldd r24,Y+3
 1074 05e8 8F5F      		subi r24,lo8(-(1))
 1075 05ea 8B83      		std Y+3,r24
 1076               	.L46:
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1077               		.loc 2 291 0 is_stmt 0 discriminator 1
 1078 05ec 8B81      		ldd r24,Y+3
 1079 05ee 8233      		cpi r24,lo8(50)
 1080 05f0 00F4      		brsh .+2
 1081 05f2 00C0      		rjmp .L52
 1082               	.LBE4:
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == freeEntry) {
 1083               		.loc 2 327 0 is_stmt 1
 1084 05f4 8981      		ldd r24,Y+1
 1085 05f6 9A81      		ldd r25,Y+2
 1086 05f8 892B      		or r24,r25
 1087 05fa 01F4      		brne .L53
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return true;
 1088               		.loc 2 328 0
 1089 05fc 81E0      		ldi r24,lo8(1)
 1090 05fe 00C0      		rjmp .L50
 1091               	.L53:
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->src = header->nwkSrcAddr;
 1092               		.loc 2 331 0
 1093 0600 8885      		ldd r24,Y+8
 1094 0602 9985      		ldd r25,Y+9
 1095 0604 FC01      		movw r30,r24
 1096 0606 2385      		ldd r18,Z+11
 1097 0608 3485      		ldd r19,Z+12
 1098 060a 8981      		ldd r24,Y+1
 1099 060c 9A81      		ldd r25,Y+2
 1100 060e FC01      		movw r30,r24
 1101 0610 3183      		std Z+1,r19
 1102 0612 2083      		st Z,r18
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->seq = header->nwkSeq;
 1103               		.loc 2 332 0
 1104 0614 8885      		ldd r24,Y+8
 1105 0616 9985      		ldd r25,Y+9
 1106 0618 FC01      		movw r30,r24
 1107 061a 2285      		ldd r18,Z+10
 1108 061c 8981      		ldd r24,Y+1
 1109 061e 9A81      		ldd r25,Y+2
 1110 0620 FC01      		movw r30,r24
 1111 0622 2283      		std Z+2,r18
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->mask = 1;
 1112               		.loc 2 333 0
 1113 0624 8981      		ldd r24,Y+1
 1114 0626 9A81      		ldd r25,Y+2
 1115 0628 21E0      		ldi r18,lo8(1)
 1116 062a FC01      		movw r30,r24
 1117 062c 2383      		std Z+3,r18
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->ttl = DUPLICATE_REJECTION_TTL;
 1118               		.loc 2 334 0
 1119 062e 8981      		ldd r24,Y+1
 1120 0630 9A81      		ldd r25,Y+2
 1121 0632 25E1      		ldi r18,lo8(21)
 1122 0634 FC01      		movw r30,r24
 1123 0636 2483      		std Z+4,r18
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 1124               		.loc 2 336 0
 1125 0638 80E0      		ldi r24,lo8(nwkRxDuplicateRejectionTimer)
 1126 063a 90E0      		ldi r25,hi8(nwkRxDuplicateRejectionTimer)
 1127 063c 0E94 0000 		call SYS_TimerStart
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1128               		.loc 2 338 0
 1129 0640 80E0      		ldi r24,0
 1130               	.L50:
 1131               	/* epilogue start */
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1132               		.loc 2 339 0
 1133 0642 2996      		adiw r28,9
 1134 0644 0FB6      		in __tmp_reg__,__SREG__
 1135 0646 F894      		cli
 1136 0648 DEBF      		out __SP_H__,r29
 1137 064a 0FBE      		out __SREG__,__tmp_reg__
 1138 064c CDBF      		out __SP_L__,r28
 1139 064e DF91      		pop r29
 1140 0650 CF91      		pop r28
 1141 0652 0895      		ret
 1142               		.cfi_endproc
 1143               	.LFE71:
 1146               	nwkRxSeriveDataInd:
 1147               	.LFB72:
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind)
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1148               		.loc 2 344 0
 1149               		.cfi_startproc
 1150 0654 CF93      		push r28
 1151               	.LCFI28:
 1152               		.cfi_def_cfa_offset 3
 1153               		.cfi_offset 28, -2
 1154 0656 DF93      		push r29
 1155               	.LCFI29:
 1156               		.cfi_def_cfa_offset 4
 1157               		.cfi_offset 29, -3
 1158 0658 00D0      		rcall .
 1159               	.LCFI30:
 1160               		.cfi_def_cfa_offset 6
 1161 065a CDB7      		in r28,__SP_L__
 1162 065c DEB7      		in r29,__SP_H__
 1163               	.LCFI31:
 1164               		.cfi_def_cfa_register 28
 1165               	/* prologue: function */
 1166               	/* frame size = 2 */
 1167               	/* stack size = 4 */
 1168               	.L__stack_usage = 4
 1169 065e 9A83      		std Y+2,r25
 1170 0660 8983      		std Y+1,r24
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == (ind->options & NWK_IND_OPT_SECURED)) {
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ind->size < 1) {
 1171               		.loc 2 352 0
 1172 0662 8981      		ldd r24,Y+1
 1173 0664 9A81      		ldd r25,Y+2
 1174 0666 FC01      		movw r30,r24
 1175 0668 8285      		ldd r24,Z+10
 1176 066a 8823      		tst r24
 1177 066c 01F4      		brne .L55
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1178               		.loc 2 353 0
 1179 066e 80E0      		ldi r24,0
 1180 0670 00C0      		rjmp .L56
 1181               	.L55:
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	switch (ind->data[0]) {
 1182               		.loc 2 356 0
 1183 0672 8981      		ldd r24,Y+1
 1184 0674 9A81      		ldd r25,Y+2
 1185 0676 FC01      		movw r30,r24
 1186 0678 8085      		ldd r24,Z+8
 1187 067a 9185      		ldd r25,Z+9
 1188 067c FC01      		movw r30,r24
 1189 067e 8081      		ld r24,Z
 1190 0680 882F      		mov r24,r24
 1191 0682 90E0      		ldi r25,0
 1192 0684 892B      		or r24,r25
 1193 0686 01F4      		brne .L59
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ACK:
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkTxAckReceived(ind);
 1194               		.loc 2 358 0
 1195 0688 8981      		ldd r24,Y+1
 1196 068a 9A81      		ldd r25,Y+2
 1197 068c 0E94 0000 		call nwkTxAckReceived
 1198 0690 00C0      		rjmp .L56
 1199               	.L59:
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_ERROR:
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteErrorReceived(ind);
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTE_DISCOVERY
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REQUEST:
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryRequestReceived(ind);
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REPLY:
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryReplyReceived(ind);
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	default:
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1200               		.loc 2 376 0
 1201 0692 80E0      		ldi r24,0
 1202               	.L56:
 1203               	/* epilogue start */
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1204               		.loc 2 378 0
 1205 0694 0F90      		pop __tmp_reg__
 1206 0696 0F90      		pop __tmp_reg__
 1207 0698 DF91      		pop r29
 1208 069a CF91      		pop r28
 1209 069c 0895      		ret
 1210               		.cfi_endproc
 1211               	.LFE72:
 1214               	nwkRxHandleReceivedFrame:
 1215               	.LFB73:
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleReceivedFrame(NwkFrame_t *frame)
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1216               		.loc 2 383 0
 1217               		.cfi_startproc
 1218 069e CF93      		push r28
 1219               	.LCFI32:
 1220               		.cfi_def_cfa_offset 3
 1221               		.cfi_offset 28, -2
 1222 06a0 DF93      		push r29
 1223               	.LCFI33:
 1224               		.cfi_def_cfa_offset 4
 1225               		.cfi_offset 29, -3
 1226 06a2 CDB7      		in r28,__SP_L__
 1227 06a4 DEB7      		in r29,__SP_H__
 1228               	.LCFI34:
 1229               		.cfi_def_cfa_register 28
 1230 06a6 2897      		sbiw r28,8
 1231               	.LCFI35:
 1232               		.cfi_def_cfa_offset 12
 1233 06a8 0FB6      		in __tmp_reg__,__SREG__
 1234 06aa F894      		cli
 1235 06ac DEBF      		out __SP_H__,r29
 1236 06ae 0FBE      		out __SREG__,__tmp_reg__
 1237 06b0 CDBF      		out __SP_L__,r28
 1238               	/* prologue: function */
 1239               	/* frame size = 8 */
 1240               	/* stack size = 10 */
 1241               	.L__stack_usage = 10
 1242 06b2 9887      		std Y+8,r25
 1243 06b4 8F83      		std Y+7,r24
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1244               		.loc 2 384 0
 1245 06b6 8F81      		ldd r24,Y+7
 1246 06b8 9885      		ldd r25,Y+8
 1247 06ba 0296      		adiw r24,2
 1248 06bc 9B83      		std Y+3,r25
 1249 06be 8A83      		std Y+2,r24
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1250               		.loc 2 386 0
 1251 06c0 8F81      		ldd r24,Y+7
 1252 06c2 9885      		ldd r25,Y+8
 1253 06c4 24E2      		ldi r18,lo8(36)
 1254 06c6 FC01      		movw r30,r24
 1255 06c8 2083      		st Z,r18
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifndef NWK_ENABLE_SECURITY
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.security) {
 1256               		.loc 2 389 0
 1257 06ca 8A81      		ldd r24,Y+2
 1258 06cc 9B81      		ldd r25,Y+3
 1259 06ce FC01      		movw r30,r24
 1260 06d0 8185      		ldd r24,Z+9
 1261 06d2 8270      		andi r24,lo8(2)
 1262 06d4 8823      		tst r24
 1263 06d6 01F0      		breq .+2
 1264 06d8 00C0      		rjmp .L81
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast && header->nwkFcf.ackRequest) {
 1265               		.loc 2 396 0
 1266 06da 8A81      		ldd r24,Y+2
 1267 06dc 9B81      		ldd r25,Y+3
 1268 06de FC01      		movw r30,r24
 1269 06e0 8185      		ldd r24,Z+9
 1270 06e2 8870      		andi r24,lo8(8)
 1271 06e4 8823      		tst r24
 1272 06e6 01F0      		breq .L63
 1273               		.loc 2 396 0 is_stmt 0 discriminator 1
 1274 06e8 8A81      		ldd r24,Y+2
 1275 06ea 9B81      		ldd r25,Y+3
 1276 06ec FC01      		movw r30,r24
 1277 06ee 8185      		ldd r24,Z+9
 1278 06f0 8170      		andi r24,lo8(1)
 1279 06f2 8823      		tst r24
 1280 06f4 01F0      		breq .+2
 1281 06f6 00C0      		rjmp .L82
 1282               	.L63:
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #else
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == header->macDstPanId)
 1283               		.loc 2 407 0 is_stmt 1
 1284 06f8 8A81      		ldd r24,Y+2
 1285 06fa 9B81      		ldd r25,Y+3
 1286 06fc FC01      		movw r30,r24
 1287 06fe 8381      		ldd r24,Z+3
 1288 0700 9481      		ldd r25,Z+4
 1289 0702 0196      		adiw r24,1
 1290 0704 01F4      		brne .L64
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR == header->nwkDstAddr)
 1291               		.loc 2 409 0
 1292 0706 2091 0000 		lds r18,nwkIb
 1293 070a 3091 0000 		lds r19,nwkIb+1
 1294 070e 8A81      		ldd r24,Y+2
 1295 0710 9B81      		ldd r25,Y+3
 1296 0712 FC01      		movw r30,r24
 1297 0714 8585      		ldd r24,Z+13
 1298 0716 9685      		ldd r25,Z+14
 1299 0718 2817      		cp r18,r24
 1300 071a 3907      		cpc r19,r25
 1301 071c 01F0      		breq .L65
 1302               		.loc 2 409 0 is_stmt 0 discriminator 1
 1303 071e 8A81      		ldd r24,Y+2
 1304 0720 9B81      		ldd r25,Y+3
 1305 0722 FC01      		movw r30,r24
 1306 0724 8585      		ldd r24,Z+13
 1307 0726 9685      		ldd r25,Z+14
 1308 0728 0196      		adiw r24,1
 1309 072a 01F0      		breq .+2
 1310 072c 00C0      		rjmp .L83
 1311               	.L65:
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security)
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			{
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1312               		.loc 2 418 0 is_stmt 1
 1313 072e 8F81      		ldd r24,Y+7
 1314 0730 9885      		ldd r25,Y+8
 1315 0732 22E2      		ldi r18,lo8(34)
 1316 0734 FC01      		movw r30,r24
 1317 0736 2083      		st Z,r18
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 1318               		.loc 2 421 0
 1319 0738 00C0      		rjmp .L83
 1320               	.L64:
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ADDRESS_FILTER
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (!NWK_FilterAddress(header->macSrcAddr, &frame->rx.lqi)) {
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == header->nwkDstAddr && header->nwkFcf.ackRequest)
 1321               		.loc 2 431 0
 1322 073a 8A81      		ldd r24,Y+2
 1323 073c 9B81      		ldd r25,Y+3
 1324 073e FC01      		movw r30,r24
 1325 0740 8585      		ldd r24,Z+13
 1326 0742 9685      		ldd r25,Z+14
 1327 0744 0196      		adiw r24,1
 1328 0746 01F4      		brne .L67
 1329               		.loc 2 431 0 is_stmt 0 discriminator 1
 1330 0748 8A81      		ldd r24,Y+2
 1331 074a 9B81      		ldd r25,Y+3
 1332 074c FC01      		movw r30,r24
 1333 074e 8185      		ldd r24,Z+9
 1334 0750 8170      		andi r24,lo8(1)
 1335 0752 8823      		tst r24
 1336 0754 01F0      		breq .+2
 1337 0756 00C0      		rjmp .L84
 1338               	.L67:
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkIb.addr == header->nwkSrcAddr)
 1339               		.loc 2 436 0 is_stmt 1
 1340 0758 2091 0000 		lds r18,nwkIb
 1341 075c 3091 0000 		lds r19,nwkIb+1
 1342 0760 8A81      		ldd r24,Y+2
 1343 0762 9B81      		ldd r25,Y+3
 1344 0764 FC01      		movw r30,r24
 1345 0766 8385      		ldd r24,Z+11
 1346 0768 9485      		ldd r25,Z+12
 1347 076a 2817      		cp r18,r24
 1348 076c 3907      		cpc r19,r25
 1349 076e 01F4      		brne .+2
 1350 0770 00C0      		rjmp .L85
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRouteFrameReceived(frame);
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 445:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkRxRejectDuplicate(header))
 1351               		.loc 2 445 0
 1352 0772 8A81      		ldd r24,Y+2
 1353 0774 9B81      		ldd r25,Y+3
 1354 0776 0E94 0000 		call nwkRxRejectDuplicate
 1355 077a 8823      		tst r24
 1356 077c 01F0      		breq .+2
 1357 077e 00C0      		rjmp .L86
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 449:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 451:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 1358               		.loc 2 451 0
 1359 0780 8A81      		ldd r24,Y+2
 1360 0782 9B81      		ldd r25,Y+3
 1361 0784 FC01      		movw r30,r24
 1362 0786 8185      		ldd r24,Z+9
 1363 0788 8870      		andi r24,lo8(8)
 1364 078a 8823      		tst r24
 1365 078c 01F4      		brne .+2
 1366 078e 00C0      		rjmp .L70
 1367               	.LBB7:
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameMulticastHeader_t *mcHeader
 1368               		.loc 2 452 0
 1369 0790 8F81      		ldd r24,Y+7
 1370 0792 9885      		ldd r25,Y+8
 1371 0794 8F57      		subi r24,127
 1372 0796 9F4F      		sbci r25,-1
 1373 0798 FC01      		movw r30,r24
 1374 079a 8081      		ld r24,Z
 1375 079c 9181      		ldd r25,Z+1
 1376 079e 9D83      		std Y+5,r25
 1377 07a0 8C83      		std Y+4,r24
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			= (NwkFrameMulticastHeader_t *)frame->payload;
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool member = NWK_GroupIsMember(header->nwkDstAddr);
 1378               		.loc 2 454 0
 1379 07a2 8A81      		ldd r24,Y+2
 1380 07a4 9B81      		ldd r25,Y+3
 1381 07a6 FC01      		movw r30,r24
 1382 07a8 8585      		ldd r24,Z+13
 1383 07aa 9685      		ldd r25,Z+14
 1384 07ac 0E94 0000 		call NWK_GroupIsMember
 1385 07b0 8E83      		std Y+6,r24
 455:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool broadcast = false;
 1386               		.loc 2 455 0
 1387 07b2 1982      		std Y+1,__zero_reg__
 456:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 457:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 1388               		.loc 2 457 0
 1389 07b4 8A81      		ldd r24,Y+2
 1390 07b6 9B81      		ldd r25,Y+3
 1391 07b8 FC01      		movw r30,r24
 1392 07ba 8581      		ldd r24,Z+5
 1393 07bc 9681      		ldd r25,Z+6
 1394 07be 0196      		adiw r24,1
 1395 07c0 01F0      		breq .+2
 1396 07c2 00C0      		rjmp .L71
 458:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1397               		.loc 2 458 0
 1398 07c4 8E81      		ldd r24,Y+6
 1399 07c6 8823      		tst r24
 1400 07c8 01F0      		breq .L72
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->memberRadius > 0;
 1401               		.loc 2 459 0
 1402 07ca 8C81      		ldd r24,Y+4
 1403 07cc 9D81      		ldd r25,Y+5
 1404 07ce FC01      		movw r30,r24
 1405 07d0 8181      		ldd r24,Z+1
 1406 07d2 8F70      		andi r24,lo8(15)
 1407 07d4 882F      		mov r24,r24
 1408 07d6 90E0      		ldi r25,0
 1409 07d8 21E0      		ldi r18,lo8(1)
 1410 07da 1816      		cp __zero_reg__,r24
 1411 07dc 1906      		cpc __zero_reg__,r25
 1412 07de 04F0      		brlt .L73
 1413 07e0 20E0      		ldi r18,0
 1414               	.L73:
 1415 07e2 2983      		std Y+1,r18
 460:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius--;
 1416               		.loc 2 460 0
 1417 07e4 8C81      		ldd r24,Y+4
 1418 07e6 9D81      		ldd r25,Y+5
 1419 07e8 FC01      		movw r30,r24
 1420 07ea 8181      		ldd r24,Z+1
 1421 07ec 8F70      		andi r24,lo8(15)
 1422 07ee 2FE0      		ldi r18,lo8(15)
 1423 07f0 280F      		add r18,r24
 1424 07f2 2F70      		andi r18,lo8(15)
 1425 07f4 8C81      		ldd r24,Y+4
 1426 07f6 9D81      		ldd r25,Y+5
 1427 07f8 2F70      		andi r18,lo8(15)
 1428 07fa FC01      		movw r30,r24
 1429 07fc 3181      		ldd r19,Z+1
 1430 07fe 307F      		andi r19,lo8(-16)
 1431 0800 232B      		or r18,r19
 1432 0802 FC01      		movw r30,r24
 1433 0804 2183      		std Z+1,r18
 461:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius
 462:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxNonMemberRadius;
 1434               		.loc 2 462 0
 1435 0806 8C81      		ldd r24,Y+4
 1436 0808 9D81      		ldd r25,Y+5
 1437 080a FC01      		movw r30,r24
 1438 080c 8081      		ld r24,Z
 1439 080e 282F      		mov r18,r24
 1440 0810 2295      		swap r18
 1441 0812 2F70      		andi r18,lo8(15)
 1442 0814 8C81      		ldd r24,Y+4
 1443 0816 9D81      		ldd r25,Y+5
 1444 0818 2F70      		andi r18,lo8(15)
 1445 081a FC01      		movw r30,r24
 1446 081c 3081      		ld r19,Z
 1447 081e 307F      		andi r19,lo8(-16)
 1448 0820 232B      		or r18,r19
 1449 0822 FC01      		movw r30,r24
 1450 0824 2083      		st Z,r18
 1451 0826 00C0      		rjmp .L76
 1452               	.L72:
 463:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 464:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->nonMemberRadius > 0;
 1453               		.loc 2 464 0
 1454 0828 8C81      		ldd r24,Y+4
 1455 082a 9D81      		ldd r25,Y+5
 1456 082c FC01      		movw r30,r24
 1457 082e 8081      		ld r24,Z
 1458 0830 8F70      		andi r24,lo8(15)
 1459 0832 882F      		mov r24,r24
 1460 0834 90E0      		ldi r25,0
 1461 0836 21E0      		ldi r18,lo8(1)
 1462 0838 1816      		cp __zero_reg__,r24
 1463 083a 1906      		cpc __zero_reg__,r25
 1464 083c 04F0      		brlt .L75
 1465 083e 20E0      		ldi r18,0
 1466               	.L75:
 1467 0840 2983      		std Y+1,r18
 465:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius--;
 1468               		.loc 2 465 0
 1469 0842 8C81      		ldd r24,Y+4
 1470 0844 9D81      		ldd r25,Y+5
 1471 0846 FC01      		movw r30,r24
 1472 0848 8081      		ld r24,Z
 1473 084a 8F70      		andi r24,lo8(15)
 1474 084c 2FE0      		ldi r18,lo8(15)
 1475 084e 280F      		add r18,r24
 1476 0850 2F70      		andi r18,lo8(15)
 1477 0852 8C81      		ldd r24,Y+4
 1478 0854 9D81      		ldd r25,Y+5
 1479 0856 2F70      		andi r18,lo8(15)
 1480 0858 FC01      		movw r30,r24
 1481 085a 3081      		ld r19,Z
 1482 085c 307F      		andi r19,lo8(-16)
 1483 085e 232B      		or r18,r19
 1484 0860 FC01      		movw r30,r24
 1485 0862 2083      		st Z,r18
 466:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius
 467:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxMemberRadius;
 1486               		.loc 2 467 0
 1487 0864 8C81      		ldd r24,Y+4
 1488 0866 9D81      		ldd r25,Y+5
 1489 0868 FC01      		movw r30,r24
 1490 086a 8181      		ldd r24,Z+1
 1491 086c 282F      		mov r18,r24
 1492 086e 2295      		swap r18
 1493 0870 2F70      		andi r18,lo8(15)
 1494 0872 8C81      		ldd r24,Y+4
 1495 0874 9D81      		ldd r25,Y+5
 1496 0876 2F70      		andi r18,lo8(15)
 1497 0878 FC01      		movw r30,r24
 1498 087a 3181      		ldd r19,Z+1
 1499 087c 307F      		andi r19,lo8(-16)
 1500 087e 232B      		or r18,r19
 1501 0880 FC01      		movw r30,r24
 1502 0882 2183      		std Z+1,r18
 1503 0884 00C0      		rjmp .L76
 1504               	.L71:
 468:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 469:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		} else {
 470:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1505               		.loc 2 470 0
 1506 0886 8E81      		ldd r24,Y+6
 1507 0888 8823      		tst r24
 1508 088a 01F0      		breq .L76
 471:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = true;
 1509               		.loc 2 471 0
 1510 088c 81E0      		ldi r24,lo8(1)
 1511 088e 8983      		std Y+1,r24
 472:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkFcf.linkLocal = 1;
 1512               		.loc 2 472 0
 1513 0890 8A81      		ldd r24,Y+2
 1514 0892 9B81      		ldd r25,Y+3
 1515 0894 FC01      		movw r30,r24
 1516 0896 2185      		ldd r18,Z+9
 1517 0898 2460      		ori r18,lo8(4)
 1518 089a FC01      		movw r30,r24
 1519 089c 2187      		std Z+9,r18
 1520               	.L76:
 473:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 474:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 475:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_ROUTING
 476:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else {
 477:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_ROUTE;
 478:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 479:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 480:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 481:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 482:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (broadcast) {
 1521               		.loc 2 482 0
 1522 089e 8981      		ldd r24,Y+1
 1523 08a0 8823      		tst r24
 1524 08a2 01F0      		breq .L77
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1525               		.loc 2 483 0
 1526 08a4 8F81      		ldd r24,Y+7
 1527 08a6 9885      		ldd r25,Y+8
 1528 08a8 0E94 0000 		call nwkTxBroadcastFrame
 1529               	.L77:
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 485:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 486:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (member) {
 1530               		.loc 2 486 0
 1531 08ac 8E81      		ldd r24,Y+6
 1532 08ae 8823      		tst r24
 1533 08b0 01F4      		brne .+2
 1534 08b2 00C0      		rjmp .L60
 487:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 1535               		.loc 2 487 0
 1536 08b4 8F81      		ldd r24,Y+7
 1537 08b6 9885      		ldd r25,Y+8
 1538 08b8 8F57      		subi r24,127
 1539 08ba 9F4F      		sbci r25,-1
 1540 08bc FC01      		movw r30,r24
 1541 08be 8081      		ld r24,Z
 1542 08c0 9181      		ldd r25,Z+1
 1543 08c2 9C01      		movw r18,r24
 1544 08c4 2E5F      		subi r18,-2
 1545 08c6 3F4F      		sbci r19,-1
 1546 08c8 8F81      		ldd r24,Y+7
 1547 08ca 9885      		ldd r25,Y+8
 1548 08cc 8F57      		subi r24,127
 1549 08ce 9F4F      		sbci r25,-1
 1550 08d0 FC01      		movw r30,r24
 1551 08d2 3183      		std Z+1,r19
 1552 08d4 2083      		st Z,r18
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 490:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 491:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 492:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1553               		.loc 2 494 0
 1554 08d6 8F81      		ldd r24,Y+7
 1555 08d8 9885      		ldd r25,Y+8
 1556 08da 22E2      		ldi r18,lo8(34)
 1557 08dc FC01      		movw r30,r24
 1558 08de 2083      		st Z,r18
 1559 08e0 00C0      		rjmp .L60
 1560               	.L70:
 1561               	.LBE7:
 495:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 496:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else
 497:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif /* NWK_ENABLE_MULTICAST */
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr && nwkIb.addr !=
 1562               		.loc 2 499 0
 1563 08e2 8A81      		ldd r24,Y+2
 1564 08e4 9B81      		ldd r25,Y+3
 1565 08e6 FC01      		movw r30,r24
 1566 08e8 8581      		ldd r24,Z+5
 1567 08ea 9681      		ldd r25,Z+6
 1568 08ec 0196      		adiw r24,1
 1569 08ee 01F4      		brne .L79
 1570               		.loc 2 499 0 is_stmt 0 discriminator 1
 1571 08f0 2091 0000 		lds r18,nwkIb
 1572 08f4 3091 0000 		lds r19,nwkIb+1
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1573               		.loc 2 500 0 is_stmt 1 discriminator 1
 1574 08f8 8A81      		ldd r24,Y+2
 1575 08fa 9B81      		ldd r25,Y+3
 1576 08fc FC01      		movw r30,r24
 1577 08fe 8585      		ldd r24,Z+13
 1578 0900 9685      		ldd r25,Z+14
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1579               		.loc 2 499 0 discriminator 1
 1580 0902 2817      		cp r18,r24
 1581 0904 3907      		cpc r19,r25
 1582 0906 01F0      		breq .L79
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				0 == header->nwkFcf.linkLocal) {
 1583               		.loc 2 501 0
 1584 0908 8A81      		ldd r24,Y+2
 1585 090a 9B81      		ldd r25,Y+3
 1586 090c FC01      		movw r30,r24
 1587 090e 8185      		ldd r24,Z+9
 1588 0910 8470      		andi r24,lo8(4)
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1589               		.loc 2 500 0
 1590 0912 8823      		tst r24
 1591 0914 01F4      		brne .L79
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1592               		.loc 2 502 0
 1593 0916 8F81      		ldd r24,Y+7
 1594 0918 9885      		ldd r25,Y+8
 1595 091a 0E94 0000 		call nwkTxBroadcastFrame
 1596               	.L79:
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR ==
 1597               		.loc 2 505 0
 1598 091e 2091 0000 		lds r18,nwkIb
 1599 0922 3091 0000 		lds r19,nwkIb+1
 1600 0926 8A81      		ldd r24,Y+2
 1601 0928 9B81      		ldd r25,Y+3
 1602 092a FC01      		movw r30,r24
 1603 092c 8585      		ldd r24,Z+13
 1604 092e 9685      		ldd r25,Z+14
 1605 0930 2817      		cp r18,r24
 1606 0932 3907      		cpc r19,r25
 1607 0934 01F0      		breq .L80
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1608               		.loc 2 506 0 discriminator 1
 1609 0936 8A81      		ldd r24,Y+2
 1610 0938 9B81      		ldd r25,Y+3
 1611 093a FC01      		movw r30,r24
 1612 093c 8585      		ldd r24,Z+13
 1613 093e 9685      		ldd r25,Z+14
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1614               		.loc 2 505 0 discriminator 1
 1615 0940 0196      		adiw r24,1
 1616 0942 01F4      		brne .L60
 1617               	.L80:
 507:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 509:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 511:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 512:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1618               		.loc 2 512 0
 1619 0944 8F81      		ldd r24,Y+7
 1620 0946 9885      		ldd r25,Y+8
 1621 0948 22E2      		ldi r18,lo8(34)
 1622 094a FC01      		movw r30,r24
 1623 094c 2083      		st Z,r18
 1624 094e 00C0      		rjmp .L60
 1625               	.L81:
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1626               		.loc 2 390 0
 1627 0950 0000      		nop
 1628 0952 00C0      		rjmp .L60
 1629               	.L82:
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1630               		.loc 2 397 0
 1631 0954 0000      		nop
 1632 0956 00C0      		rjmp .L60
 1633               	.L83:
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1634               		.loc 2 421 0
 1635 0958 0000      		nop
 1636 095a 00C0      		rjmp .L60
 1637               	.L84:
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1638               		.loc 2 433 0
 1639 095c 0000      		nop
 1640 095e 00C0      		rjmp .L60
 1641               	.L85:
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1642               		.loc 2 438 0
 1643 0960 0000      		nop
 1644 0962 00C0      		rjmp .L60
 1645               	.L86:
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1646               		.loc 2 447 0
 1647 0964 0000      		nop
 1648               	.L60:
 1649               	/* epilogue start */
 513:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 514:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 515:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #ifdef NWK_ENABLE_ROUTING
 516:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if (nwkIb.addr == header->macDstAddr) {
 517:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_ROUTE;
 518:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 519:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #endif
 520:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 521:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1650               		.loc 2 521 0
 1651 0966 2896      		adiw r28,8
 1652 0968 0FB6      		in __tmp_reg__,__SREG__
 1653 096a F894      		cli
 1654 096c DEBF      		out __SP_H__,r29
 1655 096e 0FBE      		out __SREG__,__tmp_reg__
 1656 0970 CDBF      		out __SP_L__,r28
 1657 0972 DF91      		pop r29
 1658 0974 CF91      		pop r28
 1659 0976 0895      		ret
 1660               		.cfi_endproc
 1661               	.LFE73:
 1664               	nwkRxIndicateDataFrame:
 1665               	.LFB74:
 522:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 523:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 524:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 525:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateDataFrame(NwkFrame_t *frame)
 526:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1666               		.loc 2 526 0
 1667               		.cfi_startproc
 1668 0978 CF93      		push r28
 1669               	.LCFI36:
 1670               		.cfi_def_cfa_offset 3
 1671               		.cfi_offset 28, -2
 1672 097a DF93      		push r29
 1673               	.LCFI37:
 1674               		.cfi_def_cfa_offset 4
 1675               		.cfi_offset 29, -3
 1676 097c CDB7      		in r28,__SP_L__
 1677 097e DEB7      		in r29,__SP_H__
 1678               	.LCFI38:
 1679               		.cfi_def_cfa_register 28
 1680 0980 6197      		sbiw r28,17
 1681               	.LCFI39:
 1682               		.cfi_def_cfa_offset 21
 1683 0982 0FB6      		in __tmp_reg__,__SREG__
 1684 0984 F894      		cli
 1685 0986 DEBF      		out __SP_H__,r29
 1686 0988 0FBE      		out __SREG__,__tmp_reg__
 1687 098a CDBF      		out __SP_L__,r28
 1688               	/* prologue: function */
 1689               	/* frame size = 17 */
 1690               	/* stack size = 19 */
 1691               	.L__stack_usage = 19
 1692 098c 998B      		std Y+17,r25
 1693 098e 888B      		std Y+16,r24
 527:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1694               		.loc 2 527 0
 1695 0990 8889      		ldd r24,Y+16
 1696 0992 9989      		ldd r25,Y+17
 1697 0994 0296      		adiw r24,2
 1698 0996 9A83      		std Y+2,r25
 1699 0998 8983      		std Y+1,r24
 528:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 529:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 530:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[header->nwkDstEndpoint]) {
 1700               		.loc 2 530 0
 1701 099a 8981      		ldd r24,Y+1
 1702 099c 9A81      		ldd r25,Y+2
 1703 099e FC01      		movw r30,r24
 1704 09a0 8785      		ldd r24,Z+15
 1705 09a2 8295      		swap r24
 1706 09a4 8F70      		andi r24,lo8(15)
 1707 09a6 882F      		mov r24,r24
 1708 09a8 90E0      		ldi r25,0
 1709 09aa 0396      		adiw r24,3
 1710 09ac 880F      		lsl r24
 1711 09ae 991F      		rol r25
 1712 09b0 8050      		subi r24,lo8(-(nwkIb))
 1713 09b2 9040      		sbci r25,hi8(-(nwkIb))
 1714 09b4 FC01      		movw r30,r24
 1715 09b6 8081      		ld r24,Z
 1716 09b8 9181      		ldd r25,Z+1
 1717 09ba 892B      		or r24,r25
 1718 09bc 01F4      		brne .L88
 531:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1719               		.loc 2 531 0
 1720 09be 80E0      		ldi r24,0
 1721 09c0 00C0      		rjmp .L103
 1722               	.L88:
 532:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 533:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 534:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = header->nwkSrcAddr;
 1723               		.loc 2 534 0
 1724 09c2 8981      		ldd r24,Y+1
 1725 09c4 9A81      		ldd r25,Y+2
 1726 09c6 FC01      		movw r30,r24
 1727 09c8 8385      		ldd r24,Z+11
 1728 09ca 9485      		ldd r25,Z+12
 1729 09cc 9C83      		std Y+4,r25
 1730 09ce 8B83      		std Y+3,r24
 535:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = header->nwkDstAddr;
 1731               		.loc 2 535 0
 1732 09d0 8981      		ldd r24,Y+1
 1733 09d2 9A81      		ldd r25,Y+2
 1734 09d4 FC01      		movw r30,r24
 1735 09d6 8585      		ldd r24,Z+13
 1736 09d8 9685      		ldd r25,Z+14
 1737 09da 9E83      		std Y+6,r25
 1738 09dc 8D83      		std Y+5,r24
 536:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = header->nwkSrcEndpoint;
 1739               		.loc 2 536 0
 1740 09de 8981      		ldd r24,Y+1
 1741 09e0 9A81      		ldd r25,Y+2
 1742 09e2 FC01      		movw r30,r24
 1743 09e4 8785      		ldd r24,Z+15
 1744 09e6 8F70      		andi r24,lo8(15)
 1745 09e8 8F83      		std Y+7,r24
 537:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = header->nwkDstEndpoint;
 1746               		.loc 2 537 0
 1747 09ea 8981      		ldd r24,Y+1
 1748 09ec 9A81      		ldd r25,Y+2
 1749 09ee FC01      		movw r30,r24
 1750 09f0 8785      		ldd r24,Z+15
 1751 09f2 8295      		swap r24
 1752 09f4 8F70      		andi r24,lo8(15)
 1753 09f6 8887      		std Y+8,r24
 538:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1754               		.loc 2 538 0
 1755 09f8 8889      		ldd r24,Y+16
 1756 09fa 9989      		ldd r25,Y+17
 1757 09fc 8F57      		subi r24,127
 1758 09fe 9F4F      		sbci r25,-1
 1759 0a00 FC01      		movw r30,r24
 1760 0a02 8081      		ld r24,Z
 1761 0a04 9181      		ldd r25,Z+1
 1762 0a06 9C87      		std Y+12,r25
 1763 0a08 8B87      		std Y+11,r24
 539:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1764               		.loc 2 539 0
 1765 0a0a 8889      		ldd r24,Y+16
 1766 0a0c 9989      		ldd r25,Y+17
 1767 0a0e 0E94 0000 		call nwkFramePayloadSize
 1768 0a12 8D87      		std Y+13,r24
 540:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1769               		.loc 2 540 0
 1770 0a14 8889      		ldd r24,Y+16
 1771 0a16 9989      		ldd r25,Y+17
 1772 0a18 8D57      		subi r24,125
 1773 0a1a 9F4F      		sbci r25,-1
 1774 0a1c FC01      		movw r30,r24
 1775 0a1e 8081      		ld r24,Z
 1776 0a20 8E87      		std Y+14,r24
 541:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1777               		.loc 2 541 0
 1778 0a22 8889      		ldd r24,Y+16
 1779 0a24 9989      		ldd r25,Y+17
 1780 0a26 8C57      		subi r24,124
 1781 0a28 9F4F      		sbci r25,-1
 1782 0a2a FC01      		movw r30,r24
 1783 0a2c 8081      		ld r24,Z
 1784 0a2e 8F87      		std Y+15,r24
 542:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 543:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK_REQUESTED : 0;
 1785               		.loc 2 543 0
 1786 0a30 8981      		ldd r24,Y+1
 1787 0a32 9A81      		ldd r25,Y+2
 1788 0a34 FC01      		movw r30,r24
 1789 0a36 8185      		ldd r24,Z+9
 1790 0a38 982F      		mov r25,r24
 1791 0a3a 9170      		andi r25,lo8(1)
 1792 0a3c 81E0      		ldi r24,lo8(1)
 1793 0a3e 9923      		tst r25
 1794 0a40 01F4      		brne .L90
 1795 0a42 80E0      		ldi r24,0
 1796               	.L90:
 1797 0a44 882F      		mov r24,r24
 1798 0a46 90E0      		ldi r25,0
 1799 0a48 9A87      		std Y+10,r25
 1800 0a4a 8987      		std Y+9,r24
 544:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECURED : 0;
 1801               		.loc 2 544 0
 1802 0a4c 2985      		ldd r18,Y+9
 1803 0a4e 3A85      		ldd r19,Y+10
 1804 0a50 8981      		ldd r24,Y+1
 1805 0a52 9A81      		ldd r25,Y+2
 1806 0a54 FC01      		movw r30,r24
 1807 0a56 8185      		ldd r24,Z+9
 1808 0a58 882F      		mov r24,r24
 1809 0a5a 90E0      		ldi r25,0
 1810 0a5c 8270      		andi r24,2
 1811 0a5e 9927      		clr r25
 1812 0a60 822B      		or r24,r18
 1813 0a62 932B      		or r25,r19
 1814 0a64 9A87      		std Y+10,r25
 1815 0a66 8987      		std Y+9,r24
 545:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LINK_LOCAL : 0;
 1816               		.loc 2 545 0
 1817 0a68 2985      		ldd r18,Y+9
 1818 0a6a 3A85      		ldd r19,Y+10
 1819 0a6c 8981      		ldd r24,Y+1
 1820 0a6e 9A81      		ldd r25,Y+2
 1821 0a70 FC01      		movw r30,r24
 1822 0a72 8185      		ldd r24,Z+9
 1823 0a74 8470      		andi r24,lo8(4)
 1824 0a76 8823      		tst r24
 1825 0a78 01F0      		breq .L91
 1826               		.loc 2 545 0 is_stmt 0 discriminator 1
 1827 0a7a 80E2      		ldi r24,lo8(32)
 1828 0a7c 90E0      		ldi r25,0
 1829 0a7e 00C0      		rjmp .L92
 1830               	.L91:
 1831               		.loc 2 545 0 discriminator 2
 1832 0a80 80E0      		ldi r24,0
 1833 0a82 90E0      		ldi r25,0
 1834               	.L92:
 1835               		.loc 2 545 0 discriminator 4
 1836 0a84 822B      		or r24,r18
 1837 0a86 932B      		or r25,r19
 1838 0a88 9A87      		std Y+10,r25
 1839 0a8a 8987      		std Y+9,r24
 546:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MULTICAST : 0;
 1840               		.loc 2 546 0 is_stmt 1 discriminator 4
 1841 0a8c 2985      		ldd r18,Y+9
 1842 0a8e 3A85      		ldd r19,Y+10
 1843 0a90 8981      		ldd r24,Y+1
 1844 0a92 9A81      		ldd r25,Y+2
 1845 0a94 FC01      		movw r30,r24
 1846 0a96 8185      		ldd r24,Z+9
 1847 0a98 8870      		andi r24,lo8(8)
 1848 0a9a 8823      		tst r24
 1849 0a9c 01F0      		breq .L93
 1850               		.loc 2 546 0 is_stmt 0 discriminator 1
 1851 0a9e 80E4      		ldi r24,lo8(64)
 1852 0aa0 90E0      		ldi r25,0
 1853 0aa2 00C0      		rjmp .L94
 1854               	.L93:
 1855               		.loc 2 546 0 discriminator 2
 1856 0aa4 80E0      		ldi r24,0
 1857 0aa6 90E0      		ldi r25,0
 1858               	.L94:
 1859               		.loc 2 546 0 discriminator 4
 1860 0aa8 822B      		or r24,r18
 1861 0aaa 932B      		or r25,r19
 1862 0aac 9A87      		std Y+10,r25
 1863 0aae 8987      		std Y+9,r24
 547:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.beacon) ? NWK_IND_OPT_BEACON : 0;
 1864               		.loc 2 547 0 is_stmt 1 discriminator 4
 1865 0ab0 2985      		ldd r18,Y+9
 1866 0ab2 3A85      		ldd r19,Y+10
 1867 0ab4 8981      		ldd r24,Y+1
 1868 0ab6 9A81      		ldd r25,Y+2
 1869 0ab8 FC01      		movw r30,r24
 1870 0aba 8185      		ldd r24,Z+9
 1871 0abc 8071      		andi r24,lo8(16)
 1872 0abe 8823      		tst r24
 1873 0ac0 01F0      		breq .L95
 1874               		.loc 2 547 0 is_stmt 0 discriminator 1
 1875 0ac2 80E8      		ldi r24,lo8(-128)
 1876 0ac4 90E0      		ldi r25,0
 1877 0ac6 00C0      		rjmp .L96
 1878               	.L95:
 1879               		.loc 2 547 0 discriminator 2
 1880 0ac8 80E0      		ldi r24,0
 1881 0aca 90E0      		ldi r25,0
 1882               	.L96:
 1883               		.loc 2 547 0 discriminator 4
 1884 0acc 822B      		or r24,r18
 1885 0ace 932B      		or r25,r19
 1886 0ad0 9A87      		std Y+10,r25
 1887 0ad2 8987      		std Y+9,r24
 548:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_ADDR == header->nwkDstAddr) ? NWK_IND_OPT_BROADCAST : 0;
 1888               		.loc 2 548 0 is_stmt 1 discriminator 4
 1889 0ad4 2985      		ldd r18,Y+9
 1890 0ad6 3A85      		ldd r19,Y+10
 1891 0ad8 8981      		ldd r24,Y+1
 1892 0ada 9A81      		ldd r25,Y+2
 1893 0adc FC01      		movw r30,r24
 1894 0ade 8585      		ldd r24,Z+13
 1895 0ae0 9685      		ldd r25,Z+14
 1896 0ae2 0196      		adiw r24,1
 1897 0ae4 01F4      		brne .L97
 1898               		.loc 2 548 0 is_stmt 0 discriminator 1
 1899 0ae6 84E0      		ldi r24,lo8(4)
 1900 0ae8 90E0      		ldi r25,0
 1901 0aea 00C0      		rjmp .L98
 1902               	.L97:
 1903               		.loc 2 548 0 discriminator 2
 1904 0aec 80E0      		ldi r24,0
 1905 0aee 90E0      		ldi r25,0
 1906               	.L98:
 1907               		.loc 2 548 0 discriminator 4
 1908 0af0 822B      		or r24,r18
 1909 0af2 932B      		or r25,r19
 1910 0af4 9A87      		std Y+10,r25
 1911 0af6 8987      		std Y+9,r24
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (header->nwkSrcAddr == header->macSrcAddr) ? NWK_IND_OPT_LOCAL : 0;
 1912               		.loc 2 549 0 is_stmt 1 discriminator 4
 1913 0af8 2985      		ldd r18,Y+9
 1914 0afa 3A85      		ldd r19,Y+10
 1915 0afc 8981      		ldd r24,Y+1
 1916 0afe 9A81      		ldd r25,Y+2
 1917 0b00 FC01      		movw r30,r24
 1918 0b02 4385      		ldd r20,Z+11
 1919 0b04 5485      		ldd r21,Z+12
 1920 0b06 8981      		ldd r24,Y+1
 1921 0b08 9A81      		ldd r25,Y+2
 1922 0b0a FC01      		movw r30,r24
 1923 0b0c 8781      		ldd r24,Z+7
 1924 0b0e 9085      		ldd r25,Z+8
 1925 0b10 4817      		cp r20,r24
 1926 0b12 5907      		cpc r21,r25
 1927 0b14 01F4      		brne .L99
 1928               		.loc 2 549 0 is_stmt 0 discriminator 1
 1929 0b16 88E0      		ldi r24,lo8(8)
 1930 0b18 90E0      		ldi r25,0
 1931 0b1a 00C0      		rjmp .L100
 1932               	.L99:
 1933               		.loc 2 549 0 discriminator 2
 1934 0b1c 80E0      		ldi r24,0
 1935 0b1e 90E0      		ldi r25,0
 1936               	.L100:
 1937               		.loc 2 549 0 discriminator 4
 1938 0b20 822B      		or r24,r18
 1939 0b22 932B      		or r25,r19
 1940 0b24 9A87      		std Y+10,r25
 1941 0b26 8987      		std Y+9,r24
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_PANID == header->macDstPanId) ? NWK_IND_OPT_BROADCAST_PAN_ID : 0;
 1942               		.loc 2 550 0 is_stmt 1 discriminator 4
 1943 0b28 2985      		ldd r18,Y+9
 1944 0b2a 3A85      		ldd r19,Y+10
 1945 0b2c 8981      		ldd r24,Y+1
 1946 0b2e 9A81      		ldd r25,Y+2
 1947 0b30 FC01      		movw r30,r24
 1948 0b32 8381      		ldd r24,Z+3
 1949 0b34 9481      		ldd r25,Z+4
 1950 0b36 0196      		adiw r24,1
 1951 0b38 01F4      		brne .L101
 1952               		.loc 2 550 0 is_stmt 0 discriminator 1
 1953 0b3a 80E1      		ldi r24,lo8(16)
 1954 0b3c 90E0      		ldi r25,0
 1955 0b3e 00C0      		rjmp .L102
 1956               	.L101:
 1957               		.loc 2 550 0 discriminator 2
 1958 0b40 80E0      		ldi r24,0
 1959 0b42 90E0      		ldi r25,0
 1960               	.L102:
 1961               		.loc 2 550 0 discriminator 4
 1962 0b44 822B      		or r24,r18
 1963 0b46 932B      		or r25,r19
 1964 0b48 9A87      		std Y+10,r25
 1965 0b4a 8987      		std Y+9,r24
 551:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 552:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 1966               		.loc 2 552 0 is_stmt 1 discriminator 4
 1967 0b4c 8981      		ldd r24,Y+1
 1968 0b4e 9A81      		ldd r25,Y+2
 1969 0b50 FC01      		movw r30,r24
 1970 0b52 8785      		ldd r24,Z+15
 1971 0b54 8295      		swap r24
 1972 0b56 8F70      		andi r24,lo8(15)
 1973 0b58 882F      		mov r24,r24
 1974 0b5a 90E0      		ldi r25,0
 1975 0b5c 0396      		adiw r24,3
 1976 0b5e 880F      		lsl r24
 1977 0b60 991F      		rol r25
 1978 0b62 8050      		subi r24,lo8(-(nwkIb))
 1979 0b64 9040      		sbci r25,hi8(-(nwkIb))
 1980 0b66 FC01      		movw r30,r24
 1981 0b68 2081      		ld r18,Z
 1982 0b6a 3181      		ldd r19,Z+1
 1983 0b6c CE01      		movw r24,r28
 1984 0b6e 0396      		adiw r24,3
 1985 0b70 F901      		movw r30,r18
 1986 0b72 0995      		icall
 1987               	.L103:
 1988               	/* epilogue start */
 553:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1989               		.loc 2 553 0 discriminator 1
 1990 0b74 6196      		adiw r28,17
 1991 0b76 0FB6      		in __tmp_reg__,__SREG__
 1992 0b78 F894      		cli
 1993 0b7a DEBF      		out __SP_H__,r29
 1994 0b7c 0FBE      		out __SREG__,__tmp_reg__
 1995 0b7e CDBF      		out __SP_L__,r28
 1996 0b80 DF91      		pop r29
 1997 0b82 CF91      		pop r28
 1998 0b84 0895      		ret
 1999               		.cfi_endproc
 2000               	.LFE74:
 2003               	nwkRxIndicateBeaconFrame:
 2004               	.LFB75:
 554:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 555:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 556:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 557:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateBeaconFrame(NwkFrame_t *frame)
 558:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2005               		.loc 2 558 0
 2006               		.cfi_startproc
 2007 0b86 CF93      		push r28
 2008               	.LCFI40:
 2009               		.cfi_def_cfa_offset 3
 2010               		.cfi_offset 28, -2
 2011 0b88 DF93      		push r29
 2012               	.LCFI41:
 2013               		.cfi_def_cfa_offset 4
 2014               		.cfi_offset 29, -3
 2015 0b8a CDB7      		in r28,__SP_L__
 2016 0b8c DEB7      		in r29,__SP_H__
 2017               	.LCFI42:
 2018               		.cfi_def_cfa_register 28
 2019 0b8e 6197      		sbiw r28,17
 2020               	.LCFI43:
 2021               		.cfi_def_cfa_offset 21
 2022 0b90 0FB6      		in __tmp_reg__,__SREG__
 2023 0b92 F894      		cli
 2024 0b94 DEBF      		out __SP_H__,r29
 2025 0b96 0FBE      		out __SREG__,__tmp_reg__
 2026 0b98 CDBF      		out __SP_L__,r28
 2027               	/* prologue: function */
 2028               	/* frame size = 17 */
 2029               	/* stack size = 19 */
 2030               	.L__stack_usage = 19
 2031 0b9a 998B      		std Y+17,r25
 2032 0b9c 888B      		std Y+16,r24
 559:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 2033               		.loc 2 559 0
 2034 0b9e 8889      		ldd r24,Y+16
 2035 0ba0 9989      		ldd r25,Y+17
 2036 0ba2 0296      		adiw r24,2
 2037 0ba4 9A83      		std Y+2,r25
 2038 0ba6 8983      		std Y+1,r24
 560:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 561:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 562:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2039               		.loc 2 562 0
 2040 0ba8 8889      		ldd r24,Y+16
 2041 0baa 9989      		ldd r25,Y+17
 2042 0bac 24E2      		ldi r18,lo8(36)
 2043 0bae FC01      		movw r30,r24
 2044 0bb0 2083      		st Z,r18
 563:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 564:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[0]) {
 2045               		.loc 2 564 0
 2046 0bb2 8091 0000 		lds r24,nwkIb+6
 2047 0bb6 9091 0000 		lds r25,nwkIb+6+1
 2048 0bba 892B      		or r24,r25
 2049 0bbc 01F4      		brne .L105
 565:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2050               		.loc 2 565 0
 2051 0bbe 80E0      		ldi r24,0
 2052 0bc0 00C0      		rjmp .L107
 2053               	.L105:
 566:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 567:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 568:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = frame->beacon.macSrcAddr;
 2054               		.loc 2 568 0
 2055 0bc2 8889      		ldd r24,Y+16
 2056 0bc4 9989      		ldd r25,Y+17
 2057 0bc6 FC01      		movw r30,r24
 2058 0bc8 8781      		ldd r24,Z+7
 2059 0bca 9085      		ldd r25,Z+8
 2060 0bcc 9C83      		std Y+4,r25
 2061 0bce 8B83      		std Y+3,r24
 569:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = frame->beacon.macSrcAddr;
 2062               		.loc 2 569 0
 2063 0bd0 8889      		ldd r24,Y+16
 2064 0bd2 9989      		ldd r25,Y+17
 2065 0bd4 FC01      		movw r30,r24
 2066 0bd6 8781      		ldd r24,Z+7
 2067 0bd8 9085      		ldd r25,Z+8
 2068 0bda 9E83      		std Y+6,r25
 2069 0bdc 8D83      		std Y+5,r24
 570:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2070               		.loc 2 570 0
 2071 0bde 1F82      		std Y+7,__zero_reg__
 571:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2072               		.loc 2 571 0
 2073 0be0 1886      		std Y+8,__zero_reg__
 572:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2074               		.loc 2 572 0
 2075 0be2 8889      		ldd r24,Y+16
 2076 0be4 9989      		ldd r25,Y+17
 2077 0be6 8F57      		subi r24,127
 2078 0be8 9F4F      		sbci r25,-1
 2079 0bea FC01      		movw r30,r24
 2080 0bec 8081      		ld r24,Z
 2081 0bee 9181      		ldd r25,Z+1
 2082 0bf0 9C87      		std Y+12,r25
 2083 0bf2 8B87      		std Y+11,r24
 573:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2084               		.loc 2 573 0
 2085 0bf4 8889      		ldd r24,Y+16
 2086 0bf6 9989      		ldd r25,Y+17
 2087 0bf8 0E94 0000 		call nwkFramePayloadSize
 2088 0bfc 8D87      		std Y+13,r24
 574:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2089               		.loc 2 574 0
 2090 0bfe 8889      		ldd r24,Y+16
 2091 0c00 9989      		ldd r25,Y+17
 2092 0c02 8D57      		subi r24,125
 2093 0c04 9F4F      		sbci r25,-1
 2094 0c06 FC01      		movw r30,r24
 2095 0c08 8081      		ld r24,Z
 2096 0c0a 8E87      		std Y+14,r24
 575:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2097               		.loc 2 575 0
 2098 0c0c 8889      		ldd r24,Y+16
 2099 0c0e 9989      		ldd r25,Y+17
 2100 0c10 8C57      		subi r24,124
 2101 0c12 9F4F      		sbci r25,-1
 2102 0c14 FC01      		movw r30,r24
 2103 0c16 8081      		ld r24,Z
 2104 0c18 8F87      		std Y+15,r24
 576:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_BEACON;
 2105               		.loc 2 577 0
 2106 0c1a 80E8      		ldi r24,lo8(-128)
 2107 0c1c 90E0      		ldi r25,0
 2108 0c1e 9A87      		std Y+10,r25
 2109 0c20 8987      		std Y+9,r24
 578:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 579:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2110               		.loc 2 579 0
 2111 0c22 8981      		ldd r24,Y+1
 2112 0c24 9A81      		ldd r25,Y+2
 2113 0c26 FC01      		movw r30,r24
 2114 0c28 8785      		ldd r24,Z+15
 2115 0c2a 8295      		swap r24
 2116 0c2c 8F70      		andi r24,lo8(15)
 2117 0c2e 882F      		mov r24,r24
 2118 0c30 90E0      		ldi r25,0
 2119 0c32 0396      		adiw r24,3
 2120 0c34 880F      		lsl r24
 2121 0c36 991F      		rol r25
 2122 0c38 8050      		subi r24,lo8(-(nwkIb))
 2123 0c3a 9040      		sbci r25,hi8(-(nwkIb))
 2124 0c3c FC01      		movw r30,r24
 2125 0c3e 2081      		ld r18,Z
 2126 0c40 3181      		ldd r19,Z+1
 2127 0c42 CE01      		movw r24,r28
 2128 0c44 0396      		adiw r24,3
 2129 0c46 F901      		movw r30,r18
 2130 0c48 0995      		icall
 2131               	.L107:
 2132               	/* epilogue start */
 580:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2133               		.loc 2 580 0 discriminator 1
 2134 0c4a 6196      		adiw r28,17
 2135 0c4c 0FB6      		in __tmp_reg__,__SREG__
 2136 0c4e F894      		cli
 2137 0c50 DEBF      		out __SP_H__,r29
 2138 0c52 0FBE      		out __SREG__,__tmp_reg__
 2139 0c54 CDBF      		out __SP_L__,r28
 2140 0c56 DF91      		pop r29
 2141 0c58 CF91      		pop r28
 2142 0c5a 0895      		ret
 2143               		.cfi_endproc
 2144               	.LFE75:
 2147               	nwkRxIndicateLLBeaconFrame:
 2148               	.LFB76:
 581:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 582:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 583:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 584:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 585:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLBeaconFrame(NwkFrame_t *frame)
 586:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2149               		.loc 2 586 0
 2150               		.cfi_startproc
 2151 0c5c CF93      		push r28
 2152               	.LCFI44:
 2153               		.cfi_def_cfa_offset 3
 2154               		.cfi_offset 28, -2
 2155 0c5e DF93      		push r29
 2156               	.LCFI45:
 2157               		.cfi_def_cfa_offset 4
 2158               		.cfi_offset 29, -3
 2159 0c60 CDB7      		in r28,__SP_L__
 2160 0c62 DEB7      		in r29,__SP_H__
 2161               	.LCFI46:
 2162               		.cfi_def_cfa_register 28
 2163 0c64 2F97      		sbiw r28,15
 2164               	.LCFI47:
 2165               		.cfi_def_cfa_offset 19
 2166 0c66 0FB6      		in __tmp_reg__,__SREG__
 2167 0c68 F894      		cli
 2168 0c6a DEBF      		out __SP_H__,r29
 2169 0c6c 0FBE      		out __SREG__,__tmp_reg__
 2170 0c6e CDBF      		out __SP_L__,r28
 2171               	/* prologue: function */
 2172               	/* frame size = 15 */
 2173               	/* stack size = 17 */
 2174               	.L__stack_usage = 17
 2175 0c70 9F87      		std Y+15,r25
 2176 0c72 8E87      		std Y+14,r24
 587:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 588:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 589:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2177               		.loc 2 589 0
 2178 0c74 8E85      		ldd r24,Y+14
 2179 0c76 9F85      		ldd r25,Y+15
 2180 0c78 24E2      		ldi r18,lo8(36)
 2181 0c7a FC01      		movw r30,r24
 2182 0c7c 2083      		st Z,r18
 590:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 591:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_BEACON_ENDPOINT]) {
 2183               		.loc 2 591 0
 2184 0c7e 8091 0000 		lds r24,nwkIb+6
 2185 0c82 9091 0000 		lds r25,nwkIb+6+1
 2186 0c86 892B      		or r24,r25
 2187 0c88 01F4      		brne .L109
 592:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2188               		.loc 2 592 0
 2189 0c8a 80E0      		ldi r24,0
 2190 0c8c 00C0      		rjmp .L111
 2191               	.L109:
 593:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 594:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Beacon as they are in standart 802.15.4
 595:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 596:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 597:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2192               		.loc 2 597 0
 2193 0c8e 1A82      		std Y+2,__zero_reg__
 2194 0c90 1982      		std Y+1,__zero_reg__
 598:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2195               		.loc 2 598 0
 2196 0c92 1C82      		std Y+4,__zero_reg__
 2197 0c94 1B82      		std Y+3,__zero_reg__
 599:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2198               		.loc 2 599 0
 2199 0c96 1D82      		std Y+5,__zero_reg__
 600:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2200               		.loc 2 600 0
 2201 0c98 1E82      		std Y+6,__zero_reg__
 601:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 602:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->LLbeacon;
 2202               		.loc 2 602 0
 2203 0c9a 8E85      		ldd r24,Y+14
 2204 0c9c 9F85      		ldd r25,Y+15
 2205 0c9e 0296      		adiw r24,2
 2206 0ca0 9A87      		std Y+10,r25
 2207 0ca2 8987      		std Y+9,r24
 603:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2208               		.loc 2 603 0
 2209 0ca4 8E85      		ldd r24,Y+14
 2210 0ca6 9F85      		ldd r25,Y+15
 2211 0ca8 0E94 0000 		call nwkFramePayloadSize
 2212 0cac 8B87      		std Y+11,r24
 604:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2213               		.loc 2 604 0
 2214 0cae 8E85      		ldd r24,Y+14
 2215 0cb0 9F85      		ldd r25,Y+15
 2216 0cb2 8D57      		subi r24,125
 2217 0cb4 9F4F      		sbci r25,-1
 2218 0cb6 FC01      		movw r30,r24
 2219 0cb8 8081      		ld r24,Z
 2220 0cba 8C87      		std Y+12,r24
 605:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2221               		.loc 2 605 0
 2222 0cbc 8E85      		ldd r24,Y+14
 2223 0cbe 9F85      		ldd r25,Y+15
 2224 0cc0 8C57      		subi r24,124
 2225 0cc2 9F4F      		sbci r25,-1
 2226 0cc4 FC01      		movw r30,r24
 2227 0cc6 8081      		ld r24,Z
 2228 0cc8 8D87      		std Y+13,r24
 606:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 607:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_BEACON;
 2229               		.loc 2 607 0
 2230 0cca 80E0      		ldi r24,0
 2231 0ccc 91E0      		ldi r25,lo8(1)
 2232 0cce 9887      		std Y+8,r25
 2233 0cd0 8F83      		std Y+7,r24
 608:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 609:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 610:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_BEACON_ENDPOINT](&ind);
 2234               		.loc 2 610 0
 2235 0cd2 2091 0000 		lds r18,nwkIb+6
 2236 0cd6 3091 0000 		lds r19,nwkIb+6+1
 2237 0cda CE01      		movw r24,r28
 2238 0cdc 0196      		adiw r24,1
 2239 0cde F901      		movw r30,r18
 2240 0ce0 0995      		icall
 2241               	.L111:
 2242               	/* epilogue start */
 611:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2243               		.loc 2 611 0 discriminator 1
 2244 0ce2 2F96      		adiw r28,15
 2245 0ce4 0FB6      		in __tmp_reg__,__SREG__
 2246 0ce6 F894      		cli
 2247 0ce8 DEBF      		out __SP_H__,r29
 2248 0cea 0FBE      		out __SREG__,__tmp_reg__
 2249 0cec CDBF      		out __SP_L__,r28
 2250 0cee DF91      		pop r29
 2251 0cf0 CF91      		pop r28
 2252 0cf2 0895      		ret
 2253               		.cfi_endproc
 2254               	.LFE76:
 2257               	nwkRxIndicateLLCommandFrame:
 2258               	.LFB77:
 612:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 613:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLCommandFrame(NwkFrame_t *frame)
 614:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2259               		.loc 2 614 0
 2260               		.cfi_startproc
 2261 0cf4 CF93      		push r28
 2262               	.LCFI48:
 2263               		.cfi_def_cfa_offset 3
 2264               		.cfi_offset 28, -2
 2265 0cf6 DF93      		push r29
 2266               	.LCFI49:
 2267               		.cfi_def_cfa_offset 4
 2268               		.cfi_offset 29, -3
 2269 0cf8 CDB7      		in r28,__SP_L__
 2270 0cfa DEB7      		in r29,__SP_H__
 2271               	.LCFI50:
 2272               		.cfi_def_cfa_register 28
 2273 0cfc 6197      		sbiw r28,17
 2274               	.LCFI51:
 2275               		.cfi_def_cfa_offset 21
 2276 0cfe 0FB6      		in __tmp_reg__,__SREG__
 2277 0d00 F894      		cli
 2278 0d02 DEBF      		out __SP_H__,r29
 2279 0d04 0FBE      		out __SREG__,__tmp_reg__
 2280 0d06 CDBF      		out __SP_L__,r28
 2281               	/* prologue: function */
 2282               	/* frame size = 17 */
 2283               	/* stack size = 19 */
 2284               	.L__stack_usage = 19
 2285 0d08 998B      		std Y+17,r25
 2286 0d0a 888B      		std Y+16,r24
 615:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 616:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 617:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2287               		.loc 2 617 0
 2288 0d0c 8889      		ldd r24,Y+16
 2289 0d0e 9989      		ldd r25,Y+17
 2290 0d10 0296      		adiw r24,2
 2291 0d12 9A83      		std Y+2,r25
 2292 0d14 8983      		std Y+1,r24
 618:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 619:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 620:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2293               		.loc 2 620 0
 2294 0d16 8889      		ldd r24,Y+16
 2295 0d18 9989      		ldd r25,Y+17
 2296 0d1a 24E2      		ldi r18,lo8(36)
 2297 0d1c FC01      		movw r30,r24
 2298 0d1e 2083      		st Z,r18
 621:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 622:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_COMMAND_ENDPOINT]) {
 2299               		.loc 2 622 0
 2300 0d20 8091 0000 		lds r24,nwkIb+12
 2301 0d24 9091 0000 		lds r25,nwkIb+12+1
 2302 0d28 892B      		or r24,r25
 2303 0d2a 01F4      		brne .L113
 623:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2304               		.loc 2 623 0
 2305 0d2c 80E0      		ldi r24,0
 2306 0d2e 00C0      		rjmp .L115
 2307               	.L113:
 624:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 625:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 626:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 627:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 628:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 629:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2308               		.loc 2 629 0
 2309 0d30 1C82      		std Y+4,__zero_reg__
 2310 0d32 1B82      		std Y+3,__zero_reg__
 630:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2311               		.loc 2 630 0
 2312 0d34 1E82      		std Y+6,__zero_reg__
 2313 0d36 1D82      		std Y+5,__zero_reg__
 631:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2314               		.loc 2 631 0
 2315 0d38 1F82      		std Y+7,__zero_reg__
 632:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2316               		.loc 2 632 0
 2317 0d3a 1886      		std Y+8,__zero_reg__
 633:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 634:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 635:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2318               		.loc 2 635 0
 2319 0d3c 8889      		ldd r24,Y+16
 2320 0d3e 9989      		ldd r25,Y+17
 2321 0d40 8F57      		subi r24,127
 2322 0d42 9F4F      		sbci r25,-1
 2323 0d44 FC01      		movw r30,r24
 2324 0d46 8081      		ld r24,Z
 2325 0d48 9181      		ldd r25,Z+1
 2326 0d4a 9C87      		std Y+12,r25
 2327 0d4c 8B87      		std Y+11,r24
 636:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 637:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2328               		.loc 2 637 0
 2329 0d4e 8889      		ldd r24,Y+16
 2330 0d50 9989      		ldd r25,Y+17
 2331 0d52 0E94 0000 		call nwkFramePayloadSize
 2332 0d56 8D87      		std Y+13,r24
 638:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2333               		.loc 2 638 0
 2334 0d58 8889      		ldd r24,Y+16
 2335 0d5a 9989      		ldd r25,Y+17
 2336 0d5c 8D57      		subi r24,125
 2337 0d5e 9F4F      		sbci r25,-1
 2338 0d60 FC01      		movw r30,r24
 2339 0d62 8081      		ld r24,Z
 2340 0d64 8E87      		std Y+14,r24
 639:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2341               		.loc 2 639 0
 2342 0d66 8889      		ldd r24,Y+16
 2343 0d68 9989      		ldd r25,Y+17
 2344 0d6a 8C57      		subi r24,124
 2345 0d6c 9F4F      		sbci r25,-1
 2346 0d6e FC01      		movw r30,r24
 2347 0d70 8081      		ld r24,Z
 2348 0d72 8F87      		std Y+15,r24
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_MACCOMMAND;
 2349               		.loc 2 641 0
 2350 0d74 80E0      		ldi r24,0
 2351 0d76 92E0      		ldi r25,lo8(2)
 2352 0d78 9A87      		std Y+10,r25
 2353 0d7a 8987      		std Y+9,r24
 642:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 643:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_COMMAND_ENDPOINT](&ind);
 2354               		.loc 2 643 0
 2355 0d7c 2091 0000 		lds r18,nwkIb+12
 2356 0d80 3091 0000 		lds r19,nwkIb+12+1
 2357 0d84 CE01      		movw r24,r28
 2358 0d86 0396      		adiw r24,3
 2359 0d88 F901      		movw r30,r18
 2360 0d8a 0995      		icall
 2361               	.L115:
 2362               	/* epilogue start */
 644:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2363               		.loc 2 644 0 discriminator 1
 2364 0d8c 6196      		adiw r28,17
 2365 0d8e 0FB6      		in __tmp_reg__,__SREG__
 2366 0d90 F894      		cli
 2367 0d92 DEBF      		out __SP_H__,r29
 2368 0d94 0FBE      		out __SREG__,__tmp_reg__
 2369 0d96 CDBF      		out __SP_L__,r28
 2370 0d98 DF91      		pop r29
 2371 0d9a CF91      		pop r28
 2372 0d9c 0895      		ret
 2373               		.cfi_endproc
 2374               	.LFE77:
 2377               	nwkRxIndicateLLACKFrame:
 2378               	.LFB78:
 645:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 646:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLACKFrame(NwkFrame_t *frame)
 647:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2379               		.loc 2 647 0
 2380               		.cfi_startproc
 2381 0d9e CF93      		push r28
 2382               	.LCFI52:
 2383               		.cfi_def_cfa_offset 3
 2384               		.cfi_offset 28, -2
 2385 0da0 DF93      		push r29
 2386               	.LCFI53:
 2387               		.cfi_def_cfa_offset 4
 2388               		.cfi_offset 29, -3
 2389 0da2 CDB7      		in r28,__SP_L__
 2390 0da4 DEB7      		in r29,__SP_H__
 2391               	.LCFI54:
 2392               		.cfi_def_cfa_register 28
 2393 0da6 6197      		sbiw r28,17
 2394               	.LCFI55:
 2395               		.cfi_def_cfa_offset 21
 2396 0da8 0FB6      		in __tmp_reg__,__SREG__
 2397 0daa F894      		cli
 2398 0dac DEBF      		out __SP_H__,r29
 2399 0dae 0FBE      		out __SREG__,__tmp_reg__
 2400 0db0 CDBF      		out __SP_L__,r28
 2401               	/* prologue: function */
 2402               	/* frame size = 17 */
 2403               	/* stack size = 19 */
 2404               	.L__stack_usage = 19
 2405 0db2 998B      		std Y+17,r25
 2406 0db4 888B      		std Y+16,r24
 648:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 649:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2407               		.loc 2 649 0
 2408 0db6 8889      		ldd r24,Y+16
 2409 0db8 9989      		ldd r25,Y+17
 2410 0dba 0296      		adiw r24,2
 2411 0dbc 9A83      		std Y+2,r25
 2412 0dbe 8983      		std Y+1,r24
 650:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 651:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 652:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2413               		.loc 2 652 0
 2414 0dc0 8889      		ldd r24,Y+16
 2415 0dc2 9989      		ldd r25,Y+17
 2416 0dc4 24E2      		ldi r18,lo8(36)
 2417 0dc6 FC01      		movw r30,r24
 2418 0dc8 2083      		st Z,r18
 653:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 654:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_ACK_ENDPOINT]) {
 2419               		.loc 2 654 0
 2420 0dca 8091 0000 		lds r24,nwkIb+14
 2421 0dce 9091 0000 		lds r25,nwkIb+14+1
 2422 0dd2 892B      		or r24,r25
 2423 0dd4 01F4      		brne .L117
 655:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2424               		.loc 2 655 0
 2425 0dd6 80E0      		ldi r24,0
 2426 0dd8 00C0      		rjmp .L119
 2427               	.L117:
 656:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 657:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 658:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* 
 659:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * this informations are not received in a LLDN Command as they are in standart 802.15.4
 660:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 661:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 662:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2428               		.loc 2 662 0
 2429 0dda 1C82      		std Y+4,__zero_reg__
 2430 0ddc 1B82      		std Y+3,__zero_reg__
 663:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2431               		.loc 2 663 0
 2432 0dde 1E82      		std Y+6,__zero_reg__
 2433 0de0 1D82      		std Y+5,__zero_reg__
 664:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2434               		.loc 2 664 0
 2435 0de2 1F82      		std Y+7,__zero_reg__
 665:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2436               		.loc 2 665 0
 2437 0de4 1886      		std Y+8,__zero_reg__
 666:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 667:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data =  frame->payload;
 2438               		.loc 2 667 0
 2439 0de6 8889      		ldd r24,Y+16
 2440 0de8 9989      		ldd r25,Y+17
 2441 0dea 8F57      		subi r24,127
 2442 0dec 9F4F      		sbci r25,-1
 2443 0dee FC01      		movw r30,r24
 2444 0df0 8081      		ld r24,Z
 2445 0df2 9181      		ldd r25,Z+1
 2446 0df4 9C87      		std Y+12,r25
 2447 0df6 8B87      		std Y+11,r24
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2448               		.loc 2 668 0
 2449 0df8 8889      		ldd r24,Y+16
 2450 0dfa 9989      		ldd r25,Y+17
 2451 0dfc 0E94 0000 		call nwkFramePayloadSize
 2452 0e00 8D87      		std Y+13,r24
 669:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2453               		.loc 2 669 0
 2454 0e02 8889      		ldd r24,Y+16
 2455 0e04 9989      		ldd r25,Y+17
 2456 0e06 8D57      		subi r24,125
 2457 0e08 9F4F      		sbci r25,-1
 2458 0e0a FC01      		movw r30,r24
 2459 0e0c 8081      		ld r24,Z
 2460 0e0e 8E87      		std Y+14,r24
 670:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2461               		.loc 2 670 0
 2462 0e10 8889      		ldd r24,Y+16
 2463 0e12 9989      		ldd r25,Y+17
 2464 0e14 8C57      		subi r24,124
 2465 0e16 9F4F      		sbci r25,-1
 2466 0e18 FC01      		movw r30,r24
 2467 0e1a 8081      		ld r24,Z
 2468 0e1c 8F87      		std Y+15,r24
 671:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 672:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_OPT_LLDN_ACK;
 2469               		.loc 2 672 0
 2470 0e1e 80E0      		ldi r24,0
 2471 0e20 90E4      		ldi r25,lo8(64)
 2472 0e22 9A87      		std Y+10,r25
 2473 0e24 8987      		std Y+9,r24
 673:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 674:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_ACK_ENDPOINT](&ind);
 2474               		.loc 2 674 0
 2475 0e26 2091 0000 		lds r18,nwkIb+14
 2476 0e2a 3091 0000 		lds r19,nwkIb+14+1
 2477 0e2e CE01      		movw r24,r28
 2478 0e30 0396      		adiw r24,3
 2479 0e32 F901      		movw r30,r18
 2480 0e34 0995      		icall
 2481               	.L119:
 2482               	/* epilogue start */
 675:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2483               		.loc 2 675 0 discriminator 1
 2484 0e36 6196      		adiw r28,17
 2485 0e38 0FB6      		in __tmp_reg__,__SREG__
 2486 0e3a F894      		cli
 2487 0e3c DEBF      		out __SP_H__,r29
 2488 0e3e 0FBE      		out __SREG__,__tmp_reg__
 2489 0e40 CDBF      		out __SP_L__,r28
 2490 0e42 DF91      		pop r29
 2491 0e44 CF91      		pop r28
 2492 0e46 0895      		ret
 2493               		.cfi_endproc
 2494               	.LFE78:
 2497               	nwkRxHandleIndication:
 2498               	.LFB79:
 676:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 677:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 678:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 679:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleIndication(NwkFrame_t *frame)
 680:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2499               		.loc 2 680 0
 2500               		.cfi_startproc
 2501 0e48 CF93      		push r28
 2502               	.LCFI56:
 2503               		.cfi_def_cfa_offset 3
 2504               		.cfi_offset 28, -2
 2505 0e4a DF93      		push r29
 2506               	.LCFI57:
 2507               		.cfi_def_cfa_offset 4
 2508               		.cfi_offset 29, -3
 2509 0e4c 00D0      		rcall .
 2510 0e4e 1F92      		push __zero_reg__
 2511               	.LCFI58:
 2512               		.cfi_def_cfa_offset 7
 2513 0e50 CDB7      		in r28,__SP_L__
 2514 0e52 DEB7      		in r29,__SP_H__
 2515               	.LCFI59:
 2516               		.cfi_def_cfa_register 28
 2517               	/* prologue: function */
 2518               	/* frame size = 3 */
 2519               	/* stack size = 5 */
 2520               	.L__stack_usage = 5
 2521 0e54 9B83      		std Y+3,r25
 2522 0e56 8A83      		std Y+2,r24
 681:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool ack;
 682:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 683:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = 0;
 2523               		.loc 2 683 0
 2524 0e58 1092 0000 		sts nwkRxAckControl,__zero_reg__
 684:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack = nwkRxIndicateDataFrame(frame);
 2525               		.loc 2 684 0
 2526 0e5c 8A81      		ldd r24,Y+2
 2527 0e5e 9B81      		ldd r25,Y+3
 2528 0e60 0E94 0000 		call nwkRxIndicateDataFrame
 2529 0e64 8983      		std Y+1,r24
 685:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 686:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == frame->header.nwkFcf.ackRequest) {
 2530               		.loc 2 686 0
 2531 0e66 8A81      		ldd r24,Y+2
 2532 0e68 9B81      		ldd r25,Y+3
 2533 0e6a FC01      		movw r30,r24
 2534 0e6c 8385      		ldd r24,Z+11
 2535 0e6e 8170      		andi r24,lo8(1)
 2536 0e70 8823      		tst r24
 2537 0e72 01F4      		brne .L121
 687:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2538               		.loc 2 687 0
 2539 0e74 1982      		std Y+1,__zero_reg__
 2540               	.L121:
 688:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 689:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 690:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == frame->header.macDstAddr &&
 2541               		.loc 2 690 0
 2542 0e76 8A81      		ldd r24,Y+2
 2543 0e78 9B81      		ldd r25,Y+3
 2544 0e7a FC01      		movw r30,r24
 2545 0e7c 8781      		ldd r24,Z+7
 2546 0e7e 9085      		ldd r25,Z+8
 2547 0e80 0196      		adiw r24,1
 2548 0e82 01F4      		brne .L122
 691:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2549               		.loc 2 691 0 discriminator 1
 2550 0e84 2091 0000 		lds r18,nwkIb
 2551 0e88 3091 0000 		lds r19,nwkIb+1
 2552 0e8c 8A81      		ldd r24,Y+2
 2553 0e8e 9B81      		ldd r25,Y+3
 2554 0e90 FC01      		movw r30,r24
 2555 0e92 8785      		ldd r24,Z+15
 2556 0e94 9089      		ldd r25,Z+16
 690:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2557               		.loc 2 690 0 discriminator 1
 2558 0e96 2817      		cp r18,r24
 2559 0e98 3907      		cpc r19,r25
 2560 0e9a 01F4      		brne .L122
 692:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			0 == frame->header.nwkFcf.multicast) {
 2561               		.loc 2 692 0
 2562 0e9c 8A81      		ldd r24,Y+2
 2563 0e9e 9B81      		ldd r25,Y+3
 2564 0ea0 FC01      		movw r30,r24
 2565 0ea2 8385      		ldd r24,Z+11
 2566 0ea4 8870      		andi r24,lo8(8)
 691:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2567               		.loc 2 691 0
 2568 0ea6 8823      		tst r24
 2569 0ea8 01F4      		brne .L122
 693:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = true;
 2570               		.loc 2 693 0
 2571 0eaa 81E0      		ldi r24,lo8(1)
 2572 0eac 8983      		std Y+1,r24
 2573               	.L122:
 694:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 695:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 696:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == frame->header.macDstPanId) {
 2574               		.loc 2 696 0
 2575 0eae 8A81      		ldd r24,Y+2
 2576 0eb0 9B81      		ldd r25,Y+3
 2577 0eb2 FC01      		movw r30,r24
 2578 0eb4 8581      		ldd r24,Z+5
 2579 0eb6 9681      		ldd r25,Z+6
 2580 0eb8 0196      		adiw r24,1
 2581 0eba 01F4      		brne .L123
 697:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2582               		.loc 2 697 0
 2583 0ebc 1982      		std Y+1,__zero_reg__
 2584               	.L123:
 698:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 699:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 700:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == nwkIb.addr) {
 2585               		.loc 2 700 0
 2586 0ebe 8091 0000 		lds r24,nwkIb
 2587 0ec2 9091 0000 		lds r25,nwkIb+1
 2588 0ec6 0196      		adiw r24,1
 2589 0ec8 01F4      		brne .L124
 701:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2590               		.loc 2 701 0
 2591 0eca 1982      		std Y+1,__zero_reg__
 2592               	.L124:
 702:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 703:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 704:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ack) {
 2593               		.loc 2 704 0
 2594 0ecc 8981      		ldd r24,Y+1
 2595 0ece 8823      		tst r24
 2596 0ed0 01F0      		breq .L125
 705:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxSendAck(frame);
 2597               		.loc 2 705 0
 2598 0ed2 8A81      		ldd r24,Y+2
 2599 0ed4 9B81      		ldd r25,Y+3
 2600 0ed6 0E94 0000 		call nwkRxSendAck
 2601               	.L125:
 706:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 707:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 708:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2602               		.loc 2 708 0
 2603 0eda 8A81      		ldd r24,Y+2
 2604 0edc 9B81      		ldd r25,Y+3
 2605 0ede 24E2      		ldi r18,lo8(36)
 2606 0ee0 FC01      		movw r30,r24
 2607 0ee2 2083      		st Z,r18
 709:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2608               		.loc 2 709 0
 2609 0ee4 0000      		nop
 2610               	/* epilogue start */
 2611 0ee6 0F90      		pop __tmp_reg__
 2612 0ee8 0F90      		pop __tmp_reg__
 2613 0eea 0F90      		pop __tmp_reg__
 2614 0eec DF91      		pop r29
 2615 0eee CF91      		pop r28
 2616 0ef0 0895      		ret
 2617               		.cfi_endproc
 2618               	.LFE79:
 2620               	.global	nwkRxTaskHandler
 2622               	nwkRxTaskHandler:
 2623               	.LFB80:
 710:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 711:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 712:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Rx Module task handler
 713:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 714:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxTaskHandler(void)
 715:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2624               		.loc 2 715 0
 2625               		.cfi_startproc
 2626 0ef2 CF93      		push r28
 2627               	.LCFI60:
 2628               		.cfi_def_cfa_offset 3
 2629               		.cfi_offset 28, -2
 2630 0ef4 DF93      		push r29
 2631               	.LCFI61:
 2632               		.cfi_def_cfa_offset 4
 2633               		.cfi_offset 29, -3
 2634 0ef6 00D0      		rcall .
 2635               	.LCFI62:
 2636               		.cfi_def_cfa_offset 6
 2637 0ef8 CDB7      		in r28,__SP_L__
 2638 0efa DEB7      		in r29,__SP_H__
 2639               	.LCFI63:
 2640               		.cfi_def_cfa_register 28
 2641               	/* prologue: function */
 2642               	/* frame size = 2 */
 2643               	/* stack size = 4 */
 2644               	.L__stack_usage = 4
 716:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame = NULL;
 2645               		.loc 2 716 0
 2646 0efc 1A82      		std Y+2,__zero_reg__
 2647 0efe 1982      		std Y+1,__zero_reg__
 717:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 718:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 2648               		.loc 2 718 0
 2649 0f00 00C0      		rjmp .L127
 2650               	.L136:
 719:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2651               		.loc 2 719 0
 2652 0f02 8981      		ldd r24,Y+1
 2653 0f04 9A81      		ldd r25,Y+2
 2654 0f06 FC01      		movw r30,r24
 2655 0f08 8081      		ld r24,Z
 2656 0f0a 882F      		mov r24,r24
 2657 0f0c 90E0      		ldi r25,0
 2658 0f0e 092E      		mov __tmp_reg__,r25
 2659 0f10 000C      		lsl r0
 2660 0f12 AA0B      		sbc r26,r26
 2661 0f14 BB0B      		sbc r27,r27
 2662 0f16 40E2      		ldi r20,lo8(32)
 2663 0f18 50E0      		ldi r21,0
 2664 0f1a 28E0      		ldi r18,lo8(8)
 2665 0f1c 30E0      		ldi r19,0
 2666 0f1e 841B      		sub r24,r20
 2667 0f20 950B      		sbc r25,r21
 2668 0f22 2817      		cp r18,r24
 2669 0f24 3907      		cpc r19,r25
 2670 0f26 00F0      		brlo .L127
 2671 0f28 8050      		subi r24,lo8(-(gs(.L129)))
 2672 0f2a 9040      		sbci r25,hi8(-(gs(.L129)))
 2673 0f2c FC01      		movw r30,r24
 2674 0f2e 0C94 0000 		jmp __tablejump2__
 2675               		.section	.progmem.gcc_sw_table,"a",@progbits
 2676               		.p2align	1
 2677               	.L129:
 2678 0000 0000      		.word gs(.L128)
 2679 0002 0000      		.word gs(.L127)
 2680 0004 0000      		.word gs(.L130)
 2681 0006 0000      		.word gs(.L127)
 2682 0008 0000      		.word gs(.L131)
 2683 000a 0000      		.word gs(.L132)
 2684 000c 0000      		.word gs(.L133)
 2685 000e 0000      		.word gs(.L134)
 2686 0010 0000      		.word gs(.L135)
 2687               		.text
 2688               	.L128:
 720:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_RECEIVED:
 721:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 722:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleReceivedFrame(frame);
 2689               		.loc 2 722 0
 2690 0f32 8981      		ldd r24,Y+1
 2691 0f34 9A81      		ldd r25,Y+2
 2692 0f36 0E94 0000 		call nwkRxHandleReceivedFrame
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 724:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2693               		.loc 2 724 0
 2694 0f3a 00C0      		rjmp .L127
 2695               	.L130:
 725:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 726:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 727:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_DECRYPT:
 728:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 729:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkSecurityProcess(frame, false);
 730:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 731:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 732:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 733:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 734:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_INDICATE:
 735:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 736:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleIndication(frame);
 2696               		.loc 2 736 0
 2697 0f3c 8981      		ldd r24,Y+1
 2698 0f3e 9A81      		ldd r25,Y+2
 2699 0f40 0E94 0000 		call nwkRxHandleIndication
 737:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 738:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2700               		.loc 2 738 0
 2701 0f44 00C0      		rjmp .L127
 2702               	.L131:
 739:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 740:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 741:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_ROUTE:
 742:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 743:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRouteFrame(frame);
 744:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 745:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 746:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 747:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 748:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_FINISH:
 749:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 750:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkFrameFree(frame);
 2703               		.loc 2 750 0
 2704 0f46 8981      		ldd r24,Y+1
 2705 0f48 9A81      		ldd r25,Y+2
 2706 0f4a 0E94 0000 		call nwkFrameFree
 751:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 752:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2707               		.loc 2 752 0
 2708 0f4e 00C0      		rjmp .L127
 2709               	.L132:
 753:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 754:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_BEACON:
 755:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 756:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateBeaconFrame(frame);
 2710               		.loc 2 756 0
 2711 0f50 8981      		ldd r24,Y+1
 2712 0f52 9A81      		ldd r25,Y+2
 2713 0f54 0E94 0000 		call nwkRxIndicateBeaconFrame
 757:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 758:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2714               		.loc 2 758 0
 2715 0f58 00C0      		rjmp .L127
 2716               	.L133:
 759:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 760:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 761:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLBEACON:
 762:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 763:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLBeaconFrame(frame);
 2717               		.loc 2 763 0
 2718 0f5a 8981      		ldd r24,Y+1
 2719 0f5c 9A81      		ldd r25,Y+2
 2720 0f5e 0E94 0000 		call nwkRxIndicateLLBeaconFrame
 764:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 765:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2721               		.loc 2 765 0
 2722 0f62 00C0      		rjmp .L127
 2723               	.L134:
 766:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 767:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLCOMMAND:
 768:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 769:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLCommandFrame(frame);
 2724               		.loc 2 769 0
 2725 0f64 8981      		ldd r24,Y+1
 2726 0f66 9A81      		ldd r25,Y+2
 2727 0f68 0E94 0000 		call nwkRxIndicateLLCommandFrame
 770:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 771:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2728               		.loc 2 771 0
 2729 0f6c 00C0      		rjmp .L127
 2730               	.L135:
 772:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 773:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLACKFRAME:
 774:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 775:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLACKFrame(frame);
 2731               		.loc 2 775 0
 2732 0f6e 8981      		ldd r24,Y+1
 2733 0f70 9A81      		ldd r25,Y+2
 2734 0f72 0E94 0000 		call nwkRxIndicateLLACKFrame
 776:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 777:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2735               		.loc 2 777 0
 2736 0f76 0000      		nop
 2737               	.L127:
 718:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2738               		.loc 2 718 0
 2739 0f78 8981      		ldd r24,Y+1
 2740 0f7a 9A81      		ldd r25,Y+2
 2741 0f7c 0E94 0000 		call nwkFrameNext
 2742 0f80 9A83      		std Y+2,r25
 2743 0f82 8983      		std Y+1,r24
 2744 0f84 8981      		ldd r24,Y+1
 2745 0f86 9A81      		ldd r25,Y+2
 2746 0f88 892B      		or r24,r25
 2747 0f8a 01F0      		breq .+2
 2748 0f8c 00C0      		rjmp .L136
 778:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 779:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 780:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 781:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2749               		.loc 2 781 0
 2750 0f8e 0000      		nop
 2751               	/* epilogue start */
 2752 0f90 0F90      		pop __tmp_reg__
 2753 0f92 0F90      		pop __tmp_reg__
 2754 0f94 DF91      		pop r29
 2755 0f96 CF91      		pop r28
 2756 0f98 0895      		ret
 2757               		.cfi_endproc
 2758               	.LFE80:
 2760               	.Letext0:
 2761               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 2762               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 2763               		.file 5 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 2764               		.file 6 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 2765               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwkDataReq.h"
 2766               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 2767               		.file 9 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
 2768               		.file 10 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkRx.c
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:7      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 n
                            *COM*:00000004 tTS
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:14     .text:00000000 nwkFramePayloadSize
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:76     .bss.nwkRxDuplicateRejectionTable:00000000 nwkRxDuplicateRejectionTable
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:81     .bss.nwkRxAckControl:00000000 nwkRxAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:86     .bss.nwkRxDuplicateRejectionTimer:00000000 nwkRxDuplicateRejectionTimer
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:91     .text:00000044 nwkRxInit
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:748    .text:00000412 nwkRxDuplicateRejectionTimerHandler
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:1146   .text:00000654 nwkRxSeriveDataInd
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:178    .text:000000b6 PHY_DataInd
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:538    .text:000002e8 nwkRxSendAck
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:710    .text:000003f6 NWK_SetAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:863    .text:000004ac nwkRxRejectDuplicate
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:1214   .text:0000069e nwkRxHandleReceivedFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:1664   .text:00000978 nwkRxIndicateDataFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:2003   .text:00000b86 nwkRxIndicateBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:2147   .text:00000c5c nwkRxIndicateLLBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:2257   .text:00000cf4 nwkRxIndicateLLCommandFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:2377   .text:00000d9e nwkRxIndicateLLACKFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:2497   .text:00000e48 nwkRxHandleIndication
C:\Users\GUILHE~1\AppData\Local\Temp\ccK27NsI.s:2622   .text:00000ef2 nwkRxTaskHandler

UNDEFINED SYMBOLS
NWK_OpenEndpoint
nwkFrameAlloc
nwkFrameAlloc_LLDN
memcpy
nwkFrameCommandInit
nwkTxFrame
SYS_TimerStart
nwkTxAckReceived
nwkIb
NWK_GroupIsMember
nwkTxBroadcastFrame
__tablejump2__
nwkFrameFree
nwkFrameNext
__do_clear_bss
