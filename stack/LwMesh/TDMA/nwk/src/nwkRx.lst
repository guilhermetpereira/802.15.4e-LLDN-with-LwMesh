   1               		.file	"nwkRx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	n,1,1
  12               		.section	.bss.tTS,"aw",@nobits
  15               	tTS:
  16 0000 0000 0000 		.zero	4
  17               		.text
  19               	nwkFramePayloadSize:
  20               	.LFB65:
  21               		.file 1 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
   1:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /**
   2:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \file nwkFrame.h
   3:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   4:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \brief Frame buffers management interface
   5:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   6:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   8:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  10:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  13:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  16:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  20:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  23:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  26:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  38:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  40:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  41:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  42:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  43:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*
  44:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  46:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  48:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  49:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #ifndef _NWK_FRAME_H_
  50:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define _NWK_FRAME_H_
  51:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  52:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Includes ---------------------------------------------------------------*/
  53:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include <stdint.h>
  54:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include "compiler.h"
  55:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  56:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Definitions ------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define NWK_FRAME_MAX_PAYLOAD_SIZE   127
  58:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  59:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Types ------------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_SET(1)
  61:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameHeader_t {
  62:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  63:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  64:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstPanId;
  65:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstAddr;
  66:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  67:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  68:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  69:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t ackRequest : 1;
  70:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t security   : 1;
  71:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t linkLocal  : 1;
  72:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t multicast  : 1;
  73:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t beacon     : 1;
  74:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved   : 3;
  75:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} nwkFcf;
  76:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t nwkSeq;
  77:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkSrcAddr;
  78:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkDstAddr;
  79:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  80:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkSrcEndpoint : 4;
  81:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkDstEndpoint : 4;
  82:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
  83:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameHeader_t;
  84:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  85:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeader_t {
  86:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  87:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  88:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcPanId;
  89:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  90:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
  91:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
  92:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t beaconOrder			: 4;
  93:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t superframeOrder		: 4;
  94:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t finalCAPslot			: 4;
  95:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t BatteryLifeExtension	: 1;
  96:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t Reserved				: 1;
  97:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t PANCoordinator			: 1;
  98:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t AssociationPermit		: 1;
  99:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSFS;
 100:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macGTS;
 101:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macPending;
 102:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeader_t;
 103:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 104:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 105:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeaderLLDN_t {
 106:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/******* MHR *****/
 107:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// struct
 108:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// {
 109:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameType 				: 3;
 110:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SecurityEnabled 	: 1;
 111:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameVersion			: 1;
 112:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t ackRequest				: 1;
 113:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SubFrameType			: 2;
 114:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// } macFcf;
 115:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 116:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 117:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 118:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 119:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 120:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 121:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 122:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 123:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 124:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 125:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/****** MAC Payload *******/
 126:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 127:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 128:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txState 			: 3;
 129:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txDir 				: 1;
 130:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved			: 1;
 131:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t numBaseMgmtTimeslots: 3; // number of managment time slots
 132:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 										// uplink and downlink must be equal
 133:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} Flags;
 134:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 135:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t PanId;
 136:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t confSeqNumber;
 137:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t TimeSlotSize;
 138:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 139:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 140:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeaderLLDN_t;
 141:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 142:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameGeneralHeaderLLDN_t {
 143:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 144:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 145:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 146:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 147:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 148:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 149:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 150:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 151:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 152:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 153:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameGeneralHeaderLLDN_t;
 154:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 155:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 156:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameMulticastHeader_t {
 157:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nonMemberRadius    : 4;
 158:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxNonMemberRadius : 4;
 159:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t memberRadius       : 4;
 160:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxMemberRadius    : 4;
 161:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameMulticastHeader_t;
 162:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 163:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct NwkFrame_t {
 164:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t state;
 165:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t size;
 166:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 167:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 168:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameHeader_t header;
 169:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeader_t beacon;
 170:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeaderLLDN_t LLbeacon;
 171:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameGeneralHeaderLLDN_t LLgeneral;
 172:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t data[NWK_FRAME_MAX_PAYLOAD_SIZE];
 173:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 174:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 175:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t *payload;
 176:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 177:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 178:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 179:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t lqi;
 180:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			int8_t rssi;
 181:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} rx;
 182:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 183:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 184:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t status;
 185:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint16_t timeout;
 186:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t control;
 187:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			void (*confirm)(struct NwkFrame_t *frame);
 188:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} tx;
 189:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 190:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrame_t;
 191:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_RESET()
 192:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Prototypes -------------------------------------------------------------*/
 193:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameInit(void);
 194:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc(void);
 195:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameFree(NwkFrame_t *frame);
 196:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);
 197:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameCommandInit(NwkFrame_t *frame);
 198:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 199:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame);
 200:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Implementations --------------------------------------------------------*/
 201:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 202:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*************************************************************************//**
 203:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** *****************************************************************************/
 204:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** static inline uint8_t nwkFramePayloadSize(NwkFrame_t *frame)
 205:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** {
  22               		.loc 1 205 0
  23               		.cfi_startproc
  24 0000 CF93      		push r28
  25               	.LCFI0:
  26               		.cfi_def_cfa_offset 3
  27               		.cfi_offset 28, -2
  28 0002 DF93      		push r29
  29               	.LCFI1:
  30               		.cfi_def_cfa_offset 4
  31               		.cfi_offset 29, -3
  32 0004 00D0      		rcall .
  33               	.LCFI2:
  34               		.cfi_def_cfa_offset 6
  35 0006 CDB7      		in r28,__SP_L__
  36 0008 DEB7      		in r29,__SP_H__
  37               	.LCFI3:
  38               		.cfi_def_cfa_register 28
  39               	/* prologue: function */
  40               	/* frame size = 2 */
  41               	/* stack size = 4 */
  42               	.L__stack_usage = 4
  43 000a 9A83      		std Y+2,r25
  44 000c 8983      		std Y+1,r24
 206:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	return frame->size - (frame->payload - frame->data);
  45               		.loc 1 206 0
  46 000e 8981      		ldd r24,Y+1
  47 0010 9A81      		ldd r25,Y+2
  48 0012 FC01      		movw r30,r24
  49 0014 4181      		ldd r20,Z+1
  50 0016 8981      		ldd r24,Y+1
  51 0018 9A81      		ldd r25,Y+2
  52 001a 8F57      		subi r24,127
  53 001c 9F4F      		sbci r25,-1
  54 001e FC01      		movw r30,r24
  55 0020 8081      		ld r24,Z
  56 0022 9181      		ldd r25,Z+1
  57 0024 9C01      		movw r18,r24
  58 0026 8981      		ldd r24,Y+1
  59 0028 9A81      		ldd r25,Y+2
  60 002a 0296      		adiw r24,2
  61 002c B901      		movw r22,r18
  62 002e 681B      		sub r22,r24
  63 0030 790B      		sbc r23,r25
  64 0032 CB01      		movw r24,r22
  65 0034 742F      		mov r23,r20
  66 0036 781B      		sub r23,r24
  67 0038 872F      		mov r24,r23
  68               	/* epilogue start */
 207:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** }
  69               		.loc 1 207 0
  70 003a 0F90      		pop __tmp_reg__
  71 003c 0F90      		pop __tmp_reg__
  72 003e DF91      		pop r29
  73 0040 CF91      		pop r28
  74 0042 0895      		ret
  75               		.cfi_endproc
  76               	.LFE65:
  78               		.section	.bss.nwkRxDuplicateRejectionTable,"aw",@nobits
  81               	nwkRxDuplicateRejectionTable:
  82 0000 0000 0000 		.zero	250
  82      0000 0000 
  82      0000 0000 
  82      0000 0000 
  82      0000 0000 
  83               		.section	.bss.nwkRxAckControl,"aw",@nobits
  86               	nwkRxAckControl:
  87 0000 00        		.zero	1
  88               		.section	.bss.nwkRxDuplicateRejectionTimer,"aw",@nobits
  91               	nwkRxDuplicateRejectionTimer:
  92 0000 0000 0000 		.zero	13
  92      0000 0000 
  92      0000 0000 
  92      00
  93               		.text
  94               	.global	nwkRxInit
  96               	nwkRxInit:
  97               	.LFB66:
  98               		.file 2 "../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \file nwkRx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \brief Receive routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkGroup.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRoute.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkCommand.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkSecurity.h"
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRouteDiscovery.h"
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Definitions ------------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL   100 /* ms */
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define DUPLICATE_REJECTION_TTL	\
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	((NWK_DUPLICATE_REJECTION_TTL /	\
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL) + 1)
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_SERVICE_ENDPOINT_ID    0
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Types ------------------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** enum {
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_RECEIVED = 0x20,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_DECRYPT  = 0x21,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_INDICATE = 0x22,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_ROUTE    = 0x23,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_FINISH   = 0x24,
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_BEACON   = 0x25,
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLBEACON 	= 0x26,
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLCOMMAND 	= 0x27,
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLACKFRAME = 0x28,
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** };
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** typedef struct NwkDuplicateRejectionEntry_t {
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint16_t src;
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t seq;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t mask;
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t ttl;
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** } NwkDuplicateRejectionEntry_t;
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Prototypes -------------------------------------------------------------*/
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer);
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind);
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Variables --------------------------------------------------------------*/
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static NwkDuplicateRejectionEntry_t nwkRxDuplicateRejectionTable[
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DUPLICATE_REJECTION_TABLE_SIZE];
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static uint8_t nwkRxAckControl;
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static SYS_Timer_t nwkRxDuplicateRejectionTimer;
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Implementations --------------------------------------------------------*/
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Initializes the Rx module
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxInit(void)
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
  99               		.loc 2 109 0
 100               		.cfi_startproc
 101 0044 CF93      		push r28
 102               	.LCFI4:
 103               		.cfi_def_cfa_offset 3
 104               		.cfi_offset 28, -2
 105 0046 DF93      		push r29
 106               	.LCFI5:
 107               		.cfi_def_cfa_offset 4
 108               		.cfi_offset 29, -3
 109 0048 1F92      		push __zero_reg__
 110               	.LCFI6:
 111               		.cfi_def_cfa_offset 5
 112 004a CDB7      		in r28,__SP_L__
 113 004c DEB7      		in r29,__SP_H__
 114               	.LCFI7:
 115               		.cfi_def_cfa_register 28
 116               	/* prologue: function */
 117               	/* frame size = 1 */
 118               	/* stack size = 3 */
 119               	.L__stack_usage = 3
 120               	.LBB2:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 121               		.loc 2 110 0
 122 004e 1982      		std Y+1,__zero_reg__
 123 0050 00C0      		rjmp .L4
 124               	.L5:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxDuplicateRejectionTable[i].ttl = 0;
 125               		.loc 2 111 0 discriminator 3
 126 0052 8981      		ldd r24,Y+1
 127 0054 282F      		mov r18,r24
 128 0056 30E0      		ldi r19,0
 129 0058 C901      		movw r24,r18
 130 005a 880F      		lsl r24
 131 005c 991F      		rol r25
 132 005e 880F      		lsl r24
 133 0060 991F      		rol r25
 134 0062 820F      		add r24,r18
 135 0064 931F      		adc r25,r19
 136 0066 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 137 0068 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 138 006a FC01      		movw r30,r24
 139 006c 1082      		st Z,__zero_reg__
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 140               		.loc 2 110 0 discriminator 3
 141 006e 8981      		ldd r24,Y+1
 142 0070 8F5F      		subi r24,lo8(-(1))
 143 0072 8983      		std Y+1,r24
 144               	.L4:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 145               		.loc 2 110 0 is_stmt 0 discriminator 1
 146 0074 8981      		ldd r24,Y+1
 147 0076 8233      		cpi r24,lo8(50)
 148 0078 00F0      		brlo .L5
 149               	.LBE2:
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.interval
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL;
 150               		.loc 2 115 0 is_stmt 1
 151 007a 84E6      		ldi r24,lo8(100)
 152 007c 90E0      		ldi r25,0
 153 007e A0E0      		ldi r26,0
 154 0080 B0E0      		ldi r27,0
 155 0082 8093 0000 		sts nwkRxDuplicateRejectionTimer+6,r24
 156 0086 9093 0000 		sts nwkRxDuplicateRejectionTimer+6+1,r25
 157 008a A093 0000 		sts nwkRxDuplicateRejectionTimer+6+2,r26
 158 008e B093 0000 		sts nwkRxDuplicateRejectionTimer+6+3,r27
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE;
 159               		.loc 2 116 0
 160 0092 1092 0000 		sts nwkRxDuplicateRejectionTimer+10,__zero_reg__
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.handler
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= nwkRxDuplicateRejectionTimerHandler;
 161               		.loc 2 118 0
 162 0096 80E0      		ldi r24,lo8(gs(nwkRxDuplicateRejectionTimerHandler))
 163 0098 90E0      		ldi r25,hi8(gs(nwkRxDuplicateRejectionTimerHandler))
 164 009a 9093 0000 		sts nwkRxDuplicateRejectionTimer+11+1,r25
 165 009e 8093 0000 		sts nwkRxDuplicateRejectionTimer+11,r24
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_OpenEndpoint(NWK_SERVICE_ENDPOINT_ID, nwkRxSeriveDataInd);
 166               		.loc 2 120 0
 167 00a2 60E0      		ldi r22,lo8(gs(nwkRxSeriveDataInd))
 168 00a4 70E0      		ldi r23,hi8(gs(nwkRxSeriveDataInd))
 169 00a6 80E0      		ldi r24,0
 170 00a8 0E94 0000 		call NWK_OpenEndpoint
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 171               		.loc 2 121 0
 172 00ac 0000      		nop
 173               	/* epilogue start */
 174 00ae 0F90      		pop __tmp_reg__
 175 00b0 DF91      		pop r29
 176 00b2 CF91      		pop r28
 177 00b4 0895      		ret
 178               		.cfi_endproc
 179               	.LFE66:
 181               		.section	.rodata
 182               	.LC0:
 183 0000 0A0A 4461 		.string	"\n\nDataInd ind->data[0] %hhx"
 183      7461 496E 
 183      6420 696E 
 183      642D 3E64 
 183      6174 615B 
 184               	.LC1:
 185 001c 0A66 7261 		.string	"\nframe->size = %hhx"
 185      6D65 2D3E 
 185      7369 7A65 
 185      203D 2025 
 185      6868 7800 
 186               	.LC2:
 187 0030 0A66 7261 		.string	"\nframe->payload[2] = %hhx"
 187      6D65 2D3E 
 187      7061 796C 
 187      6F61 645B 
 187      325D 203D 
 188               		.text
 189               		.weak	PHY_DataInd
 191               	PHY_DataInd:
 192               	.LFB67:
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void __attribute__((weak)) PHY_DataInd(PHY_DataInd_t *ind)
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 193               		.loc 2 126 0
 194               		.cfi_startproc
 195 00b6 CF93      		push r28
 196               	.LCFI8:
 197               		.cfi_def_cfa_offset 3
 198               		.cfi_offset 28, -2
 199 00b8 DF93      		push r29
 200               	.LCFI9:
 201               		.cfi_def_cfa_offset 4
 202               		.cfi_offset 29, -3
 203 00ba 00D0      		rcall .
 204 00bc 00D0      		rcall .
 205               	.LCFI10:
 206               		.cfi_def_cfa_offset 8
 207 00be CDB7      		in r28,__SP_L__
 208 00c0 DEB7      		in r29,__SP_H__
 209               	.LCFI11:
 210               		.cfi_def_cfa_register 28
 211               	/* prologue: function */
 212               	/* frame size = 4 */
 213               	/* stack size = 6 */
 214               	.L__stack_usage = 6
 215 00c2 9C83      		std Y+4,r25
 216 00c4 8B83      		std Y+3,r24
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame;
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	printf("\n\nDataInd ind->data[0] %hhx", ind->data[0]);
 217               		.loc 2 128 0
 218 00c6 8B81      		ldd r24,Y+3
 219 00c8 9C81      		ldd r25,Y+4
 220 00ca FC01      		movw r30,r24
 221 00cc 8081      		ld r24,Z
 222 00ce 9181      		ldd r25,Z+1
 223 00d0 FC01      		movw r30,r24
 224 00d2 8081      		ld r24,Z
 225 00d4 882F      		mov r24,r24
 226 00d6 90E0      		ldi r25,0
 227 00d8 292F      		mov r18,r25
 228 00da 2F93      		push r18
 229 00dc 8F93      		push r24
 230 00de 80E0      		ldi r24,lo8(.LC0)
 231 00e0 90E0      		ldi r25,hi8(.LC0)
 232 00e2 892F      		mov r24,r25
 233 00e4 8F93      		push r24
 234 00e6 80E0      		ldi r24,lo8(.LC0)
 235 00e8 90E0      		ldi r25,hi8(.LC0)
 236 00ea 8F93      		push r24
 237 00ec 0E94 0000 		call printf
 238 00f0 0F90      		pop __tmp_reg__
 239 00f2 0F90      		pop __tmp_reg__
 240 00f4 0F90      		pop __tmp_reg__
 241 00f6 0F90      		pop __tmp_reg__
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-Beacon frame
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(0x0c == ind->data[0])
 242               		.loc 2 130 0
 243 00f8 8B81      		ldd r24,Y+3
 244 00fa 9C81      		ldd r25,Y+4
 245 00fc FC01      		movw r30,r24
 246 00fe 8081      		ld r24,Z
 247 0100 9181      		ldd r25,Z+1
 248 0102 FC01      		movw r30,r24
 249 0104 8081      		ld r24,Z
 250 0106 8C30      		cpi r24,lo8(12)
 251 0108 01F4      		brne .L7
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameBeaconHeaderLLDN_t))
 252               		.loc 2 132 0
 253 010a 8B81      		ldd r24,Y+3
 254 010c 9C81      		ldd r25,Y+4
 255 010e FC01      		movw r30,r24
 256 0110 8281      		ldd r24,Z+2
 257 0112 8730      		cpi r24,lo8(7)
 258 0114 00F0      		brlo .+2
 259 0116 00C0      		rjmp .L8
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 260               		.loc 2 134 0
 261 0118 00C0      		rjmp .L6
 262               	.L7:
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-MAC Command frame
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0xcc == ind->data[0] || 0x8c == ind->data[0])
 263               		.loc 2 138 0
 264 011a 8B81      		ldd r24,Y+3
 265 011c 9C81      		ldd r25,Y+4
 266 011e FC01      		movw r30,r24
 267 0120 8081      		ld r24,Z
 268 0122 9181      		ldd r25,Z+1
 269 0124 FC01      		movw r30,r24
 270 0126 8081      		ld r24,Z
 271 0128 8C3C      		cpi r24,lo8(-52)
 272 012a 01F0      		breq .L10
 273               		.loc 2 138 0 is_stmt 0 discriminator 1
 274 012c 8B81      		ldd r24,Y+3
 275 012e 9C81      		ldd r25,Y+4
 276 0130 FC01      		movw r30,r24
 277 0132 8081      		ld r24,Z
 278 0134 9181      		ldd r25,Z+1
 279 0136 FC01      		movw r30,r24
 280 0138 8081      		ld r24,Z
 281 013a 8C38      		cpi r24,lo8(-116)
 282 013c 01F4      		brne .L11
 283               	.L10:
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameGeneralHeaderLLDN_t))
 284               		.loc 2 140 0 is_stmt 1
 285 013e 8B81      		ldd r24,Y+3
 286 0140 9C81      		ldd r25,Y+4
 287 0142 FC01      		movw r30,r24
 288 0144 8281      		ldd r24,Z+2
 289 0146 8330      		cpi r24,lo8(3)
 290 0148 00F0      		brlo .+2
 291 014a 00C0      		rjmp .L8
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 292               		.loc 2 142 0
 293 014c 00C0      		rjmp .L6
 294               	.L11:
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x88 == ind->data[1])
 295               		.loc 2 145 0
 296 014e 8B81      		ldd r24,Y+3
 297 0150 9C81      		ldd r25,Y+4
 298 0152 FC01      		movw r30,r24
 299 0154 8081      		ld r24,Z
 300 0156 9181      		ldd r25,Z+1
 301 0158 0196      		adiw r24,1
 302 015a FC01      		movw r30,r24
 303 015c 8081      		ld r24,Z
 304 015e 8838      		cpi r24,lo8(-120)
 305 0160 01F4      		brne .L13
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x61 != ind->data[0] && 0x41 != ind->data[0]) || ind->size < sizeof(NwkFrameHeader_t))
 306               		.loc 2 147 0
 307 0162 8B81      		ldd r24,Y+3
 308 0164 9C81      		ldd r25,Y+4
 309 0166 FC01      		movw r30,r24
 310 0168 8081      		ld r24,Z
 311 016a 9181      		ldd r25,Z+1
 312 016c FC01      		movw r30,r24
 313 016e 8081      		ld r24,Z
 314 0170 8136      		cpi r24,lo8(97)
 315 0172 01F0      		breq .L14
 316               		.loc 2 147 0 is_stmt 0 discriminator 1
 317 0174 8B81      		ldd r24,Y+3
 318 0176 9C81      		ldd r25,Y+4
 319 0178 FC01      		movw r30,r24
 320 017a 8081      		ld r24,Z
 321 017c 9181      		ldd r25,Z+1
 322 017e FC01      		movw r30,r24
 323 0180 8081      		ld r24,Z
 324 0182 8134      		cpi r24,lo8(65)
 325 0184 01F0      		breq .+2
 326 0186 00C0      		rjmp .L28
 327               	.L14:
 328               		.loc 2 147 0 discriminator 3
 329 0188 8B81      		ldd r24,Y+3
 330 018a 9C81      		ldd r25,Y+4
 331 018c FC01      		movw r30,r24
 332 018e 8281      		ldd r24,Z+2
 333 0190 8031      		cpi r24,lo8(16)
 334 0192 00F4      		brsh .L8
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 335               		.loc 2 149 0 is_stmt 1
 336 0194 00C0      		rjmp .L28
 337               	.L13:
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x80 == ind->data[1])
 338               		.loc 2 152 0
 339 0196 8B81      		ldd r24,Y+3
 340 0198 9C81      		ldd r25,Y+4
 341 019a FC01      		movw r30,r24
 342 019c 8081      		ld r24,Z
 343 019e 9181      		ldd r25,Z+1
 344 01a0 0196      		adiw r24,1
 345 01a2 FC01      		movw r30,r24
 346 01a4 8081      		ld r24,Z
 347 01a6 8038      		cpi r24,lo8(-128)
 348 01a8 01F0      		breq .+2
 349 01aa 00C0      		rjmp .L29
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x00 != ind->data[0]) || ind->size < (sizeof(NwkFrameBeaconHeader_t)))
 350               		.loc 2 154 0
 351 01ac 8B81      		ldd r24,Y+3
 352 01ae 9C81      		ldd r25,Y+4
 353 01b0 FC01      		movw r30,r24
 354 01b2 8081      		ld r24,Z
 355 01b4 9181      		ldd r25,Z+1
 356 01b6 FC01      		movw r30,r24
 357 01b8 8081      		ld r24,Z
 358 01ba 8823      		tst r24
 359 01bc 01F0      		breq .+2
 360 01be 00C0      		rjmp .L30
 361               		.loc 2 154 0 is_stmt 0 discriminator 1
 362 01c0 8B81      		ldd r24,Y+3
 363 01c2 9C81      		ldd r25,Y+4
 364 01c4 FC01      		movw r30,r24
 365 01c6 8281      		ldd r24,Z+2
 366 01c8 8B30      		cpi r24,lo8(11)
 367 01ca 00F4      		brsh .+2
 368 01cc 00C0      		rjmp .L30
 369               	.L8:
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(ind->data[1] == 0x88 || ind->data[1] == 0x80)
 370               		.loc 2 164 0 is_stmt 1
 371 01ce 8B81      		ldd r24,Y+3
 372 01d0 9C81      		ldd r25,Y+4
 373 01d2 FC01      		movw r30,r24
 374 01d4 8081      		ld r24,Z
 375 01d6 9181      		ldd r25,Z+1
 376 01d8 0196      		adiw r24,1
 377 01da FC01      		movw r30,r24
 378 01dc 8081      		ld r24,Z
 379 01de 8838      		cpi r24,lo8(-120)
 380 01e0 01F0      		breq .L18
 381               		.loc 2 164 0 is_stmt 0 discriminator 1
 382 01e2 8B81      		ldd r24,Y+3
 383 01e4 9C81      		ldd r25,Y+4
 384 01e6 FC01      		movw r30,r24
 385 01e8 8081      		ld r24,Z
 386 01ea 9181      		ldd r25,Z+1
 387 01ec 0196      		adiw r24,1
 388 01ee FC01      		movw r30,r24
 389 01f0 8081      		ld r24,Z
 390 01f2 8038      		cpi r24,lo8(-128)
 391 01f4 01F4      		brne .L19
 392               	.L18:
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc())) {
 393               		.loc 2 166 0 is_stmt 1
 394 01f6 0E94 0000 		call nwkFrameAlloc
 395 01fa 9A83      		std Y+2,r25
 396 01fc 8983      		std Y+1,r24
 397 01fe 8981      		ldd r24,Y+1
 398 0200 9A81      		ldd r25,Y+2
 399 0202 892B      		or r24,r25
 400 0204 01F4      		brne .+2
 401 0206 00C0      		rjmp .L31
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame received is NwkFrameHeader change state to Receveid
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is a 802.15.4 beacon change state to Beacon
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = ((0x88 == ind->data[1]) ? NWK_RX_STATE_RECEIVED : NWK_RX_STATE_BEACON);
 402               		.loc 2 171 0
 403 0208 8B81      		ldd r24,Y+3
 404 020a 9C81      		ldd r25,Y+4
 405 020c FC01      		movw r30,r24
 406 020e 8081      		ld r24,Z
 407 0210 9181      		ldd r25,Z+1
 408 0212 0196      		adiw r24,1
 409 0214 FC01      		movw r30,r24
 410 0216 8081      		ld r24,Z
 411 0218 8838      		cpi r24,lo8(-120)
 412 021a 01F4      		brne .L21
 413               		.loc 2 171 0 is_stmt 0 discriminator 1
 414 021c 20E2      		ldi r18,lo8(32)
 415 021e 00C0      		rjmp .L22
 416               	.L21:
 417               		.loc 2 171 0 discriminator 2
 418 0220 25E2      		ldi r18,lo8(37)
 419               	.L22:
 420               		.loc 2 171 0 discriminator 4
 421 0222 8981      		ldd r24,Y+1
 422 0224 9A81      		ldd r25,Y+2
 423 0226 FC01      		movw r30,r24
 424 0228 2083      		st Z,r18
 425 022a 00C0      		rjmp .L23
 426               	.L19:
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// allocate frame buffer according to received frame
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(ind->data[0] == 0x0c)
 427               		.loc 2 174 0 is_stmt 1
 428 022c 8B81      		ldd r24,Y+3
 429 022e 9C81      		ldd r25,Y+4
 430 0230 FC01      		movw r30,r24
 431 0232 8081      		ld r24,Z
 432 0234 9181      		ldd r25,Z+1
 433 0236 FC01      		movw r30,r24
 434 0238 8081      		ld r24,Z
 435 023a 8C30      		cpi r24,lo8(12)
 436 023c 01F4      		brne .L24
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-Beacon frame
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(true))){
 437               		.loc 2 177 0
 438 023e 81E0      		ldi r24,lo8(1)
 439 0240 0E94 0000 		call nwkFrameAlloc_LLDN
 440 0244 9A83      		std Y+2,r25
 441 0246 8983      		std Y+1,r24
 442 0248 8981      		ldd r24,Y+1
 443 024a 9A81      		ldd r25,Y+2
 444 024c 892B      		or r24,r25
 445 024e 01F4      		brne .+2
 446 0250 00C0      		rjmp .L32
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-Beacon change state to LLBEACON
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLBEACON;
 447               		.loc 2 181 0
 448 0252 8981      		ldd r24,Y+1
 449 0254 9A81      		ldd r25,Y+2
 450 0256 26E2      		ldi r18,lo8(38)
 451 0258 FC01      		movw r30,r24
 452 025a 2083      		st Z,r18
 453 025c 00C0      		rjmp .L23
 454               	.L24:
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-MAC command or LL-Data frame
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(false))){
 455               		.loc 2 186 0
 456 025e 80E0      		ldi r24,0
 457 0260 0E94 0000 		call nwkFrameAlloc_LLDN
 458 0264 9A83      		std Y+2,r25
 459 0266 8983      		std Y+1,r24
 460 0268 8981      		ldd r24,Y+1
 461 026a 9A81      		ldd r25,Y+2
 462 026c 892B      		or r24,r25
 463 026e 01F4      		brne .+2
 464 0270 00C0      		rjmp .L33
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-AckFrame change state to LLACKFRAME
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-MACComand change state to LLCOMMAND
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->data[0] == 0x8c) 
 465               		.loc 2 191 0
 466 0272 8B81      		ldd r24,Y+3
 467 0274 9C81      		ldd r25,Y+4
 468 0276 FC01      		movw r30,r24
 469 0278 8081      		ld r24,Z
 470 027a 9181      		ldd r25,Z+1
 471 027c FC01      		movw r30,r24
 472 027e 8081      		ld r24,Z
 473 0280 8C38      		cpi r24,lo8(-116)
 474 0282 01F4      		brne .L27
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLACKFRAME;
 475               		.loc 2 192 0
 476 0284 8981      		ldd r24,Y+1
 477 0286 9A81      		ldd r25,Y+2
 478 0288 28E2      		ldi r18,lo8(40)
 479 028a FC01      		movw r30,r24
 480 028c 2083      		st Z,r18
 481 028e 00C0      		rjmp .L23
 482               	.L27:
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{ 
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLCOMMAND;
 483               		.loc 2 195 0
 484 0290 8981      		ldd r24,Y+1
 485 0292 9A81      		ldd r25,Y+2
 486 0294 27E2      		ldi r18,lo8(39)
 487 0296 FC01      		movw r30,r24
 488 0298 2083      		st Z,r18
 489               	.L23:
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size = ind->size;
 490               		.loc 2 199 0
 491 029a 8B81      		ldd r24,Y+3
 492 029c 9C81      		ldd r25,Y+4
 493 029e FC01      		movw r30,r24
 494 02a0 2281      		ldd r18,Z+2
 495 02a2 8981      		ldd r24,Y+1
 496 02a4 9A81      		ldd r25,Y+2
 497 02a6 FC01      		movw r30,r24
 498 02a8 2183      		std Z+1,r18
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	printf("\nframe->size = %hhx", frame->size);
 499               		.loc 2 200 0
 500 02aa 8981      		ldd r24,Y+1
 501 02ac 9A81      		ldd r25,Y+2
 502 02ae FC01      		movw r30,r24
 503 02b0 8181      		ldd r24,Z+1
 504 02b2 882F      		mov r24,r24
 505 02b4 90E0      		ldi r25,0
 506 02b6 292F      		mov r18,r25
 507 02b8 2F93      		push r18
 508 02ba 8F93      		push r24
 509 02bc 80E0      		ldi r24,lo8(.LC1)
 510 02be 90E0      		ldi r25,hi8(.LC1)
 511 02c0 892F      		mov r24,r25
 512 02c2 8F93      		push r24
 513 02c4 80E0      		ldi r24,lo8(.LC1)
 514 02c6 90E0      		ldi r25,hi8(.LC1)
 515 02c8 8F93      		push r24
 516 02ca 0E94 0000 		call printf
 517 02ce 0F90      		pop __tmp_reg__
 518 02d0 0F90      		pop __tmp_reg__
 519 02d2 0F90      		pop __tmp_reg__
 520 02d4 0F90      		pop __tmp_reg__
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.lqi = ind->lqi;
 521               		.loc 2 201 0
 522 02d6 8B81      		ldd r24,Y+3
 523 02d8 9C81      		ldd r25,Y+4
 524 02da FC01      		movw r30,r24
 525 02dc 2381      		ldd r18,Z+3
 526 02de 8981      		ldd r24,Y+1
 527 02e0 9A81      		ldd r25,Y+2
 528 02e2 8D57      		subi r24,125
 529 02e4 9F4F      		sbci r25,-1
 530 02e6 FC01      		movw r30,r24
 531 02e8 2083      		st Z,r18
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.rssi = ind->rssi;
 532               		.loc 2 202 0
 533 02ea 8B81      		ldd r24,Y+3
 534 02ec 9C81      		ldd r25,Y+4
 535 02ee FC01      		movw r30,r24
 536 02f0 2481      		ldd r18,Z+4
 537 02f2 8981      		ldd r24,Y+1
 538 02f4 9A81      		ldd r25,Y+2
 539 02f6 8C57      		subi r24,124
 540 02f8 9F4F      		sbci r25,-1
 541 02fa FC01      		movw r30,r24
 542 02fc 2083      		st Z,r18
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	memcpy(frame->data, ind->data, ind->size);
 543               		.loc 2 203 0
 544 02fe 8B81      		ldd r24,Y+3
 545 0300 9C81      		ldd r25,Y+4
 546 0302 FC01      		movw r30,r24
 547 0304 8281      		ldd r24,Z+2
 548 0306 482F      		mov r20,r24
 549 0308 50E0      		ldi r21,0
 550 030a 8B81      		ldd r24,Y+3
 551 030c 9C81      		ldd r25,Y+4
 552 030e FC01      		movw r30,r24
 553 0310 2081      		ld r18,Z
 554 0312 3181      		ldd r19,Z+1
 555 0314 8981      		ldd r24,Y+1
 556 0316 9A81      		ldd r25,Y+2
 557 0318 0296      		adiw r24,2
 558 031a B901      		movw r22,r18
 559 031c 0E94 0000 		call memcpy
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	printf("\nframe->payload[2] = %hhx", frame->payload[2]);
 560               		.loc 2 204 0
 561 0320 8981      		ldd r24,Y+1
 562 0322 9A81      		ldd r25,Y+2
 563 0324 8F57      		subi r24,127
 564 0326 9F4F      		sbci r25,-1
 565 0328 FC01      		movw r30,r24
 566 032a 8081      		ld r24,Z
 567 032c 9181      		ldd r25,Z+1
 568 032e 0296      		adiw r24,2
 569 0330 FC01      		movw r30,r24
 570 0332 8081      		ld r24,Z
 571 0334 882F      		mov r24,r24
 572 0336 90E0      		ldi r25,0
 573 0338 292F      		mov r18,r25
 574 033a 2F93      		push r18
 575 033c 8F93      		push r24
 576 033e 80E0      		ldi r24,lo8(.LC2)
 577 0340 90E0      		ldi r25,hi8(.LC2)
 578 0342 892F      		mov r24,r25
 579 0344 8F93      		push r24
 580 0346 80E0      		ldi r24,lo8(.LC2)
 581 0348 90E0      		ldi r25,hi8(.LC2)
 582 034a 8F93      		push r24
 583 034c 0E94 0000 		call printf
 584 0350 0F90      		pop __tmp_reg__
 585 0352 0F90      		pop __tmp_reg__
 586 0354 0F90      		pop __tmp_reg__
 587 0356 0F90      		pop __tmp_reg__
 588 0358 00C0      		rjmp .L6
 589               	.L28:
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 590               		.loc 2 149 0
 591 035a 0000      		nop
 592 035c 00C0      		rjmp .L6
 593               	.L29:
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 594               		.loc 2 161 0
 595 035e 0000      		nop
 596 0360 00C0      		rjmp .L6
 597               	.L30:
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 598               		.loc 2 156 0
 599 0362 0000      		nop
 600 0364 00C0      		rjmp .L6
 601               	.L31:
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 602               		.loc 2 167 0
 603 0366 0000      		nop
 604 0368 00C0      		rjmp .L6
 605               	.L32:
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 606               		.loc 2 178 0
 607 036a 0000      		nop
 608 036c 00C0      		rjmp .L6
 609               	.L33:
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 610               		.loc 2 187 0
 611 036e 0000      		nop
 612               	.L6:
 613               	/* epilogue start */
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 614               		.loc 2 206 0
 615 0370 0F90      		pop __tmp_reg__
 616 0372 0F90      		pop __tmp_reg__
 617 0374 0F90      		pop __tmp_reg__
 618 0376 0F90      		pop __tmp_reg__
 619 0378 DF91      		pop r29
 620 037a CF91      		pop r28
 621 037c 0895      		ret
 622               		.cfi_endproc
 623               	.LFE67:
 626               	nwkRxSendAck:
 627               	.LFB68:
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxSendAck(NwkFrame_t *frame)
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 628               		.loc 2 211 0
 629               		.cfi_startproc
 630 037e CF93      		push r28
 631               	.LCFI12:
 632               		.cfi_def_cfa_offset 3
 633               		.cfi_offset 28, -2
 634 0380 DF93      		push r29
 635               	.LCFI13:
 636               		.cfi_def_cfa_offset 4
 637               		.cfi_offset 29, -3
 638 0382 00D0      		rcall .
 639 0384 00D0      		rcall .
 640 0386 00D0      		rcall .
 641               	.LCFI14:
 642               		.cfi_def_cfa_offset 10
 643 0388 CDB7      		in r28,__SP_L__
 644 038a DEB7      		in r29,__SP_H__
 645               	.LCFI15:
 646               		.cfi_def_cfa_register 28
 647               	/* prologue: function */
 648               	/* frame size = 6 */
 649               	/* stack size = 8 */
 650               	.L__stack_usage = 8
 651 038c 9E83      		std Y+6,r25
 652 038e 8D83      		std Y+5,r24
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *ack;
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkCommandAck_t *command;
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (ack = nwkFrameAlloc())) {
 653               		.loc 2 215 0
 654 0390 0E94 0000 		call nwkFrameAlloc
 655 0394 9A83      		std Y+2,r25
 656 0396 8983      		std Y+1,r24
 657 0398 8981      		ldd r24,Y+1
 658 039a 9A81      		ldd r25,Y+2
 659 039c 892B      		or r24,r25
 660 039e 01F4      		brne .+2
 661 03a0 00C0      		rjmp .L37
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size += sizeof(NwkFrameHeader_t);
 662               		.loc 2 219 0
 663 03a2 8D81      		ldd r24,Y+5
 664 03a4 9E81      		ldd r25,Y+6
 665 03a6 FC01      		movw r30,r24
 666 03a8 8181      		ldd r24,Z+1
 667 03aa 20E1      		ldi r18,lo8(16)
 668 03ac 280F      		add r18,r24
 669 03ae 8D81      		ldd r24,Y+5
 670 03b0 9E81      		ldd r25,Y+6
 671 03b2 FC01      		movw r30,r24
 672 03b4 2183      		std Z+1,r18
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->payload += sizeof(NwkFrameHeader_t);
 673               		.loc 2 220 0
 674 03b6 8D81      		ldd r24,Y+5
 675 03b8 9E81      		ldd r25,Y+6
 676 03ba 8F57      		subi r24,127
 677 03bc 9F4F      		sbci r25,-1
 678 03be FC01      		movw r30,r24
 679 03c0 8081      		ld r24,Z
 680 03c2 9181      		ldd r25,Z+1
 681 03c4 9C01      		movw r18,r24
 682 03c6 205F      		subi r18,-16
 683 03c8 3F4F      		sbci r19,-1
 684 03ca 8D81      		ldd r24,Y+5
 685 03cc 9E81      		ldd r25,Y+6
 686 03ce 8F57      		subi r24,127
 687 03d0 9F4F      		sbci r25,-1
 688 03d2 FC01      		movw r30,r24
 689 03d4 3183      		std Z+1,r19
 690 03d6 2083      		st Z,r18
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkFrameCommandInit(ack);
 691               		.loc 2 222 0
 692 03d8 8981      		ldd r24,Y+1
 693 03da 9A81      		ldd r25,Y+2
 694 03dc 0E94 0000 		call nwkFrameCommandInit
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->size += sizeof(NwkCommandAck_t);
 695               		.loc 2 224 0
 696 03e0 8981      		ldd r24,Y+1
 697 03e2 9A81      		ldd r25,Y+2
 698 03e4 FC01      		movw r30,r24
 699 03e6 8181      		ldd r24,Z+1
 700 03e8 23E0      		ldi r18,lo8(3)
 701 03ea 280F      		add r18,r24
 702 03ec 8981      		ldd r24,Y+1
 703 03ee 9A81      		ldd r25,Y+2
 704 03f0 FC01      		movw r30,r24
 705 03f2 2183      		std Z+1,r18
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->tx.confirm = NULL;
 706               		.loc 2 225 0
 707 03f4 8981      		ldd r24,Y+1
 708 03f6 9A81      		ldd r25,Y+2
 709 03f8 8957      		subi r24,121
 710 03fa 9F4F      		sbci r25,-1
 711 03fc FC01      		movw r30,r24
 712 03fe 1182      		std Z+1,__zero_reg__
 713 0400 1082      		st Z,__zero_reg__
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkFcf.security = frame->header.nwkFcf.security;
 714               		.loc 2 227 0
 715 0402 8D81      		ldd r24,Y+5
 716 0404 9E81      		ldd r25,Y+6
 717 0406 FC01      		movw r30,r24
 718 0408 8385      		ldd r24,Z+11
 719 040a 81FB      		bst r24,1
 720 040c 2227      		clr r18
 721 040e 20F9      		bld r18,0
 722 0410 8981      		ldd r24,Y+1
 723 0412 9A81      		ldd r25,Y+2
 724 0414 2170      		andi r18,lo8(1)
 725 0416 220F      		lsl r18
 726 0418 FC01      		movw r30,r24
 727 041a 3385      		ldd r19,Z+11
 728 041c 3D7F      		andi r19,lo8(-3)
 729 041e 232B      		or r18,r19
 730 0420 FC01      		movw r30,r24
 731 0422 2387      		std Z+11,r18
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 732               		.loc 2 228 0
 733 0424 8D81      		ldd r24,Y+5
 734 0426 9E81      		ldd r25,Y+6
 735 0428 FC01      		movw r30,r24
 736 042a 2585      		ldd r18,Z+13
 737 042c 3685      		ldd r19,Z+14
 738 042e 8981      		ldd r24,Y+1
 739 0430 9A81      		ldd r25,Y+2
 740 0432 FC01      		movw r30,r24
 741 0434 308B      		std Z+16,r19
 742 0436 2787      		std Z+15,r18
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command = (NwkCommandAck_t *)ack->payload;
 743               		.loc 2 230 0
 744 0438 8981      		ldd r24,Y+1
 745 043a 9A81      		ldd r25,Y+2
 746 043c 8F57      		subi r24,127
 747 043e 9F4F      		sbci r25,-1
 748 0440 FC01      		movw r30,r24
 749 0442 8081      		ld r24,Z
 750 0444 9181      		ldd r25,Z+1
 751 0446 9C83      		std Y+4,r25
 752 0448 8B83      		std Y+3,r24
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->id = NWK_COMMAND_ACK;
 753               		.loc 2 231 0
 754 044a 8B81      		ldd r24,Y+3
 755 044c 9C81      		ldd r25,Y+4
 756 044e FC01      		movw r30,r24
 757 0450 1082      		st Z,__zero_reg__
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->control = nwkRxAckControl;
 758               		.loc 2 232 0
 759 0452 2091 0000 		lds r18,nwkRxAckControl
 760 0456 8B81      		ldd r24,Y+3
 761 0458 9C81      		ldd r25,Y+4
 762 045a FC01      		movw r30,r24
 763 045c 2283      		std Z+2,r18
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->seq = frame->header.nwkSeq;
 764               		.loc 2 233 0
 765 045e 8D81      		ldd r24,Y+5
 766 0460 9E81      		ldd r25,Y+6
 767 0462 FC01      		movw r30,r24
 768 0464 2485      		ldd r18,Z+12
 769 0466 8B81      		ldd r24,Y+3
 770 0468 9C81      		ldd r25,Y+4
 771 046a FC01      		movw r30,r24
 772 046c 2183      		std Z+1,r18
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkTxFrame(ack);
 773               		.loc 2 235 0
 774 046e 8981      		ldd r24,Y+1
 775 0470 9A81      		ldd r25,Y+2
 776 0472 0E94 0000 		call nwkTxFrame
 777 0476 00C0      		rjmp .L34
 778               	.L37:
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 779               		.loc 2 216 0
 780 0478 0000      		nop
 781               	.L34:
 782               	/* epilogue start */
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 783               		.loc 2 236 0
 784 047a 2696      		adiw r28,6
 785 047c 0FB6      		in __tmp_reg__,__SREG__
 786 047e F894      		cli
 787 0480 DEBF      		out __SP_H__,r29
 788 0482 0FBE      		out __SREG__,__tmp_reg__
 789 0484 CDBF      		out __SP_L__,r28
 790 0486 DF91      		pop r29
 791 0488 CF91      		pop r28
 792 048a 0895      		ret
 793               		.cfi_endproc
 794               	.LFE68:
 796               	.global	NWK_SetAckControl
 798               	NWK_SetAckControl:
 799               	.LFB69:
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void NWK_SetAckControl(uint8_t control)
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 800               		.loc 2 241 0
 801               		.cfi_startproc
 802 048c CF93      		push r28
 803               	.LCFI16:
 804               		.cfi_def_cfa_offset 3
 805               		.cfi_offset 28, -2
 806 048e DF93      		push r29
 807               	.LCFI17:
 808               		.cfi_def_cfa_offset 4
 809               		.cfi_offset 29, -3
 810 0490 1F92      		push __zero_reg__
 811               	.LCFI18:
 812               		.cfi_def_cfa_offset 5
 813 0492 CDB7      		in r28,__SP_L__
 814 0494 DEB7      		in r29,__SP_H__
 815               	.LCFI19:
 816               		.cfi_def_cfa_register 28
 817               	/* prologue: function */
 818               	/* frame size = 1 */
 819               	/* stack size = 3 */
 820               	.L__stack_usage = 3
 821 0496 8983      		std Y+1,r24
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = control;
 822               		.loc 2 242 0
 823 0498 8981      		ldd r24,Y+1
 824 049a 8093 0000 		sts nwkRxAckControl,r24
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 825               		.loc 2 243 0
 826 049e 0000      		nop
 827               	/* epilogue start */
 828 04a0 0F90      		pop __tmp_reg__
 829 04a2 DF91      		pop r29
 830 04a4 CF91      		pop r28
 831 04a6 0895      		ret
 832               		.cfi_endproc
 833               	.LFE69:
 836               	nwkRxDuplicateRejectionTimerHandler:
 837               	.LFB70:
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxDecryptConf(NwkFrame_t *frame, bool status)
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (status) {
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_INDICATE;
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else {
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_FINISH;
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer)
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 838               		.loc 2 263 0
 839               		.cfi_startproc
 840 04a8 CF93      		push r28
 841               	.LCFI20:
 842               		.cfi_def_cfa_offset 3
 843               		.cfi_offset 28, -2
 844 04aa DF93      		push r29
 845               	.LCFI21:
 846               		.cfi_def_cfa_offset 4
 847               		.cfi_offset 29, -3
 848 04ac 00D0      		rcall .
 849 04ae 00D0      		rcall .
 850               	.LCFI22:
 851               		.cfi_def_cfa_offset 8
 852 04b0 CDB7      		in r28,__SP_L__
 853 04b2 DEB7      		in r29,__SP_H__
 854               	.LCFI23:
 855               		.cfi_def_cfa_register 28
 856               	/* prologue: function */
 857               	/* frame size = 4 */
 858               	/* stack size = 6 */
 859               	.L__stack_usage = 6
 860 04b4 9C83      		std Y+4,r25
 861 04b6 8B83      		std Y+3,r24
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool restart = false;
 862               		.loc 2 264 0
 863 04b8 1982      		std Y+1,__zero_reg__
 864               	.LBB3:
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 865               		.loc 2 266 0
 866 04ba 1A82      		std Y+2,__zero_reg__
 867 04bc 00C0      		rjmp .L40
 868               	.L42:
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 869               		.loc 2 267 0
 870 04be 8A81      		ldd r24,Y+2
 871 04c0 282F      		mov r18,r24
 872 04c2 30E0      		ldi r19,0
 873 04c4 C901      		movw r24,r18
 874 04c6 880F      		lsl r24
 875 04c8 991F      		rol r25
 876 04ca 880F      		lsl r24
 877 04cc 991F      		rol r25
 878 04ce 820F      		add r24,r18
 879 04d0 931F      		adc r25,r19
 880 04d2 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 881 04d4 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 882 04d6 FC01      		movw r30,r24
 883 04d8 8081      		ld r24,Z
 884 04da 8823      		tst r24
 885 04dc 01F0      		breq .L41
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxDuplicateRejectionTable[i].ttl--;
 886               		.loc 2 268 0
 887 04de 8A81      		ldd r24,Y+2
 888 04e0 282F      		mov r18,r24
 889 04e2 30E0      		ldi r19,0
 890 04e4 C901      		movw r24,r18
 891 04e6 880F      		lsl r24
 892 04e8 991F      		rol r25
 893 04ea 880F      		lsl r24
 894 04ec 991F      		rol r25
 895 04ee 820F      		add r24,r18
 896 04f0 931F      		adc r25,r19
 897 04f2 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 898 04f4 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 899 04f6 FC01      		movw r30,r24
 900 04f8 8081      		ld r24,Z
 901 04fa 4FEF      		ldi r20,lo8(-1)
 902 04fc 480F      		add r20,r24
 903 04fe C901      		movw r24,r18
 904 0500 880F      		lsl r24
 905 0502 991F      		rol r25
 906 0504 880F      		lsl r24
 907 0506 991F      		rol r25
 908 0508 820F      		add r24,r18
 909 050a 931F      		adc r25,r19
 910 050c 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 911 050e 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 912 0510 FC01      		movw r30,r24
 913 0512 4083      		st Z,r20
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			restart = true;
 914               		.loc 2 269 0
 915 0514 81E0      		ldi r24,lo8(1)
 916 0516 8983      		std Y+1,r24
 917               	.L41:
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 918               		.loc 2 266 0 discriminator 2
 919 0518 8A81      		ldd r24,Y+2
 920 051a 8F5F      		subi r24,lo8(-(1))
 921 051c 8A83      		std Y+2,r24
 922               	.L40:
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 923               		.loc 2 266 0 is_stmt 0 discriminator 1
 924 051e 8A81      		ldd r24,Y+2
 925 0520 8233      		cpi r24,lo8(50)
 926 0522 00F0      		brlo .L42
 927               	.LBE3:
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (restart) {
 928               		.loc 2 273 0 is_stmt 1
 929 0524 8981      		ldd r24,Y+1
 930 0526 8823      		tst r24
 931 0528 01F0      		breq .L44
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		SYS_TimerStart(timer);
 932               		.loc 2 274 0
 933 052a 8B81      		ldd r24,Y+3
 934 052c 9C81      		ldd r25,Y+4
 935 052e 0E94 0000 		call SYS_TimerStart
 936               	.L44:
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 937               		.loc 2 276 0
 938 0532 0000      		nop
 939               	/* epilogue start */
 940 0534 0F90      		pop __tmp_reg__
 941 0536 0F90      		pop __tmp_reg__
 942 0538 0F90      		pop __tmp_reg__
 943 053a 0F90      		pop __tmp_reg__
 944 053c DF91      		pop r29
 945 053e CF91      		pop r28
 946 0540 0895      		ret
 947               		.cfi_endproc
 948               	.LFE70:
 951               	nwkRxRejectDuplicate:
 952               	.LFB71:
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxRejectDuplicate(NwkFrameHeader_t *header)
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 953               		.loc 2 281 0
 954               		.cfi_startproc
 955 0542 CF93      		push r28
 956               	.LCFI24:
 957               		.cfi_def_cfa_offset 3
 958               		.cfi_offset 28, -2
 959 0544 DF93      		push r29
 960               	.LCFI25:
 961               		.cfi_def_cfa_offset 4
 962               		.cfi_offset 29, -3
 963 0546 CDB7      		in r28,__SP_L__
 964 0548 DEB7      		in r29,__SP_H__
 965               	.LCFI26:
 966               		.cfi_def_cfa_register 28
 967 054a 2997      		sbiw r28,9
 968               	.LCFI27:
 969               		.cfi_def_cfa_offset 13
 970 054c 0FB6      		in __tmp_reg__,__SREG__
 971 054e F894      		cli
 972 0550 DEBF      		out __SP_H__,r29
 973 0552 0FBE      		out __SREG__,__tmp_reg__
 974 0554 CDBF      		out __SP_L__,r28
 975               	/* prologue: function */
 976               	/* frame size = 9 */
 977               	/* stack size = 11 */
 978               	.L__stack_usage = 11
 979 0556 9987      		std Y+9,r25
 980 0558 8887      		std Y+8,r24
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *entry;
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *freeEntry = NULL;
 981               		.loc 2 283 0
 982 055a 1A82      		std Y+2,__zero_reg__
 983 055c 1982      		std Y+1,__zero_reg__
 984               	.LBB4:
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 985               		.loc 2 285 0
 986 055e 1B82      		std Y+3,__zero_reg__
 987 0560 00C0      		rjmp .L46
 988               	.L52:
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 989               		.loc 2 286 0
 990 0562 8B81      		ldd r24,Y+3
 991 0564 282F      		mov r18,r24
 992 0566 30E0      		ldi r19,0
 993 0568 C901      		movw r24,r18
 994 056a 880F      		lsl r24
 995 056c 991F      		rol r25
 996 056e 880F      		lsl r24
 997 0570 991F      		rol r25
 998 0572 820F      		add r24,r18
 999 0574 931F      		adc r25,r19
 1000 0576 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable))
 1001 0578 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable))
 1002 057a 9D83      		std Y+5,r25
 1003 057c 8C83      		std Y+4,r24
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (entry->ttl && header->nwkSrcAddr == entry->src) {
 1004               		.loc 2 288 0
 1005 057e 8C81      		ldd r24,Y+4
 1006 0580 9D81      		ldd r25,Y+5
 1007 0582 FC01      		movw r30,r24
 1008 0584 8481      		ldd r24,Z+4
 1009 0586 8823      		tst r24
 1010 0588 01F4      		brne .+2
 1011 058a 00C0      		rjmp .L47
 1012               		.loc 2 288 0 is_stmt 0 discriminator 1
 1013 058c 8885      		ldd r24,Y+8
 1014 058e 9985      		ldd r25,Y+9
 1015 0590 FC01      		movw r30,r24
 1016 0592 2385      		ldd r18,Z+11
 1017 0594 3485      		ldd r19,Z+12
 1018 0596 8C81      		ldd r24,Y+4
 1019 0598 9D81      		ldd r25,Y+5
 1020 059a FC01      		movw r30,r24
 1021 059c 8081      		ld r24,Z
 1022 059e 9181      		ldd r25,Z+1
 1023 05a0 2817      		cp r18,r24
 1024 05a2 3907      		cpc r19,r25
 1025 05a4 01F0      		breq .+2
 1026 05a6 00C0      		rjmp .L47
 1027               	.LBB5:
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			uint8_t diff = (int8_t)entry->seq - header->nwkSeq;
 1028               		.loc 2 289 0 is_stmt 1
 1029 05a8 8C81      		ldd r24,Y+4
 1030 05aa 9D81      		ldd r25,Y+5
 1031 05ac FC01      		movw r30,r24
 1032 05ae 2281      		ldd r18,Z+2
 1033 05b0 8885      		ldd r24,Y+8
 1034 05b2 9985      		ldd r25,Y+9
 1035 05b4 FC01      		movw r30,r24
 1036 05b6 8285      		ldd r24,Z+10
 1037 05b8 F22F      		mov r31,r18
 1038 05ba F81B      		sub r31,r24
 1039 05bc 8F2F      		mov r24,r31
 1040 05be 8E83      		std Y+6,r24
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (diff < 8) {
 1041               		.loc 2 291 0
 1042 05c0 8E81      		ldd r24,Y+6
 1043 05c2 8830      		cpi r24,lo8(8)
 1044 05c4 00F4      		brsh .L48
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				if (entry->mask & (1 << diff)) {
 1045               		.loc 2 292 0
 1046 05c6 8C81      		ldd r24,Y+4
 1047 05c8 9D81      		ldd r25,Y+5
 1048 05ca FC01      		movw r30,r24
 1049 05cc 8381      		ldd r24,Z+3
 1050 05ce 882F      		mov r24,r24
 1051 05d0 90E0      		ldi r25,0
 1052 05d2 2E81      		ldd r18,Y+6
 1053 05d4 222F      		mov r18,r18
 1054 05d6 30E0      		ldi r19,0
 1055 05d8 00C0      		rjmp 2f
 1056               		1:
 1057 05da 9595      		asr r25
 1058 05dc 8795      		ror r24
 1059               		2:
 1060 05de 2A95      		dec r18
 1061 05e0 02F4      		brpl 1b
 1062 05e2 8170      		andi r24,1
 1063 05e4 9927      		clr r25
 1064 05e6 892B      		or r24,r25
 1065 05e8 01F0      		breq .L49
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#ifdef NWK_ENABLE_ROUTING
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					if (nwkIb.addr == header->macDstAddr) {
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 						nwkRouteRemove(
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkDstAddr,
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkFcf.multicast);
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					}
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#endif
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					return true;
 1066               		.loc 2 301 0
 1067 05ea 81E0      		ldi r24,lo8(1)
 1068 05ec 00C0      		rjmp .L50
 1069               	.L49:
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				}
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask |= (1 << diff);
 1070               		.loc 2 304 0
 1071 05ee 8C81      		ldd r24,Y+4
 1072 05f0 9D81      		ldd r25,Y+5
 1073 05f2 FC01      		movw r30,r24
 1074 05f4 8381      		ldd r24,Z+3
 1075 05f6 482F      		mov r20,r24
 1076 05f8 8E81      		ldd r24,Y+6
 1077 05fa 282F      		mov r18,r24
 1078 05fc 30E0      		ldi r19,0
 1079 05fe 81E0      		ldi r24,lo8(1)
 1080 0600 90E0      		ldi r25,0
 1081 0602 00C0      		rjmp 2f
 1082               		1:
 1083 0604 880F      		lsl r24
 1084 0606 991F      		rol r25
 1085               		2:
 1086 0608 2A95      		dec r18
 1087 060a 02F4      		brpl 1b
 1088 060c 842B      		or r24,r20
 1089 060e 282F      		mov r18,r24
 1090 0610 8C81      		ldd r24,Y+4
 1091 0612 9D81      		ldd r25,Y+5
 1092 0614 FC01      		movw r30,r24
 1093 0616 2383      		std Z+3,r18
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1094               		.loc 2 305 0
 1095 0618 80E0      		ldi r24,0
 1096 061a 00C0      		rjmp .L50
 1097               	.L48:
 1098               	.LBB6:
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				uint8_t shift = -(int8_t)diff;
 1099               		.loc 2 307 0
 1100 061c 8E81      		ldd r24,Y+6
 1101 061e 8195      		neg r24
 1102 0620 8F83      		std Y+7,r24
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->seq = header->nwkSeq;
 1103               		.loc 2 309 0
 1104 0622 8885      		ldd r24,Y+8
 1105 0624 9985      		ldd r25,Y+9
 1106 0626 FC01      		movw r30,r24
 1107 0628 2285      		ldd r18,Z+10
 1108 062a 8C81      		ldd r24,Y+4
 1109 062c 9D81      		ldd r25,Y+5
 1110 062e FC01      		movw r30,r24
 1111 0630 2283      		std Z+2,r18
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask = (entry->mask << shift) | 1;
 1112               		.loc 2 310 0
 1113 0632 8C81      		ldd r24,Y+4
 1114 0634 9D81      		ldd r25,Y+5
 1115 0636 FC01      		movw r30,r24
 1116 0638 8381      		ldd r24,Z+3
 1117 063a 882F      		mov r24,r24
 1118 063c 90E0      		ldi r25,0
 1119 063e 2F81      		ldd r18,Y+7
 1120 0640 222F      		mov r18,r18
 1121 0642 30E0      		ldi r19,0
 1122 0644 00C0      		rjmp 2f
 1123               		1:
 1124 0646 880F      		lsl r24
 1125 0648 991F      		rol r25
 1126               		2:
 1127 064a 2A95      		dec r18
 1128 064c 02F4      		brpl 1b
 1129 064e 8160      		ori r24,lo8(1)
 1130 0650 282F      		mov r18,r24
 1131 0652 8C81      		ldd r24,Y+4
 1132 0654 9D81      		ldd r25,Y+5
 1133 0656 FC01      		movw r30,r24
 1134 0658 2383      		std Z+3,r18
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->ttl = DUPLICATE_REJECTION_TTL;
 1135               		.loc 2 311 0
 1136 065a 8C81      		ldd r24,Y+4
 1137 065c 9D81      		ldd r25,Y+5
 1138 065e 25E1      		ldi r18,lo8(21)
 1139 0660 FC01      		movw r30,r24
 1140 0662 2483      		std Z+4,r18
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1141               		.loc 2 312 0
 1142 0664 80E0      		ldi r24,0
 1143 0666 00C0      		rjmp .L50
 1144               	.L47:
 1145               	.LBE6:
 1146               	.LBE5:
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (0 == entry->ttl) {
 1147               		.loc 2 316 0
 1148 0668 8C81      		ldd r24,Y+4
 1149 066a 9D81      		ldd r25,Y+5
 1150 066c FC01      		movw r30,r24
 1151 066e 8481      		ldd r24,Z+4
 1152 0670 8823      		tst r24
 1153 0672 01F4      		brne .L51
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			freeEntry = entry;
 1154               		.loc 2 317 0
 1155 0674 8C81      		ldd r24,Y+4
 1156 0676 9D81      		ldd r25,Y+5
 1157 0678 9A83      		std Y+2,r25
 1158 067a 8983      		std Y+1,r24
 1159               	.L51:
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1160               		.loc 2 285 0 discriminator 2
 1161 067c 8B81      		ldd r24,Y+3
 1162 067e 8F5F      		subi r24,lo8(-(1))
 1163 0680 8B83      		std Y+3,r24
 1164               	.L46:
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1165               		.loc 2 285 0 is_stmt 0 discriminator 1
 1166 0682 8B81      		ldd r24,Y+3
 1167 0684 8233      		cpi r24,lo8(50)
 1168 0686 00F4      		brsh .+2
 1169 0688 00C0      		rjmp .L52
 1170               	.LBE4:
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == freeEntry) {
 1171               		.loc 2 321 0 is_stmt 1
 1172 068a 8981      		ldd r24,Y+1
 1173 068c 9A81      		ldd r25,Y+2
 1174 068e 892B      		or r24,r25
 1175 0690 01F4      		brne .L53
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return true;
 1176               		.loc 2 322 0
 1177 0692 81E0      		ldi r24,lo8(1)
 1178 0694 00C0      		rjmp .L50
 1179               	.L53:
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->src = header->nwkSrcAddr;
 1180               		.loc 2 325 0
 1181 0696 8885      		ldd r24,Y+8
 1182 0698 9985      		ldd r25,Y+9
 1183 069a FC01      		movw r30,r24
 1184 069c 2385      		ldd r18,Z+11
 1185 069e 3485      		ldd r19,Z+12
 1186 06a0 8981      		ldd r24,Y+1
 1187 06a2 9A81      		ldd r25,Y+2
 1188 06a4 FC01      		movw r30,r24
 1189 06a6 3183      		std Z+1,r19
 1190 06a8 2083      		st Z,r18
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->seq = header->nwkSeq;
 1191               		.loc 2 326 0
 1192 06aa 8885      		ldd r24,Y+8
 1193 06ac 9985      		ldd r25,Y+9
 1194 06ae FC01      		movw r30,r24
 1195 06b0 2285      		ldd r18,Z+10
 1196 06b2 8981      		ldd r24,Y+1
 1197 06b4 9A81      		ldd r25,Y+2
 1198 06b6 FC01      		movw r30,r24
 1199 06b8 2283      		std Z+2,r18
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->mask = 1;
 1200               		.loc 2 327 0
 1201 06ba 8981      		ldd r24,Y+1
 1202 06bc 9A81      		ldd r25,Y+2
 1203 06be 21E0      		ldi r18,lo8(1)
 1204 06c0 FC01      		movw r30,r24
 1205 06c2 2383      		std Z+3,r18
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->ttl = DUPLICATE_REJECTION_TTL;
 1206               		.loc 2 328 0
 1207 06c4 8981      		ldd r24,Y+1
 1208 06c6 9A81      		ldd r25,Y+2
 1209 06c8 25E1      		ldi r18,lo8(21)
 1210 06ca FC01      		movw r30,r24
 1211 06cc 2483      		std Z+4,r18
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 1212               		.loc 2 330 0
 1213 06ce 80E0      		ldi r24,lo8(nwkRxDuplicateRejectionTimer)
 1214 06d0 90E0      		ldi r25,hi8(nwkRxDuplicateRejectionTimer)
 1215 06d2 0E94 0000 		call SYS_TimerStart
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1216               		.loc 2 332 0
 1217 06d6 80E0      		ldi r24,0
 1218               	.L50:
 1219               	/* epilogue start */
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1220               		.loc 2 333 0
 1221 06d8 2996      		adiw r28,9
 1222 06da 0FB6      		in __tmp_reg__,__SREG__
 1223 06dc F894      		cli
 1224 06de DEBF      		out __SP_H__,r29
 1225 06e0 0FBE      		out __SREG__,__tmp_reg__
 1226 06e2 CDBF      		out __SP_L__,r28
 1227 06e4 DF91      		pop r29
 1228 06e6 CF91      		pop r28
 1229 06e8 0895      		ret
 1230               		.cfi_endproc
 1231               	.LFE71:
 1234               	nwkRxSeriveDataInd:
 1235               	.LFB72:
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind)
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1236               		.loc 2 338 0
 1237               		.cfi_startproc
 1238 06ea CF93      		push r28
 1239               	.LCFI28:
 1240               		.cfi_def_cfa_offset 3
 1241               		.cfi_offset 28, -2
 1242 06ec DF93      		push r29
 1243               	.LCFI29:
 1244               		.cfi_def_cfa_offset 4
 1245               		.cfi_offset 29, -3
 1246 06ee 00D0      		rcall .
 1247               	.LCFI30:
 1248               		.cfi_def_cfa_offset 6
 1249 06f0 CDB7      		in r28,__SP_L__
 1250 06f2 DEB7      		in r29,__SP_H__
 1251               	.LCFI31:
 1252               		.cfi_def_cfa_register 28
 1253               	/* prologue: function */
 1254               	/* frame size = 2 */
 1255               	/* stack size = 4 */
 1256               	.L__stack_usage = 4
 1257 06f4 9A83      		std Y+2,r25
 1258 06f6 8983      		std Y+1,r24
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == (ind->options & NWK_IND_OPT_SECURED)) {
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ind->size < 1) {
 1259               		.loc 2 346 0
 1260 06f8 8981      		ldd r24,Y+1
 1261 06fa 9A81      		ldd r25,Y+2
 1262 06fc FC01      		movw r30,r24
 1263 06fe 8285      		ldd r24,Z+10
 1264 0700 8823      		tst r24
 1265 0702 01F4      		brne .L55
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1266               		.loc 2 347 0
 1267 0704 80E0      		ldi r24,0
 1268 0706 00C0      		rjmp .L56
 1269               	.L55:
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	switch (ind->data[0]) {
 1270               		.loc 2 350 0
 1271 0708 8981      		ldd r24,Y+1
 1272 070a 9A81      		ldd r25,Y+2
 1273 070c FC01      		movw r30,r24
 1274 070e 8085      		ldd r24,Z+8
 1275 0710 9185      		ldd r25,Z+9
 1276 0712 FC01      		movw r30,r24
 1277 0714 8081      		ld r24,Z
 1278 0716 882F      		mov r24,r24
 1279 0718 90E0      		ldi r25,0
 1280 071a 892B      		or r24,r25
 1281 071c 01F4      		brne .L59
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ACK:
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkTxAckReceived(ind);
 1282               		.loc 2 352 0
 1283 071e 8981      		ldd r24,Y+1
 1284 0720 9A81      		ldd r25,Y+2
 1285 0722 0E94 0000 		call nwkTxAckReceived
 1286 0726 00C0      		rjmp .L56
 1287               	.L59:
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_ERROR:
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteErrorReceived(ind);
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTE_DISCOVERY
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REQUEST:
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryRequestReceived(ind);
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REPLY:
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryReplyReceived(ind);
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	default:
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1288               		.loc 2 370 0
 1289 0728 80E0      		ldi r24,0
 1290               	.L56:
 1291               	/* epilogue start */
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1292               		.loc 2 372 0
 1293 072a 0F90      		pop __tmp_reg__
 1294 072c 0F90      		pop __tmp_reg__
 1295 072e DF91      		pop r29
 1296 0730 CF91      		pop r28
 1297 0732 0895      		ret
 1298               		.cfi_endproc
 1299               	.LFE72:
 1302               	nwkRxHandleReceivedFrame:
 1303               	.LFB73:
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleReceivedFrame(NwkFrame_t *frame)
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1304               		.loc 2 377 0
 1305               		.cfi_startproc
 1306 0734 CF93      		push r28
 1307               	.LCFI32:
 1308               		.cfi_def_cfa_offset 3
 1309               		.cfi_offset 28, -2
 1310 0736 DF93      		push r29
 1311               	.LCFI33:
 1312               		.cfi_def_cfa_offset 4
 1313               		.cfi_offset 29, -3
 1314 0738 CDB7      		in r28,__SP_L__
 1315 073a DEB7      		in r29,__SP_H__
 1316               	.LCFI34:
 1317               		.cfi_def_cfa_register 28
 1318 073c 2897      		sbiw r28,8
 1319               	.LCFI35:
 1320               		.cfi_def_cfa_offset 12
 1321 073e 0FB6      		in __tmp_reg__,__SREG__
 1322 0740 F894      		cli
 1323 0742 DEBF      		out __SP_H__,r29
 1324 0744 0FBE      		out __SREG__,__tmp_reg__
 1325 0746 CDBF      		out __SP_L__,r28
 1326               	/* prologue: function */
 1327               	/* frame size = 8 */
 1328               	/* stack size = 10 */
 1329               	.L__stack_usage = 10
 1330 0748 9887      		std Y+8,r25
 1331 074a 8F83      		std Y+7,r24
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1332               		.loc 2 378 0
 1333 074c 8F81      		ldd r24,Y+7
 1334 074e 9885      		ldd r25,Y+8
 1335 0750 0296      		adiw r24,2
 1336 0752 9B83      		std Y+3,r25
 1337 0754 8A83      		std Y+2,r24
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1338               		.loc 2 380 0
 1339 0756 8F81      		ldd r24,Y+7
 1340 0758 9885      		ldd r25,Y+8
 1341 075a 24E2      		ldi r18,lo8(36)
 1342 075c FC01      		movw r30,r24
 1343 075e 2083      		st Z,r18
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifndef NWK_ENABLE_SECURITY
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.security) {
 1344               		.loc 2 383 0
 1345 0760 8A81      		ldd r24,Y+2
 1346 0762 9B81      		ldd r25,Y+3
 1347 0764 FC01      		movw r30,r24
 1348 0766 8185      		ldd r24,Z+9
 1349 0768 8270      		andi r24,lo8(2)
 1350 076a 8823      		tst r24
 1351 076c 01F0      		breq .+2
 1352 076e 00C0      		rjmp .L81
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast && header->nwkFcf.ackRequest) {
 1353               		.loc 2 390 0
 1354 0770 8A81      		ldd r24,Y+2
 1355 0772 9B81      		ldd r25,Y+3
 1356 0774 FC01      		movw r30,r24
 1357 0776 8185      		ldd r24,Z+9
 1358 0778 8870      		andi r24,lo8(8)
 1359 077a 8823      		tst r24
 1360 077c 01F0      		breq .L63
 1361               		.loc 2 390 0 is_stmt 0 discriminator 1
 1362 077e 8A81      		ldd r24,Y+2
 1363 0780 9B81      		ldd r25,Y+3
 1364 0782 FC01      		movw r30,r24
 1365 0784 8185      		ldd r24,Z+9
 1366 0786 8170      		andi r24,lo8(1)
 1367 0788 8823      		tst r24
 1368 078a 01F0      		breq .+2
 1369 078c 00C0      		rjmp .L82
 1370               	.L63:
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #else
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == header->macDstPanId)
 1371               		.loc 2 401 0 is_stmt 1
 1372 078e 8A81      		ldd r24,Y+2
 1373 0790 9B81      		ldd r25,Y+3
 1374 0792 FC01      		movw r30,r24
 1375 0794 8381      		ldd r24,Z+3
 1376 0796 9481      		ldd r25,Z+4
 1377 0798 0196      		adiw r24,1
 1378 079a 01F4      		brne .L64
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR == header->nwkDstAddr)
 1379               		.loc 2 403 0
 1380 079c 2091 0000 		lds r18,nwkIb
 1381 07a0 3091 0000 		lds r19,nwkIb+1
 1382 07a4 8A81      		ldd r24,Y+2
 1383 07a6 9B81      		ldd r25,Y+3
 1384 07a8 FC01      		movw r30,r24
 1385 07aa 8585      		ldd r24,Z+13
 1386 07ac 9685      		ldd r25,Z+14
 1387 07ae 2817      		cp r18,r24
 1388 07b0 3907      		cpc r19,r25
 1389 07b2 01F0      		breq .L65
 1390               		.loc 2 403 0 is_stmt 0 discriminator 1
 1391 07b4 8A81      		ldd r24,Y+2
 1392 07b6 9B81      		ldd r25,Y+3
 1393 07b8 FC01      		movw r30,r24
 1394 07ba 8585      		ldd r24,Z+13
 1395 07bc 9685      		ldd r25,Z+14
 1396 07be 0196      		adiw r24,1
 1397 07c0 01F0      		breq .+2
 1398 07c2 00C0      		rjmp .L83
 1399               	.L65:
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security)
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			{
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1400               		.loc 2 412 0 is_stmt 1
 1401 07c4 8F81      		ldd r24,Y+7
 1402 07c6 9885      		ldd r25,Y+8
 1403 07c8 22E2      		ldi r18,lo8(34)
 1404 07ca FC01      		movw r30,r24
 1405 07cc 2083      		st Z,r18
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 1406               		.loc 2 415 0
 1407 07ce 00C0      		rjmp .L83
 1408               	.L64:
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ADDRESS_FILTER
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (!NWK_FilterAddress(header->macSrcAddr, &frame->rx.lqi)) {
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == header->nwkDstAddr && header->nwkFcf.ackRequest)
 1409               		.loc 2 425 0
 1410 07d0 8A81      		ldd r24,Y+2
 1411 07d2 9B81      		ldd r25,Y+3
 1412 07d4 FC01      		movw r30,r24
 1413 07d6 8585      		ldd r24,Z+13
 1414 07d8 9685      		ldd r25,Z+14
 1415 07da 0196      		adiw r24,1
 1416 07dc 01F4      		brne .L67
 1417               		.loc 2 425 0 is_stmt 0 discriminator 1
 1418 07de 8A81      		ldd r24,Y+2
 1419 07e0 9B81      		ldd r25,Y+3
 1420 07e2 FC01      		movw r30,r24
 1421 07e4 8185      		ldd r24,Z+9
 1422 07e6 8170      		andi r24,lo8(1)
 1423 07e8 8823      		tst r24
 1424 07ea 01F0      		breq .+2
 1425 07ec 00C0      		rjmp .L84
 1426               	.L67:
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkIb.addr == header->nwkSrcAddr)
 1427               		.loc 2 430 0 is_stmt 1
 1428 07ee 2091 0000 		lds r18,nwkIb
 1429 07f2 3091 0000 		lds r19,nwkIb+1
 1430 07f6 8A81      		ldd r24,Y+2
 1431 07f8 9B81      		ldd r25,Y+3
 1432 07fa FC01      		movw r30,r24
 1433 07fc 8385      		ldd r24,Z+11
 1434 07fe 9485      		ldd r25,Z+12
 1435 0800 2817      		cp r18,r24
 1436 0802 3907      		cpc r19,r25
 1437 0804 01F4      		brne .+2
 1438 0806 00C0      		rjmp .L85
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRouteFrameReceived(frame);
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkRxRejectDuplicate(header))
 1439               		.loc 2 439 0
 1440 0808 8A81      		ldd r24,Y+2
 1441 080a 9B81      		ldd r25,Y+3
 1442 080c 0E94 0000 		call nwkRxRejectDuplicate
 1443 0810 8823      		tst r24
 1444 0812 01F0      		breq .+2
 1445 0814 00C0      		rjmp .L86
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 445:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 1446               		.loc 2 445 0
 1447 0816 8A81      		ldd r24,Y+2
 1448 0818 9B81      		ldd r25,Y+3
 1449 081a FC01      		movw r30,r24
 1450 081c 8185      		ldd r24,Z+9
 1451 081e 8870      		andi r24,lo8(8)
 1452 0820 8823      		tst r24
 1453 0822 01F4      		brne .+2
 1454 0824 00C0      		rjmp .L70
 1455               	.LBB7:
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameMulticastHeader_t *mcHeader
 1456               		.loc 2 446 0
 1457 0826 8F81      		ldd r24,Y+7
 1458 0828 9885      		ldd r25,Y+8
 1459 082a 8F57      		subi r24,127
 1460 082c 9F4F      		sbci r25,-1
 1461 082e FC01      		movw r30,r24
 1462 0830 8081      		ld r24,Z
 1463 0832 9181      		ldd r25,Z+1
 1464 0834 9D83      		std Y+5,r25
 1465 0836 8C83      		std Y+4,r24
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			= (NwkFrameMulticastHeader_t *)frame->payload;
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool member = NWK_GroupIsMember(header->nwkDstAddr);
 1466               		.loc 2 448 0
 1467 0838 8A81      		ldd r24,Y+2
 1468 083a 9B81      		ldd r25,Y+3
 1469 083c FC01      		movw r30,r24
 1470 083e 8585      		ldd r24,Z+13
 1471 0840 9685      		ldd r25,Z+14
 1472 0842 0E94 0000 		call NWK_GroupIsMember
 1473 0846 8E83      		std Y+6,r24
 449:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool broadcast = false;
 1474               		.loc 2 449 0
 1475 0848 1982      		std Y+1,__zero_reg__
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 451:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 1476               		.loc 2 451 0
 1477 084a 8A81      		ldd r24,Y+2
 1478 084c 9B81      		ldd r25,Y+3
 1479 084e FC01      		movw r30,r24
 1480 0850 8581      		ldd r24,Z+5
 1481 0852 9681      		ldd r25,Z+6
 1482 0854 0196      		adiw r24,1
 1483 0856 01F0      		breq .+2
 1484 0858 00C0      		rjmp .L71
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1485               		.loc 2 452 0
 1486 085a 8E81      		ldd r24,Y+6
 1487 085c 8823      		tst r24
 1488 085e 01F0      		breq .L72
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->memberRadius > 0;
 1489               		.loc 2 453 0
 1490 0860 8C81      		ldd r24,Y+4
 1491 0862 9D81      		ldd r25,Y+5
 1492 0864 FC01      		movw r30,r24
 1493 0866 8181      		ldd r24,Z+1
 1494 0868 8F70      		andi r24,lo8(15)
 1495 086a 882F      		mov r24,r24
 1496 086c 90E0      		ldi r25,0
 1497 086e 21E0      		ldi r18,lo8(1)
 1498 0870 1816      		cp __zero_reg__,r24
 1499 0872 1906      		cpc __zero_reg__,r25
 1500 0874 04F0      		brlt .L73
 1501 0876 20E0      		ldi r18,0
 1502               	.L73:
 1503 0878 2983      		std Y+1,r18
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius--;
 1504               		.loc 2 454 0
 1505 087a 8C81      		ldd r24,Y+4
 1506 087c 9D81      		ldd r25,Y+5
 1507 087e FC01      		movw r30,r24
 1508 0880 8181      		ldd r24,Z+1
 1509 0882 8F70      		andi r24,lo8(15)
 1510 0884 2FE0      		ldi r18,lo8(15)
 1511 0886 280F      		add r18,r24
 1512 0888 2F70      		andi r18,lo8(15)
 1513 088a 8C81      		ldd r24,Y+4
 1514 088c 9D81      		ldd r25,Y+5
 1515 088e 2F70      		andi r18,lo8(15)
 1516 0890 FC01      		movw r30,r24
 1517 0892 3181      		ldd r19,Z+1
 1518 0894 307F      		andi r19,lo8(-16)
 1519 0896 232B      		or r18,r19
 1520 0898 FC01      		movw r30,r24
 1521 089a 2183      		std Z+1,r18
 455:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius
 456:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxNonMemberRadius;
 1522               		.loc 2 456 0
 1523 089c 8C81      		ldd r24,Y+4
 1524 089e 9D81      		ldd r25,Y+5
 1525 08a0 FC01      		movw r30,r24
 1526 08a2 8081      		ld r24,Z
 1527 08a4 282F      		mov r18,r24
 1528 08a6 2295      		swap r18
 1529 08a8 2F70      		andi r18,lo8(15)
 1530 08aa 8C81      		ldd r24,Y+4
 1531 08ac 9D81      		ldd r25,Y+5
 1532 08ae 2F70      		andi r18,lo8(15)
 1533 08b0 FC01      		movw r30,r24
 1534 08b2 3081      		ld r19,Z
 1535 08b4 307F      		andi r19,lo8(-16)
 1536 08b6 232B      		or r18,r19
 1537 08b8 FC01      		movw r30,r24
 1538 08ba 2083      		st Z,r18
 1539 08bc 00C0      		rjmp .L76
 1540               	.L72:
 457:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 458:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->nonMemberRadius > 0;
 1541               		.loc 2 458 0
 1542 08be 8C81      		ldd r24,Y+4
 1543 08c0 9D81      		ldd r25,Y+5
 1544 08c2 FC01      		movw r30,r24
 1545 08c4 8081      		ld r24,Z
 1546 08c6 8F70      		andi r24,lo8(15)
 1547 08c8 882F      		mov r24,r24
 1548 08ca 90E0      		ldi r25,0
 1549 08cc 21E0      		ldi r18,lo8(1)
 1550 08ce 1816      		cp __zero_reg__,r24
 1551 08d0 1906      		cpc __zero_reg__,r25
 1552 08d2 04F0      		brlt .L75
 1553 08d4 20E0      		ldi r18,0
 1554               	.L75:
 1555 08d6 2983      		std Y+1,r18
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius--;
 1556               		.loc 2 459 0
 1557 08d8 8C81      		ldd r24,Y+4
 1558 08da 9D81      		ldd r25,Y+5
 1559 08dc FC01      		movw r30,r24
 1560 08de 8081      		ld r24,Z
 1561 08e0 8F70      		andi r24,lo8(15)
 1562 08e2 2FE0      		ldi r18,lo8(15)
 1563 08e4 280F      		add r18,r24
 1564 08e6 2F70      		andi r18,lo8(15)
 1565 08e8 8C81      		ldd r24,Y+4
 1566 08ea 9D81      		ldd r25,Y+5
 1567 08ec 2F70      		andi r18,lo8(15)
 1568 08ee FC01      		movw r30,r24
 1569 08f0 3081      		ld r19,Z
 1570 08f2 307F      		andi r19,lo8(-16)
 1571 08f4 232B      		or r18,r19
 1572 08f6 FC01      		movw r30,r24
 1573 08f8 2083      		st Z,r18
 460:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius
 461:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxMemberRadius;
 1574               		.loc 2 461 0
 1575 08fa 8C81      		ldd r24,Y+4
 1576 08fc 9D81      		ldd r25,Y+5
 1577 08fe FC01      		movw r30,r24
 1578 0900 8181      		ldd r24,Z+1
 1579 0902 282F      		mov r18,r24
 1580 0904 2295      		swap r18
 1581 0906 2F70      		andi r18,lo8(15)
 1582 0908 8C81      		ldd r24,Y+4
 1583 090a 9D81      		ldd r25,Y+5
 1584 090c 2F70      		andi r18,lo8(15)
 1585 090e FC01      		movw r30,r24
 1586 0910 3181      		ldd r19,Z+1
 1587 0912 307F      		andi r19,lo8(-16)
 1588 0914 232B      		or r18,r19
 1589 0916 FC01      		movw r30,r24
 1590 0918 2183      		std Z+1,r18
 1591 091a 00C0      		rjmp .L76
 1592               	.L71:
 462:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 463:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		} else {
 464:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1593               		.loc 2 464 0
 1594 091c 8E81      		ldd r24,Y+6
 1595 091e 8823      		tst r24
 1596 0920 01F0      		breq .L76
 465:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = true;
 1597               		.loc 2 465 0
 1598 0922 81E0      		ldi r24,lo8(1)
 1599 0924 8983      		std Y+1,r24
 466:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkFcf.linkLocal = 1;
 1600               		.loc 2 466 0
 1601 0926 8A81      		ldd r24,Y+2
 1602 0928 9B81      		ldd r25,Y+3
 1603 092a FC01      		movw r30,r24
 1604 092c 2185      		ldd r18,Z+9
 1605 092e 2460      		ori r18,lo8(4)
 1606 0930 FC01      		movw r30,r24
 1607 0932 2187      		std Z+9,r18
 1608               	.L76:
 467:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 468:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 469:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_ROUTING
 470:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else {
 471:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_ROUTE;
 472:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 473:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 474:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 475:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 476:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (broadcast) {
 1609               		.loc 2 476 0
 1610 0934 8981      		ldd r24,Y+1
 1611 0936 8823      		tst r24
 1612 0938 01F0      		breq .L77
 477:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1613               		.loc 2 477 0
 1614 093a 8F81      		ldd r24,Y+7
 1615 093c 9885      		ldd r25,Y+8
 1616 093e 0E94 0000 		call nwkTxBroadcastFrame
 1617               	.L77:
 478:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 479:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 480:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (member) {
 1618               		.loc 2 480 0
 1619 0942 8E81      		ldd r24,Y+6
 1620 0944 8823      		tst r24
 1621 0946 01F4      		brne .+2
 1622 0948 00C0      		rjmp .L60
 481:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 1623               		.loc 2 481 0
 1624 094a 8F81      		ldd r24,Y+7
 1625 094c 9885      		ldd r25,Y+8
 1626 094e 8F57      		subi r24,127
 1627 0950 9F4F      		sbci r25,-1
 1628 0952 FC01      		movw r30,r24
 1629 0954 8081      		ld r24,Z
 1630 0956 9181      		ldd r25,Z+1
 1631 0958 9C01      		movw r18,r24
 1632 095a 2E5F      		subi r18,-2
 1633 095c 3F4F      		sbci r19,-1
 1634 095e 8F81      		ldd r24,Y+7
 1635 0960 9885      		ldd r25,Y+8
 1636 0962 8F57      		subi r24,127
 1637 0964 9F4F      		sbci r25,-1
 1638 0966 FC01      		movw r30,r24
 1639 0968 3183      		std Z+1,r19
 1640 096a 2083      		st Z,r18
 482:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 485:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 486:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 487:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1641               		.loc 2 488 0
 1642 096c 8F81      		ldd r24,Y+7
 1643 096e 9885      		ldd r25,Y+8
 1644 0970 22E2      		ldi r18,lo8(34)
 1645 0972 FC01      		movw r30,r24
 1646 0974 2083      		st Z,r18
 1647 0976 00C0      		rjmp .L60
 1648               	.L70:
 1649               	.LBE7:
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 490:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else
 491:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif /* NWK_ENABLE_MULTICAST */
 492:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr && nwkIb.addr !=
 1650               		.loc 2 493 0
 1651 0978 8A81      		ldd r24,Y+2
 1652 097a 9B81      		ldd r25,Y+3
 1653 097c FC01      		movw r30,r24
 1654 097e 8581      		ldd r24,Z+5
 1655 0980 9681      		ldd r25,Z+6
 1656 0982 0196      		adiw r24,1
 1657 0984 01F4      		brne .L79
 1658               		.loc 2 493 0 is_stmt 0 discriminator 1
 1659 0986 2091 0000 		lds r18,nwkIb
 1660 098a 3091 0000 		lds r19,nwkIb+1
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1661               		.loc 2 494 0 is_stmt 1 discriminator 1
 1662 098e 8A81      		ldd r24,Y+2
 1663 0990 9B81      		ldd r25,Y+3
 1664 0992 FC01      		movw r30,r24
 1665 0994 8585      		ldd r24,Z+13
 1666 0996 9685      		ldd r25,Z+14
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1667               		.loc 2 493 0 discriminator 1
 1668 0998 2817      		cp r18,r24
 1669 099a 3907      		cpc r19,r25
 1670 099c 01F0      		breq .L79
 495:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				0 == header->nwkFcf.linkLocal) {
 1671               		.loc 2 495 0
 1672 099e 8A81      		ldd r24,Y+2
 1673 09a0 9B81      		ldd r25,Y+3
 1674 09a2 FC01      		movw r30,r24
 1675 09a4 8185      		ldd r24,Z+9
 1676 09a6 8470      		andi r24,lo8(4)
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1677               		.loc 2 494 0
 1678 09a8 8823      		tst r24
 1679 09aa 01F4      		brne .L79
 496:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1680               		.loc 2 496 0
 1681 09ac 8F81      		ldd r24,Y+7
 1682 09ae 9885      		ldd r25,Y+8
 1683 09b0 0E94 0000 		call nwkTxBroadcastFrame
 1684               	.L79:
 497:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR ==
 1685               		.loc 2 499 0
 1686 09b4 2091 0000 		lds r18,nwkIb
 1687 09b8 3091 0000 		lds r19,nwkIb+1
 1688 09bc 8A81      		ldd r24,Y+2
 1689 09be 9B81      		ldd r25,Y+3
 1690 09c0 FC01      		movw r30,r24
 1691 09c2 8585      		ldd r24,Z+13
 1692 09c4 9685      		ldd r25,Z+14
 1693 09c6 2817      		cp r18,r24
 1694 09c8 3907      		cpc r19,r25
 1695 09ca 01F0      		breq .L80
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1696               		.loc 2 500 0 discriminator 1
 1697 09cc 8A81      		ldd r24,Y+2
 1698 09ce 9B81      		ldd r25,Y+3
 1699 09d0 FC01      		movw r30,r24
 1700 09d2 8585      		ldd r24,Z+13
 1701 09d4 9685      		ldd r25,Z+14
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1702               		.loc 2 499 0 discriminator 1
 1703 09d6 0196      		adiw r24,1
 1704 09d8 01F4      		brne .L60
 1705               	.L80:
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1706               		.loc 2 506 0
 1707 09da 8F81      		ldd r24,Y+7
 1708 09dc 9885      		ldd r25,Y+8
 1709 09de 22E2      		ldi r18,lo8(34)
 1710 09e0 FC01      		movw r30,r24
 1711 09e2 2083      		st Z,r18
 1712 09e4 00C0      		rjmp .L60
 1713               	.L81:
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1714               		.loc 2 384 0
 1715 09e6 0000      		nop
 1716 09e8 00C0      		rjmp .L60
 1717               	.L82:
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1718               		.loc 2 391 0
 1719 09ea 0000      		nop
 1720 09ec 00C0      		rjmp .L60
 1721               	.L83:
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1722               		.loc 2 415 0
 1723 09ee 0000      		nop
 1724 09f0 00C0      		rjmp .L60
 1725               	.L84:
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1726               		.loc 2 427 0
 1727 09f2 0000      		nop
 1728 09f4 00C0      		rjmp .L60
 1729               	.L85:
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1730               		.loc 2 432 0
 1731 09f6 0000      		nop
 1732 09f8 00C0      		rjmp .L60
 1733               	.L86:
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1734               		.loc 2 441 0
 1735 09fa 0000      		nop
 1736               	.L60:
 1737               	/* epilogue start */
 507:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 509:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #ifdef NWK_ENABLE_ROUTING
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if (nwkIb.addr == header->macDstAddr) {
 511:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_ROUTE;
 512:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 513:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #endif
 514:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 515:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1738               		.loc 2 515 0
 1739 09fc 2896      		adiw r28,8
 1740 09fe 0FB6      		in __tmp_reg__,__SREG__
 1741 0a00 F894      		cli
 1742 0a02 DEBF      		out __SP_H__,r29
 1743 0a04 0FBE      		out __SREG__,__tmp_reg__
 1744 0a06 CDBF      		out __SP_L__,r28
 1745 0a08 DF91      		pop r29
 1746 0a0a CF91      		pop r28
 1747 0a0c 0895      		ret
 1748               		.cfi_endproc
 1749               	.LFE73:
 1752               	nwkRxIndicateDataFrame:
 1753               	.LFB74:
 516:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 517:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 518:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 519:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateDataFrame(NwkFrame_t *frame)
 520:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1754               		.loc 2 520 0
 1755               		.cfi_startproc
 1756 0a0e CF93      		push r28
 1757               	.LCFI36:
 1758               		.cfi_def_cfa_offset 3
 1759               		.cfi_offset 28, -2
 1760 0a10 DF93      		push r29
 1761               	.LCFI37:
 1762               		.cfi_def_cfa_offset 4
 1763               		.cfi_offset 29, -3
 1764 0a12 CDB7      		in r28,__SP_L__
 1765 0a14 DEB7      		in r29,__SP_H__
 1766               	.LCFI38:
 1767               		.cfi_def_cfa_register 28
 1768 0a16 6197      		sbiw r28,17
 1769               	.LCFI39:
 1770               		.cfi_def_cfa_offset 21
 1771 0a18 0FB6      		in __tmp_reg__,__SREG__
 1772 0a1a F894      		cli
 1773 0a1c DEBF      		out __SP_H__,r29
 1774 0a1e 0FBE      		out __SREG__,__tmp_reg__
 1775 0a20 CDBF      		out __SP_L__,r28
 1776               	/* prologue: function */
 1777               	/* frame size = 17 */
 1778               	/* stack size = 19 */
 1779               	.L__stack_usage = 19
 1780 0a22 998B      		std Y+17,r25
 1781 0a24 888B      		std Y+16,r24
 521:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1782               		.loc 2 521 0
 1783 0a26 8889      		ldd r24,Y+16
 1784 0a28 9989      		ldd r25,Y+17
 1785 0a2a 0296      		adiw r24,2
 1786 0a2c 9A83      		std Y+2,r25
 1787 0a2e 8983      		std Y+1,r24
 522:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 523:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 524:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[header->nwkDstEndpoint]) {
 1788               		.loc 2 524 0
 1789 0a30 8981      		ldd r24,Y+1
 1790 0a32 9A81      		ldd r25,Y+2
 1791 0a34 FC01      		movw r30,r24
 1792 0a36 8785      		ldd r24,Z+15
 1793 0a38 8295      		swap r24
 1794 0a3a 8F70      		andi r24,lo8(15)
 1795 0a3c 882F      		mov r24,r24
 1796 0a3e 90E0      		ldi r25,0
 1797 0a40 0396      		adiw r24,3
 1798 0a42 880F      		lsl r24
 1799 0a44 991F      		rol r25
 1800 0a46 8050      		subi r24,lo8(-(nwkIb))
 1801 0a48 9040      		sbci r25,hi8(-(nwkIb))
 1802 0a4a FC01      		movw r30,r24
 1803 0a4c 8081      		ld r24,Z
 1804 0a4e 9181      		ldd r25,Z+1
 1805 0a50 892B      		or r24,r25
 1806 0a52 01F4      		brne .L88
 525:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1807               		.loc 2 525 0
 1808 0a54 80E0      		ldi r24,0
 1809 0a56 00C0      		rjmp .L103
 1810               	.L88:
 526:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 527:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 528:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = header->nwkSrcAddr;
 1811               		.loc 2 528 0
 1812 0a58 8981      		ldd r24,Y+1
 1813 0a5a 9A81      		ldd r25,Y+2
 1814 0a5c FC01      		movw r30,r24
 1815 0a5e 8385      		ldd r24,Z+11
 1816 0a60 9485      		ldd r25,Z+12
 1817 0a62 9C83      		std Y+4,r25
 1818 0a64 8B83      		std Y+3,r24
 529:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = header->nwkDstAddr;
 1819               		.loc 2 529 0
 1820 0a66 8981      		ldd r24,Y+1
 1821 0a68 9A81      		ldd r25,Y+2
 1822 0a6a FC01      		movw r30,r24
 1823 0a6c 8585      		ldd r24,Z+13
 1824 0a6e 9685      		ldd r25,Z+14
 1825 0a70 9E83      		std Y+6,r25
 1826 0a72 8D83      		std Y+5,r24
 530:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = header->nwkSrcEndpoint;
 1827               		.loc 2 530 0
 1828 0a74 8981      		ldd r24,Y+1
 1829 0a76 9A81      		ldd r25,Y+2
 1830 0a78 FC01      		movw r30,r24
 1831 0a7a 8785      		ldd r24,Z+15
 1832 0a7c 8F70      		andi r24,lo8(15)
 1833 0a7e 8F83      		std Y+7,r24
 531:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = header->nwkDstEndpoint;
 1834               		.loc 2 531 0
 1835 0a80 8981      		ldd r24,Y+1
 1836 0a82 9A81      		ldd r25,Y+2
 1837 0a84 FC01      		movw r30,r24
 1838 0a86 8785      		ldd r24,Z+15
 1839 0a88 8295      		swap r24
 1840 0a8a 8F70      		andi r24,lo8(15)
 1841 0a8c 8887      		std Y+8,r24
 532:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1842               		.loc 2 532 0
 1843 0a8e 8889      		ldd r24,Y+16
 1844 0a90 9989      		ldd r25,Y+17
 1845 0a92 8F57      		subi r24,127
 1846 0a94 9F4F      		sbci r25,-1
 1847 0a96 FC01      		movw r30,r24
 1848 0a98 8081      		ld r24,Z
 1849 0a9a 9181      		ldd r25,Z+1
 1850 0a9c 9C87      		std Y+12,r25
 1851 0a9e 8B87      		std Y+11,r24
 533:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1852               		.loc 2 533 0
 1853 0aa0 8889      		ldd r24,Y+16
 1854 0aa2 9989      		ldd r25,Y+17
 1855 0aa4 0E94 0000 		call nwkFramePayloadSize
 1856 0aa8 8D87      		std Y+13,r24
 534:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1857               		.loc 2 534 0
 1858 0aaa 8889      		ldd r24,Y+16
 1859 0aac 9989      		ldd r25,Y+17
 1860 0aae 8D57      		subi r24,125
 1861 0ab0 9F4F      		sbci r25,-1
 1862 0ab2 FC01      		movw r30,r24
 1863 0ab4 8081      		ld r24,Z
 1864 0ab6 8E87      		std Y+14,r24
 535:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1865               		.loc 2 535 0
 1866 0ab8 8889      		ldd r24,Y+16
 1867 0aba 9989      		ldd r25,Y+17
 1868 0abc 8C57      		subi r24,124
 1869 0abe 9F4F      		sbci r25,-1
 1870 0ac0 FC01      		movw r30,r24
 1871 0ac2 8081      		ld r24,Z
 1872 0ac4 8F87      		std Y+15,r24
 536:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 537:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK_REQUESTED : 0;
 1873               		.loc 2 537 0
 1874 0ac6 8981      		ldd r24,Y+1
 1875 0ac8 9A81      		ldd r25,Y+2
 1876 0aca FC01      		movw r30,r24
 1877 0acc 8185      		ldd r24,Z+9
 1878 0ace 982F      		mov r25,r24
 1879 0ad0 9170      		andi r25,lo8(1)
 1880 0ad2 81E0      		ldi r24,lo8(1)
 1881 0ad4 9923      		tst r25
 1882 0ad6 01F4      		brne .L90
 1883 0ad8 80E0      		ldi r24,0
 1884               	.L90:
 1885 0ada 882F      		mov r24,r24
 1886 0adc 90E0      		ldi r25,0
 1887 0ade 9A87      		std Y+10,r25
 1888 0ae0 8987      		std Y+9,r24
 538:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECURED : 0;
 1889               		.loc 2 538 0
 1890 0ae2 2985      		ldd r18,Y+9
 1891 0ae4 3A85      		ldd r19,Y+10
 1892 0ae6 8981      		ldd r24,Y+1
 1893 0ae8 9A81      		ldd r25,Y+2
 1894 0aea FC01      		movw r30,r24
 1895 0aec 8185      		ldd r24,Z+9
 1896 0aee 882F      		mov r24,r24
 1897 0af0 90E0      		ldi r25,0
 1898 0af2 8270      		andi r24,2
 1899 0af4 9927      		clr r25
 1900 0af6 822B      		or r24,r18
 1901 0af8 932B      		or r25,r19
 1902 0afa 9A87      		std Y+10,r25
 1903 0afc 8987      		std Y+9,r24
 539:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LINK_LOCAL : 0;
 1904               		.loc 2 539 0
 1905 0afe 2985      		ldd r18,Y+9
 1906 0b00 3A85      		ldd r19,Y+10
 1907 0b02 8981      		ldd r24,Y+1
 1908 0b04 9A81      		ldd r25,Y+2
 1909 0b06 FC01      		movw r30,r24
 1910 0b08 8185      		ldd r24,Z+9
 1911 0b0a 8470      		andi r24,lo8(4)
 1912 0b0c 8823      		tst r24
 1913 0b0e 01F0      		breq .L91
 1914               		.loc 2 539 0 is_stmt 0 discriminator 1
 1915 0b10 80E2      		ldi r24,lo8(32)
 1916 0b12 90E0      		ldi r25,0
 1917 0b14 00C0      		rjmp .L92
 1918               	.L91:
 1919               		.loc 2 539 0 discriminator 2
 1920 0b16 80E0      		ldi r24,0
 1921 0b18 90E0      		ldi r25,0
 1922               	.L92:
 1923               		.loc 2 539 0 discriminator 4
 1924 0b1a 822B      		or r24,r18
 1925 0b1c 932B      		or r25,r19
 1926 0b1e 9A87      		std Y+10,r25
 1927 0b20 8987      		std Y+9,r24
 540:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MULTICAST : 0;
 1928               		.loc 2 540 0 is_stmt 1 discriminator 4
 1929 0b22 2985      		ldd r18,Y+9
 1930 0b24 3A85      		ldd r19,Y+10
 1931 0b26 8981      		ldd r24,Y+1
 1932 0b28 9A81      		ldd r25,Y+2
 1933 0b2a FC01      		movw r30,r24
 1934 0b2c 8185      		ldd r24,Z+9
 1935 0b2e 8870      		andi r24,lo8(8)
 1936 0b30 8823      		tst r24
 1937 0b32 01F0      		breq .L93
 1938               		.loc 2 540 0 is_stmt 0 discriminator 1
 1939 0b34 80E4      		ldi r24,lo8(64)
 1940 0b36 90E0      		ldi r25,0
 1941 0b38 00C0      		rjmp .L94
 1942               	.L93:
 1943               		.loc 2 540 0 discriminator 2
 1944 0b3a 80E0      		ldi r24,0
 1945 0b3c 90E0      		ldi r25,0
 1946               	.L94:
 1947               		.loc 2 540 0 discriminator 4
 1948 0b3e 822B      		or r24,r18
 1949 0b40 932B      		or r25,r19
 1950 0b42 9A87      		std Y+10,r25
 1951 0b44 8987      		std Y+9,r24
 541:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.beacon) ? NWK_IND_OPT_BEACON : 0;
 1952               		.loc 2 541 0 is_stmt 1 discriminator 4
 1953 0b46 2985      		ldd r18,Y+9
 1954 0b48 3A85      		ldd r19,Y+10
 1955 0b4a 8981      		ldd r24,Y+1
 1956 0b4c 9A81      		ldd r25,Y+2
 1957 0b4e FC01      		movw r30,r24
 1958 0b50 8185      		ldd r24,Z+9
 1959 0b52 8071      		andi r24,lo8(16)
 1960 0b54 8823      		tst r24
 1961 0b56 01F0      		breq .L95
 1962               		.loc 2 541 0 is_stmt 0 discriminator 1
 1963 0b58 80E8      		ldi r24,lo8(-128)
 1964 0b5a 90E0      		ldi r25,0
 1965 0b5c 00C0      		rjmp .L96
 1966               	.L95:
 1967               		.loc 2 541 0 discriminator 2
 1968 0b5e 80E0      		ldi r24,0
 1969 0b60 90E0      		ldi r25,0
 1970               	.L96:
 1971               		.loc 2 541 0 discriminator 4
 1972 0b62 822B      		or r24,r18
 1973 0b64 932B      		or r25,r19
 1974 0b66 9A87      		std Y+10,r25
 1975 0b68 8987      		std Y+9,r24
 542:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_ADDR == header->nwkDstAddr) ? NWK_IND_OPT_BROADCAST : 0;
 1976               		.loc 2 542 0 is_stmt 1 discriminator 4
 1977 0b6a 2985      		ldd r18,Y+9
 1978 0b6c 3A85      		ldd r19,Y+10
 1979 0b6e 8981      		ldd r24,Y+1
 1980 0b70 9A81      		ldd r25,Y+2
 1981 0b72 FC01      		movw r30,r24
 1982 0b74 8585      		ldd r24,Z+13
 1983 0b76 9685      		ldd r25,Z+14
 1984 0b78 0196      		adiw r24,1
 1985 0b7a 01F4      		brne .L97
 1986               		.loc 2 542 0 is_stmt 0 discriminator 1
 1987 0b7c 84E0      		ldi r24,lo8(4)
 1988 0b7e 90E0      		ldi r25,0
 1989 0b80 00C0      		rjmp .L98
 1990               	.L97:
 1991               		.loc 2 542 0 discriminator 2
 1992 0b82 80E0      		ldi r24,0
 1993 0b84 90E0      		ldi r25,0
 1994               	.L98:
 1995               		.loc 2 542 0 discriminator 4
 1996 0b86 822B      		or r24,r18
 1997 0b88 932B      		or r25,r19
 1998 0b8a 9A87      		std Y+10,r25
 1999 0b8c 8987      		std Y+9,r24
 543:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (header->nwkSrcAddr == header->macSrcAddr) ? NWK_IND_OPT_LOCAL : 0;
 2000               		.loc 2 543 0 is_stmt 1 discriminator 4
 2001 0b8e 2985      		ldd r18,Y+9
 2002 0b90 3A85      		ldd r19,Y+10
 2003 0b92 8981      		ldd r24,Y+1
 2004 0b94 9A81      		ldd r25,Y+2
 2005 0b96 FC01      		movw r30,r24
 2006 0b98 4385      		ldd r20,Z+11
 2007 0b9a 5485      		ldd r21,Z+12
 2008 0b9c 8981      		ldd r24,Y+1
 2009 0b9e 9A81      		ldd r25,Y+2
 2010 0ba0 FC01      		movw r30,r24
 2011 0ba2 8781      		ldd r24,Z+7
 2012 0ba4 9085      		ldd r25,Z+8
 2013 0ba6 4817      		cp r20,r24
 2014 0ba8 5907      		cpc r21,r25
 2015 0baa 01F4      		brne .L99
 2016               		.loc 2 543 0 is_stmt 0 discriminator 1
 2017 0bac 88E0      		ldi r24,lo8(8)
 2018 0bae 90E0      		ldi r25,0
 2019 0bb0 00C0      		rjmp .L100
 2020               	.L99:
 2021               		.loc 2 543 0 discriminator 2
 2022 0bb2 80E0      		ldi r24,0
 2023 0bb4 90E0      		ldi r25,0
 2024               	.L100:
 2025               		.loc 2 543 0 discriminator 4
 2026 0bb6 822B      		or r24,r18
 2027 0bb8 932B      		or r25,r19
 2028 0bba 9A87      		std Y+10,r25
 2029 0bbc 8987      		std Y+9,r24
 544:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_PANID == header->macDstPanId) ? NWK_IND_OPT_BROADCAST_PAN_ID : 0;
 2030               		.loc 2 544 0 is_stmt 1 discriminator 4
 2031 0bbe 2985      		ldd r18,Y+9
 2032 0bc0 3A85      		ldd r19,Y+10
 2033 0bc2 8981      		ldd r24,Y+1
 2034 0bc4 9A81      		ldd r25,Y+2
 2035 0bc6 FC01      		movw r30,r24
 2036 0bc8 8381      		ldd r24,Z+3
 2037 0bca 9481      		ldd r25,Z+4
 2038 0bcc 0196      		adiw r24,1
 2039 0bce 01F4      		brne .L101
 2040               		.loc 2 544 0 is_stmt 0 discriminator 1
 2041 0bd0 80E1      		ldi r24,lo8(16)
 2042 0bd2 90E0      		ldi r25,0
 2043 0bd4 00C0      		rjmp .L102
 2044               	.L101:
 2045               		.loc 2 544 0 discriminator 2
 2046 0bd6 80E0      		ldi r24,0
 2047 0bd8 90E0      		ldi r25,0
 2048               	.L102:
 2049               		.loc 2 544 0 discriminator 4
 2050 0bda 822B      		or r24,r18
 2051 0bdc 932B      		or r25,r19
 2052 0bde 9A87      		std Y+10,r25
 2053 0be0 8987      		std Y+9,r24
 545:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 546:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2054               		.loc 2 546 0 is_stmt 1 discriminator 4
 2055 0be2 8981      		ldd r24,Y+1
 2056 0be4 9A81      		ldd r25,Y+2
 2057 0be6 FC01      		movw r30,r24
 2058 0be8 8785      		ldd r24,Z+15
 2059 0bea 8295      		swap r24
 2060 0bec 8F70      		andi r24,lo8(15)
 2061 0bee 882F      		mov r24,r24
 2062 0bf0 90E0      		ldi r25,0
 2063 0bf2 0396      		adiw r24,3
 2064 0bf4 880F      		lsl r24
 2065 0bf6 991F      		rol r25
 2066 0bf8 8050      		subi r24,lo8(-(nwkIb))
 2067 0bfa 9040      		sbci r25,hi8(-(nwkIb))
 2068 0bfc FC01      		movw r30,r24
 2069 0bfe 2081      		ld r18,Z
 2070 0c00 3181      		ldd r19,Z+1
 2071 0c02 CE01      		movw r24,r28
 2072 0c04 0396      		adiw r24,3
 2073 0c06 F901      		movw r30,r18
 2074 0c08 0995      		icall
 2075               	.L103:
 2076               	/* epilogue start */
 547:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2077               		.loc 2 547 0 discriminator 1
 2078 0c0a 6196      		adiw r28,17
 2079 0c0c 0FB6      		in __tmp_reg__,__SREG__
 2080 0c0e F894      		cli
 2081 0c10 DEBF      		out __SP_H__,r29
 2082 0c12 0FBE      		out __SREG__,__tmp_reg__
 2083 0c14 CDBF      		out __SP_L__,r28
 2084 0c16 DF91      		pop r29
 2085 0c18 CF91      		pop r28
 2086 0c1a 0895      		ret
 2087               		.cfi_endproc
 2088               	.LFE74:
 2091               	nwkRxIndicateBeaconFrame:
 2092               	.LFB75:
 548:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 551:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateBeaconFrame(NwkFrame_t *frame)
 552:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2093               		.loc 2 552 0
 2094               		.cfi_startproc
 2095 0c1c CF93      		push r28
 2096               	.LCFI40:
 2097               		.cfi_def_cfa_offset 3
 2098               		.cfi_offset 28, -2
 2099 0c1e DF93      		push r29
 2100               	.LCFI41:
 2101               		.cfi_def_cfa_offset 4
 2102               		.cfi_offset 29, -3
 2103 0c20 CDB7      		in r28,__SP_L__
 2104 0c22 DEB7      		in r29,__SP_H__
 2105               	.LCFI42:
 2106               		.cfi_def_cfa_register 28
 2107 0c24 6197      		sbiw r28,17
 2108               	.LCFI43:
 2109               		.cfi_def_cfa_offset 21
 2110 0c26 0FB6      		in __tmp_reg__,__SREG__
 2111 0c28 F894      		cli
 2112 0c2a DEBF      		out __SP_H__,r29
 2113 0c2c 0FBE      		out __SREG__,__tmp_reg__
 2114 0c2e CDBF      		out __SP_L__,r28
 2115               	/* prologue: function */
 2116               	/* frame size = 17 */
 2117               	/* stack size = 19 */
 2118               	.L__stack_usage = 19
 2119 0c30 998B      		std Y+17,r25
 2120 0c32 888B      		std Y+16,r24
 553:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 2121               		.loc 2 553 0
 2122 0c34 8889      		ldd r24,Y+16
 2123 0c36 9989      		ldd r25,Y+17
 2124 0c38 0296      		adiw r24,2
 2125 0c3a 9A83      		std Y+2,r25
 2126 0c3c 8983      		std Y+1,r24
 554:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 555:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 556:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2127               		.loc 2 556 0
 2128 0c3e 8889      		ldd r24,Y+16
 2129 0c40 9989      		ldd r25,Y+17
 2130 0c42 24E2      		ldi r18,lo8(36)
 2131 0c44 FC01      		movw r30,r24
 2132 0c46 2083      		st Z,r18
 557:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 558:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[0]) {
 2133               		.loc 2 558 0
 2134 0c48 8091 0000 		lds r24,nwkIb+6
 2135 0c4c 9091 0000 		lds r25,nwkIb+6+1
 2136 0c50 892B      		or r24,r25
 2137 0c52 01F4      		brne .L105
 559:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2138               		.loc 2 559 0
 2139 0c54 80E0      		ldi r24,0
 2140 0c56 00C0      		rjmp .L107
 2141               	.L105:
 560:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 561:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 562:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = frame->beacon.macSrcAddr;
 2142               		.loc 2 562 0
 2143 0c58 8889      		ldd r24,Y+16
 2144 0c5a 9989      		ldd r25,Y+17
 2145 0c5c FC01      		movw r30,r24
 2146 0c5e 8781      		ldd r24,Z+7
 2147 0c60 9085      		ldd r25,Z+8
 2148 0c62 9C83      		std Y+4,r25
 2149 0c64 8B83      		std Y+3,r24
 563:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = frame->beacon.macSrcAddr;
 2150               		.loc 2 563 0
 2151 0c66 8889      		ldd r24,Y+16
 2152 0c68 9989      		ldd r25,Y+17
 2153 0c6a FC01      		movw r30,r24
 2154 0c6c 8781      		ldd r24,Z+7
 2155 0c6e 9085      		ldd r25,Z+8
 2156 0c70 9E83      		std Y+6,r25
 2157 0c72 8D83      		std Y+5,r24
 564:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2158               		.loc 2 564 0
 2159 0c74 1F82      		std Y+7,__zero_reg__
 565:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2160               		.loc 2 565 0
 2161 0c76 1886      		std Y+8,__zero_reg__
 566:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2162               		.loc 2 566 0
 2163 0c78 8889      		ldd r24,Y+16
 2164 0c7a 9989      		ldd r25,Y+17
 2165 0c7c 8F57      		subi r24,127
 2166 0c7e 9F4F      		sbci r25,-1
 2167 0c80 FC01      		movw r30,r24
 2168 0c82 8081      		ld r24,Z
 2169 0c84 9181      		ldd r25,Z+1
 2170 0c86 9C87      		std Y+12,r25
 2171 0c88 8B87      		std Y+11,r24
 567:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2172               		.loc 2 567 0
 2173 0c8a 8889      		ldd r24,Y+16
 2174 0c8c 9989      		ldd r25,Y+17
 2175 0c8e 0E94 0000 		call nwkFramePayloadSize
 2176 0c92 8D87      		std Y+13,r24
 568:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2177               		.loc 2 568 0
 2178 0c94 8889      		ldd r24,Y+16
 2179 0c96 9989      		ldd r25,Y+17
 2180 0c98 8D57      		subi r24,125
 2181 0c9a 9F4F      		sbci r25,-1
 2182 0c9c FC01      		movw r30,r24
 2183 0c9e 8081      		ld r24,Z
 2184 0ca0 8E87      		std Y+14,r24
 569:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2185               		.loc 2 569 0
 2186 0ca2 8889      		ldd r24,Y+16
 2187 0ca4 9989      		ldd r25,Y+17
 2188 0ca6 8C57      		subi r24,124
 2189 0ca8 9F4F      		sbci r25,-1
 2190 0caa FC01      		movw r30,r24
 2191 0cac 8081      		ld r24,Z
 2192 0cae 8F87      		std Y+15,r24
 570:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 571:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_BEACON;
 2193               		.loc 2 571 0
 2194 0cb0 80E8      		ldi r24,lo8(-128)
 2195 0cb2 90E0      		ldi r25,0
 2196 0cb4 9A87      		std Y+10,r25
 2197 0cb6 8987      		std Y+9,r24
 572:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 573:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2198               		.loc 2 573 0
 2199 0cb8 8981      		ldd r24,Y+1
 2200 0cba 9A81      		ldd r25,Y+2
 2201 0cbc FC01      		movw r30,r24
 2202 0cbe 8785      		ldd r24,Z+15
 2203 0cc0 8295      		swap r24
 2204 0cc2 8F70      		andi r24,lo8(15)
 2205 0cc4 882F      		mov r24,r24
 2206 0cc6 90E0      		ldi r25,0
 2207 0cc8 0396      		adiw r24,3
 2208 0cca 880F      		lsl r24
 2209 0ccc 991F      		rol r25
 2210 0cce 8050      		subi r24,lo8(-(nwkIb))
 2211 0cd0 9040      		sbci r25,hi8(-(nwkIb))
 2212 0cd2 FC01      		movw r30,r24
 2213 0cd4 2081      		ld r18,Z
 2214 0cd6 3181      		ldd r19,Z+1
 2215 0cd8 CE01      		movw r24,r28
 2216 0cda 0396      		adiw r24,3
 2217 0cdc F901      		movw r30,r18
 2218 0cde 0995      		icall
 2219               	.L107:
 2220               	/* epilogue start */
 574:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2221               		.loc 2 574 0 discriminator 1
 2222 0ce0 6196      		adiw r28,17
 2223 0ce2 0FB6      		in __tmp_reg__,__SREG__
 2224 0ce4 F894      		cli
 2225 0ce6 DEBF      		out __SP_H__,r29
 2226 0ce8 0FBE      		out __SREG__,__tmp_reg__
 2227 0cea CDBF      		out __SP_L__,r28
 2228 0cec DF91      		pop r29
 2229 0cee CF91      		pop r28
 2230 0cf0 0895      		ret
 2231               		.cfi_endproc
 2232               	.LFE75:
 2235               	nwkRxIndicateLLBeaconFrame:
 2236               	.LFB76:
 575:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 576:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 578:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 579:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLBeaconFrame(NwkFrame_t *frame)
 580:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2237               		.loc 2 580 0
 2238               		.cfi_startproc
 2239 0cf2 CF93      		push r28
 2240               	.LCFI44:
 2241               		.cfi_def_cfa_offset 3
 2242               		.cfi_offset 28, -2
 2243 0cf4 DF93      		push r29
 2244               	.LCFI45:
 2245               		.cfi_def_cfa_offset 4
 2246               		.cfi_offset 29, -3
 2247 0cf6 CDB7      		in r28,__SP_L__
 2248 0cf8 DEB7      		in r29,__SP_H__
 2249               	.LCFI46:
 2250               		.cfi_def_cfa_register 28
 2251 0cfa 2F97      		sbiw r28,15
 2252               	.LCFI47:
 2253               		.cfi_def_cfa_offset 19
 2254 0cfc 0FB6      		in __tmp_reg__,__SREG__
 2255 0cfe F894      		cli
 2256 0d00 DEBF      		out __SP_H__,r29
 2257 0d02 0FBE      		out __SREG__,__tmp_reg__
 2258 0d04 CDBF      		out __SP_L__,r28
 2259               	/* prologue: function */
 2260               	/* frame size = 15 */
 2261               	/* stack size = 17 */
 2262               	.L__stack_usage = 17
 2263 0d06 9F87      		std Y+15,r25
 2264 0d08 8E87      		std Y+14,r24
 581:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 582:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 583:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2265               		.loc 2 583 0
 2266 0d0a 8E85      		ldd r24,Y+14
 2267 0d0c 9F85      		ldd r25,Y+15
 2268 0d0e 24E2      		ldi r18,lo8(36)
 2269 0d10 FC01      		movw r30,r24
 2270 0d12 2083      		st Z,r18
 584:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 585:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_BEACON_ENDPOINT]) {
 2271               		.loc 2 585 0
 2272 0d14 8091 0000 		lds r24,nwkIb+6
 2273 0d18 9091 0000 		lds r25,nwkIb+6+1
 2274 0d1c 892B      		or r24,r25
 2275 0d1e 01F4      		brne .L109
 586:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2276               		.loc 2 586 0
 2277 0d20 80E0      		ldi r24,0
 2278 0d22 00C0      		rjmp .L111
 2279               	.L109:
 587:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 588:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Beacon as they are in standart 802.15.4
 589:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 590:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 591:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2280               		.loc 2 591 0
 2281 0d24 1A82      		std Y+2,__zero_reg__
 2282 0d26 1982      		std Y+1,__zero_reg__
 592:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2283               		.loc 2 592 0
 2284 0d28 1C82      		std Y+4,__zero_reg__
 2285 0d2a 1B82      		std Y+3,__zero_reg__
 593:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2286               		.loc 2 593 0
 2287 0d2c 1D82      		std Y+5,__zero_reg__
 594:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2288               		.loc 2 594 0
 2289 0d2e 1E82      		std Y+6,__zero_reg__
 595:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 596:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->LLbeacon;
 2290               		.loc 2 596 0
 2291 0d30 8E85      		ldd r24,Y+14
 2292 0d32 9F85      		ldd r25,Y+15
 2293 0d34 0296      		adiw r24,2
 2294 0d36 9A87      		std Y+10,r25
 2295 0d38 8987      		std Y+9,r24
 597:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2296               		.loc 2 597 0
 2297 0d3a 8E85      		ldd r24,Y+14
 2298 0d3c 9F85      		ldd r25,Y+15
 2299 0d3e 0E94 0000 		call nwkFramePayloadSize
 2300 0d42 8B87      		std Y+11,r24
 598:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2301               		.loc 2 598 0
 2302 0d44 8E85      		ldd r24,Y+14
 2303 0d46 9F85      		ldd r25,Y+15
 2304 0d48 8D57      		subi r24,125
 2305 0d4a 9F4F      		sbci r25,-1
 2306 0d4c FC01      		movw r30,r24
 2307 0d4e 8081      		ld r24,Z
 2308 0d50 8C87      		std Y+12,r24
 599:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2309               		.loc 2 599 0
 2310 0d52 8E85      		ldd r24,Y+14
 2311 0d54 9F85      		ldd r25,Y+15
 2312 0d56 8C57      		subi r24,124
 2313 0d58 9F4F      		sbci r25,-1
 2314 0d5a FC01      		movw r30,r24
 2315 0d5c 8081      		ld r24,Z
 2316 0d5e 8D87      		std Y+13,r24
 600:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 601:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_BEACON;
 2317               		.loc 2 601 0
 2318 0d60 80E0      		ldi r24,0
 2319 0d62 91E0      		ldi r25,lo8(1)
 2320 0d64 9887      		std Y+8,r25
 2321 0d66 8F83      		std Y+7,r24
 602:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 603:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 604:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_BEACON_ENDPOINT](&ind);
 2322               		.loc 2 604 0
 2323 0d68 2091 0000 		lds r18,nwkIb+6
 2324 0d6c 3091 0000 		lds r19,nwkIb+6+1
 2325 0d70 CE01      		movw r24,r28
 2326 0d72 0196      		adiw r24,1
 2327 0d74 F901      		movw r30,r18
 2328 0d76 0995      		icall
 2329               	.L111:
 2330               	/* epilogue start */
 605:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2331               		.loc 2 605 0 discriminator 1
 2332 0d78 2F96      		adiw r28,15
 2333 0d7a 0FB6      		in __tmp_reg__,__SREG__
 2334 0d7c F894      		cli
 2335 0d7e DEBF      		out __SP_H__,r29
 2336 0d80 0FBE      		out __SREG__,__tmp_reg__
 2337 0d82 CDBF      		out __SP_L__,r28
 2338 0d84 DF91      		pop r29
 2339 0d86 CF91      		pop r28
 2340 0d88 0895      		ret
 2341               		.cfi_endproc
 2342               	.LFE76:
 2345               	nwkRxIndicateLLCommandFrame:
 2346               	.LFB77:
 606:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 607:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLCommandFrame(NwkFrame_t *frame)
 608:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2347               		.loc 2 608 0
 2348               		.cfi_startproc
 2349 0d8a CF93      		push r28
 2350               	.LCFI48:
 2351               		.cfi_def_cfa_offset 3
 2352               		.cfi_offset 28, -2
 2353 0d8c DF93      		push r29
 2354               	.LCFI49:
 2355               		.cfi_def_cfa_offset 4
 2356               		.cfi_offset 29, -3
 2357 0d8e CDB7      		in r28,__SP_L__
 2358 0d90 DEB7      		in r29,__SP_H__
 2359               	.LCFI50:
 2360               		.cfi_def_cfa_register 28
 2361 0d92 6197      		sbiw r28,17
 2362               	.LCFI51:
 2363               		.cfi_def_cfa_offset 21
 2364 0d94 0FB6      		in __tmp_reg__,__SREG__
 2365 0d96 F894      		cli
 2366 0d98 DEBF      		out __SP_H__,r29
 2367 0d9a 0FBE      		out __SREG__,__tmp_reg__
 2368 0d9c CDBF      		out __SP_L__,r28
 2369               	/* prologue: function */
 2370               	/* frame size = 17 */
 2371               	/* stack size = 19 */
 2372               	.L__stack_usage = 19
 2373 0d9e 998B      		std Y+17,r25
 2374 0da0 888B      		std Y+16,r24
 609:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 610:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 611:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2375               		.loc 2 611 0
 2376 0da2 8889      		ldd r24,Y+16
 2377 0da4 9989      		ldd r25,Y+17
 2378 0da6 0296      		adiw r24,2
 2379 0da8 9A83      		std Y+2,r25
 2380 0daa 8983      		std Y+1,r24
 612:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 613:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 614:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2381               		.loc 2 614 0
 2382 0dac 8889      		ldd r24,Y+16
 2383 0dae 9989      		ldd r25,Y+17
 2384 0db0 24E2      		ldi r18,lo8(36)
 2385 0db2 FC01      		movw r30,r24
 2386 0db4 2083      		st Z,r18
 615:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 616:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_COMMAND_ENDPOINT]) {
 2387               		.loc 2 616 0
 2388 0db6 8091 0000 		lds r24,nwkIb+12
 2389 0dba 9091 0000 		lds r25,nwkIb+12+1
 2390 0dbe 892B      		or r24,r25
 2391 0dc0 01F4      		brne .L113
 617:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2392               		.loc 2 617 0
 2393 0dc2 80E0      		ldi r24,0
 2394 0dc4 00C0      		rjmp .L115
 2395               	.L113:
 618:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 619:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 620:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 621:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 622:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 623:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2396               		.loc 2 623 0
 2397 0dc6 1C82      		std Y+4,__zero_reg__
 2398 0dc8 1B82      		std Y+3,__zero_reg__
 624:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2399               		.loc 2 624 0
 2400 0dca 1E82      		std Y+6,__zero_reg__
 2401 0dcc 1D82      		std Y+5,__zero_reg__
 625:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2402               		.loc 2 625 0
 2403 0dce 1F82      		std Y+7,__zero_reg__
 626:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2404               		.loc 2 626 0
 2405 0dd0 1886      		std Y+8,__zero_reg__
 627:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 628:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2406               		.loc 2 628 0
 2407 0dd2 8889      		ldd r24,Y+16
 2408 0dd4 9989      		ldd r25,Y+17
 2409 0dd6 8F57      		subi r24,127
 2410 0dd8 9F4F      		sbci r25,-1
 2411 0dda FC01      		movw r30,r24
 2412 0ddc 8081      		ld r24,Z
 2413 0dde 9181      		ldd r25,Z+1
 2414 0de0 9C87      		std Y+12,r25
 2415 0de2 8B87      		std Y+11,r24
 629:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 630:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2416               		.loc 2 630 0
 2417 0de4 8889      		ldd r24,Y+16
 2418 0de6 9989      		ldd r25,Y+17
 2419 0de8 0E94 0000 		call nwkFramePayloadSize
 2420 0dec 8D87      		std Y+13,r24
 631:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2421               		.loc 2 631 0
 2422 0dee 8889      		ldd r24,Y+16
 2423 0df0 9989      		ldd r25,Y+17
 2424 0df2 8D57      		subi r24,125
 2425 0df4 9F4F      		sbci r25,-1
 2426 0df6 FC01      		movw r30,r24
 2427 0df8 8081      		ld r24,Z
 2428 0dfa 8E87      		std Y+14,r24
 632:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2429               		.loc 2 632 0
 2430 0dfc 8889      		ldd r24,Y+16
 2431 0dfe 9989      		ldd r25,Y+17
 2432 0e00 8C57      		subi r24,124
 2433 0e02 9F4F      		sbci r25,-1
 2434 0e04 FC01      		movw r30,r24
 2435 0e06 8081      		ld r24,Z
 2436 0e08 8F87      		std Y+15,r24
 633:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 634:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_MACCOMMAND;
 2437               		.loc 2 634 0
 2438 0e0a 80E0      		ldi r24,0
 2439 0e0c 92E0      		ldi r25,lo8(2)
 2440 0e0e 9A87      		std Y+10,r25
 2441 0e10 8987      		std Y+9,r24
 635:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 636:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_COMMAND_ENDPOINT](&ind);
 2442               		.loc 2 636 0
 2443 0e12 2091 0000 		lds r18,nwkIb+12
 2444 0e16 3091 0000 		lds r19,nwkIb+12+1
 2445 0e1a CE01      		movw r24,r28
 2446 0e1c 0396      		adiw r24,3
 2447 0e1e F901      		movw r30,r18
 2448 0e20 0995      		icall
 2449               	.L115:
 2450               	/* epilogue start */
 637:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2451               		.loc 2 637 0 discriminator 1
 2452 0e22 6196      		adiw r28,17
 2453 0e24 0FB6      		in __tmp_reg__,__SREG__
 2454 0e26 F894      		cli
 2455 0e28 DEBF      		out __SP_H__,r29
 2456 0e2a 0FBE      		out __SREG__,__tmp_reg__
 2457 0e2c CDBF      		out __SP_L__,r28
 2458 0e2e DF91      		pop r29
 2459 0e30 CF91      		pop r28
 2460 0e32 0895      		ret
 2461               		.cfi_endproc
 2462               	.LFE77:
 2465               	nwkRxIndicateLLACKFrame:
 2466               	.LFB78:
 638:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 639:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLACKFrame(NwkFrame_t *frame)
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2467               		.loc 2 640 0
 2468               		.cfi_startproc
 2469 0e34 CF93      		push r28
 2470               	.LCFI52:
 2471               		.cfi_def_cfa_offset 3
 2472               		.cfi_offset 28, -2
 2473 0e36 DF93      		push r29
 2474               	.LCFI53:
 2475               		.cfi_def_cfa_offset 4
 2476               		.cfi_offset 29, -3
 2477 0e38 CDB7      		in r28,__SP_L__
 2478 0e3a DEB7      		in r29,__SP_H__
 2479               	.LCFI54:
 2480               		.cfi_def_cfa_register 28
 2481 0e3c 6197      		sbiw r28,17
 2482               	.LCFI55:
 2483               		.cfi_def_cfa_offset 21
 2484 0e3e 0FB6      		in __tmp_reg__,__SREG__
 2485 0e40 F894      		cli
 2486 0e42 DEBF      		out __SP_H__,r29
 2487 0e44 0FBE      		out __SREG__,__tmp_reg__
 2488 0e46 CDBF      		out __SP_L__,r28
 2489               	/* prologue: function */
 2490               	/* frame size = 17 */
 2491               	/* stack size = 19 */
 2492               	.L__stack_usage = 19
 2493 0e48 998B      		std Y+17,r25
 2494 0e4a 888B      		std Y+16,r24
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 642:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2495               		.loc 2 642 0
 2496 0e4c 8889      		ldd r24,Y+16
 2497 0e4e 9989      		ldd r25,Y+17
 2498 0e50 0296      		adiw r24,2
 2499 0e52 9A83      		std Y+2,r25
 2500 0e54 8983      		std Y+1,r24
 643:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 644:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 645:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2501               		.loc 2 645 0
 2502 0e56 8889      		ldd r24,Y+16
 2503 0e58 9989      		ldd r25,Y+17
 2504 0e5a 24E2      		ldi r18,lo8(36)
 2505 0e5c FC01      		movw r30,r24
 2506 0e5e 2083      		st Z,r18
 646:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 647:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_ACK_ENDPOINT]) {
 2507               		.loc 2 647 0
 2508 0e60 8091 0000 		lds r24,nwkIb+14
 2509 0e64 9091 0000 		lds r25,nwkIb+14+1
 2510 0e68 892B      		or r24,r25
 2511 0e6a 01F4      		brne .L117
 648:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2512               		.loc 2 648 0
 2513 0e6c 80E0      		ldi r24,0
 2514 0e6e 00C0      		rjmp .L119
 2515               	.L117:
 649:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 650:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 651:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* 
 652:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * this informations are not received in a LLDN Command as they are in standart 802.15.4
 653:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 654:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 655:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2516               		.loc 2 655 0
 2517 0e70 1C82      		std Y+4,__zero_reg__
 2518 0e72 1B82      		std Y+3,__zero_reg__
 656:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2519               		.loc 2 656 0
 2520 0e74 1E82      		std Y+6,__zero_reg__
 2521 0e76 1D82      		std Y+5,__zero_reg__
 657:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2522               		.loc 2 657 0
 2523 0e78 1F82      		std Y+7,__zero_reg__
 658:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2524               		.loc 2 658 0
 2525 0e7a 1886      		std Y+8,__zero_reg__
 659:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 660:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data =  frame->payload;
 2526               		.loc 2 660 0
 2527 0e7c 8889      		ldd r24,Y+16
 2528 0e7e 9989      		ldd r25,Y+17
 2529 0e80 8F57      		subi r24,127
 2530 0e82 9F4F      		sbci r25,-1
 2531 0e84 FC01      		movw r30,r24
 2532 0e86 8081      		ld r24,Z
 2533 0e88 9181      		ldd r25,Z+1
 2534 0e8a 9C87      		std Y+12,r25
 2535 0e8c 8B87      		std Y+11,r24
 661:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2536               		.loc 2 661 0
 2537 0e8e 8889      		ldd r24,Y+16
 2538 0e90 9989      		ldd r25,Y+17
 2539 0e92 0E94 0000 		call nwkFramePayloadSize
 2540 0e96 8D87      		std Y+13,r24
 662:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2541               		.loc 2 662 0
 2542 0e98 8889      		ldd r24,Y+16
 2543 0e9a 9989      		ldd r25,Y+17
 2544 0e9c 8D57      		subi r24,125
 2545 0e9e 9F4F      		sbci r25,-1
 2546 0ea0 FC01      		movw r30,r24
 2547 0ea2 8081      		ld r24,Z
 2548 0ea4 8E87      		std Y+14,r24
 663:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2549               		.loc 2 663 0
 2550 0ea6 8889      		ldd r24,Y+16
 2551 0ea8 9989      		ldd r25,Y+17
 2552 0eaa 8C57      		subi r24,124
 2553 0eac 9F4F      		sbci r25,-1
 2554 0eae FC01      		movw r30,r24
 2555 0eb0 8081      		ld r24,Z
 2556 0eb2 8F87      		std Y+15,r24
 664:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 665:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_OPT_LLDN_ACK;
 2557               		.loc 2 665 0
 2558 0eb4 80E0      		ldi r24,0
 2559 0eb6 90E4      		ldi r25,lo8(64)
 2560 0eb8 9A87      		std Y+10,r25
 2561 0eba 8987      		std Y+9,r24
 666:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 667:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_ACK_ENDPOINT](&ind);
 2562               		.loc 2 667 0
 2563 0ebc 2091 0000 		lds r18,nwkIb+14
 2564 0ec0 3091 0000 		lds r19,nwkIb+14+1
 2565 0ec4 CE01      		movw r24,r28
 2566 0ec6 0396      		adiw r24,3
 2567 0ec8 F901      		movw r30,r18
 2568 0eca 0995      		icall
 2569               	.L119:
 2570               	/* epilogue start */
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2571               		.loc 2 668 0 discriminator 1
 2572 0ecc 6196      		adiw r28,17
 2573 0ece 0FB6      		in __tmp_reg__,__SREG__
 2574 0ed0 F894      		cli
 2575 0ed2 DEBF      		out __SP_H__,r29
 2576 0ed4 0FBE      		out __SREG__,__tmp_reg__
 2577 0ed6 CDBF      		out __SP_L__,r28
 2578 0ed8 DF91      		pop r29
 2579 0eda CF91      		pop r28
 2580 0edc 0895      		ret
 2581               		.cfi_endproc
 2582               	.LFE78:
 2585               	nwkRxHandleIndication:
 2586               	.LFB79:
 669:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 670:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 671:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 672:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleIndication(NwkFrame_t *frame)
 673:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2587               		.loc 2 673 0
 2588               		.cfi_startproc
 2589 0ede CF93      		push r28
 2590               	.LCFI56:
 2591               		.cfi_def_cfa_offset 3
 2592               		.cfi_offset 28, -2
 2593 0ee0 DF93      		push r29
 2594               	.LCFI57:
 2595               		.cfi_def_cfa_offset 4
 2596               		.cfi_offset 29, -3
 2597 0ee2 00D0      		rcall .
 2598 0ee4 1F92      		push __zero_reg__
 2599               	.LCFI58:
 2600               		.cfi_def_cfa_offset 7
 2601 0ee6 CDB7      		in r28,__SP_L__
 2602 0ee8 DEB7      		in r29,__SP_H__
 2603               	.LCFI59:
 2604               		.cfi_def_cfa_register 28
 2605               	/* prologue: function */
 2606               	/* frame size = 3 */
 2607               	/* stack size = 5 */
 2608               	.L__stack_usage = 5
 2609 0eea 9B83      		std Y+3,r25
 2610 0eec 8A83      		std Y+2,r24
 674:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool ack;
 675:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 676:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = 0;
 2611               		.loc 2 676 0
 2612 0eee 1092 0000 		sts nwkRxAckControl,__zero_reg__
 677:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack = nwkRxIndicateDataFrame(frame);
 2613               		.loc 2 677 0
 2614 0ef2 8A81      		ldd r24,Y+2
 2615 0ef4 9B81      		ldd r25,Y+3
 2616 0ef6 0E94 0000 		call nwkRxIndicateDataFrame
 2617 0efa 8983      		std Y+1,r24
 678:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 679:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == frame->header.nwkFcf.ackRequest) {
 2618               		.loc 2 679 0
 2619 0efc 8A81      		ldd r24,Y+2
 2620 0efe 9B81      		ldd r25,Y+3
 2621 0f00 FC01      		movw r30,r24
 2622 0f02 8385      		ldd r24,Z+11
 2623 0f04 8170      		andi r24,lo8(1)
 2624 0f06 8823      		tst r24
 2625 0f08 01F4      		brne .L121
 680:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2626               		.loc 2 680 0
 2627 0f0a 1982      		std Y+1,__zero_reg__
 2628               	.L121:
 681:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 682:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 683:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == frame->header.macDstAddr &&
 2629               		.loc 2 683 0
 2630 0f0c 8A81      		ldd r24,Y+2
 2631 0f0e 9B81      		ldd r25,Y+3
 2632 0f10 FC01      		movw r30,r24
 2633 0f12 8781      		ldd r24,Z+7
 2634 0f14 9085      		ldd r25,Z+8
 2635 0f16 0196      		adiw r24,1
 2636 0f18 01F4      		brne .L122
 684:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2637               		.loc 2 684 0 discriminator 1
 2638 0f1a 2091 0000 		lds r18,nwkIb
 2639 0f1e 3091 0000 		lds r19,nwkIb+1
 2640 0f22 8A81      		ldd r24,Y+2
 2641 0f24 9B81      		ldd r25,Y+3
 2642 0f26 FC01      		movw r30,r24
 2643 0f28 8785      		ldd r24,Z+15
 2644 0f2a 9089      		ldd r25,Z+16
 683:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2645               		.loc 2 683 0 discriminator 1
 2646 0f2c 2817      		cp r18,r24
 2647 0f2e 3907      		cpc r19,r25
 2648 0f30 01F4      		brne .L122
 685:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			0 == frame->header.nwkFcf.multicast) {
 2649               		.loc 2 685 0
 2650 0f32 8A81      		ldd r24,Y+2
 2651 0f34 9B81      		ldd r25,Y+3
 2652 0f36 FC01      		movw r30,r24
 2653 0f38 8385      		ldd r24,Z+11
 2654 0f3a 8870      		andi r24,lo8(8)
 684:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2655               		.loc 2 684 0
 2656 0f3c 8823      		tst r24
 2657 0f3e 01F4      		brne .L122
 686:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = true;
 2658               		.loc 2 686 0
 2659 0f40 81E0      		ldi r24,lo8(1)
 2660 0f42 8983      		std Y+1,r24
 2661               	.L122:
 687:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 688:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 689:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == frame->header.macDstPanId) {
 2662               		.loc 2 689 0
 2663 0f44 8A81      		ldd r24,Y+2
 2664 0f46 9B81      		ldd r25,Y+3
 2665 0f48 FC01      		movw r30,r24
 2666 0f4a 8581      		ldd r24,Z+5
 2667 0f4c 9681      		ldd r25,Z+6
 2668 0f4e 0196      		adiw r24,1
 2669 0f50 01F4      		brne .L123
 690:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2670               		.loc 2 690 0
 2671 0f52 1982      		std Y+1,__zero_reg__
 2672               	.L123:
 691:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 692:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 693:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == nwkIb.addr) {
 2673               		.loc 2 693 0
 2674 0f54 8091 0000 		lds r24,nwkIb
 2675 0f58 9091 0000 		lds r25,nwkIb+1
 2676 0f5c 0196      		adiw r24,1
 2677 0f5e 01F4      		brne .L124
 694:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2678               		.loc 2 694 0
 2679 0f60 1982      		std Y+1,__zero_reg__
 2680               	.L124:
 695:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 696:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 697:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ack) {
 2681               		.loc 2 697 0
 2682 0f62 8981      		ldd r24,Y+1
 2683 0f64 8823      		tst r24
 2684 0f66 01F0      		breq .L125
 698:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxSendAck(frame);
 2685               		.loc 2 698 0
 2686 0f68 8A81      		ldd r24,Y+2
 2687 0f6a 9B81      		ldd r25,Y+3
 2688 0f6c 0E94 0000 		call nwkRxSendAck
 2689               	.L125:
 699:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 700:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 701:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2690               		.loc 2 701 0
 2691 0f70 8A81      		ldd r24,Y+2
 2692 0f72 9B81      		ldd r25,Y+3
 2693 0f74 24E2      		ldi r18,lo8(36)
 2694 0f76 FC01      		movw r30,r24
 2695 0f78 2083      		st Z,r18
 702:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2696               		.loc 2 702 0
 2697 0f7a 0000      		nop
 2698               	/* epilogue start */
 2699 0f7c 0F90      		pop __tmp_reg__
 2700 0f7e 0F90      		pop __tmp_reg__
 2701 0f80 0F90      		pop __tmp_reg__
 2702 0f82 DF91      		pop r29
 2703 0f84 CF91      		pop r28
 2704 0f86 0895      		ret
 2705               		.cfi_endproc
 2706               	.LFE79:
 2708               	.global	nwkRxTaskHandler
 2710               	nwkRxTaskHandler:
 2711               	.LFB80:
 703:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 704:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 705:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Rx Module task handler
 706:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 707:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxTaskHandler(void)
 708:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2712               		.loc 2 708 0
 2713               		.cfi_startproc
 2714 0f88 CF93      		push r28
 2715               	.LCFI60:
 2716               		.cfi_def_cfa_offset 3
 2717               		.cfi_offset 28, -2
 2718 0f8a DF93      		push r29
 2719               	.LCFI61:
 2720               		.cfi_def_cfa_offset 4
 2721               		.cfi_offset 29, -3
 2722 0f8c 00D0      		rcall .
 2723               	.LCFI62:
 2724               		.cfi_def_cfa_offset 6
 2725 0f8e CDB7      		in r28,__SP_L__
 2726 0f90 DEB7      		in r29,__SP_H__
 2727               	.LCFI63:
 2728               		.cfi_def_cfa_register 28
 2729               	/* prologue: function */
 2730               	/* frame size = 2 */
 2731               	/* stack size = 4 */
 2732               	.L__stack_usage = 4
 709:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame = NULL;
 2733               		.loc 2 709 0
 2734 0f92 1A82      		std Y+2,__zero_reg__
 2735 0f94 1982      		std Y+1,__zero_reg__
 710:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 711:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 2736               		.loc 2 711 0
 2737 0f96 00C0      		rjmp .L127
 2738               	.L136:
 712:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2739               		.loc 2 712 0
 2740 0f98 8981      		ldd r24,Y+1
 2741 0f9a 9A81      		ldd r25,Y+2
 2742 0f9c FC01      		movw r30,r24
 2743 0f9e 8081      		ld r24,Z
 2744 0fa0 882F      		mov r24,r24
 2745 0fa2 90E0      		ldi r25,0
 2746 0fa4 092E      		mov __tmp_reg__,r25
 2747 0fa6 000C      		lsl r0
 2748 0fa8 AA0B      		sbc r26,r26
 2749 0faa BB0B      		sbc r27,r27
 2750 0fac 40E2      		ldi r20,lo8(32)
 2751 0fae 50E0      		ldi r21,0
 2752 0fb0 28E0      		ldi r18,lo8(8)
 2753 0fb2 30E0      		ldi r19,0
 2754 0fb4 841B      		sub r24,r20
 2755 0fb6 950B      		sbc r25,r21
 2756 0fb8 2817      		cp r18,r24
 2757 0fba 3907      		cpc r19,r25
 2758 0fbc 00F0      		brlo .L127
 2759 0fbe 8050      		subi r24,lo8(-(gs(.L129)))
 2760 0fc0 9040      		sbci r25,hi8(-(gs(.L129)))
 2761 0fc2 FC01      		movw r30,r24
 2762 0fc4 0C94 0000 		jmp __tablejump2__
 2763               		.section	.progmem.gcc_sw_table,"a",@progbits
 2764               		.p2align	1
 2765               	.L129:
 2766 0000 0000      		.word gs(.L128)
 2767 0002 0000      		.word gs(.L127)
 2768 0004 0000      		.word gs(.L130)
 2769 0006 0000      		.word gs(.L127)
 2770 0008 0000      		.word gs(.L131)
 2771 000a 0000      		.word gs(.L132)
 2772 000c 0000      		.word gs(.L133)
 2773 000e 0000      		.word gs(.L134)
 2774 0010 0000      		.word gs(.L135)
 2775               		.text
 2776               	.L128:
 713:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_RECEIVED:
 714:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 715:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleReceivedFrame(frame);
 2777               		.loc 2 715 0
 2778 0fc8 8981      		ldd r24,Y+1
 2779 0fca 9A81      		ldd r25,Y+2
 2780 0fcc 0E94 0000 		call nwkRxHandleReceivedFrame
 716:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 717:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2781               		.loc 2 717 0
 2782 0fd0 00C0      		rjmp .L127
 2783               	.L130:
 718:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 719:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 720:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_DECRYPT:
 721:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 722:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkSecurityProcess(frame, false);
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 724:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 725:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 726:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 727:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_INDICATE:
 728:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 729:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleIndication(frame);
 2784               		.loc 2 729 0
 2785 0fd2 8981      		ldd r24,Y+1
 2786 0fd4 9A81      		ldd r25,Y+2
 2787 0fd6 0E94 0000 		call nwkRxHandleIndication
 730:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 731:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2788               		.loc 2 731 0
 2789 0fda 00C0      		rjmp .L127
 2790               	.L131:
 732:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 733:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 734:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_ROUTE:
 735:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 736:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRouteFrame(frame);
 737:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 738:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 739:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 740:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 741:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_FINISH:
 742:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 743:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkFrameFree(frame);
 2791               		.loc 2 743 0
 2792 0fdc 8981      		ldd r24,Y+1
 2793 0fde 9A81      		ldd r25,Y+2
 2794 0fe0 0E94 0000 		call nwkFrameFree
 744:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 745:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2795               		.loc 2 745 0
 2796 0fe4 00C0      		rjmp .L127
 2797               	.L132:
 746:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 747:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_BEACON:
 748:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 749:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateBeaconFrame(frame);
 2798               		.loc 2 749 0
 2799 0fe6 8981      		ldd r24,Y+1
 2800 0fe8 9A81      		ldd r25,Y+2
 2801 0fea 0E94 0000 		call nwkRxIndicateBeaconFrame
 750:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 751:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2802               		.loc 2 751 0
 2803 0fee 00C0      		rjmp .L127
 2804               	.L133:
 752:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 753:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 754:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLBEACON:
 755:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 756:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLBeaconFrame(frame);
 2805               		.loc 2 756 0
 2806 0ff0 8981      		ldd r24,Y+1
 2807 0ff2 9A81      		ldd r25,Y+2
 2808 0ff4 0E94 0000 		call nwkRxIndicateLLBeaconFrame
 757:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 758:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2809               		.loc 2 758 0
 2810 0ff8 00C0      		rjmp .L127
 2811               	.L134:
 759:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 760:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLCOMMAND:
 761:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 762:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLCommandFrame(frame);
 2812               		.loc 2 762 0
 2813 0ffa 8981      		ldd r24,Y+1
 2814 0ffc 9A81      		ldd r25,Y+2
 2815 0ffe 0E94 0000 		call nwkRxIndicateLLCommandFrame
 763:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 764:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2816               		.loc 2 764 0
 2817 1002 00C0      		rjmp .L127
 2818               	.L135:
 765:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 766:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLACKFRAME:
 767:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 768:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLACKFrame(frame);
 2819               		.loc 2 768 0
 2820 1004 8981      		ldd r24,Y+1
 2821 1006 9A81      		ldd r25,Y+2
 2822 1008 0E94 0000 		call nwkRxIndicateLLACKFrame
 769:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 770:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2823               		.loc 2 770 0
 2824 100c 0000      		nop
 2825               	.L127:
 711:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2826               		.loc 2 711 0
 2827 100e 8981      		ldd r24,Y+1
 2828 1010 9A81      		ldd r25,Y+2
 2829 1012 0E94 0000 		call nwkFrameNext
 2830 1016 9A83      		std Y+2,r25
 2831 1018 8983      		std Y+1,r24
 2832 101a 8981      		ldd r24,Y+1
 2833 101c 9A81      		ldd r25,Y+2
 2834 101e 892B      		or r24,r25
 2835 1020 01F0      		breq .+2
 2836 1022 00C0      		rjmp .L136
 771:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 772:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 773:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 774:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2837               		.loc 2 774 0
 2838 1024 0000      		nop
 2839               	/* epilogue start */
 2840 1026 0F90      		pop __tmp_reg__
 2841 1028 0F90      		pop __tmp_reg__
 2842 102a DF91      		pop r29
 2843 102c CF91      		pop r28
 2844 102e 0895      		ret
 2845               		.cfi_endproc
 2846               	.LFE80:
 2848               	.Letext0:
 2849               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 2850               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 2851               		.file 5 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 2852               		.file 6 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 2853               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwkDataReq.h"
 2854               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 2855               		.file 9 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
 2856               		.file 10 "config/config.h"
 2857               		.file 11 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkRx.c
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:7      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 n
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:15     .bss.tTS:00000000 tTS
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:19     .text:00000000 nwkFramePayloadSize
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:81     .bss.nwkRxDuplicateRejectionTable:00000000 nwkRxDuplicateRejectionTable
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:86     .bss.nwkRxAckControl:00000000 nwkRxAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:91     .bss.nwkRxDuplicateRejectionTimer:00000000 nwkRxDuplicateRejectionTimer
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:96     .text:00000044 nwkRxInit
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:836    .text:000004a8 nwkRxDuplicateRejectionTimerHandler
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:1234   .text:000006ea nwkRxSeriveDataInd
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:191    .text:000000b6 PHY_DataInd
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:626    .text:0000037e nwkRxSendAck
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:798    .text:0000048c NWK_SetAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:951    .text:00000542 nwkRxRejectDuplicate
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:1302   .text:00000734 nwkRxHandleReceivedFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:1752   .text:00000a0e nwkRxIndicateDataFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:2091   .text:00000c1c nwkRxIndicateBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:2235   .text:00000cf2 nwkRxIndicateLLBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:2345   .text:00000d8a nwkRxIndicateLLCommandFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:2465   .text:00000e34 nwkRxIndicateLLACKFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:2585   .text:00000ede nwkRxHandleIndication
C:\Users\GUILHE~1\AppData\Local\Temp\ccVolEym.s:2710   .text:00000f88 nwkRxTaskHandler

UNDEFINED SYMBOLS
NWK_OpenEndpoint
printf
nwkFrameAlloc
nwkFrameAlloc_LLDN
memcpy
nwkFrameCommandInit
nwkTxFrame
SYS_TimerStart
nwkTxAckReceived
nwkIb
NWK_GroupIsMember
nwkTxBroadcastFrame
__tablejump2__
nwkFrameFree
nwkFrameNext
__do_copy_data
__do_clear_bss
