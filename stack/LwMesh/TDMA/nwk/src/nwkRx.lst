   1               		.file	"nwkRx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	n,1,1
  12               		.section	.bss.tTS,"aw",@nobits
  15               	tTS:
  16 0000 0000 0000 		.zero	4
  17               		.text
  19               	nwkFramePayloadSize:
  20               	.LFB65:
  21               		.file 1 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
   1:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /**
   2:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \file nwkFrame.h
   3:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   4:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \brief Frame buffers management interface
   5:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   6:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   8:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  10:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  13:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  16:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  20:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  23:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  26:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  38:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  40:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  41:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  42:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  43:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*
  44:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  46:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  48:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  49:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #ifndef _NWK_FRAME_H_
  50:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define _NWK_FRAME_H_
  51:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  52:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Includes ---------------------------------------------------------------*/
  53:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include <stdint.h>
  54:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include "compiler.h"
  55:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  56:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Definitions ------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define NWK_FRAME_MAX_PAYLOAD_SIZE   127
  58:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  59:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Types ------------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_SET(1)
  61:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameHeader_t {
  62:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  63:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  64:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstPanId;
  65:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstAddr;
  66:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  67:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  68:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  69:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t ackRequest : 1;
  70:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t security   : 1;
  71:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t linkLocal  : 1;
  72:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t multicast  : 1;
  73:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t beacon     : 1;
  74:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved   : 3;
  75:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} nwkFcf;
  76:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t nwkSeq;
  77:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkSrcAddr;
  78:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkDstAddr;
  79:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  80:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkSrcEndpoint : 4;
  81:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkDstEndpoint : 4;
  82:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
  83:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameHeader_t;
  84:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  85:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeader_t {
  86:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  87:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  88:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcPanId;
  89:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  90:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
  91:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
  92:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t beaconOrder			: 4;
  93:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t superframeOrder		: 4;
  94:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t finalCAPslot			: 4;
  95:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t BatteryLifeExtension	: 1;
  96:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t Reserved				: 1;
  97:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t PANCoordinator			: 1;
  98:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t AssociationPermit		: 1;
  99:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSFS;
 100:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macGTS;
 101:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macPending;
 102:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeader_t;
 103:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 104:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 105:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeaderLLDN_t {
 106:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/******* MHR *****/
 107:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// struct
 108:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// {
 109:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameType 				: 3;
 110:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SecurityEnabled 	: 1;
 111:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameVersion			: 1;
 112:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t ackRequest				: 1;
 113:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SubFrameType			: 2;
 114:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// } macFcf;
 115:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 116:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 117:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 118:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 119:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 120:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 121:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 122:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 123:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 124:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 125:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/****** MAC Payload *******/
 126:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 127:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 128:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txState 			: 3;
 129:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txDir 				: 1;
 130:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved			: 1;
 131:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t numBaseMgmtTimeslots: 3; // number of managment time slots
 132:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 										// uplink and downlink must be equal
 133:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} Flags;
 134:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 135:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t PanId;
 136:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t confSeqNumber;
 137:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t TimeSlotSize;
 138:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 139:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 140:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeaderLLDN_t;
 141:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 142:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameGeneralHeaderLLDN_t {
 143:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	#if (TAL_TYPE == AT86RF233)
 144:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// uint8_t PHR;
 145:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	#endif
 146:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 147:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 148:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 149:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 150:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 151:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 152:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 153:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 154:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 155:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 156:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameGeneralHeaderLLDN_t;
 157:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 158:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 159:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameMulticastHeader_t {
 160:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nonMemberRadius    : 4;
 161:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxNonMemberRadius : 4;
 162:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t memberRadius       : 4;
 163:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxMemberRadius    : 4;
 164:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameMulticastHeader_t;
 165:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 166:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct NwkFrame_t {
 167:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t state;
 168:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t size;
 169:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 170:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 171:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameHeader_t header;
 172:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeader_t beacon;
 173:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeaderLLDN_t LLbeacon;
 174:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameGeneralHeaderLLDN_t LLgeneral;
 175:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t data[NWK_FRAME_MAX_PAYLOAD_SIZE];
 176:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 177:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 178:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t *payload;
 179:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 180:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 181:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 182:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t lqi;
 183:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			int8_t rssi;
 184:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} rx;
 185:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 186:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 187:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t status;
 188:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint16_t timeout;
 189:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t control;
 190:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			void (*confirm)(struct NwkFrame_t *frame);
 191:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} tx;
 192:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 193:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrame_t;
 194:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_RESET()
 195:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Prototypes -------------------------------------------------------------*/
 196:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameInit(void);
 197:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc(void);
 198:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameFree(NwkFrame_t *frame);
 199:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);
 200:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameCommandInit(NwkFrame_t *frame);
 201:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 202:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame);
 203:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Implementations --------------------------------------------------------*/
 204:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 205:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*************************************************************************//**
 206:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** *****************************************************************************/
 207:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** static inline uint8_t nwkFramePayloadSize(NwkFrame_t *frame)
 208:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** {
  22               		.loc 1 208 0
  23               		.cfi_startproc
  24 0000 CF93      		push r28
  25               	.LCFI0:
  26               		.cfi_def_cfa_offset 3
  27               		.cfi_offset 28, -2
  28 0002 DF93      		push r29
  29               	.LCFI1:
  30               		.cfi_def_cfa_offset 4
  31               		.cfi_offset 29, -3
  32 0004 00D0      		rcall .
  33               	.LCFI2:
  34               		.cfi_def_cfa_offset 6
  35 0006 CDB7      		in r28,__SP_L__
  36 0008 DEB7      		in r29,__SP_H__
  37               	.LCFI3:
  38               		.cfi_def_cfa_register 28
  39               	/* prologue: function */
  40               	/* frame size = 2 */
  41               	/* stack size = 4 */
  42               	.L__stack_usage = 4
  43 000a 9A83      		std Y+2,r25
  44 000c 8983      		std Y+1,r24
 209:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	return frame->size - (frame->payload - frame->data);
  45               		.loc 1 209 0
  46 000e 8981      		ldd r24,Y+1
  47 0010 9A81      		ldd r25,Y+2
  48 0012 FC01      		movw r30,r24
  49 0014 4181      		ldd r20,Z+1
  50 0016 8981      		ldd r24,Y+1
  51 0018 9A81      		ldd r25,Y+2
  52 001a 8F57      		subi r24,127
  53 001c 9F4F      		sbci r25,-1
  54 001e FC01      		movw r30,r24
  55 0020 8081      		ld r24,Z
  56 0022 9181      		ldd r25,Z+1
  57 0024 9C01      		movw r18,r24
  58 0026 8981      		ldd r24,Y+1
  59 0028 9A81      		ldd r25,Y+2
  60 002a 0296      		adiw r24,2
  61 002c B901      		movw r22,r18
  62 002e 681B      		sub r22,r24
  63 0030 790B      		sbc r23,r25
  64 0032 CB01      		movw r24,r22
  65 0034 742F      		mov r23,r20
  66 0036 781B      		sub r23,r24
  67 0038 872F      		mov r24,r23
  68               	/* epilogue start */
 210:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** }
  69               		.loc 1 210 0
  70 003a 0F90      		pop __tmp_reg__
  71 003c 0F90      		pop __tmp_reg__
  72 003e DF91      		pop r29
  73 0040 CF91      		pop r28
  74 0042 0895      		ret
  75               		.cfi_endproc
  76               	.LFE65:
  78               		.section	.bss.nwkRxDuplicateRejectionTable,"aw",@nobits
  81               	nwkRxDuplicateRejectionTable:
  82 0000 0000 0000 		.zero	250
  82      0000 0000 
  82      0000 0000 
  82      0000 0000 
  82      0000 0000 
  83               		.section	.bss.nwkRxAckControl,"aw",@nobits
  86               	nwkRxAckControl:
  87 0000 00        		.zero	1
  88               		.section	.bss.nwkRxDuplicateRejectionTimer,"aw",@nobits
  91               	nwkRxDuplicateRejectionTimer:
  92 0000 0000 0000 		.zero	13
  92      0000 0000 
  92      0000 0000 
  92      00
  93               		.text
  94               	.global	nwkRxInit
  96               	nwkRxInit:
  97               	.LFB66:
  98               		.file 2 "../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \file nwkRx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \brief Receive routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkGroup.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRoute.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkCommand.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkSecurity.h"
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRouteDiscovery.h"
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Definitions ------------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL   100 /* ms */
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define DUPLICATE_REJECTION_TTL	\
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	((NWK_DUPLICATE_REJECTION_TTL /	\
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL) + 1)
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_SERVICE_ENDPOINT_ID    0
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Types ------------------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** enum {
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_RECEIVED = 0x20,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_DECRYPT  = 0x21,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_INDICATE = 0x22,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_ROUTE    = 0x23,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_FINISH   = 0x24,
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_BEACON   = 0x25,
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLBEACON 	= 0x26,
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLCOMMAND 	= 0x27,
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLACKFRAME = 0x28,
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** };
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** typedef struct NwkDuplicateRejectionEntry_t {
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint16_t src;
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t seq;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t mask;
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t ttl;
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** } NwkDuplicateRejectionEntry_t;
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Prototypes -------------------------------------------------------------*/
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer);
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind);
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Variables --------------------------------------------------------------*/
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static NwkDuplicateRejectionEntry_t nwkRxDuplicateRejectionTable[
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DUPLICATE_REJECTION_TABLE_SIZE];
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static uint8_t nwkRxAckControl;
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static SYS_Timer_t nwkRxDuplicateRejectionTimer;
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Implementations --------------------------------------------------------*/
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Initializes the Rx module
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxInit(void)
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
  99               		.loc 2 109 0
 100               		.cfi_startproc
 101 0044 CF93      		push r28
 102               	.LCFI4:
 103               		.cfi_def_cfa_offset 3
 104               		.cfi_offset 28, -2
 105 0046 DF93      		push r29
 106               	.LCFI5:
 107               		.cfi_def_cfa_offset 4
 108               		.cfi_offset 29, -3
 109 0048 1F92      		push __zero_reg__
 110               	.LCFI6:
 111               		.cfi_def_cfa_offset 5
 112 004a CDB7      		in r28,__SP_L__
 113 004c DEB7      		in r29,__SP_H__
 114               	.LCFI7:
 115               		.cfi_def_cfa_register 28
 116               	/* prologue: function */
 117               	/* frame size = 1 */
 118               	/* stack size = 3 */
 119               	.L__stack_usage = 3
 120               	.LBB2:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 121               		.loc 2 110 0
 122 004e 1982      		std Y+1,__zero_reg__
 123 0050 00C0      		rjmp .L4
 124               	.L5:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxDuplicateRejectionTable[i].ttl = 0;
 125               		.loc 2 111 0 discriminator 3
 126 0052 8981      		ldd r24,Y+1
 127 0054 282F      		mov r18,r24
 128 0056 30E0      		ldi r19,0
 129 0058 C901      		movw r24,r18
 130 005a 880F      		lsl r24
 131 005c 991F      		rol r25
 132 005e 880F      		lsl r24
 133 0060 991F      		rol r25
 134 0062 820F      		add r24,r18
 135 0064 931F      		adc r25,r19
 136 0066 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 137 0068 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 138 006a FC01      		movw r30,r24
 139 006c 1082      		st Z,__zero_reg__
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 140               		.loc 2 110 0 discriminator 3
 141 006e 8981      		ldd r24,Y+1
 142 0070 8F5F      		subi r24,lo8(-(1))
 143 0072 8983      		std Y+1,r24
 144               	.L4:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 145               		.loc 2 110 0 is_stmt 0 discriminator 1
 146 0074 8981      		ldd r24,Y+1
 147 0076 8233      		cpi r24,lo8(50)
 148 0078 00F0      		brlo .L5
 149               	.LBE2:
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.interval
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL;
 150               		.loc 2 115 0 is_stmt 1
 151 007a 84E6      		ldi r24,lo8(100)
 152 007c 90E0      		ldi r25,0
 153 007e A0E0      		ldi r26,0
 154 0080 B0E0      		ldi r27,0
 155 0082 8093 0000 		sts nwkRxDuplicateRejectionTimer+6,r24
 156 0086 9093 0000 		sts nwkRxDuplicateRejectionTimer+6+1,r25
 157 008a A093 0000 		sts nwkRxDuplicateRejectionTimer+6+2,r26
 158 008e B093 0000 		sts nwkRxDuplicateRejectionTimer+6+3,r27
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE;
 159               		.loc 2 116 0
 160 0092 1092 0000 		sts nwkRxDuplicateRejectionTimer+10,__zero_reg__
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.handler
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= nwkRxDuplicateRejectionTimerHandler;
 161               		.loc 2 118 0
 162 0096 80E0      		ldi r24,lo8(gs(nwkRxDuplicateRejectionTimerHandler))
 163 0098 90E0      		ldi r25,hi8(gs(nwkRxDuplicateRejectionTimerHandler))
 164 009a 9093 0000 		sts nwkRxDuplicateRejectionTimer+11+1,r25
 165 009e 8093 0000 		sts nwkRxDuplicateRejectionTimer+11,r24
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_OpenEndpoint(NWK_SERVICE_ENDPOINT_ID, nwkRxSeriveDataInd);
 166               		.loc 2 120 0
 167 00a2 60E0      		ldi r22,lo8(gs(nwkRxSeriveDataInd))
 168 00a4 70E0      		ldi r23,hi8(gs(nwkRxSeriveDataInd))
 169 00a6 80E0      		ldi r24,0
 170 00a8 0E94 0000 		call NWK_OpenEndpoint
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 171               		.loc 2 121 0
 172 00ac 0000      		nop
 173               	/* epilogue start */
 174 00ae 0F90      		pop __tmp_reg__
 175 00b0 DF91      		pop r29
 176 00b2 CF91      		pop r28
 177 00b4 0895      		ret
 178               		.cfi_endproc
 179               	.LFE66:
 181               		.section	.rodata
 182               	.LC0:
 183 0000 0A64 6174 		.string	"\ndata[%d] = %hhx"
 183      615B 2564 
 183      5D20 3D20 
 183      2568 6878 
 183      00
 184               	.LC1:
 185 0011 0A2A 2A2A 		.string	"\n******end rx*******"
 185      2A2A 2A65 
 185      6E64 2072 
 185      782A 2A2A 
 185      2A2A 2A2A 
 186               		.text
 187               		.weak	PHY_DataInd
 189               	PHY_DataInd:
 190               	.LFB67:
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void __attribute__((weak)) PHY_DataInd(PHY_DataInd_t *ind)
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 191               		.loc 2 126 0
 192               		.cfi_startproc
 193 00b6 CF93      		push r28
 194               	.LCFI8:
 195               		.cfi_def_cfa_offset 3
 196               		.cfi_offset 28, -2
 197 00b8 DF93      		push r29
 198               	.LCFI9:
 199               		.cfi_def_cfa_offset 4
 200               		.cfi_offset 29, -3
 201 00ba 00D0      		rcall .
 202 00bc 00D0      		rcall .
 203 00be 00D0      		rcall .
 204               	.LCFI10:
 205               		.cfi_def_cfa_offset 10
 206 00c0 CDB7      		in r28,__SP_L__
 207 00c2 DEB7      		in r29,__SP_H__
 208               	.LCFI11:
 209               		.cfi_def_cfa_register 28
 210               	/* prologue: function */
 211               	/* frame size = 6 */
 212               	/* stack size = 8 */
 213               	.L__stack_usage = 8
 214 00c4 9E83      		std Y+6,r25
 215 00c6 8D83      		std Y+5,r24
 216               	.LBB3:
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame;
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\n\nDataInd ind->data[0] %hhx", ind->data[0]);
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-Beacon frame
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		for (int i = 0; i < ind->size; i++)
 217               		.loc 2 130 0
 218 00c8 1C82      		std Y+4,__zero_reg__
 219 00ca 1B82      		std Y+3,__zero_reg__
 220 00cc 00C0      		rjmp .L7
 221               	.L8:
 222               	.LBB4:
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			printf("\ndata[%d] = %hhx", i, ind->data[i]);
 223               		.loc 2 132 0 discriminator 3
 224 00ce 8D81      		ldd r24,Y+5
 225 00d0 9E81      		ldd r25,Y+6
 226 00d2 FC01      		movw r30,r24
 227 00d4 2081      		ld r18,Z
 228 00d6 3181      		ldd r19,Z+1
 229 00d8 8B81      		ldd r24,Y+3
 230 00da 9C81      		ldd r25,Y+4
 231 00dc 820F      		add r24,r18
 232 00de 931F      		adc r25,r19
 233 00e0 FC01      		movw r30,r24
 234 00e2 8081      		ld r24,Z
 235 00e4 882F      		mov r24,r24
 236 00e6 90E0      		ldi r25,0
 237 00e8 292F      		mov r18,r25
 238 00ea 2F93      		push r18
 239 00ec 8F93      		push r24
 240 00ee 8C81      		ldd r24,Y+4
 241 00f0 8F93      		push r24
 242 00f2 8B81      		ldd r24,Y+3
 243 00f4 8F93      		push r24
 244 00f6 80E0      		ldi r24,lo8(.LC0)
 245 00f8 90E0      		ldi r25,hi8(.LC0)
 246 00fa 892F      		mov r24,r25
 247 00fc 8F93      		push r24
 248 00fe 80E0      		ldi r24,lo8(.LC0)
 249 0100 90E0      		ldi r25,hi8(.LC0)
 250 0102 8F93      		push r24
 251 0104 0E94 0000 		call printf
 252 0108 0F90      		pop __tmp_reg__
 253 010a 0F90      		pop __tmp_reg__
 254 010c 0F90      		pop __tmp_reg__
 255 010e 0F90      		pop __tmp_reg__
 256 0110 0F90      		pop __tmp_reg__
 257 0112 0F90      		pop __tmp_reg__
 258               	.LBE4:
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 259               		.loc 2 130 0 discriminator 3
 260 0114 8B81      		ldd r24,Y+3
 261 0116 9C81      		ldd r25,Y+4
 262 0118 0196      		adiw r24,1
 263 011a 9C83      		std Y+4,r25
 264 011c 8B83      		std Y+3,r24
 265               	.L7:
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 266               		.loc 2 130 0 is_stmt 0 discriminator 1
 267 011e 8D81      		ldd r24,Y+5
 268 0120 9E81      		ldd r25,Y+6
 269 0122 FC01      		movw r30,r24
 270 0124 8281      		ldd r24,Z+2
 271 0126 282F      		mov r18,r24
 272 0128 30E0      		ldi r19,0
 273 012a 8B81      		ldd r24,Y+3
 274 012c 9C81      		ldd r25,Y+4
 275 012e 8217      		cp r24,r18
 276 0130 9307      		cpc r25,r19
 277 0132 04F0      		brlt .L8
 278               	.LBE3:
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		printf("\n******end rx*******");
 279               		.loc 2 134 0 is_stmt 1
 280 0134 80E0      		ldi r24,lo8(.LC1)
 281 0136 90E0      		ldi r25,hi8(.LC1)
 282 0138 892F      		mov r24,r25
 283 013a 8F93      		push r24
 284 013c 80E0      		ldi r24,lo8(.LC1)
 285 013e 90E0      		ldi r25,hi8(.LC1)
 286 0140 8F93      		push r24
 287 0142 0E94 0000 		call printf
 288 0146 0F90      		pop __tmp_reg__
 289 0148 0F90      		pop __tmp_reg__
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(0x0c == ind->data[0])
 290               		.loc 2 135 0
 291 014a 8D81      		ldd r24,Y+5
 292 014c 9E81      		ldd r25,Y+6
 293 014e FC01      		movw r30,r24
 294 0150 8081      		ld r24,Z
 295 0152 9181      		ldd r25,Z+1
 296 0154 FC01      		movw r30,r24
 297 0156 8081      		ld r24,Z
 298 0158 8C30      		cpi r24,lo8(12)
 299 015a 01F4      		brne .L9
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameBeaconHeaderLLDN_t))
 300               		.loc 2 137 0
 301 015c 8D81      		ldd r24,Y+5
 302 015e 9E81      		ldd r25,Y+6
 303 0160 FC01      		movw r30,r24
 304 0162 8281      		ldd r24,Z+2
 305 0164 8730      		cpi r24,lo8(7)
 306 0166 00F0      		brlo .+2
 307 0168 00C0      		rjmp .L10
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 308               		.loc 2 139 0
 309 016a 00C0      		rjmp .L6
 310               	.L9:
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-MAC Command frame
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0xcc == ind->data[0] || 0x8c == ind->data[0])
 311               		.loc 2 143 0
 312 016c 8D81      		ldd r24,Y+5
 313 016e 9E81      		ldd r25,Y+6
 314 0170 FC01      		movw r30,r24
 315 0172 8081      		ld r24,Z
 316 0174 9181      		ldd r25,Z+1
 317 0176 FC01      		movw r30,r24
 318 0178 8081      		ld r24,Z
 319 017a 8C3C      		cpi r24,lo8(-52)
 320 017c 01F0      		breq .L12
 321               		.loc 2 143 0 is_stmt 0 discriminator 1
 322 017e 8D81      		ldd r24,Y+5
 323 0180 9E81      		ldd r25,Y+6
 324 0182 FC01      		movw r30,r24
 325 0184 8081      		ld r24,Z
 326 0186 9181      		ldd r25,Z+1
 327 0188 FC01      		movw r30,r24
 328 018a 8081      		ld r24,Z
 329 018c 8C38      		cpi r24,lo8(-116)
 330 018e 01F4      		brne .L13
 331               	.L12:
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameGeneralHeaderLLDN_t))
 332               		.loc 2 145 0 is_stmt 1
 333 0190 8D81      		ldd r24,Y+5
 334 0192 9E81      		ldd r25,Y+6
 335 0194 FC01      		movw r30,r24
 336 0196 8281      		ldd r24,Z+2
 337 0198 8330      		cpi r24,lo8(3)
 338 019a 00F0      		brlo .+2
 339 019c 00C0      		rjmp .L10
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 340               		.loc 2 147 0
 341 019e 00C0      		rjmp .L6
 342               	.L13:
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x88 == ind->data[1])
 343               		.loc 2 150 0
 344 01a0 8D81      		ldd r24,Y+5
 345 01a2 9E81      		ldd r25,Y+6
 346 01a4 FC01      		movw r30,r24
 347 01a6 8081      		ld r24,Z
 348 01a8 9181      		ldd r25,Z+1
 349 01aa 0196      		adiw r24,1
 350 01ac FC01      		movw r30,r24
 351 01ae 8081      		ld r24,Z
 352 01b0 8838      		cpi r24,lo8(-120)
 353 01b2 01F4      		brne .L15
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x61 != ind->data[0] && 0x41 != ind->data[0]) || ind->size < sizeof(NwkFrameHeader_t))
 354               		.loc 2 152 0
 355 01b4 8D81      		ldd r24,Y+5
 356 01b6 9E81      		ldd r25,Y+6
 357 01b8 FC01      		movw r30,r24
 358 01ba 8081      		ld r24,Z
 359 01bc 9181      		ldd r25,Z+1
 360 01be FC01      		movw r30,r24
 361 01c0 8081      		ld r24,Z
 362 01c2 8136      		cpi r24,lo8(97)
 363 01c4 01F0      		breq .L16
 364               		.loc 2 152 0 is_stmt 0 discriminator 1
 365 01c6 8D81      		ldd r24,Y+5
 366 01c8 9E81      		ldd r25,Y+6
 367 01ca FC01      		movw r30,r24
 368 01cc 8081      		ld r24,Z
 369 01ce 9181      		ldd r25,Z+1
 370 01d0 FC01      		movw r30,r24
 371 01d2 8081      		ld r24,Z
 372 01d4 8134      		cpi r24,lo8(65)
 373 01d6 01F0      		breq .+2
 374 01d8 00C0      		rjmp .L30
 375               	.L16:
 376               		.loc 2 152 0 discriminator 3
 377 01da 8D81      		ldd r24,Y+5
 378 01dc 9E81      		ldd r25,Y+6
 379 01de FC01      		movw r30,r24
 380 01e0 8281      		ldd r24,Z+2
 381 01e2 8031      		cpi r24,lo8(16)
 382 01e4 00F4      		brsh .L10
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 383               		.loc 2 154 0 is_stmt 1
 384 01e6 00C0      		rjmp .L30
 385               	.L15:
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x80 == ind->data[1])
 386               		.loc 2 157 0
 387 01e8 8D81      		ldd r24,Y+5
 388 01ea 9E81      		ldd r25,Y+6
 389 01ec FC01      		movw r30,r24
 390 01ee 8081      		ld r24,Z
 391 01f0 9181      		ldd r25,Z+1
 392 01f2 0196      		adiw r24,1
 393 01f4 FC01      		movw r30,r24
 394 01f6 8081      		ld r24,Z
 395 01f8 8038      		cpi r24,lo8(-128)
 396 01fa 01F0      		breq .+2
 397 01fc 00C0      		rjmp .L31
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x00 != ind->data[0]) || ind->size < (sizeof(NwkFrameBeaconHeader_t)))
 398               		.loc 2 159 0
 399 01fe 8D81      		ldd r24,Y+5
 400 0200 9E81      		ldd r25,Y+6
 401 0202 FC01      		movw r30,r24
 402 0204 8081      		ld r24,Z
 403 0206 9181      		ldd r25,Z+1
 404 0208 FC01      		movw r30,r24
 405 020a 8081      		ld r24,Z
 406 020c 8823      		tst r24
 407 020e 01F0      		breq .+2
 408 0210 00C0      		rjmp .L32
 409               		.loc 2 159 0 is_stmt 0 discriminator 1
 410 0212 8D81      		ldd r24,Y+5
 411 0214 9E81      		ldd r25,Y+6
 412 0216 FC01      		movw r30,r24
 413 0218 8281      		ldd r24,Z+2
 414 021a 8B30      		cpi r24,lo8(11)
 415 021c 00F4      		brsh .+2
 416 021e 00C0      		rjmp .L32
 417               	.L10:
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(ind->data[1] == 0x88 || ind->data[1] == 0x80)
 418               		.loc 2 169 0 is_stmt 1
 419 0220 8D81      		ldd r24,Y+5
 420 0222 9E81      		ldd r25,Y+6
 421 0224 FC01      		movw r30,r24
 422 0226 8081      		ld r24,Z
 423 0228 9181      		ldd r25,Z+1
 424 022a 0196      		adiw r24,1
 425 022c FC01      		movw r30,r24
 426 022e 8081      		ld r24,Z
 427 0230 8838      		cpi r24,lo8(-120)
 428 0232 01F0      		breq .L20
 429               		.loc 2 169 0 is_stmt 0 discriminator 1
 430 0234 8D81      		ldd r24,Y+5
 431 0236 9E81      		ldd r25,Y+6
 432 0238 FC01      		movw r30,r24
 433 023a 8081      		ld r24,Z
 434 023c 9181      		ldd r25,Z+1
 435 023e 0196      		adiw r24,1
 436 0240 FC01      		movw r30,r24
 437 0242 8081      		ld r24,Z
 438 0244 8038      		cpi r24,lo8(-128)
 439 0246 01F4      		brne .L21
 440               	.L20:
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc())) {
 441               		.loc 2 171 0 is_stmt 1
 442 0248 0E94 0000 		call nwkFrameAlloc
 443 024c 9A83      		std Y+2,r25
 444 024e 8983      		std Y+1,r24
 445 0250 8981      		ldd r24,Y+1
 446 0252 9A81      		ldd r25,Y+2
 447 0254 892B      		or r24,r25
 448 0256 01F4      		brne .+2
 449 0258 00C0      		rjmp .L33
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame received is NwkFrameHeader change state to Receveid
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is a 802.15.4 beacon change state to Beacon
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = ((0x88 == ind->data[1]) ? NWK_RX_STATE_RECEIVED : NWK_RX_STATE_BEACON);
 450               		.loc 2 176 0
 451 025a 8D81      		ldd r24,Y+5
 452 025c 9E81      		ldd r25,Y+6
 453 025e FC01      		movw r30,r24
 454 0260 8081      		ld r24,Z
 455 0262 9181      		ldd r25,Z+1
 456 0264 0196      		adiw r24,1
 457 0266 FC01      		movw r30,r24
 458 0268 8081      		ld r24,Z
 459 026a 8838      		cpi r24,lo8(-120)
 460 026c 01F4      		brne .L23
 461               		.loc 2 176 0 is_stmt 0 discriminator 1
 462 026e 20E2      		ldi r18,lo8(32)
 463 0270 00C0      		rjmp .L24
 464               	.L23:
 465               		.loc 2 176 0 discriminator 2
 466 0272 25E2      		ldi r18,lo8(37)
 467               	.L24:
 468               		.loc 2 176 0 discriminator 4
 469 0274 8981      		ldd r24,Y+1
 470 0276 9A81      		ldd r25,Y+2
 471 0278 FC01      		movw r30,r24
 472 027a 2083      		st Z,r18
 473 027c 00C0      		rjmp .L25
 474               	.L21:
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// allocate frame buffer according to received frame
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(ind->data[0] == 0x0c)
 475               		.loc 2 179 0 is_stmt 1
 476 027e 8D81      		ldd r24,Y+5
 477 0280 9E81      		ldd r25,Y+6
 478 0282 FC01      		movw r30,r24
 479 0284 8081      		ld r24,Z
 480 0286 9181      		ldd r25,Z+1
 481 0288 FC01      		movw r30,r24
 482 028a 8081      		ld r24,Z
 483 028c 8C30      		cpi r24,lo8(12)
 484 028e 01F4      		brne .L26
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-Beacon frame
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(true))){
 485               		.loc 2 182 0
 486 0290 81E0      		ldi r24,lo8(1)
 487 0292 0E94 0000 		call nwkFrameAlloc_LLDN
 488 0296 9A83      		std Y+2,r25
 489 0298 8983      		std Y+1,r24
 490 029a 8981      		ldd r24,Y+1
 491 029c 9A81      		ldd r25,Y+2
 492 029e 892B      		or r24,r25
 493 02a0 01F4      		brne .+2
 494 02a2 00C0      		rjmp .L34
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-Beacon change state to LLBEACON
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLBEACON;
 495               		.loc 2 186 0
 496 02a4 8981      		ldd r24,Y+1
 497 02a6 9A81      		ldd r25,Y+2
 498 02a8 26E2      		ldi r18,lo8(38)
 499 02aa FC01      		movw r30,r24
 500 02ac 2083      		st Z,r18
 501 02ae 00C0      		rjmp .L25
 502               	.L26:
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-MAC command or LL-Data frame
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(false))){
 503               		.loc 2 191 0
 504 02b0 80E0      		ldi r24,0
 505 02b2 0E94 0000 		call nwkFrameAlloc_LLDN
 506 02b6 9A83      		std Y+2,r25
 507 02b8 8983      		std Y+1,r24
 508 02ba 8981      		ldd r24,Y+1
 509 02bc 9A81      		ldd r25,Y+2
 510 02be 892B      		or r24,r25
 511 02c0 01F4      		brne .+2
 512 02c2 00C0      		rjmp .L35
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-AckFrame change state to LLACKFRAME
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-MACComand change state to LLCOMMAND
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->data[0] == 0x8c) 
 513               		.loc 2 196 0
 514 02c4 8D81      		ldd r24,Y+5
 515 02c6 9E81      		ldd r25,Y+6
 516 02c8 FC01      		movw r30,r24
 517 02ca 8081      		ld r24,Z
 518 02cc 9181      		ldd r25,Z+1
 519 02ce FC01      		movw r30,r24
 520 02d0 8081      		ld r24,Z
 521 02d2 8C38      		cpi r24,lo8(-116)
 522 02d4 01F4      		brne .L29
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLACKFRAME;
 523               		.loc 2 197 0
 524 02d6 8981      		ldd r24,Y+1
 525 02d8 9A81      		ldd r25,Y+2
 526 02da 28E2      		ldi r18,lo8(40)
 527 02dc FC01      		movw r30,r24
 528 02de 2083      		st Z,r18
 529 02e0 00C0      		rjmp .L25
 530               	.L29:
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{ 
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_LLCOMMAND;
 531               		.loc 2 200 0
 532 02e2 8981      		ldd r24,Y+1
 533 02e4 9A81      		ldd r25,Y+2
 534 02e6 27E2      		ldi r18,lo8(39)
 535 02e8 FC01      		movw r30,r24
 536 02ea 2083      		st Z,r18
 537               	.L25:
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size = ind->size;
 538               		.loc 2 204 0
 539 02ec 8D81      		ldd r24,Y+5
 540 02ee 9E81      		ldd r25,Y+6
 541 02f0 FC01      		movw r30,r24
 542 02f2 2281      		ldd r18,Z+2
 543 02f4 8981      		ldd r24,Y+1
 544 02f6 9A81      		ldd r25,Y+2
 545 02f8 FC01      		movw r30,r24
 546 02fa 2183      		std Z+1,r18
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\nframe->size = %hhx", frame->size);
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.lqi = ind->lqi;
 547               		.loc 2 206 0
 548 02fc 8D81      		ldd r24,Y+5
 549 02fe 9E81      		ldd r25,Y+6
 550 0300 FC01      		movw r30,r24
 551 0302 2381      		ldd r18,Z+3
 552 0304 8981      		ldd r24,Y+1
 553 0306 9A81      		ldd r25,Y+2
 554 0308 8D57      		subi r24,125
 555 030a 9F4F      		sbci r25,-1
 556 030c FC01      		movw r30,r24
 557 030e 2083      		st Z,r18
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.rssi = ind->rssi;
 558               		.loc 2 207 0
 559 0310 8D81      		ldd r24,Y+5
 560 0312 9E81      		ldd r25,Y+6
 561 0314 FC01      		movw r30,r24
 562 0316 2481      		ldd r18,Z+4
 563 0318 8981      		ldd r24,Y+1
 564 031a 9A81      		ldd r25,Y+2
 565 031c 8C57      		subi r24,124
 566 031e 9F4F      		sbci r25,-1
 567 0320 FC01      		movw r30,r24
 568 0322 2083      		st Z,r18
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	memcpy(frame->data, ind->data, ind->size);
 569               		.loc 2 208 0
 570 0324 8D81      		ldd r24,Y+5
 571 0326 9E81      		ldd r25,Y+6
 572 0328 FC01      		movw r30,r24
 573 032a 8281      		ldd r24,Z+2
 574 032c 482F      		mov r20,r24
 575 032e 50E0      		ldi r21,0
 576 0330 8D81      		ldd r24,Y+5
 577 0332 9E81      		ldd r25,Y+6
 578 0334 FC01      		movw r30,r24
 579 0336 2081      		ld r18,Z
 580 0338 3181      		ldd r19,Z+1
 581 033a 8981      		ldd r24,Y+1
 582 033c 9A81      		ldd r25,Y+2
 583 033e 0296      		adiw r24,2
 584 0340 B901      		movw r22,r18
 585 0342 0E94 0000 		call memcpy
 586 0346 00C0      		rjmp .L6
 587               	.L30:
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 588               		.loc 2 154 0
 589 0348 0000      		nop
 590 034a 00C0      		rjmp .L6
 591               	.L31:
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 592               		.loc 2 166 0
 593 034c 0000      		nop
 594 034e 00C0      		rjmp .L6
 595               	.L32:
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 596               		.loc 2 161 0
 597 0350 0000      		nop
 598 0352 00C0      		rjmp .L6
 599               	.L33:
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 600               		.loc 2 172 0
 601 0354 0000      		nop
 602 0356 00C0      		rjmp .L6
 603               	.L34:
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 604               		.loc 2 183 0
 605 0358 0000      		nop
 606 035a 00C0      		rjmp .L6
 607               	.L35:
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 608               		.loc 2 192 0
 609 035c 0000      		nop
 610               	.L6:
 611               	/* epilogue start */
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** // 	printf("\nframe->payload[2] = %hhx", frame->payload[2]);
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 612               		.loc 2 211 0
 613 035e 2696      		adiw r28,6
 614 0360 0FB6      		in __tmp_reg__,__SREG__
 615 0362 F894      		cli
 616 0364 DEBF      		out __SP_H__,r29
 617 0366 0FBE      		out __SREG__,__tmp_reg__
 618 0368 CDBF      		out __SP_L__,r28
 619 036a DF91      		pop r29
 620 036c CF91      		pop r28
 621 036e 0895      		ret
 622               		.cfi_endproc
 623               	.LFE67:
 626               	nwkRxSendAck:
 627               	.LFB68:
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxSendAck(NwkFrame_t *frame)
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 628               		.loc 2 216 0
 629               		.cfi_startproc
 630 0370 CF93      		push r28
 631               	.LCFI12:
 632               		.cfi_def_cfa_offset 3
 633               		.cfi_offset 28, -2
 634 0372 DF93      		push r29
 635               	.LCFI13:
 636               		.cfi_def_cfa_offset 4
 637               		.cfi_offset 29, -3
 638 0374 00D0      		rcall .
 639 0376 00D0      		rcall .
 640 0378 00D0      		rcall .
 641               	.LCFI14:
 642               		.cfi_def_cfa_offset 10
 643 037a CDB7      		in r28,__SP_L__
 644 037c DEB7      		in r29,__SP_H__
 645               	.LCFI15:
 646               		.cfi_def_cfa_register 28
 647               	/* prologue: function */
 648               	/* frame size = 6 */
 649               	/* stack size = 8 */
 650               	.L__stack_usage = 8
 651 037e 9E83      		std Y+6,r25
 652 0380 8D83      		std Y+5,r24
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *ack;
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkCommandAck_t *command;
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (ack = nwkFrameAlloc())) {
 653               		.loc 2 220 0
 654 0382 0E94 0000 		call nwkFrameAlloc
 655 0386 9A83      		std Y+2,r25
 656 0388 8983      		std Y+1,r24
 657 038a 8981      		ldd r24,Y+1
 658 038c 9A81      		ldd r25,Y+2
 659 038e 892B      		or r24,r25
 660 0390 01F4      		brne .+2
 661 0392 00C0      		rjmp .L39
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size += sizeof(NwkFrameHeader_t);
 662               		.loc 2 224 0
 663 0394 8D81      		ldd r24,Y+5
 664 0396 9E81      		ldd r25,Y+6
 665 0398 FC01      		movw r30,r24
 666 039a 8181      		ldd r24,Z+1
 667 039c 20E1      		ldi r18,lo8(16)
 668 039e 280F      		add r18,r24
 669 03a0 8D81      		ldd r24,Y+5
 670 03a2 9E81      		ldd r25,Y+6
 671 03a4 FC01      		movw r30,r24
 672 03a6 2183      		std Z+1,r18
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->payload += sizeof(NwkFrameHeader_t);
 673               		.loc 2 225 0
 674 03a8 8D81      		ldd r24,Y+5
 675 03aa 9E81      		ldd r25,Y+6
 676 03ac 8F57      		subi r24,127
 677 03ae 9F4F      		sbci r25,-1
 678 03b0 FC01      		movw r30,r24
 679 03b2 8081      		ld r24,Z
 680 03b4 9181      		ldd r25,Z+1
 681 03b6 9C01      		movw r18,r24
 682 03b8 205F      		subi r18,-16
 683 03ba 3F4F      		sbci r19,-1
 684 03bc 8D81      		ldd r24,Y+5
 685 03be 9E81      		ldd r25,Y+6
 686 03c0 8F57      		subi r24,127
 687 03c2 9F4F      		sbci r25,-1
 688 03c4 FC01      		movw r30,r24
 689 03c6 3183      		std Z+1,r19
 690 03c8 2083      		st Z,r18
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkFrameCommandInit(ack);
 691               		.loc 2 227 0
 692 03ca 8981      		ldd r24,Y+1
 693 03cc 9A81      		ldd r25,Y+2
 694 03ce 0E94 0000 		call nwkFrameCommandInit
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->size += sizeof(NwkCommandAck_t);
 695               		.loc 2 229 0
 696 03d2 8981      		ldd r24,Y+1
 697 03d4 9A81      		ldd r25,Y+2
 698 03d6 FC01      		movw r30,r24
 699 03d8 8181      		ldd r24,Z+1
 700 03da 23E0      		ldi r18,lo8(3)
 701 03dc 280F      		add r18,r24
 702 03de 8981      		ldd r24,Y+1
 703 03e0 9A81      		ldd r25,Y+2
 704 03e2 FC01      		movw r30,r24
 705 03e4 2183      		std Z+1,r18
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->tx.confirm = NULL;
 706               		.loc 2 230 0
 707 03e6 8981      		ldd r24,Y+1
 708 03e8 9A81      		ldd r25,Y+2
 709 03ea 8957      		subi r24,121
 710 03ec 9F4F      		sbci r25,-1
 711 03ee FC01      		movw r30,r24
 712 03f0 1182      		std Z+1,__zero_reg__
 713 03f2 1082      		st Z,__zero_reg__
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkFcf.security = frame->header.nwkFcf.security;
 714               		.loc 2 232 0
 715 03f4 8D81      		ldd r24,Y+5
 716 03f6 9E81      		ldd r25,Y+6
 717 03f8 FC01      		movw r30,r24
 718 03fa 8385      		ldd r24,Z+11
 719 03fc 81FB      		bst r24,1
 720 03fe 2227      		clr r18
 721 0400 20F9      		bld r18,0
 722 0402 8981      		ldd r24,Y+1
 723 0404 9A81      		ldd r25,Y+2
 724 0406 2170      		andi r18,lo8(1)
 725 0408 220F      		lsl r18
 726 040a FC01      		movw r30,r24
 727 040c 3385      		ldd r19,Z+11
 728 040e 3D7F      		andi r19,lo8(-3)
 729 0410 232B      		or r18,r19
 730 0412 FC01      		movw r30,r24
 731 0414 2387      		std Z+11,r18
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 732               		.loc 2 233 0
 733 0416 8D81      		ldd r24,Y+5
 734 0418 9E81      		ldd r25,Y+6
 735 041a FC01      		movw r30,r24
 736 041c 2585      		ldd r18,Z+13
 737 041e 3685      		ldd r19,Z+14
 738 0420 8981      		ldd r24,Y+1
 739 0422 9A81      		ldd r25,Y+2
 740 0424 FC01      		movw r30,r24
 741 0426 308B      		std Z+16,r19
 742 0428 2787      		std Z+15,r18
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command = (NwkCommandAck_t *)ack->payload;
 743               		.loc 2 235 0
 744 042a 8981      		ldd r24,Y+1
 745 042c 9A81      		ldd r25,Y+2
 746 042e 8F57      		subi r24,127
 747 0430 9F4F      		sbci r25,-1
 748 0432 FC01      		movw r30,r24
 749 0434 8081      		ld r24,Z
 750 0436 9181      		ldd r25,Z+1
 751 0438 9C83      		std Y+4,r25
 752 043a 8B83      		std Y+3,r24
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->id = NWK_COMMAND_ACK;
 753               		.loc 2 236 0
 754 043c 8B81      		ldd r24,Y+3
 755 043e 9C81      		ldd r25,Y+4
 756 0440 FC01      		movw r30,r24
 757 0442 1082      		st Z,__zero_reg__
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->control = nwkRxAckControl;
 758               		.loc 2 237 0
 759 0444 2091 0000 		lds r18,nwkRxAckControl
 760 0448 8B81      		ldd r24,Y+3
 761 044a 9C81      		ldd r25,Y+4
 762 044c FC01      		movw r30,r24
 763 044e 2283      		std Z+2,r18
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->seq = frame->header.nwkSeq;
 764               		.loc 2 238 0
 765 0450 8D81      		ldd r24,Y+5
 766 0452 9E81      		ldd r25,Y+6
 767 0454 FC01      		movw r30,r24
 768 0456 2485      		ldd r18,Z+12
 769 0458 8B81      		ldd r24,Y+3
 770 045a 9C81      		ldd r25,Y+4
 771 045c FC01      		movw r30,r24
 772 045e 2183      		std Z+1,r18
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkTxFrame(ack);
 773               		.loc 2 240 0
 774 0460 8981      		ldd r24,Y+1
 775 0462 9A81      		ldd r25,Y+2
 776 0464 0E94 0000 		call nwkTxFrame
 777 0468 00C0      		rjmp .L36
 778               	.L39:
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 779               		.loc 2 221 0
 780 046a 0000      		nop
 781               	.L36:
 782               	/* epilogue start */
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 783               		.loc 2 241 0
 784 046c 2696      		adiw r28,6
 785 046e 0FB6      		in __tmp_reg__,__SREG__
 786 0470 F894      		cli
 787 0472 DEBF      		out __SP_H__,r29
 788 0474 0FBE      		out __SREG__,__tmp_reg__
 789 0476 CDBF      		out __SP_L__,r28
 790 0478 DF91      		pop r29
 791 047a CF91      		pop r28
 792 047c 0895      		ret
 793               		.cfi_endproc
 794               	.LFE68:
 796               	.global	NWK_SetAckControl
 798               	NWK_SetAckControl:
 799               	.LFB69:
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void NWK_SetAckControl(uint8_t control)
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 800               		.loc 2 246 0
 801               		.cfi_startproc
 802 047e CF93      		push r28
 803               	.LCFI16:
 804               		.cfi_def_cfa_offset 3
 805               		.cfi_offset 28, -2
 806 0480 DF93      		push r29
 807               	.LCFI17:
 808               		.cfi_def_cfa_offset 4
 809               		.cfi_offset 29, -3
 810 0482 1F92      		push __zero_reg__
 811               	.LCFI18:
 812               		.cfi_def_cfa_offset 5
 813 0484 CDB7      		in r28,__SP_L__
 814 0486 DEB7      		in r29,__SP_H__
 815               	.LCFI19:
 816               		.cfi_def_cfa_register 28
 817               	/* prologue: function */
 818               	/* frame size = 1 */
 819               	/* stack size = 3 */
 820               	.L__stack_usage = 3
 821 0488 8983      		std Y+1,r24
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = control;
 822               		.loc 2 247 0
 823 048a 8981      		ldd r24,Y+1
 824 048c 8093 0000 		sts nwkRxAckControl,r24
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 825               		.loc 2 248 0
 826 0490 0000      		nop
 827               	/* epilogue start */
 828 0492 0F90      		pop __tmp_reg__
 829 0494 DF91      		pop r29
 830 0496 CF91      		pop r28
 831 0498 0895      		ret
 832               		.cfi_endproc
 833               	.LFE69:
 836               	nwkRxDuplicateRejectionTimerHandler:
 837               	.LFB70:
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxDecryptConf(NwkFrame_t *frame, bool status)
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (status) {
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_INDICATE;
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else {
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_FINISH;
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer)
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 838               		.loc 2 268 0
 839               		.cfi_startproc
 840 049a CF93      		push r28
 841               	.LCFI20:
 842               		.cfi_def_cfa_offset 3
 843               		.cfi_offset 28, -2
 844 049c DF93      		push r29
 845               	.LCFI21:
 846               		.cfi_def_cfa_offset 4
 847               		.cfi_offset 29, -3
 848 049e 00D0      		rcall .
 849 04a0 00D0      		rcall .
 850               	.LCFI22:
 851               		.cfi_def_cfa_offset 8
 852 04a2 CDB7      		in r28,__SP_L__
 853 04a4 DEB7      		in r29,__SP_H__
 854               	.LCFI23:
 855               		.cfi_def_cfa_register 28
 856               	/* prologue: function */
 857               	/* frame size = 4 */
 858               	/* stack size = 6 */
 859               	.L__stack_usage = 6
 860 04a6 9C83      		std Y+4,r25
 861 04a8 8B83      		std Y+3,r24
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool restart = false;
 862               		.loc 2 269 0
 863 04aa 1982      		std Y+1,__zero_reg__
 864               	.LBB5:
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 865               		.loc 2 271 0
 866 04ac 1A82      		std Y+2,__zero_reg__
 867 04ae 00C0      		rjmp .L42
 868               	.L44:
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 869               		.loc 2 272 0
 870 04b0 8A81      		ldd r24,Y+2
 871 04b2 282F      		mov r18,r24
 872 04b4 30E0      		ldi r19,0
 873 04b6 C901      		movw r24,r18
 874 04b8 880F      		lsl r24
 875 04ba 991F      		rol r25
 876 04bc 880F      		lsl r24
 877 04be 991F      		rol r25
 878 04c0 820F      		add r24,r18
 879 04c2 931F      		adc r25,r19
 880 04c4 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 881 04c6 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 882 04c8 FC01      		movw r30,r24
 883 04ca 8081      		ld r24,Z
 884 04cc 8823      		tst r24
 885 04ce 01F0      		breq .L43
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxDuplicateRejectionTable[i].ttl--;
 886               		.loc 2 273 0
 887 04d0 8A81      		ldd r24,Y+2
 888 04d2 282F      		mov r18,r24
 889 04d4 30E0      		ldi r19,0
 890 04d6 C901      		movw r24,r18
 891 04d8 880F      		lsl r24
 892 04da 991F      		rol r25
 893 04dc 880F      		lsl r24
 894 04de 991F      		rol r25
 895 04e0 820F      		add r24,r18
 896 04e2 931F      		adc r25,r19
 897 04e4 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 898 04e6 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 899 04e8 FC01      		movw r30,r24
 900 04ea 8081      		ld r24,Z
 901 04ec 4FEF      		ldi r20,lo8(-1)
 902 04ee 480F      		add r20,r24
 903 04f0 C901      		movw r24,r18
 904 04f2 880F      		lsl r24
 905 04f4 991F      		rol r25
 906 04f6 880F      		lsl r24
 907 04f8 991F      		rol r25
 908 04fa 820F      		add r24,r18
 909 04fc 931F      		adc r25,r19
 910 04fe 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 911 0500 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 912 0502 FC01      		movw r30,r24
 913 0504 4083      		st Z,r20
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			restart = true;
 914               		.loc 2 274 0
 915 0506 81E0      		ldi r24,lo8(1)
 916 0508 8983      		std Y+1,r24
 917               	.L43:
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 918               		.loc 2 271 0 discriminator 2
 919 050a 8A81      		ldd r24,Y+2
 920 050c 8F5F      		subi r24,lo8(-(1))
 921 050e 8A83      		std Y+2,r24
 922               	.L42:
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 923               		.loc 2 271 0 is_stmt 0 discriminator 1
 924 0510 8A81      		ldd r24,Y+2
 925 0512 8233      		cpi r24,lo8(50)
 926 0514 00F0      		brlo .L44
 927               	.LBE5:
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (restart) {
 928               		.loc 2 278 0 is_stmt 1
 929 0516 8981      		ldd r24,Y+1
 930 0518 8823      		tst r24
 931 051a 01F0      		breq .L46
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		SYS_TimerStart(timer);
 932               		.loc 2 279 0
 933 051c 8B81      		ldd r24,Y+3
 934 051e 9C81      		ldd r25,Y+4
 935 0520 0E94 0000 		call SYS_TimerStart
 936               	.L46:
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 937               		.loc 2 281 0
 938 0524 0000      		nop
 939               	/* epilogue start */
 940 0526 0F90      		pop __tmp_reg__
 941 0528 0F90      		pop __tmp_reg__
 942 052a 0F90      		pop __tmp_reg__
 943 052c 0F90      		pop __tmp_reg__
 944 052e DF91      		pop r29
 945 0530 CF91      		pop r28
 946 0532 0895      		ret
 947               		.cfi_endproc
 948               	.LFE70:
 951               	nwkRxRejectDuplicate:
 952               	.LFB71:
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxRejectDuplicate(NwkFrameHeader_t *header)
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 953               		.loc 2 286 0
 954               		.cfi_startproc
 955 0534 CF93      		push r28
 956               	.LCFI24:
 957               		.cfi_def_cfa_offset 3
 958               		.cfi_offset 28, -2
 959 0536 DF93      		push r29
 960               	.LCFI25:
 961               		.cfi_def_cfa_offset 4
 962               		.cfi_offset 29, -3
 963 0538 CDB7      		in r28,__SP_L__
 964 053a DEB7      		in r29,__SP_H__
 965               	.LCFI26:
 966               		.cfi_def_cfa_register 28
 967 053c 2997      		sbiw r28,9
 968               	.LCFI27:
 969               		.cfi_def_cfa_offset 13
 970 053e 0FB6      		in __tmp_reg__,__SREG__
 971 0540 F894      		cli
 972 0542 DEBF      		out __SP_H__,r29
 973 0544 0FBE      		out __SREG__,__tmp_reg__
 974 0546 CDBF      		out __SP_L__,r28
 975               	/* prologue: function */
 976               	/* frame size = 9 */
 977               	/* stack size = 11 */
 978               	.L__stack_usage = 11
 979 0548 9987      		std Y+9,r25
 980 054a 8887      		std Y+8,r24
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *entry;
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *freeEntry = NULL;
 981               		.loc 2 288 0
 982 054c 1A82      		std Y+2,__zero_reg__
 983 054e 1982      		std Y+1,__zero_reg__
 984               	.LBB6:
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 985               		.loc 2 290 0
 986 0550 1B82      		std Y+3,__zero_reg__
 987 0552 00C0      		rjmp .L48
 988               	.L54:
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 989               		.loc 2 291 0
 990 0554 8B81      		ldd r24,Y+3
 991 0556 282F      		mov r18,r24
 992 0558 30E0      		ldi r19,0
 993 055a C901      		movw r24,r18
 994 055c 880F      		lsl r24
 995 055e 991F      		rol r25
 996 0560 880F      		lsl r24
 997 0562 991F      		rol r25
 998 0564 820F      		add r24,r18
 999 0566 931F      		adc r25,r19
 1000 0568 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable))
 1001 056a 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable))
 1002 056c 9D83      		std Y+5,r25
 1003 056e 8C83      		std Y+4,r24
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (entry->ttl && header->nwkSrcAddr == entry->src) {
 1004               		.loc 2 293 0
 1005 0570 8C81      		ldd r24,Y+4
 1006 0572 9D81      		ldd r25,Y+5
 1007 0574 FC01      		movw r30,r24
 1008 0576 8481      		ldd r24,Z+4
 1009 0578 8823      		tst r24
 1010 057a 01F4      		brne .+2
 1011 057c 00C0      		rjmp .L49
 1012               		.loc 2 293 0 is_stmt 0 discriminator 1
 1013 057e 8885      		ldd r24,Y+8
 1014 0580 9985      		ldd r25,Y+9
 1015 0582 FC01      		movw r30,r24
 1016 0584 2385      		ldd r18,Z+11
 1017 0586 3485      		ldd r19,Z+12
 1018 0588 8C81      		ldd r24,Y+4
 1019 058a 9D81      		ldd r25,Y+5
 1020 058c FC01      		movw r30,r24
 1021 058e 8081      		ld r24,Z
 1022 0590 9181      		ldd r25,Z+1
 1023 0592 2817      		cp r18,r24
 1024 0594 3907      		cpc r19,r25
 1025 0596 01F0      		breq .+2
 1026 0598 00C0      		rjmp .L49
 1027               	.LBB7:
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			uint8_t diff = (int8_t)entry->seq - header->nwkSeq;
 1028               		.loc 2 294 0 is_stmt 1
 1029 059a 8C81      		ldd r24,Y+4
 1030 059c 9D81      		ldd r25,Y+5
 1031 059e FC01      		movw r30,r24
 1032 05a0 2281      		ldd r18,Z+2
 1033 05a2 8885      		ldd r24,Y+8
 1034 05a4 9985      		ldd r25,Y+9
 1035 05a6 FC01      		movw r30,r24
 1036 05a8 8285      		ldd r24,Z+10
 1037 05aa F22F      		mov r31,r18
 1038 05ac F81B      		sub r31,r24
 1039 05ae 8F2F      		mov r24,r31
 1040 05b0 8E83      		std Y+6,r24
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (diff < 8) {
 1041               		.loc 2 296 0
 1042 05b2 8E81      		ldd r24,Y+6
 1043 05b4 8830      		cpi r24,lo8(8)
 1044 05b6 00F4      		brsh .L50
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				if (entry->mask & (1 << diff)) {
 1045               		.loc 2 297 0
 1046 05b8 8C81      		ldd r24,Y+4
 1047 05ba 9D81      		ldd r25,Y+5
 1048 05bc FC01      		movw r30,r24
 1049 05be 8381      		ldd r24,Z+3
 1050 05c0 882F      		mov r24,r24
 1051 05c2 90E0      		ldi r25,0
 1052 05c4 2E81      		ldd r18,Y+6
 1053 05c6 222F      		mov r18,r18
 1054 05c8 30E0      		ldi r19,0
 1055 05ca 00C0      		rjmp 2f
 1056               		1:
 1057 05cc 9595      		asr r25
 1058 05ce 8795      		ror r24
 1059               		2:
 1060 05d0 2A95      		dec r18
 1061 05d2 02F4      		brpl 1b
 1062 05d4 8170      		andi r24,1
 1063 05d6 9927      		clr r25
 1064 05d8 892B      		or r24,r25
 1065 05da 01F0      		breq .L51
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#ifdef NWK_ENABLE_ROUTING
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					if (nwkIb.addr == header->macDstAddr) {
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 						nwkRouteRemove(
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkDstAddr,
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkFcf.multicast);
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					}
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#endif
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					return true;
 1066               		.loc 2 306 0
 1067 05dc 81E0      		ldi r24,lo8(1)
 1068 05de 00C0      		rjmp .L52
 1069               	.L51:
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				}
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask |= (1 << diff);
 1070               		.loc 2 309 0
 1071 05e0 8C81      		ldd r24,Y+4
 1072 05e2 9D81      		ldd r25,Y+5
 1073 05e4 FC01      		movw r30,r24
 1074 05e6 8381      		ldd r24,Z+3
 1075 05e8 482F      		mov r20,r24
 1076 05ea 8E81      		ldd r24,Y+6
 1077 05ec 282F      		mov r18,r24
 1078 05ee 30E0      		ldi r19,0
 1079 05f0 81E0      		ldi r24,lo8(1)
 1080 05f2 90E0      		ldi r25,0
 1081 05f4 00C0      		rjmp 2f
 1082               		1:
 1083 05f6 880F      		lsl r24
 1084 05f8 991F      		rol r25
 1085               		2:
 1086 05fa 2A95      		dec r18
 1087 05fc 02F4      		brpl 1b
 1088 05fe 842B      		or r24,r20
 1089 0600 282F      		mov r18,r24
 1090 0602 8C81      		ldd r24,Y+4
 1091 0604 9D81      		ldd r25,Y+5
 1092 0606 FC01      		movw r30,r24
 1093 0608 2383      		std Z+3,r18
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1094               		.loc 2 310 0
 1095 060a 80E0      		ldi r24,0
 1096 060c 00C0      		rjmp .L52
 1097               	.L50:
 1098               	.LBB8:
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				uint8_t shift = -(int8_t)diff;
 1099               		.loc 2 312 0
 1100 060e 8E81      		ldd r24,Y+6
 1101 0610 8195      		neg r24
 1102 0612 8F83      		std Y+7,r24
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->seq = header->nwkSeq;
 1103               		.loc 2 314 0
 1104 0614 8885      		ldd r24,Y+8
 1105 0616 9985      		ldd r25,Y+9
 1106 0618 FC01      		movw r30,r24
 1107 061a 2285      		ldd r18,Z+10
 1108 061c 8C81      		ldd r24,Y+4
 1109 061e 9D81      		ldd r25,Y+5
 1110 0620 FC01      		movw r30,r24
 1111 0622 2283      		std Z+2,r18
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask = (entry->mask << shift) | 1;
 1112               		.loc 2 315 0
 1113 0624 8C81      		ldd r24,Y+4
 1114 0626 9D81      		ldd r25,Y+5
 1115 0628 FC01      		movw r30,r24
 1116 062a 8381      		ldd r24,Z+3
 1117 062c 882F      		mov r24,r24
 1118 062e 90E0      		ldi r25,0
 1119 0630 2F81      		ldd r18,Y+7
 1120 0632 222F      		mov r18,r18
 1121 0634 30E0      		ldi r19,0
 1122 0636 00C0      		rjmp 2f
 1123               		1:
 1124 0638 880F      		lsl r24
 1125 063a 991F      		rol r25
 1126               		2:
 1127 063c 2A95      		dec r18
 1128 063e 02F4      		brpl 1b
 1129 0640 8160      		ori r24,lo8(1)
 1130 0642 282F      		mov r18,r24
 1131 0644 8C81      		ldd r24,Y+4
 1132 0646 9D81      		ldd r25,Y+5
 1133 0648 FC01      		movw r30,r24
 1134 064a 2383      		std Z+3,r18
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->ttl = DUPLICATE_REJECTION_TTL;
 1135               		.loc 2 316 0
 1136 064c 8C81      		ldd r24,Y+4
 1137 064e 9D81      		ldd r25,Y+5
 1138 0650 25E1      		ldi r18,lo8(21)
 1139 0652 FC01      		movw r30,r24
 1140 0654 2483      		std Z+4,r18
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1141               		.loc 2 317 0
 1142 0656 80E0      		ldi r24,0
 1143 0658 00C0      		rjmp .L52
 1144               	.L49:
 1145               	.LBE8:
 1146               	.LBE7:
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (0 == entry->ttl) {
 1147               		.loc 2 321 0
 1148 065a 8C81      		ldd r24,Y+4
 1149 065c 9D81      		ldd r25,Y+5
 1150 065e FC01      		movw r30,r24
 1151 0660 8481      		ldd r24,Z+4
 1152 0662 8823      		tst r24
 1153 0664 01F4      		brne .L53
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			freeEntry = entry;
 1154               		.loc 2 322 0
 1155 0666 8C81      		ldd r24,Y+4
 1156 0668 9D81      		ldd r25,Y+5
 1157 066a 9A83      		std Y+2,r25
 1158 066c 8983      		std Y+1,r24
 1159               	.L53:
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1160               		.loc 2 290 0 discriminator 2
 1161 066e 8B81      		ldd r24,Y+3
 1162 0670 8F5F      		subi r24,lo8(-(1))
 1163 0672 8B83      		std Y+3,r24
 1164               	.L48:
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1165               		.loc 2 290 0 is_stmt 0 discriminator 1
 1166 0674 8B81      		ldd r24,Y+3
 1167 0676 8233      		cpi r24,lo8(50)
 1168 0678 00F4      		brsh .+2
 1169 067a 00C0      		rjmp .L54
 1170               	.LBE6:
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == freeEntry) {
 1171               		.loc 2 326 0 is_stmt 1
 1172 067c 8981      		ldd r24,Y+1
 1173 067e 9A81      		ldd r25,Y+2
 1174 0680 892B      		or r24,r25
 1175 0682 01F4      		brne .L55
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return true;
 1176               		.loc 2 327 0
 1177 0684 81E0      		ldi r24,lo8(1)
 1178 0686 00C0      		rjmp .L52
 1179               	.L55:
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->src = header->nwkSrcAddr;
 1180               		.loc 2 330 0
 1181 0688 8885      		ldd r24,Y+8
 1182 068a 9985      		ldd r25,Y+9
 1183 068c FC01      		movw r30,r24
 1184 068e 2385      		ldd r18,Z+11
 1185 0690 3485      		ldd r19,Z+12
 1186 0692 8981      		ldd r24,Y+1
 1187 0694 9A81      		ldd r25,Y+2
 1188 0696 FC01      		movw r30,r24
 1189 0698 3183      		std Z+1,r19
 1190 069a 2083      		st Z,r18
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->seq = header->nwkSeq;
 1191               		.loc 2 331 0
 1192 069c 8885      		ldd r24,Y+8
 1193 069e 9985      		ldd r25,Y+9
 1194 06a0 FC01      		movw r30,r24
 1195 06a2 2285      		ldd r18,Z+10
 1196 06a4 8981      		ldd r24,Y+1
 1197 06a6 9A81      		ldd r25,Y+2
 1198 06a8 FC01      		movw r30,r24
 1199 06aa 2283      		std Z+2,r18
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->mask = 1;
 1200               		.loc 2 332 0
 1201 06ac 8981      		ldd r24,Y+1
 1202 06ae 9A81      		ldd r25,Y+2
 1203 06b0 21E0      		ldi r18,lo8(1)
 1204 06b2 FC01      		movw r30,r24
 1205 06b4 2383      		std Z+3,r18
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->ttl = DUPLICATE_REJECTION_TTL;
 1206               		.loc 2 333 0
 1207 06b6 8981      		ldd r24,Y+1
 1208 06b8 9A81      		ldd r25,Y+2
 1209 06ba 25E1      		ldi r18,lo8(21)
 1210 06bc FC01      		movw r30,r24
 1211 06be 2483      		std Z+4,r18
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 1212               		.loc 2 335 0
 1213 06c0 80E0      		ldi r24,lo8(nwkRxDuplicateRejectionTimer)
 1214 06c2 90E0      		ldi r25,hi8(nwkRxDuplicateRejectionTimer)
 1215 06c4 0E94 0000 		call SYS_TimerStart
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1216               		.loc 2 337 0
 1217 06c8 80E0      		ldi r24,0
 1218               	.L52:
 1219               	/* epilogue start */
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1220               		.loc 2 338 0
 1221 06ca 2996      		adiw r28,9
 1222 06cc 0FB6      		in __tmp_reg__,__SREG__
 1223 06ce F894      		cli
 1224 06d0 DEBF      		out __SP_H__,r29
 1225 06d2 0FBE      		out __SREG__,__tmp_reg__
 1226 06d4 CDBF      		out __SP_L__,r28
 1227 06d6 DF91      		pop r29
 1228 06d8 CF91      		pop r28
 1229 06da 0895      		ret
 1230               		.cfi_endproc
 1231               	.LFE71:
 1234               	nwkRxSeriveDataInd:
 1235               	.LFB72:
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind)
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1236               		.loc 2 343 0
 1237               		.cfi_startproc
 1238 06dc CF93      		push r28
 1239               	.LCFI28:
 1240               		.cfi_def_cfa_offset 3
 1241               		.cfi_offset 28, -2
 1242 06de DF93      		push r29
 1243               	.LCFI29:
 1244               		.cfi_def_cfa_offset 4
 1245               		.cfi_offset 29, -3
 1246 06e0 00D0      		rcall .
 1247               	.LCFI30:
 1248               		.cfi_def_cfa_offset 6
 1249 06e2 CDB7      		in r28,__SP_L__
 1250 06e4 DEB7      		in r29,__SP_H__
 1251               	.LCFI31:
 1252               		.cfi_def_cfa_register 28
 1253               	/* prologue: function */
 1254               	/* frame size = 2 */
 1255               	/* stack size = 4 */
 1256               	.L__stack_usage = 4
 1257 06e6 9A83      		std Y+2,r25
 1258 06e8 8983      		std Y+1,r24
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == (ind->options & NWK_IND_OPT_SECURED)) {
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ind->size < 1) {
 1259               		.loc 2 351 0
 1260 06ea 8981      		ldd r24,Y+1
 1261 06ec 9A81      		ldd r25,Y+2
 1262 06ee FC01      		movw r30,r24
 1263 06f0 8285      		ldd r24,Z+10
 1264 06f2 8823      		tst r24
 1265 06f4 01F4      		brne .L57
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1266               		.loc 2 352 0
 1267 06f6 80E0      		ldi r24,0
 1268 06f8 00C0      		rjmp .L58
 1269               	.L57:
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	switch (ind->data[0]) {
 1270               		.loc 2 355 0
 1271 06fa 8981      		ldd r24,Y+1
 1272 06fc 9A81      		ldd r25,Y+2
 1273 06fe FC01      		movw r30,r24
 1274 0700 8085      		ldd r24,Z+8
 1275 0702 9185      		ldd r25,Z+9
 1276 0704 FC01      		movw r30,r24
 1277 0706 8081      		ld r24,Z
 1278 0708 882F      		mov r24,r24
 1279 070a 90E0      		ldi r25,0
 1280 070c 892B      		or r24,r25
 1281 070e 01F4      		brne .L61
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ACK:
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkTxAckReceived(ind);
 1282               		.loc 2 357 0
 1283 0710 8981      		ldd r24,Y+1
 1284 0712 9A81      		ldd r25,Y+2
 1285 0714 0E94 0000 		call nwkTxAckReceived
 1286 0718 00C0      		rjmp .L58
 1287               	.L61:
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_ERROR:
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteErrorReceived(ind);
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTE_DISCOVERY
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REQUEST:
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryRequestReceived(ind);
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REPLY:
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryReplyReceived(ind);
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	default:
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1288               		.loc 2 375 0
 1289 071a 80E0      		ldi r24,0
 1290               	.L58:
 1291               	/* epilogue start */
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1292               		.loc 2 377 0
 1293 071c 0F90      		pop __tmp_reg__
 1294 071e 0F90      		pop __tmp_reg__
 1295 0720 DF91      		pop r29
 1296 0722 CF91      		pop r28
 1297 0724 0895      		ret
 1298               		.cfi_endproc
 1299               	.LFE72:
 1302               	nwkRxHandleReceivedFrame:
 1303               	.LFB73:
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleReceivedFrame(NwkFrame_t *frame)
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1304               		.loc 2 382 0
 1305               		.cfi_startproc
 1306 0726 CF93      		push r28
 1307               	.LCFI32:
 1308               		.cfi_def_cfa_offset 3
 1309               		.cfi_offset 28, -2
 1310 0728 DF93      		push r29
 1311               	.LCFI33:
 1312               		.cfi_def_cfa_offset 4
 1313               		.cfi_offset 29, -3
 1314 072a CDB7      		in r28,__SP_L__
 1315 072c DEB7      		in r29,__SP_H__
 1316               	.LCFI34:
 1317               		.cfi_def_cfa_register 28
 1318 072e 2897      		sbiw r28,8
 1319               	.LCFI35:
 1320               		.cfi_def_cfa_offset 12
 1321 0730 0FB6      		in __tmp_reg__,__SREG__
 1322 0732 F894      		cli
 1323 0734 DEBF      		out __SP_H__,r29
 1324 0736 0FBE      		out __SREG__,__tmp_reg__
 1325 0738 CDBF      		out __SP_L__,r28
 1326               	/* prologue: function */
 1327               	/* frame size = 8 */
 1328               	/* stack size = 10 */
 1329               	.L__stack_usage = 10
 1330 073a 9887      		std Y+8,r25
 1331 073c 8F83      		std Y+7,r24
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1332               		.loc 2 383 0
 1333 073e 8F81      		ldd r24,Y+7
 1334 0740 9885      		ldd r25,Y+8
 1335 0742 0296      		adiw r24,2
 1336 0744 9B83      		std Y+3,r25
 1337 0746 8A83      		std Y+2,r24
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1338               		.loc 2 385 0
 1339 0748 8F81      		ldd r24,Y+7
 1340 074a 9885      		ldd r25,Y+8
 1341 074c 24E2      		ldi r18,lo8(36)
 1342 074e FC01      		movw r30,r24
 1343 0750 2083      		st Z,r18
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifndef NWK_ENABLE_SECURITY
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.security) {
 1344               		.loc 2 388 0
 1345 0752 8A81      		ldd r24,Y+2
 1346 0754 9B81      		ldd r25,Y+3
 1347 0756 FC01      		movw r30,r24
 1348 0758 8185      		ldd r24,Z+9
 1349 075a 8270      		andi r24,lo8(2)
 1350 075c 8823      		tst r24
 1351 075e 01F0      		breq .+2
 1352 0760 00C0      		rjmp .L83
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast && header->nwkFcf.ackRequest) {
 1353               		.loc 2 395 0
 1354 0762 8A81      		ldd r24,Y+2
 1355 0764 9B81      		ldd r25,Y+3
 1356 0766 FC01      		movw r30,r24
 1357 0768 8185      		ldd r24,Z+9
 1358 076a 8870      		andi r24,lo8(8)
 1359 076c 8823      		tst r24
 1360 076e 01F0      		breq .L65
 1361               		.loc 2 395 0 is_stmt 0 discriminator 1
 1362 0770 8A81      		ldd r24,Y+2
 1363 0772 9B81      		ldd r25,Y+3
 1364 0774 FC01      		movw r30,r24
 1365 0776 8185      		ldd r24,Z+9
 1366 0778 8170      		andi r24,lo8(1)
 1367 077a 8823      		tst r24
 1368 077c 01F0      		breq .+2
 1369 077e 00C0      		rjmp .L84
 1370               	.L65:
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #else
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == header->macDstPanId)
 1371               		.loc 2 406 0 is_stmt 1
 1372 0780 8A81      		ldd r24,Y+2
 1373 0782 9B81      		ldd r25,Y+3
 1374 0784 FC01      		movw r30,r24
 1375 0786 8381      		ldd r24,Z+3
 1376 0788 9481      		ldd r25,Z+4
 1377 078a 0196      		adiw r24,1
 1378 078c 01F4      		brne .L66
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR == header->nwkDstAddr)
 1379               		.loc 2 408 0
 1380 078e 2091 0000 		lds r18,nwkIb
 1381 0792 3091 0000 		lds r19,nwkIb+1
 1382 0796 8A81      		ldd r24,Y+2
 1383 0798 9B81      		ldd r25,Y+3
 1384 079a FC01      		movw r30,r24
 1385 079c 8585      		ldd r24,Z+13
 1386 079e 9685      		ldd r25,Z+14
 1387 07a0 2817      		cp r18,r24
 1388 07a2 3907      		cpc r19,r25
 1389 07a4 01F0      		breq .L67
 1390               		.loc 2 408 0 is_stmt 0 discriminator 1
 1391 07a6 8A81      		ldd r24,Y+2
 1392 07a8 9B81      		ldd r25,Y+3
 1393 07aa FC01      		movw r30,r24
 1394 07ac 8585      		ldd r24,Z+13
 1395 07ae 9685      		ldd r25,Z+14
 1396 07b0 0196      		adiw r24,1
 1397 07b2 01F0      		breq .+2
 1398 07b4 00C0      		rjmp .L85
 1399               	.L67:
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security)
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			{
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1400               		.loc 2 417 0 is_stmt 1
 1401 07b6 8F81      		ldd r24,Y+7
 1402 07b8 9885      		ldd r25,Y+8
 1403 07ba 22E2      		ldi r18,lo8(34)
 1404 07bc FC01      		movw r30,r24
 1405 07be 2083      		st Z,r18
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 1406               		.loc 2 420 0
 1407 07c0 00C0      		rjmp .L85
 1408               	.L66:
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ADDRESS_FILTER
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (!NWK_FilterAddress(header->macSrcAddr, &frame->rx.lqi)) {
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == header->nwkDstAddr && header->nwkFcf.ackRequest)
 1409               		.loc 2 430 0
 1410 07c2 8A81      		ldd r24,Y+2
 1411 07c4 9B81      		ldd r25,Y+3
 1412 07c6 FC01      		movw r30,r24
 1413 07c8 8585      		ldd r24,Z+13
 1414 07ca 9685      		ldd r25,Z+14
 1415 07cc 0196      		adiw r24,1
 1416 07ce 01F4      		brne .L69
 1417               		.loc 2 430 0 is_stmt 0 discriminator 1
 1418 07d0 8A81      		ldd r24,Y+2
 1419 07d2 9B81      		ldd r25,Y+3
 1420 07d4 FC01      		movw r30,r24
 1421 07d6 8185      		ldd r24,Z+9
 1422 07d8 8170      		andi r24,lo8(1)
 1423 07da 8823      		tst r24
 1424 07dc 01F0      		breq .+2
 1425 07de 00C0      		rjmp .L86
 1426               	.L69:
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkIb.addr == header->nwkSrcAddr)
 1427               		.loc 2 435 0 is_stmt 1
 1428 07e0 2091 0000 		lds r18,nwkIb
 1429 07e4 3091 0000 		lds r19,nwkIb+1
 1430 07e8 8A81      		ldd r24,Y+2
 1431 07ea 9B81      		ldd r25,Y+3
 1432 07ec FC01      		movw r30,r24
 1433 07ee 8385      		ldd r24,Z+11
 1434 07f0 9485      		ldd r25,Z+12
 1435 07f2 2817      		cp r18,r24
 1436 07f4 3907      		cpc r19,r25
 1437 07f6 01F4      		brne .+2
 1438 07f8 00C0      		rjmp .L87
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRouteFrameReceived(frame);
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkRxRejectDuplicate(header))
 1439               		.loc 2 444 0
 1440 07fa 8A81      		ldd r24,Y+2
 1441 07fc 9B81      		ldd r25,Y+3
 1442 07fe 0E94 0000 		call nwkRxRejectDuplicate
 1443 0802 8823      		tst r24
 1444 0804 01F0      		breq .+2
 1445 0806 00C0      		rjmp .L88
 445:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 449:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 1446               		.loc 2 450 0
 1447 0808 8A81      		ldd r24,Y+2
 1448 080a 9B81      		ldd r25,Y+3
 1449 080c FC01      		movw r30,r24
 1450 080e 8185      		ldd r24,Z+9
 1451 0810 8870      		andi r24,lo8(8)
 1452 0812 8823      		tst r24
 1453 0814 01F4      		brne .+2
 1454 0816 00C0      		rjmp .L72
 1455               	.LBB9:
 451:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameMulticastHeader_t *mcHeader
 1456               		.loc 2 451 0
 1457 0818 8F81      		ldd r24,Y+7
 1458 081a 9885      		ldd r25,Y+8
 1459 081c 8F57      		subi r24,127
 1460 081e 9F4F      		sbci r25,-1
 1461 0820 FC01      		movw r30,r24
 1462 0822 8081      		ld r24,Z
 1463 0824 9181      		ldd r25,Z+1
 1464 0826 9D83      		std Y+5,r25
 1465 0828 8C83      		std Y+4,r24
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			= (NwkFrameMulticastHeader_t *)frame->payload;
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool member = NWK_GroupIsMember(header->nwkDstAddr);
 1466               		.loc 2 453 0
 1467 082a 8A81      		ldd r24,Y+2
 1468 082c 9B81      		ldd r25,Y+3
 1469 082e FC01      		movw r30,r24
 1470 0830 8585      		ldd r24,Z+13
 1471 0832 9685      		ldd r25,Z+14
 1472 0834 0E94 0000 		call NWK_GroupIsMember
 1473 0838 8E83      		std Y+6,r24
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool broadcast = false;
 1474               		.loc 2 454 0
 1475 083a 1982      		std Y+1,__zero_reg__
 455:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 456:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 1476               		.loc 2 456 0
 1477 083c 8A81      		ldd r24,Y+2
 1478 083e 9B81      		ldd r25,Y+3
 1479 0840 FC01      		movw r30,r24
 1480 0842 8581      		ldd r24,Z+5
 1481 0844 9681      		ldd r25,Z+6
 1482 0846 0196      		adiw r24,1
 1483 0848 01F0      		breq .+2
 1484 084a 00C0      		rjmp .L73
 457:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1485               		.loc 2 457 0
 1486 084c 8E81      		ldd r24,Y+6
 1487 084e 8823      		tst r24
 1488 0850 01F0      		breq .L74
 458:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->memberRadius > 0;
 1489               		.loc 2 458 0
 1490 0852 8C81      		ldd r24,Y+4
 1491 0854 9D81      		ldd r25,Y+5
 1492 0856 FC01      		movw r30,r24
 1493 0858 8181      		ldd r24,Z+1
 1494 085a 8F70      		andi r24,lo8(15)
 1495 085c 882F      		mov r24,r24
 1496 085e 90E0      		ldi r25,0
 1497 0860 21E0      		ldi r18,lo8(1)
 1498 0862 1816      		cp __zero_reg__,r24
 1499 0864 1906      		cpc __zero_reg__,r25
 1500 0866 04F0      		brlt .L75
 1501 0868 20E0      		ldi r18,0
 1502               	.L75:
 1503 086a 2983      		std Y+1,r18
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius--;
 1504               		.loc 2 459 0
 1505 086c 8C81      		ldd r24,Y+4
 1506 086e 9D81      		ldd r25,Y+5
 1507 0870 FC01      		movw r30,r24
 1508 0872 8181      		ldd r24,Z+1
 1509 0874 8F70      		andi r24,lo8(15)
 1510 0876 2FE0      		ldi r18,lo8(15)
 1511 0878 280F      		add r18,r24
 1512 087a 2F70      		andi r18,lo8(15)
 1513 087c 8C81      		ldd r24,Y+4
 1514 087e 9D81      		ldd r25,Y+5
 1515 0880 2F70      		andi r18,lo8(15)
 1516 0882 FC01      		movw r30,r24
 1517 0884 3181      		ldd r19,Z+1
 1518 0886 307F      		andi r19,lo8(-16)
 1519 0888 232B      		or r18,r19
 1520 088a FC01      		movw r30,r24
 1521 088c 2183      		std Z+1,r18
 460:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius
 461:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxNonMemberRadius;
 1522               		.loc 2 461 0
 1523 088e 8C81      		ldd r24,Y+4
 1524 0890 9D81      		ldd r25,Y+5
 1525 0892 FC01      		movw r30,r24
 1526 0894 8081      		ld r24,Z
 1527 0896 282F      		mov r18,r24
 1528 0898 2295      		swap r18
 1529 089a 2F70      		andi r18,lo8(15)
 1530 089c 8C81      		ldd r24,Y+4
 1531 089e 9D81      		ldd r25,Y+5
 1532 08a0 2F70      		andi r18,lo8(15)
 1533 08a2 FC01      		movw r30,r24
 1534 08a4 3081      		ld r19,Z
 1535 08a6 307F      		andi r19,lo8(-16)
 1536 08a8 232B      		or r18,r19
 1537 08aa FC01      		movw r30,r24
 1538 08ac 2083      		st Z,r18
 1539 08ae 00C0      		rjmp .L78
 1540               	.L74:
 462:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 463:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->nonMemberRadius > 0;
 1541               		.loc 2 463 0
 1542 08b0 8C81      		ldd r24,Y+4
 1543 08b2 9D81      		ldd r25,Y+5
 1544 08b4 FC01      		movw r30,r24
 1545 08b6 8081      		ld r24,Z
 1546 08b8 8F70      		andi r24,lo8(15)
 1547 08ba 882F      		mov r24,r24
 1548 08bc 90E0      		ldi r25,0
 1549 08be 21E0      		ldi r18,lo8(1)
 1550 08c0 1816      		cp __zero_reg__,r24
 1551 08c2 1906      		cpc __zero_reg__,r25
 1552 08c4 04F0      		brlt .L77
 1553 08c6 20E0      		ldi r18,0
 1554               	.L77:
 1555 08c8 2983      		std Y+1,r18
 464:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius--;
 1556               		.loc 2 464 0
 1557 08ca 8C81      		ldd r24,Y+4
 1558 08cc 9D81      		ldd r25,Y+5
 1559 08ce FC01      		movw r30,r24
 1560 08d0 8081      		ld r24,Z
 1561 08d2 8F70      		andi r24,lo8(15)
 1562 08d4 2FE0      		ldi r18,lo8(15)
 1563 08d6 280F      		add r18,r24
 1564 08d8 2F70      		andi r18,lo8(15)
 1565 08da 8C81      		ldd r24,Y+4
 1566 08dc 9D81      		ldd r25,Y+5
 1567 08de 2F70      		andi r18,lo8(15)
 1568 08e0 FC01      		movw r30,r24
 1569 08e2 3081      		ld r19,Z
 1570 08e4 307F      		andi r19,lo8(-16)
 1571 08e6 232B      		or r18,r19
 1572 08e8 FC01      		movw r30,r24
 1573 08ea 2083      		st Z,r18
 465:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius
 466:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxMemberRadius;
 1574               		.loc 2 466 0
 1575 08ec 8C81      		ldd r24,Y+4
 1576 08ee 9D81      		ldd r25,Y+5
 1577 08f0 FC01      		movw r30,r24
 1578 08f2 8181      		ldd r24,Z+1
 1579 08f4 282F      		mov r18,r24
 1580 08f6 2295      		swap r18
 1581 08f8 2F70      		andi r18,lo8(15)
 1582 08fa 8C81      		ldd r24,Y+4
 1583 08fc 9D81      		ldd r25,Y+5
 1584 08fe 2F70      		andi r18,lo8(15)
 1585 0900 FC01      		movw r30,r24
 1586 0902 3181      		ldd r19,Z+1
 1587 0904 307F      		andi r19,lo8(-16)
 1588 0906 232B      		or r18,r19
 1589 0908 FC01      		movw r30,r24
 1590 090a 2183      		std Z+1,r18
 1591 090c 00C0      		rjmp .L78
 1592               	.L73:
 467:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 468:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		} else {
 469:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1593               		.loc 2 469 0
 1594 090e 8E81      		ldd r24,Y+6
 1595 0910 8823      		tst r24
 1596 0912 01F0      		breq .L78
 470:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = true;
 1597               		.loc 2 470 0
 1598 0914 81E0      		ldi r24,lo8(1)
 1599 0916 8983      		std Y+1,r24
 471:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkFcf.linkLocal = 1;
 1600               		.loc 2 471 0
 1601 0918 8A81      		ldd r24,Y+2
 1602 091a 9B81      		ldd r25,Y+3
 1603 091c FC01      		movw r30,r24
 1604 091e 2185      		ldd r18,Z+9
 1605 0920 2460      		ori r18,lo8(4)
 1606 0922 FC01      		movw r30,r24
 1607 0924 2187      		std Z+9,r18
 1608               	.L78:
 472:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 473:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 474:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_ROUTING
 475:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else {
 476:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_ROUTE;
 477:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 478:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 479:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 480:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 481:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (broadcast) {
 1609               		.loc 2 481 0
 1610 0926 8981      		ldd r24,Y+1
 1611 0928 8823      		tst r24
 1612 092a 01F0      		breq .L79
 482:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1613               		.loc 2 482 0
 1614 092c 8F81      		ldd r24,Y+7
 1615 092e 9885      		ldd r25,Y+8
 1616 0930 0E94 0000 		call nwkTxBroadcastFrame
 1617               	.L79:
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 485:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (member) {
 1618               		.loc 2 485 0
 1619 0934 8E81      		ldd r24,Y+6
 1620 0936 8823      		tst r24
 1621 0938 01F4      		brne .+2
 1622 093a 00C0      		rjmp .L62
 486:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 1623               		.loc 2 486 0
 1624 093c 8F81      		ldd r24,Y+7
 1625 093e 9885      		ldd r25,Y+8
 1626 0940 8F57      		subi r24,127
 1627 0942 9F4F      		sbci r25,-1
 1628 0944 FC01      		movw r30,r24
 1629 0946 8081      		ld r24,Z
 1630 0948 9181      		ldd r25,Z+1
 1631 094a 9C01      		movw r18,r24
 1632 094c 2E5F      		subi r18,-2
 1633 094e 3F4F      		sbci r19,-1
 1634 0950 8F81      		ldd r24,Y+7
 1635 0952 9885      		ldd r25,Y+8
 1636 0954 8F57      		subi r24,127
 1637 0956 9F4F      		sbci r25,-1
 1638 0958 FC01      		movw r30,r24
 1639 095a 3183      		std Z+1,r19
 1640 095c 2083      		st Z,r18
 487:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 490:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 491:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 492:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1641               		.loc 2 493 0
 1642 095e 8F81      		ldd r24,Y+7
 1643 0960 9885      		ldd r25,Y+8
 1644 0962 22E2      		ldi r18,lo8(34)
 1645 0964 FC01      		movw r30,r24
 1646 0966 2083      		st Z,r18
 1647 0968 00C0      		rjmp .L62
 1648               	.L72:
 1649               	.LBE9:
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 495:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else
 496:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif /* NWK_ENABLE_MULTICAST */
 497:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr && nwkIb.addr !=
 1650               		.loc 2 498 0
 1651 096a 8A81      		ldd r24,Y+2
 1652 096c 9B81      		ldd r25,Y+3
 1653 096e FC01      		movw r30,r24
 1654 0970 8581      		ldd r24,Z+5
 1655 0972 9681      		ldd r25,Z+6
 1656 0974 0196      		adiw r24,1
 1657 0976 01F4      		brne .L81
 1658               		.loc 2 498 0 is_stmt 0 discriminator 1
 1659 0978 2091 0000 		lds r18,nwkIb
 1660 097c 3091 0000 		lds r19,nwkIb+1
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1661               		.loc 2 499 0 is_stmt 1 discriminator 1
 1662 0980 8A81      		ldd r24,Y+2
 1663 0982 9B81      		ldd r25,Y+3
 1664 0984 FC01      		movw r30,r24
 1665 0986 8585      		ldd r24,Z+13
 1666 0988 9685      		ldd r25,Z+14
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1667               		.loc 2 498 0 discriminator 1
 1668 098a 2817      		cp r18,r24
 1669 098c 3907      		cpc r19,r25
 1670 098e 01F0      		breq .L81
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				0 == header->nwkFcf.linkLocal) {
 1671               		.loc 2 500 0
 1672 0990 8A81      		ldd r24,Y+2
 1673 0992 9B81      		ldd r25,Y+3
 1674 0994 FC01      		movw r30,r24
 1675 0996 8185      		ldd r24,Z+9
 1676 0998 8470      		andi r24,lo8(4)
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1677               		.loc 2 499 0
 1678 099a 8823      		tst r24
 1679 099c 01F4      		brne .L81
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1680               		.loc 2 501 0
 1681 099e 8F81      		ldd r24,Y+7
 1682 09a0 9885      		ldd r25,Y+8
 1683 09a2 0E94 0000 		call nwkTxBroadcastFrame
 1684               	.L81:
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR ==
 1685               		.loc 2 504 0
 1686 09a6 2091 0000 		lds r18,nwkIb
 1687 09aa 3091 0000 		lds r19,nwkIb+1
 1688 09ae 8A81      		ldd r24,Y+2
 1689 09b0 9B81      		ldd r25,Y+3
 1690 09b2 FC01      		movw r30,r24
 1691 09b4 8585      		ldd r24,Z+13
 1692 09b6 9685      		ldd r25,Z+14
 1693 09b8 2817      		cp r18,r24
 1694 09ba 3907      		cpc r19,r25
 1695 09bc 01F0      		breq .L82
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1696               		.loc 2 505 0 discriminator 1
 1697 09be 8A81      		ldd r24,Y+2
 1698 09c0 9B81      		ldd r25,Y+3
 1699 09c2 FC01      		movw r30,r24
 1700 09c4 8585      		ldd r24,Z+13
 1701 09c6 9685      		ldd r25,Z+14
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1702               		.loc 2 504 0 discriminator 1
 1703 09c8 0196      		adiw r24,1
 1704 09ca 01F4      		brne .L62
 1705               	.L82:
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 507:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 509:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 511:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1706               		.loc 2 511 0
 1707 09cc 8F81      		ldd r24,Y+7
 1708 09ce 9885      		ldd r25,Y+8
 1709 09d0 22E2      		ldi r18,lo8(34)
 1710 09d2 FC01      		movw r30,r24
 1711 09d4 2083      		st Z,r18
 1712 09d6 00C0      		rjmp .L62
 1713               	.L83:
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1714               		.loc 2 389 0
 1715 09d8 0000      		nop
 1716 09da 00C0      		rjmp .L62
 1717               	.L84:
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1718               		.loc 2 396 0
 1719 09dc 0000      		nop
 1720 09de 00C0      		rjmp .L62
 1721               	.L85:
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1722               		.loc 2 420 0
 1723 09e0 0000      		nop
 1724 09e2 00C0      		rjmp .L62
 1725               	.L86:
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1726               		.loc 2 432 0
 1727 09e4 0000      		nop
 1728 09e6 00C0      		rjmp .L62
 1729               	.L87:
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1730               		.loc 2 437 0
 1731 09e8 0000      		nop
 1732 09ea 00C0      		rjmp .L62
 1733               	.L88:
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1734               		.loc 2 446 0
 1735 09ec 0000      		nop
 1736               	.L62:
 1737               	/* epilogue start */
 512:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 513:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 514:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #ifdef NWK_ENABLE_ROUTING
 515:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if (nwkIb.addr == header->macDstAddr) {
 516:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_ROUTE;
 517:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 518:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #endif
 519:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 520:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1738               		.loc 2 520 0
 1739 09ee 2896      		adiw r28,8
 1740 09f0 0FB6      		in __tmp_reg__,__SREG__
 1741 09f2 F894      		cli
 1742 09f4 DEBF      		out __SP_H__,r29
 1743 09f6 0FBE      		out __SREG__,__tmp_reg__
 1744 09f8 CDBF      		out __SP_L__,r28
 1745 09fa DF91      		pop r29
 1746 09fc CF91      		pop r28
 1747 09fe 0895      		ret
 1748               		.cfi_endproc
 1749               	.LFE73:
 1752               	nwkRxIndicateDataFrame:
 1753               	.LFB74:
 521:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 522:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 523:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 524:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateDataFrame(NwkFrame_t *frame)
 525:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1754               		.loc 2 525 0
 1755               		.cfi_startproc
 1756 0a00 CF93      		push r28
 1757               	.LCFI36:
 1758               		.cfi_def_cfa_offset 3
 1759               		.cfi_offset 28, -2
 1760 0a02 DF93      		push r29
 1761               	.LCFI37:
 1762               		.cfi_def_cfa_offset 4
 1763               		.cfi_offset 29, -3
 1764 0a04 CDB7      		in r28,__SP_L__
 1765 0a06 DEB7      		in r29,__SP_H__
 1766               	.LCFI38:
 1767               		.cfi_def_cfa_register 28
 1768 0a08 6197      		sbiw r28,17
 1769               	.LCFI39:
 1770               		.cfi_def_cfa_offset 21
 1771 0a0a 0FB6      		in __tmp_reg__,__SREG__
 1772 0a0c F894      		cli
 1773 0a0e DEBF      		out __SP_H__,r29
 1774 0a10 0FBE      		out __SREG__,__tmp_reg__
 1775 0a12 CDBF      		out __SP_L__,r28
 1776               	/* prologue: function */
 1777               	/* frame size = 17 */
 1778               	/* stack size = 19 */
 1779               	.L__stack_usage = 19
 1780 0a14 998B      		std Y+17,r25
 1781 0a16 888B      		std Y+16,r24
 526:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1782               		.loc 2 526 0
 1783 0a18 8889      		ldd r24,Y+16
 1784 0a1a 9989      		ldd r25,Y+17
 1785 0a1c 0296      		adiw r24,2
 1786 0a1e 9A83      		std Y+2,r25
 1787 0a20 8983      		std Y+1,r24
 527:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 528:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 529:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[header->nwkDstEndpoint]) {
 1788               		.loc 2 529 0
 1789 0a22 8981      		ldd r24,Y+1
 1790 0a24 9A81      		ldd r25,Y+2
 1791 0a26 FC01      		movw r30,r24
 1792 0a28 8785      		ldd r24,Z+15
 1793 0a2a 8295      		swap r24
 1794 0a2c 8F70      		andi r24,lo8(15)
 1795 0a2e 882F      		mov r24,r24
 1796 0a30 90E0      		ldi r25,0
 1797 0a32 0396      		adiw r24,3
 1798 0a34 880F      		lsl r24
 1799 0a36 991F      		rol r25
 1800 0a38 8050      		subi r24,lo8(-(nwkIb))
 1801 0a3a 9040      		sbci r25,hi8(-(nwkIb))
 1802 0a3c FC01      		movw r30,r24
 1803 0a3e 8081      		ld r24,Z
 1804 0a40 9181      		ldd r25,Z+1
 1805 0a42 892B      		or r24,r25
 1806 0a44 01F4      		brne .L90
 530:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1807               		.loc 2 530 0
 1808 0a46 80E0      		ldi r24,0
 1809 0a48 00C0      		rjmp .L105
 1810               	.L90:
 531:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 532:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 533:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = header->nwkSrcAddr;
 1811               		.loc 2 533 0
 1812 0a4a 8981      		ldd r24,Y+1
 1813 0a4c 9A81      		ldd r25,Y+2
 1814 0a4e FC01      		movw r30,r24
 1815 0a50 8385      		ldd r24,Z+11
 1816 0a52 9485      		ldd r25,Z+12
 1817 0a54 9C83      		std Y+4,r25
 1818 0a56 8B83      		std Y+3,r24
 534:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = header->nwkDstAddr;
 1819               		.loc 2 534 0
 1820 0a58 8981      		ldd r24,Y+1
 1821 0a5a 9A81      		ldd r25,Y+2
 1822 0a5c FC01      		movw r30,r24
 1823 0a5e 8585      		ldd r24,Z+13
 1824 0a60 9685      		ldd r25,Z+14
 1825 0a62 9E83      		std Y+6,r25
 1826 0a64 8D83      		std Y+5,r24
 535:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = header->nwkSrcEndpoint;
 1827               		.loc 2 535 0
 1828 0a66 8981      		ldd r24,Y+1
 1829 0a68 9A81      		ldd r25,Y+2
 1830 0a6a FC01      		movw r30,r24
 1831 0a6c 8785      		ldd r24,Z+15
 1832 0a6e 8F70      		andi r24,lo8(15)
 1833 0a70 8F83      		std Y+7,r24
 536:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = header->nwkDstEndpoint;
 1834               		.loc 2 536 0
 1835 0a72 8981      		ldd r24,Y+1
 1836 0a74 9A81      		ldd r25,Y+2
 1837 0a76 FC01      		movw r30,r24
 1838 0a78 8785      		ldd r24,Z+15
 1839 0a7a 8295      		swap r24
 1840 0a7c 8F70      		andi r24,lo8(15)
 1841 0a7e 8887      		std Y+8,r24
 537:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1842               		.loc 2 537 0
 1843 0a80 8889      		ldd r24,Y+16
 1844 0a82 9989      		ldd r25,Y+17
 1845 0a84 8F57      		subi r24,127
 1846 0a86 9F4F      		sbci r25,-1
 1847 0a88 FC01      		movw r30,r24
 1848 0a8a 8081      		ld r24,Z
 1849 0a8c 9181      		ldd r25,Z+1
 1850 0a8e 9C87      		std Y+12,r25
 1851 0a90 8B87      		std Y+11,r24
 538:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1852               		.loc 2 538 0
 1853 0a92 8889      		ldd r24,Y+16
 1854 0a94 9989      		ldd r25,Y+17
 1855 0a96 0E94 0000 		call nwkFramePayloadSize
 1856 0a9a 8D87      		std Y+13,r24
 539:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1857               		.loc 2 539 0
 1858 0a9c 8889      		ldd r24,Y+16
 1859 0a9e 9989      		ldd r25,Y+17
 1860 0aa0 8D57      		subi r24,125
 1861 0aa2 9F4F      		sbci r25,-1
 1862 0aa4 FC01      		movw r30,r24
 1863 0aa6 8081      		ld r24,Z
 1864 0aa8 8E87      		std Y+14,r24
 540:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1865               		.loc 2 540 0
 1866 0aaa 8889      		ldd r24,Y+16
 1867 0aac 9989      		ldd r25,Y+17
 1868 0aae 8C57      		subi r24,124
 1869 0ab0 9F4F      		sbci r25,-1
 1870 0ab2 FC01      		movw r30,r24
 1871 0ab4 8081      		ld r24,Z
 1872 0ab6 8F87      		std Y+15,r24
 541:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 542:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK_REQUESTED : 0;
 1873               		.loc 2 542 0
 1874 0ab8 8981      		ldd r24,Y+1
 1875 0aba 9A81      		ldd r25,Y+2
 1876 0abc FC01      		movw r30,r24
 1877 0abe 8185      		ldd r24,Z+9
 1878 0ac0 982F      		mov r25,r24
 1879 0ac2 9170      		andi r25,lo8(1)
 1880 0ac4 81E0      		ldi r24,lo8(1)
 1881 0ac6 9923      		tst r25
 1882 0ac8 01F4      		brne .L92
 1883 0aca 80E0      		ldi r24,0
 1884               	.L92:
 1885 0acc 882F      		mov r24,r24
 1886 0ace 90E0      		ldi r25,0
 1887 0ad0 9A87      		std Y+10,r25
 1888 0ad2 8987      		std Y+9,r24
 543:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECURED : 0;
 1889               		.loc 2 543 0
 1890 0ad4 2985      		ldd r18,Y+9
 1891 0ad6 3A85      		ldd r19,Y+10
 1892 0ad8 8981      		ldd r24,Y+1
 1893 0ada 9A81      		ldd r25,Y+2
 1894 0adc FC01      		movw r30,r24
 1895 0ade 8185      		ldd r24,Z+9
 1896 0ae0 882F      		mov r24,r24
 1897 0ae2 90E0      		ldi r25,0
 1898 0ae4 8270      		andi r24,2
 1899 0ae6 9927      		clr r25
 1900 0ae8 822B      		or r24,r18
 1901 0aea 932B      		or r25,r19
 1902 0aec 9A87      		std Y+10,r25
 1903 0aee 8987      		std Y+9,r24
 544:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LINK_LOCAL : 0;
 1904               		.loc 2 544 0
 1905 0af0 2985      		ldd r18,Y+9
 1906 0af2 3A85      		ldd r19,Y+10
 1907 0af4 8981      		ldd r24,Y+1
 1908 0af6 9A81      		ldd r25,Y+2
 1909 0af8 FC01      		movw r30,r24
 1910 0afa 8185      		ldd r24,Z+9
 1911 0afc 8470      		andi r24,lo8(4)
 1912 0afe 8823      		tst r24
 1913 0b00 01F0      		breq .L93
 1914               		.loc 2 544 0 is_stmt 0 discriminator 1
 1915 0b02 80E2      		ldi r24,lo8(32)
 1916 0b04 90E0      		ldi r25,0
 1917 0b06 00C0      		rjmp .L94
 1918               	.L93:
 1919               		.loc 2 544 0 discriminator 2
 1920 0b08 80E0      		ldi r24,0
 1921 0b0a 90E0      		ldi r25,0
 1922               	.L94:
 1923               		.loc 2 544 0 discriminator 4
 1924 0b0c 822B      		or r24,r18
 1925 0b0e 932B      		or r25,r19
 1926 0b10 9A87      		std Y+10,r25
 1927 0b12 8987      		std Y+9,r24
 545:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MULTICAST : 0;
 1928               		.loc 2 545 0 is_stmt 1 discriminator 4
 1929 0b14 2985      		ldd r18,Y+9
 1930 0b16 3A85      		ldd r19,Y+10
 1931 0b18 8981      		ldd r24,Y+1
 1932 0b1a 9A81      		ldd r25,Y+2
 1933 0b1c FC01      		movw r30,r24
 1934 0b1e 8185      		ldd r24,Z+9
 1935 0b20 8870      		andi r24,lo8(8)
 1936 0b22 8823      		tst r24
 1937 0b24 01F0      		breq .L95
 1938               		.loc 2 545 0 is_stmt 0 discriminator 1
 1939 0b26 80E4      		ldi r24,lo8(64)
 1940 0b28 90E0      		ldi r25,0
 1941 0b2a 00C0      		rjmp .L96
 1942               	.L95:
 1943               		.loc 2 545 0 discriminator 2
 1944 0b2c 80E0      		ldi r24,0
 1945 0b2e 90E0      		ldi r25,0
 1946               	.L96:
 1947               		.loc 2 545 0 discriminator 4
 1948 0b30 822B      		or r24,r18
 1949 0b32 932B      		or r25,r19
 1950 0b34 9A87      		std Y+10,r25
 1951 0b36 8987      		std Y+9,r24
 546:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.beacon) ? NWK_IND_OPT_BEACON : 0;
 1952               		.loc 2 546 0 is_stmt 1 discriminator 4
 1953 0b38 2985      		ldd r18,Y+9
 1954 0b3a 3A85      		ldd r19,Y+10
 1955 0b3c 8981      		ldd r24,Y+1
 1956 0b3e 9A81      		ldd r25,Y+2
 1957 0b40 FC01      		movw r30,r24
 1958 0b42 8185      		ldd r24,Z+9
 1959 0b44 8071      		andi r24,lo8(16)
 1960 0b46 8823      		tst r24
 1961 0b48 01F0      		breq .L97
 1962               		.loc 2 546 0 is_stmt 0 discriminator 1
 1963 0b4a 80E8      		ldi r24,lo8(-128)
 1964 0b4c 90E0      		ldi r25,0
 1965 0b4e 00C0      		rjmp .L98
 1966               	.L97:
 1967               		.loc 2 546 0 discriminator 2
 1968 0b50 80E0      		ldi r24,0
 1969 0b52 90E0      		ldi r25,0
 1970               	.L98:
 1971               		.loc 2 546 0 discriminator 4
 1972 0b54 822B      		or r24,r18
 1973 0b56 932B      		or r25,r19
 1974 0b58 9A87      		std Y+10,r25
 1975 0b5a 8987      		std Y+9,r24
 547:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_ADDR == header->nwkDstAddr) ? NWK_IND_OPT_BROADCAST : 0;
 1976               		.loc 2 547 0 is_stmt 1 discriminator 4
 1977 0b5c 2985      		ldd r18,Y+9
 1978 0b5e 3A85      		ldd r19,Y+10
 1979 0b60 8981      		ldd r24,Y+1
 1980 0b62 9A81      		ldd r25,Y+2
 1981 0b64 FC01      		movw r30,r24
 1982 0b66 8585      		ldd r24,Z+13
 1983 0b68 9685      		ldd r25,Z+14
 1984 0b6a 0196      		adiw r24,1
 1985 0b6c 01F4      		brne .L99
 1986               		.loc 2 547 0 is_stmt 0 discriminator 1
 1987 0b6e 84E0      		ldi r24,lo8(4)
 1988 0b70 90E0      		ldi r25,0
 1989 0b72 00C0      		rjmp .L100
 1990               	.L99:
 1991               		.loc 2 547 0 discriminator 2
 1992 0b74 80E0      		ldi r24,0
 1993 0b76 90E0      		ldi r25,0
 1994               	.L100:
 1995               		.loc 2 547 0 discriminator 4
 1996 0b78 822B      		or r24,r18
 1997 0b7a 932B      		or r25,r19
 1998 0b7c 9A87      		std Y+10,r25
 1999 0b7e 8987      		std Y+9,r24
 548:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (header->nwkSrcAddr == header->macSrcAddr) ? NWK_IND_OPT_LOCAL : 0;
 2000               		.loc 2 548 0 is_stmt 1 discriminator 4
 2001 0b80 2985      		ldd r18,Y+9
 2002 0b82 3A85      		ldd r19,Y+10
 2003 0b84 8981      		ldd r24,Y+1
 2004 0b86 9A81      		ldd r25,Y+2
 2005 0b88 FC01      		movw r30,r24
 2006 0b8a 4385      		ldd r20,Z+11
 2007 0b8c 5485      		ldd r21,Z+12
 2008 0b8e 8981      		ldd r24,Y+1
 2009 0b90 9A81      		ldd r25,Y+2
 2010 0b92 FC01      		movw r30,r24
 2011 0b94 8781      		ldd r24,Z+7
 2012 0b96 9085      		ldd r25,Z+8
 2013 0b98 4817      		cp r20,r24
 2014 0b9a 5907      		cpc r21,r25
 2015 0b9c 01F4      		brne .L101
 2016               		.loc 2 548 0 is_stmt 0 discriminator 1
 2017 0b9e 88E0      		ldi r24,lo8(8)
 2018 0ba0 90E0      		ldi r25,0
 2019 0ba2 00C0      		rjmp .L102
 2020               	.L101:
 2021               		.loc 2 548 0 discriminator 2
 2022 0ba4 80E0      		ldi r24,0
 2023 0ba6 90E0      		ldi r25,0
 2024               	.L102:
 2025               		.loc 2 548 0 discriminator 4
 2026 0ba8 822B      		or r24,r18
 2027 0baa 932B      		or r25,r19
 2028 0bac 9A87      		std Y+10,r25
 2029 0bae 8987      		std Y+9,r24
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_PANID == header->macDstPanId) ? NWK_IND_OPT_BROADCAST_PAN_ID : 0;
 2030               		.loc 2 549 0 is_stmt 1 discriminator 4
 2031 0bb0 2985      		ldd r18,Y+9
 2032 0bb2 3A85      		ldd r19,Y+10
 2033 0bb4 8981      		ldd r24,Y+1
 2034 0bb6 9A81      		ldd r25,Y+2
 2035 0bb8 FC01      		movw r30,r24
 2036 0bba 8381      		ldd r24,Z+3
 2037 0bbc 9481      		ldd r25,Z+4
 2038 0bbe 0196      		adiw r24,1
 2039 0bc0 01F4      		brne .L103
 2040               		.loc 2 549 0 is_stmt 0 discriminator 1
 2041 0bc2 80E1      		ldi r24,lo8(16)
 2042 0bc4 90E0      		ldi r25,0
 2043 0bc6 00C0      		rjmp .L104
 2044               	.L103:
 2045               		.loc 2 549 0 discriminator 2
 2046 0bc8 80E0      		ldi r24,0
 2047 0bca 90E0      		ldi r25,0
 2048               	.L104:
 2049               		.loc 2 549 0 discriminator 4
 2050 0bcc 822B      		or r24,r18
 2051 0bce 932B      		or r25,r19
 2052 0bd0 9A87      		std Y+10,r25
 2053 0bd2 8987      		std Y+9,r24
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 551:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2054               		.loc 2 551 0 is_stmt 1 discriminator 4
 2055 0bd4 8981      		ldd r24,Y+1
 2056 0bd6 9A81      		ldd r25,Y+2
 2057 0bd8 FC01      		movw r30,r24
 2058 0bda 8785      		ldd r24,Z+15
 2059 0bdc 8295      		swap r24
 2060 0bde 8F70      		andi r24,lo8(15)
 2061 0be0 882F      		mov r24,r24
 2062 0be2 90E0      		ldi r25,0
 2063 0be4 0396      		adiw r24,3
 2064 0be6 880F      		lsl r24
 2065 0be8 991F      		rol r25
 2066 0bea 8050      		subi r24,lo8(-(nwkIb))
 2067 0bec 9040      		sbci r25,hi8(-(nwkIb))
 2068 0bee FC01      		movw r30,r24
 2069 0bf0 2081      		ld r18,Z
 2070 0bf2 3181      		ldd r19,Z+1
 2071 0bf4 CE01      		movw r24,r28
 2072 0bf6 0396      		adiw r24,3
 2073 0bf8 F901      		movw r30,r18
 2074 0bfa 0995      		icall
 2075               	.L105:
 2076               	/* epilogue start */
 552:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2077               		.loc 2 552 0 discriminator 1
 2078 0bfc 6196      		adiw r28,17
 2079 0bfe 0FB6      		in __tmp_reg__,__SREG__
 2080 0c00 F894      		cli
 2081 0c02 DEBF      		out __SP_H__,r29
 2082 0c04 0FBE      		out __SREG__,__tmp_reg__
 2083 0c06 CDBF      		out __SP_L__,r28
 2084 0c08 DF91      		pop r29
 2085 0c0a CF91      		pop r28
 2086 0c0c 0895      		ret
 2087               		.cfi_endproc
 2088               	.LFE74:
 2091               	nwkRxIndicateBeaconFrame:
 2092               	.LFB75:
 553:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 554:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 555:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 556:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateBeaconFrame(NwkFrame_t *frame)
 557:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2093               		.loc 2 557 0
 2094               		.cfi_startproc
 2095 0c0e CF93      		push r28
 2096               	.LCFI40:
 2097               		.cfi_def_cfa_offset 3
 2098               		.cfi_offset 28, -2
 2099 0c10 DF93      		push r29
 2100               	.LCFI41:
 2101               		.cfi_def_cfa_offset 4
 2102               		.cfi_offset 29, -3
 2103 0c12 CDB7      		in r28,__SP_L__
 2104 0c14 DEB7      		in r29,__SP_H__
 2105               	.LCFI42:
 2106               		.cfi_def_cfa_register 28
 2107 0c16 6197      		sbiw r28,17
 2108               	.LCFI43:
 2109               		.cfi_def_cfa_offset 21
 2110 0c18 0FB6      		in __tmp_reg__,__SREG__
 2111 0c1a F894      		cli
 2112 0c1c DEBF      		out __SP_H__,r29
 2113 0c1e 0FBE      		out __SREG__,__tmp_reg__
 2114 0c20 CDBF      		out __SP_L__,r28
 2115               	/* prologue: function */
 2116               	/* frame size = 17 */
 2117               	/* stack size = 19 */
 2118               	.L__stack_usage = 19
 2119 0c22 998B      		std Y+17,r25
 2120 0c24 888B      		std Y+16,r24
 558:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 2121               		.loc 2 558 0
 2122 0c26 8889      		ldd r24,Y+16
 2123 0c28 9989      		ldd r25,Y+17
 2124 0c2a 0296      		adiw r24,2
 2125 0c2c 9A83      		std Y+2,r25
 2126 0c2e 8983      		std Y+1,r24
 559:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 560:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 561:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2127               		.loc 2 561 0
 2128 0c30 8889      		ldd r24,Y+16
 2129 0c32 9989      		ldd r25,Y+17
 2130 0c34 24E2      		ldi r18,lo8(36)
 2131 0c36 FC01      		movw r30,r24
 2132 0c38 2083      		st Z,r18
 562:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 563:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[0]) {
 2133               		.loc 2 563 0
 2134 0c3a 8091 0000 		lds r24,nwkIb+6
 2135 0c3e 9091 0000 		lds r25,nwkIb+6+1
 2136 0c42 892B      		or r24,r25
 2137 0c44 01F4      		brne .L107
 564:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2138               		.loc 2 564 0
 2139 0c46 80E0      		ldi r24,0
 2140 0c48 00C0      		rjmp .L109
 2141               	.L107:
 565:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 566:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 567:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = frame->beacon.macSrcAddr;
 2142               		.loc 2 567 0
 2143 0c4a 8889      		ldd r24,Y+16
 2144 0c4c 9989      		ldd r25,Y+17
 2145 0c4e FC01      		movw r30,r24
 2146 0c50 8781      		ldd r24,Z+7
 2147 0c52 9085      		ldd r25,Z+8
 2148 0c54 9C83      		std Y+4,r25
 2149 0c56 8B83      		std Y+3,r24
 568:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = frame->beacon.macSrcAddr;
 2150               		.loc 2 568 0
 2151 0c58 8889      		ldd r24,Y+16
 2152 0c5a 9989      		ldd r25,Y+17
 2153 0c5c FC01      		movw r30,r24
 2154 0c5e 8781      		ldd r24,Z+7
 2155 0c60 9085      		ldd r25,Z+8
 2156 0c62 9E83      		std Y+6,r25
 2157 0c64 8D83      		std Y+5,r24
 569:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2158               		.loc 2 569 0
 2159 0c66 1F82      		std Y+7,__zero_reg__
 570:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2160               		.loc 2 570 0
 2161 0c68 1886      		std Y+8,__zero_reg__
 571:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2162               		.loc 2 571 0
 2163 0c6a 8889      		ldd r24,Y+16
 2164 0c6c 9989      		ldd r25,Y+17
 2165 0c6e 8F57      		subi r24,127
 2166 0c70 9F4F      		sbci r25,-1
 2167 0c72 FC01      		movw r30,r24
 2168 0c74 8081      		ld r24,Z
 2169 0c76 9181      		ldd r25,Z+1
 2170 0c78 9C87      		std Y+12,r25
 2171 0c7a 8B87      		std Y+11,r24
 572:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2172               		.loc 2 572 0
 2173 0c7c 8889      		ldd r24,Y+16
 2174 0c7e 9989      		ldd r25,Y+17
 2175 0c80 0E94 0000 		call nwkFramePayloadSize
 2176 0c84 8D87      		std Y+13,r24
 573:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2177               		.loc 2 573 0
 2178 0c86 8889      		ldd r24,Y+16
 2179 0c88 9989      		ldd r25,Y+17
 2180 0c8a 8D57      		subi r24,125
 2181 0c8c 9F4F      		sbci r25,-1
 2182 0c8e FC01      		movw r30,r24
 2183 0c90 8081      		ld r24,Z
 2184 0c92 8E87      		std Y+14,r24
 574:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2185               		.loc 2 574 0
 2186 0c94 8889      		ldd r24,Y+16
 2187 0c96 9989      		ldd r25,Y+17
 2188 0c98 8C57      		subi r24,124
 2189 0c9a 9F4F      		sbci r25,-1
 2190 0c9c FC01      		movw r30,r24
 2191 0c9e 8081      		ld r24,Z
 2192 0ca0 8F87      		std Y+15,r24
 575:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 576:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_BEACON;
 2193               		.loc 2 576 0
 2194 0ca2 80E8      		ldi r24,lo8(-128)
 2195 0ca4 90E0      		ldi r25,0
 2196 0ca6 9A87      		std Y+10,r25
 2197 0ca8 8987      		std Y+9,r24
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 578:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2198               		.loc 2 578 0
 2199 0caa 8981      		ldd r24,Y+1
 2200 0cac 9A81      		ldd r25,Y+2
 2201 0cae FC01      		movw r30,r24
 2202 0cb0 8785      		ldd r24,Z+15
 2203 0cb2 8295      		swap r24
 2204 0cb4 8F70      		andi r24,lo8(15)
 2205 0cb6 882F      		mov r24,r24
 2206 0cb8 90E0      		ldi r25,0
 2207 0cba 0396      		adiw r24,3
 2208 0cbc 880F      		lsl r24
 2209 0cbe 991F      		rol r25
 2210 0cc0 8050      		subi r24,lo8(-(nwkIb))
 2211 0cc2 9040      		sbci r25,hi8(-(nwkIb))
 2212 0cc4 FC01      		movw r30,r24
 2213 0cc6 2081      		ld r18,Z
 2214 0cc8 3181      		ldd r19,Z+1
 2215 0cca CE01      		movw r24,r28
 2216 0ccc 0396      		adiw r24,3
 2217 0cce F901      		movw r30,r18
 2218 0cd0 0995      		icall
 2219               	.L109:
 2220               	/* epilogue start */
 579:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2221               		.loc 2 579 0 discriminator 1
 2222 0cd2 6196      		adiw r28,17
 2223 0cd4 0FB6      		in __tmp_reg__,__SREG__
 2224 0cd6 F894      		cli
 2225 0cd8 DEBF      		out __SP_H__,r29
 2226 0cda 0FBE      		out __SREG__,__tmp_reg__
 2227 0cdc CDBF      		out __SP_L__,r28
 2228 0cde DF91      		pop r29
 2229 0ce0 CF91      		pop r28
 2230 0ce2 0895      		ret
 2231               		.cfi_endproc
 2232               	.LFE75:
 2235               	nwkRxIndicateLLBeaconFrame:
 2236               	.LFB76:
 580:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 581:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 582:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 583:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 584:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLBeaconFrame(NwkFrame_t *frame)
 585:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2237               		.loc 2 585 0
 2238               		.cfi_startproc
 2239 0ce4 CF93      		push r28
 2240               	.LCFI44:
 2241               		.cfi_def_cfa_offset 3
 2242               		.cfi_offset 28, -2
 2243 0ce6 DF93      		push r29
 2244               	.LCFI45:
 2245               		.cfi_def_cfa_offset 4
 2246               		.cfi_offset 29, -3
 2247 0ce8 CDB7      		in r28,__SP_L__
 2248 0cea DEB7      		in r29,__SP_H__
 2249               	.LCFI46:
 2250               		.cfi_def_cfa_register 28
 2251 0cec 2F97      		sbiw r28,15
 2252               	.LCFI47:
 2253               		.cfi_def_cfa_offset 19
 2254 0cee 0FB6      		in __tmp_reg__,__SREG__
 2255 0cf0 F894      		cli
 2256 0cf2 DEBF      		out __SP_H__,r29
 2257 0cf4 0FBE      		out __SREG__,__tmp_reg__
 2258 0cf6 CDBF      		out __SP_L__,r28
 2259               	/* prologue: function */
 2260               	/* frame size = 15 */
 2261               	/* stack size = 17 */
 2262               	.L__stack_usage = 17
 2263 0cf8 9F87      		std Y+15,r25
 2264 0cfa 8E87      		std Y+14,r24
 586:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 587:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 588:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2265               		.loc 2 588 0
 2266 0cfc 8E85      		ldd r24,Y+14
 2267 0cfe 9F85      		ldd r25,Y+15
 2268 0d00 24E2      		ldi r18,lo8(36)
 2269 0d02 FC01      		movw r30,r24
 2270 0d04 2083      		st Z,r18
 589:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 590:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_BEACON_ENDPOINT]) {
 2271               		.loc 2 590 0
 2272 0d06 8091 0000 		lds r24,nwkIb+6
 2273 0d0a 9091 0000 		lds r25,nwkIb+6+1
 2274 0d0e 892B      		or r24,r25
 2275 0d10 01F4      		brne .L111
 591:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2276               		.loc 2 591 0
 2277 0d12 80E0      		ldi r24,0
 2278 0d14 00C0      		rjmp .L113
 2279               	.L111:
 592:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 593:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Beacon as they are in standart 802.15.4
 594:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 595:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 596:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2280               		.loc 2 596 0
 2281 0d16 1A82      		std Y+2,__zero_reg__
 2282 0d18 1982      		std Y+1,__zero_reg__
 597:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2283               		.loc 2 597 0
 2284 0d1a 1C82      		std Y+4,__zero_reg__
 2285 0d1c 1B82      		std Y+3,__zero_reg__
 598:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2286               		.loc 2 598 0
 2287 0d1e 1D82      		std Y+5,__zero_reg__
 599:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2288               		.loc 2 599 0
 2289 0d20 1E82      		std Y+6,__zero_reg__
 600:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 601:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->LLbeacon;
 2290               		.loc 2 601 0
 2291 0d22 8E85      		ldd r24,Y+14
 2292 0d24 9F85      		ldd r25,Y+15
 2293 0d26 0296      		adiw r24,2
 2294 0d28 9A87      		std Y+10,r25
 2295 0d2a 8987      		std Y+9,r24
 602:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2296               		.loc 2 602 0
 2297 0d2c 8E85      		ldd r24,Y+14
 2298 0d2e 9F85      		ldd r25,Y+15
 2299 0d30 0E94 0000 		call nwkFramePayloadSize
 2300 0d34 8B87      		std Y+11,r24
 603:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2301               		.loc 2 603 0
 2302 0d36 8E85      		ldd r24,Y+14
 2303 0d38 9F85      		ldd r25,Y+15
 2304 0d3a 8D57      		subi r24,125
 2305 0d3c 9F4F      		sbci r25,-1
 2306 0d3e FC01      		movw r30,r24
 2307 0d40 8081      		ld r24,Z
 2308 0d42 8C87      		std Y+12,r24
 604:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2309               		.loc 2 604 0
 2310 0d44 8E85      		ldd r24,Y+14
 2311 0d46 9F85      		ldd r25,Y+15
 2312 0d48 8C57      		subi r24,124
 2313 0d4a 9F4F      		sbci r25,-1
 2314 0d4c FC01      		movw r30,r24
 2315 0d4e 8081      		ld r24,Z
 2316 0d50 8D87      		std Y+13,r24
 605:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 606:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_BEACON;
 2317               		.loc 2 606 0
 2318 0d52 80E0      		ldi r24,0
 2319 0d54 91E0      		ldi r25,lo8(1)
 2320 0d56 9887      		std Y+8,r25
 2321 0d58 8F83      		std Y+7,r24
 607:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 608:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 609:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_BEACON_ENDPOINT](&ind);
 2322               		.loc 2 609 0
 2323 0d5a 2091 0000 		lds r18,nwkIb+6
 2324 0d5e 3091 0000 		lds r19,nwkIb+6+1
 2325 0d62 CE01      		movw r24,r28
 2326 0d64 0196      		adiw r24,1
 2327 0d66 F901      		movw r30,r18
 2328 0d68 0995      		icall
 2329               	.L113:
 2330               	/* epilogue start */
 610:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2331               		.loc 2 610 0 discriminator 1
 2332 0d6a 2F96      		adiw r28,15
 2333 0d6c 0FB6      		in __tmp_reg__,__SREG__
 2334 0d6e F894      		cli
 2335 0d70 DEBF      		out __SP_H__,r29
 2336 0d72 0FBE      		out __SREG__,__tmp_reg__
 2337 0d74 CDBF      		out __SP_L__,r28
 2338 0d76 DF91      		pop r29
 2339 0d78 CF91      		pop r28
 2340 0d7a 0895      		ret
 2341               		.cfi_endproc
 2342               	.LFE76:
 2345               	nwkRxIndicateLLCommandFrame:
 2346               	.LFB77:
 611:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 612:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLCommandFrame(NwkFrame_t *frame)
 613:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2347               		.loc 2 613 0
 2348               		.cfi_startproc
 2349 0d7c CF93      		push r28
 2350               	.LCFI48:
 2351               		.cfi_def_cfa_offset 3
 2352               		.cfi_offset 28, -2
 2353 0d7e DF93      		push r29
 2354               	.LCFI49:
 2355               		.cfi_def_cfa_offset 4
 2356               		.cfi_offset 29, -3
 2357 0d80 CDB7      		in r28,__SP_L__
 2358 0d82 DEB7      		in r29,__SP_H__
 2359               	.LCFI50:
 2360               		.cfi_def_cfa_register 28
 2361 0d84 6197      		sbiw r28,17
 2362               	.LCFI51:
 2363               		.cfi_def_cfa_offset 21
 2364 0d86 0FB6      		in __tmp_reg__,__SREG__
 2365 0d88 F894      		cli
 2366 0d8a DEBF      		out __SP_H__,r29
 2367 0d8c 0FBE      		out __SREG__,__tmp_reg__
 2368 0d8e CDBF      		out __SP_L__,r28
 2369               	/* prologue: function */
 2370               	/* frame size = 17 */
 2371               	/* stack size = 19 */
 2372               	.L__stack_usage = 19
 2373 0d90 998B      		std Y+17,r25
 2374 0d92 888B      		std Y+16,r24
 614:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 615:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 616:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2375               		.loc 2 616 0
 2376 0d94 8889      		ldd r24,Y+16
 2377 0d96 9989      		ldd r25,Y+17
 2378 0d98 0296      		adiw r24,2
 2379 0d9a 9A83      		std Y+2,r25
 2380 0d9c 8983      		std Y+1,r24
 617:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 618:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 619:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2381               		.loc 2 619 0
 2382 0d9e 8889      		ldd r24,Y+16
 2383 0da0 9989      		ldd r25,Y+17
 2384 0da2 24E2      		ldi r18,lo8(36)
 2385 0da4 FC01      		movw r30,r24
 2386 0da6 2083      		st Z,r18
 620:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 621:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_COMMAND_ENDPOINT]) {
 2387               		.loc 2 621 0
 2388 0da8 8091 0000 		lds r24,nwkIb+12
 2389 0dac 9091 0000 		lds r25,nwkIb+12+1
 2390 0db0 892B      		or r24,r25
 2391 0db2 01F4      		brne .L115
 622:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2392               		.loc 2 622 0
 2393 0db4 80E0      		ldi r24,0
 2394 0db6 00C0      		rjmp .L117
 2395               	.L115:
 623:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 624:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 625:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 626:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 627:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 628:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2396               		.loc 2 628 0
 2397 0db8 1C82      		std Y+4,__zero_reg__
 2398 0dba 1B82      		std Y+3,__zero_reg__
 629:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2399               		.loc 2 629 0
 2400 0dbc 1E82      		std Y+6,__zero_reg__
 2401 0dbe 1D82      		std Y+5,__zero_reg__
 630:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2402               		.loc 2 630 0
 2403 0dc0 1F82      		std Y+7,__zero_reg__
 631:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2404               		.loc 2 631 0
 2405 0dc2 1886      		std Y+8,__zero_reg__
 632:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 633:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2406               		.loc 2 633 0
 2407 0dc4 8889      		ldd r24,Y+16
 2408 0dc6 9989      		ldd r25,Y+17
 2409 0dc8 8F57      		subi r24,127
 2410 0dca 9F4F      		sbci r25,-1
 2411 0dcc FC01      		movw r30,r24
 2412 0dce 8081      		ld r24,Z
 2413 0dd0 9181      		ldd r25,Z+1
 2414 0dd2 9C87      		std Y+12,r25
 2415 0dd4 8B87      		std Y+11,r24
 634:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 635:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2416               		.loc 2 635 0
 2417 0dd6 8889      		ldd r24,Y+16
 2418 0dd8 9989      		ldd r25,Y+17
 2419 0dda 0E94 0000 		call nwkFramePayloadSize
 2420 0dde 8D87      		std Y+13,r24
 636:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2421               		.loc 2 636 0
 2422 0de0 8889      		ldd r24,Y+16
 2423 0de2 9989      		ldd r25,Y+17
 2424 0de4 8D57      		subi r24,125
 2425 0de6 9F4F      		sbci r25,-1
 2426 0de8 FC01      		movw r30,r24
 2427 0dea 8081      		ld r24,Z
 2428 0dec 8E87      		std Y+14,r24
 637:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2429               		.loc 2 637 0
 2430 0dee 8889      		ldd r24,Y+16
 2431 0df0 9989      		ldd r25,Y+17
 2432 0df2 8C57      		subi r24,124
 2433 0df4 9F4F      		sbci r25,-1
 2434 0df6 FC01      		movw r30,r24
 2435 0df8 8081      		ld r24,Z
 2436 0dfa 8F87      		std Y+15,r24
 638:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 639:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_MACCOMMAND;
 2437               		.loc 2 639 0
 2438 0dfc 80E0      		ldi r24,0
 2439 0dfe 92E0      		ldi r25,lo8(2)
 2440 0e00 9A87      		std Y+10,r25
 2441 0e02 8987      		std Y+9,r24
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_COMMAND_ENDPOINT](&ind);
 2442               		.loc 2 641 0
 2443 0e04 2091 0000 		lds r18,nwkIb+12
 2444 0e08 3091 0000 		lds r19,nwkIb+12+1
 2445 0e0c CE01      		movw r24,r28
 2446 0e0e 0396      		adiw r24,3
 2447 0e10 F901      		movw r30,r18
 2448 0e12 0995      		icall
 2449               	.L117:
 2450               	/* epilogue start */
 642:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2451               		.loc 2 642 0 discriminator 1
 2452 0e14 6196      		adiw r28,17
 2453 0e16 0FB6      		in __tmp_reg__,__SREG__
 2454 0e18 F894      		cli
 2455 0e1a DEBF      		out __SP_H__,r29
 2456 0e1c 0FBE      		out __SREG__,__tmp_reg__
 2457 0e1e CDBF      		out __SP_L__,r28
 2458 0e20 DF91      		pop r29
 2459 0e22 CF91      		pop r28
 2460 0e24 0895      		ret
 2461               		.cfi_endproc
 2462               	.LFE77:
 2465               	nwkRxIndicateLLACKFrame:
 2466               	.LFB78:
 643:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 644:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLACKFrame(NwkFrame_t *frame)
 645:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2467               		.loc 2 645 0
 2468               		.cfi_startproc
 2469 0e26 CF93      		push r28
 2470               	.LCFI52:
 2471               		.cfi_def_cfa_offset 3
 2472               		.cfi_offset 28, -2
 2473 0e28 DF93      		push r29
 2474               	.LCFI53:
 2475               		.cfi_def_cfa_offset 4
 2476               		.cfi_offset 29, -3
 2477 0e2a CDB7      		in r28,__SP_L__
 2478 0e2c DEB7      		in r29,__SP_H__
 2479               	.LCFI54:
 2480               		.cfi_def_cfa_register 28
 2481 0e2e 6197      		sbiw r28,17
 2482               	.LCFI55:
 2483               		.cfi_def_cfa_offset 21
 2484 0e30 0FB6      		in __tmp_reg__,__SREG__
 2485 0e32 F894      		cli
 2486 0e34 DEBF      		out __SP_H__,r29
 2487 0e36 0FBE      		out __SREG__,__tmp_reg__
 2488 0e38 CDBF      		out __SP_L__,r28
 2489               	/* prologue: function */
 2490               	/* frame size = 17 */
 2491               	/* stack size = 19 */
 2492               	.L__stack_usage = 19
 2493 0e3a 998B      		std Y+17,r25
 2494 0e3c 888B      		std Y+16,r24
 646:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 647:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2495               		.loc 2 647 0
 2496 0e3e 8889      		ldd r24,Y+16
 2497 0e40 9989      		ldd r25,Y+17
 2498 0e42 0296      		adiw r24,2
 2499 0e44 9A83      		std Y+2,r25
 2500 0e46 8983      		std Y+1,r24
 648:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 649:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 650:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2501               		.loc 2 650 0
 2502 0e48 8889      		ldd r24,Y+16
 2503 0e4a 9989      		ldd r25,Y+17
 2504 0e4c 24E2      		ldi r18,lo8(36)
 2505 0e4e FC01      		movw r30,r24
 2506 0e50 2083      		st Z,r18
 651:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 652:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_ACK_ENDPOINT]) {
 2507               		.loc 2 652 0
 2508 0e52 8091 0000 		lds r24,nwkIb+14
 2509 0e56 9091 0000 		lds r25,nwkIb+14+1
 2510 0e5a 892B      		or r24,r25
 2511 0e5c 01F4      		brne .L119
 653:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2512               		.loc 2 653 0
 2513 0e5e 80E0      		ldi r24,0
 2514 0e60 00C0      		rjmp .L121
 2515               	.L119:
 654:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 655:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 656:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* 
 657:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * this informations are not received in a LLDN Command as they are in standart 802.15.4
 658:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 659:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 660:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2516               		.loc 2 660 0
 2517 0e62 1C82      		std Y+4,__zero_reg__
 2518 0e64 1B82      		std Y+3,__zero_reg__
 661:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2519               		.loc 2 661 0
 2520 0e66 1E82      		std Y+6,__zero_reg__
 2521 0e68 1D82      		std Y+5,__zero_reg__
 662:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2522               		.loc 2 662 0
 2523 0e6a 1F82      		std Y+7,__zero_reg__
 663:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2524               		.loc 2 663 0
 2525 0e6c 1886      		std Y+8,__zero_reg__
 664:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 665:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data =  frame->payload;
 2526               		.loc 2 665 0
 2527 0e6e 8889      		ldd r24,Y+16
 2528 0e70 9989      		ldd r25,Y+17
 2529 0e72 8F57      		subi r24,127
 2530 0e74 9F4F      		sbci r25,-1
 2531 0e76 FC01      		movw r30,r24
 2532 0e78 8081      		ld r24,Z
 2533 0e7a 9181      		ldd r25,Z+1
 2534 0e7c 9C87      		std Y+12,r25
 2535 0e7e 8B87      		std Y+11,r24
 666:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2536               		.loc 2 666 0
 2537 0e80 8889      		ldd r24,Y+16
 2538 0e82 9989      		ldd r25,Y+17
 2539 0e84 0E94 0000 		call nwkFramePayloadSize
 2540 0e88 8D87      		std Y+13,r24
 667:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2541               		.loc 2 667 0
 2542 0e8a 8889      		ldd r24,Y+16
 2543 0e8c 9989      		ldd r25,Y+17
 2544 0e8e 8D57      		subi r24,125
 2545 0e90 9F4F      		sbci r25,-1
 2546 0e92 FC01      		movw r30,r24
 2547 0e94 8081      		ld r24,Z
 2548 0e96 8E87      		std Y+14,r24
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2549               		.loc 2 668 0
 2550 0e98 8889      		ldd r24,Y+16
 2551 0e9a 9989      		ldd r25,Y+17
 2552 0e9c 8C57      		subi r24,124
 2553 0e9e 9F4F      		sbci r25,-1
 2554 0ea0 FC01      		movw r30,r24
 2555 0ea2 8081      		ld r24,Z
 2556 0ea4 8F87      		std Y+15,r24
 669:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 670:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_OPT_LLDN_ACK;
 2557               		.loc 2 670 0
 2558 0ea6 80E0      		ldi r24,0
 2559 0ea8 90E4      		ldi r25,lo8(64)
 2560 0eaa 9A87      		std Y+10,r25
 2561 0eac 8987      		std Y+9,r24
 671:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 672:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_ACK_ENDPOINT](&ind);
 2562               		.loc 2 672 0
 2563 0eae 2091 0000 		lds r18,nwkIb+14
 2564 0eb2 3091 0000 		lds r19,nwkIb+14+1
 2565 0eb6 CE01      		movw r24,r28
 2566 0eb8 0396      		adiw r24,3
 2567 0eba F901      		movw r30,r18
 2568 0ebc 0995      		icall
 2569               	.L121:
 2570               	/* epilogue start */
 673:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2571               		.loc 2 673 0 discriminator 1
 2572 0ebe 6196      		adiw r28,17
 2573 0ec0 0FB6      		in __tmp_reg__,__SREG__
 2574 0ec2 F894      		cli
 2575 0ec4 DEBF      		out __SP_H__,r29
 2576 0ec6 0FBE      		out __SREG__,__tmp_reg__
 2577 0ec8 CDBF      		out __SP_L__,r28
 2578 0eca DF91      		pop r29
 2579 0ecc CF91      		pop r28
 2580 0ece 0895      		ret
 2581               		.cfi_endproc
 2582               	.LFE78:
 2585               	nwkRxHandleIndication:
 2586               	.LFB79:
 674:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 675:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 676:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 677:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleIndication(NwkFrame_t *frame)
 678:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2587               		.loc 2 678 0
 2588               		.cfi_startproc
 2589 0ed0 CF93      		push r28
 2590               	.LCFI56:
 2591               		.cfi_def_cfa_offset 3
 2592               		.cfi_offset 28, -2
 2593 0ed2 DF93      		push r29
 2594               	.LCFI57:
 2595               		.cfi_def_cfa_offset 4
 2596               		.cfi_offset 29, -3
 2597 0ed4 00D0      		rcall .
 2598 0ed6 1F92      		push __zero_reg__
 2599               	.LCFI58:
 2600               		.cfi_def_cfa_offset 7
 2601 0ed8 CDB7      		in r28,__SP_L__
 2602 0eda DEB7      		in r29,__SP_H__
 2603               	.LCFI59:
 2604               		.cfi_def_cfa_register 28
 2605               	/* prologue: function */
 2606               	/* frame size = 3 */
 2607               	/* stack size = 5 */
 2608               	.L__stack_usage = 5
 2609 0edc 9B83      		std Y+3,r25
 2610 0ede 8A83      		std Y+2,r24
 679:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool ack;
 680:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 681:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = 0;
 2611               		.loc 2 681 0
 2612 0ee0 1092 0000 		sts nwkRxAckControl,__zero_reg__
 682:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack = nwkRxIndicateDataFrame(frame);
 2613               		.loc 2 682 0
 2614 0ee4 8A81      		ldd r24,Y+2
 2615 0ee6 9B81      		ldd r25,Y+3
 2616 0ee8 0E94 0000 		call nwkRxIndicateDataFrame
 2617 0eec 8983      		std Y+1,r24
 683:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 684:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == frame->header.nwkFcf.ackRequest) {
 2618               		.loc 2 684 0
 2619 0eee 8A81      		ldd r24,Y+2
 2620 0ef0 9B81      		ldd r25,Y+3
 2621 0ef2 FC01      		movw r30,r24
 2622 0ef4 8385      		ldd r24,Z+11
 2623 0ef6 8170      		andi r24,lo8(1)
 2624 0ef8 8823      		tst r24
 2625 0efa 01F4      		brne .L123
 685:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2626               		.loc 2 685 0
 2627 0efc 1982      		std Y+1,__zero_reg__
 2628               	.L123:
 686:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 687:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 688:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == frame->header.macDstAddr &&
 2629               		.loc 2 688 0
 2630 0efe 8A81      		ldd r24,Y+2
 2631 0f00 9B81      		ldd r25,Y+3
 2632 0f02 FC01      		movw r30,r24
 2633 0f04 8781      		ldd r24,Z+7
 2634 0f06 9085      		ldd r25,Z+8
 2635 0f08 0196      		adiw r24,1
 2636 0f0a 01F4      		brne .L124
 689:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2637               		.loc 2 689 0 discriminator 1
 2638 0f0c 2091 0000 		lds r18,nwkIb
 2639 0f10 3091 0000 		lds r19,nwkIb+1
 2640 0f14 8A81      		ldd r24,Y+2
 2641 0f16 9B81      		ldd r25,Y+3
 2642 0f18 FC01      		movw r30,r24
 2643 0f1a 8785      		ldd r24,Z+15
 2644 0f1c 9089      		ldd r25,Z+16
 688:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2645               		.loc 2 688 0 discriminator 1
 2646 0f1e 2817      		cp r18,r24
 2647 0f20 3907      		cpc r19,r25
 2648 0f22 01F4      		brne .L124
 690:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			0 == frame->header.nwkFcf.multicast) {
 2649               		.loc 2 690 0
 2650 0f24 8A81      		ldd r24,Y+2
 2651 0f26 9B81      		ldd r25,Y+3
 2652 0f28 FC01      		movw r30,r24
 2653 0f2a 8385      		ldd r24,Z+11
 2654 0f2c 8870      		andi r24,lo8(8)
 689:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2655               		.loc 2 689 0
 2656 0f2e 8823      		tst r24
 2657 0f30 01F4      		brne .L124
 691:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = true;
 2658               		.loc 2 691 0
 2659 0f32 81E0      		ldi r24,lo8(1)
 2660 0f34 8983      		std Y+1,r24
 2661               	.L124:
 692:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 693:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 694:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == frame->header.macDstPanId) {
 2662               		.loc 2 694 0
 2663 0f36 8A81      		ldd r24,Y+2
 2664 0f38 9B81      		ldd r25,Y+3
 2665 0f3a FC01      		movw r30,r24
 2666 0f3c 8581      		ldd r24,Z+5
 2667 0f3e 9681      		ldd r25,Z+6
 2668 0f40 0196      		adiw r24,1
 2669 0f42 01F4      		brne .L125
 695:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2670               		.loc 2 695 0
 2671 0f44 1982      		std Y+1,__zero_reg__
 2672               	.L125:
 696:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 697:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 698:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == nwkIb.addr) {
 2673               		.loc 2 698 0
 2674 0f46 8091 0000 		lds r24,nwkIb
 2675 0f4a 9091 0000 		lds r25,nwkIb+1
 2676 0f4e 0196      		adiw r24,1
 2677 0f50 01F4      		brne .L126
 699:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2678               		.loc 2 699 0
 2679 0f52 1982      		std Y+1,__zero_reg__
 2680               	.L126:
 700:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 701:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 702:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ack) {
 2681               		.loc 2 702 0
 2682 0f54 8981      		ldd r24,Y+1
 2683 0f56 8823      		tst r24
 2684 0f58 01F0      		breq .L127
 703:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxSendAck(frame);
 2685               		.loc 2 703 0
 2686 0f5a 8A81      		ldd r24,Y+2
 2687 0f5c 9B81      		ldd r25,Y+3
 2688 0f5e 0E94 0000 		call nwkRxSendAck
 2689               	.L127:
 704:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 705:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 706:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2690               		.loc 2 706 0
 2691 0f62 8A81      		ldd r24,Y+2
 2692 0f64 9B81      		ldd r25,Y+3
 2693 0f66 24E2      		ldi r18,lo8(36)
 2694 0f68 FC01      		movw r30,r24
 2695 0f6a 2083      		st Z,r18
 707:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2696               		.loc 2 707 0
 2697 0f6c 0000      		nop
 2698               	/* epilogue start */
 2699 0f6e 0F90      		pop __tmp_reg__
 2700 0f70 0F90      		pop __tmp_reg__
 2701 0f72 0F90      		pop __tmp_reg__
 2702 0f74 DF91      		pop r29
 2703 0f76 CF91      		pop r28
 2704 0f78 0895      		ret
 2705               		.cfi_endproc
 2706               	.LFE79:
 2708               	.global	nwkRxTaskHandler
 2710               	nwkRxTaskHandler:
 2711               	.LFB80:
 708:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 709:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 710:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Rx Module task handler
 711:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 712:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxTaskHandler(void)
 713:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2712               		.loc 2 713 0
 2713               		.cfi_startproc
 2714 0f7a CF93      		push r28
 2715               	.LCFI60:
 2716               		.cfi_def_cfa_offset 3
 2717               		.cfi_offset 28, -2
 2718 0f7c DF93      		push r29
 2719               	.LCFI61:
 2720               		.cfi_def_cfa_offset 4
 2721               		.cfi_offset 29, -3
 2722 0f7e 00D0      		rcall .
 2723               	.LCFI62:
 2724               		.cfi_def_cfa_offset 6
 2725 0f80 CDB7      		in r28,__SP_L__
 2726 0f82 DEB7      		in r29,__SP_H__
 2727               	.LCFI63:
 2728               		.cfi_def_cfa_register 28
 2729               	/* prologue: function */
 2730               	/* frame size = 2 */
 2731               	/* stack size = 4 */
 2732               	.L__stack_usage = 4
 714:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame = NULL;
 2733               		.loc 2 714 0
 2734 0f84 1A82      		std Y+2,__zero_reg__
 2735 0f86 1982      		std Y+1,__zero_reg__
 715:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 716:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 2736               		.loc 2 716 0
 2737 0f88 00C0      		rjmp .L129
 2738               	.L138:
 717:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2739               		.loc 2 717 0
 2740 0f8a 8981      		ldd r24,Y+1
 2741 0f8c 9A81      		ldd r25,Y+2
 2742 0f8e FC01      		movw r30,r24
 2743 0f90 8081      		ld r24,Z
 2744 0f92 882F      		mov r24,r24
 2745 0f94 90E0      		ldi r25,0
 2746 0f96 092E      		mov __tmp_reg__,r25
 2747 0f98 000C      		lsl r0
 2748 0f9a AA0B      		sbc r26,r26
 2749 0f9c BB0B      		sbc r27,r27
 2750 0f9e 40E2      		ldi r20,lo8(32)
 2751 0fa0 50E0      		ldi r21,0
 2752 0fa2 28E0      		ldi r18,lo8(8)
 2753 0fa4 30E0      		ldi r19,0
 2754 0fa6 841B      		sub r24,r20
 2755 0fa8 950B      		sbc r25,r21
 2756 0faa 2817      		cp r18,r24
 2757 0fac 3907      		cpc r19,r25
 2758 0fae 00F0      		brlo .L129
 2759 0fb0 8050      		subi r24,lo8(-(gs(.L131)))
 2760 0fb2 9040      		sbci r25,hi8(-(gs(.L131)))
 2761 0fb4 FC01      		movw r30,r24
 2762 0fb6 0C94 0000 		jmp __tablejump2__
 2763               		.section	.progmem.gcc_sw_table,"a",@progbits
 2764               		.p2align	1
 2765               	.L131:
 2766 0000 0000      		.word gs(.L130)
 2767 0002 0000      		.word gs(.L129)
 2768 0004 0000      		.word gs(.L132)
 2769 0006 0000      		.word gs(.L129)
 2770 0008 0000      		.word gs(.L133)
 2771 000a 0000      		.word gs(.L134)
 2772 000c 0000      		.word gs(.L135)
 2773 000e 0000      		.word gs(.L136)
 2774 0010 0000      		.word gs(.L137)
 2775               		.text
 2776               	.L130:
 718:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_RECEIVED:
 719:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 720:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleReceivedFrame(frame);
 2777               		.loc 2 720 0
 2778 0fba 8981      		ldd r24,Y+1
 2779 0fbc 9A81      		ldd r25,Y+2
 2780 0fbe 0E94 0000 		call nwkRxHandleReceivedFrame
 721:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 722:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2781               		.loc 2 722 0
 2782 0fc2 00C0      		rjmp .L129
 2783               	.L132:
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 724:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 725:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_DECRYPT:
 726:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 727:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkSecurityProcess(frame, false);
 728:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 729:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 730:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 731:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 732:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_INDICATE:
 733:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 734:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleIndication(frame);
 2784               		.loc 2 734 0
 2785 0fc4 8981      		ldd r24,Y+1
 2786 0fc6 9A81      		ldd r25,Y+2
 2787 0fc8 0E94 0000 		call nwkRxHandleIndication
 735:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 736:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2788               		.loc 2 736 0
 2789 0fcc 00C0      		rjmp .L129
 2790               	.L133:
 737:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 738:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 739:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_ROUTE:
 740:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 741:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRouteFrame(frame);
 742:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 743:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 744:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 745:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 746:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_FINISH:
 747:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 748:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkFrameFree(frame);
 2791               		.loc 2 748 0
 2792 0fce 8981      		ldd r24,Y+1
 2793 0fd0 9A81      		ldd r25,Y+2
 2794 0fd2 0E94 0000 		call nwkFrameFree
 749:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 750:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2795               		.loc 2 750 0
 2796 0fd6 00C0      		rjmp .L129
 2797               	.L134:
 751:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 752:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_BEACON:
 753:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 754:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateBeaconFrame(frame);
 2798               		.loc 2 754 0
 2799 0fd8 8981      		ldd r24,Y+1
 2800 0fda 9A81      		ldd r25,Y+2
 2801 0fdc 0E94 0000 		call nwkRxIndicateBeaconFrame
 755:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 756:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2802               		.loc 2 756 0
 2803 0fe0 00C0      		rjmp .L129
 2804               	.L135:
 757:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 758:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 759:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLBEACON:
 760:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 761:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLBeaconFrame(frame);
 2805               		.loc 2 761 0
 2806 0fe2 8981      		ldd r24,Y+1
 2807 0fe4 9A81      		ldd r25,Y+2
 2808 0fe6 0E94 0000 		call nwkRxIndicateLLBeaconFrame
 762:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 763:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2809               		.loc 2 763 0
 2810 0fea 00C0      		rjmp .L129
 2811               	.L136:
 764:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 765:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLCOMMAND:
 766:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 767:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLCommandFrame(frame);
 2812               		.loc 2 767 0
 2813 0fec 8981      		ldd r24,Y+1
 2814 0fee 9A81      		ldd r25,Y+2
 2815 0ff0 0E94 0000 		call nwkRxIndicateLLCommandFrame
 768:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 769:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2816               		.loc 2 769 0
 2817 0ff4 00C0      		rjmp .L129
 2818               	.L137:
 770:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 771:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLACKFRAME:
 772:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 773:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLACKFrame(frame);
 2819               		.loc 2 773 0
 2820 0ff6 8981      		ldd r24,Y+1
 2821 0ff8 9A81      		ldd r25,Y+2
 2822 0ffa 0E94 0000 		call nwkRxIndicateLLACKFrame
 774:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 775:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2823               		.loc 2 775 0
 2824 0ffe 0000      		nop
 2825               	.L129:
 716:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2826               		.loc 2 716 0
 2827 1000 8981      		ldd r24,Y+1
 2828 1002 9A81      		ldd r25,Y+2
 2829 1004 0E94 0000 		call nwkFrameNext
 2830 1008 9A83      		std Y+2,r25
 2831 100a 8983      		std Y+1,r24
 2832 100c 8981      		ldd r24,Y+1
 2833 100e 9A81      		ldd r25,Y+2
 2834 1010 892B      		or r24,r25
 2835 1012 01F0      		breq .+2
 2836 1014 00C0      		rjmp .L138
 776:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 777:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 778:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 779:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2837               		.loc 2 779 0
 2838 1016 0000      		nop
 2839               	/* epilogue start */
 2840 1018 0F90      		pop __tmp_reg__
 2841 101a 0F90      		pop __tmp_reg__
 2842 101c DF91      		pop r29
 2843 101e CF91      		pop r28
 2844 1020 0895      		ret
 2845               		.cfi_endproc
 2846               	.LFE80:
 2848               	.Letext0:
 2849               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 2850               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 2851               		.file 5 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 2852               		.file 6 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 2853               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwkDataReq.h"
 2854               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 2855               		.file 9 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
 2856               		.file 10 "config/config.h"
 2857               		.file 11 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkRx.c
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:7      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 n
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:15     .bss.tTS:00000000 tTS
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:19     .text:00000000 nwkFramePayloadSize
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:81     .bss.nwkRxDuplicateRejectionTable:00000000 nwkRxDuplicateRejectionTable
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:86     .bss.nwkRxAckControl:00000000 nwkRxAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:91     .bss.nwkRxDuplicateRejectionTimer:00000000 nwkRxDuplicateRejectionTimer
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:96     .text:00000044 nwkRxInit
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:836    .text:0000049a nwkRxDuplicateRejectionTimerHandler
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:1234   .text:000006dc nwkRxSeriveDataInd
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:189    .text:000000b6 PHY_DataInd
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:626    .text:00000370 nwkRxSendAck
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:798    .text:0000047e NWK_SetAckControl
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:951    .text:00000534 nwkRxRejectDuplicate
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:1302   .text:00000726 nwkRxHandleReceivedFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:1752   .text:00000a00 nwkRxIndicateDataFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:2091   .text:00000c0e nwkRxIndicateBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:2235   .text:00000ce4 nwkRxIndicateLLBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:2345   .text:00000d7c nwkRxIndicateLLCommandFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:2465   .text:00000e26 nwkRxIndicateLLACKFrame
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:2585   .text:00000ed0 nwkRxHandleIndication
C:\Users\GUILHE~1\AppData\Local\Temp\ccH7oNVI.s:2710   .text:00000f7a nwkRxTaskHandler

UNDEFINED SYMBOLS
NWK_OpenEndpoint
printf
nwkFrameAlloc
nwkFrameAlloc_LLDN
memcpy
nwkFrameCommandInit
nwkTxFrame
SYS_TimerStart
nwkTxAckReceived
nwkIb
NWK_GroupIsMember
nwkTxBroadcastFrame
__tablejump2__
nwkFrameFree
nwkFrameNext
__do_copy_data
__do_clear_bss
