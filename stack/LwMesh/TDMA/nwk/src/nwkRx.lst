   1               		.file	"nwkRx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	nwkFramePayloadSize:
  13               	.LFB65:
  14               		.file 1 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
   1:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /**
   2:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \file nwkFrame.h
   3:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   4:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \brief Frame buffers management interface
   5:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   6:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
   8:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  10:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  13:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  16:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  20:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  23:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  26:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  38:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  40:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  41:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  42:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  43:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*
  44:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  *
  46:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  */
  48:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  49:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #ifndef _NWK_FRAME_H_
  50:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define _NWK_FRAME_H_
  51:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  52:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Includes ---------------------------------------------------------------*/
  53:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include <stdint.h>
  54:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #include "compiler.h"
  55:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  56:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Definitions ------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** #define NWK_FRAME_MAX_PAYLOAD_SIZE   127
  58:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  59:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Types ------------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_SET(1)
  61:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameHeader_t {
  62:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  63:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  64:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstPanId;
  65:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macDstAddr;
  66:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  67:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  68:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  69:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t ackRequest : 1;
  70:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t security   : 1;
  71:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t linkLocal  : 1;
  72:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t multicast  : 1;
  73:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t beacon     : 1;
  74:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved   : 3;
  75:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} nwkFcf;
  76:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t nwkSeq;
  77:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkSrcAddr;
  78:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nwkDstAddr;
  79:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct {
  80:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkSrcEndpoint : 4;
  81:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t nwkDstEndpoint : 4;
  82:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
  83:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameHeader_t;
  84:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
  85:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeader_t {
  86:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macFcf;
  87:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeq;
  88:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcPanId;
  89:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t macSrcAddr;
  90:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
  91:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
  92:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t beaconOrder			: 4;
  93:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t superframeOrder		: 4;
  94:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t finalCAPslot			: 4;
  95:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t BatteryLifeExtension	: 1;
  96:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t Reserved				: 1;
  97:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t PANCoordinator			: 1;
  98:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint16_t AssociationPermit		: 1;
  99:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSFS;
 100:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macGTS;
 101:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macPending;
 102:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeader_t;
 103:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 104:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 105:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameBeaconHeaderLLDN_t {
 106:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/******* MHR *****/
 107:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// struct
 108:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// {
 109:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameType 				: 3;
 110:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SecurityEnabled 	: 1;
 111:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t FrameVersion			: 1;
 112:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t ackRequest				: 1;
 113:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// 	uint8_t SubFrameType			: 2;
 114:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	// } macFcf;
 115:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 116:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 117:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 118:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 119:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 120:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 121:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 122:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 123:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 124:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 125:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	/****** MAC Payload *******/
 126:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 127:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 128:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txState 				: 3;
 129:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t txDir 					: 1;
 130:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved				: 1;
 131:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t numMgmtTimeslots: 3; // number of managment time slots
 132:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		// uplink and downlink must be equal
 133:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h ****  } Flags;
 134:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 135:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t PanId;
 136:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t confSeqNumber;
 137:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t TimeSlotSize;
 138:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 139:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 140:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameBeaconHeaderLLDN_t;
 141:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 142:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameGeneralHeaderLLDN_t {
 143:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macFcf;
 144:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t macSeqNumber;
 145:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	struct
 146:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	{
 147:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t secLevel 	: 3;
 148:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t KeyId			: 2;
 149:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSup 	: 1;
 150:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t countSize	: 1;
 151:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t reserved 	: 1;
 152:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	} macSecHeader;
 153:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameGeneralHeaderLLDN_t;
 154:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 155:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 156:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct  NwkFrameMulticastHeader_t {
 157:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t nonMemberRadius    : 4;
 158:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxNonMemberRadius : 4;
 159:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t memberRadius       : 4;
 160:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint16_t maxMemberRadius    : 4;
 161:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrameMulticastHeader_t;
 162:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 163:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** typedef struct NwkFrame_t {
 164:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t state;
 165:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t size;
 166:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 167:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 168:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameHeader_t header;
 169:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeader_t beacon;
 170:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameBeaconHeaderLLDN_t LLbeacon;
 171:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		NwkFrameGeneralHeaderLLDN_t LLgeneral;
 172:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		uint8_t data[NWK_FRAME_MAX_PAYLOAD_SIZE];
 173:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 174:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 175:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	uint8_t *payload;
 176:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 177:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	union {
 178:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 179:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t lqi;
 180:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			int8_t rssi;
 181:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} rx;
 182:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 183:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		struct {
 184:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t status;
 185:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint16_t timeout;
 186:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			uint8_t control;
 187:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 			void (*confirm)(struct NwkFrame_t *frame);
 188:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 		} tx;
 189:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	};
 190:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** } NwkFrame_t;
 191:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** COMPILER_PACK_RESET()
 192:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Prototypes -------------------------------------------------------------*/
 193:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameInit(void);
 194:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc(void);
 195:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameFree(NwkFrame_t *frame);
 196:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);
 197:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** void nwkFrameCommandInit(NwkFrame_t *frame);
 198:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 199:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame);
 200:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*- Implementations --------------------------------------------------------*/
 201:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 
 202:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** /*************************************************************************//**
 203:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** *****************************************************************************/
 204:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** static inline uint8_t nwkFramePayloadSize(NwkFrame_t *frame)
 205:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** {
  15               		.loc 1 205 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25 0004 00D0      		rcall .
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 6
  28 0006 CDB7      		in r28,__SP_L__
  29 0008 DEB7      		in r29,__SP_H__
  30               	.LCFI3:
  31               		.cfi_def_cfa_register 28
  32               	/* prologue: function */
  33               	/* frame size = 2 */
  34               	/* stack size = 4 */
  35               	.L__stack_usage = 4
  36 000a 9A83      		std Y+2,r25
  37 000c 8983      		std Y+1,r24
 206:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** 	return frame->size - (frame->payload - frame->data);
  38               		.loc 1 206 0
  39 000e 8981      		ldd r24,Y+1
  40 0010 9A81      		ldd r25,Y+2
  41 0012 FC01      		movw r30,r24
  42 0014 4181      		ldd r20,Z+1
  43 0016 8981      		ldd r24,Y+1
  44 0018 9A81      		ldd r25,Y+2
  45 001a 8F57      		subi r24,127
  46 001c 9F4F      		sbci r25,-1
  47 001e FC01      		movw r30,r24
  48 0020 8081      		ld r24,Z
  49 0022 9181      		ldd r25,Z+1
  50 0024 9C01      		movw r18,r24
  51 0026 8981      		ldd r24,Y+1
  52 0028 9A81      		ldd r25,Y+2
  53 002a 0296      		adiw r24,2
  54 002c B901      		movw r22,r18
  55 002e 681B      		sub r22,r24
  56 0030 790B      		sbc r23,r25
  57 0032 CB01      		movw r24,r22
  58 0034 742F      		mov r23,r20
  59 0036 781B      		sub r23,r24
  60 0038 872F      		mov r24,r23
  61               	/* epilogue start */
 207:../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h **** }
  62               		.loc 1 207 0
  63 003a 0F90      		pop __tmp_reg__
  64 003c 0F90      		pop __tmp_reg__
  65 003e DF91      		pop r29
  66 0040 CF91      		pop r28
  67 0042 0895      		ret
  68               		.cfi_endproc
  69               	.LFE65:
  71               		.section	.bss.nwkRxDuplicateRejectionTable,"aw",@nobits
  74               	nwkRxDuplicateRejectionTable:
  75 0000 0000 0000 		.zero	250
  75      0000 0000 
  75      0000 0000 
  75      0000 0000 
  75      0000 0000 
  76               		.section	.bss.nwkRxAckControl,"aw",@nobits
  79               	nwkRxAckControl:
  80 0000 00        		.zero	1
  81               		.section	.bss.nwkRxDuplicateRejectionTimer,"aw",@nobits
  84               	nwkRxDuplicateRejectionTimer:
  85 0000 0000 0000 		.zero	13
  85      0000 0000 
  85      0000 0000 
  85      00
  86               		.text
  87               	.global	nwkRxInit
  89               	nwkRxInit:
  90               	.LFB66:
  91               		.file 2 "../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \file nwkRx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \brief Receive routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkGroup.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRoute.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkCommand.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkSecurity.h"
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #include "nwkRouteDiscovery.h"
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Definitions ------------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL   100 /* ms */
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define DUPLICATE_REJECTION_TTL	\
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	((NWK_DUPLICATE_REJECTION_TTL /	\
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL) + 1)
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #define NWK_SERVICE_ENDPOINT_ID    0
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Types ------------------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** enum {
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_RECEIVED = 0x20,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_DECRYPT  = 0x21,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_INDICATE = 0x22,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_ROUTE    = 0x23,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_FINISH   = 0x24,
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_BEACON   = 0x25,
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLBEACON 	= 0x26,
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_RX_STATE_LLCOMMAND 	= 0x27,
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** };
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** typedef struct NwkDuplicateRejectionEntry_t {
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint16_t src;
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t seq;
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t mask;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	uint8_t ttl;
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** } NwkDuplicateRejectionEntry_t;
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Prototypes -------------------------------------------------------------*/
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer);
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind);
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Variables --------------------------------------------------------------*/
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static NwkDuplicateRejectionEntry_t nwkRxDuplicateRejectionTable[
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DUPLICATE_REJECTION_TABLE_SIZE];
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static uint8_t nwkRxAckControl;
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static SYS_Timer_t nwkRxDuplicateRejectionTimer;
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*- Implementations --------------------------------------------------------*/
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Initializes the Rx module
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxInit(void)
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
  92               		.loc 2 108 0
  93               		.cfi_startproc
  94 0044 CF93      		push r28
  95               	.LCFI4:
  96               		.cfi_def_cfa_offset 3
  97               		.cfi_offset 28, -2
  98 0046 DF93      		push r29
  99               	.LCFI5:
 100               		.cfi_def_cfa_offset 4
 101               		.cfi_offset 29, -3
 102 0048 1F92      		push __zero_reg__
 103               	.LCFI6:
 104               		.cfi_def_cfa_offset 5
 105 004a CDB7      		in r28,__SP_L__
 106 004c DEB7      		in r29,__SP_H__
 107               	.LCFI7:
 108               		.cfi_def_cfa_register 28
 109               	/* prologue: function */
 110               	/* frame size = 1 */
 111               	/* stack size = 3 */
 112               	.L__stack_usage = 3
 113               	.LBB2:
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 114               		.loc 2 109 0
 115 004e 1982      		std Y+1,__zero_reg__
 116 0050 00C0      		rjmp .L4
 117               	.L5:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxDuplicateRejectionTable[i].ttl = 0;
 118               		.loc 2 110 0 discriminator 3
 119 0052 8981      		ldd r24,Y+1
 120 0054 282F      		mov r18,r24
 121 0056 30E0      		ldi r19,0
 122 0058 C901      		movw r24,r18
 123 005a 880F      		lsl r24
 124 005c 991F      		rol r25
 125 005e 880F      		lsl r24
 126 0060 991F      		rol r25
 127 0062 820F      		add r24,r18
 128 0064 931F      		adc r25,r19
 129 0066 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 130 0068 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 131 006a FC01      		movw r30,r24
 132 006c 1082      		st Z,__zero_reg__
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 133               		.loc 2 109 0 discriminator 3
 134 006e 8981      		ldd r24,Y+1
 135 0070 8F5F      		subi r24,lo8(-(1))
 136 0072 8983      		std Y+1,r24
 137               	.L4:
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 138               		.loc 2 109 0 is_stmt 0 discriminator 1
 139 0074 8981      		ldd r24,Y+1
 140 0076 8233      		cpi r24,lo8(50)
 141 0078 00F0      		brlo .L5
 142               	.LBE2:
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.interval
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= NWK_RX_DUPLICATE_REJECTION_TIMER_INTERVAL;
 143               		.loc 2 114 0 is_stmt 1
 144 007a 84E6      		ldi r24,lo8(100)
 145 007c 90E0      		ldi r25,0
 146 007e A0E0      		ldi r26,0
 147 0080 B0E0      		ldi r27,0
 148 0082 8093 0000 		sts nwkRxDuplicateRejectionTimer+6,r24
 149 0086 9093 0000 		sts nwkRxDuplicateRejectionTimer+6+1,r25
 150 008a A093 0000 		sts nwkRxDuplicateRejectionTimer+6+2,r26
 151 008e B093 0000 		sts nwkRxDuplicateRejectionTimer+6+3,r27
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE;
 152               		.loc 2 115 0
 153 0092 1092 0000 		sts nwkRxDuplicateRejectionTimer+10,__zero_reg__
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxDuplicateRejectionTimer.handler
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		= nwkRxDuplicateRejectionTimerHandler;
 154               		.loc 2 117 0
 155 0096 80E0      		ldi r24,lo8(gs(nwkRxDuplicateRejectionTimerHandler))
 156 0098 90E0      		ldi r25,hi8(gs(nwkRxDuplicateRejectionTimerHandler))
 157 009a 9093 0000 		sts nwkRxDuplicateRejectionTimer+11+1,r25
 158 009e 8093 0000 		sts nwkRxDuplicateRejectionTimer+11,r24
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_OpenEndpoint(NWK_SERVICE_ENDPOINT_ID, nwkRxSeriveDataInd);
 159               		.loc 2 119 0
 160 00a2 60E0      		ldi r22,lo8(gs(nwkRxSeriveDataInd))
 161 00a4 70E0      		ldi r23,hi8(gs(nwkRxSeriveDataInd))
 162 00a6 80E0      		ldi r24,0
 163 00a8 0E94 0000 		call NWK_OpenEndpoint
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 164               		.loc 2 120 0
 165 00ac 0000      		nop
 166               	/* epilogue start */
 167 00ae 0F90      		pop __tmp_reg__
 168 00b0 DF91      		pop r29
 169 00b2 CF91      		pop r28
 170 00b4 0895      		ret
 171               		.cfi_endproc
 172               	.LFE66:
 174               		.weak	PHY_DataInd
 176               	PHY_DataInd:
 177               	.LFB67:
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void __attribute__((weak)) PHY_DataInd(PHY_DataInd_t *ind)
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 178               		.loc 2 125 0
 179               		.cfi_startproc
 180 00b6 CF93      		push r28
 181               	.LCFI8:
 182               		.cfi_def_cfa_offset 3
 183               		.cfi_offset 28, -2
 184 00b8 DF93      		push r29
 185               	.LCFI9:
 186               		.cfi_def_cfa_offset 4
 187               		.cfi_offset 29, -3
 188 00ba 00D0      		rcall .
 189 00bc 00D0      		rcall .
 190               	.LCFI10:
 191               		.cfi_def_cfa_offset 8
 192 00be CDB7      		in r28,__SP_L__
 193 00c0 DEB7      		in r29,__SP_H__
 194               	.LCFI11:
 195               		.cfi_def_cfa_register 28
 196               	/* prologue: function */
 197               	/* frame size = 4 */
 198               	/* stack size = 6 */
 199               	.L__stack_usage = 6
 200 00c2 9C83      		std Y+4,r25
 201 00c4 8B83      		std Y+3,r24
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame;
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-Beacon frame
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(0x0c == ind->data[0])
 202               		.loc 2 129 0
 203 00c6 8B81      		ldd r24,Y+3
 204 00c8 9C81      		ldd r25,Y+4
 205 00ca FC01      		movw r30,r24
 206 00cc 8081      		ld r24,Z
 207 00ce 9181      		ldd r25,Z+1
 208 00d0 FC01      		movw r30,r24
 209 00d2 8081      		ld r24,Z
 210 00d4 8C30      		cpi r24,lo8(12)
 211 00d6 01F4      		brne .L7
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameBeaconHeaderLLDN_t))
 212               		.loc 2 131 0
 213 00d8 8B81      		ldd r24,Y+3
 214 00da 9C81      		ldd r25,Y+4
 215 00dc FC01      		movw r30,r24
 216 00de 8281      		ldd r24,Z+2
 217 00e0 8730      		cpi r24,lo8(7)
 218 00e2 00F0      		brlo .+2
 219 00e4 00C0      		rjmp .L8
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 220               		.loc 2 133 0
 221 00e6 00C0      		rjmp .L6
 222               	.L7:
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// check frame control for a LL-MAC Command frame
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0xcc == ind->data[0])
 223               		.loc 2 137 0
 224 00e8 8B81      		ldd r24,Y+3
 225 00ea 9C81      		ldd r25,Y+4
 226 00ec FC01      		movw r30,r24
 227 00ee 8081      		ld r24,Z
 228 00f0 9181      		ldd r25,Z+1
 229 00f2 FC01      		movw r30,r24
 230 00f4 8081      		ld r24,Z
 231 00f6 8C3C      		cpi r24,lo8(-52)
 232 00f8 01F4      		brne .L10
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if(ind->size < sizeof(NwkFrameGeneralHeaderLLDN_t))
 233               		.loc 2 139 0
 234 00fa 8B81      		ldd r24,Y+3
 235 00fc 9C81      		ldd r25,Y+4
 236 00fe FC01      		movw r30,r24
 237 0100 8281      		ldd r24,Z+2
 238 0102 8330      		cpi r24,lo8(3)
 239 0104 00F0      		brlo .+2
 240 0106 00C0      		rjmp .L8
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 241               		.loc 2 141 0
 242 0108 00C0      		rjmp .L6
 243               	.L10:
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x88 == ind->data[1])
 244               		.loc 2 144 0
 245 010a 8B81      		ldd r24,Y+3
 246 010c 9C81      		ldd r25,Y+4
 247 010e FC01      		movw r30,r24
 248 0110 8081      		ld r24,Z
 249 0112 9181      		ldd r25,Z+1
 250 0114 0196      		adiw r24,1
 251 0116 FC01      		movw r30,r24
 252 0118 8081      		ld r24,Z
 253 011a 8838      		cpi r24,lo8(-120)
 254 011c 01F4      		brne .L11
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x61 != ind->data[0] && 0x41 != ind->data[0]) || ind->size < sizeof(NwkFrameHeader_t))
 255               		.loc 2 146 0
 256 011e 8B81      		ldd r24,Y+3
 257 0120 9C81      		ldd r25,Y+4
 258 0122 FC01      		movw r30,r24
 259 0124 8081      		ld r24,Z
 260 0126 9181      		ldd r25,Z+1
 261 0128 FC01      		movw r30,r24
 262 012a 8081      		ld r24,Z
 263 012c 8136      		cpi r24,lo8(97)
 264 012e 01F0      		breq .L12
 265               		.loc 2 146 0 is_stmt 0 discriminator 1
 266 0130 8B81      		ldd r24,Y+3
 267 0132 9C81      		ldd r25,Y+4
 268 0134 FC01      		movw r30,r24
 269 0136 8081      		ld r24,Z
 270 0138 9181      		ldd r25,Z+1
 271 013a FC01      		movw r30,r24
 272 013c 8081      		ld r24,Z
 273 013e 8134      		cpi r24,lo8(65)
 274 0140 01F0      		breq .+2
 275 0142 00C0      		rjmp .L25
 276               	.L12:
 277               		.loc 2 146 0 discriminator 3
 278 0144 8B81      		ldd r24,Y+3
 279 0146 9C81      		ldd r25,Y+4
 280 0148 FC01      		movw r30,r24
 281 014a 8281      		ldd r24,Z+2
 282 014c 8031      		cpi r24,lo8(16)
 283 014e 00F4      		brsh .L8
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 284               		.loc 2 148 0 is_stmt 1
 285 0150 00C0      		rjmp .L25
 286               	.L11:
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(0x80 == ind->data[1])
 287               		.loc 2 151 0
 288 0152 8B81      		ldd r24,Y+3
 289 0154 9C81      		ldd r25,Y+4
 290 0156 FC01      		movw r30,r24
 291 0158 8081      		ld r24,Z
 292 015a 9181      		ldd r25,Z+1
 293 015c 0196      		adiw r24,1
 294 015e FC01      		movw r30,r24
 295 0160 8081      		ld r24,Z
 296 0162 8038      		cpi r24,lo8(-128)
 297 0164 01F0      		breq .+2
 298 0166 00C0      		rjmp .L26
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if((0x00 != ind->data[0]) || ind->size < (sizeof(NwkFrameBeaconHeader_t)))
 299               		.loc 2 153 0
 300 0168 8B81      		ldd r24,Y+3
 301 016a 9C81      		ldd r25,Y+4
 302 016c FC01      		movw r30,r24
 303 016e 8081      		ld r24,Z
 304 0170 9181      		ldd r25,Z+1
 305 0172 FC01      		movw r30,r24
 306 0174 8081      		ld r24,Z
 307 0176 8823      		tst r24
 308 0178 01F0      		breq .+2
 309 017a 00C0      		rjmp .L27
 310               		.loc 2 153 0 is_stmt 0 discriminator 1
 311 017c 8B81      		ldd r24,Y+3
 312 017e 9C81      		ldd r25,Y+4
 313 0180 FC01      		movw r30,r24
 314 0182 8281      		ldd r24,Z+2
 315 0184 8B30      		cpi r24,lo8(11)
 316 0186 00F4      		brsh .+2
 317 0188 00C0      		rjmp .L27
 318               	.L8:
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if(ind->data[1] == 0x88 || ind->data[1] == 0x80)
 319               		.loc 2 163 0 is_stmt 1
 320 018a 8B81      		ldd r24,Y+3
 321 018c 9C81      		ldd r25,Y+4
 322 018e FC01      		movw r30,r24
 323 0190 8081      		ld r24,Z
 324 0192 9181      		ldd r25,Z+1
 325 0194 0196      		adiw r24,1
 326 0196 FC01      		movw r30,r24
 327 0198 8081      		ld r24,Z
 328 019a 8838      		cpi r24,lo8(-120)
 329 019c 01F0      		breq .L16
 330               		.loc 2 163 0 is_stmt 0 discriminator 1
 331 019e 8B81      		ldd r24,Y+3
 332 01a0 9C81      		ldd r25,Y+4
 333 01a2 FC01      		movw r30,r24
 334 01a4 8081      		ld r24,Z
 335 01a6 9181      		ldd r25,Z+1
 336 01a8 0196      		adiw r24,1
 337 01aa FC01      		movw r30,r24
 338 01ac 8081      		ld r24,Z
 339 01ae 8038      		cpi r24,lo8(-128)
 340 01b0 01F4      		brne .L17
 341               	.L16:
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc())) {
 342               		.loc 2 165 0 is_stmt 1
 343 01b2 0E94 0000 		call nwkFrameAlloc
 344 01b6 9A83      		std Y+2,r25
 345 01b8 8983      		std Y+1,r24
 346 01ba 8981      		ldd r24,Y+1
 347 01bc 9A81      		ldd r25,Y+2
 348 01be 892B      		or r24,r25
 349 01c0 01F4      		brne .+2
 350 01c2 00C0      		rjmp .L28
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame received is NwkFrameHeader change state to Receveid
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is a 802.15.4 beacon change state to Beacon
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = ((0x88 == ind->data[1]) ? NWK_RX_STATE_RECEIVED : NWK_RX_STATE_BEACON);
 351               		.loc 2 170 0
 352 01c4 8B81      		ldd r24,Y+3
 353 01c6 9C81      		ldd r25,Y+4
 354 01c8 FC01      		movw r30,r24
 355 01ca 8081      		ld r24,Z
 356 01cc 9181      		ldd r25,Z+1
 357 01ce 0196      		adiw r24,1
 358 01d0 FC01      		movw r30,r24
 359 01d2 8081      		ld r24,Z
 360 01d4 8838      		cpi r24,lo8(-120)
 361 01d6 01F4      		brne .L19
 362               		.loc 2 170 0 is_stmt 0 discriminator 1
 363 01d8 20E2      		ldi r18,lo8(32)
 364 01da 00C0      		rjmp .L20
 365               	.L19:
 366               		.loc 2 170 0 discriminator 2
 367 01dc 25E2      		ldi r18,lo8(37)
 368               	.L20:
 369               		.loc 2 170 0 discriminator 4
 370 01de 8981      		ldd r24,Y+1
 371 01e0 9A81      		ldd r25,Y+2
 372 01e2 FC01      		movw r30,r24
 373 01e4 2083      		st Z,r18
 374 01e6 00C0      		rjmp .L21
 375               	.L17:
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	// allocate frame buffer according to received frame
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else if(ind->data[0] == 0x0c)
 376               		.loc 2 173 0 is_stmt 1
 377 01e8 8B81      		ldd r24,Y+3
 378 01ea 9C81      		ldd r25,Y+4
 379 01ec FC01      		movw r30,r24
 380 01ee 8081      		ld r24,Z
 381 01f0 9181      		ldd r25,Z+1
 382 01f2 FC01      		movw r30,r24
 383 01f4 8081      		ld r24,Z
 384 01f6 8C30      		cpi r24,lo8(12)
 385 01f8 01F4      		brne .L22
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-Beacon frame
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(true))){
 386               		.loc 2 176 0
 387 01fa 81E0      		ldi r24,lo8(1)
 388 01fc 0E94 0000 		call nwkFrameAlloc_LLDN
 389 0200 9A83      		std Y+2,r25
 390 0202 8983      		std Y+1,r24
 391 0204 8981      		ldd r24,Y+1
 392 0206 9A81      		ldd r25,Y+2
 393 0208 892B      		or r24,r25
 394 020a 01F4      		brne .+2
 395 020c 00C0      		rjmp .L29
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-Beacon change state to LLBEACON
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLBEACON;
 396               		.loc 2 180 0
 397 020e 8981      		ldd r24,Y+1
 398 0210 9A81      		ldd r25,Y+2
 399 0212 26E2      		ldi r18,lo8(38)
 400 0214 FC01      		movw r30,r24
 401 0216 2083      		st Z,r18
 402 0218 00C0      		rjmp .L21
 403               	.L22:
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	else
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// allocates a LL-MAC command or LL-Data frame
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NULL == (frame = nwkFrameAlloc_LLDN(false))){
 404               		.loc 2 185 0
 405 021a 80E0      		ldi r24,0
 406 021c 0E94 0000 		call nwkFrameAlloc_LLDN
 407 0220 9A83      		std Y+2,r25
 408 0222 8983      		std Y+1,r24
 409 0224 8981      		ldd r24,Y+1
 410 0226 9A81      		ldd r25,Y+2
 411 0228 892B      		or r24,r25
 412 022a 01F0      		breq .L30
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			return;
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		// if frame receveid is LL-MACComand change state to LLCOMMAND
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_LLCOMMAND;
 413               		.loc 2 189 0
 414 022c 8981      		ldd r24,Y+1
 415 022e 9A81      		ldd r25,Y+2
 416 0230 27E2      		ldi r18,lo8(39)
 417 0232 FC01      		movw r30,r24
 418 0234 2083      		st Z,r18
 419               	.L21:
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size = ind->size;
 420               		.loc 2 192 0
 421 0236 8B81      		ldd r24,Y+3
 422 0238 9C81      		ldd r25,Y+4
 423 023a FC01      		movw r30,r24
 424 023c 2281      		ldd r18,Z+2
 425 023e 8981      		ldd r24,Y+1
 426 0240 9A81      		ldd r25,Y+2
 427 0242 FC01      		movw r30,r24
 428 0244 2183      		std Z+1,r18
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.lqi = ind->lqi;
 429               		.loc 2 193 0
 430 0246 8B81      		ldd r24,Y+3
 431 0248 9C81      		ldd r25,Y+4
 432 024a FC01      		movw r30,r24
 433 024c 2381      		ldd r18,Z+3
 434 024e 8981      		ldd r24,Y+1
 435 0250 9A81      		ldd r25,Y+2
 436 0252 8D57      		subi r24,125
 437 0254 9F4F      		sbci r25,-1
 438 0256 FC01      		movw r30,r24
 439 0258 2083      		st Z,r18
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->rx.rssi = ind->rssi;
 440               		.loc 2 194 0
 441 025a 8B81      		ldd r24,Y+3
 442 025c 9C81      		ldd r25,Y+4
 443 025e FC01      		movw r30,r24
 444 0260 2481      		ldd r18,Z+4
 445 0262 8981      		ldd r24,Y+1
 446 0264 9A81      		ldd r25,Y+2
 447 0266 8C57      		subi r24,124
 448 0268 9F4F      		sbci r25,-1
 449 026a FC01      		movw r30,r24
 450 026c 2083      		st Z,r18
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	memcpy(frame->data, ind->data, ind->size);
 451               		.loc 2 195 0
 452 026e 8B81      		ldd r24,Y+3
 453 0270 9C81      		ldd r25,Y+4
 454 0272 FC01      		movw r30,r24
 455 0274 8281      		ldd r24,Z+2
 456 0276 482F      		mov r20,r24
 457 0278 50E0      		ldi r21,0
 458 027a 8B81      		ldd r24,Y+3
 459 027c 9C81      		ldd r25,Y+4
 460 027e FC01      		movw r30,r24
 461 0280 2081      		ld r18,Z
 462 0282 3181      		ldd r19,Z+1
 463 0284 8981      		ldd r24,Y+1
 464 0286 9A81      		ldd r25,Y+2
 465 0288 0296      		adiw r24,2
 466 028a B901      		movw r22,r18
 467 028c 0E94 0000 		call memcpy
 468 0290 00C0      		rjmp .L6
 469               	.L25:
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 470               		.loc 2 148 0
 471 0292 0000      		nop
 472 0294 00C0      		rjmp .L6
 473               	.L26:
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 474               		.loc 2 160 0
 475 0296 0000      		nop
 476 0298 00C0      		rjmp .L6
 477               	.L27:
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 478               		.loc 2 155 0
 479 029a 0000      		nop
 480 029c 00C0      		rjmp .L6
 481               	.L28:
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 482               		.loc 2 166 0
 483 029e 0000      		nop
 484 02a0 00C0      		rjmp .L6
 485               	.L29:
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 486               		.loc 2 177 0
 487 02a2 0000      		nop
 488 02a4 00C0      		rjmp .L6
 489               	.L30:
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 490               		.loc 2 186 0
 491 02a6 0000      		nop
 492               	.L6:
 493               	/* epilogue start */
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 494               		.loc 2 196 0
 495 02a8 0F90      		pop __tmp_reg__
 496 02aa 0F90      		pop __tmp_reg__
 497 02ac 0F90      		pop __tmp_reg__
 498 02ae 0F90      		pop __tmp_reg__
 499 02b0 DF91      		pop r29
 500 02b2 CF91      		pop r28
 501 02b4 0895      		ret
 502               		.cfi_endproc
 503               	.LFE67:
 506               	nwkRxSendAck:
 507               	.LFB68:
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxSendAck(NwkFrame_t *frame)
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 508               		.loc 2 201 0
 509               		.cfi_startproc
 510 02b6 CF93      		push r28
 511               	.LCFI12:
 512               		.cfi_def_cfa_offset 3
 513               		.cfi_offset 28, -2
 514 02b8 DF93      		push r29
 515               	.LCFI13:
 516               		.cfi_def_cfa_offset 4
 517               		.cfi_offset 29, -3
 518 02ba 00D0      		rcall .
 519 02bc 00D0      		rcall .
 520 02be 00D0      		rcall .
 521               	.LCFI14:
 522               		.cfi_def_cfa_offset 10
 523 02c0 CDB7      		in r28,__SP_L__
 524 02c2 DEB7      		in r29,__SP_H__
 525               	.LCFI15:
 526               		.cfi_def_cfa_register 28
 527               	/* prologue: function */
 528               	/* frame size = 6 */
 529               	/* stack size = 8 */
 530               	.L__stack_usage = 8
 531 02c4 9E83      		std Y+6,r25
 532 02c6 8D83      		std Y+5,r24
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *ack;
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkCommandAck_t *command;
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == (ack = nwkFrameAlloc())) {
 533               		.loc 2 205 0
 534 02c8 0E94 0000 		call nwkFrameAlloc
 535 02cc 9A83      		std Y+2,r25
 536 02ce 8983      		std Y+1,r24
 537 02d0 8981      		ldd r24,Y+1
 538 02d2 9A81      		ldd r25,Y+2
 539 02d4 892B      		or r24,r25
 540 02d6 01F4      		brne .+2
 541 02d8 00C0      		rjmp .L34
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->size += sizeof(NwkFrameHeader_t);
 542               		.loc 2 209 0
 543 02da 8D81      		ldd r24,Y+5
 544 02dc 9E81      		ldd r25,Y+6
 545 02de FC01      		movw r30,r24
 546 02e0 8181      		ldd r24,Z+1
 547 02e2 20E1      		ldi r18,lo8(16)
 548 02e4 280F      		add r18,r24
 549 02e6 8D81      		ldd r24,Y+5
 550 02e8 9E81      		ldd r25,Y+6
 551 02ea FC01      		movw r30,r24
 552 02ec 2183      		std Z+1,r18
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->payload += sizeof(NwkFrameHeader_t);
 553               		.loc 2 210 0
 554 02ee 8D81      		ldd r24,Y+5
 555 02f0 9E81      		ldd r25,Y+6
 556 02f2 8F57      		subi r24,127
 557 02f4 9F4F      		sbci r25,-1
 558 02f6 FC01      		movw r30,r24
 559 02f8 8081      		ld r24,Z
 560 02fa 9181      		ldd r25,Z+1
 561 02fc 9C01      		movw r18,r24
 562 02fe 205F      		subi r18,-16
 563 0300 3F4F      		sbci r19,-1
 564 0302 8D81      		ldd r24,Y+5
 565 0304 9E81      		ldd r25,Y+6
 566 0306 8F57      		subi r24,127
 567 0308 9F4F      		sbci r25,-1
 568 030a FC01      		movw r30,r24
 569 030c 3183      		std Z+1,r19
 570 030e 2083      		st Z,r18
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkFrameCommandInit(ack);
 571               		.loc 2 212 0
 572 0310 8981      		ldd r24,Y+1
 573 0312 9A81      		ldd r25,Y+2
 574 0314 0E94 0000 		call nwkFrameCommandInit
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->size += sizeof(NwkCommandAck_t);
 575               		.loc 2 214 0
 576 0318 8981      		ldd r24,Y+1
 577 031a 9A81      		ldd r25,Y+2
 578 031c FC01      		movw r30,r24
 579 031e 8181      		ldd r24,Z+1
 580 0320 23E0      		ldi r18,lo8(3)
 581 0322 280F      		add r18,r24
 582 0324 8981      		ldd r24,Y+1
 583 0326 9A81      		ldd r25,Y+2
 584 0328 FC01      		movw r30,r24
 585 032a 2183      		std Z+1,r18
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->tx.confirm = NULL;
 586               		.loc 2 215 0
 587 032c 8981      		ldd r24,Y+1
 588 032e 9A81      		ldd r25,Y+2
 589 0330 8957      		subi r24,121
 590 0332 9F4F      		sbci r25,-1
 591 0334 FC01      		movw r30,r24
 592 0336 1182      		std Z+1,__zero_reg__
 593 0338 1082      		st Z,__zero_reg__
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkFcf.security = frame->header.nwkFcf.security;
 594               		.loc 2 217 0
 595 033a 8D81      		ldd r24,Y+5
 596 033c 9E81      		ldd r25,Y+6
 597 033e FC01      		movw r30,r24
 598 0340 8385      		ldd r24,Z+11
 599 0342 81FB      		bst r24,1
 600 0344 2227      		clr r18
 601 0346 20F9      		bld r18,0
 602 0348 8981      		ldd r24,Y+1
 603 034a 9A81      		ldd r25,Y+2
 604 034c 2170      		andi r18,lo8(1)
 605 034e 220F      		lsl r18
 606 0350 FC01      		movw r30,r24
 607 0352 3385      		ldd r19,Z+11
 608 0354 3D7F      		andi r19,lo8(-3)
 609 0356 232B      		or r18,r19
 610 0358 FC01      		movw r30,r24
 611 035a 2387      		std Z+11,r18
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 612               		.loc 2 218 0
 613 035c 8D81      		ldd r24,Y+5
 614 035e 9E81      		ldd r25,Y+6
 615 0360 FC01      		movw r30,r24
 616 0362 2585      		ldd r18,Z+13
 617 0364 3685      		ldd r19,Z+14
 618 0366 8981      		ldd r24,Y+1
 619 0368 9A81      		ldd r25,Y+2
 620 036a FC01      		movw r30,r24
 621 036c 308B      		std Z+16,r19
 622 036e 2787      		std Z+15,r18
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command = (NwkCommandAck_t *)ack->payload;
 623               		.loc 2 220 0
 624 0370 8981      		ldd r24,Y+1
 625 0372 9A81      		ldd r25,Y+2
 626 0374 8F57      		subi r24,127
 627 0376 9F4F      		sbci r25,-1
 628 0378 FC01      		movw r30,r24
 629 037a 8081      		ld r24,Z
 630 037c 9181      		ldd r25,Z+1
 631 037e 9C83      		std Y+4,r25
 632 0380 8B83      		std Y+3,r24
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->id = NWK_COMMAND_ACK;
 633               		.loc 2 221 0
 634 0382 8B81      		ldd r24,Y+3
 635 0384 9C81      		ldd r25,Y+4
 636 0386 FC01      		movw r30,r24
 637 0388 1082      		st Z,__zero_reg__
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->control = nwkRxAckControl;
 638               		.loc 2 222 0
 639 038a 2091 0000 		lds r18,nwkRxAckControl
 640 038e 8B81      		ldd r24,Y+3
 641 0390 9C81      		ldd r25,Y+4
 642 0392 FC01      		movw r30,r24
 643 0394 2283      		std Z+2,r18
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	command->seq = frame->header.nwkSeq;
 644               		.loc 2 223 0
 645 0396 8D81      		ldd r24,Y+5
 646 0398 9E81      		ldd r25,Y+6
 647 039a FC01      		movw r30,r24
 648 039c 2485      		ldd r18,Z+12
 649 039e 8B81      		ldd r24,Y+3
 650 03a0 9C81      		ldd r25,Y+4
 651 03a2 FC01      		movw r30,r24
 652 03a4 2183      		std Z+1,r18
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkTxFrame(ack);
 653               		.loc 2 225 0
 654 03a6 8981      		ldd r24,Y+1
 655 03a8 9A81      		ldd r25,Y+2
 656 03aa 0E94 0000 		call nwkTxFrame
 657 03ae 00C0      		rjmp .L31
 658               	.L34:
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 659               		.loc 2 206 0
 660 03b0 0000      		nop
 661               	.L31:
 662               	/* epilogue start */
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 663               		.loc 2 226 0
 664 03b2 2696      		adiw r28,6
 665 03b4 0FB6      		in __tmp_reg__,__SREG__
 666 03b6 F894      		cli
 667 03b8 DEBF      		out __SP_H__,r29
 668 03ba 0FBE      		out __SREG__,__tmp_reg__
 669 03bc CDBF      		out __SP_L__,r28
 670 03be DF91      		pop r29
 671 03c0 CF91      		pop r28
 672 03c2 0895      		ret
 673               		.cfi_endproc
 674               	.LFE68:
 676               	.global	NWK_SetAckControl
 678               	NWK_SetAckControl:
 679               	.LFB69:
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void NWK_SetAckControl(uint8_t control)
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 680               		.loc 2 231 0
 681               		.cfi_startproc
 682 03c4 CF93      		push r28
 683               	.LCFI16:
 684               		.cfi_def_cfa_offset 3
 685               		.cfi_offset 28, -2
 686 03c6 DF93      		push r29
 687               	.LCFI17:
 688               		.cfi_def_cfa_offset 4
 689               		.cfi_offset 29, -3
 690 03c8 1F92      		push __zero_reg__
 691               	.LCFI18:
 692               		.cfi_def_cfa_offset 5
 693 03ca CDB7      		in r28,__SP_L__
 694 03cc DEB7      		in r29,__SP_H__
 695               	.LCFI19:
 696               		.cfi_def_cfa_register 28
 697               	/* prologue: function */
 698               	/* frame size = 1 */
 699               	/* stack size = 3 */
 700               	.L__stack_usage = 3
 701 03ce 8983      		std Y+1,r24
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = control;
 702               		.loc 2 232 0
 703 03d0 8981      		ldd r24,Y+1
 704 03d2 8093 0000 		sts nwkRxAckControl,r24
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 705               		.loc 2 233 0
 706 03d6 0000      		nop
 707               	/* epilogue start */
 708 03d8 0F90      		pop __tmp_reg__
 709 03da DF91      		pop r29
 710 03dc CF91      		pop r28
 711 03de 0895      		ret
 712               		.cfi_endproc
 713               	.LFE69:
 716               	nwkRxDuplicateRejectionTimerHandler:
 717               	.LFB70:
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxDecryptConf(NwkFrame_t *frame, bool status)
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (status) {
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_INDICATE;
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else {
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		frame->state = NWK_RX_STATE_FINISH;
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *timer)
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 718               		.loc 2 253 0
 719               		.cfi_startproc
 720 03e0 CF93      		push r28
 721               	.LCFI20:
 722               		.cfi_def_cfa_offset 3
 723               		.cfi_offset 28, -2
 724 03e2 DF93      		push r29
 725               	.LCFI21:
 726               		.cfi_def_cfa_offset 4
 727               		.cfi_offset 29, -3
 728 03e4 00D0      		rcall .
 729 03e6 00D0      		rcall .
 730               	.LCFI22:
 731               		.cfi_def_cfa_offset 8
 732 03e8 CDB7      		in r28,__SP_L__
 733 03ea DEB7      		in r29,__SP_H__
 734               	.LCFI23:
 735               		.cfi_def_cfa_register 28
 736               	/* prologue: function */
 737               	/* frame size = 4 */
 738               	/* stack size = 6 */
 739               	.L__stack_usage = 6
 740 03ec 9C83      		std Y+4,r25
 741 03ee 8B83      		std Y+3,r24
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool restart = false;
 742               		.loc 2 254 0
 743 03f0 1982      		std Y+1,__zero_reg__
 744               	.LBB3:
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 745               		.loc 2 256 0
 746 03f2 1A82      		std Y+2,__zero_reg__
 747 03f4 00C0      		rjmp .L37
 748               	.L39:
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 749               		.loc 2 257 0
 750 03f6 8A81      		ldd r24,Y+2
 751 03f8 282F      		mov r18,r24
 752 03fa 30E0      		ldi r19,0
 753 03fc C901      		movw r24,r18
 754 03fe 880F      		lsl r24
 755 0400 991F      		rol r25
 756 0402 880F      		lsl r24
 757 0404 991F      		rol r25
 758 0406 820F      		add r24,r18
 759 0408 931F      		adc r25,r19
 760 040a 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 761 040c 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 762 040e FC01      		movw r30,r24
 763 0410 8081      		ld r24,Z
 764 0412 8823      		tst r24
 765 0414 01F0      		breq .L38
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxDuplicateRejectionTable[i].ttl--;
 766               		.loc 2 258 0
 767 0416 8A81      		ldd r24,Y+2
 768 0418 282F      		mov r18,r24
 769 041a 30E0      		ldi r19,0
 770 041c C901      		movw r24,r18
 771 041e 880F      		lsl r24
 772 0420 991F      		rol r25
 773 0422 880F      		lsl r24
 774 0424 991F      		rol r25
 775 0426 820F      		add r24,r18
 776 0428 931F      		adc r25,r19
 777 042a 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 778 042c 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 779 042e FC01      		movw r30,r24
 780 0430 8081      		ld r24,Z
 781 0432 4FEF      		ldi r20,lo8(-1)
 782 0434 480F      		add r20,r24
 783 0436 C901      		movw r24,r18
 784 0438 880F      		lsl r24
 785 043a 991F      		rol r25
 786 043c 880F      		lsl r24
 787 043e 991F      		rol r25
 788 0440 820F      		add r24,r18
 789 0442 931F      		adc r25,r19
 790 0444 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable+4))
 791 0446 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable+4))
 792 0448 FC01      		movw r30,r24
 793 044a 4083      		st Z,r20
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			restart = true;
 794               		.loc 2 259 0
 795 044c 81E0      		ldi r24,lo8(1)
 796 044e 8983      		std Y+1,r24
 797               	.L38:
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 798               		.loc 2 256 0 discriminator 2
 799 0450 8A81      		ldd r24,Y+2
 800 0452 8F5F      		subi r24,lo8(-(1))
 801 0454 8A83      		std Y+2,r24
 802               	.L37:
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkRxDuplicateRejectionTable[i].ttl) {
 803               		.loc 2 256 0 is_stmt 0 discriminator 1
 804 0456 8A81      		ldd r24,Y+2
 805 0458 8233      		cpi r24,lo8(50)
 806 045a 00F0      		brlo .L39
 807               	.LBE3:
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (restart) {
 808               		.loc 2 263 0 is_stmt 1
 809 045c 8981      		ldd r24,Y+1
 810 045e 8823      		tst r24
 811 0460 01F0      		breq .L41
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		SYS_TimerStart(timer);
 812               		.loc 2 264 0
 813 0462 8B81      		ldd r24,Y+3
 814 0464 9C81      		ldd r25,Y+4
 815 0466 0E94 0000 		call SYS_TimerStart
 816               	.L41:
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 817               		.loc 2 266 0
 818 046a 0000      		nop
 819               	/* epilogue start */
 820 046c 0F90      		pop __tmp_reg__
 821 046e 0F90      		pop __tmp_reg__
 822 0470 0F90      		pop __tmp_reg__
 823 0472 0F90      		pop __tmp_reg__
 824 0474 DF91      		pop r29
 825 0476 CF91      		pop r28
 826 0478 0895      		ret
 827               		.cfi_endproc
 828               	.LFE70:
 831               	nwkRxRejectDuplicate:
 832               	.LFB71:
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxRejectDuplicate(NwkFrameHeader_t *header)
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 833               		.loc 2 271 0
 834               		.cfi_startproc
 835 047a CF93      		push r28
 836               	.LCFI24:
 837               		.cfi_def_cfa_offset 3
 838               		.cfi_offset 28, -2
 839 047c DF93      		push r29
 840               	.LCFI25:
 841               		.cfi_def_cfa_offset 4
 842               		.cfi_offset 29, -3
 843 047e CDB7      		in r28,__SP_L__
 844 0480 DEB7      		in r29,__SP_H__
 845               	.LCFI26:
 846               		.cfi_def_cfa_register 28
 847 0482 2997      		sbiw r28,9
 848               	.LCFI27:
 849               		.cfi_def_cfa_offset 13
 850 0484 0FB6      		in __tmp_reg__,__SREG__
 851 0486 F894      		cli
 852 0488 DEBF      		out __SP_H__,r29
 853 048a 0FBE      		out __SREG__,__tmp_reg__
 854 048c CDBF      		out __SP_L__,r28
 855               	/* prologue: function */
 856               	/* frame size = 9 */
 857               	/* stack size = 11 */
 858               	.L__stack_usage = 11
 859 048e 9987      		std Y+9,r25
 860 0490 8887      		std Y+8,r24
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *entry;
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkDuplicateRejectionEntry_t *freeEntry = NULL;
 861               		.loc 2 273 0
 862 0492 1A82      		std Y+2,__zero_reg__
 863 0494 1982      		std Y+1,__zero_reg__
 864               	.LBB4:
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	for (uint8_t i = 0; i < NWK_DUPLICATE_REJECTION_TABLE_SIZE; i++) {
 865               		.loc 2 275 0
 866 0496 1B82      		std Y+3,__zero_reg__
 867 0498 00C0      		rjmp .L43
 868               	.L49:
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 869               		.loc 2 276 0
 870 049a 8B81      		ldd r24,Y+3
 871 049c 282F      		mov r18,r24
 872 049e 30E0      		ldi r19,0
 873 04a0 C901      		movw r24,r18
 874 04a2 880F      		lsl r24
 875 04a4 991F      		rol r25
 876 04a6 880F      		lsl r24
 877 04a8 991F      		rol r25
 878 04aa 820F      		add r24,r18
 879 04ac 931F      		adc r25,r19
 880 04ae 8050      		subi r24,lo8(-(nwkRxDuplicateRejectionTable))
 881 04b0 9040      		sbci r25,hi8(-(nwkRxDuplicateRejectionTable))
 882 04b2 9D83      		std Y+5,r25
 883 04b4 8C83      		std Y+4,r24
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (entry->ttl && header->nwkSrcAddr == entry->src) {
 884               		.loc 2 278 0
 885 04b6 8C81      		ldd r24,Y+4
 886 04b8 9D81      		ldd r25,Y+5
 887 04ba FC01      		movw r30,r24
 888 04bc 8481      		ldd r24,Z+4
 889 04be 8823      		tst r24
 890 04c0 01F4      		brne .+2
 891 04c2 00C0      		rjmp .L44
 892               		.loc 2 278 0 is_stmt 0 discriminator 1
 893 04c4 8885      		ldd r24,Y+8
 894 04c6 9985      		ldd r25,Y+9
 895 04c8 FC01      		movw r30,r24
 896 04ca 2385      		ldd r18,Z+11
 897 04cc 3485      		ldd r19,Z+12
 898 04ce 8C81      		ldd r24,Y+4
 899 04d0 9D81      		ldd r25,Y+5
 900 04d2 FC01      		movw r30,r24
 901 04d4 8081      		ld r24,Z
 902 04d6 9181      		ldd r25,Z+1
 903 04d8 2817      		cp r18,r24
 904 04da 3907      		cpc r19,r25
 905 04dc 01F0      		breq .+2
 906 04de 00C0      		rjmp .L44
 907               	.LBB5:
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			uint8_t diff = (int8_t)entry->seq - header->nwkSeq;
 908               		.loc 2 279 0 is_stmt 1
 909 04e0 8C81      		ldd r24,Y+4
 910 04e2 9D81      		ldd r25,Y+5
 911 04e4 FC01      		movw r30,r24
 912 04e6 2281      		ldd r18,Z+2
 913 04e8 8885      		ldd r24,Y+8
 914 04ea 9985      		ldd r25,Y+9
 915 04ec FC01      		movw r30,r24
 916 04ee 8285      		ldd r24,Z+10
 917 04f0 F22F      		mov r31,r18
 918 04f2 F81B      		sub r31,r24
 919 04f4 8F2F      		mov r24,r31
 920 04f6 8E83      		std Y+6,r24
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (diff < 8) {
 921               		.loc 2 281 0
 922 04f8 8E81      		ldd r24,Y+6
 923 04fa 8830      		cpi r24,lo8(8)
 924 04fc 00F4      		brsh .L45
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				if (entry->mask & (1 << diff)) {
 925               		.loc 2 282 0
 926 04fe 8C81      		ldd r24,Y+4
 927 0500 9D81      		ldd r25,Y+5
 928 0502 FC01      		movw r30,r24
 929 0504 8381      		ldd r24,Z+3
 930 0506 882F      		mov r24,r24
 931 0508 90E0      		ldi r25,0
 932 050a 2E81      		ldd r18,Y+6
 933 050c 222F      		mov r18,r18
 934 050e 30E0      		ldi r19,0
 935 0510 00C0      		rjmp 2f
 936               		1:
 937 0512 9595      		asr r25
 938 0514 8795      		ror r24
 939               		2:
 940 0516 2A95      		dec r18
 941 0518 02F4      		brpl 1b
 942 051a 8170      		andi r24,1
 943 051c 9927      		clr r25
 944 051e 892B      		or r24,r25
 945 0520 01F0      		breq .L46
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#ifdef NWK_ENABLE_ROUTING
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					if (nwkIb.addr == header->macDstAddr) {
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 						nwkRouteRemove(
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkDstAddr,
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 								header->nwkFcf.multicast);
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					}
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	#endif
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					return true;
 946               		.loc 2 291 0
 947 0522 81E0      		ldi r24,lo8(1)
 948 0524 00C0      		rjmp .L47
 949               	.L46:
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				}
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask |= (1 << diff);
 950               		.loc 2 294 0
 951 0526 8C81      		ldd r24,Y+4
 952 0528 9D81      		ldd r25,Y+5
 953 052a FC01      		movw r30,r24
 954 052c 8381      		ldd r24,Z+3
 955 052e 482F      		mov r20,r24
 956 0530 8E81      		ldd r24,Y+6
 957 0532 282F      		mov r18,r24
 958 0534 30E0      		ldi r19,0
 959 0536 81E0      		ldi r24,lo8(1)
 960 0538 90E0      		ldi r25,0
 961 053a 00C0      		rjmp 2f
 962               		1:
 963 053c 880F      		lsl r24
 964 053e 991F      		rol r25
 965               		2:
 966 0540 2A95      		dec r18
 967 0542 02F4      		brpl 1b
 968 0544 842B      		or r24,r20
 969 0546 282F      		mov r18,r24
 970 0548 8C81      		ldd r24,Y+4
 971 054a 9D81      		ldd r25,Y+5
 972 054c FC01      		movw r30,r24
 973 054e 2383      		std Z+3,r18
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 974               		.loc 2 295 0
 975 0550 80E0      		ldi r24,0
 976 0552 00C0      		rjmp .L47
 977               	.L45:
 978               	.LBB6:
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				uint8_t shift = -(int8_t)diff;
 979               		.loc 2 297 0
 980 0554 8E81      		ldd r24,Y+6
 981 0556 8195      		neg r24
 982 0558 8F83      		std Y+7,r24
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->seq = header->nwkSeq;
 983               		.loc 2 299 0
 984 055a 8885      		ldd r24,Y+8
 985 055c 9985      		ldd r25,Y+9
 986 055e FC01      		movw r30,r24
 987 0560 2285      		ldd r18,Z+10
 988 0562 8C81      		ldd r24,Y+4
 989 0564 9D81      		ldd r25,Y+5
 990 0566 FC01      		movw r30,r24
 991 0568 2283      		std Z+2,r18
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->mask = (entry->mask << shift) | 1;
 992               		.loc 2 300 0
 993 056a 8C81      		ldd r24,Y+4
 994 056c 9D81      		ldd r25,Y+5
 995 056e FC01      		movw r30,r24
 996 0570 8381      		ldd r24,Z+3
 997 0572 882F      		mov r24,r24
 998 0574 90E0      		ldi r25,0
 999 0576 2F81      		ldd r18,Y+7
 1000 0578 222F      		mov r18,r18
 1001 057a 30E0      		ldi r19,0
 1002 057c 00C0      		rjmp 2f
 1003               		1:
 1004 057e 880F      		lsl r24
 1005 0580 991F      		rol r25
 1006               		2:
 1007 0582 2A95      		dec r18
 1008 0584 02F4      		brpl 1b
 1009 0586 8160      		ori r24,lo8(1)
 1010 0588 282F      		mov r18,r24
 1011 058a 8C81      		ldd r24,Y+4
 1012 058c 9D81      		ldd r25,Y+5
 1013 058e FC01      		movw r30,r24
 1014 0590 2383      		std Z+3,r18
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				entry->ttl = DUPLICATE_REJECTION_TTL;
 1015               		.loc 2 301 0
 1016 0592 8C81      		ldd r24,Y+4
 1017 0594 9D81      		ldd r25,Y+5
 1018 0596 25E1      		ldi r18,lo8(21)
 1019 0598 FC01      		movw r30,r24
 1020 059a 2483      		std Z+4,r18
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				return false;
 1021               		.loc 2 302 0
 1022 059c 80E0      		ldi r24,0
 1023 059e 00C0      		rjmp .L47
 1024               	.L44:
 1025               	.LBE6:
 1026               	.LBE5:
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (0 == entry->ttl) {
 1027               		.loc 2 306 0
 1028 05a0 8C81      		ldd r24,Y+4
 1029 05a2 9D81      		ldd r25,Y+5
 1030 05a4 FC01      		movw r30,r24
 1031 05a6 8481      		ldd r24,Z+4
 1032 05a8 8823      		tst r24
 1033 05aa 01F4      		brne .L48
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			freeEntry = entry;
 1034               		.loc 2 307 0
 1035 05ac 8C81      		ldd r24,Y+4
 1036 05ae 9D81      		ldd r25,Y+5
 1037 05b0 9A83      		std Y+2,r25
 1038 05b2 8983      		std Y+1,r24
 1039               	.L48:
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1040               		.loc 2 275 0 discriminator 2
 1041 05b4 8B81      		ldd r24,Y+3
 1042 05b6 8F5F      		subi r24,lo8(-(1))
 1043 05b8 8B83      		std Y+3,r24
 1044               	.L43:
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		entry = &nwkRxDuplicateRejectionTable[i];
 1045               		.loc 2 275 0 is_stmt 0 discriminator 1
 1046 05ba 8B81      		ldd r24,Y+3
 1047 05bc 8233      		cpi r24,lo8(50)
 1048 05be 00F4      		brsh .+2
 1049 05c0 00C0      		rjmp .L49
 1050               	.LBE4:
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == freeEntry) {
 1051               		.loc 2 311 0 is_stmt 1
 1052 05c2 8981      		ldd r24,Y+1
 1053 05c4 9A81      		ldd r25,Y+2
 1054 05c6 892B      		or r24,r25
 1055 05c8 01F4      		brne .L50
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return true;
 1056               		.loc 2 312 0
 1057 05ca 81E0      		ldi r24,lo8(1)
 1058 05cc 00C0      		rjmp .L47
 1059               	.L50:
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->src = header->nwkSrcAddr;
 1060               		.loc 2 315 0
 1061 05ce 8885      		ldd r24,Y+8
 1062 05d0 9985      		ldd r25,Y+9
 1063 05d2 FC01      		movw r30,r24
 1064 05d4 2385      		ldd r18,Z+11
 1065 05d6 3485      		ldd r19,Z+12
 1066 05d8 8981      		ldd r24,Y+1
 1067 05da 9A81      		ldd r25,Y+2
 1068 05dc FC01      		movw r30,r24
 1069 05de 3183      		std Z+1,r19
 1070 05e0 2083      		st Z,r18
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->seq = header->nwkSeq;
 1071               		.loc 2 316 0
 1072 05e2 8885      		ldd r24,Y+8
 1073 05e4 9985      		ldd r25,Y+9
 1074 05e6 FC01      		movw r30,r24
 1075 05e8 2285      		ldd r18,Z+10
 1076 05ea 8981      		ldd r24,Y+1
 1077 05ec 9A81      		ldd r25,Y+2
 1078 05ee FC01      		movw r30,r24
 1079 05f0 2283      		std Z+2,r18
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->mask = 1;
 1080               		.loc 2 317 0
 1081 05f2 8981      		ldd r24,Y+1
 1082 05f4 9A81      		ldd r25,Y+2
 1083 05f6 21E0      		ldi r18,lo8(1)
 1084 05f8 FC01      		movw r30,r24
 1085 05fa 2383      		std Z+3,r18
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	freeEntry->ttl = DUPLICATE_REJECTION_TTL;
 1086               		.loc 2 318 0
 1087 05fc 8981      		ldd r24,Y+1
 1088 05fe 9A81      		ldd r25,Y+2
 1089 0600 25E1      		ldi r18,lo8(21)
 1090 0602 FC01      		movw r30,r24
 1091 0604 2483      		std Z+4,r18
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 1092               		.loc 2 320 0
 1093 0606 80E0      		ldi r24,lo8(nwkRxDuplicateRejectionTimer)
 1094 0608 90E0      		ldi r25,hi8(nwkRxDuplicateRejectionTimer)
 1095 060a 0E94 0000 		call SYS_TimerStart
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 1096               		.loc 2 322 0
 1097 060e 80E0      		ldi r24,0
 1098               	.L47:
 1099               	/* epilogue start */
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1100               		.loc 2 323 0
 1101 0610 2996      		adiw r28,9
 1102 0612 0FB6      		in __tmp_reg__,__SREG__
 1103 0614 F894      		cli
 1104 0616 DEBF      		out __SP_H__,r29
 1105 0618 0FBE      		out __SREG__,__tmp_reg__
 1106 061a CDBF      		out __SP_L__,r28
 1107 061c DF91      		pop r29
 1108 061e CF91      		pop r28
 1109 0620 0895      		ret
 1110               		.cfi_endproc
 1111               	.LFE71:
 1114               	nwkRxSeriveDataInd:
 1115               	.LFB72:
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxSeriveDataInd(NWK_DataInd_t *ind)
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1116               		.loc 2 328 0
 1117               		.cfi_startproc
 1118 0622 CF93      		push r28
 1119               	.LCFI28:
 1120               		.cfi_def_cfa_offset 3
 1121               		.cfi_offset 28, -2
 1122 0624 DF93      		push r29
 1123               	.LCFI29:
 1124               		.cfi_def_cfa_offset 4
 1125               		.cfi_offset 29, -3
 1126 0626 00D0      		rcall .
 1127               	.LCFI30:
 1128               		.cfi_def_cfa_offset 6
 1129 0628 CDB7      		in r28,__SP_L__
 1130 062a DEB7      		in r29,__SP_H__
 1131               	.LCFI31:
 1132               		.cfi_def_cfa_register 28
 1133               	/* prologue: function */
 1134               	/* frame size = 2 */
 1135               	/* stack size = 4 */
 1136               	.L__stack_usage = 4
 1137 062c 9A83      		std Y+2,r25
 1138 062e 8983      		std Y+1,r24
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == (ind->options & NWK_IND_OPT_SECURED)) {
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ind->size < 1) {
 1139               		.loc 2 336 0
 1140 0630 8981      		ldd r24,Y+1
 1141 0632 9A81      		ldd r25,Y+2
 1142 0634 FC01      		movw r30,r24
 1143 0636 8285      		ldd r24,Z+10
 1144 0638 8823      		tst r24
 1145 063a 01F4      		brne .L52
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1146               		.loc 2 337 0
 1147 063c 80E0      		ldi r24,0
 1148 063e 00C0      		rjmp .L53
 1149               	.L52:
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	switch (ind->data[0]) {
 1150               		.loc 2 340 0
 1151 0640 8981      		ldd r24,Y+1
 1152 0642 9A81      		ldd r25,Y+2
 1153 0644 FC01      		movw r30,r24
 1154 0646 8085      		ldd r24,Z+8
 1155 0648 9185      		ldd r25,Z+9
 1156 064a FC01      		movw r30,r24
 1157 064c 8081      		ld r24,Z
 1158 064e 882F      		mov r24,r24
 1159 0650 90E0      		ldi r25,0
 1160 0652 892B      		or r24,r25
 1161 0654 01F4      		brne .L56
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ACK:
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkTxAckReceived(ind);
 1162               		.loc 2 342 0
 1163 0656 8981      		ldd r24,Y+1
 1164 0658 9A81      		ldd r25,Y+2
 1165 065a 0E94 0000 		call nwkTxAckReceived
 1166 065e 00C0      		rjmp .L53
 1167               	.L56:
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_ERROR:
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteErrorReceived(ind);
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTE_DISCOVERY
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REQUEST:
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryRequestReceived(ind);
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	case NWK_COMMAND_ROUTE_REPLY:
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return nwkRouteDiscoveryReplyReceived(ind);
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	default:
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1168               		.loc 2 360 0
 1169 0660 80E0      		ldi r24,0
 1170               	.L53:
 1171               	/* epilogue start */
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1172               		.loc 2 362 0
 1173 0662 0F90      		pop __tmp_reg__
 1174 0664 0F90      		pop __tmp_reg__
 1175 0666 DF91      		pop r29
 1176 0668 CF91      		pop r28
 1177 066a 0895      		ret
 1178               		.cfi_endproc
 1179               	.LFE72:
 1182               	nwkRxHandleReceivedFrame:
 1183               	.LFB73:
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleReceivedFrame(NwkFrame_t *frame)
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1184               		.loc 2 367 0
 1185               		.cfi_startproc
 1186 066c CF93      		push r28
 1187               	.LCFI32:
 1188               		.cfi_def_cfa_offset 3
 1189               		.cfi_offset 28, -2
 1190 066e DF93      		push r29
 1191               	.LCFI33:
 1192               		.cfi_def_cfa_offset 4
 1193               		.cfi_offset 29, -3
 1194 0670 CDB7      		in r28,__SP_L__
 1195 0672 DEB7      		in r29,__SP_H__
 1196               	.LCFI34:
 1197               		.cfi_def_cfa_register 28
 1198 0674 2897      		sbiw r28,8
 1199               	.LCFI35:
 1200               		.cfi_def_cfa_offset 12
 1201 0676 0FB6      		in __tmp_reg__,__SREG__
 1202 0678 F894      		cli
 1203 067a DEBF      		out __SP_H__,r29
 1204 067c 0FBE      		out __SREG__,__tmp_reg__
 1205 067e CDBF      		out __SP_L__,r28
 1206               	/* prologue: function */
 1207               	/* frame size = 8 */
 1208               	/* stack size = 10 */
 1209               	.L__stack_usage = 10
 1210 0680 9887      		std Y+8,r25
 1211 0682 8F83      		std Y+7,r24
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1212               		.loc 2 368 0
 1213 0684 8F81      		ldd r24,Y+7
 1214 0686 9885      		ldd r25,Y+8
 1215 0688 0296      		adiw r24,2
 1216 068a 9B83      		std Y+3,r25
 1217 068c 8A83      		std Y+2,r24
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 1218               		.loc 2 370 0
 1219 068e 8F81      		ldd r24,Y+7
 1220 0690 9885      		ldd r25,Y+8
 1221 0692 24E2      		ldi r18,lo8(36)
 1222 0694 FC01      		movw r30,r24
 1223 0696 2083      		st Z,r18
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifndef NWK_ENABLE_SECURITY
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.security) {
 1224               		.loc 2 373 0
 1225 0698 8A81      		ldd r24,Y+2
 1226 069a 9B81      		ldd r25,Y+3
 1227 069c FC01      		movw r30,r24
 1228 069e 8185      		ldd r24,Z+9
 1229 06a0 8270      		andi r24,lo8(2)
 1230 06a2 8823      		tst r24
 1231 06a4 01F0      		breq .+2
 1232 06a6 00C0      		rjmp .L78
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast && header->nwkFcf.ackRequest) {
 1233               		.loc 2 380 0
 1234 06a8 8A81      		ldd r24,Y+2
 1235 06aa 9B81      		ldd r25,Y+3
 1236 06ac FC01      		movw r30,r24
 1237 06ae 8185      		ldd r24,Z+9
 1238 06b0 8870      		andi r24,lo8(8)
 1239 06b2 8823      		tst r24
 1240 06b4 01F0      		breq .L60
 1241               		.loc 2 380 0 is_stmt 0 discriminator 1
 1242 06b6 8A81      		ldd r24,Y+2
 1243 06b8 9B81      		ldd r25,Y+3
 1244 06ba FC01      		movw r30,r24
 1245 06bc 8185      		ldd r24,Z+9
 1246 06be 8170      		andi r24,lo8(1)
 1247 06c0 8823      		tst r24
 1248 06c2 01F0      		breq .+2
 1249 06c4 00C0      		rjmp .L79
 1250               	.L60:
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #else
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == header->macDstPanId)
 1251               		.loc 2 391 0 is_stmt 1
 1252 06c6 8A81      		ldd r24,Y+2
 1253 06c8 9B81      		ldd r25,Y+3
 1254 06ca FC01      		movw r30,r24
 1255 06cc 8381      		ldd r24,Z+3
 1256 06ce 9481      		ldd r25,Z+4
 1257 06d0 0196      		adiw r24,1
 1258 06d2 01F4      		brne .L61
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR == header->nwkDstAddr)
 1259               		.loc 2 393 0
 1260 06d4 2091 0000 		lds r18,nwkIb
 1261 06d8 3091 0000 		lds r19,nwkIb+1
 1262 06dc 8A81      		ldd r24,Y+2
 1263 06de 9B81      		ldd r25,Y+3
 1264 06e0 FC01      		movw r30,r24
 1265 06e2 8585      		ldd r24,Z+13
 1266 06e4 9685      		ldd r25,Z+14
 1267 06e6 2817      		cp r18,r24
 1268 06e8 3907      		cpc r19,r25
 1269 06ea 01F0      		breq .L62
 1270               		.loc 2 393 0 is_stmt 0 discriminator 1
 1271 06ec 8A81      		ldd r24,Y+2
 1272 06ee 9B81      		ldd r25,Y+3
 1273 06f0 FC01      		movw r30,r24
 1274 06f2 8585      		ldd r24,Z+13
 1275 06f4 9685      		ldd r25,Z+14
 1276 06f6 0196      		adiw r24,1
 1277 06f8 01F0      		breq .+2
 1278 06fa 00C0      		rjmp .L80
 1279               	.L62:
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security)
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			{
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1280               		.loc 2 402 0 is_stmt 1
 1281 06fc 8F81      		ldd r24,Y+7
 1282 06fe 9885      		ldd r25,Y+8
 1283 0700 22E2      		ldi r18,lo8(34)
 1284 0702 FC01      		movw r30,r24
 1285 0704 2083      		st Z,r18
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 1286               		.loc 2 405 0
 1287 0706 00C0      		rjmp .L80
 1288               	.L61:
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ADDRESS_FILTER
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (!NWK_FilterAddress(header->macSrcAddr, &frame->rx.lqi)) {
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == header->nwkDstAddr && header->nwkFcf.ackRequest)
 1289               		.loc 2 415 0
 1290 0708 8A81      		ldd r24,Y+2
 1291 070a 9B81      		ldd r25,Y+3
 1292 070c FC01      		movw r30,r24
 1293 070e 8585      		ldd r24,Z+13
 1294 0710 9685      		ldd r25,Z+14
 1295 0712 0196      		adiw r24,1
 1296 0714 01F4      		brne .L64
 1297               		.loc 2 415 0 is_stmt 0 discriminator 1
 1298 0716 8A81      		ldd r24,Y+2
 1299 0718 9B81      		ldd r25,Y+3
 1300 071a FC01      		movw r30,r24
 1301 071c 8185      		ldd r24,Z+9
 1302 071e 8170      		andi r24,lo8(1)
 1303 0720 8823      		tst r24
 1304 0722 01F0      		breq .+2
 1305 0724 00C0      		rjmp .L81
 1306               	.L64:
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkIb.addr == header->nwkSrcAddr)
 1307               		.loc 2 420 0 is_stmt 1
 1308 0726 2091 0000 		lds r18,nwkIb
 1309 072a 3091 0000 		lds r19,nwkIb+1
 1310 072e 8A81      		ldd r24,Y+2
 1311 0730 9B81      		ldd r25,Y+3
 1312 0732 FC01      		movw r30,r24
 1313 0734 8385      		ldd r24,Z+11
 1314 0736 9485      		ldd r25,Z+12
 1315 0738 2817      		cp r18,r24
 1316 073a 3907      		cpc r19,r25
 1317 073c 01F4      		brne .+2
 1318 073e 00C0      		rjmp .L82
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRouteFrameReceived(frame);
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (nwkRxRejectDuplicate(header))
 1319               		.loc 2 429 0
 1320 0740 8A81      		ldd r24,Y+2
 1321 0742 9B81      		ldd r25,Y+3
 1322 0744 0E94 0000 		call nwkRxRejectDuplicate
 1323 0748 8823      		tst r24
 1324 074a 01F0      		breq .+2
 1325 074c 00C0      		rjmp .L83
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return;
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_MULTICAST
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (header->nwkFcf.multicast) {
 1326               		.loc 2 435 0
 1327 074e 8A81      		ldd r24,Y+2
 1328 0750 9B81      		ldd r25,Y+3
 1329 0752 FC01      		movw r30,r24
 1330 0754 8185      		ldd r24,Z+9
 1331 0756 8870      		andi r24,lo8(8)
 1332 0758 8823      		tst r24
 1333 075a 01F4      		brne .+2
 1334 075c 00C0      		rjmp .L67
 1335               	.LBB7:
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		NwkFrameMulticastHeader_t *mcHeader
 1336               		.loc 2 436 0
 1337 075e 8F81      		ldd r24,Y+7
 1338 0760 9885      		ldd r25,Y+8
 1339 0762 8F57      		subi r24,127
 1340 0764 9F4F      		sbci r25,-1
 1341 0766 FC01      		movw r30,r24
 1342 0768 8081      		ld r24,Z
 1343 076a 9181      		ldd r25,Z+1
 1344 076c 9D83      		std Y+5,r25
 1345 076e 8C83      		std Y+4,r24
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			= (NwkFrameMulticastHeader_t *)frame->payload;
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool member = NWK_GroupIsMember(header->nwkDstAddr);
 1346               		.loc 2 438 0
 1347 0770 8A81      		ldd r24,Y+2
 1348 0772 9B81      		ldd r25,Y+3
 1349 0774 FC01      		movw r30,r24
 1350 0776 8585      		ldd r24,Z+13
 1351 0778 9685      		ldd r25,Z+14
 1352 077a 0E94 0000 		call NWK_GroupIsMember
 1353 077e 8E83      		std Y+6,r24
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		bool broadcast = false;
 1354               		.loc 2 439 0
 1355 0780 1982      		std Y+1,__zero_reg__
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 1356               		.loc 2 441 0
 1357 0782 8A81      		ldd r24,Y+2
 1358 0784 9B81      		ldd r25,Y+3
 1359 0786 FC01      		movw r30,r24
 1360 0788 8581      		ldd r24,Z+5
 1361 078a 9681      		ldd r25,Z+6
 1362 078c 0196      		adiw r24,1
 1363 078e 01F0      		breq .+2
 1364 0790 00C0      		rjmp .L68
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1365               		.loc 2 442 0
 1366 0792 8E81      		ldd r24,Y+6
 1367 0794 8823      		tst r24
 1368 0796 01F0      		breq .L69
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->memberRadius > 0;
 1369               		.loc 2 443 0
 1370 0798 8C81      		ldd r24,Y+4
 1371 079a 9D81      		ldd r25,Y+5
 1372 079c FC01      		movw r30,r24
 1373 079e 8181      		ldd r24,Z+1
 1374 07a0 8F70      		andi r24,lo8(15)
 1375 07a2 882F      		mov r24,r24
 1376 07a4 90E0      		ldi r25,0
 1377 07a6 21E0      		ldi r18,lo8(1)
 1378 07a8 1816      		cp __zero_reg__,r24
 1379 07aa 1906      		cpc __zero_reg__,r25
 1380 07ac 04F0      		brlt .L70
 1381 07ae 20E0      		ldi r18,0
 1382               	.L70:
 1383 07b0 2983      		std Y+1,r18
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius--;
 1384               		.loc 2 444 0
 1385 07b2 8C81      		ldd r24,Y+4
 1386 07b4 9D81      		ldd r25,Y+5
 1387 07b6 FC01      		movw r30,r24
 1388 07b8 8181      		ldd r24,Z+1
 1389 07ba 8F70      		andi r24,lo8(15)
 1390 07bc 2FE0      		ldi r18,lo8(15)
 1391 07be 280F      		add r18,r24
 1392 07c0 2F70      		andi r18,lo8(15)
 1393 07c2 8C81      		ldd r24,Y+4
 1394 07c4 9D81      		ldd r25,Y+5
 1395 07c6 2F70      		andi r18,lo8(15)
 1396 07c8 FC01      		movw r30,r24
 1397 07ca 3181      		ldd r19,Z+1
 1398 07cc 307F      		andi r19,lo8(-16)
 1399 07ce 232B      		or r18,r19
 1400 07d0 FC01      		movw r30,r24
 1401 07d2 2183      		std Z+1,r18
 445:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius
 446:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxNonMemberRadius;
 1402               		.loc 2 446 0
 1403 07d4 8C81      		ldd r24,Y+4
 1404 07d6 9D81      		ldd r25,Y+5
 1405 07d8 FC01      		movw r30,r24
 1406 07da 8081      		ld r24,Z
 1407 07dc 282F      		mov r18,r24
 1408 07de 2295      		swap r18
 1409 07e0 2F70      		andi r18,lo8(15)
 1410 07e2 8C81      		ldd r24,Y+4
 1411 07e4 9D81      		ldd r25,Y+5
 1412 07e6 2F70      		andi r18,lo8(15)
 1413 07e8 FC01      		movw r30,r24
 1414 07ea 3081      		ld r19,Z
 1415 07ec 307F      		andi r19,lo8(-16)
 1416 07ee 232B      		or r18,r19
 1417 07f0 FC01      		movw r30,r24
 1418 07f2 2083      		st Z,r18
 1419 07f4 00C0      		rjmp .L73
 1420               	.L69:
 447:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else {
 448:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = mcHeader->nonMemberRadius > 0;
 1421               		.loc 2 448 0
 1422 07f6 8C81      		ldd r24,Y+4
 1423 07f8 9D81      		ldd r25,Y+5
 1424 07fa FC01      		movw r30,r24
 1425 07fc 8081      		ld r24,Z
 1426 07fe 8F70      		andi r24,lo8(15)
 1427 0800 882F      		mov r24,r24
 1428 0802 90E0      		ldi r25,0
 1429 0804 21E0      		ldi r18,lo8(1)
 1430 0806 1816      		cp __zero_reg__,r24
 1431 0808 1906      		cpc __zero_reg__,r25
 1432 080a 04F0      		brlt .L72
 1433 080c 20E0      		ldi r18,0
 1434               	.L72:
 1435 080e 2983      		std Y+1,r18
 449:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->nonMemberRadius--;
 1436               		.loc 2 449 0
 1437 0810 8C81      		ldd r24,Y+4
 1438 0812 9D81      		ldd r25,Y+5
 1439 0814 FC01      		movw r30,r24
 1440 0816 8081      		ld r24,Z
 1441 0818 8F70      		andi r24,lo8(15)
 1442 081a 2FE0      		ldi r18,lo8(15)
 1443 081c 280F      		add r18,r24
 1444 081e 2F70      		andi r18,lo8(15)
 1445 0820 8C81      		ldd r24,Y+4
 1446 0822 9D81      		ldd r25,Y+5
 1447 0824 2F70      		andi r18,lo8(15)
 1448 0826 FC01      		movw r30,r24
 1449 0828 3081      		ld r19,Z
 1450 082a 307F      		andi r19,lo8(-16)
 1451 082c 232B      		or r18,r19
 1452 082e FC01      		movw r30,r24
 1453 0830 2083      		st Z,r18
 450:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				mcHeader->memberRadius
 451:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 					= mcHeader->maxMemberRadius;
 1454               		.loc 2 451 0
 1455 0832 8C81      		ldd r24,Y+4
 1456 0834 9D81      		ldd r25,Y+5
 1457 0836 FC01      		movw r30,r24
 1458 0838 8181      		ldd r24,Z+1
 1459 083a 282F      		mov r18,r24
 1460 083c 2295      		swap r18
 1461 083e 2F70      		andi r18,lo8(15)
 1462 0840 8C81      		ldd r24,Y+4
 1463 0842 9D81      		ldd r25,Y+5
 1464 0844 2F70      		andi r18,lo8(15)
 1465 0846 FC01      		movw r30,r24
 1466 0848 3181      		ldd r19,Z+1
 1467 084a 307F      		andi r19,lo8(-16)
 1468 084c 232B      		or r18,r19
 1469 084e FC01      		movw r30,r24
 1470 0850 2183      		std Z+1,r18
 1471 0852 00C0      		rjmp .L73
 1472               	.L68:
 452:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 453:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		} else {
 454:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (member) {
 1473               		.loc 2 454 0
 1474 0854 8E81      		ldd r24,Y+6
 1475 0856 8823      		tst r24
 1476 0858 01F0      		breq .L73
 455:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				broadcast = true;
 1477               		.loc 2 455 0
 1478 085a 81E0      		ldi r24,lo8(1)
 1479 085c 8983      		std Y+1,r24
 456:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkFcf.linkLocal = 1;
 1480               		.loc 2 456 0
 1481 085e 8A81      		ldd r24,Y+2
 1482 0860 9B81      		ldd r25,Y+3
 1483 0862 FC01      		movw r30,r24
 1484 0864 2185      		ldd r18,Z+9
 1485 0866 2460      		ori r18,lo8(4)
 1486 0868 FC01      		movw r30,r24
 1487 086a 2187      		std Z+9,r18
 1488               	.L73:
 457:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 458:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 459:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_ROUTING
 460:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			else {
 461:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_ROUTE;
 462:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			}
 463:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 464:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 465:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 466:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (broadcast) {
 1489               		.loc 2 466 0
 1490 086c 8981      		ldd r24,Y+1
 1491 086e 8823      		tst r24
 1492 0870 01F0      		breq .L74
 467:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1493               		.loc 2 467 0
 1494 0872 8F81      		ldd r24,Y+7
 1495 0874 9885      		ldd r25,Y+8
 1496 0876 0E94 0000 		call nwkTxBroadcastFrame
 1497               	.L74:
 468:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 469:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 470:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (member) {
 1498               		.loc 2 470 0
 1499 087a 8E81      		ldd r24,Y+6
 1500 087c 8823      		tst r24
 1501 087e 01F4      		brne .+2
 1502 0880 00C0      		rjmp .L57
 471:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->payload += sizeof(NwkFrameMulticastHeader_t);
 1503               		.loc 2 471 0
 1504 0882 8F81      		ldd r24,Y+7
 1505 0884 9885      		ldd r25,Y+8
 1506 0886 8F57      		subi r24,127
 1507 0888 9F4F      		sbci r25,-1
 1508 088a FC01      		movw r30,r24
 1509 088c 8081      		ld r24,Z
 1510 088e 9181      		ldd r25,Z+1
 1511 0890 9C01      		movw r18,r24
 1512 0892 2E5F      		subi r18,-2
 1513 0894 3F4F      		sbci r19,-1
 1514 0896 8F81      		ldd r24,Y+7
 1515 0898 9885      		ldd r25,Y+8
 1516 089a 8F57      		subi r24,127
 1517 089c 9F4F      		sbci r25,-1
 1518 089e FC01      		movw r30,r24
 1519 08a0 3183      		std Z+1,r19
 1520 08a2 2083      		st Z,r18
 472:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 473:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 474:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 475:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 476:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 477:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 478:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1521               		.loc 2 478 0
 1522 08a4 8F81      		ldd r24,Y+7
 1523 08a6 9885      		ldd r25,Y+8
 1524 08a8 22E2      		ldi r18,lo8(34)
 1525 08aa FC01      		movw r30,r24
 1526 08ac 2083      		st Z,r18
 1527 08ae 00C0      		rjmp .L57
 1528               	.L67:
 1529               	.LBE7:
 479:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 480:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	} else
 481:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif /* NWK_ENABLE_MULTICAST */
 482:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	{
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (NWK_BROADCAST_ADDR == header->macDstAddr && nwkIb.addr !=
 1530               		.loc 2 483 0
 1531 08b0 8A81      		ldd r24,Y+2
 1532 08b2 9B81      		ldd r25,Y+3
 1533 08b4 FC01      		movw r30,r24
 1534 08b6 8581      		ldd r24,Z+5
 1535 08b8 9681      		ldd r25,Z+6
 1536 08ba 0196      		adiw r24,1
 1537 08bc 01F4      		brne .L76
 1538               		.loc 2 483 0 is_stmt 0 discriminator 1
 1539 08be 2091 0000 		lds r18,nwkIb
 1540 08c2 3091 0000 		lds r19,nwkIb+1
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1541               		.loc 2 484 0 is_stmt 1 discriminator 1
 1542 08c6 8A81      		ldd r24,Y+2
 1543 08c8 9B81      		ldd r25,Y+3
 1544 08ca FC01      		movw r30,r24
 1545 08cc 8585      		ldd r24,Z+13
 1546 08ce 9685      		ldd r25,Z+14
 483:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1547               		.loc 2 483 0 discriminator 1
 1548 08d0 2817      		cp r18,r24
 1549 08d2 3907      		cpc r19,r25
 1550 08d4 01F0      		breq .L76
 485:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				0 == header->nwkFcf.linkLocal) {
 1551               		.loc 2 485 0
 1552 08d6 8A81      		ldd r24,Y+2
 1553 08d8 9B81      		ldd r25,Y+3
 1554 08da FC01      		movw r30,r24
 1555 08dc 8185      		ldd r24,Z+9
 1556 08de 8470      		andi r24,lo8(4)
 484:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr &&
 1557               		.loc 2 484 0
 1558 08e0 8823      		tst r24
 1559 08e2 01F4      		brne .L76
 486:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkTxBroadcastFrame(frame);
 1560               		.loc 2 486 0
 1561 08e4 8F81      		ldd r24,Y+7
 1562 08e6 9885      		ldd r25,Y+8
 1563 08e8 0E94 0000 		call nwkTxBroadcastFrame
 1564               	.L76:
 487:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 488:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		if (nwkIb.addr == header->nwkDstAddr || NWK_BROADCAST_ADDR ==
 1565               		.loc 2 489 0
 1566 08ec 2091 0000 		lds r18,nwkIb
 1567 08f0 3091 0000 		lds r19,nwkIb+1
 1568 08f4 8A81      		ldd r24,Y+2
 1569 08f6 9B81      		ldd r25,Y+3
 1570 08f8 FC01      		movw r30,r24
 1571 08fa 8585      		ldd r24,Z+13
 1572 08fc 9685      		ldd r25,Z+14
 1573 08fe 2817      		cp r18,r24
 1574 0900 3907      		cpc r19,r25
 1575 0902 01F0      		breq .L77
 490:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1576               		.loc 2 490 0 discriminator 1
 1577 0904 8A81      		ldd r24,Y+2
 1578 0906 9B81      		ldd r25,Y+3
 1579 0908 FC01      		movw r30,r24
 1580 090a 8585      		ldd r24,Z+13
 1581 090c 9685      		ldd r25,Z+14
 489:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				header->nwkDstAddr) {
 1582               		.loc 2 489 0 discriminator 1
 1583 090e 0196      		adiw r24,1
 1584 0910 01F4      		brne .L57
 1585               	.L77:
 491:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #ifdef NWK_ENABLE_SECURITY
 492:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			if (header->nwkFcf.security) {
 493:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 				frame->state = NWK_RX_STATE_DECRYPT;
 494:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			} else
 495:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****     #endif
 496:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_INDICATE;
 1586               		.loc 2 496 0
 1587 0912 8F81      		ldd r24,Y+7
 1588 0914 9885      		ldd r25,Y+8
 1589 0916 22E2      		ldi r18,lo8(34)
 1590 0918 FC01      		movw r30,r24
 1591 091a 2083      		st Z,r18
 1592 091c 00C0      		rjmp .L57
 1593               	.L78:
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1594               		.loc 2 374 0
 1595 091e 0000      		nop
 1596 0920 00C0      		rjmp .L57
 1597               	.L79:
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1598               		.loc 2 381 0
 1599 0922 0000      		nop
 1600 0924 00C0      		rjmp .L57
 1601               	.L80:
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1602               		.loc 2 405 0
 1603 0926 0000      		nop
 1604 0928 00C0      		rjmp .L57
 1605               	.L81:
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1606               		.loc 2 417 0
 1607 092a 0000      		nop
 1608 092c 00C0      		rjmp .L57
 1609               	.L82:
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1610               		.loc 2 422 0
 1611 092e 0000      		nop
 1612 0930 00C0      		rjmp .L57
 1613               	.L83:
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 1614               		.loc 2 431 0
 1615 0932 0000      		nop
 1616               	.L57:
 1617               	/* epilogue start */
 497:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 498:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 499:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #ifdef NWK_ENABLE_ROUTING
 500:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		else if (nwkIb.addr == header->macDstAddr) {
 501:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			frame->state = NWK_RX_STATE_ROUTE;
 502:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 503:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c ****   #endif
 504:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 505:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1618               		.loc 2 505 0
 1619 0934 2896      		adiw r28,8
 1620 0936 0FB6      		in __tmp_reg__,__SREG__
 1621 0938 F894      		cli
 1622 093a DEBF      		out __SP_H__,r29
 1623 093c 0FBE      		out __SREG__,__tmp_reg__
 1624 093e CDBF      		out __SP_L__,r28
 1625 0940 DF91      		pop r29
 1626 0942 CF91      		pop r28
 1627 0944 0895      		ret
 1628               		.cfi_endproc
 1629               	.LFE73:
 1632               	nwkRxIndicateDataFrame:
 1633               	.LFB74:
 506:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 507:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 508:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 509:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateDataFrame(NwkFrame_t *frame)
 510:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1634               		.loc 2 510 0
 1635               		.cfi_startproc
 1636 0946 CF93      		push r28
 1637               	.LCFI36:
 1638               		.cfi_def_cfa_offset 3
 1639               		.cfi_offset 28, -2
 1640 0948 DF93      		push r29
 1641               	.LCFI37:
 1642               		.cfi_def_cfa_offset 4
 1643               		.cfi_offset 29, -3
 1644 094a CDB7      		in r28,__SP_L__
 1645 094c DEB7      		in r29,__SP_H__
 1646               	.LCFI38:
 1647               		.cfi_def_cfa_register 28
 1648 094e 6197      		sbiw r28,17
 1649               	.LCFI39:
 1650               		.cfi_def_cfa_offset 21
 1651 0950 0FB6      		in __tmp_reg__,__SREG__
 1652 0952 F894      		cli
 1653 0954 DEBF      		out __SP_H__,r29
 1654 0956 0FBE      		out __SREG__,__tmp_reg__
 1655 0958 CDBF      		out __SP_L__,r28
 1656               	/* prologue: function */
 1657               	/* frame size = 17 */
 1658               	/* stack size = 19 */
 1659               	.L__stack_usage = 19
 1660 095a 998B      		std Y+17,r25
 1661 095c 888B      		std Y+16,r24
 511:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 1662               		.loc 2 511 0
 1663 095e 8889      		ldd r24,Y+16
 1664 0960 9989      		ldd r25,Y+17
 1665 0962 0296      		adiw r24,2
 1666 0964 9A83      		std Y+2,r25
 1667 0966 8983      		std Y+1,r24
 512:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 513:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 514:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[header->nwkDstEndpoint]) {
 1668               		.loc 2 514 0
 1669 0968 8981      		ldd r24,Y+1
 1670 096a 9A81      		ldd r25,Y+2
 1671 096c FC01      		movw r30,r24
 1672 096e 8785      		ldd r24,Z+15
 1673 0970 8295      		swap r24
 1674 0972 8F70      		andi r24,lo8(15)
 1675 0974 882F      		mov r24,r24
 1676 0976 90E0      		ldi r25,0
 1677 0978 0396      		adiw r24,3
 1678 097a 880F      		lsl r24
 1679 097c 991F      		rol r25
 1680 097e 8050      		subi r24,lo8(-(nwkIb))
 1681 0980 9040      		sbci r25,hi8(-(nwkIb))
 1682 0982 FC01      		movw r30,r24
 1683 0984 8081      		ld r24,Z
 1684 0986 9181      		ldd r25,Z+1
 1685 0988 892B      		or r24,r25
 1686 098a 01F4      		brne .L85
 515:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		return false;
 1687               		.loc 2 515 0
 1688 098c 80E0      		ldi r24,0
 1689 098e 00C0      		rjmp .L100
 1690               	.L85:
 516:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 517:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 518:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = header->nwkSrcAddr;
 1691               		.loc 2 518 0
 1692 0990 8981      		ldd r24,Y+1
 1693 0992 9A81      		ldd r25,Y+2
 1694 0994 FC01      		movw r30,r24
 1695 0996 8385      		ldd r24,Z+11
 1696 0998 9485      		ldd r25,Z+12
 1697 099a 9C83      		std Y+4,r25
 1698 099c 8B83      		std Y+3,r24
 519:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = header->nwkDstAddr;
 1699               		.loc 2 519 0
 1700 099e 8981      		ldd r24,Y+1
 1701 09a0 9A81      		ldd r25,Y+2
 1702 09a2 FC01      		movw r30,r24
 1703 09a4 8585      		ldd r24,Z+13
 1704 09a6 9685      		ldd r25,Z+14
 1705 09a8 9E83      		std Y+6,r25
 1706 09aa 8D83      		std Y+5,r24
 520:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = header->nwkSrcEndpoint;
 1707               		.loc 2 520 0
 1708 09ac 8981      		ldd r24,Y+1
 1709 09ae 9A81      		ldd r25,Y+2
 1710 09b0 FC01      		movw r30,r24
 1711 09b2 8785      		ldd r24,Z+15
 1712 09b4 8F70      		andi r24,lo8(15)
 1713 09b6 8F83      		std Y+7,r24
 521:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = header->nwkDstEndpoint;
 1714               		.loc 2 521 0
 1715 09b8 8981      		ldd r24,Y+1
 1716 09ba 9A81      		ldd r25,Y+2
 1717 09bc FC01      		movw r30,r24
 1718 09be 8785      		ldd r24,Z+15
 1719 09c0 8295      		swap r24
 1720 09c2 8F70      		andi r24,lo8(15)
 1721 09c4 8887      		std Y+8,r24
 522:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 1722               		.loc 2 522 0
 1723 09c6 8889      		ldd r24,Y+16
 1724 09c8 9989      		ldd r25,Y+17
 1725 09ca 8F57      		subi r24,127
 1726 09cc 9F4F      		sbci r25,-1
 1727 09ce FC01      		movw r30,r24
 1728 09d0 8081      		ld r24,Z
 1729 09d2 9181      		ldd r25,Z+1
 1730 09d4 9C87      		std Y+12,r25
 1731 09d6 8B87      		std Y+11,r24
 523:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 1732               		.loc 2 523 0
 1733 09d8 8889      		ldd r24,Y+16
 1734 09da 9989      		ldd r25,Y+17
 1735 09dc 0E94 0000 		call nwkFramePayloadSize
 1736 09e0 8D87      		std Y+13,r24
 524:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 1737               		.loc 2 524 0
 1738 09e2 8889      		ldd r24,Y+16
 1739 09e4 9989      		ldd r25,Y+17
 1740 09e6 8D57      		subi r24,125
 1741 09e8 9F4F      		sbci r25,-1
 1742 09ea FC01      		movw r30,r24
 1743 09ec 8081      		ld r24,Z
 1744 09ee 8E87      		std Y+14,r24
 525:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 1745               		.loc 2 525 0
 1746 09f0 8889      		ldd r24,Y+16
 1747 09f2 9989      		ldd r25,Y+17
 1748 09f4 8C57      		subi r24,124
 1749 09f6 9F4F      		sbci r25,-1
 1750 09f8 FC01      		movw r30,r24
 1751 09fa 8081      		ld r24,Z
 1752 09fc 8F87      		std Y+15,r24
 526:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 527:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK_REQUESTED : 0;
 1753               		.loc 2 527 0
 1754 09fe 8981      		ldd r24,Y+1
 1755 0a00 9A81      		ldd r25,Y+2
 1756 0a02 FC01      		movw r30,r24
 1757 0a04 8185      		ldd r24,Z+9
 1758 0a06 982F      		mov r25,r24
 1759 0a08 9170      		andi r25,lo8(1)
 1760 0a0a 81E0      		ldi r24,lo8(1)
 1761 0a0c 9923      		tst r25
 1762 0a0e 01F4      		brne .L87
 1763 0a10 80E0      		ldi r24,0
 1764               	.L87:
 1765 0a12 882F      		mov r24,r24
 1766 0a14 90E0      		ldi r25,0
 1767 0a16 9A87      		std Y+10,r25
 1768 0a18 8987      		std Y+9,r24
 528:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECURED : 0;
 1769               		.loc 2 528 0
 1770 0a1a 2985      		ldd r18,Y+9
 1771 0a1c 3A85      		ldd r19,Y+10
 1772 0a1e 8981      		ldd r24,Y+1
 1773 0a20 9A81      		ldd r25,Y+2
 1774 0a22 FC01      		movw r30,r24
 1775 0a24 8185      		ldd r24,Z+9
 1776 0a26 882F      		mov r24,r24
 1777 0a28 90E0      		ldi r25,0
 1778 0a2a 8270      		andi r24,2
 1779 0a2c 9927      		clr r25
 1780 0a2e 822B      		or r24,r18
 1781 0a30 932B      		or r25,r19
 1782 0a32 9A87      		std Y+10,r25
 1783 0a34 8987      		std Y+9,r24
 529:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LINK_LOCAL : 0;
 1784               		.loc 2 529 0
 1785 0a36 2985      		ldd r18,Y+9
 1786 0a38 3A85      		ldd r19,Y+10
 1787 0a3a 8981      		ldd r24,Y+1
 1788 0a3c 9A81      		ldd r25,Y+2
 1789 0a3e FC01      		movw r30,r24
 1790 0a40 8185      		ldd r24,Z+9
 1791 0a42 8470      		andi r24,lo8(4)
 1792 0a44 8823      		tst r24
 1793 0a46 01F0      		breq .L88
 1794               		.loc 2 529 0 is_stmt 0 discriminator 1
 1795 0a48 80E2      		ldi r24,lo8(32)
 1796 0a4a 90E0      		ldi r25,0
 1797 0a4c 00C0      		rjmp .L89
 1798               	.L88:
 1799               		.loc 2 529 0 discriminator 2
 1800 0a4e 80E0      		ldi r24,0
 1801 0a50 90E0      		ldi r25,0
 1802               	.L89:
 1803               		.loc 2 529 0 discriminator 4
 1804 0a52 822B      		or r24,r18
 1805 0a54 932B      		or r25,r19
 1806 0a56 9A87      		std Y+10,r25
 1807 0a58 8987      		std Y+9,r24
 530:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MULTICAST : 0;
 1808               		.loc 2 530 0 is_stmt 1 discriminator 4
 1809 0a5a 2985      		ldd r18,Y+9
 1810 0a5c 3A85      		ldd r19,Y+10
 1811 0a5e 8981      		ldd r24,Y+1
 1812 0a60 9A81      		ldd r25,Y+2
 1813 0a62 FC01      		movw r30,r24
 1814 0a64 8185      		ldd r24,Z+9
 1815 0a66 8870      		andi r24,lo8(8)
 1816 0a68 8823      		tst r24
 1817 0a6a 01F0      		breq .L90
 1818               		.loc 2 530 0 is_stmt 0 discriminator 1
 1819 0a6c 80E4      		ldi r24,lo8(64)
 1820 0a6e 90E0      		ldi r25,0
 1821 0a70 00C0      		rjmp .L91
 1822               	.L90:
 1823               		.loc 2 530 0 discriminator 2
 1824 0a72 80E0      		ldi r24,0
 1825 0a74 90E0      		ldi r25,0
 1826               	.L91:
 1827               		.loc 2 530 0 discriminator 4
 1828 0a76 822B      		or r24,r18
 1829 0a78 932B      		or r25,r19
 1830 0a7a 9A87      		std Y+10,r25
 1831 0a7c 8987      		std Y+9,r24
 531:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options |= (header->nwkFcf.beacon) ? NWK_IND_OPT_BEACON : 0;
 1832               		.loc 2 531 0 is_stmt 1 discriminator 4
 1833 0a7e 2985      		ldd r18,Y+9
 1834 0a80 3A85      		ldd r19,Y+10
 1835 0a82 8981      		ldd r24,Y+1
 1836 0a84 9A81      		ldd r25,Y+2
 1837 0a86 FC01      		movw r30,r24
 1838 0a88 8185      		ldd r24,Z+9
 1839 0a8a 8071      		andi r24,lo8(16)
 1840 0a8c 8823      		tst r24
 1841 0a8e 01F0      		breq .L92
 1842               		.loc 2 531 0 is_stmt 0 discriminator 1
 1843 0a90 80E8      		ldi r24,lo8(-128)
 1844 0a92 90E0      		ldi r25,0
 1845 0a94 00C0      		rjmp .L93
 1846               	.L92:
 1847               		.loc 2 531 0 discriminator 2
 1848 0a96 80E0      		ldi r24,0
 1849 0a98 90E0      		ldi r25,0
 1850               	.L93:
 1851               		.loc 2 531 0 discriminator 4
 1852 0a9a 822B      		or r24,r18
 1853 0a9c 932B      		or r25,r19
 1854 0a9e 9A87      		std Y+10,r25
 1855 0aa0 8987      		std Y+9,r24
 532:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_ADDR == header->nwkDstAddr) ? NWK_IND_OPT_BROADCAST : 0;
 1856               		.loc 2 532 0 is_stmt 1 discriminator 4
 1857 0aa2 2985      		ldd r18,Y+9
 1858 0aa4 3A85      		ldd r19,Y+10
 1859 0aa6 8981      		ldd r24,Y+1
 1860 0aa8 9A81      		ldd r25,Y+2
 1861 0aaa FC01      		movw r30,r24
 1862 0aac 8585      		ldd r24,Z+13
 1863 0aae 9685      		ldd r25,Z+14
 1864 0ab0 0196      		adiw r24,1
 1865 0ab2 01F4      		brne .L94
 1866               		.loc 2 532 0 is_stmt 0 discriminator 1
 1867 0ab4 84E0      		ldi r24,lo8(4)
 1868 0ab6 90E0      		ldi r25,0
 1869 0ab8 00C0      		rjmp .L95
 1870               	.L94:
 1871               		.loc 2 532 0 discriminator 2
 1872 0aba 80E0      		ldi r24,0
 1873 0abc 90E0      		ldi r25,0
 1874               	.L95:
 1875               		.loc 2 532 0 discriminator 4
 1876 0abe 822B      		or r24,r18
 1877 0ac0 932B      		or r25,r19
 1878 0ac2 9A87      		std Y+10,r25
 1879 0ac4 8987      		std Y+9,r24
 533:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (header->nwkSrcAddr == header->macSrcAddr) ? NWK_IND_OPT_LOCAL : 0;
 1880               		.loc 2 533 0 is_stmt 1 discriminator 4
 1881 0ac6 2985      		ldd r18,Y+9
 1882 0ac8 3A85      		ldd r19,Y+10
 1883 0aca 8981      		ldd r24,Y+1
 1884 0acc 9A81      		ldd r25,Y+2
 1885 0ace FC01      		movw r30,r24
 1886 0ad0 4385      		ldd r20,Z+11
 1887 0ad2 5485      		ldd r21,Z+12
 1888 0ad4 8981      		ldd r24,Y+1
 1889 0ad6 9A81      		ldd r25,Y+2
 1890 0ad8 FC01      		movw r30,r24
 1891 0ada 8781      		ldd r24,Z+7
 1892 0adc 9085      		ldd r25,Z+8
 1893 0ade 4817      		cp r20,r24
 1894 0ae0 5907      		cpc r21,r25
 1895 0ae2 01F4      		brne .L96
 1896               		.loc 2 533 0 is_stmt 0 discriminator 1
 1897 0ae4 88E0      		ldi r24,lo8(8)
 1898 0ae6 90E0      		ldi r25,0
 1899 0ae8 00C0      		rjmp .L97
 1900               	.L96:
 1901               		.loc 2 533 0 discriminator 2
 1902 0aea 80E0      		ldi r24,0
 1903 0aec 90E0      		ldi r25,0
 1904               	.L97:
 1905               		.loc 2 533 0 discriminator 4
 1906 0aee 822B      		or r24,r18
 1907 0af0 932B      		or r25,r19
 1908 0af2 9A87      		std Y+10,r25
 1909 0af4 8987      		std Y+9,r24
 534:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	|= (NWK_BROADCAST_PANID == header->macDstPanId) ? NWK_IND_OPT_BROADCAST_PAN_ID : 0;
 1910               		.loc 2 534 0 is_stmt 1 discriminator 4
 1911 0af6 2985      		ldd r18,Y+9
 1912 0af8 3A85      		ldd r19,Y+10
 1913 0afa 8981      		ldd r24,Y+1
 1914 0afc 9A81      		ldd r25,Y+2
 1915 0afe FC01      		movw r30,r24
 1916 0b00 8381      		ldd r24,Z+3
 1917 0b02 9481      		ldd r25,Z+4
 1918 0b04 0196      		adiw r24,1
 1919 0b06 01F4      		brne .L98
 1920               		.loc 2 534 0 is_stmt 0 discriminator 1
 1921 0b08 80E1      		ldi r24,lo8(16)
 1922 0b0a 90E0      		ldi r25,0
 1923 0b0c 00C0      		rjmp .L99
 1924               	.L98:
 1925               		.loc 2 534 0 discriminator 2
 1926 0b0e 80E0      		ldi r24,0
 1927 0b10 90E0      		ldi r25,0
 1928               	.L99:
 1929               		.loc 2 534 0 discriminator 4
 1930 0b12 822B      		or r24,r18
 1931 0b14 932B      		or r25,r19
 1932 0b16 9A87      		std Y+10,r25
 1933 0b18 8987      		std Y+9,r24
 535:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 536:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 1934               		.loc 2 536 0 is_stmt 1 discriminator 4
 1935 0b1a 8981      		ldd r24,Y+1
 1936 0b1c 9A81      		ldd r25,Y+2
 1937 0b1e FC01      		movw r30,r24
 1938 0b20 8785      		ldd r24,Z+15
 1939 0b22 8295      		swap r24
 1940 0b24 8F70      		andi r24,lo8(15)
 1941 0b26 882F      		mov r24,r24
 1942 0b28 90E0      		ldi r25,0
 1943 0b2a 0396      		adiw r24,3
 1944 0b2c 880F      		lsl r24
 1945 0b2e 991F      		rol r25
 1946 0b30 8050      		subi r24,lo8(-(nwkIb))
 1947 0b32 9040      		sbci r25,hi8(-(nwkIb))
 1948 0b34 FC01      		movw r30,r24
 1949 0b36 2081      		ld r18,Z
 1950 0b38 3181      		ldd r19,Z+1
 1951 0b3a CE01      		movw r24,r28
 1952 0b3c 0396      		adiw r24,3
 1953 0b3e F901      		movw r30,r18
 1954 0b40 0995      		icall
 1955               	.L100:
 1956               	/* epilogue start */
 537:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 1957               		.loc 2 537 0 discriminator 1
 1958 0b42 6196      		adiw r28,17
 1959 0b44 0FB6      		in __tmp_reg__,__SREG__
 1960 0b46 F894      		cli
 1961 0b48 DEBF      		out __SP_H__,r29
 1962 0b4a 0FBE      		out __SREG__,__tmp_reg__
 1963 0b4c CDBF      		out __SP_L__,r28
 1964 0b4e DF91      		pop r29
 1965 0b50 CF91      		pop r28
 1966 0b52 0895      		ret
 1967               		.cfi_endproc
 1968               	.LFE74:
 1971               	nwkRxIndicateBeaconFrame:
 1972               	.LFB75:
 538:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 539:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 540:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 541:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateBeaconFrame(NwkFrame_t *frame)
 542:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 1973               		.loc 2 542 0
 1974               		.cfi_startproc
 1975 0b54 CF93      		push r28
 1976               	.LCFI40:
 1977               		.cfi_def_cfa_offset 3
 1978               		.cfi_offset 28, -2
 1979 0b56 DF93      		push r29
 1980               	.LCFI41:
 1981               		.cfi_def_cfa_offset 4
 1982               		.cfi_offset 29, -3
 1983 0b58 CDB7      		in r28,__SP_L__
 1984 0b5a DEB7      		in r29,__SP_H__
 1985               	.LCFI42:
 1986               		.cfi_def_cfa_register 28
 1987 0b5c 6197      		sbiw r28,17
 1988               	.LCFI43:
 1989               		.cfi_def_cfa_offset 21
 1990 0b5e 0FB6      		in __tmp_reg__,__SREG__
 1991 0b60 F894      		cli
 1992 0b62 DEBF      		out __SP_H__,r29
 1993 0b64 0FBE      		out __SREG__,__tmp_reg__
 1994 0b66 CDBF      		out __SP_L__,r28
 1995               	/* prologue: function */
 1996               	/* frame size = 17 */
 1997               	/* stack size = 19 */
 1998               	.L__stack_usage = 19
 1999 0b68 998B      		std Y+17,r25
 2000 0b6a 888B      		std Y+16,r24
 543:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameHeader_t *header = &frame->header;
 2001               		.loc 2 543 0
 2002 0b6c 8889      		ldd r24,Y+16
 2003 0b6e 9989      		ldd r25,Y+17
 2004 0b70 0296      		adiw r24,2
 2005 0b72 9A83      		std Y+2,r25
 2006 0b74 8983      		std Y+1,r24
 544:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 545:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 546:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2007               		.loc 2 546 0
 2008 0b76 8889      		ldd r24,Y+16
 2009 0b78 9989      		ldd r25,Y+17
 2010 0b7a 24E2      		ldi r18,lo8(36)
 2011 0b7c FC01      		movw r30,r24
 2012 0b7e 2083      		st Z,r18
 547:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 548:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[0]) {
 2013               		.loc 2 548 0
 2014 0b80 8091 0000 		lds r24,nwkIb+6
 2015 0b84 9091 0000 		lds r25,nwkIb+6+1
 2016 0b88 892B      		or r24,r25
 2017 0b8a 01F4      		brne .L102
 549:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2018               		.loc 2 549 0
 2019 0b8c 80E0      		ldi r24,0
 2020 0b8e 00C0      		rjmp .L104
 2021               	.L102:
 550:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 551:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 552:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = frame->beacon.macSrcAddr;
 2022               		.loc 2 552 0
 2023 0b90 8889      		ldd r24,Y+16
 2024 0b92 9989      		ldd r25,Y+17
 2025 0b94 FC01      		movw r30,r24
 2026 0b96 8781      		ldd r24,Z+7
 2027 0b98 9085      		ldd r25,Z+8
 2028 0b9a 9C83      		std Y+4,r25
 2029 0b9c 8B83      		std Y+3,r24
 553:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = frame->beacon.macSrcAddr;
 2030               		.loc 2 553 0
 2031 0b9e 8889      		ldd r24,Y+16
 2032 0ba0 9989      		ldd r25,Y+17
 2033 0ba2 FC01      		movw r30,r24
 2034 0ba4 8781      		ldd r24,Z+7
 2035 0ba6 9085      		ldd r25,Z+8
 2036 0ba8 9E83      		std Y+6,r25
 2037 0baa 8D83      		std Y+5,r24
 554:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2038               		.loc 2 554 0
 2039 0bac 1F82      		std Y+7,__zero_reg__
 555:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2040               		.loc 2 555 0
 2041 0bae 1886      		std Y+8,__zero_reg__
 556:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = frame->payload;
 2042               		.loc 2 556 0
 2043 0bb0 8889      		ldd r24,Y+16
 2044 0bb2 9989      		ldd r25,Y+17
 2045 0bb4 8F57      		subi r24,127
 2046 0bb6 9F4F      		sbci r25,-1
 2047 0bb8 FC01      		movw r30,r24
 2048 0bba 8081      		ld r24,Z
 2049 0bbc 9181      		ldd r25,Z+1
 2050 0bbe 9C87      		std Y+12,r25
 2051 0bc0 8B87      		std Y+11,r24
 557:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2052               		.loc 2 557 0
 2053 0bc2 8889      		ldd r24,Y+16
 2054 0bc4 9989      		ldd r25,Y+17
 2055 0bc6 0E94 0000 		call nwkFramePayloadSize
 2056 0bca 8D87      		std Y+13,r24
 558:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2057               		.loc 2 558 0
 2058 0bcc 8889      		ldd r24,Y+16
 2059 0bce 9989      		ldd r25,Y+17
 2060 0bd0 8D57      		subi r24,125
 2061 0bd2 9F4F      		sbci r25,-1
 2062 0bd4 FC01      		movw r30,r24
 2063 0bd6 8081      		ld r24,Z
 2064 0bd8 8E87      		std Y+14,r24
 559:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2065               		.loc 2 559 0
 2066 0bda 8889      		ldd r24,Y+16
 2067 0bdc 9989      		ldd r25,Y+17
 2068 0bde 8C57      		subi r24,124
 2069 0be0 9F4F      		sbci r25,-1
 2070 0be2 FC01      		movw r30,r24
 2071 0be4 8081      		ld r24,Z
 2072 0be6 8F87      		std Y+15,r24
 560:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 561:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_BEACON;
 2073               		.loc 2 561 0
 2074 0be8 80E8      		ldi r24,lo8(-128)
 2075 0bea 90E0      		ldi r25,0
 2076 0bec 9A87      		std Y+10,r25
 2077 0bee 8987      		std Y+9,r24
 562:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 563:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 2078               		.loc 2 563 0
 2079 0bf0 8981      		ldd r24,Y+1
 2080 0bf2 9A81      		ldd r25,Y+2
 2081 0bf4 FC01      		movw r30,r24
 2082 0bf6 8785      		ldd r24,Z+15
 2083 0bf8 8295      		swap r24
 2084 0bfa 8F70      		andi r24,lo8(15)
 2085 0bfc 882F      		mov r24,r24
 2086 0bfe 90E0      		ldi r25,0
 2087 0c00 0396      		adiw r24,3
 2088 0c02 880F      		lsl r24
 2089 0c04 991F      		rol r25
 2090 0c06 8050      		subi r24,lo8(-(nwkIb))
 2091 0c08 9040      		sbci r25,hi8(-(nwkIb))
 2092 0c0a FC01      		movw r30,r24
 2093 0c0c 2081      		ld r18,Z
 2094 0c0e 3181      		ldd r19,Z+1
 2095 0c10 CE01      		movw r24,r28
 2096 0c12 0396      		adiw r24,3
 2097 0c14 F901      		movw r30,r18
 2098 0c16 0995      		icall
 2099               	.L104:
 2100               	/* epilogue start */
 564:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2101               		.loc 2 564 0 discriminator 1
 2102 0c18 6196      		adiw r28,17
 2103 0c1a 0FB6      		in __tmp_reg__,__SREG__
 2104 0c1c F894      		cli
 2105 0c1e DEBF      		out __SP_H__,r29
 2106 0c20 0FBE      		out __SREG__,__tmp_reg__
 2107 0c22 CDBF      		out __SP_L__,r28
 2108 0c24 DF91      		pop r29
 2109 0c26 CF91      		pop r28
 2110 0c28 0895      		ret
 2111               		.cfi_endproc
 2112               	.LFE75:
 2115               	nwkRxIndicateLLBeaconFrame:
 2116               	.LFB76:
 565:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 566:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 567:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 568:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 569:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLBeaconFrame(NwkFrame_t *frame)
 570:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2117               		.loc 2 570 0
 2118               		.cfi_startproc
 2119 0c2a CF93      		push r28
 2120               	.LCFI44:
 2121               		.cfi_def_cfa_offset 3
 2122               		.cfi_offset 28, -2
 2123 0c2c DF93      		push r29
 2124               	.LCFI45:
 2125               		.cfi_def_cfa_offset 4
 2126               		.cfi_offset 29, -3
 2127 0c2e CDB7      		in r28,__SP_L__
 2128 0c30 DEB7      		in r29,__SP_H__
 2129               	.LCFI46:
 2130               		.cfi_def_cfa_register 28
 2131 0c32 2F97      		sbiw r28,15
 2132               	.LCFI47:
 2133               		.cfi_def_cfa_offset 19
 2134 0c34 0FB6      		in __tmp_reg__,__SREG__
 2135 0c36 F894      		cli
 2136 0c38 DEBF      		out __SP_H__,r29
 2137 0c3a 0FBE      		out __SREG__,__tmp_reg__
 2138 0c3c CDBF      		out __SP_L__,r28
 2139               	/* prologue: function */
 2140               	/* frame size = 15 */
 2141               	/* stack size = 17 */
 2142               	.L__stack_usage = 17
 2143 0c3e 9F87      		std Y+15,r25
 2144 0c40 8E87      		std Y+14,r24
 571:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 572:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 573:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2145               		.loc 2 573 0
 2146 0c42 8E85      		ldd r24,Y+14
 2147 0c44 9F85      		ldd r25,Y+15
 2148 0c46 24E2      		ldi r18,lo8(36)
 2149 0c48 FC01      		movw r30,r24
 2150 0c4a 2083      		st Z,r18
 574:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 575:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_BEACON_ENDPOINT]) {
 2151               		.loc 2 575 0
 2152 0c4c 8091 0000 		lds r24,nwkIb+6
 2153 0c50 9091 0000 		lds r25,nwkIb+6+1
 2154 0c54 892B      		or r24,r25
 2155 0c56 01F4      		brne .L106
 576:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2156               		.loc 2 576 0
 2157 0c58 80E0      		ldi r24,0
 2158 0c5a 00C0      		rjmp .L108
 2159               	.L106:
 577:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 578:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Beacon as they are in standart 802.15.4
 579:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 580:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 581:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2160               		.loc 2 581 0
 2161 0c5c 1A82      		std Y+2,__zero_reg__
 2162 0c5e 1982      		std Y+1,__zero_reg__
 582:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2163               		.loc 2 582 0
 2164 0c60 1C82      		std Y+4,__zero_reg__
 2165 0c62 1B82      		std Y+3,__zero_reg__
 583:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2166               		.loc 2 583 0
 2167 0c64 1D82      		std Y+5,__zero_reg__
 584:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2168               		.loc 2 584 0
 2169 0c66 1E82      		std Y+6,__zero_reg__
 585:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 586:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->LLbeacon;
 2170               		.loc 2 586 0
 2171 0c68 8E85      		ldd r24,Y+14
 2172 0c6a 9F85      		ldd r25,Y+15
 2173 0c6c 0296      		adiw r24,2
 2174 0c6e 9A87      		std Y+10,r25
 2175 0c70 8987      		std Y+9,r24
 587:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2176               		.loc 2 587 0
 2177 0c72 8E85      		ldd r24,Y+14
 2178 0c74 9F85      		ldd r25,Y+15
 2179 0c76 0E94 0000 		call nwkFramePayloadSize
 2180 0c7a 8B87      		std Y+11,r24
 588:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2181               		.loc 2 588 0
 2182 0c7c 8E85      		ldd r24,Y+14
 2183 0c7e 9F85      		ldd r25,Y+15
 2184 0c80 8D57      		subi r24,125
 2185 0c82 9F4F      		sbci r25,-1
 2186 0c84 FC01      		movw r30,r24
 2187 0c86 8081      		ld r24,Z
 2188 0c88 8C87      		std Y+12,r24
 589:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2189               		.loc 2 589 0
 2190 0c8a 8E85      		ldd r24,Y+14
 2191 0c8c 9F85      		ldd r25,Y+15
 2192 0c8e 8C57      		subi r24,124
 2193 0c90 9F4F      		sbci r25,-1
 2194 0c92 FC01      		movw r30,r24
 2195 0c94 8081      		ld r24,Z
 2196 0c96 8D87      		std Y+13,r24
 590:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 591:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_BEACON;
 2197               		.loc 2 591 0
 2198 0c98 80E0      		ldi r24,0
 2199 0c9a 91E0      		ldi r25,lo8(1)
 2200 0c9c 9887      		std Y+8,r25
 2201 0c9e 8F83      		std Y+7,r24
 592:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 593:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 594:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_BEACON_ENDPOINT](&ind);
 2202               		.loc 2 594 0
 2203 0ca0 2091 0000 		lds r18,nwkIb+6
 2204 0ca4 3091 0000 		lds r19,nwkIb+6+1
 2205 0ca8 CE01      		movw r24,r28
 2206 0caa 0196      		adiw r24,1
 2207 0cac F901      		movw r30,r18
 2208 0cae 0995      		icall
 2209               	.L108:
 2210               	/* epilogue start */
 595:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2211               		.loc 2 595 0 discriminator 1
 2212 0cb0 2F96      		adiw r28,15
 2213 0cb2 0FB6      		in __tmp_reg__,__SREG__
 2214 0cb4 F894      		cli
 2215 0cb6 DEBF      		out __SP_H__,r29
 2216 0cb8 0FBE      		out __SREG__,__tmp_reg__
 2217 0cba CDBF      		out __SP_L__,r28
 2218 0cbc DF91      		pop r29
 2219 0cbe CF91      		pop r28
 2220 0cc0 0895      		ret
 2221               		.cfi_endproc
 2222               	.LFE76:
 2225               	nwkRxIndicateLLCommandFrame:
 2226               	.LFB77:
 596:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 597:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static bool nwkRxIndicateLLCommandFrame(NwkFrame_t *frame)
 598:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2227               		.loc 2 598 0
 2228               		.cfi_startproc
 2229 0cc2 CF93      		push r28
 2230               	.LCFI48:
 2231               		.cfi_def_cfa_offset 3
 2232               		.cfi_offset 28, -2
 2233 0cc4 DF93      		push r29
 2234               	.LCFI49:
 2235               		.cfi_def_cfa_offset 4
 2236               		.cfi_offset 29, -3
 2237 0cc6 CDB7      		in r28,__SP_L__
 2238 0cc8 DEB7      		in r29,__SP_H__
 2239               	.LCFI50:
 2240               		.cfi_def_cfa_register 28
 2241 0cca 6197      		sbiw r28,17
 2242               	.LCFI51:
 2243               		.cfi_def_cfa_offset 21
 2244 0ccc 0FB6      		in __tmp_reg__,__SREG__
 2245 0cce F894      		cli
 2246 0cd0 DEBF      		out __SP_H__,r29
 2247 0cd2 0FBE      		out __SREG__,__tmp_reg__
 2248 0cd4 CDBF      		out __SP_L__,r28
 2249               	/* prologue: function */
 2250               	/* frame size = 17 */
 2251               	/* stack size = 19 */
 2252               	.L__stack_usage = 19
 2253 0cd6 998B      		std Y+17,r25
 2254 0cd8 888B      		std Y+16,r24
 599:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrameGeneralHeaderLLDN_t *header = &frame->LLgeneral;
 2255               		.loc 2 599 0
 2256 0cda 8889      		ldd r24,Y+16
 2257 0cdc 9989      		ldd r25,Y+17
 2258 0cde 0296      		adiw r24,2
 2259 0ce0 9A83      		std Y+2,r25
 2260 0ce2 8983      		std Y+1,r24
 600:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NWK_DataInd_t ind;
 601:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 602:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2261               		.loc 2 602 0
 2262 0ce4 8889      		ldd r24,Y+16
 2263 0ce6 9989      		ldd r25,Y+17
 2264 0ce8 24E2      		ldi r18,lo8(36)
 2265 0cea FC01      		movw r30,r24
 2266 0cec 2083      		st Z,r18
 603:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 604:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NULL == nwkIb.endpoint[APP_COMMAND_ENDPOINT]) {
 2267               		.loc 2 604 0
 2268 0cee 8091 0000 		lds r24,nwkIb+12
 2269 0cf2 9091 0000 		lds r25,nwkIb+12+1
 2270 0cf6 892B      		or r24,r25
 2271 0cf8 01F4      		brne .L110
 605:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return false;
 2272               		.loc 2 605 0
 2273 0cfa 80E0      		ldi r24,0
 2274 0cfc 00C0      		rjmp .L112
 2275               	.L110:
 606:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 607:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	
 608:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	/* this informations are not received in a LLDN Command as they are in standart 802.15.4
 609:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 * all data informatino handle must be done by user 
 610:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	 */
 611:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcAddr = 0;
 2276               		.loc 2 611 0
 2277 0cfe 1C82      		std Y+4,__zero_reg__
 2278 0d00 1B82      		std Y+3,__zero_reg__
 612:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstAddr = 0;
 2279               		.loc 2 612 0
 2280 0d02 1E82      		std Y+6,__zero_reg__
 2281 0d04 1D82      		std Y+5,__zero_reg__
 613:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.srcEndpoint = 0;
 2282               		.loc 2 613 0
 2283 0d06 1F82      		std Y+7,__zero_reg__
 614:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.dstEndpoint = 0;
 2284               		.loc 2 614 0
 2285 0d08 1886      		std Y+8,__zero_reg__
 615:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 616:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.data = &frame->data;
 2286               		.loc 2 616 0
 2287 0d0a 8889      		ldd r24,Y+16
 2288 0d0c 9989      		ldd r25,Y+17
 2289 0d0e 0296      		adiw r24,2
 2290 0d10 9C87      		std Y+12,r25
 2291 0d12 8B87      		std Y+11,r24
 617:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.size = nwkFramePayloadSize(frame);
 2292               		.loc 2 617 0
 2293 0d14 8889      		ldd r24,Y+16
 2294 0d16 9989      		ldd r25,Y+17
 2295 0d18 0E94 0000 		call nwkFramePayloadSize
 2296 0d1c 8D87      		std Y+13,r24
 618:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.lqi = frame->rx.lqi;
 2297               		.loc 2 618 0
 2298 0d1e 8889      		ldd r24,Y+16
 2299 0d20 9989      		ldd r25,Y+17
 2300 0d22 8D57      		subi r24,125
 2301 0d24 9F4F      		sbci r25,-1
 2302 0d26 FC01      		movw r30,r24
 2303 0d28 8081      		ld r24,Z
 2304 0d2a 8E87      		std Y+14,r24
 619:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.rssi = frame->rx.rssi;
 2305               		.loc 2 619 0
 2306 0d2c 8889      		ldd r24,Y+16
 2307 0d2e 9989      		ldd r25,Y+17
 2308 0d30 8C57      		subi r24,124
 2309 0d32 9F4F      		sbci r25,-1
 2310 0d34 FC01      		movw r30,r24
 2311 0d36 8081      		ld r24,Z
 2312 0d38 8F87      		std Y+15,r24
 620:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 621:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ind.options	= NWK_IND_OPT_LLDN_MACCOMMAND;
 2313               		.loc 2 621 0
 2314 0d3a 80E0      		ldi r24,0
 2315 0d3c 92E0      		ldi r25,lo8(2)
 2316 0d3e 9A87      		std Y+10,r25
 2317 0d40 8987      		std Y+9,r24
 622:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 623:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	return nwkIb.endpoint[APP_COMMAND_ENDPOINT](&ind);
 2318               		.loc 2 623 0
 2319 0d42 2091 0000 		lds r18,nwkIb+12
 2320 0d46 3091 0000 		lds r19,nwkIb+12+1
 2321 0d4a CE01      		movw r24,r28
 2322 0d4c 0396      		adiw r24,3
 2323 0d4e F901      		movw r30,r18
 2324 0d50 0995      		icall
 2325               	.L112:
 2326               	/* epilogue start */
 624:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2327               		.loc 2 624 0 discriminator 1
 2328 0d52 6196      		adiw r28,17
 2329 0d54 0FB6      		in __tmp_reg__,__SREG__
 2330 0d56 F894      		cli
 2331 0d58 DEBF      		out __SP_H__,r29
 2332 0d5a 0FBE      		out __SREG__,__tmp_reg__
 2333 0d5c CDBF      		out __SP_L__,r28
 2334 0d5e DF91      		pop r29
 2335 0d60 CF91      		pop r28
 2336 0d62 0895      		ret
 2337               		.cfi_endproc
 2338               	.LFE77:
 2341               	nwkRxHandleIndication:
 2342               	.LFB78:
 625:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 626:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 627:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 628:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 629:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** static void nwkRxHandleIndication(NwkFrame_t *frame)
 630:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2343               		.loc 2 630 0
 2344               		.cfi_startproc
 2345 0d64 CF93      		push r28
 2346               	.LCFI52:
 2347               		.cfi_def_cfa_offset 3
 2348               		.cfi_offset 28, -2
 2349 0d66 DF93      		push r29
 2350               	.LCFI53:
 2351               		.cfi_def_cfa_offset 4
 2352               		.cfi_offset 29, -3
 2353 0d68 00D0      		rcall .
 2354 0d6a 1F92      		push __zero_reg__
 2355               	.LCFI54:
 2356               		.cfi_def_cfa_offset 7
 2357 0d6c CDB7      		in r28,__SP_L__
 2358 0d6e DEB7      		in r29,__SP_H__
 2359               	.LCFI55:
 2360               		.cfi_def_cfa_register 28
 2361               	/* prologue: function */
 2362               	/* frame size = 3 */
 2363               	/* stack size = 5 */
 2364               	.L__stack_usage = 5
 2365 0d70 9B83      		std Y+3,r25
 2366 0d72 8A83      		std Y+2,r24
 631:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	bool ack;
 632:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 633:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	nwkRxAckControl = 0;
 2367               		.loc 2 633 0
 2368 0d74 1092 0000 		sts nwkRxAckControl,__zero_reg__
 634:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	ack = nwkRxIndicateDataFrame(frame);
 2369               		.loc 2 634 0
 2370 0d78 8A81      		ldd r24,Y+2
 2371 0d7a 9B81      		ldd r25,Y+3
 2372 0d7c 0E94 0000 		call nwkRxIndicateDataFrame
 2373 0d80 8983      		std Y+1,r24
 635:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 636:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (0 == frame->header.nwkFcf.ackRequest) {
 2374               		.loc 2 636 0
 2375 0d82 8A81      		ldd r24,Y+2
 2376 0d84 9B81      		ldd r25,Y+3
 2377 0d86 FC01      		movw r30,r24
 2378 0d88 8385      		ldd r24,Z+11
 2379 0d8a 8170      		andi r24,lo8(1)
 2380 0d8c 8823      		tst r24
 2381 0d8e 01F4      		brne .L114
 637:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2382               		.loc 2 637 0
 2383 0d90 1982      		std Y+1,__zero_reg__
 2384               	.L114:
 638:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 639:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == frame->header.macDstAddr &&
 2385               		.loc 2 640 0
 2386 0d92 8A81      		ldd r24,Y+2
 2387 0d94 9B81      		ldd r25,Y+3
 2388 0d96 FC01      		movw r30,r24
 2389 0d98 8781      		ldd r24,Z+7
 2390 0d9a 9085      		ldd r25,Z+8
 2391 0d9c 0196      		adiw r24,1
 2392 0d9e 01F4      		brne .L115
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2393               		.loc 2 641 0 discriminator 1
 2394 0da0 2091 0000 		lds r18,nwkIb
 2395 0da4 3091 0000 		lds r19,nwkIb+1
 2396 0da8 8A81      		ldd r24,Y+2
 2397 0daa 9B81      		ldd r25,Y+3
 2398 0dac FC01      		movw r30,r24
 2399 0dae 8785      		ldd r24,Z+15
 2400 0db0 9089      		ldd r25,Z+16
 640:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2401               		.loc 2 640 0 discriminator 1
 2402 0db2 2817      		cp r18,r24
 2403 0db4 3907      		cpc r19,r25
 2404 0db6 01F4      		brne .L115
 642:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			0 == frame->header.nwkFcf.multicast) {
 2405               		.loc 2 642 0
 2406 0db8 8A81      		ldd r24,Y+2
 2407 0dba 9B81      		ldd r25,Y+3
 2408 0dbc FC01      		movw r30,r24
 2409 0dbe 8385      		ldd r24,Z+11
 2410 0dc0 8870      		andi r24,lo8(8)
 641:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkIb.addr == frame->header.nwkDstAddr &&
 2411               		.loc 2 641 0
 2412 0dc2 8823      		tst r24
 2413 0dc4 01F4      		brne .L115
 643:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = true;
 2414               		.loc 2 643 0
 2415 0dc6 81E0      		ldi r24,lo8(1)
 2416 0dc8 8983      		std Y+1,r24
 2417               	.L115:
 644:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 645:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 646:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_PANID == frame->header.macDstPanId) {
 2418               		.loc 2 646 0
 2419 0dca 8A81      		ldd r24,Y+2
 2420 0dcc 9B81      		ldd r25,Y+3
 2421 0dce FC01      		movw r30,r24
 2422 0dd0 8581      		ldd r24,Z+5
 2423 0dd2 9681      		ldd r25,Z+6
 2424 0dd4 0196      		adiw r24,1
 2425 0dd6 01F4      		brne .L116
 647:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2426               		.loc 2 647 0
 2427 0dd8 1982      		std Y+1,__zero_reg__
 2428               	.L116:
 648:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 649:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 650:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (NWK_BROADCAST_ADDR == nwkIb.addr) {
 2429               		.loc 2 650 0
 2430 0dda 8091 0000 		lds r24,nwkIb
 2431 0dde 9091 0000 		lds r25,nwkIb+1
 2432 0de2 0196      		adiw r24,1
 2433 0de4 01F4      		brne .L117
 651:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		ack = false;
 2434               		.loc 2 651 0
 2435 0de6 1982      		std Y+1,__zero_reg__
 2436               	.L117:
 652:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 653:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 654:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	if (ack) {
 2437               		.loc 2 654 0
 2438 0de8 8981      		ldd r24,Y+1
 2439 0dea 8823      		tst r24
 2440 0dec 01F0      		breq .L118
 655:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		nwkRxSendAck(frame);
 2441               		.loc 2 655 0
 2442 0dee 8A81      		ldd r24,Y+2
 2443 0df0 9B81      		ldd r25,Y+3
 2444 0df2 0E94 0000 		call nwkRxSendAck
 2445               	.L118:
 656:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 657:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 658:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	frame->state = NWK_RX_STATE_FINISH;
 2446               		.loc 2 658 0
 2447 0df6 8A81      		ldd r24,Y+2
 2448 0df8 9B81      		ldd r25,Y+3
 2449 0dfa 24E2      		ldi r18,lo8(36)
 2450 0dfc FC01      		movw r30,r24
 2451 0dfe 2083      		st Z,r18
 659:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2452               		.loc 2 659 0
 2453 0e00 0000      		nop
 2454               	/* epilogue start */
 2455 0e02 0F90      		pop __tmp_reg__
 2456 0e04 0F90      		pop __tmp_reg__
 2457 0e06 0F90      		pop __tmp_reg__
 2458 0e08 DF91      		pop r29
 2459 0e0a CF91      		pop r28
 2460 0e0c 0895      		ret
 2461               		.cfi_endproc
 2462               	.LFE78:
 2464               	.global	nwkRxTaskHandler
 2466               	nwkRxTaskHandler:
 2467               	.LFB79:
 660:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 661:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** /*************************************************************************//**
 662:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *  @brief Rx Module task handler
 663:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** *****************************************************************************/
 664:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** void nwkRxTaskHandler(void)
 665:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** {
 2468               		.loc 2 665 0
 2469               		.cfi_startproc
 2470 0e0e CF93      		push r28
 2471               	.LCFI56:
 2472               		.cfi_def_cfa_offset 3
 2473               		.cfi_offset 28, -2
 2474 0e10 DF93      		push r29
 2475               	.LCFI57:
 2476               		.cfi_def_cfa_offset 4
 2477               		.cfi_offset 29, -3
 2478 0e12 00D0      		rcall .
 2479               	.LCFI58:
 2480               		.cfi_def_cfa_offset 6
 2481 0e14 CDB7      		in r28,__SP_L__
 2482 0e16 DEB7      		in r29,__SP_H__
 2483               	.LCFI59:
 2484               		.cfi_def_cfa_register 28
 2485               	/* prologue: function */
 2486               	/* frame size = 2 */
 2487               	/* stack size = 4 */
 2488               	.L__stack_usage = 4
 666:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	NwkFrame_t *frame = NULL;
 2489               		.loc 2 666 0
 2490 0e18 1A82      		std Y+2,__zero_reg__
 2491 0e1a 1982      		std Y+1,__zero_reg__
 667:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 2492               		.loc 2 668 0
 2493 0e1c 00C0      		rjmp .L120
 2494               	.L128:
 669:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2495               		.loc 2 669 0
 2496 0e1e 8981      		ldd r24,Y+1
 2497 0e20 9A81      		ldd r25,Y+2
 2498 0e22 FC01      		movw r30,r24
 2499 0e24 8081      		ld r24,Z
 2500 0e26 882F      		mov r24,r24
 2501 0e28 90E0      		ldi r25,0
 2502 0e2a 8432      		cpi r24,36
 2503 0e2c 9105      		cpc r25,__zero_reg__
 2504 0e2e 01F0      		breq .L121
 2505 0e30 8532      		cpi r24,37
 2506 0e32 9105      		cpc r25,__zero_reg__
 2507 0e34 04F4      		brge .L122
 2508 0e36 8032      		cpi r24,32
 2509 0e38 9105      		cpc r25,__zero_reg__
 2510 0e3a 01F0      		breq .L123
 2511 0e3c 8297      		sbiw r24,34
 2512 0e3e 01F0      		breq .L124
 2513 0e40 00C0      		rjmp .L120
 2514               	.L122:
 2515 0e42 8632      		cpi r24,38
 2516 0e44 9105      		cpc r25,__zero_reg__
 2517 0e46 01F0      		breq .L125
 2518 0e48 8632      		cpi r24,38
 2519 0e4a 9105      		cpc r25,__zero_reg__
 2520 0e4c 04F0      		brlt .L126
 2521 0e4e 8797      		sbiw r24,39
 2522 0e50 01F0      		breq .L127
 2523 0e52 00C0      		rjmp .L120
 2524               	.L123:
 670:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_RECEIVED:
 671:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 672:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleReceivedFrame(frame);
 2525               		.loc 2 672 0
 2526 0e54 8981      		ldd r24,Y+1
 2527 0e56 9A81      		ldd r25,Y+2
 2528 0e58 0E94 0000 		call nwkRxHandleReceivedFrame
 673:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 674:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2529               		.loc 2 674 0
 2530 0e5c 00C0      		rjmp .L120
 2531               	.L124:
 675:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 676:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_SECURITY
 677:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_DECRYPT:
 678:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 679:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkSecurityProcess(frame, false);
 680:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 681:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 682:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 683:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 684:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_INDICATE:
 685:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 686:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxHandleIndication(frame);
 2532               		.loc 2 686 0
 2533 0e5e 8981      		ldd r24,Y+1
 2534 0e60 9A81      		ldd r25,Y+2
 2535 0e62 0E94 0000 		call nwkRxHandleIndication
 687:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 688:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2536               		.loc 2 688 0
 2537 0e66 00C0      		rjmp .L120
 2538               	.L121:
 689:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 690:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #ifdef NWK_ENABLE_ROUTING
 691:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_ROUTE:
 692:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 693:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRouteFrame(frame);
 694:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 695:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 696:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** #endif
 697:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 698:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_FINISH:
 699:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 700:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkFrameFree(frame);
 2539               		.loc 2 700 0
 2540 0e68 8981      		ldd r24,Y+1
 2541 0e6a 9A81      		ldd r25,Y+2
 2542 0e6c 0E94 0000 		call nwkFrameFree
 701:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 702:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2543               		.loc 2 702 0
 2544 0e70 00C0      		rjmp .L120
 2545               	.L126:
 703:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 
 704:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_BEACON:
 705:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 706:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateBeaconFrame(frame);
 2546               		.loc 2 706 0
 2547 0e72 8981      		ldd r24,Y+1
 2548 0e74 9A81      		ldd r25,Y+2
 2549 0e76 0E94 0000 		call nwkRxIndicateBeaconFrame
 707:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 708:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2550               		.loc 2 708 0
 2551 0e7a 00C0      		rjmp .L120
 2552               	.L125:
 709:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 710:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		
 711:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLBEACON:
 712:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 713:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLBeaconFrame(frame);
 2553               		.loc 2 713 0
 2554 0e7c 8981      		ldd r24,Y+1
 2555 0e7e 9A81      		ldd r25,Y+2
 2556 0e80 0E94 0000 		call nwkRxIndicateLLBeaconFrame
 714:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 715:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2557               		.loc 2 715 0
 2558 0e84 00C0      		rjmp .L120
 2559               	.L127:
 716:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		case NWK_RX_STATE_LLCOMMAND:
 717:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		{
 718:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 			nwkRxIndicateLLCommandFrame(frame);
 2560               		.loc 2 718 0
 2561 0e86 8981      		ldd r24,Y+1
 2562 0e88 9A81      		ldd r25,Y+2
 2563 0e8a 0E94 0000 		call nwkRxIndicateLLCommandFrame
 719:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 720:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		break;
 2564               		.loc 2 720 0
 2565 0e8e 0000      		nop
 2566               	.L120:
 668:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		switch (frame->state) {
 2567               		.loc 2 668 0
 2568 0e90 8981      		ldd r24,Y+1
 2569 0e92 9A81      		ldd r25,Y+2
 2570 0e94 0E94 0000 		call nwkFrameNext
 2571 0e98 9A83      		std Y+2,r25
 2572 0e9a 8983      		std Y+1,r24
 2573 0e9c 8981      		ldd r24,Y+1
 2574 0e9e 9A81      		ldd r25,Y+2
 2575 0ea0 892B      		or r24,r25
 2576 0ea2 01F0      		breq .+2
 2577 0ea4 00C0      		rjmp .L128
 721:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 		}
 722:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** 	}
 723:../../../stack/LwMesh/TDMA/nwk/src/nwkRx.c **** }
 2578               		.loc 2 723 0
 2579 0ea6 0000      		nop
 2580               	/* epilogue start */
 2581 0ea8 0F90      		pop __tmp_reg__
 2582 0eaa 0F90      		pop __tmp_reg__
 2583 0eac DF91      		pop r29
 2584 0eae CF91      		pop r28
 2585 0eb0 0895      		ret
 2586               		.cfi_endproc
 2587               	.LFE79:
 2589               	.Letext0:
 2590               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 2591               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 2592               		.file 5 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 2593               		.file 6 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 2594               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 2595               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkRx.c
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:7      *ABS*:00000001 __zero_reg__
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:12     .text:00000000 nwkFramePayloadSize
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:74     .bss.nwkRxDuplicateRejectionTable:00000000 nwkRxDuplicateRejectionTable
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:79     .bss.nwkRxAckControl:00000000 nwkRxAckControl
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:84     .bss.nwkRxDuplicateRejectionTimer:00000000 nwkRxDuplicateRejectionTimer
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:89     .text:00000044 nwkRxInit
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:716    .text:000003e0 nwkRxDuplicateRejectionTimerHandler
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:1114   .text:00000622 nwkRxSeriveDataInd
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:176    .text:000000b6 PHY_DataInd
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:506    .text:000002b6 nwkRxSendAck
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:678    .text:000003c4 NWK_SetAckControl
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:831    .text:0000047a nwkRxRejectDuplicate
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:1182   .text:0000066c nwkRxHandleReceivedFrame
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:1632   .text:00000946 nwkRxIndicateDataFrame
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:1971   .text:00000b54 nwkRxIndicateBeaconFrame
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:2115   .text:00000c2a nwkRxIndicateLLBeaconFrame
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:2225   .text:00000cc2 nwkRxIndicateLLCommandFrame
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:2341   .text:00000d64 nwkRxHandleIndication
C:\Users\guilh\AppData\Local\Temp\ccNeqzi1.s:2466   .text:00000e0e nwkRxTaskHandler

UNDEFINED SYMBOLS
NWK_OpenEndpoint
nwkFrameAlloc
nwkFrameAlloc_LLDN
memcpy
nwkFrameCommandInit
nwkTxFrame
SYS_TimerStart
nwkTxAckReceived
nwkIb
NWK_GroupIsMember
nwkTxBroadcastFrame
nwkFrameFree
nwkFrameNext
__do_clear_bss
