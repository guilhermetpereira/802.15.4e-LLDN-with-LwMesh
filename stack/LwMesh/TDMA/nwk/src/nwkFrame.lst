   1               		.file	"nwkFrame.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	n,1,1
  12               		.comm	tTS,4,1
  13               		.comm	macLLDNnumTimeSlots,2,1
  14               		.comm	macLLDNnumUplinkTS,2,1
  15               		.comm	macLLDNRetransmitTS,2,1
  16               		.section	.bss.nwkFrameFrames,"aw",@nobits
  19               	nwkFrameFrames:
  20 0000 0000 0000 		.zero	2740
  20      0000 0000 
  20      0000 0000 
  20      0000 0000 
  20      0000 0000 
  21               		.text
  22               	.global	nwkFrameInit
  24               	nwkFrameInit:
  25               	.LFB66:
  26               		.file 1 "../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * \file nwkFrame.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * \brief Frame buffers management implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include "sysConfig.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include "nwk.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include "nwkFrame.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*- Types ------------------------------------------------------------------*/
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** enum {
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	NWK_FRAME_STATE_FREE = 0x00,
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** };
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*- Variables --------------------------------------------------------------*/
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** static NwkFrame_t nwkFrameFrames[NWK_BUFFERS_AMOUNT];
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*- Implementations --------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Initializes the Frame module
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** void nwkFrameInit(void)
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
  27               		.loc 1 72 0
  28               		.cfi_startproc
  29 0000 CF93      		push r28
  30               	.LCFI0:
  31               		.cfi_def_cfa_offset 3
  32               		.cfi_offset 28, -2
  33 0002 DF93      		push r29
  34               	.LCFI1:
  35               		.cfi_def_cfa_offset 4
  36               		.cfi_offset 29, -3
  37 0004 1F92      		push __zero_reg__
  38               	.LCFI2:
  39               		.cfi_def_cfa_offset 5
  40 0006 CDB7      		in r28,__SP_L__
  41 0008 DEB7      		in r29,__SP_H__
  42               	.LCFI3:
  43               		.cfi_def_cfa_register 28
  44               	/* prologue: function */
  45               	/* frame size = 1 */
  46               	/* stack size = 3 */
  47               	.L__stack_usage = 3
  48               	.LBB2:
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
  49               		.loc 1 73 0
  50 000a 1982      		std Y+1,__zero_reg__
  51 000c 00C0      		rjmp .L2
  52               	.L3:
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		nwkFrameFrames[i].state = NWK_FRAME_STATE_FREE;
  53               		.loc 1 74 0 discriminator 3
  54 000e 8981      		ldd r24,Y+1
  55 0010 282F      		mov r18,r24
  56 0012 30E0      		ldi r19,0
  57 0014 49E8      		ldi r20,lo8(-119)
  58 0016 429F      		mul r20,r18
  59 0018 C001      		movw r24,r0
  60 001a 439F      		mul r20,r19
  61 001c 900D      		add r25,r0
  62 001e 1124      		clr __zero_reg__
  63 0020 8050      		subi r24,lo8(-(nwkFrameFrames))
  64 0022 9040      		sbci r25,hi8(-(nwkFrameFrames))
  65 0024 FC01      		movw r30,r24
  66 0026 1082      		st Z,__zero_reg__
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
  67               		.loc 1 73 0 discriminator 3
  68 0028 8981      		ldd r24,Y+1
  69 002a 8F5F      		subi r24,lo8(-(1))
  70 002c 8983      		std Y+1,r24
  71               	.L2:
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
  72               		.loc 1 73 0 is_stmt 0 discriminator 1
  73 002e 8981      		ldd r24,Y+1
  74 0030 8431      		cpi r24,lo8(20)
  75 0032 00F0      		brlo .L3
  76               	.LBE2:
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
  77               		.loc 1 76 0 is_stmt 1
  78 0034 0000      		nop
  79               	/* epilogue start */
  80 0036 0F90      		pop __tmp_reg__
  81 0038 DF91      		pop r29
  82 003a CF91      		pop r28
  83 003c 0895      		ret
  84               		.cfi_endproc
  85               	.LFE66:
  87               	.global	nwkFrameAlloc
  89               	nwkFrameAlloc:
  90               	.LFB67:
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Allocates an empty frame from the buffer pool
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @return Pointer to the frame or @c NULL if there are no free frames
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** NwkFrame_t *nwkFrameAlloc(void)
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
  91               		.loc 1 83 0
  92               		.cfi_startproc
  93 003e CF93      		push r28
  94               	.LCFI4:
  95               		.cfi_def_cfa_offset 3
  96               		.cfi_offset 28, -2
  97 0040 DF93      		push r29
  98               	.LCFI5:
  99               		.cfi_def_cfa_offset 4
 100               		.cfi_offset 29, -3
 101 0042 1F92      		push __zero_reg__
 102               	.LCFI6:
 103               		.cfi_def_cfa_offset 5
 104 0044 CDB7      		in r28,__SP_L__
 105 0046 DEB7      		in r29,__SP_H__
 106               	.LCFI7:
 107               		.cfi_def_cfa_register 28
 108               	/* prologue: function */
 109               	/* frame size = 1 */
 110               	/* stack size = 3 */
 111               	.L__stack_usage = 3
 112               	.LBB3:
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
 113               		.loc 1 84 0
 114 0048 1982      		std Y+1,__zero_reg__
 115 004a 00C0      		rjmp .L5
 116               	.L8:
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 117               		.loc 1 85 0
 118 004c 8981      		ldd r24,Y+1
 119 004e 282F      		mov r18,r24
 120 0050 30E0      		ldi r19,0
 121 0052 49E8      		ldi r20,lo8(-119)
 122 0054 429F      		mul r20,r18
 123 0056 C001      		movw r24,r0
 124 0058 439F      		mul r20,r19
 125 005a 900D      		add r25,r0
 126 005c 1124      		clr __zero_reg__
 127 005e 8050      		subi r24,lo8(-(nwkFrameFrames))
 128 0060 9040      		sbci r25,hi8(-(nwkFrameFrames))
 129 0062 FC01      		movw r30,r24
 130 0064 8081      		ld r24,Z
 131 0066 8823      		tst r24
 132 0068 01F0      		breq .+2
 133 006a 00C0      		rjmp .L6
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			memset(&nwkFrameFrames[i], 0, sizeof(NwkFrame_t));
 134               		.loc 1 86 0
 135 006c 8981      		ldd r24,Y+1
 136 006e 282F      		mov r18,r24
 137 0070 30E0      		ldi r19,0
 138 0072 49E8      		ldi r20,lo8(-119)
 139 0074 429F      		mul r20,r18
 140 0076 C001      		movw r24,r0
 141 0078 439F      		mul r20,r19
 142 007a 900D      		add r25,r0
 143 007c 1124      		clr __zero_reg__
 144 007e 8050      		subi r24,lo8(-(nwkFrameFrames))
 145 0080 9040      		sbci r25,hi8(-(nwkFrameFrames))
 146 0082 49E8      		ldi r20,lo8(-119)
 147 0084 50E0      		ldi r21,0
 148 0086 60E0      		ldi r22,0
 149 0088 70E0      		ldi r23,0
 150 008a 0E94 0000 		call memset
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkFrameFrames[i].size = 0;
 151               		.loc 1 87 0
 152 008e 8981      		ldd r24,Y+1
 153 0090 282F      		mov r18,r24
 154 0092 30E0      		ldi r19,0
 155 0094 49E8      		ldi r20,lo8(-119)
 156 0096 429F      		mul r20,r18
 157 0098 C001      		movw r24,r0
 158 009a 439F      		mul r20,r19
 159 009c 900D      		add r25,r0
 160 009e 1124      		clr __zero_reg__
 161 00a0 8050      		subi r24,lo8(-(nwkFrameFrames+1))
 162 00a2 9040      		sbci r25,hi8(-(nwkFrameFrames+1))
 163 00a4 FC01      		movw r30,r24
 164 00a6 1082      		st Z,__zero_reg__
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkFrameFrames[i].payload = nwkFrameFrames[i].data;
 165               		.loc 1 88 0
 166 00a8 8981      		ldd r24,Y+1
 167 00aa 482F      		mov r20,r24
 168 00ac 50E0      		ldi r21,0
 169 00ae 8981      		ldd r24,Y+1
 170 00b0 282F      		mov r18,r24
 171 00b2 30E0      		ldi r19,0
 172 00b4 69E8      		ldi r22,lo8(-119)
 173 00b6 629F      		mul r22,r18
 174 00b8 C001      		movw r24,r0
 175 00ba 639F      		mul r22,r19
 176 00bc 900D      		add r25,r0
 177 00be 1124      		clr __zero_reg__
 178 00c0 0296      		adiw r24,2
 179 00c2 9C01      		movw r18,r24
 180 00c4 2050      		subi r18,lo8(-(nwkFrameFrames))
 181 00c6 3040      		sbci r19,hi8(-(nwkFrameFrames))
 182 00c8 69E8      		ldi r22,lo8(-119)
 183 00ca 649F      		mul r22,r20
 184 00cc C001      		movw r24,r0
 185 00ce 659F      		mul r22,r21
 186 00d0 900D      		add r25,r0
 187 00d2 1124      		clr __zero_reg__
 188 00d4 8050      		subi r24,lo8(-(nwkFrameFrames+129))
 189 00d6 9040      		sbci r25,hi8(-(nwkFrameFrames+129))
 190 00d8 FC01      		movw r30,r24
 191 00da 3183      		std Z+1,r19
 192 00dc 2083      		st Z,r18
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkIb.lock++;
 193               		.loc 1 89 0
 194 00de 8091 0000 		lds r24,nwkIb+38
 195 00e2 9091 0000 		lds r25,nwkIb+38+1
 196 00e6 0196      		adiw r24,1
 197 00e8 9093 0000 		sts nwkIb+38+1,r25
 198 00ec 8093 0000 		sts nwkIb+38,r24
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			return &nwkFrameFrames[i];
 199               		.loc 1 90 0
 200 00f0 8981      		ldd r24,Y+1
 201 00f2 282F      		mov r18,r24
 202 00f4 30E0      		ldi r19,0
 203 00f6 49E8      		ldi r20,lo8(-119)
 204 00f8 429F      		mul r20,r18
 205 00fa C001      		movw r24,r0
 206 00fc 439F      		mul r20,r19
 207 00fe 900D      		add r25,r0
 208 0100 1124      		clr __zero_reg__
 209 0102 8050      		subi r24,lo8(-(nwkFrameFrames))
 210 0104 9040      		sbci r25,hi8(-(nwkFrameFrames))
 211 0106 00C0      		rjmp .L7
 212               	.L6:
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 213               		.loc 1 84 0 discriminator 2
 214 0108 8981      		ldd r24,Y+1
 215 010a 8F5F      		subi r24,lo8(-(1))
 216 010c 8983      		std Y+1,r24
 217               	.L5:
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 218               		.loc 1 84 0 is_stmt 0 discriminator 1
 219 010e 8981      		ldd r24,Y+1
 220 0110 8431      		cpi r24,lo8(20)
 221 0112 00F4      		brsh .+2
 222 0114 00C0      		rjmp .L8
 223               	.LBE3:
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		}
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	return NULL;
 224               		.loc 1 93 0 is_stmt 1
 225 0116 80E0      		ldi r24,0
 226 0118 90E0      		ldi r25,0
 227               	.L7:
 228               	/* epilogue start */
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 229               		.loc 1 94 0
 230 011a 0F90      		pop __tmp_reg__
 231 011c DF91      		pop r29
 232 011e CF91      		pop r28
 233 0120 0895      		ret
 234               		.cfi_endproc
 235               	.LFE67:
 237               	.global	nwkFrameAlloc_LLDN
 239               	nwkFrameAlloc_LLDN:
 240               	.LFB68:
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /* Optimized allocation for lldn */
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame)
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
 241               		.loc 1 98 0
 242               		.cfi_startproc
 243 0122 CF93      		push r28
 244               	.LCFI8:
 245               		.cfi_def_cfa_offset 3
 246               		.cfi_offset 28, -2
 247 0124 DF93      		push r29
 248               	.LCFI9:
 249               		.cfi_def_cfa_offset 4
 250               		.cfi_offset 29, -3
 251 0126 00D0      		rcall .
 252               	.LCFI10:
 253               		.cfi_def_cfa_offset 6
 254 0128 CDB7      		in r28,__SP_L__
 255 012a DEB7      		in r29,__SP_H__
 256               	.LCFI11:
 257               		.cfi_def_cfa_register 28
 258               	/* prologue: function */
 259               	/* frame size = 2 */
 260               	/* stack size = 4 */
 261               	.L__stack_usage = 4
 262 012c 8A83      		std Y+2,r24
 263               	.LBB4:
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
 264               		.loc 1 99 0
 265 012e 1982      		std Y+1,__zero_reg__
 266 0130 00C0      		rjmp .L10
 267               	.L15:
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 268               		.loc 1 100 0
 269 0132 8981      		ldd r24,Y+1
 270 0134 282F      		mov r18,r24
 271 0136 30E0      		ldi r19,0
 272 0138 49E8      		ldi r20,lo8(-119)
 273 013a 429F      		mul r20,r18
 274 013c C001      		movw r24,r0
 275 013e 439F      		mul r20,r19
 276 0140 900D      		add r25,r0
 277 0142 1124      		clr __zero_reg__
 278 0144 8050      		subi r24,lo8(-(nwkFrameFrames))
 279 0146 9040      		sbci r25,hi8(-(nwkFrameFrames))
 280 0148 FC01      		movw r30,r24
 281 014a 8081      		ld r24,Z
 282 014c 8823      		tst r24
 283 014e 01F0      		breq .+2
 284 0150 00C0      		rjmp .L11
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			// clear memory of previous frame
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			memset(&nwkFrameFrames[i], 0, sizeof(NwkFrame_t));
 285               		.loc 1 102 0
 286 0152 8981      		ldd r24,Y+1
 287 0154 282F      		mov r18,r24
 288 0156 30E0      		ldi r19,0
 289 0158 49E8      		ldi r20,lo8(-119)
 290 015a 429F      		mul r20,r18
 291 015c C001      		movw r24,r0
 292 015e 439F      		mul r20,r19
 293 0160 900D      		add r25,r0
 294 0162 1124      		clr __zero_reg__
 295 0164 8050      		subi r24,lo8(-(nwkFrameFrames))
 296 0166 9040      		sbci r25,hi8(-(nwkFrameFrames))
 297 0168 49E8      		ldi r20,lo8(-119)
 298 016a 50E0      		ldi r21,0
 299 016c 60E0      		ldi r22,0
 300 016e 70E0      		ldi r23,0
 301 0170 0E94 0000 		call memset
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			// store in size initial size of frame, only it's MHR structure
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			if(beacon_frame)
 302               		.loc 1 104 0
 303 0174 8A81      		ldd r24,Y+2
 304 0176 8823      		tst r24
 305 0178 01F0      		breq .L12
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			{
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 				nwkFrameFrames[i].size = sizeof(NwkFrameBeaconHeaderLLDN_t);
 306               		.loc 1 106 0
 307 017a 8981      		ldd r24,Y+1
 308 017c 282F      		mov r18,r24
 309 017e 30E0      		ldi r19,0
 310 0180 49E8      		ldi r20,lo8(-119)
 311 0182 429F      		mul r20,r18
 312 0184 C001      		movw r24,r0
 313 0186 439F      		mul r20,r19
 314 0188 900D      		add r25,r0
 315 018a 1124      		clr __zero_reg__
 316 018c 8050      		subi r24,lo8(-(nwkFrameFrames+1))
 317 018e 9040      		sbci r25,hi8(-(nwkFrameFrames+1))
 318 0190 28E0      		ldi r18,lo8(8)
 319 0192 FC01      		movw r30,r24
 320 0194 2083      		st Z,r18
 321 0196 00C0      		rjmp .L13
 322               	.L12:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			}
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			else
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			{
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 				// data, mac command and group ack share the same MHR structure
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 				nwkFrameFrames[i].size = sizeof(NwkFrameGeneralHeaderLLDN_t);
 323               		.loc 1 111 0
 324 0198 8981      		ldd r24,Y+1
 325 019a 282F      		mov r18,r24
 326 019c 30E0      		ldi r19,0
 327 019e 49E8      		ldi r20,lo8(-119)
 328 01a0 429F      		mul r20,r18
 329 01a2 C001      		movw r24,r0
 330 01a4 439F      		mul r20,r19
 331 01a6 900D      		add r25,r0
 332 01a8 1124      		clr __zero_reg__
 333 01aa 8050      		subi r24,lo8(-(nwkFrameFrames+1))
 334 01ac 9040      		sbci r25,hi8(-(nwkFrameFrames+1))
 335 01ae 23E0      		ldi r18,lo8(3)
 336 01b0 FC01      		movw r30,r24
 337 01b2 2083      		st Z,r18
 338               	.L13:
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			}
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			// offset payload to end of MHR structure
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkFrameFrames[i].payload = nwkFrameFrames[i].data
 339               		.loc 1 114 0
 340 01b4 8981      		ldd r24,Y+1
 341 01b6 482F      		mov r20,r24
 342 01b8 50E0      		ldi r21,0
 343 01ba 8981      		ldd r24,Y+1
 344 01bc 282F      		mov r18,r24
 345 01be 30E0      		ldi r19,0
 346 01c0 69E8      		ldi r22,lo8(-119)
 347 01c2 629F      		mul r22,r18
 348 01c4 C001      		movw r24,r0
 349 01c6 639F      		mul r22,r19
 350 01c8 900D      		add r25,r0
 351 01ca 1124      		clr __zero_reg__
 352 01cc 0296      		adiw r24,2
 353 01ce 9C01      		movw r18,r24
 354 01d0 2050      		subi r18,lo8(-(nwkFrameFrames))
 355 01d2 3040      		sbci r19,hi8(-(nwkFrameFrames))
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 							+ nwkFrameFrames[i].size;
 356               		.loc 1 115 0
 357 01d4 8981      		ldd r24,Y+1
 358 01d6 682F      		mov r22,r24
 359 01d8 70E0      		ldi r23,0
 360 01da E9E8      		ldi r30,lo8(-119)
 361 01dc E69F      		mul r30,r22
 362 01de C001      		movw r24,r0
 363 01e0 E79F      		mul r30,r23
 364 01e2 900D      		add r25,r0
 365 01e4 1124      		clr __zero_reg__
 366 01e6 8050      		subi r24,lo8(-(nwkFrameFrames+1))
 367 01e8 9040      		sbci r25,hi8(-(nwkFrameFrames+1))
 368 01ea FC01      		movw r30,r24
 369 01ec 8081      		ld r24,Z
 370 01ee 882F      		mov r24,r24
 371 01f0 90E0      		ldi r25,0
 372 01f2 280F      		add r18,r24
 373 01f4 391F      		adc r19,r25
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 							+ nwkFrameFrames[i].size;
 374               		.loc 1 114 0
 375 01f6 69E8      		ldi r22,lo8(-119)
 376 01f8 649F      		mul r22,r20
 377 01fa C001      		movw r24,r0
 378 01fc 659F      		mul r22,r21
 379 01fe 900D      		add r25,r0
 380 0200 1124      		clr __zero_reg__
 381 0202 8050      		subi r24,lo8(-(nwkFrameFrames+129))
 382 0204 9040      		sbci r25,hi8(-(nwkFrameFrames+129))
 383 0206 FC01      		movw r30,r24
 384 0208 3183      		std Z+1,r19
 385 020a 2083      		st Z,r18
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkIb.lock++;
 386               		.loc 1 117 0
 387 020c 8091 0000 		lds r24,nwkIb+38
 388 0210 9091 0000 		lds r25,nwkIb+38+1
 389 0214 0196      		adiw r24,1
 390 0216 9093 0000 		sts nwkIb+38+1,r25
 391 021a 8093 0000 		sts nwkIb+38,r24
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			return &nwkFrameFrames[i];
 392               		.loc 1 118 0
 393 021e 8981      		ldd r24,Y+1
 394 0220 282F      		mov r18,r24
 395 0222 30E0      		ldi r19,0
 396 0224 49E8      		ldi r20,lo8(-119)
 397 0226 429F      		mul r20,r18
 398 0228 C001      		movw r24,r0
 399 022a 439F      		mul r20,r19
 400 022c 900D      		add r25,r0
 401 022e 1124      		clr __zero_reg__
 402 0230 8050      		subi r24,lo8(-(nwkFrameFrames))
 403 0232 9040      		sbci r25,hi8(-(nwkFrameFrames))
 404 0234 00C0      		rjmp .L14
 405               	.L11:
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 406               		.loc 1 99 0 discriminator 2
 407 0236 8981      		ldd r24,Y+1
 408 0238 8F5F      		subi r24,lo8(-(1))
 409 023a 8983      		std Y+1,r24
 410               	.L10:
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 411               		.loc 1 99 0 is_stmt 0 discriminator 1
 412 023c 8981      		ldd r24,Y+1
 413 023e 8431      		cpi r24,lo8(20)
 414 0240 00F4      		brsh .+2
 415 0242 00C0      		rjmp .L15
 416               	.LBE4:
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		}
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	return NULL;
 417               		.loc 1 121 0 is_stmt 1
 418 0244 80E0      		ldi r24,0
 419 0246 90E0      		ldi r25,0
 420               	.L14:
 421               	/* epilogue start */
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 422               		.loc 1 122 0
 423 0248 0F90      		pop __tmp_reg__
 424 024a 0F90      		pop __tmp_reg__
 425 024c DF91      		pop r29
 426 024e CF91      		pop r28
 427 0250 0895      		ret
 428               		.cfi_endproc
 429               	.LFE68:
 431               	.global	nwkFrameFree
 433               	nwkFrameFree:
 434               	.LFB69:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Frees a @a frame and returns it to the buffer pool
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @param[in] frame Pointer to the frame to be freed
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** void nwkFrameFree(NwkFrame_t *frame)
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
 435               		.loc 1 130 0
 436               		.cfi_startproc
 437 0252 CF93      		push r28
 438               	.LCFI12:
 439               		.cfi_def_cfa_offset 3
 440               		.cfi_offset 28, -2
 441 0254 DF93      		push r29
 442               	.LCFI13:
 443               		.cfi_def_cfa_offset 4
 444               		.cfi_offset 29, -3
 445 0256 00D0      		rcall .
 446               	.LCFI14:
 447               		.cfi_def_cfa_offset 6
 448 0258 CDB7      		in r28,__SP_L__
 449 025a DEB7      		in r29,__SP_H__
 450               	.LCFI15:
 451               		.cfi_def_cfa_register 28
 452               	/* prologue: function */
 453               	/* frame size = 2 */
 454               	/* stack size = 4 */
 455               	.L__stack_usage = 4
 456 025c 9A83      		std Y+2,r25
 457 025e 8983      		std Y+1,r24
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->state = NWK_FRAME_STATE_FREE;
 458               		.loc 1 131 0
 459 0260 8981      		ldd r24,Y+1
 460 0262 9A81      		ldd r25,Y+2
 461 0264 FC01      		movw r30,r24
 462 0266 1082      		st Z,__zero_reg__
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	nwkIb.lock--;
 463               		.loc 1 132 0
 464 0268 8091 0000 		lds r24,nwkIb+38
 465 026c 9091 0000 		lds r25,nwkIb+38+1
 466 0270 0197      		sbiw r24,1
 467 0272 9093 0000 		sts nwkIb+38+1,r25
 468 0276 8093 0000 		sts nwkIb+38,r24
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 469               		.loc 1 133 0
 470 027a 0000      		nop
 471               	/* epilogue start */
 472 027c 0F90      		pop __tmp_reg__
 473 027e 0F90      		pop __tmp_reg__
 474 0280 DF91      		pop r29
 475 0282 CF91      		pop r28
 476 0284 0895      		ret
 477               		.cfi_endproc
 478               	.LFE69:
 480               	.global	nwkFrameNext
 482               	nwkFrameNext:
 483               	.LFB70:
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Cycles through the allocated frames starting from the specified @a
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** * frame
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @param[in] frame Pointer to the current frame or @c NULL for the first frame
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @return Next allocated frame or @c NULL if there are no more frames
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame)
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
 484               		.loc 1 142 0
 485               		.cfi_startproc
 486 0286 CF93      		push r28
 487               	.LCFI16:
 488               		.cfi_def_cfa_offset 3
 489               		.cfi_offset 28, -2
 490 0288 DF93      		push r29
 491               	.LCFI17:
 492               		.cfi_def_cfa_offset 4
 493               		.cfi_offset 29, -3
 494 028a 00D0      		rcall .
 495               	.LCFI18:
 496               		.cfi_def_cfa_offset 6
 497 028c CDB7      		in r28,__SP_L__
 498 028e DEB7      		in r29,__SP_H__
 499               	.LCFI19:
 500               		.cfi_def_cfa_register 28
 501               	/* prologue: function */
 502               	/* frame size = 2 */
 503               	/* stack size = 4 */
 504               	.L__stack_usage = 4
 505 0290 9A83      		std Y+2,r25
 506 0292 8983      		std Y+1,r24
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	if (NULL == frame) {
 507               		.loc 1 143 0
 508 0294 8981      		ldd r24,Y+1
 509 0296 9A81      		ldd r25,Y+2
 510 0298 892B      		or r24,r25
 511 029a 01F4      		brne .L18
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		frame = nwkFrameFrames;
 512               		.loc 1 144 0
 513 029c 80E0      		ldi r24,lo8(nwkFrameFrames)
 514 029e 90E0      		ldi r25,hi8(nwkFrameFrames)
 515 02a0 9A83      		std Y+2,r25
 516 02a2 8983      		std Y+1,r24
 517 02a4 00C0      		rjmp .L20
 518               	.L18:
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	} else {
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		frame++;
 519               		.loc 1 146 0
 520 02a6 8981      		ldd r24,Y+1
 521 02a8 9A81      		ldd r25,Y+2
 522 02aa 8757      		subi r24,119
 523 02ac 9F4F      		sbci r25,-1
 524 02ae 9A83      		std Y+2,r25
 525 02b0 8983      		std Y+1,r24
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (; frame < &nwkFrameFrames[NWK_BUFFERS_AMOUNT]; frame++) {
 526               		.loc 1 149 0
 527 02b2 00C0      		rjmp .L20
 528               	.L23:
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE != frame->state) {
 529               		.loc 1 150 0
 530 02b4 8981      		ldd r24,Y+1
 531 02b6 9A81      		ldd r25,Y+2
 532 02b8 FC01      		movw r30,r24
 533 02ba 8081      		ld r24,Z
 534 02bc 8823      		tst r24
 535 02be 01F0      		breq .L21
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			return frame;
 536               		.loc 1 151 0
 537 02c0 8981      		ldd r24,Y+1
 538 02c2 9A81      		ldd r25,Y+2
 539 02c4 00C0      		rjmp .L22
 540               	.L21:
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE != frame->state) {
 541               		.loc 1 149 0
 542 02c6 8981      		ldd r24,Y+1
 543 02c8 9A81      		ldd r25,Y+2
 544 02ca 8757      		subi r24,119
 545 02cc 9F4F      		sbci r25,-1
 546 02ce 9A83      		std Y+2,r25
 547 02d0 8983      		std Y+1,r24
 548               	.L20:
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE != frame->state) {
 549               		.loc 1 149 0 is_stmt 0 discriminator 1
 550 02d2 8981      		ldd r24,Y+1
 551 02d4 9A81      		ldd r25,Y+2
 552 02d6 8050      		subi r24,lo8(nwkFrameFrames+2740)
 553 02d8 9040      		sbci r25,hi8(nwkFrameFrames+2740)
 554 02da 00F0      		brlo .L23
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		}
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	return NULL;
 555               		.loc 1 155 0 is_stmt 1
 556 02dc 80E0      		ldi r24,0
 557 02de 90E0      		ldi r25,0
 558               	.L22:
 559               	/* epilogue start */
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 560               		.loc 1 156 0
 561 02e0 0F90      		pop __tmp_reg__
 562 02e2 0F90      		pop __tmp_reg__
 563 02e4 DF91      		pop r29
 564 02e6 CF91      		pop r28
 565 02e8 0895      		ret
 566               		.cfi_endproc
 567               	.LFE70:
 569               	.global	nwkFrameCommandInit
 571               	nwkFrameCommandInit:
 572               	.LFB71:
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Sets default parameters for the the command @a frame
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @param[in] frame Pointer to the command frame
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** void nwkFrameCommandInit(NwkFrame_t *frame)
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
 573               		.loc 1 163 0
 574               		.cfi_startproc
 575 02ea CF93      		push r28
 576               	.LCFI20:
 577               		.cfi_def_cfa_offset 3
 578               		.cfi_offset 28, -2
 579 02ec DF93      		push r29
 580               	.LCFI21:
 581               		.cfi_def_cfa_offset 4
 582               		.cfi_offset 29, -3
 583 02ee 00D0      		rcall .
 584               	.LCFI22:
 585               		.cfi_def_cfa_offset 6
 586 02f0 CDB7      		in r28,__SP_L__
 587 02f2 DEB7      		in r29,__SP_H__
 588               	.LCFI23:
 589               		.cfi_def_cfa_register 28
 590               	/* prologue: function */
 591               	/* frame size = 2 */
 592               	/* stack size = 4 */
 593               	.L__stack_usage = 4
 594 02f4 9A83      		std Y+2,r25
 595 02f6 8983      		std Y+1,r24
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->tx.status = NWK_SUCCESS_STATUS;
 596               		.loc 1 164 0
 597 02f8 8981      		ldd r24,Y+1
 598 02fa 9A81      		ldd r25,Y+2
 599 02fc 8D57      		subi r24,125
 600 02fe 9F4F      		sbci r25,-1
 601 0300 FC01      		movw r30,r24
 602 0302 1082      		st Z,__zero_reg__
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 603               		.loc 1 165 0
 604 0304 8091 0000 		lds r24,nwkIb+4
 605 0308 8F5F      		subi r24,lo8(-(1))
 606 030a 8093 0000 		sts nwkIb+4,r24
 607 030e 2091 0000 		lds r18,nwkIb+4
 608 0312 8981      		ldd r24,Y+1
 609 0314 9A81      		ldd r25,Y+2
 610 0316 FC01      		movw r30,r24
 611 0318 2487      		std Z+12,r18
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->header.nwkSrcAddr = nwkIb.addr;
 612               		.loc 1 166 0
 613 031a 2091 0000 		lds r18,nwkIb
 614 031e 3091 0000 		lds r19,nwkIb+1
 615 0322 8981      		ldd r24,Y+1
 616 0324 9A81      		ldd r25,Y+2
 617 0326 FC01      		movw r30,r24
 618 0328 3687      		std Z+14,r19
 619 032a 2587      		std Z+13,r18
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->header.nwkFcf.security = 1;
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #endif
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 620               		.loc 1 170 0
 621 032c 0000      		nop
 622               	/* epilogue start */
 623 032e 0F90      		pop __tmp_reg__
 624 0330 0F90      		pop __tmp_reg__
 625 0332 DF91      		pop r29
 626 0334 CF91      		pop r28
 627 0336 0895      		ret
 628               		.cfi_endproc
 629               	.LFE71:
 631               	.Letext0:
 632               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 633               		.file 3 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
 634               		.file 4 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 635               		.file 5 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 636               		.file 6 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkFrame.c
C:\Users\GUILHE~1\AppData\Local\Temp\ccd0mo0N.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\ccd0mo0N.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\ccd0mo0N.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\ccd0mo0N.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\ccd0mo0N.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccd0mo0N.s:7      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 n
                            *COM*:00000004 tTS
                            *COM*:00000002 macLLDNnumTimeSlots
                            *COM*:00000002 macLLDNnumUplinkTS
                            *COM*:00000002 macLLDNRetransmitTS
C:\Users\GUILHE~1\AppData\Local\Temp\ccd0mo0N.s:19     .bss.nwkFrameFrames:00000000 nwkFrameFrames
C:\Users\GUILHE~1\AppData\Local\Temp\ccd0mo0N.s:24     .text:00000000 nwkFrameInit
C:\Users\GUILHE~1\AppData\Local\Temp\ccd0mo0N.s:89     .text:0000003e nwkFrameAlloc
C:\Users\GUILHE~1\AppData\Local\Temp\ccd0mo0N.s:239    .text:00000122 nwkFrameAlloc_LLDN
C:\Users\GUILHE~1\AppData\Local\Temp\ccd0mo0N.s:433    .text:00000252 nwkFrameFree
C:\Users\GUILHE~1\AppData\Local\Temp\ccd0mo0N.s:482    .text:00000286 nwkFrameNext
C:\Users\GUILHE~1\AppData\Local\Temp\ccd0mo0N.s:571    .text:000002ea nwkFrameCommandInit

UNDEFINED SYMBOLS
memset
nwkIb
__do_clear_bss
