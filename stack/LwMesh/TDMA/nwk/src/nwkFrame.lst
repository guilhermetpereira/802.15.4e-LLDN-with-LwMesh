   1               		.file	"nwkFrame.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.bss.n,"aw",@nobits
  14               	n:
  15 0000 00        		.zero	1
  16               		.section	.bss.tTS,"aw",@nobits
  19               	tTS:
  20 0000 0000 0000 		.zero	4
  21               		.section	.bss.nwkFrameFrames,"aw",@nobits
  24               	nwkFrameFrames:
  25 0000 0000 0000 		.zero	2740
  25      0000 0000 
  25      0000 0000 
  25      0000 0000 
  25      0000 0000 
  26               		.text
  27               	.global	nwkFrameInit
  29               	nwkFrameInit:
  30               	.LFB66:
  31               		.file 1 "../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * \file nwkFrame.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * \brief Frame buffers management implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include "sysConfig.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include "nwk.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include "nwkFrame.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*- Types ------------------------------------------------------------------*/
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** enum {
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	NWK_FRAME_STATE_FREE = 0x00,
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** };
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*- Variables --------------------------------------------------------------*/
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** static NwkFrame_t nwkFrameFrames[NWK_BUFFERS_AMOUNT];
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*- Implementations --------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Initializes the Frame module
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** void nwkFrameInit(void)
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
  32               		.loc 1 72 0
  33               		.cfi_startproc
  34 0000 CF93      		push r28
  35               	.LCFI0:
  36               		.cfi_def_cfa_offset 3
  37               		.cfi_offset 28, -2
  38 0002 DF93      		push r29
  39               	.LCFI1:
  40               		.cfi_def_cfa_offset 4
  41               		.cfi_offset 29, -3
  42 0004 1F92      		push __zero_reg__
  43               	.LCFI2:
  44               		.cfi_def_cfa_offset 5
  45 0006 CDB7      		in r28,__SP_L__
  46 0008 DEB7      		in r29,__SP_H__
  47               	.LCFI3:
  48               		.cfi_def_cfa_register 28
  49               	/* prologue: function */
  50               	/* frame size = 1 */
  51               	/* stack size = 3 */
  52               	.L__stack_usage = 3
  53               	.LBB2:
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
  54               		.loc 1 73 0
  55 000a 1982      		std Y+1,__zero_reg__
  56 000c 00C0      		rjmp .L2
  57               	.L3:
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		nwkFrameFrames[i].state = NWK_FRAME_STATE_FREE;
  58               		.loc 1 74 0 discriminator 3
  59 000e 8981      		ldd r24,Y+1
  60 0010 282F      		mov r18,r24
  61 0012 30E0      		ldi r19,0
  62 0014 49E8      		ldi r20,lo8(-119)
  63 0016 429F      		mul r20,r18
  64 0018 C001      		movw r24,r0
  65 001a 439F      		mul r20,r19
  66 001c 900D      		add r25,r0
  67 001e 1124      		clr __zero_reg__
  68 0020 8050      		subi r24,lo8(-(nwkFrameFrames))
  69 0022 9040      		sbci r25,hi8(-(nwkFrameFrames))
  70 0024 FC01      		movw r30,r24
  71 0026 1082      		st Z,__zero_reg__
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
  72               		.loc 1 73 0 discriminator 3
  73 0028 8981      		ldd r24,Y+1
  74 002a 8F5F      		subi r24,lo8(-(1))
  75 002c 8983      		std Y+1,r24
  76               	.L2:
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
  77               		.loc 1 73 0 is_stmt 0 discriminator 1
  78 002e 8981      		ldd r24,Y+1
  79 0030 8431      		cpi r24,lo8(20)
  80 0032 00F0      		brlo .L3
  81               	.LBE2:
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
  82               		.loc 1 76 0 is_stmt 1
  83 0034 0000      		nop
  84               	/* epilogue start */
  85 0036 0F90      		pop __tmp_reg__
  86 0038 DF91      		pop r29
  87 003a CF91      		pop r28
  88 003c 0895      		ret
  89               		.cfi_endproc
  90               	.LFE66:
  92               	.global	nwkFrameAlloc
  94               	nwkFrameAlloc:
  95               	.LFB67:
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Allocates an empty frame from the buffer pool
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @return Pointer to the frame or @c NULL if there are no free frames
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** NwkFrame_t *nwkFrameAlloc(void)
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
  96               		.loc 1 83 0
  97               		.cfi_startproc
  98 003e CF93      		push r28
  99               	.LCFI4:
 100               		.cfi_def_cfa_offset 3
 101               		.cfi_offset 28, -2
 102 0040 DF93      		push r29
 103               	.LCFI5:
 104               		.cfi_def_cfa_offset 4
 105               		.cfi_offset 29, -3
 106 0042 1F92      		push __zero_reg__
 107               	.LCFI6:
 108               		.cfi_def_cfa_offset 5
 109 0044 CDB7      		in r28,__SP_L__
 110 0046 DEB7      		in r29,__SP_H__
 111               	.LCFI7:
 112               		.cfi_def_cfa_register 28
 113               	/* prologue: function */
 114               	/* frame size = 1 */
 115               	/* stack size = 3 */
 116               	.L__stack_usage = 3
 117               	.LBB3:
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
 118               		.loc 1 84 0
 119 0048 1982      		std Y+1,__zero_reg__
 120 004a 00C0      		rjmp .L5
 121               	.L8:
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 122               		.loc 1 85 0
 123 004c 8981      		ldd r24,Y+1
 124 004e 282F      		mov r18,r24
 125 0050 30E0      		ldi r19,0
 126 0052 49E8      		ldi r20,lo8(-119)
 127 0054 429F      		mul r20,r18
 128 0056 C001      		movw r24,r0
 129 0058 439F      		mul r20,r19
 130 005a 900D      		add r25,r0
 131 005c 1124      		clr __zero_reg__
 132 005e 8050      		subi r24,lo8(-(nwkFrameFrames))
 133 0060 9040      		sbci r25,hi8(-(nwkFrameFrames))
 134 0062 FC01      		movw r30,r24
 135 0064 8081      		ld r24,Z
 136 0066 8823      		tst r24
 137 0068 01F0      		breq .+2
 138 006a 00C0      		rjmp .L6
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			memset(&nwkFrameFrames[i], 0, sizeof(NwkFrame_t));
 139               		.loc 1 86 0
 140 006c 8981      		ldd r24,Y+1
 141 006e 282F      		mov r18,r24
 142 0070 30E0      		ldi r19,0
 143 0072 49E8      		ldi r20,lo8(-119)
 144 0074 429F      		mul r20,r18
 145 0076 C001      		movw r24,r0
 146 0078 439F      		mul r20,r19
 147 007a 900D      		add r25,r0
 148 007c 1124      		clr __zero_reg__
 149 007e 8050      		subi r24,lo8(-(nwkFrameFrames))
 150 0080 9040      		sbci r25,hi8(-(nwkFrameFrames))
 151 0082 49E8      		ldi r20,lo8(-119)
 152 0084 50E0      		ldi r21,0
 153 0086 60E0      		ldi r22,0
 154 0088 70E0      		ldi r23,0
 155 008a 0E94 0000 		call memset
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkFrameFrames[i].size = 0;
 156               		.loc 1 87 0
 157 008e 8981      		ldd r24,Y+1
 158 0090 282F      		mov r18,r24
 159 0092 30E0      		ldi r19,0
 160 0094 49E8      		ldi r20,lo8(-119)
 161 0096 429F      		mul r20,r18
 162 0098 C001      		movw r24,r0
 163 009a 439F      		mul r20,r19
 164 009c 900D      		add r25,r0
 165 009e 1124      		clr __zero_reg__
 166 00a0 8050      		subi r24,lo8(-(nwkFrameFrames+1))
 167 00a2 9040      		sbci r25,hi8(-(nwkFrameFrames+1))
 168 00a4 FC01      		movw r30,r24
 169 00a6 1082      		st Z,__zero_reg__
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkFrameFrames[i].payload = nwkFrameFrames[i].data;
 170               		.loc 1 88 0
 171 00a8 8981      		ldd r24,Y+1
 172 00aa 482F      		mov r20,r24
 173 00ac 50E0      		ldi r21,0
 174 00ae 8981      		ldd r24,Y+1
 175 00b0 282F      		mov r18,r24
 176 00b2 30E0      		ldi r19,0
 177 00b4 69E8      		ldi r22,lo8(-119)
 178 00b6 629F      		mul r22,r18
 179 00b8 C001      		movw r24,r0
 180 00ba 639F      		mul r22,r19
 181 00bc 900D      		add r25,r0
 182 00be 1124      		clr __zero_reg__
 183 00c0 0296      		adiw r24,2
 184 00c2 9C01      		movw r18,r24
 185 00c4 2050      		subi r18,lo8(-(nwkFrameFrames))
 186 00c6 3040      		sbci r19,hi8(-(nwkFrameFrames))
 187 00c8 69E8      		ldi r22,lo8(-119)
 188 00ca 649F      		mul r22,r20
 189 00cc C001      		movw r24,r0
 190 00ce 659F      		mul r22,r21
 191 00d0 900D      		add r25,r0
 192 00d2 1124      		clr __zero_reg__
 193 00d4 8050      		subi r24,lo8(-(nwkFrameFrames+129))
 194 00d6 9040      		sbci r25,hi8(-(nwkFrameFrames+129))
 195 00d8 FC01      		movw r30,r24
 196 00da 3183      		std Z+1,r19
 197 00dc 2083      		st Z,r18
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkIb.lock++;
 198               		.loc 1 89 0
 199 00de 8091 0000 		lds r24,nwkIb+38
 200 00e2 9091 0000 		lds r25,nwkIb+38+1
 201 00e6 0196      		adiw r24,1
 202 00e8 9093 0000 		sts nwkIb+38+1,r25
 203 00ec 8093 0000 		sts nwkIb+38,r24
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			return &nwkFrameFrames[i];
 204               		.loc 1 90 0
 205 00f0 8981      		ldd r24,Y+1
 206 00f2 282F      		mov r18,r24
 207 00f4 30E0      		ldi r19,0
 208 00f6 49E8      		ldi r20,lo8(-119)
 209 00f8 429F      		mul r20,r18
 210 00fa C001      		movw r24,r0
 211 00fc 439F      		mul r20,r19
 212 00fe 900D      		add r25,r0
 213 0100 1124      		clr __zero_reg__
 214 0102 8050      		subi r24,lo8(-(nwkFrameFrames))
 215 0104 9040      		sbci r25,hi8(-(nwkFrameFrames))
 216 0106 00C0      		rjmp .L7
 217               	.L6:
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 218               		.loc 1 84 0 discriminator 2
 219 0108 8981      		ldd r24,Y+1
 220 010a 8F5F      		subi r24,lo8(-(1))
 221 010c 8983      		std Y+1,r24
 222               	.L5:
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 223               		.loc 1 84 0 is_stmt 0 discriminator 1
 224 010e 8981      		ldd r24,Y+1
 225 0110 8431      		cpi r24,lo8(20)
 226 0112 00F4      		brsh .+2
 227 0114 00C0      		rjmp .L8
 228               	.LBE3:
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		}
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	return NULL;
 229               		.loc 1 93 0 is_stmt 1
 230 0116 80E0      		ldi r24,0
 231 0118 90E0      		ldi r25,0
 232               	.L7:
 233               	/* epilogue start */
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 234               		.loc 1 94 0
 235 011a 0F90      		pop __tmp_reg__
 236 011c DF91      		pop r29
 237 011e CF91      		pop r28
 238 0120 0895      		ret
 239               		.cfi_endproc
 240               	.LFE67:
 242               	.global	nwkFrameAlloc_LLDN
 244               	nwkFrameAlloc_LLDN:
 245               	.LFB68:
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /* Optimized allocation for lldn */
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame)
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
 246               		.loc 1 98 0
 247               		.cfi_startproc
 248 0122 CF93      		push r28
 249               	.LCFI8:
 250               		.cfi_def_cfa_offset 3
 251               		.cfi_offset 28, -2
 252 0124 DF93      		push r29
 253               	.LCFI9:
 254               		.cfi_def_cfa_offset 4
 255               		.cfi_offset 29, -3
 256 0126 00D0      		rcall .
 257               	.LCFI10:
 258               		.cfi_def_cfa_offset 6
 259 0128 CDB7      		in r28,__SP_L__
 260 012a DEB7      		in r29,__SP_H__
 261               	.LCFI11:
 262               		.cfi_def_cfa_register 28
 263               	/* prologue: function */
 264               	/* frame size = 2 */
 265               	/* stack size = 4 */
 266               	.L__stack_usage = 4
 267 012c 8A83      		std Y+2,r24
 268               	.LBB4:
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
 269               		.loc 1 99 0
 270 012e 1982      		std Y+1,__zero_reg__
 271 0130 00C0      		rjmp .L10
 272               	.L15:
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 273               		.loc 1 100 0
 274 0132 8981      		ldd r24,Y+1
 275 0134 282F      		mov r18,r24
 276 0136 30E0      		ldi r19,0
 277 0138 49E8      		ldi r20,lo8(-119)
 278 013a 429F      		mul r20,r18
 279 013c C001      		movw r24,r0
 280 013e 439F      		mul r20,r19
 281 0140 900D      		add r25,r0
 282 0142 1124      		clr __zero_reg__
 283 0144 8050      		subi r24,lo8(-(nwkFrameFrames))
 284 0146 9040      		sbci r25,hi8(-(nwkFrameFrames))
 285 0148 FC01      		movw r30,r24
 286 014a 8081      		ld r24,Z
 287 014c 8823      		tst r24
 288 014e 01F0      		breq .+2
 289 0150 00C0      		rjmp .L11
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			// clear memory of previous frame
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			memset(&nwkFrameFrames[i], 0, sizeof(NwkFrame_t));
 290               		.loc 1 102 0
 291 0152 8981      		ldd r24,Y+1
 292 0154 282F      		mov r18,r24
 293 0156 30E0      		ldi r19,0
 294 0158 49E8      		ldi r20,lo8(-119)
 295 015a 429F      		mul r20,r18
 296 015c C001      		movw r24,r0
 297 015e 439F      		mul r20,r19
 298 0160 900D      		add r25,r0
 299 0162 1124      		clr __zero_reg__
 300 0164 8050      		subi r24,lo8(-(nwkFrameFrames))
 301 0166 9040      		sbci r25,hi8(-(nwkFrameFrames))
 302 0168 49E8      		ldi r20,lo8(-119)
 303 016a 50E0      		ldi r21,0
 304 016c 60E0      		ldi r22,0
 305 016e 70E0      		ldi r23,0
 306 0170 0E94 0000 		call memset
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			// store in size initial size of frame, only it's MHR structure
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			if(beacon_frame)
 307               		.loc 1 104 0
 308 0174 8A81      		ldd r24,Y+2
 309 0176 8823      		tst r24
 310 0178 01F0      		breq .L12
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			{
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 				nwkFrameFrames[i].size = sizeof(NwkFrameBeaconHeaderLLDN_t);
 311               		.loc 1 106 0
 312 017a 8981      		ldd r24,Y+1
 313 017c 282F      		mov r18,r24
 314 017e 30E0      		ldi r19,0
 315 0180 49E8      		ldi r20,lo8(-119)
 316 0182 429F      		mul r20,r18
 317 0184 C001      		movw r24,r0
 318 0186 439F      		mul r20,r19
 319 0188 900D      		add r25,r0
 320 018a 1124      		clr __zero_reg__
 321 018c 8050      		subi r24,lo8(-(nwkFrameFrames+1))
 322 018e 9040      		sbci r25,hi8(-(nwkFrameFrames+1))
 323 0190 27E0      		ldi r18,lo8(7)
 324 0192 FC01      		movw r30,r24
 325 0194 2083      		st Z,r18
 326 0196 00C0      		rjmp .L13
 327               	.L12:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			}
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			else
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			{
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 				// data, mac command and group ack share the same MHR structure
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 				nwkFrameFrames[i].size = sizeof(NwkFrameGeneralHeaderLLDN_t);
 328               		.loc 1 111 0
 329 0198 8981      		ldd r24,Y+1
 330 019a 282F      		mov r18,r24
 331 019c 30E0      		ldi r19,0
 332 019e 49E8      		ldi r20,lo8(-119)
 333 01a0 429F      		mul r20,r18
 334 01a2 C001      		movw r24,r0
 335 01a4 439F      		mul r20,r19
 336 01a6 900D      		add r25,r0
 337 01a8 1124      		clr __zero_reg__
 338 01aa 8050      		subi r24,lo8(-(nwkFrameFrames+1))
 339 01ac 9040      		sbci r25,hi8(-(nwkFrameFrames+1))
 340 01ae 23E0      		ldi r18,lo8(3)
 341 01b0 FC01      		movw r30,r24
 342 01b2 2083      		st Z,r18
 343               	.L13:
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			}
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			// offset payload to end of MHR structure
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkFrameFrames[i].payload = nwkFrameFrames[i].data
 344               		.loc 1 114 0
 345 01b4 8981      		ldd r24,Y+1
 346 01b6 482F      		mov r20,r24
 347 01b8 50E0      		ldi r21,0
 348 01ba 8981      		ldd r24,Y+1
 349 01bc 282F      		mov r18,r24
 350 01be 30E0      		ldi r19,0
 351 01c0 69E8      		ldi r22,lo8(-119)
 352 01c2 629F      		mul r22,r18
 353 01c4 C001      		movw r24,r0
 354 01c6 639F      		mul r22,r19
 355 01c8 900D      		add r25,r0
 356 01ca 1124      		clr __zero_reg__
 357 01cc 0296      		adiw r24,2
 358 01ce 9C01      		movw r18,r24
 359 01d0 2050      		subi r18,lo8(-(nwkFrameFrames))
 360 01d2 3040      		sbci r19,hi8(-(nwkFrameFrames))
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 							+ nwkFrameFrames[i].size;
 361               		.loc 1 115 0
 362 01d4 8981      		ldd r24,Y+1
 363 01d6 682F      		mov r22,r24
 364 01d8 70E0      		ldi r23,0
 365 01da E9E8      		ldi r30,lo8(-119)
 366 01dc E69F      		mul r30,r22
 367 01de C001      		movw r24,r0
 368 01e0 E79F      		mul r30,r23
 369 01e2 900D      		add r25,r0
 370 01e4 1124      		clr __zero_reg__
 371 01e6 8050      		subi r24,lo8(-(nwkFrameFrames+1))
 372 01e8 9040      		sbci r25,hi8(-(nwkFrameFrames+1))
 373 01ea FC01      		movw r30,r24
 374 01ec 8081      		ld r24,Z
 375 01ee 882F      		mov r24,r24
 376 01f0 90E0      		ldi r25,0
 377 01f2 280F      		add r18,r24
 378 01f4 391F      		adc r19,r25
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 							+ nwkFrameFrames[i].size;
 379               		.loc 1 114 0
 380 01f6 69E8      		ldi r22,lo8(-119)
 381 01f8 649F      		mul r22,r20
 382 01fa C001      		movw r24,r0
 383 01fc 659F      		mul r22,r21
 384 01fe 900D      		add r25,r0
 385 0200 1124      		clr __zero_reg__
 386 0202 8050      		subi r24,lo8(-(nwkFrameFrames+129))
 387 0204 9040      		sbci r25,hi8(-(nwkFrameFrames+129))
 388 0206 FC01      		movw r30,r24
 389 0208 3183      		std Z+1,r19
 390 020a 2083      		st Z,r18
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkIb.lock++;
 391               		.loc 1 117 0
 392 020c 8091 0000 		lds r24,nwkIb+38
 393 0210 9091 0000 		lds r25,nwkIb+38+1
 394 0214 0196      		adiw r24,1
 395 0216 9093 0000 		sts nwkIb+38+1,r25
 396 021a 8093 0000 		sts nwkIb+38,r24
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			return &nwkFrameFrames[i];
 397               		.loc 1 118 0
 398 021e 8981      		ldd r24,Y+1
 399 0220 282F      		mov r18,r24
 400 0222 30E0      		ldi r19,0
 401 0224 49E8      		ldi r20,lo8(-119)
 402 0226 429F      		mul r20,r18
 403 0228 C001      		movw r24,r0
 404 022a 439F      		mul r20,r19
 405 022c 900D      		add r25,r0
 406 022e 1124      		clr __zero_reg__
 407 0230 8050      		subi r24,lo8(-(nwkFrameFrames))
 408 0232 9040      		sbci r25,hi8(-(nwkFrameFrames))
 409 0234 00C0      		rjmp .L14
 410               	.L11:
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 411               		.loc 1 99 0 discriminator 2
 412 0236 8981      		ldd r24,Y+1
 413 0238 8F5F      		subi r24,lo8(-(1))
 414 023a 8983      		std Y+1,r24
 415               	.L10:
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 416               		.loc 1 99 0 is_stmt 0 discriminator 1
 417 023c 8981      		ldd r24,Y+1
 418 023e 8431      		cpi r24,lo8(20)
 419 0240 00F4      		brsh .+2
 420 0242 00C0      		rjmp .L15
 421               	.LBE4:
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		}
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	return NULL;
 422               		.loc 1 121 0 is_stmt 1
 423 0244 80E0      		ldi r24,0
 424 0246 90E0      		ldi r25,0
 425               	.L14:
 426               	/* epilogue start */
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 427               		.loc 1 122 0
 428 0248 0F90      		pop __tmp_reg__
 429 024a 0F90      		pop __tmp_reg__
 430 024c DF91      		pop r29
 431 024e CF91      		pop r28
 432 0250 0895      		ret
 433               		.cfi_endproc
 434               	.LFE68:
 436               	.global	nwkFrameFree
 438               	nwkFrameFree:
 439               	.LFB69:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Frees a @a frame and returns it to the buffer pool
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @param[in] frame Pointer to the frame to be freed
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** void nwkFrameFree(NwkFrame_t *frame)
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
 440               		.loc 1 130 0
 441               		.cfi_startproc
 442 0252 CF93      		push r28
 443               	.LCFI12:
 444               		.cfi_def_cfa_offset 3
 445               		.cfi_offset 28, -2
 446 0254 DF93      		push r29
 447               	.LCFI13:
 448               		.cfi_def_cfa_offset 4
 449               		.cfi_offset 29, -3
 450 0256 00D0      		rcall .
 451               	.LCFI14:
 452               		.cfi_def_cfa_offset 6
 453 0258 CDB7      		in r28,__SP_L__
 454 025a DEB7      		in r29,__SP_H__
 455               	.LCFI15:
 456               		.cfi_def_cfa_register 28
 457               	/* prologue: function */
 458               	/* frame size = 2 */
 459               	/* stack size = 4 */
 460               	.L__stack_usage = 4
 461 025c 9A83      		std Y+2,r25
 462 025e 8983      		std Y+1,r24
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->state = NWK_FRAME_STATE_FREE;
 463               		.loc 1 131 0
 464 0260 8981      		ldd r24,Y+1
 465 0262 9A81      		ldd r25,Y+2
 466 0264 FC01      		movw r30,r24
 467 0266 1082      		st Z,__zero_reg__
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	nwkIb.lock--;
 468               		.loc 1 132 0
 469 0268 8091 0000 		lds r24,nwkIb+38
 470 026c 9091 0000 		lds r25,nwkIb+38+1
 471 0270 0197      		sbiw r24,1
 472 0272 9093 0000 		sts nwkIb+38+1,r25
 473 0276 8093 0000 		sts nwkIb+38,r24
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 474               		.loc 1 133 0
 475 027a 0000      		nop
 476               	/* epilogue start */
 477 027c 0F90      		pop __tmp_reg__
 478 027e 0F90      		pop __tmp_reg__
 479 0280 DF91      		pop r29
 480 0282 CF91      		pop r28
 481 0284 0895      		ret
 482               		.cfi_endproc
 483               	.LFE69:
 485               	.global	nwkFrameNext
 487               	nwkFrameNext:
 488               	.LFB70:
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Cycles through the allocated frames starting from the specified @a
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** * frame
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @param[in] frame Pointer to the current frame or @c NULL for the first frame
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @return Next allocated frame or @c NULL if there are no more frames
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame)
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
 489               		.loc 1 142 0
 490               		.cfi_startproc
 491 0286 CF93      		push r28
 492               	.LCFI16:
 493               		.cfi_def_cfa_offset 3
 494               		.cfi_offset 28, -2
 495 0288 DF93      		push r29
 496               	.LCFI17:
 497               		.cfi_def_cfa_offset 4
 498               		.cfi_offset 29, -3
 499 028a 00D0      		rcall .
 500               	.LCFI18:
 501               		.cfi_def_cfa_offset 6
 502 028c CDB7      		in r28,__SP_L__
 503 028e DEB7      		in r29,__SP_H__
 504               	.LCFI19:
 505               		.cfi_def_cfa_register 28
 506               	/* prologue: function */
 507               	/* frame size = 2 */
 508               	/* stack size = 4 */
 509               	.L__stack_usage = 4
 510 0290 9A83      		std Y+2,r25
 511 0292 8983      		std Y+1,r24
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	if (NULL == frame) {
 512               		.loc 1 143 0
 513 0294 8981      		ldd r24,Y+1
 514 0296 9A81      		ldd r25,Y+2
 515 0298 892B      		or r24,r25
 516 029a 01F4      		brne .L18
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		frame = nwkFrameFrames;
 517               		.loc 1 144 0
 518 029c 80E0      		ldi r24,lo8(nwkFrameFrames)
 519 029e 90E0      		ldi r25,hi8(nwkFrameFrames)
 520 02a0 9A83      		std Y+2,r25
 521 02a2 8983      		std Y+1,r24
 522 02a4 00C0      		rjmp .L20
 523               	.L18:
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	} else {
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		frame++;
 524               		.loc 1 146 0
 525 02a6 8981      		ldd r24,Y+1
 526 02a8 9A81      		ldd r25,Y+2
 527 02aa 8757      		subi r24,119
 528 02ac 9F4F      		sbci r25,-1
 529 02ae 9A83      		std Y+2,r25
 530 02b0 8983      		std Y+1,r24
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (; frame < &nwkFrameFrames[NWK_BUFFERS_AMOUNT]; frame++) {
 531               		.loc 1 149 0
 532 02b2 00C0      		rjmp .L20
 533               	.L23:
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE != frame->state) {
 534               		.loc 1 150 0
 535 02b4 8981      		ldd r24,Y+1
 536 02b6 9A81      		ldd r25,Y+2
 537 02b8 FC01      		movw r30,r24
 538 02ba 8081      		ld r24,Z
 539 02bc 8823      		tst r24
 540 02be 01F0      		breq .L21
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			return frame;
 541               		.loc 1 151 0
 542 02c0 8981      		ldd r24,Y+1
 543 02c2 9A81      		ldd r25,Y+2
 544 02c4 00C0      		rjmp .L22
 545               	.L21:
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE != frame->state) {
 546               		.loc 1 149 0
 547 02c6 8981      		ldd r24,Y+1
 548 02c8 9A81      		ldd r25,Y+2
 549 02ca 8757      		subi r24,119
 550 02cc 9F4F      		sbci r25,-1
 551 02ce 9A83      		std Y+2,r25
 552 02d0 8983      		std Y+1,r24
 553               	.L20:
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE != frame->state) {
 554               		.loc 1 149 0 is_stmt 0 discriminator 1
 555 02d2 8981      		ldd r24,Y+1
 556 02d4 9A81      		ldd r25,Y+2
 557 02d6 8050      		subi r24,lo8(nwkFrameFrames+2740)
 558 02d8 9040      		sbci r25,hi8(nwkFrameFrames+2740)
 559 02da 00F0      		brlo .L23
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		}
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	return NULL;
 560               		.loc 1 155 0 is_stmt 1
 561 02dc 80E0      		ldi r24,0
 562 02de 90E0      		ldi r25,0
 563               	.L22:
 564               	/* epilogue start */
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 565               		.loc 1 156 0
 566 02e0 0F90      		pop __tmp_reg__
 567 02e2 0F90      		pop __tmp_reg__
 568 02e4 DF91      		pop r29
 569 02e6 CF91      		pop r28
 570 02e8 0895      		ret
 571               		.cfi_endproc
 572               	.LFE70:
 574               	.global	nwkFrameCommandInit
 576               	nwkFrameCommandInit:
 577               	.LFB71:
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Sets default parameters for the the command @a frame
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @param[in] frame Pointer to the command frame
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** void nwkFrameCommandInit(NwkFrame_t *frame)
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
 578               		.loc 1 163 0
 579               		.cfi_startproc
 580 02ea CF93      		push r28
 581               	.LCFI20:
 582               		.cfi_def_cfa_offset 3
 583               		.cfi_offset 28, -2
 584 02ec DF93      		push r29
 585               	.LCFI21:
 586               		.cfi_def_cfa_offset 4
 587               		.cfi_offset 29, -3
 588 02ee 00D0      		rcall .
 589               	.LCFI22:
 590               		.cfi_def_cfa_offset 6
 591 02f0 CDB7      		in r28,__SP_L__
 592 02f2 DEB7      		in r29,__SP_H__
 593               	.LCFI23:
 594               		.cfi_def_cfa_register 28
 595               	/* prologue: function */
 596               	/* frame size = 2 */
 597               	/* stack size = 4 */
 598               	.L__stack_usage = 4
 599 02f4 9A83      		std Y+2,r25
 600 02f6 8983      		std Y+1,r24
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->tx.status = NWK_SUCCESS_STATUS;
 601               		.loc 1 164 0
 602 02f8 8981      		ldd r24,Y+1
 603 02fa 9A81      		ldd r25,Y+2
 604 02fc 8D57      		subi r24,125
 605 02fe 9F4F      		sbci r25,-1
 606 0300 FC01      		movw r30,r24
 607 0302 1082      		st Z,__zero_reg__
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 608               		.loc 1 165 0
 609 0304 8091 0000 		lds r24,nwkIb+4
 610 0308 8F5F      		subi r24,lo8(-(1))
 611 030a 8093 0000 		sts nwkIb+4,r24
 612 030e 2091 0000 		lds r18,nwkIb+4
 613 0312 8981      		ldd r24,Y+1
 614 0314 9A81      		ldd r25,Y+2
 615 0316 FC01      		movw r30,r24
 616 0318 2487      		std Z+12,r18
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->header.nwkSrcAddr = nwkIb.addr;
 617               		.loc 1 166 0
 618 031a 2091 0000 		lds r18,nwkIb
 619 031e 3091 0000 		lds r19,nwkIb+1
 620 0322 8981      		ldd r24,Y+1
 621 0324 9A81      		ldd r25,Y+2
 622 0326 FC01      		movw r30,r24
 623 0328 3687      		std Z+14,r19
 624 032a 2587      		std Z+13,r18
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->header.nwkFcf.security = 1;
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #endif
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 625               		.loc 1 170 0
 626 032c 0000      		nop
 627               	/* epilogue start */
 628 032e 0F90      		pop __tmp_reg__
 629 0330 0F90      		pop __tmp_reg__
 630 0332 DF91      		pop r29
 631 0334 CF91      		pop r28
 632 0336 0895      		ret
 633               		.cfi_endproc
 634               	.LFE71:
 636               	.Letext0:
 637               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 638               		.file 3 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
 639               		.file 4 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 640               		.file 5 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 641               		.file 6 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkFrame.c
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:7      *ABS*:00000001 __zero_reg__
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:14     .bss.n:00000000 n
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:19     .bss.tTS:00000000 tTS
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:24     .bss.nwkFrameFrames:00000000 nwkFrameFrames
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:29     .text:00000000 nwkFrameInit
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:94     .text:0000003e nwkFrameAlloc
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:244    .text:00000122 nwkFrameAlloc_LLDN
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:438    .text:00000252 nwkFrameFree
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:487    .text:00000286 nwkFrameNext
C:\Users\guilh\AppData\Local\Temp\cc54FBeW.s:576    .text:000002ea nwkFrameCommandInit

UNDEFINED SYMBOLS
memset
nwkIb
__do_clear_bss
