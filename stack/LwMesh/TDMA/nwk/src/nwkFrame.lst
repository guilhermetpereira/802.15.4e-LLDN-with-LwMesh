   1               		.file	"nwkFrame.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	n,1,1
  12               		.comm	tTS,4,1
  13               		.section	.bss.nwkFrameFrames,"aw",@nobits
  16               	nwkFrameFrames:
  17 0000 0000 0000 		.zero	2740
  17      0000 0000 
  17      0000 0000 
  17      0000 0000 
  17      0000 0000 
  18               		.text
  19               	.global	nwkFrameInit
  21               	nwkFrameInit:
  22               	.LFB66:
  23               		.file 1 "../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * \file nwkFrame.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * \brief Frame buffers management implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include "sysConfig.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include "nwk.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #include "nwkFrame.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*- Types ------------------------------------------------------------------*/
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** enum {
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	NWK_FRAME_STATE_FREE = 0x00,
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** };
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*- Variables --------------------------------------------------------------*/
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** static NwkFrame_t nwkFrameFrames[NWK_BUFFERS_AMOUNT];
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*- Implementations --------------------------------------------------------*/
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Initializes the Frame module
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** void nwkFrameInit(void)
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
  24               		.loc 1 72 0
  25               		.cfi_startproc
  26 0000 CF93      		push r28
  27               	.LCFI0:
  28               		.cfi_def_cfa_offset 3
  29               		.cfi_offset 28, -2
  30 0002 DF93      		push r29
  31               	.LCFI1:
  32               		.cfi_def_cfa_offset 4
  33               		.cfi_offset 29, -3
  34 0004 1F92      		push __zero_reg__
  35               	.LCFI2:
  36               		.cfi_def_cfa_offset 5
  37 0006 CDB7      		in r28,__SP_L__
  38 0008 DEB7      		in r29,__SP_H__
  39               	.LCFI3:
  40               		.cfi_def_cfa_register 28
  41               	/* prologue: function */
  42               	/* frame size = 1 */
  43               	/* stack size = 3 */
  44               	.L__stack_usage = 3
  45               	.LBB2:
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
  46               		.loc 1 73 0
  47 000a 1982      		std Y+1,__zero_reg__
  48 000c 00C0      		rjmp .L2
  49               	.L3:
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		nwkFrameFrames[i].state = NWK_FRAME_STATE_FREE;
  50               		.loc 1 74 0 discriminator 3
  51 000e 8981      		ldd r24,Y+1
  52 0010 282F      		mov r18,r24
  53 0012 30E0      		ldi r19,0
  54 0014 49E8      		ldi r20,lo8(-119)
  55 0016 429F      		mul r20,r18
  56 0018 C001      		movw r24,r0
  57 001a 439F      		mul r20,r19
  58 001c 900D      		add r25,r0
  59 001e 1124      		clr __zero_reg__
  60 0020 8050      		subi r24,lo8(-(nwkFrameFrames))
  61 0022 9040      		sbci r25,hi8(-(nwkFrameFrames))
  62 0024 FC01      		movw r30,r24
  63 0026 1082      		st Z,__zero_reg__
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
  64               		.loc 1 73 0 discriminator 3
  65 0028 8981      		ldd r24,Y+1
  66 002a 8F5F      		subi r24,lo8(-(1))
  67 002c 8983      		std Y+1,r24
  68               	.L2:
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
  69               		.loc 1 73 0 is_stmt 0 discriminator 1
  70 002e 8981      		ldd r24,Y+1
  71 0030 8431      		cpi r24,lo8(20)
  72 0032 00F0      		brlo .L3
  73               	.LBE2:
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
  74               		.loc 1 76 0 is_stmt 1
  75 0034 0000      		nop
  76               	/* epilogue start */
  77 0036 0F90      		pop __tmp_reg__
  78 0038 DF91      		pop r29
  79 003a CF91      		pop r28
  80 003c 0895      		ret
  81               		.cfi_endproc
  82               	.LFE66:
  84               	.global	nwkFrameAlloc
  86               	nwkFrameAlloc:
  87               	.LFB67:
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Allocates an empty frame from the buffer pool
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @return Pointer to the frame or @c NULL if there are no free frames
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** NwkFrame_t *nwkFrameAlloc(void)
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
  88               		.loc 1 83 0
  89               		.cfi_startproc
  90 003e CF93      		push r28
  91               	.LCFI4:
  92               		.cfi_def_cfa_offset 3
  93               		.cfi_offset 28, -2
  94 0040 DF93      		push r29
  95               	.LCFI5:
  96               		.cfi_def_cfa_offset 4
  97               		.cfi_offset 29, -3
  98 0042 1F92      		push __zero_reg__
  99               	.LCFI6:
 100               		.cfi_def_cfa_offset 5
 101 0044 CDB7      		in r28,__SP_L__
 102 0046 DEB7      		in r29,__SP_H__
 103               	.LCFI7:
 104               		.cfi_def_cfa_register 28
 105               	/* prologue: function */
 106               	/* frame size = 1 */
 107               	/* stack size = 3 */
 108               	.L__stack_usage = 3
 109               	.LBB3:
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
 110               		.loc 1 84 0
 111 0048 1982      		std Y+1,__zero_reg__
 112 004a 00C0      		rjmp .L5
 113               	.L8:
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 114               		.loc 1 85 0
 115 004c 8981      		ldd r24,Y+1
 116 004e 282F      		mov r18,r24
 117 0050 30E0      		ldi r19,0
 118 0052 49E8      		ldi r20,lo8(-119)
 119 0054 429F      		mul r20,r18
 120 0056 C001      		movw r24,r0
 121 0058 439F      		mul r20,r19
 122 005a 900D      		add r25,r0
 123 005c 1124      		clr __zero_reg__
 124 005e 8050      		subi r24,lo8(-(nwkFrameFrames))
 125 0060 9040      		sbci r25,hi8(-(nwkFrameFrames))
 126 0062 FC01      		movw r30,r24
 127 0064 8081      		ld r24,Z
 128 0066 8823      		tst r24
 129 0068 01F0      		breq .+2
 130 006a 00C0      		rjmp .L6
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			memset(&nwkFrameFrames[i], 0, sizeof(NwkFrame_t));
 131               		.loc 1 86 0
 132 006c 8981      		ldd r24,Y+1
 133 006e 282F      		mov r18,r24
 134 0070 30E0      		ldi r19,0
 135 0072 49E8      		ldi r20,lo8(-119)
 136 0074 429F      		mul r20,r18
 137 0076 C001      		movw r24,r0
 138 0078 439F      		mul r20,r19
 139 007a 900D      		add r25,r0
 140 007c 1124      		clr __zero_reg__
 141 007e 8050      		subi r24,lo8(-(nwkFrameFrames))
 142 0080 9040      		sbci r25,hi8(-(nwkFrameFrames))
 143 0082 49E8      		ldi r20,lo8(-119)
 144 0084 50E0      		ldi r21,0
 145 0086 60E0      		ldi r22,0
 146 0088 70E0      		ldi r23,0
 147 008a 0E94 0000 		call memset
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkFrameFrames[i].size = 0;
 148               		.loc 1 87 0
 149 008e 8981      		ldd r24,Y+1
 150 0090 282F      		mov r18,r24
 151 0092 30E0      		ldi r19,0
 152 0094 49E8      		ldi r20,lo8(-119)
 153 0096 429F      		mul r20,r18
 154 0098 C001      		movw r24,r0
 155 009a 439F      		mul r20,r19
 156 009c 900D      		add r25,r0
 157 009e 1124      		clr __zero_reg__
 158 00a0 8050      		subi r24,lo8(-(nwkFrameFrames+1))
 159 00a2 9040      		sbci r25,hi8(-(nwkFrameFrames+1))
 160 00a4 FC01      		movw r30,r24
 161 00a6 1082      		st Z,__zero_reg__
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkFrameFrames[i].payload = nwkFrameFrames[i].data;
 162               		.loc 1 88 0
 163 00a8 8981      		ldd r24,Y+1
 164 00aa 482F      		mov r20,r24
 165 00ac 50E0      		ldi r21,0
 166 00ae 8981      		ldd r24,Y+1
 167 00b0 282F      		mov r18,r24
 168 00b2 30E0      		ldi r19,0
 169 00b4 69E8      		ldi r22,lo8(-119)
 170 00b6 629F      		mul r22,r18
 171 00b8 C001      		movw r24,r0
 172 00ba 639F      		mul r22,r19
 173 00bc 900D      		add r25,r0
 174 00be 1124      		clr __zero_reg__
 175 00c0 0296      		adiw r24,2
 176 00c2 9C01      		movw r18,r24
 177 00c4 2050      		subi r18,lo8(-(nwkFrameFrames))
 178 00c6 3040      		sbci r19,hi8(-(nwkFrameFrames))
 179 00c8 69E8      		ldi r22,lo8(-119)
 180 00ca 649F      		mul r22,r20
 181 00cc C001      		movw r24,r0
 182 00ce 659F      		mul r22,r21
 183 00d0 900D      		add r25,r0
 184 00d2 1124      		clr __zero_reg__
 185 00d4 8050      		subi r24,lo8(-(nwkFrameFrames+129))
 186 00d6 9040      		sbci r25,hi8(-(nwkFrameFrames+129))
 187 00d8 FC01      		movw r30,r24
 188 00da 3183      		std Z+1,r19
 189 00dc 2083      		st Z,r18
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkIb.lock++;
 190               		.loc 1 89 0
 191 00de 8091 0000 		lds r24,nwkIb+38
 192 00e2 9091 0000 		lds r25,nwkIb+38+1
 193 00e6 0196      		adiw r24,1
 194 00e8 9093 0000 		sts nwkIb+38+1,r25
 195 00ec 8093 0000 		sts nwkIb+38,r24
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			return &nwkFrameFrames[i];
 196               		.loc 1 90 0
 197 00f0 8981      		ldd r24,Y+1
 198 00f2 282F      		mov r18,r24
 199 00f4 30E0      		ldi r19,0
 200 00f6 49E8      		ldi r20,lo8(-119)
 201 00f8 429F      		mul r20,r18
 202 00fa C001      		movw r24,r0
 203 00fc 439F      		mul r20,r19
 204 00fe 900D      		add r25,r0
 205 0100 1124      		clr __zero_reg__
 206 0102 8050      		subi r24,lo8(-(nwkFrameFrames))
 207 0104 9040      		sbci r25,hi8(-(nwkFrameFrames))
 208 0106 00C0      		rjmp .L7
 209               	.L6:
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 210               		.loc 1 84 0 discriminator 2
 211 0108 8981      		ldd r24,Y+1
 212 010a 8F5F      		subi r24,lo8(-(1))
 213 010c 8983      		std Y+1,r24
 214               	.L5:
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 215               		.loc 1 84 0 is_stmt 0 discriminator 1
 216 010e 8981      		ldd r24,Y+1
 217 0110 8431      		cpi r24,lo8(20)
 218 0112 00F4      		brsh .+2
 219 0114 00C0      		rjmp .L8
 220               	.LBE3:
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		}
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	return NULL;
 221               		.loc 1 93 0 is_stmt 1
 222 0116 80E0      		ldi r24,0
 223 0118 90E0      		ldi r25,0
 224               	.L7:
 225               	/* epilogue start */
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 226               		.loc 1 94 0
 227 011a 0F90      		pop __tmp_reg__
 228 011c DF91      		pop r29
 229 011e CF91      		pop r28
 230 0120 0895      		ret
 231               		.cfi_endproc
 232               	.LFE67:
 234               	.global	nwkFrameAlloc_LLDN
 236               	nwkFrameAlloc_LLDN:
 237               	.LFB68:
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /* Optimized allocation for lldn */
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** NwkFrame_t *nwkFrameAlloc_LLDN(bool beacon_frame)
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
 238               		.loc 1 98 0
 239               		.cfi_startproc
 240 0122 CF93      		push r28
 241               	.LCFI8:
 242               		.cfi_def_cfa_offset 3
 243               		.cfi_offset 28, -2
 244 0124 DF93      		push r29
 245               	.LCFI9:
 246               		.cfi_def_cfa_offset 4
 247               		.cfi_offset 29, -3
 248 0126 00D0      		rcall .
 249               	.LCFI10:
 250               		.cfi_def_cfa_offset 6
 251 0128 CDB7      		in r28,__SP_L__
 252 012a DEB7      		in r29,__SP_H__
 253               	.LCFI11:
 254               		.cfi_def_cfa_register 28
 255               	/* prologue: function */
 256               	/* frame size = 2 */
 257               	/* stack size = 4 */
 258               	.L__stack_usage = 4
 259 012c 8A83      		std Y+2,r24
 260               	.LBB4:
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (uint8_t i = 0; i < NWK_BUFFERS_AMOUNT; i++) {
 261               		.loc 1 99 0
 262 012e 1982      		std Y+1,__zero_reg__
 263 0130 00C0      		rjmp .L10
 264               	.L15:
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 265               		.loc 1 100 0
 266 0132 8981      		ldd r24,Y+1
 267 0134 282F      		mov r18,r24
 268 0136 30E0      		ldi r19,0
 269 0138 49E8      		ldi r20,lo8(-119)
 270 013a 429F      		mul r20,r18
 271 013c C001      		movw r24,r0
 272 013e 439F      		mul r20,r19
 273 0140 900D      		add r25,r0
 274 0142 1124      		clr __zero_reg__
 275 0144 8050      		subi r24,lo8(-(nwkFrameFrames))
 276 0146 9040      		sbci r25,hi8(-(nwkFrameFrames))
 277 0148 FC01      		movw r30,r24
 278 014a 8081      		ld r24,Z
 279 014c 8823      		tst r24
 280 014e 01F0      		breq .+2
 281 0150 00C0      		rjmp .L11
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			// clear memory of previous frame
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			memset(&nwkFrameFrames[i], 0, sizeof(NwkFrame_t));
 282               		.loc 1 102 0
 283 0152 8981      		ldd r24,Y+1
 284 0154 282F      		mov r18,r24
 285 0156 30E0      		ldi r19,0
 286 0158 49E8      		ldi r20,lo8(-119)
 287 015a 429F      		mul r20,r18
 288 015c C001      		movw r24,r0
 289 015e 439F      		mul r20,r19
 290 0160 900D      		add r25,r0
 291 0162 1124      		clr __zero_reg__
 292 0164 8050      		subi r24,lo8(-(nwkFrameFrames))
 293 0166 9040      		sbci r25,hi8(-(nwkFrameFrames))
 294 0168 49E8      		ldi r20,lo8(-119)
 295 016a 50E0      		ldi r21,0
 296 016c 60E0      		ldi r22,0
 297 016e 70E0      		ldi r23,0
 298 0170 0E94 0000 		call memset
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			// store in size initial size of frame, only it's MHR structure
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			if(beacon_frame)
 299               		.loc 1 104 0
 300 0174 8A81      		ldd r24,Y+2
 301 0176 8823      		tst r24
 302 0178 01F0      		breq .L12
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			{
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 				nwkFrameFrames[i].size = sizeof(NwkFrameBeaconHeaderLLDN_t);
 303               		.loc 1 106 0
 304 017a 8981      		ldd r24,Y+1
 305 017c 282F      		mov r18,r24
 306 017e 30E0      		ldi r19,0
 307 0180 49E8      		ldi r20,lo8(-119)
 308 0182 429F      		mul r20,r18
 309 0184 C001      		movw r24,r0
 310 0186 439F      		mul r20,r19
 311 0188 900D      		add r25,r0
 312 018a 1124      		clr __zero_reg__
 313 018c 8050      		subi r24,lo8(-(nwkFrameFrames+1))
 314 018e 9040      		sbci r25,hi8(-(nwkFrameFrames+1))
 315 0190 27E0      		ldi r18,lo8(7)
 316 0192 FC01      		movw r30,r24
 317 0194 2083      		st Z,r18
 318 0196 00C0      		rjmp .L13
 319               	.L12:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			}
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			else
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			{
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 				// data, mac command and group ack share the same MHR structure
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 				nwkFrameFrames[i].size = sizeof(NwkFrameGeneralHeaderLLDN_t);
 320               		.loc 1 111 0
 321 0198 8981      		ldd r24,Y+1
 322 019a 282F      		mov r18,r24
 323 019c 30E0      		ldi r19,0
 324 019e 49E8      		ldi r20,lo8(-119)
 325 01a0 429F      		mul r20,r18
 326 01a2 C001      		movw r24,r0
 327 01a4 439F      		mul r20,r19
 328 01a6 900D      		add r25,r0
 329 01a8 1124      		clr __zero_reg__
 330 01aa 8050      		subi r24,lo8(-(nwkFrameFrames+1))
 331 01ac 9040      		sbci r25,hi8(-(nwkFrameFrames+1))
 332 01ae 23E0      		ldi r18,lo8(3)
 333 01b0 FC01      		movw r30,r24
 334 01b2 2083      		st Z,r18
 335               	.L13:
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			}
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			// offset payload to end of MHR structure
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkFrameFrames[i].payload = nwkFrameFrames[i].data
 336               		.loc 1 114 0
 337 01b4 8981      		ldd r24,Y+1
 338 01b6 482F      		mov r20,r24
 339 01b8 50E0      		ldi r21,0
 340 01ba 8981      		ldd r24,Y+1
 341 01bc 282F      		mov r18,r24
 342 01be 30E0      		ldi r19,0
 343 01c0 69E8      		ldi r22,lo8(-119)
 344 01c2 629F      		mul r22,r18
 345 01c4 C001      		movw r24,r0
 346 01c6 639F      		mul r22,r19
 347 01c8 900D      		add r25,r0
 348 01ca 1124      		clr __zero_reg__
 349 01cc 0296      		adiw r24,2
 350 01ce 9C01      		movw r18,r24
 351 01d0 2050      		subi r18,lo8(-(nwkFrameFrames))
 352 01d2 3040      		sbci r19,hi8(-(nwkFrameFrames))
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 							+ nwkFrameFrames[i].size;
 353               		.loc 1 115 0
 354 01d4 8981      		ldd r24,Y+1
 355 01d6 682F      		mov r22,r24
 356 01d8 70E0      		ldi r23,0
 357 01da E9E8      		ldi r30,lo8(-119)
 358 01dc E69F      		mul r30,r22
 359 01de C001      		movw r24,r0
 360 01e0 E79F      		mul r30,r23
 361 01e2 900D      		add r25,r0
 362 01e4 1124      		clr __zero_reg__
 363 01e6 8050      		subi r24,lo8(-(nwkFrameFrames+1))
 364 01e8 9040      		sbci r25,hi8(-(nwkFrameFrames+1))
 365 01ea FC01      		movw r30,r24
 366 01ec 8081      		ld r24,Z
 367 01ee 882F      		mov r24,r24
 368 01f0 90E0      		ldi r25,0
 369 01f2 280F      		add r18,r24
 370 01f4 391F      		adc r19,r25
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 							+ nwkFrameFrames[i].size;
 371               		.loc 1 114 0
 372 01f6 69E8      		ldi r22,lo8(-119)
 373 01f8 649F      		mul r22,r20
 374 01fa C001      		movw r24,r0
 375 01fc 659F      		mul r22,r21
 376 01fe 900D      		add r25,r0
 377 0200 1124      		clr __zero_reg__
 378 0202 8050      		subi r24,lo8(-(nwkFrameFrames+129))
 379 0204 9040      		sbci r25,hi8(-(nwkFrameFrames+129))
 380 0206 FC01      		movw r30,r24
 381 0208 3183      		std Z+1,r19
 382 020a 2083      		st Z,r18
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			nwkIb.lock++;
 383               		.loc 1 117 0
 384 020c 8091 0000 		lds r24,nwkIb+38
 385 0210 9091 0000 		lds r25,nwkIb+38+1
 386 0214 0196      		adiw r24,1
 387 0216 9093 0000 		sts nwkIb+38+1,r25
 388 021a 8093 0000 		sts nwkIb+38,r24
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			return &nwkFrameFrames[i];
 389               		.loc 1 118 0
 390 021e 8981      		ldd r24,Y+1
 391 0220 282F      		mov r18,r24
 392 0222 30E0      		ldi r19,0
 393 0224 49E8      		ldi r20,lo8(-119)
 394 0226 429F      		mul r20,r18
 395 0228 C001      		movw r24,r0
 396 022a 439F      		mul r20,r19
 397 022c 900D      		add r25,r0
 398 022e 1124      		clr __zero_reg__
 399 0230 8050      		subi r24,lo8(-(nwkFrameFrames))
 400 0232 9040      		sbci r25,hi8(-(nwkFrameFrames))
 401 0234 00C0      		rjmp .L14
 402               	.L11:
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 403               		.loc 1 99 0 discriminator 2
 404 0236 8981      		ldd r24,Y+1
 405 0238 8F5F      		subi r24,lo8(-(1))
 406 023a 8983      		std Y+1,r24
 407               	.L10:
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE == nwkFrameFrames[i].state) {
 408               		.loc 1 99 0 is_stmt 0 discriminator 1
 409 023c 8981      		ldd r24,Y+1
 410 023e 8431      		cpi r24,lo8(20)
 411 0240 00F4      		brsh .+2
 412 0242 00C0      		rjmp .L15
 413               	.LBE4:
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		}
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	return NULL;
 414               		.loc 1 121 0 is_stmt 1
 415 0244 80E0      		ldi r24,0
 416 0246 90E0      		ldi r25,0
 417               	.L14:
 418               	/* epilogue start */
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 419               		.loc 1 122 0
 420 0248 0F90      		pop __tmp_reg__
 421 024a 0F90      		pop __tmp_reg__
 422 024c DF91      		pop r29
 423 024e CF91      		pop r28
 424 0250 0895      		ret
 425               		.cfi_endproc
 426               	.LFE68:
 428               	.global	nwkFrameFree
 430               	nwkFrameFree:
 431               	.LFB69:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Frees a @a frame and returns it to the buffer pool
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @param[in] frame Pointer to the frame to be freed
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** void nwkFrameFree(NwkFrame_t *frame)
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
 432               		.loc 1 130 0
 433               		.cfi_startproc
 434 0252 CF93      		push r28
 435               	.LCFI12:
 436               		.cfi_def_cfa_offset 3
 437               		.cfi_offset 28, -2
 438 0254 DF93      		push r29
 439               	.LCFI13:
 440               		.cfi_def_cfa_offset 4
 441               		.cfi_offset 29, -3
 442 0256 00D0      		rcall .
 443               	.LCFI14:
 444               		.cfi_def_cfa_offset 6
 445 0258 CDB7      		in r28,__SP_L__
 446 025a DEB7      		in r29,__SP_H__
 447               	.LCFI15:
 448               		.cfi_def_cfa_register 28
 449               	/* prologue: function */
 450               	/* frame size = 2 */
 451               	/* stack size = 4 */
 452               	.L__stack_usage = 4
 453 025c 9A83      		std Y+2,r25
 454 025e 8983      		std Y+1,r24
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->state = NWK_FRAME_STATE_FREE;
 455               		.loc 1 131 0
 456 0260 8981      		ldd r24,Y+1
 457 0262 9A81      		ldd r25,Y+2
 458 0264 FC01      		movw r30,r24
 459 0266 1082      		st Z,__zero_reg__
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	nwkIb.lock--;
 460               		.loc 1 132 0
 461 0268 8091 0000 		lds r24,nwkIb+38
 462 026c 9091 0000 		lds r25,nwkIb+38+1
 463 0270 0197      		sbiw r24,1
 464 0272 9093 0000 		sts nwkIb+38+1,r25
 465 0276 8093 0000 		sts nwkIb+38,r24
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 466               		.loc 1 133 0
 467 027a 0000      		nop
 468               	/* epilogue start */
 469 027c 0F90      		pop __tmp_reg__
 470 027e 0F90      		pop __tmp_reg__
 471 0280 DF91      		pop r29
 472 0282 CF91      		pop r28
 473 0284 0895      		ret
 474               		.cfi_endproc
 475               	.LFE69:
 477               	.global	nwkFrameNext
 479               	nwkFrameNext:
 480               	.LFB70:
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Cycles through the allocated frames starting from the specified @a
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** * frame
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @param[in] frame Pointer to the current frame or @c NULL for the first frame
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @return Next allocated frame or @c NULL if there are no more frames
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** NwkFrame_t *nwkFrameNext(NwkFrame_t *frame)
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
 481               		.loc 1 142 0
 482               		.cfi_startproc
 483 0286 CF93      		push r28
 484               	.LCFI16:
 485               		.cfi_def_cfa_offset 3
 486               		.cfi_offset 28, -2
 487 0288 DF93      		push r29
 488               	.LCFI17:
 489               		.cfi_def_cfa_offset 4
 490               		.cfi_offset 29, -3
 491 028a 00D0      		rcall .
 492               	.LCFI18:
 493               		.cfi_def_cfa_offset 6
 494 028c CDB7      		in r28,__SP_L__
 495 028e DEB7      		in r29,__SP_H__
 496               	.LCFI19:
 497               		.cfi_def_cfa_register 28
 498               	/* prologue: function */
 499               	/* frame size = 2 */
 500               	/* stack size = 4 */
 501               	.L__stack_usage = 4
 502 0290 9A83      		std Y+2,r25
 503 0292 8983      		std Y+1,r24
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	if (NULL == frame) {
 504               		.loc 1 143 0
 505 0294 8981      		ldd r24,Y+1
 506 0296 9A81      		ldd r25,Y+2
 507 0298 892B      		or r24,r25
 508 029a 01F4      		brne .L18
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		frame = nwkFrameFrames;
 509               		.loc 1 144 0
 510 029c 80E0      		ldi r24,lo8(nwkFrameFrames)
 511 029e 90E0      		ldi r25,hi8(nwkFrameFrames)
 512 02a0 9A83      		std Y+2,r25
 513 02a2 8983      		std Y+1,r24
 514 02a4 00C0      		rjmp .L20
 515               	.L18:
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	} else {
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		frame++;
 516               		.loc 1 146 0
 517 02a6 8981      		ldd r24,Y+1
 518 02a8 9A81      		ldd r25,Y+2
 519 02aa 8757      		subi r24,119
 520 02ac 9F4F      		sbci r25,-1
 521 02ae 9A83      		std Y+2,r25
 522 02b0 8983      		std Y+1,r24
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	for (; frame < &nwkFrameFrames[NWK_BUFFERS_AMOUNT]; frame++) {
 523               		.loc 1 149 0
 524 02b2 00C0      		rjmp .L20
 525               	.L23:
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE != frame->state) {
 526               		.loc 1 150 0
 527 02b4 8981      		ldd r24,Y+1
 528 02b6 9A81      		ldd r25,Y+2
 529 02b8 FC01      		movw r30,r24
 530 02ba 8081      		ld r24,Z
 531 02bc 8823      		tst r24
 532 02be 01F0      		breq .L21
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 			return frame;
 533               		.loc 1 151 0
 534 02c0 8981      		ldd r24,Y+1
 535 02c2 9A81      		ldd r25,Y+2
 536 02c4 00C0      		rjmp .L22
 537               	.L21:
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE != frame->state) {
 538               		.loc 1 149 0
 539 02c6 8981      		ldd r24,Y+1
 540 02c8 9A81      		ldd r25,Y+2
 541 02ca 8757      		subi r24,119
 542 02cc 9F4F      		sbci r25,-1
 543 02ce 9A83      		std Y+2,r25
 544 02d0 8983      		std Y+1,r24
 545               	.L20:
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		if (NWK_FRAME_STATE_FREE != frame->state) {
 546               		.loc 1 149 0 is_stmt 0 discriminator 1
 547 02d2 8981      		ldd r24,Y+1
 548 02d4 9A81      		ldd r25,Y+2
 549 02d6 8050      		subi r24,lo8(nwkFrameFrames+2740)
 550 02d8 9040      		sbci r25,hi8(nwkFrameFrames+2740)
 551 02da 00F0      		brlo .L23
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 		}
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	}
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	return NULL;
 552               		.loc 1 155 0 is_stmt 1
 553 02dc 80E0      		ldi r24,0
 554 02de 90E0      		ldi r25,0
 555               	.L22:
 556               	/* epilogue start */
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 557               		.loc 1 156 0
 558 02e0 0F90      		pop __tmp_reg__
 559 02e2 0F90      		pop __tmp_reg__
 560 02e4 DF91      		pop r29
 561 02e6 CF91      		pop r28
 562 02e8 0895      		ret
 563               		.cfi_endproc
 564               	.LFE70:
 566               	.global	nwkFrameCommandInit
 568               	nwkFrameCommandInit:
 569               	.LFB71:
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** /*************************************************************************//**
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @brief Sets default parameters for the the command @a frame
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *  @param[in] frame Pointer to the command frame
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** *****************************************************************************/
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** void nwkFrameCommandInit(NwkFrame_t *frame)
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** {
 570               		.loc 1 163 0
 571               		.cfi_startproc
 572 02ea CF93      		push r28
 573               	.LCFI20:
 574               		.cfi_def_cfa_offset 3
 575               		.cfi_offset 28, -2
 576 02ec DF93      		push r29
 577               	.LCFI21:
 578               		.cfi_def_cfa_offset 4
 579               		.cfi_offset 29, -3
 580 02ee 00D0      		rcall .
 581               	.LCFI22:
 582               		.cfi_def_cfa_offset 6
 583 02f0 CDB7      		in r28,__SP_L__
 584 02f2 DEB7      		in r29,__SP_H__
 585               	.LCFI23:
 586               		.cfi_def_cfa_register 28
 587               	/* prologue: function */
 588               	/* frame size = 2 */
 589               	/* stack size = 4 */
 590               	.L__stack_usage = 4
 591 02f4 9A83      		std Y+2,r25
 592 02f6 8983      		std Y+1,r24
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->tx.status = NWK_SUCCESS_STATUS;
 593               		.loc 1 164 0
 594 02f8 8981      		ldd r24,Y+1
 595 02fa 9A81      		ldd r25,Y+2
 596 02fc 8D57      		subi r24,125
 597 02fe 9F4F      		sbci r25,-1
 598 0300 FC01      		movw r30,r24
 599 0302 1082      		st Z,__zero_reg__
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 600               		.loc 1 165 0
 601 0304 8091 0000 		lds r24,nwkIb+4
 602 0308 8F5F      		subi r24,lo8(-(1))
 603 030a 8093 0000 		sts nwkIb+4,r24
 604 030e 2091 0000 		lds r18,nwkIb+4
 605 0312 8981      		ldd r24,Y+1
 606 0314 9A81      		ldd r25,Y+2
 607 0316 FC01      		movw r30,r24
 608 0318 2487      		std Z+12,r18
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->header.nwkSrcAddr = nwkIb.addr;
 609               		.loc 1 166 0
 610 031a 2091 0000 		lds r18,nwkIb
 611 031e 3091 0000 		lds r19,nwkIb+1
 612 0322 8981      		ldd r24,Y+1
 613 0324 9A81      		ldd r25,Y+2
 614 0326 FC01      		movw r30,r24
 615 0328 3687      		std Z+14,r19
 616 032a 2587      		std Z+13,r18
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #ifdef NWK_ENABLE_SECURE_COMMANDS
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** 	frame->header.nwkFcf.security = 1;
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** #endif
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkFrame.c **** }
 617               		.loc 1 170 0
 618 032c 0000      		nop
 619               	/* epilogue start */
 620 032e 0F90      		pop __tmp_reg__
 621 0330 0F90      		pop __tmp_reg__
 622 0332 DF91      		pop r29
 623 0334 CF91      		pop r28
 624 0336 0895      		ret
 625               		.cfi_endproc
 626               	.LFE71:
 628               	.Letext0:
 629               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 630               		.file 3 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
 631               		.file 4 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 632               		.file 5 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 633               		.file 6 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkFrame.c
C:\Users\GUILHE~1\AppData\Local\Temp\cck6tjQJ.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cck6tjQJ.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cck6tjQJ.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cck6tjQJ.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cck6tjQJ.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cck6tjQJ.s:7      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 n
                            *COM*:00000004 tTS
C:\Users\GUILHE~1\AppData\Local\Temp\cck6tjQJ.s:16     .bss.nwkFrameFrames:00000000 nwkFrameFrames
C:\Users\GUILHE~1\AppData\Local\Temp\cck6tjQJ.s:21     .text:00000000 nwkFrameInit
C:\Users\GUILHE~1\AppData\Local\Temp\cck6tjQJ.s:86     .text:0000003e nwkFrameAlloc
C:\Users\GUILHE~1\AppData\Local\Temp\cck6tjQJ.s:236    .text:00000122 nwkFrameAlloc_LLDN
C:\Users\GUILHE~1\AppData\Local\Temp\cck6tjQJ.s:430    .text:00000252 nwkFrameFree
C:\Users\GUILHE~1\AppData\Local\Temp\cck6tjQJ.s:479    .text:00000286 nwkFrameNext
C:\Users\GUILHE~1\AppData\Local\Temp\cck6tjQJ.s:568    .text:000002ea nwkFrameCommandInit

UNDEFINED SYMBOLS
memset
nwkIb
__do_clear_bss
