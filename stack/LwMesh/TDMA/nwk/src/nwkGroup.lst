   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "nwkGroup.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .comm n,1,1
  27              	 .section .bss.tTS,"aw",%nobits
  28              	 .align 2
  31              	tTS:
  32 0000 00000000 	 .space 4
  33              	 .section .bss.nwkGroups,"aw",%nobits
  34              	 .align 2
  37              	nwkGroups:
  38 0000 00000000 	 .space 6
  38      0000
  39              	 .text
  40              	 .align 1
  41              	 .global nwkGroupInit
  42              	 .syntax unified
  43              	 .thumb
  44              	 .thumb_func
  45              	 .fpu softvfp
  47              	nwkGroupInit:
  48              	.LFB126:
  49              	 .file 1 "../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \file nwkGroup.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \brief Multicast group management implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include "sysConfig.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include "nwkGroup.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #ifdef NWK_ENABLE_MULTICAST
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Definitions ------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #define NWK_GROUP_FREE      0xffff
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Prototypes -------------------------------------------------------------*/
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** static bool nwkGroupSwitch(uint16_t from, uint16_t to);
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Variables --------------------------------------------------------------*/
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** static uint16_t nwkGroups[NWK_GROUPS_AMOUNT];
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Implementations --------------------------------------------------------*/
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Initializes the Group module
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** void nwkGroupInit(void)
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
  50              	 .loc 1 74 0
  51              	 .cfi_startproc
  52              	 
  53              	 
  54              	 
  55 0000 80B4     	 push {r7}
  56              	.LCFI0:
  57              	 .cfi_def_cfa_offset 4
  58              	 .cfi_offset 7,-4
  59 0002 83B0     	 sub sp,sp,#12
  60              	.LCFI1:
  61              	 .cfi_def_cfa_offset 16
  62 0004 00AF     	 add r7,sp,#0
  63              	.LCFI2:
  64              	 .cfi_def_cfa_register 7
  65              	.LBB2:
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
  66              	 .loc 1 75 0
  67 0006 0023     	 movs r3,#0
  68 0008 FB71     	 strb r3,[r7,#7]
  69 000a 08E0     	 b .L2
  70              	.L3:
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		nwkGroups[i] = NWK_GROUP_FREE;
  71              	 .loc 1 76 0 discriminator 3
  72 000c FB79     	 ldrb r3,[r7,#7]
  73 000e 084A     	 ldr r2,.L4
  74 0010 4FF6FF71 	 movw r1,#65535
  75 0014 22F81310 	 strh r1,[r2,r3,lsl#1]
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
  76              	 .loc 1 75 0 discriminator 3
  77 0018 FB79     	 ldrb r3,[r7,#7]
  78 001a 0133     	 adds r3,r3,#1
  79 001c FB71     	 strb r3,[r7,#7]
  80              	.L2:
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
  81              	 .loc 1 75 0 is_stmt 0 discriminator 1
  82 001e FB79     	 ldrb r3,[r7,#7]
  83 0020 022B     	 cmp r3,#2
  84 0022 F3D9     	 bls .L3
  85              	.LBE2:
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	}
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
  86              	 .loc 1 78 0 is_stmt 1
  87 0024 00BF     	 nop
  88 0026 0C37     	 adds r7,r7,#12
  89              	.LCFI3:
  90              	 .cfi_def_cfa_offset 4
  91 0028 BD46     	 mov sp,r7
  92              	.LCFI4:
  93              	 .cfi_def_cfa_register 13
  94              	 
  95 002a 80BC     	 pop {r7}
  96              	.LCFI5:
  97              	 .cfi_restore 7
  98              	 .cfi_def_cfa_offset 0
  99 002c 7047     	 bx lr
 100              	.L5:
 101 002e 00BF     	 .align 2
 102              	.L4:
 103 0030 00000000 	 .word nwkGroups
 104              	 .cfi_endproc
 105              	.LFE126:
 107              	 .align 1
 108              	 .global NWK_GroupAdd
 109              	 .syntax unified
 110              	 .thumb
 111              	 .thumb_func
 112              	 .fpu softvfp
 114              	NWK_GroupAdd:
 115              	.LFB127:
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Adds node to the @a group
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] group Group ID
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true in case of success and @c false otherwise
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** bool NWK_GroupAdd(uint16_t group)
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
 116              	 .loc 1 86 0
 117              	 .cfi_startproc
 118              	 
 119              	 
 120 0034 80B5     	 push {r7,lr}
 121              	.LCFI6:
 122              	 .cfi_def_cfa_offset 8
 123              	 .cfi_offset 7,-8
 124              	 .cfi_offset 14,-4
 125 0036 82B0     	 sub sp,sp,#8
 126              	.LCFI7:
 127              	 .cfi_def_cfa_offset 16
 128 0038 00AF     	 add r7,sp,#0
 129              	.LCFI8:
 130              	 .cfi_def_cfa_register 7
 131 003a 0346     	 mov r3,r0
 132 003c FB80     	 strh r3,[r7,#6]
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return nwkGroupSwitch(NWK_GROUP_FREE, group);
 133              	 .loc 1 87 0
 134 003e FB88     	 ldrh r3,[r7,#6]
 135 0040 1946     	 mov r1,r3
 136 0042 4FF6FF70 	 movw r0,#65535
 137 0046 00F035F8 	 bl nwkGroupSwitch
 138 004a 0346     	 mov r3,r0
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 139              	 .loc 1 88 0
 140 004c 1846     	 mov r0,r3
 141 004e 0837     	 adds r7,r7,#8
 142              	.LCFI9:
 143              	 .cfi_def_cfa_offset 8
 144 0050 BD46     	 mov sp,r7
 145              	.LCFI10:
 146              	 .cfi_def_cfa_register 13
 147              	 
 148 0052 80BD     	 pop {r7,pc}
 149              	 .cfi_endproc
 150              	.LFE127:
 152              	 .align 1
 153              	 .global NWK_GroupRemove
 154              	 .syntax unified
 155              	 .thumb
 156              	 .thumb_func
 157              	 .fpu softvfp
 159              	NWK_GroupRemove:
 160              	.LFB128:
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Removes node from the @a group
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] group Group ID
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true in case of success and @c false otherwise
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** bool NWK_GroupRemove(uint16_t group)
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
 161              	 .loc 1 96 0
 162              	 .cfi_startproc
 163              	 
 164              	 
 165 0054 80B5     	 push {r7,lr}
 166              	.LCFI11:
 167              	 .cfi_def_cfa_offset 8
 168              	 .cfi_offset 7,-8
 169              	 .cfi_offset 14,-4
 170 0056 82B0     	 sub sp,sp,#8
 171              	.LCFI12:
 172              	 .cfi_def_cfa_offset 16
 173 0058 00AF     	 add r7,sp,#0
 174              	.LCFI13:
 175              	 .cfi_def_cfa_register 7
 176 005a 0346     	 mov r3,r0
 177 005c FB80     	 strh r3,[r7,#6]
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return nwkGroupSwitch(group, NWK_GROUP_FREE);
 178              	 .loc 1 97 0
 179 005e FB88     	 ldrh r3,[r7,#6]
 180 0060 4FF6FF71 	 movw r1,#65535
 181 0064 1846     	 mov r0,r3
 182 0066 00F025F8 	 bl nwkGroupSwitch
 183 006a 0346     	 mov r3,r0
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 184              	 .loc 1 98 0
 185 006c 1846     	 mov r0,r3
 186 006e 0837     	 adds r7,r7,#8
 187              	.LCFI14:
 188              	 .cfi_def_cfa_offset 8
 189 0070 BD46     	 mov sp,r7
 190              	.LCFI15:
 191              	 .cfi_def_cfa_register 13
 192              	 
 193 0072 80BD     	 pop {r7,pc}
 194              	 .cfi_endproc
 195              	.LFE128:
 197              	 .align 1
 198              	 .global NWK_GroupIsMember
 199              	 .syntax unified
 200              	 .thumb
 201              	 .thumb_func
 202              	 .fpu softvfp
 204              	NWK_GroupIsMember:
 205              	.LFB129:
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Verifies if node is a member of the @a group
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] group Group ID
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true if node is a member of the group and @c false otherwise
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** bool NWK_GroupIsMember(uint16_t group)
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
 206              	 .loc 1 106 0
 207              	 .cfi_startproc
 208              	 
 209              	 
 210              	 
 211 0074 80B4     	 push {r7}
 212              	.LCFI16:
 213              	 .cfi_def_cfa_offset 4
 214              	 .cfi_offset 7,-4
 215 0076 85B0     	 sub sp,sp,#20
 216              	.LCFI17:
 217              	 .cfi_def_cfa_offset 24
 218 0078 00AF     	 add r7,sp,#0
 219              	.LCFI18:
 220              	 .cfi_def_cfa_register 7
 221 007a 0346     	 mov r3,r0
 222 007c FB80     	 strh r3,[r7,#6]
 223              	.LBB3:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 224              	 .loc 1 107 0
 225 007e 0023     	 movs r3,#0
 226 0080 FB73     	 strb r3,[r7,#15]
 227 0082 0BE0     	 b .L11
 228              	.L14:
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (group == nwkGroups[i]) {
 229              	 .loc 1 108 0
 230 0084 FB7B     	 ldrb r3,[r7,#15]
 231 0086 0A4A     	 ldr r2,.L15
 232 0088 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 233 008c FA88     	 ldrh r2,[r7,#6]
 234 008e 9A42     	 cmp r2,r3
 235 0090 01D1     	 bne .L12
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 			return true;
 236              	 .loc 1 109 0
 237 0092 0123     	 movs r3,#1
 238 0094 06E0     	 b .L13
 239              	.L12:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 240              	 .loc 1 107 0 discriminator 2
 241 0096 FB7B     	 ldrb r3,[r7,#15]
 242 0098 0133     	 adds r3,r3,#1
 243 009a FB73     	 strb r3,[r7,#15]
 244              	.L11:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 245              	 .loc 1 107 0 is_stmt 0 discriminator 1
 246 009c FB7B     	 ldrb r3,[r7,#15]
 247 009e 022B     	 cmp r3,#2
 248 00a0 F0D9     	 bls .L14
 249              	.LBE3:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		}
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	}
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return false;
 250              	 .loc 1 112 0 is_stmt 1
 251 00a2 0023     	 movs r3,#0
 252              	.L13:
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 253              	 .loc 1 113 0
 254 00a4 1846     	 mov r0,r3
 255 00a6 1437     	 adds r7,r7,#20
 256              	.LCFI19:
 257              	 .cfi_def_cfa_offset 4
 258 00a8 BD46     	 mov sp,r7
 259              	.LCFI20:
 260              	 .cfi_def_cfa_register 13
 261              	 
 262 00aa 80BC     	 pop {r7}
 263              	.LCFI21:
 264              	 .cfi_restore 7
 265              	 .cfi_def_cfa_offset 0
 266 00ac 7047     	 bx lr
 267              	.L16:
 268 00ae 00BF     	 .align 2
 269              	.L15:
 270 00b0 00000000 	 .word nwkGroups
 271              	 .cfi_endproc
 272              	.LFE129:
 274              	 .align 1
 275              	 .syntax unified
 276              	 .thumb
 277              	 .thumb_func
 278              	 .fpu softvfp
 280              	nwkGroupSwitch:
 281              	.LFB130:
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Switches records with IDs @a from and @a to in the the group table
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] from Source group ID
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] to   Destination group ID
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true if @a from entry was found and @c false otherwise
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** static bool nwkGroupSwitch(uint16_t from, uint16_t to)
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
 282              	 .loc 1 122 0
 283              	 .cfi_startproc
 284              	 
 285              	 
 286              	 
 287 00b4 80B4     	 push {r7}
 288              	.LCFI22:
 289              	 .cfi_def_cfa_offset 4
 290              	 .cfi_offset 7,-4
 291 00b6 85B0     	 sub sp,sp,#20
 292              	.LCFI23:
 293              	 .cfi_def_cfa_offset 24
 294 00b8 00AF     	 add r7,sp,#0
 295              	.LCFI24:
 296              	 .cfi_def_cfa_register 7
 297 00ba 0346     	 mov r3,r0
 298 00bc 0A46     	 mov r2,r1
 299 00be FB80     	 strh r3,[r7,#6]
 300 00c0 1346     	 mov r3,r2
 301 00c2 BB80     	 strh r3,[r7,#4]
 302              	.LBB4:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 303              	 .loc 1 123 0
 304 00c4 0023     	 movs r3,#0
 305 00c6 FB73     	 strb r3,[r7,#15]
 306 00c8 10E0     	 b .L18
 307              	.L21:
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (from == nwkGroups[i]) {
 308              	 .loc 1 124 0
 309 00ca FB7B     	 ldrb r3,[r7,#15]
 310 00cc 0C4A     	 ldr r2,.L22
 311 00ce 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 312 00d2 FA88     	 ldrh r2,[r7,#6]
 313 00d4 9A42     	 cmp r2,r3
 314 00d6 06D1     	 bne .L19
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 			nwkGroups[i] = to;
 315              	 .loc 1 125 0
 316 00d8 FB7B     	 ldrb r3,[r7,#15]
 317 00da 0949     	 ldr r1,.L22
 318 00dc BA88     	 ldrh r2,[r7,#4]
 319 00de 21F81320 	 strh r2,[r1,r3,lsl#1]
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 			return true;
 320              	 .loc 1 126 0
 321 00e2 0123     	 movs r3,#1
 322 00e4 06E0     	 b .L20
 323              	.L19:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (from == nwkGroups[i]) {
 324              	 .loc 1 123 0 discriminator 2
 325 00e6 FB7B     	 ldrb r3,[r7,#15]
 326 00e8 0133     	 adds r3,r3,#1
 327 00ea FB73     	 strb r3,[r7,#15]
 328              	.L18:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (from == nwkGroups[i]) {
 329              	 .loc 1 123 0 is_stmt 0 discriminator 1
 330 00ec FB7B     	 ldrb r3,[r7,#15]
 331 00ee 022B     	 cmp r3,#2
 332 00f0 EBD9     	 bls .L21
 333              	.LBE4:
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		}
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	}
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return false;
 334              	 .loc 1 129 0 is_stmt 1
 335 00f2 0023     	 movs r3,#0
 336              	.L20:
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 337              	 .loc 1 130 0
 338 00f4 1846     	 mov r0,r3
 339 00f6 1437     	 adds r7,r7,#20
 340              	.LCFI25:
 341              	 .cfi_def_cfa_offset 4
 342 00f8 BD46     	 mov sp,r7
 343              	.LCFI26:
 344              	 .cfi_def_cfa_register 13
 345              	 
 346 00fa 80BC     	 pop {r7}
 347              	.LCFI27:
 348              	 .cfi_restore 7
 349              	 .cfi_def_cfa_offset 0
 350 00fc 7047     	 bx lr
 351              	.L23:
 352 00fe 00BF     	 .align 2
 353              	.L22:
 354 0100 00000000 	 .word nwkGroups
 355              	 .cfi_endproc
 356              	.LFE130:
 358              	.Letext0:
 359              	 .file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 360              	 .file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 361              	 .file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 362              	 .file 5 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 363              	 .file 6 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 364              	 .file 7 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdlib.h"
 365              	 .file 8 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 366              	 .file 9 "../../../platform/thirdparty/CMSIS/include/core_cm4.h"
 367              	 .file 10 "../../../platform/sam/utils/cmsis/sam4l/source/templates/system_sam4l.h"
 368              	 .file 11 "../../../platform/common/utils/interrupt/interrupt_sam_nvic.h"
 369              	 .file 12 "../../../platform/sam/utils/compiler.h"
 370              	 .file 13 "../../../platform/common/services/usb/usb_protocol.h"
 371              	 .file 14 "../../../platform/common/services/usb/udc/udi.h"
 372              	 .file 15 "../../../platform/common/services/usb/udc/udc_desc.h"
 373              	 .file 16 "../../../platform/common/services/usb/udc/udd.h"
 374              	 .file 17 "../../../platform/common/services/usb/class/cdc/device/udi_cdc.h"
 375              	 .file 18 "../../../platform/common/utils/stdio/stdio_usb/stdio_usb.h"
 376              	 .file 19 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkGroup.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
                            *COM*:00000001 n
    {standard input}:28     .bss.tTS:00000000 $d
    {standard input}:31     .bss.tTS:00000000 tTS
    {standard input}:34     .bss.nwkGroups:00000000 $d
    {standard input}:37     .bss.nwkGroups:00000000 nwkGroups
    {standard input}:40     .text:00000000 $t
    {standard input}:47     .text:00000000 nwkGroupInit
    {standard input}:103    .text:00000030 $d
    {standard input}:107    .text:00000034 $t
    {standard input}:114    .text:00000034 NWK_GroupAdd
    {standard input}:280    .text:000000b4 nwkGroupSwitch
    {standard input}:159    .text:00000054 NWK_GroupRemove
    {standard input}:204    .text:00000074 NWK_GroupIsMember
    {standard input}:270    .text:000000b0 $d
    {standard input}:274    .text:000000b4 $t
    {standard input}:354    .text:00000100 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
