   1               		.file	"nwkGroup.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	n,1,1
  12               		.comm	tTS,4,1
  13               		.comm	macLLDNnumTimeSlots,2,1
  14               		.comm	macLLDNnumUplinkTS,2,1
  15               		.comm	macLLDNRetransmitTS,2,1
  16               		.section	.bss.nwkGroups,"aw",@nobits
  19               	nwkGroups:
  20 0000 0000 0000 		.zero	6
  20      0000 
  21               		.text
  22               	.global	nwkGroupInit
  24               	nwkGroupInit:
  25               	.LFB65:
  26               		.file 1 "../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \file nwkGroup.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \brief Multicast group management implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include "sysConfig.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include "nwkGroup.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #ifdef NWK_ENABLE_MULTICAST
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Definitions ------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #define NWK_GROUP_FREE      0xffff
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Prototypes -------------------------------------------------------------*/
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** static bool nwkGroupSwitch(uint16_t from, uint16_t to);
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Variables --------------------------------------------------------------*/
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** static uint16_t nwkGroups[NWK_GROUPS_AMOUNT];
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Implementations --------------------------------------------------------*/
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Initializes the Group module
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** void nwkGroupInit(void)
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
  27               		.loc 1 74 0
  28               		.cfi_startproc
  29 0000 CF93      		push r28
  30               	.LCFI0:
  31               		.cfi_def_cfa_offset 3
  32               		.cfi_offset 28, -2
  33 0002 DF93      		push r29
  34               	.LCFI1:
  35               		.cfi_def_cfa_offset 4
  36               		.cfi_offset 29, -3
  37 0004 1F92      		push __zero_reg__
  38               	.LCFI2:
  39               		.cfi_def_cfa_offset 5
  40 0006 CDB7      		in r28,__SP_L__
  41 0008 DEB7      		in r29,__SP_H__
  42               	.LCFI3:
  43               		.cfi_def_cfa_register 28
  44               	/* prologue: function */
  45               	/* frame size = 1 */
  46               	/* stack size = 3 */
  47               	.L__stack_usage = 3
  48               	.LBB2:
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
  49               		.loc 1 75 0
  50 000a 1982      		std Y+1,__zero_reg__
  51 000c 00C0      		rjmp .L2
  52               	.L3:
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		nwkGroups[i] = NWK_GROUP_FREE;
  53               		.loc 1 76 0 discriminator 3
  54 000e 8981      		ldd r24,Y+1
  55 0010 882F      		mov r24,r24
  56 0012 90E0      		ldi r25,0
  57 0014 880F      		lsl r24
  58 0016 991F      		rol r25
  59 0018 8050      		subi r24,lo8(-(nwkGroups))
  60 001a 9040      		sbci r25,hi8(-(nwkGroups))
  61 001c 2FEF      		ldi r18,lo8(-1)
  62 001e 3FEF      		ldi r19,lo8(-1)
  63 0020 FC01      		movw r30,r24
  64 0022 3183      		std Z+1,r19
  65 0024 2083      		st Z,r18
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
  66               		.loc 1 75 0 discriminator 3
  67 0026 8981      		ldd r24,Y+1
  68 0028 8F5F      		subi r24,lo8(-(1))
  69 002a 8983      		std Y+1,r24
  70               	.L2:
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
  71               		.loc 1 75 0 is_stmt 0 discriminator 1
  72 002c 8981      		ldd r24,Y+1
  73 002e 8330      		cpi r24,lo8(3)
  74 0030 00F0      		brlo .L3
  75               	.LBE2:
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	}
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
  76               		.loc 1 78 0 is_stmt 1
  77 0032 0000      		nop
  78               	/* epilogue start */
  79 0034 0F90      		pop __tmp_reg__
  80 0036 DF91      		pop r29
  81 0038 CF91      		pop r28
  82 003a 0895      		ret
  83               		.cfi_endproc
  84               	.LFE65:
  86               	.global	NWK_GroupAdd
  88               	NWK_GroupAdd:
  89               	.LFB66:
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Adds node to the @a group
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] group Group ID
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true in case of success and @c false otherwise
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** bool NWK_GroupAdd(uint16_t group)
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
  90               		.loc 1 86 0
  91               		.cfi_startproc
  92 003c CF93      		push r28
  93               	.LCFI4:
  94               		.cfi_def_cfa_offset 3
  95               		.cfi_offset 28, -2
  96 003e DF93      		push r29
  97               	.LCFI5:
  98               		.cfi_def_cfa_offset 4
  99               		.cfi_offset 29, -3
 100 0040 00D0      		rcall .
 101               	.LCFI6:
 102               		.cfi_def_cfa_offset 6
 103 0042 CDB7      		in r28,__SP_L__
 104 0044 DEB7      		in r29,__SP_H__
 105               	.LCFI7:
 106               		.cfi_def_cfa_register 28
 107               	/* prologue: function */
 108               	/* frame size = 2 */
 109               	/* stack size = 4 */
 110               	.L__stack_usage = 4
 111 0046 9A83      		std Y+2,r25
 112 0048 8983      		std Y+1,r24
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return nwkGroupSwitch(NWK_GROUP_FREE, group);
 113               		.loc 1 87 0
 114 004a 8981      		ldd r24,Y+1
 115 004c 9A81      		ldd r25,Y+2
 116 004e BC01      		movw r22,r24
 117 0050 8FEF      		ldi r24,lo8(-1)
 118 0052 9FEF      		ldi r25,lo8(-1)
 119 0054 0E94 0000 		call nwkGroupSwitch
 120               	/* epilogue start */
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 121               		.loc 1 88 0
 122 0058 0F90      		pop __tmp_reg__
 123 005a 0F90      		pop __tmp_reg__
 124 005c DF91      		pop r29
 125 005e CF91      		pop r28
 126 0060 0895      		ret
 127               		.cfi_endproc
 128               	.LFE66:
 130               	.global	NWK_GroupRemove
 132               	NWK_GroupRemove:
 133               	.LFB67:
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Removes node from the @a group
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] group Group ID
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true in case of success and @c false otherwise
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** bool NWK_GroupRemove(uint16_t group)
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
 134               		.loc 1 96 0
 135               		.cfi_startproc
 136 0062 CF93      		push r28
 137               	.LCFI8:
 138               		.cfi_def_cfa_offset 3
 139               		.cfi_offset 28, -2
 140 0064 DF93      		push r29
 141               	.LCFI9:
 142               		.cfi_def_cfa_offset 4
 143               		.cfi_offset 29, -3
 144 0066 00D0      		rcall .
 145               	.LCFI10:
 146               		.cfi_def_cfa_offset 6
 147 0068 CDB7      		in r28,__SP_L__
 148 006a DEB7      		in r29,__SP_H__
 149               	.LCFI11:
 150               		.cfi_def_cfa_register 28
 151               	/* prologue: function */
 152               	/* frame size = 2 */
 153               	/* stack size = 4 */
 154               	.L__stack_usage = 4
 155 006c 9A83      		std Y+2,r25
 156 006e 8983      		std Y+1,r24
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return nwkGroupSwitch(group, NWK_GROUP_FREE);
 157               		.loc 1 97 0
 158 0070 8981      		ldd r24,Y+1
 159 0072 9A81      		ldd r25,Y+2
 160 0074 6FEF      		ldi r22,lo8(-1)
 161 0076 7FEF      		ldi r23,lo8(-1)
 162 0078 0E94 0000 		call nwkGroupSwitch
 163               	/* epilogue start */
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 164               		.loc 1 98 0
 165 007c 0F90      		pop __tmp_reg__
 166 007e 0F90      		pop __tmp_reg__
 167 0080 DF91      		pop r29
 168 0082 CF91      		pop r28
 169 0084 0895      		ret
 170               		.cfi_endproc
 171               	.LFE67:
 173               	.global	NWK_GroupIsMember
 175               	NWK_GroupIsMember:
 176               	.LFB68:
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Verifies if node is a member of the @a group
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] group Group ID
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true if node is a member of the group and @c false otherwise
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** bool NWK_GroupIsMember(uint16_t group)
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
 177               		.loc 1 106 0
 178               		.cfi_startproc
 179 0086 CF93      		push r28
 180               	.LCFI12:
 181               		.cfi_def_cfa_offset 3
 182               		.cfi_offset 28, -2
 183 0088 DF93      		push r29
 184               	.LCFI13:
 185               		.cfi_def_cfa_offset 4
 186               		.cfi_offset 29, -3
 187 008a 00D0      		rcall .
 188 008c 1F92      		push __zero_reg__
 189               	.LCFI14:
 190               		.cfi_def_cfa_offset 7
 191 008e CDB7      		in r28,__SP_L__
 192 0090 DEB7      		in r29,__SP_H__
 193               	.LCFI15:
 194               		.cfi_def_cfa_register 28
 195               	/* prologue: function */
 196               	/* frame size = 3 */
 197               	/* stack size = 5 */
 198               	.L__stack_usage = 5
 199 0092 9B83      		std Y+3,r25
 200 0094 8A83      		std Y+2,r24
 201               	.LBB3:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 202               		.loc 1 107 0
 203 0096 1982      		std Y+1,__zero_reg__
 204 0098 00C0      		rjmp .L9
 205               	.L12:
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (group == nwkGroups[i]) {
 206               		.loc 1 108 0
 207 009a 8981      		ldd r24,Y+1
 208 009c 882F      		mov r24,r24
 209 009e 90E0      		ldi r25,0
 210 00a0 880F      		lsl r24
 211 00a2 991F      		rol r25
 212 00a4 8050      		subi r24,lo8(-(nwkGroups))
 213 00a6 9040      		sbci r25,hi8(-(nwkGroups))
 214 00a8 FC01      		movw r30,r24
 215 00aa 2081      		ld r18,Z
 216 00ac 3181      		ldd r19,Z+1
 217 00ae 8A81      		ldd r24,Y+2
 218 00b0 9B81      		ldd r25,Y+3
 219 00b2 2817      		cp r18,r24
 220 00b4 3907      		cpc r19,r25
 221 00b6 01F4      		brne .L10
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 			return true;
 222               		.loc 1 109 0
 223 00b8 81E0      		ldi r24,lo8(1)
 224 00ba 00C0      		rjmp .L11
 225               	.L10:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 226               		.loc 1 107 0 discriminator 2
 227 00bc 8981      		ldd r24,Y+1
 228 00be 8F5F      		subi r24,lo8(-(1))
 229 00c0 8983      		std Y+1,r24
 230               	.L9:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 231               		.loc 1 107 0 is_stmt 0 discriminator 1
 232 00c2 8981      		ldd r24,Y+1
 233 00c4 8330      		cpi r24,lo8(3)
 234 00c6 00F0      		brlo .L12
 235               	.LBE3:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		}
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	}
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return false;
 236               		.loc 1 112 0 is_stmt 1
 237 00c8 80E0      		ldi r24,0
 238               	.L11:
 239               	/* epilogue start */
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 240               		.loc 1 113 0
 241 00ca 0F90      		pop __tmp_reg__
 242 00cc 0F90      		pop __tmp_reg__
 243 00ce 0F90      		pop __tmp_reg__
 244 00d0 DF91      		pop r29
 245 00d2 CF91      		pop r28
 246 00d4 0895      		ret
 247               		.cfi_endproc
 248               	.LFE68:
 251               	nwkGroupSwitch:
 252               	.LFB69:
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Switches records with IDs @a from and @a to in the the group table
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] from Source group ID
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] to   Destination group ID
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true if @a from entry was found and @c false otherwise
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** static bool nwkGroupSwitch(uint16_t from, uint16_t to)
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
 253               		.loc 1 122 0
 254               		.cfi_startproc
 255 00d6 CF93      		push r28
 256               	.LCFI16:
 257               		.cfi_def_cfa_offset 3
 258               		.cfi_offset 28, -2
 259 00d8 DF93      		push r29
 260               	.LCFI17:
 261               		.cfi_def_cfa_offset 4
 262               		.cfi_offset 29, -3
 263 00da 00D0      		rcall .
 264 00dc 00D0      		rcall .
 265 00de 1F92      		push __zero_reg__
 266               	.LCFI18:
 267               		.cfi_def_cfa_offset 9
 268 00e0 CDB7      		in r28,__SP_L__
 269 00e2 DEB7      		in r29,__SP_H__
 270               	.LCFI19:
 271               		.cfi_def_cfa_register 28
 272               	/* prologue: function */
 273               	/* frame size = 5 */
 274               	/* stack size = 7 */
 275               	.L__stack_usage = 7
 276 00e4 9B83      		std Y+3,r25
 277 00e6 8A83      		std Y+2,r24
 278 00e8 7D83      		std Y+5,r23
 279 00ea 6C83      		std Y+4,r22
 280               	.LBB4:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 281               		.loc 1 123 0
 282 00ec 1982      		std Y+1,__zero_reg__
 283 00ee 00C0      		rjmp .L14
 284               	.L17:
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (from == nwkGroups[i]) {
 285               		.loc 1 124 0
 286 00f0 8981      		ldd r24,Y+1
 287 00f2 882F      		mov r24,r24
 288 00f4 90E0      		ldi r25,0
 289 00f6 880F      		lsl r24
 290 00f8 991F      		rol r25
 291 00fa 8050      		subi r24,lo8(-(nwkGroups))
 292 00fc 9040      		sbci r25,hi8(-(nwkGroups))
 293 00fe FC01      		movw r30,r24
 294 0100 2081      		ld r18,Z
 295 0102 3181      		ldd r19,Z+1
 296 0104 8A81      		ldd r24,Y+2
 297 0106 9B81      		ldd r25,Y+3
 298 0108 2817      		cp r18,r24
 299 010a 3907      		cpc r19,r25
 300 010c 01F4      		brne .L15
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 			nwkGroups[i] = to;
 301               		.loc 1 125 0
 302 010e 8981      		ldd r24,Y+1
 303 0110 882F      		mov r24,r24
 304 0112 90E0      		ldi r25,0
 305 0114 880F      		lsl r24
 306 0116 991F      		rol r25
 307 0118 8050      		subi r24,lo8(-(nwkGroups))
 308 011a 9040      		sbci r25,hi8(-(nwkGroups))
 309 011c 2C81      		ldd r18,Y+4
 310 011e 3D81      		ldd r19,Y+5
 311 0120 FC01      		movw r30,r24
 312 0122 3183      		std Z+1,r19
 313 0124 2083      		st Z,r18
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 			return true;
 314               		.loc 1 126 0
 315 0126 81E0      		ldi r24,lo8(1)
 316 0128 00C0      		rjmp .L16
 317               	.L15:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (from == nwkGroups[i]) {
 318               		.loc 1 123 0 discriminator 2
 319 012a 8981      		ldd r24,Y+1
 320 012c 8F5F      		subi r24,lo8(-(1))
 321 012e 8983      		std Y+1,r24
 322               	.L14:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (from == nwkGroups[i]) {
 323               		.loc 1 123 0 is_stmt 0 discriminator 1
 324 0130 8981      		ldd r24,Y+1
 325 0132 8330      		cpi r24,lo8(3)
 326 0134 00F0      		brlo .L17
 327               	.LBE4:
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		}
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	}
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return false;
 328               		.loc 1 129 0 is_stmt 1
 329 0136 80E0      		ldi r24,0
 330               	.L16:
 331               	/* epilogue start */
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 332               		.loc 1 130 0
 333 0138 0F90      		pop __tmp_reg__
 334 013a 0F90      		pop __tmp_reg__
 335 013c 0F90      		pop __tmp_reg__
 336 013e 0F90      		pop __tmp_reg__
 337 0140 0F90      		pop __tmp_reg__
 338 0142 DF91      		pop r29
 339 0144 CF91      		pop r28
 340 0146 0895      		ret
 341               		.cfi_endproc
 342               	.LFE69:
 344               	.Letext0:
 345               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 346               		.file 3 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkGroup.c
C:\Users\GUILHE~1\AppData\Local\Temp\cc5wtrqU.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5wtrqU.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5wtrqU.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5wtrqU.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5wtrqU.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5wtrqU.s:7      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 n
                            *COM*:00000004 tTS
                            *COM*:00000002 macLLDNnumTimeSlots
                            *COM*:00000002 macLLDNnumUplinkTS
                            *COM*:00000002 macLLDNRetransmitTS
C:\Users\GUILHE~1\AppData\Local\Temp\cc5wtrqU.s:19     .bss.nwkGroups:00000000 nwkGroups
C:\Users\GUILHE~1\AppData\Local\Temp\cc5wtrqU.s:24     .text:00000000 nwkGroupInit
C:\Users\GUILHE~1\AppData\Local\Temp\cc5wtrqU.s:88     .text:0000003c NWK_GroupAdd
C:\Users\GUILHE~1\AppData\Local\Temp\cc5wtrqU.s:251    .text:000000d6 nwkGroupSwitch
C:\Users\GUILHE~1\AppData\Local\Temp\cc5wtrqU.s:132    .text:00000062 NWK_GroupRemove
C:\Users\GUILHE~1\AppData\Local\Temp\cc5wtrqU.s:175    .text:00000086 NWK_GroupIsMember

UNDEFINED SYMBOLS
__do_clear_bss
