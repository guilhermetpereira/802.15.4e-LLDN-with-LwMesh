   1               		.file	"nwkGroup.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	n,1,1
  12               		.section	.bss.tTS,"aw",@nobits
  15               	tTS:
  16 0000 0000 0000 		.zero	4
  17               		.section	.bss.nwkGroups,"aw",@nobits
  20               	nwkGroups:
  21 0000 0000 0000 		.zero	6
  21      0000 
  22               		.text
  23               	.global	nwkGroupInit
  25               	nwkGroupInit:
  26               	.LFB65:
  27               		.file 1 "../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \file nwkGroup.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \brief Multicast group management implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include "sysConfig.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include "nwkGroup.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #ifdef NWK_ENABLE_MULTICAST
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Definitions ------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #define NWK_GROUP_FREE      0xffff
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Prototypes -------------------------------------------------------------*/
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** static bool nwkGroupSwitch(uint16_t from, uint16_t to);
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Variables --------------------------------------------------------------*/
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** static uint16_t nwkGroups[NWK_GROUPS_AMOUNT];
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Implementations --------------------------------------------------------*/
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Initializes the Group module
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** void nwkGroupInit(void)
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
  28               		.loc 1 74 0
  29               		.cfi_startproc
  30 0000 CF93      		push r28
  31               	.LCFI0:
  32               		.cfi_def_cfa_offset 3
  33               		.cfi_offset 28, -2
  34 0002 DF93      		push r29
  35               	.LCFI1:
  36               		.cfi_def_cfa_offset 4
  37               		.cfi_offset 29, -3
  38 0004 1F92      		push __zero_reg__
  39               	.LCFI2:
  40               		.cfi_def_cfa_offset 5
  41 0006 CDB7      		in r28,__SP_L__
  42 0008 DEB7      		in r29,__SP_H__
  43               	.LCFI3:
  44               		.cfi_def_cfa_register 28
  45               	/* prologue: function */
  46               	/* frame size = 1 */
  47               	/* stack size = 3 */
  48               	.L__stack_usage = 3
  49               	.LBB2:
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
  50               		.loc 1 75 0
  51 000a 1982      		std Y+1,__zero_reg__
  52 000c 00C0      		rjmp .L2
  53               	.L3:
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		nwkGroups[i] = NWK_GROUP_FREE;
  54               		.loc 1 76 0 discriminator 3
  55 000e 8981      		ldd r24,Y+1
  56 0010 882F      		mov r24,r24
  57 0012 90E0      		ldi r25,0
  58 0014 880F      		lsl r24
  59 0016 991F      		rol r25
  60 0018 8050      		subi r24,lo8(-(nwkGroups))
  61 001a 9040      		sbci r25,hi8(-(nwkGroups))
  62 001c 2FEF      		ldi r18,lo8(-1)
  63 001e 3FEF      		ldi r19,lo8(-1)
  64 0020 FC01      		movw r30,r24
  65 0022 3183      		std Z+1,r19
  66 0024 2083      		st Z,r18
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
  67               		.loc 1 75 0 discriminator 3
  68 0026 8981      		ldd r24,Y+1
  69 0028 8F5F      		subi r24,lo8(-(1))
  70 002a 8983      		std Y+1,r24
  71               	.L2:
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
  72               		.loc 1 75 0 is_stmt 0 discriminator 1
  73 002c 8981      		ldd r24,Y+1
  74 002e 8330      		cpi r24,lo8(3)
  75 0030 00F0      		brlo .L3
  76               	.LBE2:
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	}
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
  77               		.loc 1 78 0 is_stmt 1
  78 0032 0000      		nop
  79               	/* epilogue start */
  80 0034 0F90      		pop __tmp_reg__
  81 0036 DF91      		pop r29
  82 0038 CF91      		pop r28
  83 003a 0895      		ret
  84               		.cfi_endproc
  85               	.LFE65:
  87               	.global	NWK_GroupAdd
  89               	NWK_GroupAdd:
  90               	.LFB66:
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Adds node to the @a group
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] group Group ID
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true in case of success and @c false otherwise
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** bool NWK_GroupAdd(uint16_t group)
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
  91               		.loc 1 86 0
  92               		.cfi_startproc
  93 003c CF93      		push r28
  94               	.LCFI4:
  95               		.cfi_def_cfa_offset 3
  96               		.cfi_offset 28, -2
  97 003e DF93      		push r29
  98               	.LCFI5:
  99               		.cfi_def_cfa_offset 4
 100               		.cfi_offset 29, -3
 101 0040 00D0      		rcall .
 102               	.LCFI6:
 103               		.cfi_def_cfa_offset 6
 104 0042 CDB7      		in r28,__SP_L__
 105 0044 DEB7      		in r29,__SP_H__
 106               	.LCFI7:
 107               		.cfi_def_cfa_register 28
 108               	/* prologue: function */
 109               	/* frame size = 2 */
 110               	/* stack size = 4 */
 111               	.L__stack_usage = 4
 112 0046 9A83      		std Y+2,r25
 113 0048 8983      		std Y+1,r24
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return nwkGroupSwitch(NWK_GROUP_FREE, group);
 114               		.loc 1 87 0
 115 004a 8981      		ldd r24,Y+1
 116 004c 9A81      		ldd r25,Y+2
 117 004e BC01      		movw r22,r24
 118 0050 8FEF      		ldi r24,lo8(-1)
 119 0052 9FEF      		ldi r25,lo8(-1)
 120 0054 0E94 0000 		call nwkGroupSwitch
 121               	/* epilogue start */
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 122               		.loc 1 88 0
 123 0058 0F90      		pop __tmp_reg__
 124 005a 0F90      		pop __tmp_reg__
 125 005c DF91      		pop r29
 126 005e CF91      		pop r28
 127 0060 0895      		ret
 128               		.cfi_endproc
 129               	.LFE66:
 131               	.global	NWK_GroupRemove
 133               	NWK_GroupRemove:
 134               	.LFB67:
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Removes node from the @a group
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] group Group ID
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true in case of success and @c false otherwise
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** bool NWK_GroupRemove(uint16_t group)
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
 135               		.loc 1 96 0
 136               		.cfi_startproc
 137 0062 CF93      		push r28
 138               	.LCFI8:
 139               		.cfi_def_cfa_offset 3
 140               		.cfi_offset 28, -2
 141 0064 DF93      		push r29
 142               	.LCFI9:
 143               		.cfi_def_cfa_offset 4
 144               		.cfi_offset 29, -3
 145 0066 00D0      		rcall .
 146               	.LCFI10:
 147               		.cfi_def_cfa_offset 6
 148 0068 CDB7      		in r28,__SP_L__
 149 006a DEB7      		in r29,__SP_H__
 150               	.LCFI11:
 151               		.cfi_def_cfa_register 28
 152               	/* prologue: function */
 153               	/* frame size = 2 */
 154               	/* stack size = 4 */
 155               	.L__stack_usage = 4
 156 006c 9A83      		std Y+2,r25
 157 006e 8983      		std Y+1,r24
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return nwkGroupSwitch(group, NWK_GROUP_FREE);
 158               		.loc 1 97 0
 159 0070 8981      		ldd r24,Y+1
 160 0072 9A81      		ldd r25,Y+2
 161 0074 6FEF      		ldi r22,lo8(-1)
 162 0076 7FEF      		ldi r23,lo8(-1)
 163 0078 0E94 0000 		call nwkGroupSwitch
 164               	/* epilogue start */
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 165               		.loc 1 98 0
 166 007c 0F90      		pop __tmp_reg__
 167 007e 0F90      		pop __tmp_reg__
 168 0080 DF91      		pop r29
 169 0082 CF91      		pop r28
 170 0084 0895      		ret
 171               		.cfi_endproc
 172               	.LFE67:
 174               	.global	NWK_GroupIsMember
 176               	NWK_GroupIsMember:
 177               	.LFB68:
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Verifies if node is a member of the @a group
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] group Group ID
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true if node is a member of the group and @c false otherwise
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** bool NWK_GroupIsMember(uint16_t group)
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
 178               		.loc 1 106 0
 179               		.cfi_startproc
 180 0086 CF93      		push r28
 181               	.LCFI12:
 182               		.cfi_def_cfa_offset 3
 183               		.cfi_offset 28, -2
 184 0088 DF93      		push r29
 185               	.LCFI13:
 186               		.cfi_def_cfa_offset 4
 187               		.cfi_offset 29, -3
 188 008a 00D0      		rcall .
 189 008c 1F92      		push __zero_reg__
 190               	.LCFI14:
 191               		.cfi_def_cfa_offset 7
 192 008e CDB7      		in r28,__SP_L__
 193 0090 DEB7      		in r29,__SP_H__
 194               	.LCFI15:
 195               		.cfi_def_cfa_register 28
 196               	/* prologue: function */
 197               	/* frame size = 3 */
 198               	/* stack size = 5 */
 199               	.L__stack_usage = 5
 200 0092 9B83      		std Y+3,r25
 201 0094 8A83      		std Y+2,r24
 202               	.LBB3:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 203               		.loc 1 107 0
 204 0096 1982      		std Y+1,__zero_reg__
 205 0098 00C0      		rjmp .L9
 206               	.L12:
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (group == nwkGroups[i]) {
 207               		.loc 1 108 0
 208 009a 8981      		ldd r24,Y+1
 209 009c 882F      		mov r24,r24
 210 009e 90E0      		ldi r25,0
 211 00a0 880F      		lsl r24
 212 00a2 991F      		rol r25
 213 00a4 8050      		subi r24,lo8(-(nwkGroups))
 214 00a6 9040      		sbci r25,hi8(-(nwkGroups))
 215 00a8 FC01      		movw r30,r24
 216 00aa 2081      		ld r18,Z
 217 00ac 3181      		ldd r19,Z+1
 218 00ae 8A81      		ldd r24,Y+2
 219 00b0 9B81      		ldd r25,Y+3
 220 00b2 2817      		cp r18,r24
 221 00b4 3907      		cpc r19,r25
 222 00b6 01F4      		brne .L10
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 			return true;
 223               		.loc 1 109 0
 224 00b8 81E0      		ldi r24,lo8(1)
 225 00ba 00C0      		rjmp .L11
 226               	.L10:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 227               		.loc 1 107 0 discriminator 2
 228 00bc 8981      		ldd r24,Y+1
 229 00be 8F5F      		subi r24,lo8(-(1))
 230 00c0 8983      		std Y+1,r24
 231               	.L9:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 232               		.loc 1 107 0 is_stmt 0 discriminator 1
 233 00c2 8981      		ldd r24,Y+1
 234 00c4 8330      		cpi r24,lo8(3)
 235 00c6 00F0      		brlo .L12
 236               	.LBE3:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		}
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	}
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return false;
 237               		.loc 1 112 0 is_stmt 1
 238 00c8 80E0      		ldi r24,0
 239               	.L11:
 240               	/* epilogue start */
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 241               		.loc 1 113 0
 242 00ca 0F90      		pop __tmp_reg__
 243 00cc 0F90      		pop __tmp_reg__
 244 00ce 0F90      		pop __tmp_reg__
 245 00d0 DF91      		pop r29
 246 00d2 CF91      		pop r28
 247 00d4 0895      		ret
 248               		.cfi_endproc
 249               	.LFE68:
 252               	nwkGroupSwitch:
 253               	.LFB69:
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Switches records with IDs @a from and @a to in the the group table
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] from Source group ID
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] to   Destination group ID
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true if @a from entry was found and @c false otherwise
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** static bool nwkGroupSwitch(uint16_t from, uint16_t to)
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
 254               		.loc 1 122 0
 255               		.cfi_startproc
 256 00d6 CF93      		push r28
 257               	.LCFI16:
 258               		.cfi_def_cfa_offset 3
 259               		.cfi_offset 28, -2
 260 00d8 DF93      		push r29
 261               	.LCFI17:
 262               		.cfi_def_cfa_offset 4
 263               		.cfi_offset 29, -3
 264 00da 00D0      		rcall .
 265 00dc 00D0      		rcall .
 266 00de 1F92      		push __zero_reg__
 267               	.LCFI18:
 268               		.cfi_def_cfa_offset 9
 269 00e0 CDB7      		in r28,__SP_L__
 270 00e2 DEB7      		in r29,__SP_H__
 271               	.LCFI19:
 272               		.cfi_def_cfa_register 28
 273               	/* prologue: function */
 274               	/* frame size = 5 */
 275               	/* stack size = 7 */
 276               	.L__stack_usage = 7
 277 00e4 9B83      		std Y+3,r25
 278 00e6 8A83      		std Y+2,r24
 279 00e8 7D83      		std Y+5,r23
 280 00ea 6C83      		std Y+4,r22
 281               	.LBB4:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 282               		.loc 1 123 0
 283 00ec 1982      		std Y+1,__zero_reg__
 284 00ee 00C0      		rjmp .L14
 285               	.L17:
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (from == nwkGroups[i]) {
 286               		.loc 1 124 0
 287 00f0 8981      		ldd r24,Y+1
 288 00f2 882F      		mov r24,r24
 289 00f4 90E0      		ldi r25,0
 290 00f6 880F      		lsl r24
 291 00f8 991F      		rol r25
 292 00fa 8050      		subi r24,lo8(-(nwkGroups))
 293 00fc 9040      		sbci r25,hi8(-(nwkGroups))
 294 00fe FC01      		movw r30,r24
 295 0100 2081      		ld r18,Z
 296 0102 3181      		ldd r19,Z+1
 297 0104 8A81      		ldd r24,Y+2
 298 0106 9B81      		ldd r25,Y+3
 299 0108 2817      		cp r18,r24
 300 010a 3907      		cpc r19,r25
 301 010c 01F4      		brne .L15
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 			nwkGroups[i] = to;
 302               		.loc 1 125 0
 303 010e 8981      		ldd r24,Y+1
 304 0110 882F      		mov r24,r24
 305 0112 90E0      		ldi r25,0
 306 0114 880F      		lsl r24
 307 0116 991F      		rol r25
 308 0118 8050      		subi r24,lo8(-(nwkGroups))
 309 011a 9040      		sbci r25,hi8(-(nwkGroups))
 310 011c 2C81      		ldd r18,Y+4
 311 011e 3D81      		ldd r19,Y+5
 312 0120 FC01      		movw r30,r24
 313 0122 3183      		std Z+1,r19
 314 0124 2083      		st Z,r18
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 			return true;
 315               		.loc 1 126 0
 316 0126 81E0      		ldi r24,lo8(1)
 317 0128 00C0      		rjmp .L16
 318               	.L15:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (from == nwkGroups[i]) {
 319               		.loc 1 123 0 discriminator 2
 320 012a 8981      		ldd r24,Y+1
 321 012c 8F5F      		subi r24,lo8(-(1))
 322 012e 8983      		std Y+1,r24
 323               	.L14:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (from == nwkGroups[i]) {
 324               		.loc 1 123 0 is_stmt 0 discriminator 1
 325 0130 8981      		ldd r24,Y+1
 326 0132 8330      		cpi r24,lo8(3)
 327 0134 00F0      		brlo .L17
 328               	.LBE4:
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		}
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	}
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return false;
 329               		.loc 1 129 0 is_stmt 1
 330 0136 80E0      		ldi r24,0
 331               	.L16:
 332               	/* epilogue start */
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 333               		.loc 1 130 0
 334 0138 0F90      		pop __tmp_reg__
 335 013a 0F90      		pop __tmp_reg__
 336 013c 0F90      		pop __tmp_reg__
 337 013e 0F90      		pop __tmp_reg__
 338 0140 0F90      		pop __tmp_reg__
 339 0142 DF91      		pop r29
 340 0144 CF91      		pop r28
 341 0146 0895      		ret
 342               		.cfi_endproc
 343               	.LFE69:
 345               	.Letext0:
 346               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 347               		.file 3 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkGroup.c
C:\Users\guilh\AppData\Local\Temp\ccjaX88M.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\ccjaX88M.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\ccjaX88M.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\ccjaX88M.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\ccjaX88M.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\ccjaX88M.s:7      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 n
C:\Users\guilh\AppData\Local\Temp\ccjaX88M.s:15     .bss.tTS:00000000 tTS
C:\Users\guilh\AppData\Local\Temp\ccjaX88M.s:20     .bss.nwkGroups:00000000 nwkGroups
C:\Users\guilh\AppData\Local\Temp\ccjaX88M.s:25     .text:00000000 nwkGroupInit
C:\Users\guilh\AppData\Local\Temp\ccjaX88M.s:89     .text:0000003c NWK_GroupAdd
C:\Users\guilh\AppData\Local\Temp\ccjaX88M.s:252    .text:000000d6 nwkGroupSwitch
C:\Users\guilh\AppData\Local\Temp\ccjaX88M.s:133    .text:00000062 NWK_GroupRemove
C:\Users\guilh\AppData\Local\Temp\ccjaX88M.s:176    .text:00000086 NWK_GroupIsMember

UNDEFINED SYMBOLS
__do_clear_bss
