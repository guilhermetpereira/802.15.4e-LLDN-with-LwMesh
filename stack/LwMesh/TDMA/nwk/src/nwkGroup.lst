   1               		.file	"nwkGroup.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.bss.n,"aw",@nobits
  14               	n:
  15 0000 00        		.zero	1
  16               		.section	.bss.tTS,"aw",@nobits
  19               	tTS:
  20 0000 0000 0000 		.zero	4
  21               		.section	.bss.nwkGroups,"aw",@nobits
  24               	nwkGroups:
  25 0000 0000 0000 		.zero	6
  25      0000 
  26               		.text
  27               	.global	nwkGroupInit
  29               	nwkGroupInit:
  30               	.LFB65:
  31               		.file 1 "../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \file nwkGroup.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \brief Multicast group management implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include "sysConfig.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #include "nwkGroup.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #ifdef NWK_ENABLE_MULTICAST
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Definitions ------------------------------------------------------------*/
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** #define NWK_GROUP_FREE      0xffff
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Prototypes -------------------------------------------------------------*/
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** static bool nwkGroupSwitch(uint16_t from, uint16_t to);
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Variables --------------------------------------------------------------*/
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** static uint16_t nwkGroups[NWK_GROUPS_AMOUNT];
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*- Implementations --------------------------------------------------------*/
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Initializes the Group module
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** void nwkGroupInit(void)
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
  32               		.loc 1 74 0
  33               		.cfi_startproc
  34 0000 CF93      		push r28
  35               	.LCFI0:
  36               		.cfi_def_cfa_offset 3
  37               		.cfi_offset 28, -2
  38 0002 DF93      		push r29
  39               	.LCFI1:
  40               		.cfi_def_cfa_offset 4
  41               		.cfi_offset 29, -3
  42 0004 1F92      		push __zero_reg__
  43               	.LCFI2:
  44               		.cfi_def_cfa_offset 5
  45 0006 CDB7      		in r28,__SP_L__
  46 0008 DEB7      		in r29,__SP_H__
  47               	.LCFI3:
  48               		.cfi_def_cfa_register 28
  49               	/* prologue: function */
  50               	/* frame size = 1 */
  51               	/* stack size = 3 */
  52               	.L__stack_usage = 3
  53               	.LBB2:
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
  54               		.loc 1 75 0
  55 000a 1982      		std Y+1,__zero_reg__
  56 000c 00C0      		rjmp .L2
  57               	.L3:
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		nwkGroups[i] = NWK_GROUP_FREE;
  58               		.loc 1 76 0 discriminator 3
  59 000e 8981      		ldd r24,Y+1
  60 0010 882F      		mov r24,r24
  61 0012 90E0      		ldi r25,0
  62 0014 880F      		lsl r24
  63 0016 991F      		rol r25
  64 0018 8050      		subi r24,lo8(-(nwkGroups))
  65 001a 9040      		sbci r25,hi8(-(nwkGroups))
  66 001c 2FEF      		ldi r18,lo8(-1)
  67 001e 3FEF      		ldi r19,lo8(-1)
  68 0020 FC01      		movw r30,r24
  69 0022 3183      		std Z+1,r19
  70 0024 2083      		st Z,r18
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
  71               		.loc 1 75 0 discriminator 3
  72 0026 8981      		ldd r24,Y+1
  73 0028 8F5F      		subi r24,lo8(-(1))
  74 002a 8983      		std Y+1,r24
  75               	.L2:
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
  76               		.loc 1 75 0 is_stmt 0 discriminator 1
  77 002c 8981      		ldd r24,Y+1
  78 002e 8330      		cpi r24,lo8(3)
  79 0030 00F0      		brlo .L3
  80               	.LBE2:
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	}
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
  81               		.loc 1 78 0 is_stmt 1
  82 0032 0000      		nop
  83               	/* epilogue start */
  84 0034 0F90      		pop __tmp_reg__
  85 0036 DF91      		pop r29
  86 0038 CF91      		pop r28
  87 003a 0895      		ret
  88               		.cfi_endproc
  89               	.LFE65:
  91               	.global	NWK_GroupAdd
  93               	NWK_GroupAdd:
  94               	.LFB66:
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Adds node to the @a group
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] group Group ID
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true in case of success and @c false otherwise
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** bool NWK_GroupAdd(uint16_t group)
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
  95               		.loc 1 86 0
  96               		.cfi_startproc
  97 003c CF93      		push r28
  98               	.LCFI4:
  99               		.cfi_def_cfa_offset 3
 100               		.cfi_offset 28, -2
 101 003e DF93      		push r29
 102               	.LCFI5:
 103               		.cfi_def_cfa_offset 4
 104               		.cfi_offset 29, -3
 105 0040 00D0      		rcall .
 106               	.LCFI6:
 107               		.cfi_def_cfa_offset 6
 108 0042 CDB7      		in r28,__SP_L__
 109 0044 DEB7      		in r29,__SP_H__
 110               	.LCFI7:
 111               		.cfi_def_cfa_register 28
 112               	/* prologue: function */
 113               	/* frame size = 2 */
 114               	/* stack size = 4 */
 115               	.L__stack_usage = 4
 116 0046 9A83      		std Y+2,r25
 117 0048 8983      		std Y+1,r24
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return nwkGroupSwitch(NWK_GROUP_FREE, group);
 118               		.loc 1 87 0
 119 004a 8981      		ldd r24,Y+1
 120 004c 9A81      		ldd r25,Y+2
 121 004e BC01      		movw r22,r24
 122 0050 8FEF      		ldi r24,lo8(-1)
 123 0052 9FEF      		ldi r25,lo8(-1)
 124 0054 0E94 0000 		call nwkGroupSwitch
 125               	/* epilogue start */
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 126               		.loc 1 88 0
 127 0058 0F90      		pop __tmp_reg__
 128 005a 0F90      		pop __tmp_reg__
 129 005c DF91      		pop r29
 130 005e CF91      		pop r28
 131 0060 0895      		ret
 132               		.cfi_endproc
 133               	.LFE66:
 135               	.global	NWK_GroupRemove
 137               	NWK_GroupRemove:
 138               	.LFB67:
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Removes node from the @a group
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] group Group ID
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true in case of success and @c false otherwise
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** bool NWK_GroupRemove(uint16_t group)
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
 139               		.loc 1 96 0
 140               		.cfi_startproc
 141 0062 CF93      		push r28
 142               	.LCFI8:
 143               		.cfi_def_cfa_offset 3
 144               		.cfi_offset 28, -2
 145 0064 DF93      		push r29
 146               	.LCFI9:
 147               		.cfi_def_cfa_offset 4
 148               		.cfi_offset 29, -3
 149 0066 00D0      		rcall .
 150               	.LCFI10:
 151               		.cfi_def_cfa_offset 6
 152 0068 CDB7      		in r28,__SP_L__
 153 006a DEB7      		in r29,__SP_H__
 154               	.LCFI11:
 155               		.cfi_def_cfa_register 28
 156               	/* prologue: function */
 157               	/* frame size = 2 */
 158               	/* stack size = 4 */
 159               	.L__stack_usage = 4
 160 006c 9A83      		std Y+2,r25
 161 006e 8983      		std Y+1,r24
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return nwkGroupSwitch(group, NWK_GROUP_FREE);
 162               		.loc 1 97 0
 163 0070 8981      		ldd r24,Y+1
 164 0072 9A81      		ldd r25,Y+2
 165 0074 6FEF      		ldi r22,lo8(-1)
 166 0076 7FEF      		ldi r23,lo8(-1)
 167 0078 0E94 0000 		call nwkGroupSwitch
 168               	/* epilogue start */
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 169               		.loc 1 98 0
 170 007c 0F90      		pop __tmp_reg__
 171 007e 0F90      		pop __tmp_reg__
 172 0080 DF91      		pop r29
 173 0082 CF91      		pop r28
 174 0084 0895      		ret
 175               		.cfi_endproc
 176               	.LFE67:
 178               	.global	NWK_GroupIsMember
 180               	NWK_GroupIsMember:
 181               	.LFB68:
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Verifies if node is a member of the @a group
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] group Group ID
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true if node is a member of the group and @c false otherwise
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** bool NWK_GroupIsMember(uint16_t group)
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
 182               		.loc 1 106 0
 183               		.cfi_startproc
 184 0086 CF93      		push r28
 185               	.LCFI12:
 186               		.cfi_def_cfa_offset 3
 187               		.cfi_offset 28, -2
 188 0088 DF93      		push r29
 189               	.LCFI13:
 190               		.cfi_def_cfa_offset 4
 191               		.cfi_offset 29, -3
 192 008a 00D0      		rcall .
 193 008c 1F92      		push __zero_reg__
 194               	.LCFI14:
 195               		.cfi_def_cfa_offset 7
 196 008e CDB7      		in r28,__SP_L__
 197 0090 DEB7      		in r29,__SP_H__
 198               	.LCFI15:
 199               		.cfi_def_cfa_register 28
 200               	/* prologue: function */
 201               	/* frame size = 3 */
 202               	/* stack size = 5 */
 203               	.L__stack_usage = 5
 204 0092 9B83      		std Y+3,r25
 205 0094 8A83      		std Y+2,r24
 206               	.LBB3:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 207               		.loc 1 107 0
 208 0096 1982      		std Y+1,__zero_reg__
 209 0098 00C0      		rjmp .L9
 210               	.L12:
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (group == nwkGroups[i]) {
 211               		.loc 1 108 0
 212 009a 8981      		ldd r24,Y+1
 213 009c 882F      		mov r24,r24
 214 009e 90E0      		ldi r25,0
 215 00a0 880F      		lsl r24
 216 00a2 991F      		rol r25
 217 00a4 8050      		subi r24,lo8(-(nwkGroups))
 218 00a6 9040      		sbci r25,hi8(-(nwkGroups))
 219 00a8 FC01      		movw r30,r24
 220 00aa 2081      		ld r18,Z
 221 00ac 3181      		ldd r19,Z+1
 222 00ae 8A81      		ldd r24,Y+2
 223 00b0 9B81      		ldd r25,Y+3
 224 00b2 2817      		cp r18,r24
 225 00b4 3907      		cpc r19,r25
 226 00b6 01F4      		brne .L10
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 			return true;
 227               		.loc 1 109 0
 228 00b8 81E0      		ldi r24,lo8(1)
 229 00ba 00C0      		rjmp .L11
 230               	.L10:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 231               		.loc 1 107 0 discriminator 2
 232 00bc 8981      		ldd r24,Y+1
 233 00be 8F5F      		subi r24,lo8(-(1))
 234 00c0 8983      		std Y+1,r24
 235               	.L9:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 236               		.loc 1 107 0 is_stmt 0 discriminator 1
 237 00c2 8981      		ldd r24,Y+1
 238 00c4 8330      		cpi r24,lo8(3)
 239 00c6 00F0      		brlo .L12
 240               	.LBE3:
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		}
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	}
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return false;
 241               		.loc 1 112 0 is_stmt 1
 242 00c8 80E0      		ldi r24,0
 243               	.L11:
 244               	/* epilogue start */
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 245               		.loc 1 113 0
 246 00ca 0F90      		pop __tmp_reg__
 247 00cc 0F90      		pop __tmp_reg__
 248 00ce 0F90      		pop __tmp_reg__
 249 00d0 DF91      		pop r29
 250 00d2 CF91      		pop r28
 251 00d4 0895      		ret
 252               		.cfi_endproc
 253               	.LFE68:
 256               	nwkGroupSwitch:
 257               	.LFB69:
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** /*************************************************************************//**
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @brief Switches records with IDs @a from and @a to in the the group table
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] from Source group ID
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @param[in] to   Destination group ID
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *  @return @c true if @a from entry was found and @c false otherwise
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** *****************************************************************************/
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** static bool nwkGroupSwitch(uint16_t from, uint16_t to)
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** {
 258               		.loc 1 122 0
 259               		.cfi_startproc
 260 00d6 CF93      		push r28
 261               	.LCFI16:
 262               		.cfi_def_cfa_offset 3
 263               		.cfi_offset 28, -2
 264 00d8 DF93      		push r29
 265               	.LCFI17:
 266               		.cfi_def_cfa_offset 4
 267               		.cfi_offset 29, -3
 268 00da 00D0      		rcall .
 269 00dc 00D0      		rcall .
 270 00de 1F92      		push __zero_reg__
 271               	.LCFI18:
 272               		.cfi_def_cfa_offset 9
 273 00e0 CDB7      		in r28,__SP_L__
 274 00e2 DEB7      		in r29,__SP_H__
 275               	.LCFI19:
 276               		.cfi_def_cfa_register 28
 277               	/* prologue: function */
 278               	/* frame size = 5 */
 279               	/* stack size = 7 */
 280               	.L__stack_usage = 7
 281 00e4 9B83      		std Y+3,r25
 282 00e6 8A83      		std Y+2,r24
 283 00e8 7D83      		std Y+5,r23
 284 00ea 6C83      		std Y+4,r22
 285               	.LBB4:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	for (uint8_t i = 0; i < NWK_GROUPS_AMOUNT; i++) {
 286               		.loc 1 123 0
 287 00ec 1982      		std Y+1,__zero_reg__
 288 00ee 00C0      		rjmp .L14
 289               	.L17:
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (from == nwkGroups[i]) {
 290               		.loc 1 124 0
 291 00f0 8981      		ldd r24,Y+1
 292 00f2 882F      		mov r24,r24
 293 00f4 90E0      		ldi r25,0
 294 00f6 880F      		lsl r24
 295 00f8 991F      		rol r25
 296 00fa 8050      		subi r24,lo8(-(nwkGroups))
 297 00fc 9040      		sbci r25,hi8(-(nwkGroups))
 298 00fe FC01      		movw r30,r24
 299 0100 2081      		ld r18,Z
 300 0102 3181      		ldd r19,Z+1
 301 0104 8A81      		ldd r24,Y+2
 302 0106 9B81      		ldd r25,Y+3
 303 0108 2817      		cp r18,r24
 304 010a 3907      		cpc r19,r25
 305 010c 01F4      		brne .L15
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 			nwkGroups[i] = to;
 306               		.loc 1 125 0
 307 010e 8981      		ldd r24,Y+1
 308 0110 882F      		mov r24,r24
 309 0112 90E0      		ldi r25,0
 310 0114 880F      		lsl r24
 311 0116 991F      		rol r25
 312 0118 8050      		subi r24,lo8(-(nwkGroups))
 313 011a 9040      		sbci r25,hi8(-(nwkGroups))
 314 011c 2C81      		ldd r18,Y+4
 315 011e 3D81      		ldd r19,Y+5
 316 0120 FC01      		movw r30,r24
 317 0122 3183      		std Z+1,r19
 318 0124 2083      		st Z,r18
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 			return true;
 319               		.loc 1 126 0
 320 0126 81E0      		ldi r24,lo8(1)
 321 0128 00C0      		rjmp .L16
 322               	.L15:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (from == nwkGroups[i]) {
 323               		.loc 1 123 0 discriminator 2
 324 012a 8981      		ldd r24,Y+1
 325 012c 8F5F      		subi r24,lo8(-(1))
 326 012e 8983      		std Y+1,r24
 327               	.L14:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		if (from == nwkGroups[i]) {
 328               		.loc 1 123 0 is_stmt 0 discriminator 1
 329 0130 8981      		ldd r24,Y+1
 330 0132 8330      		cpi r24,lo8(3)
 331 0134 00F0      		brlo .L17
 332               	.LBE4:
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 		}
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	}
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** 	return false;
 333               		.loc 1 129 0 is_stmt 1
 334 0136 80E0      		ldi r24,0
 335               	.L16:
 336               	/* epilogue start */
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkGroup.c **** }
 337               		.loc 1 130 0
 338 0138 0F90      		pop __tmp_reg__
 339 013a 0F90      		pop __tmp_reg__
 340 013c 0F90      		pop __tmp_reg__
 341 013e 0F90      		pop __tmp_reg__
 342 0140 0F90      		pop __tmp_reg__
 343 0142 DF91      		pop r29
 344 0144 CF91      		pop r28
 345 0146 0895      		ret
 346               		.cfi_endproc
 347               	.LFE69:
 349               	.Letext0:
 350               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 351               		.file 3 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkGroup.c
C:\Users\guilh\AppData\Local\Temp\ccL8RZQb.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\ccL8RZQb.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\ccL8RZQb.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\ccL8RZQb.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\ccL8RZQb.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\ccL8RZQb.s:7      *ABS*:00000001 __zero_reg__
C:\Users\guilh\AppData\Local\Temp\ccL8RZQb.s:14     .bss.n:00000000 n
C:\Users\guilh\AppData\Local\Temp\ccL8RZQb.s:19     .bss.tTS:00000000 tTS
C:\Users\guilh\AppData\Local\Temp\ccL8RZQb.s:24     .bss.nwkGroups:00000000 nwkGroups
C:\Users\guilh\AppData\Local\Temp\ccL8RZQb.s:29     .text:00000000 nwkGroupInit
C:\Users\guilh\AppData\Local\Temp\ccL8RZQb.s:93     .text:0000003c NWK_GroupAdd
C:\Users\guilh\AppData\Local\Temp\ccL8RZQb.s:256    .text:000000d6 nwkGroupSwitch
C:\Users\guilh\AppData\Local\Temp\ccL8RZQb.s:137    .text:00000062 NWK_GroupRemove
C:\Users\guilh\AppData\Local\Temp\ccL8RZQb.s:180    .text:00000086 NWK_GroupIsMember

UNDEFINED SYMBOLS
__do_clear_bss
