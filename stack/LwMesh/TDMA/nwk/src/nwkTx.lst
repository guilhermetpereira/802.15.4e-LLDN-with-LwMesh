   1               		.file	"nwkTx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.bss.n,"aw",@nobits
  14               	n:
  15 0000 00        		.zero	1
  16               		.section	.bss.tTS,"aw",@nobits
  19               	tTS:
  20 0000 0000 0000 		.zero	4
  21               		.section	.bss.nwkTxPhyActiveFrame,"aw",@nobits
  24               	nwkTxPhyActiveFrame:
  25 0000 0000      		.zero	2
  26               		.section	.bss.nwkTxAckWaitTimer,"aw",@nobits
  29               	nwkTxAckWaitTimer:
  30 0000 0000 0000 		.zero	13
  30      0000 0000 
  30      0000 0000 
  30      00
  31               		.section	.bss.nwkTxDelayTimer,"aw",@nobits
  34               	nwkTxDelayTimer:
  35 0000 0000 0000 		.zero	13
  35      0000 0000 
  35      0000 0000 
  35      00
  36               		.text
  37               	.global	nwkTxInit
  39               	nwkTxInit:
  40               	.LFB66:
  41               		.file 1 "../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * \file nwkTx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * \brief Transmit routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkRoute.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkCommand.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkSecurity.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Definitions ------------------------------------------------------------*/
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #define NWK_TX_ACK_WAIT_TIMER_INTERVAL    50 /* ms */
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #define NWK_TX_DELAY_TIMER_INTERVAL       10 /* ms */
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #define NWK_TX_DELAY_JITTER_MASK          0x07
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Types ------------------------------------------------------------------*/
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** enum {
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_ENCRYPT    = 0x10,
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_WAIT_DELAY = 0x11,
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_DELAY      = 0x12,
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_SEND       = 0x13,
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_WAIT_CONF  = 0x14,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_SENT       = 0x15,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_WAIT_ACK   = 0x16,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_CONFIRM    = 0x17,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** };
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Prototypes -------------------------------------------------------------*/
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer);
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static void nwkTxDelayTimerHandler(SYS_Timer_t *timer);
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Variables --------------------------------------------------------------*/
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static NwkFrame_t *nwkTxPhyActiveFrame;
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static SYS_Timer_t nwkTxAckWaitTimer;
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static SYS_Timer_t nwkTxDelayTimer;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Implementations --------------------------------------------------------*/
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *  @brief Initializes the Tx module
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxInit(void)
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
  42               		.loc 1 96 0
  43               		.cfi_startproc
  44 0000 CF93      		push r28
  45               	.LCFI0:
  46               		.cfi_def_cfa_offset 3
  47               		.cfi_offset 28, -2
  48 0002 DF93      		push r29
  49               	.LCFI1:
  50               		.cfi_def_cfa_offset 4
  51               		.cfi_offset 29, -3
  52 0004 CDB7      		in r28,__SP_L__
  53 0006 DEB7      		in r29,__SP_H__
  54               	.LCFI2:
  55               		.cfi_def_cfa_register 28
  56               	/* prologue: function */
  57               	/* frame size = 0 */
  58               	/* stack size = 2 */
  59               	.L__stack_usage = 2
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxPhyActiveFrame = NULL;
  60               		.loc 1 97 0
  61 0008 1092 0000 		sts nwkTxPhyActiveFrame+1,__zero_reg__
  62 000c 1092 0000 		sts nwkTxPhyActiveFrame,__zero_reg__
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxAckWaitTimer.interval = NWK_TX_ACK_WAIT_TIMER_INTERVAL;
  63               		.loc 1 99 0
  64 0010 82E3      		ldi r24,lo8(50)
  65 0012 90E0      		ldi r25,0
  66 0014 A0E0      		ldi r26,0
  67 0016 B0E0      		ldi r27,0
  68 0018 8093 0000 		sts nwkTxAckWaitTimer+6,r24
  69 001c 9093 0000 		sts nwkTxAckWaitTimer+6+1,r25
  70 0020 A093 0000 		sts nwkTxAckWaitTimer+6+2,r26
  71 0024 B093 0000 		sts nwkTxAckWaitTimer+6+3,r27
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxAckWaitTimer.mode = SYS_TIMER_INTERVAL_MODE;
  72               		.loc 1 100 0
  73 0028 1092 0000 		sts nwkTxAckWaitTimer+10,__zero_reg__
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxAckWaitTimer.handler = nwkTxAckWaitTimerHandler;
  74               		.loc 1 101 0
  75 002c 80E0      		ldi r24,lo8(gs(nwkTxAckWaitTimerHandler))
  76 002e 90E0      		ldi r25,hi8(gs(nwkTxAckWaitTimerHandler))
  77 0030 9093 0000 		sts nwkTxAckWaitTimer+11+1,r25
  78 0034 8093 0000 		sts nwkTxAckWaitTimer+11,r24
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxDelayTimer.interval = NWK_TX_DELAY_TIMER_INTERVAL;
  79               		.loc 1 103 0
  80 0038 8AE0      		ldi r24,lo8(10)
  81 003a 90E0      		ldi r25,0
  82 003c A0E0      		ldi r26,0
  83 003e B0E0      		ldi r27,0
  84 0040 8093 0000 		sts nwkTxDelayTimer+6,r24
  85 0044 9093 0000 		sts nwkTxDelayTimer+6+1,r25
  86 0048 A093 0000 		sts nwkTxDelayTimer+6+2,r26
  87 004c B093 0000 		sts nwkTxDelayTimer+6+3,r27
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxDelayTimer.mode = SYS_TIMER_INTERVAL_MODE;
  88               		.loc 1 104 0
  89 0050 1092 0000 		sts nwkTxDelayTimer+10,__zero_reg__
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxDelayTimer.handler = nwkTxDelayTimerHandler;
  90               		.loc 1 105 0
  91 0054 80E0      		ldi r24,lo8(gs(nwkTxDelayTimerHandler))
  92 0056 90E0      		ldi r25,hi8(gs(nwkTxDelayTimerHandler))
  93 0058 9093 0000 		sts nwkTxDelayTimer+11+1,r25
  94 005c 8093 0000 		sts nwkTxDelayTimer+11,r24
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
  95               		.loc 1 106 0
  96 0060 0000      		nop
  97               	/* epilogue start */
  98 0062 DF91      		pop r29
  99 0064 CF91      		pop r28
 100 0066 0895      		ret
 101               		.cfi_endproc
 102               	.LFE66:
 104               	.global	nwkTxBeaconFrame
 106               	nwkTxBeaconFrame:
 107               	.LFB67:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxBeaconFrame(NwkFrame_t *frame)
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 108               		.loc 1 111 0
 109               		.cfi_startproc
 110 0068 CF93      		push r28
 111               	.LCFI3:
 112               		.cfi_def_cfa_offset 3
 113               		.cfi_offset 28, -2
 114 006a DF93      		push r29
 115               	.LCFI4:
 116               		.cfi_def_cfa_offset 4
 117               		.cfi_offset 29, -3
 118 006c 00D0      		rcall .
 119 006e 00D0      		rcall .
 120               	.LCFI5:
 121               		.cfi_def_cfa_offset 8
 122 0070 CDB7      		in r28,__SP_L__
 123 0072 DEB7      		in r29,__SP_H__
 124               	.LCFI6:
 125               		.cfi_def_cfa_register 28
 126               	/* prologue: function */
 127               	/* frame size = 4 */
 128               	/* stack size = 6 */
 129               	.L__stack_usage = 6
 130 0074 9C83      		std Y+4,r25
 131 0076 8B83      		std Y+3,r24
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrameBeaconHeader_t *beacon = &frame->beacon;
 132               		.loc 1 112 0
 133 0078 8B81      		ldd r24,Y+3
 134 007a 9C81      		ldd r25,Y+4
 135 007c 0296      		adiw r24,2
 136 007e 9A83      		std Y+2,r25
 137 0080 8983      		std Y+1,r24
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->state = NWK_TX_STATE_SEND;
 138               		.loc 1 114 0
 139 0082 8B81      		ldd r24,Y+3
 140 0084 9C81      		ldd r25,Y+4
 141 0086 23E1      		ldi r18,lo8(19)
 142 0088 FC01      		movw r30,r24
 143 008a 2083      		st Z,r18
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.status = NWK_SUCCESS_STATUS;
 144               		.loc 1 115 0
 145 008c 8B81      		ldd r24,Y+3
 146 008e 9C81      		ldd r25,Y+4
 147 0090 8D57      		subi r24,125
 148 0092 9F4F      		sbci r25,-1
 149 0094 FC01      		movw r30,r24
 150 0096 1082      		st Z,__zero_reg__
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.timeout = 0;
 151               		.loc 1 116 0
 152 0098 8B81      		ldd r24,Y+3
 153 009a 9C81      		ldd r25,Y+4
 154 009c 8C57      		subi r24,124
 155 009e 9F4F      		sbci r25,-1
 156 00a0 FC01      		movw r30,r24
 157 00a2 1182      		std Z+1,__zero_reg__
 158 00a4 1082      		st Z,__zero_reg__
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macFcf = 0x8000;
 159               		.loc 1 118 0
 160 00a6 8981      		ldd r24,Y+1
 161 00a8 9A81      		ldd r25,Y+2
 162 00aa 20E0      		ldi r18,0
 163 00ac 30E8      		ldi r19,lo8(-128)
 164 00ae FC01      		movw r30,r24
 165 00b0 3183      		std Z+1,r19
 166 00b2 2083      		st Z,r18
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSeq = ++nwkIb.macSeqNum;
 167               		.loc 1 119 0
 168 00b4 8091 0000 		lds r24,nwkIb+5
 169 00b8 8F5F      		subi r24,lo8(-(1))
 170 00ba 8093 0000 		sts nwkIb+5,r24
 171 00be 2091 0000 		lds r18,nwkIb+5
 172 00c2 8981      		ldd r24,Y+1
 173 00c4 9A81      		ldd r25,Y+2
 174 00c6 FC01      		movw r30,r24
 175 00c8 2283      		std Z+2,r18
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSrcPanId = nwkIb.panId;
 176               		.loc 1 120 0
 177 00ca 2091 0000 		lds r18,nwkIb+2
 178 00ce 3091 0000 		lds r19,nwkIb+2+1
 179 00d2 8981      		ldd r24,Y+1
 180 00d4 9A81      		ldd r25,Y+2
 181 00d6 FC01      		movw r30,r24
 182 00d8 3483      		std Z+4,r19
 183 00da 2383      		std Z+3,r18
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSrcAddr = nwkIb.addr;
 184               		.loc 1 121 0
 185 00dc 2091 0000 		lds r18,nwkIb
 186 00e0 3091 0000 		lds r19,nwkIb+1
 187 00e4 8981      		ldd r24,Y+1
 188 00e6 9A81      		ldd r25,Y+2
 189 00e8 FC01      		movw r30,r24
 190 00ea 3683      		std Z+6,r19
 191 00ec 2583      		std Z+5,r18
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 192               		.loc 1 122 0
 193 00ee 0000      		nop
 194               	/* epilogue start */
 195 00f0 0F90      		pop __tmp_reg__
 196 00f2 0F90      		pop __tmp_reg__
 197 00f4 0F90      		pop __tmp_reg__
 198 00f6 0F90      		pop __tmp_reg__
 199 00f8 DF91      		pop r29
 200 00fa CF91      		pop r28
 201 00fc 0895      		ret
 202               		.cfi_endproc
 203               	.LFE67:
 205               	.global	nwkTxBeaconFrameLLDN
 207               	nwkTxBeaconFrameLLDN:
 208               	.LFB68:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxBeaconFrameLLDN(NwkFrame_t *frame)
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 209               		.loc 1 128 0
 210               		.cfi_startproc
 211 00fe CF93      		push r28
 212               	.LCFI7:
 213               		.cfi_def_cfa_offset 3
 214               		.cfi_offset 28, -2
 215 0100 DF93      		push r29
 216               	.LCFI8:
 217               		.cfi_def_cfa_offset 4
 218               		.cfi_offset 29, -3
 219 0102 00D0      		rcall .
 220 0104 00D0      		rcall .
 221               	.LCFI9:
 222               		.cfi_def_cfa_offset 8
 223 0106 CDB7      		in r28,__SP_L__
 224 0108 DEB7      		in r29,__SP_H__
 225               	.LCFI10:
 226               		.cfi_def_cfa_register 28
 227               	/* prologue: function */
 228               	/* frame size = 4 */
 229               	/* stack size = 6 */
 230               	.L__stack_usage = 6
 231 010a 9C83      		std Y+4,r25
 232 010c 8B83      		std Y+3,r24
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrameBeaconHeaderLLDN_t *beacon = &frame->LLbeacon;
 233               		.loc 1 129 0
 234 010e 8B81      		ldd r24,Y+3
 235 0110 9C81      		ldd r25,Y+4
 236 0112 0296      		adiw r24,2
 237 0114 9A83      		std Y+2,r25
 238 0116 8983      		std Y+1,r24
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->state = NWK_TX_STATE_SEND;
 239               		.loc 1 130 0
 240 0118 8B81      		ldd r24,Y+3
 241 011a 9C81      		ldd r25,Y+4
 242 011c 23E1      		ldi r18,lo8(19)
 243 011e FC01      		movw r30,r24
 244 0120 2083      		st Z,r18
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.status = NWK_SUCCESS_STATUS;
 245               		.loc 1 131 0
 246 0122 8B81      		ldd r24,Y+3
 247 0124 9C81      		ldd r25,Y+4
 248 0126 8D57      		subi r24,125
 249 0128 9F4F      		sbci r25,-1
 250 012a FC01      		movw r30,r24
 251 012c 1082      		st Z,__zero_reg__
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.timeout = 0;
 252               		.loc 1 132 0
 253 012e 8B81      		ldd r24,Y+3
 254 0130 9C81      		ldd r25,Y+4
 255 0132 8C57      		subi r24,124
 256 0134 9F4F      		sbci r25,-1
 257 0136 FC01      		movw r30,r24
 258 0138 1182      		std Z+1,__zero_reg__
 259 013a 1082      		st Z,__zero_reg__
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.FrameType				= 0b100; 	// LLDN type
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.SecurityEnabled 	= 0b1;	// 1 to enable security header and sequence number
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.FrameVersion			= 0b0;	// zero to indicate compatible with IEEE Std 802.15.4.
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.ackRequest				= 0b0;	// zero to indicade no ACK
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.SubFrameType			= 0b00; // Subtype = LL-Beacon
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macFcf = 0x0c;
 260               		.loc 1 139 0
 261 013c 8981      		ldd r24,Y+1
 262 013e 9A81      		ldd r25,Y+2
 263 0140 2CE0      		ldi r18,lo8(12)
 264 0142 FC01      		movw r30,r24
 265 0144 2083      		st Z,r18
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSeqNumber = ++nwkIb.macSeqNum;
 266               		.loc 1 140 0
 267 0146 8091 0000 		lds r24,nwkIb+5
 268 014a 8F5F      		subi r24,lo8(-(1))
 269 014c 8093 0000 		sts nwkIb+5,r24
 270 0150 2091 0000 		lds r18,nwkIb+5
 271 0154 8981      		ldd r24,Y+1
 272 0156 9A81      		ldd r25,Y+2
 273 0158 FC01      		movw r30,r24
 274 015a 2183      		std Z+1,r18
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// Auxiliarty Security is not fully implemented, it is only enabled so Sequence Number is present 
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSecHeader.secLevel	= 0b000;
 275               		.loc 1 143 0
 276 015c 8981      		ldd r24,Y+1
 277 015e 9A81      		ldd r25,Y+2
 278 0160 FC01      		movw r30,r24
 279 0162 2281      		ldd r18,Z+2
 280 0164 287F      		andi r18,lo8(-8)
 281 0166 FC01      		movw r30,r24
 282 0168 2283      		std Z+2,r18
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSecHeader.KeyId		= 0b00;
 283               		.loc 1 144 0
 284 016a 8981      		ldd r24,Y+1
 285 016c 9A81      		ldd r25,Y+2
 286 016e FC01      		movw r30,r24
 287 0170 2281      		ldd r18,Z+2
 288 0172 277E      		andi r18,lo8(-25)
 289 0174 FC01      		movw r30,r24
 290 0176 2283      		std Z+2,r18
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSecHeader.countSup	= 0b0;
 291               		.loc 1 145 0
 292 0178 8981      		ldd r24,Y+1
 293 017a 9A81      		ldd r25,Y+2
 294 017c FC01      		movw r30,r24
 295 017e 2281      		ldd r18,Z+2
 296 0180 2F7D      		andi r18,lo8(-33)
 297 0182 FC01      		movw r30,r24
 298 0184 2283      		std Z+2,r18
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSecHeader.countSize= 0b0;
 299               		.loc 1 146 0
 300 0186 8981      		ldd r24,Y+1
 301 0188 9A81      		ldd r25,Y+2
 302 018a FC01      		movw r30,r24
 303 018c 2281      		ldd r18,Z+2
 304 018e 2F7B      		andi r18,lo8(-65)
 305 0190 FC01      		movw r30,r24
 306 0192 2283      		std Z+2,r18
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 307               		.loc 1 147 0
 308 0194 0000      		nop
 309               	/* epilogue start */
 310 0196 0F90      		pop __tmp_reg__
 311 0198 0F90      		pop __tmp_reg__
 312 019a 0F90      		pop __tmp_reg__
 313 019c 0F90      		pop __tmp_reg__
 314 019e DF91      		pop r29
 315 01a0 CF91      		pop r28
 316 01a2 0895      		ret
 317               		.cfi_endproc
 318               	.LFE68:
 320               	.global	nwkTxMacCommandFrameLLDN
 322               	nwkTxMacCommandFrameLLDN:
 323               	.LFB69:
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxMacCommandFrameLLDN(NwkFrame_t *frame, uint16_t subtype)
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 324               		.loc 1 150 0
 325               		.cfi_startproc
 326 01a4 CF93      		push r28
 327               	.LCFI11:
 328               		.cfi_def_cfa_offset 3
 329               		.cfi_offset 28, -2
 330 01a6 DF93      		push r29
 331               	.LCFI12:
 332               		.cfi_def_cfa_offset 4
 333               		.cfi_offset 29, -3
 334 01a8 00D0      		rcall .
 335 01aa 00D0      		rcall .
 336 01ac 00D0      		rcall .
 337               	.LCFI13:
 338               		.cfi_def_cfa_offset 10
 339 01ae CDB7      		in r28,__SP_L__
 340 01b0 DEB7      		in r29,__SP_H__
 341               	.LCFI14:
 342               		.cfi_def_cfa_register 28
 343               	/* prologue: function */
 344               	/* frame size = 6 */
 345               	/* stack size = 8 */
 346               	.L__stack_usage = 8
 347 01b2 9C83      		std Y+4,r25
 348 01b4 8B83      		std Y+3,r24
 349 01b6 7E83      		std Y+6,r23
 350 01b8 6D83      		std Y+5,r22
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrameGeneralHeaderLLDN_t *mac_command = &frame->LLgeneral;
 351               		.loc 1 151 0
 352 01ba 8B81      		ldd r24,Y+3
 353 01bc 9C81      		ldd r25,Y+4
 354 01be 0296      		adiw r24,2
 355 01c0 9A83      		std Y+2,r25
 356 01c2 8983      		std Y+1,r24
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->state = NWK_TX_STATE_SEND;
 357               		.loc 1 152 0
 358 01c4 8B81      		ldd r24,Y+3
 359 01c6 9C81      		ldd r25,Y+4
 360 01c8 23E1      		ldi r18,lo8(19)
 361 01ca FC01      		movw r30,r24
 362 01cc 2083      		st Z,r18
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.status = NWK_SUCCESS_STATUS;
 363               		.loc 1 153 0
 364 01ce 8B81      		ldd r24,Y+3
 365 01d0 9C81      		ldd r25,Y+4
 366 01d2 8D57      		subi r24,125
 367 01d4 9F4F      		sbci r25,-1
 368 01d6 FC01      		movw r30,r24
 369 01d8 1082      		st Z,__zero_reg__
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.timeout = 0;
 370               		.loc 1 154 0
 371 01da 8B81      		ldd r24,Y+3
 372 01dc 9C81      		ldd r25,Y+4
 373 01de 8C57      		subi r24,124
 374 01e0 9F4F      		sbci r25,-1
 375 01e2 FC01      		movw r30,r24
 376 01e4 1182      		std Z+1,__zero_reg__
 377 01e6 1082      		st Z,__zero_reg__
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.FrameType					= 0b100; // LLDN type
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.SecurityEnabled 	= 0b1;	// 1 to enable security header and sequence number
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.FrameVersion			= 0b0;	// zero to indicate compatible with IEEE Std 802.15.4.
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.ackRequest				= 0b0;	// zero to indicade no ACK
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.SubFrameType			= 0b11; // Subtype = LL-MAC command
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (subtype & NWK_OPT_MAC_COMMAND) 		mac_command->macFcf = 0xcc; //LL-MAC Command
 378               		.loc 1 161 0
 379 01e8 8D81      		ldd r24,Y+5
 380 01ea 9E81      		ldd r25,Y+6
 381 01ec 9923      		tst r25
 382 01ee 04F4      		brge .L5
 383               		.loc 1 161 0 is_stmt 0 discriminator 1
 384 01f0 8981      		ldd r24,Y+1
 385 01f2 9A81      		ldd r25,Y+2
 386 01f4 2CEC      		ldi r18,lo8(-52)
 387 01f6 FC01      		movw r30,r24
 388 01f8 2083      		st Z,r18
 389 01fa 00C0      		rjmp .L6
 390               	.L5:
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	else if (subtype & NWK_OPT_LLDN_DATA) mac_command->macFcf = 0x4c; //LL-Data
 391               		.loc 1 162 0 is_stmt 1
 392 01fc 8D81      		ldd r24,Y+5
 393 01fe 9E81      		ldd r25,Y+6
 394 0200 8827      		clr r24
 395 0202 9072      		andi r25,32
 396 0204 892B      		or r24,r25
 397 0206 01F0      		breq .L7
 398               		.loc 1 162 0 is_stmt 0 discriminator 1
 399 0208 8981      		ldd r24,Y+1
 400 020a 9A81      		ldd r25,Y+2
 401 020c 2CE4      		ldi r18,lo8(76)
 402 020e FC01      		movw r30,r24
 403 0210 2083      		st Z,r18
 404 0212 00C0      		rjmp .L6
 405               	.L7:
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	else if (subtype & NWK_OPT_LLDN_ACK) 	mac_command->macFcf = 0x8c;	//LL-Acknowledgment
 406               		.loc 1 163 0 is_stmt 1
 407 0214 8D81      		ldd r24,Y+5
 408 0216 9E81      		ldd r25,Y+6
 409 0218 8827      		clr r24
 410 021a 9074      		andi r25,64
 411 021c 892B      		or r24,r25
 412 021e 01F0      		breq .L6
 413               		.loc 1 163 0 is_stmt 0 discriminator 1
 414 0220 8981      		ldd r24,Y+1
 415 0222 9A81      		ldd r25,Y+2
 416 0224 2CE8      		ldi r18,lo8(-116)
 417 0226 FC01      		movw r30,r24
 418 0228 2083      		st Z,r18
 419               	.L6:
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	mac_command->macSeqNumber = ++nwkIb.macSeqNum;
 420               		.loc 1 164 0 is_stmt 1
 421 022a 8091 0000 		lds r24,nwkIb+5
 422 022e 8F5F      		subi r24,lo8(-(1))
 423 0230 8093 0000 		sts nwkIb+5,r24
 424 0234 2091 0000 		lds r18,nwkIb+5
 425 0238 8981      		ldd r24,Y+1
 426 023a 9A81      		ldd r25,Y+2
 427 023c FC01      		movw r30,r24
 428 023e 2183      		std Z+1,r18
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// Auxiliarty Security is not fully implemented, it is only enabled so Sequence Number is present 
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	mac_command->macSecHeader.secLevel	= 0b000;
 429               		.loc 1 167 0
 430 0240 8981      		ldd r24,Y+1
 431 0242 9A81      		ldd r25,Y+2
 432 0244 FC01      		movw r30,r24
 433 0246 2281      		ldd r18,Z+2
 434 0248 287F      		andi r18,lo8(-8)
 435 024a FC01      		movw r30,r24
 436 024c 2283      		std Z+2,r18
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	mac_command->macSecHeader.KeyId		= 0b00;
 437               		.loc 1 168 0
 438 024e 8981      		ldd r24,Y+1
 439 0250 9A81      		ldd r25,Y+2
 440 0252 FC01      		movw r30,r24
 441 0254 2281      		ldd r18,Z+2
 442 0256 277E      		andi r18,lo8(-25)
 443 0258 FC01      		movw r30,r24
 444 025a 2283      		std Z+2,r18
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	mac_command->macSecHeader.countSup	= 0b0;
 445               		.loc 1 169 0
 446 025c 8981      		ldd r24,Y+1
 447 025e 9A81      		ldd r25,Y+2
 448 0260 FC01      		movw r30,r24
 449 0262 2281      		ldd r18,Z+2
 450 0264 2F7D      		andi r18,lo8(-33)
 451 0266 FC01      		movw r30,r24
 452 0268 2283      		std Z+2,r18
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	mac_command->macSecHeader.countSize= 0b0;
 453               		.loc 1 170 0
 454 026a 8981      		ldd r24,Y+1
 455 026c 9A81      		ldd r25,Y+2
 456 026e FC01      		movw r30,r24
 457 0270 2281      		ldd r18,Z+2
 458 0272 2F7B      		andi r18,lo8(-65)
 459 0274 FC01      		movw r30,r24
 460 0276 2283      		std Z+2,r18
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 461               		.loc 1 171 0
 462 0278 0000      		nop
 463               	/* epilogue start */
 464 027a 2696      		adiw r28,6
 465 027c 0FB6      		in __tmp_reg__,__SREG__
 466 027e F894      		cli
 467 0280 DEBF      		out __SP_H__,r29
 468 0282 0FBE      		out __SREG__,__tmp_reg__
 469 0284 CDBF      		out __SP_L__,r28
 470 0286 DF91      		pop r29
 471 0288 CF91      		pop r28
 472 028a 0895      		ret
 473               		.cfi_endproc
 474               	.LFE69:
 476               	.global	nwkTxFrame
 478               	nwkTxFrame:
 479               	.LFB70:
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxFrame(NwkFrame_t *frame)
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 480               		.loc 1 177 0
 481               		.cfi_startproc
 482 028c CF93      		push r28
 483               	.LCFI15:
 484               		.cfi_def_cfa_offset 3
 485               		.cfi_offset 28, -2
 486 028e DF93      		push r29
 487               	.LCFI16:
 488               		.cfi_def_cfa_offset 4
 489               		.cfi_offset 29, -3
 490 0290 00D0      		rcall .
 491 0292 00D0      		rcall .
 492               	.LCFI17:
 493               		.cfi_def_cfa_offset 8
 494 0294 CDB7      		in r28,__SP_L__
 495 0296 DEB7      		in r29,__SP_H__
 496               	.LCFI18:
 497               		.cfi_def_cfa_register 28
 498               	/* prologue: function */
 499               	/* frame size = 4 */
 500               	/* stack size = 6 */
 501               	.L__stack_usage = 6
 502 0298 9C83      		std Y+4,r25
 503 029a 8B83      		std Y+3,r24
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrameHeader_t *header = &frame->header;
 504               		.loc 1 178 0
 505 029c 8B81      		ldd r24,Y+3
 506 029e 9C81      		ldd r25,Y+4
 507 02a0 0296      		adiw r24,2
 508 02a2 9A83      		std Y+2,r25
 509 02a4 8983      		std Y+1,r24
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (frame->tx.control & NWK_TX_CONTROL_ROUTING) {
 510               		.loc 1 180 0
 511 02a6 8B81      		ldd r24,Y+3
 512 02a8 9C81      		ldd r25,Y+4
 513 02aa 8A57      		subi r24,122
 514 02ac 9F4F      		sbci r25,-1
 515 02ae FC01      		movw r30,r24
 516 02b0 8081      		ld r24,Z
 517 02b2 882F      		mov r24,r24
 518 02b4 90E0      		ldi r25,0
 519 02b6 8270      		andi r24,2
 520 02b8 9927      		clr r25
 521 02ba 892B      		or r24,r25
 522 02bc 01F0      		breq .L9
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->state = NWK_TX_STATE_DELAY;
 523               		.loc 1 181 0
 524 02be 8B81      		ldd r24,Y+3
 525 02c0 9C81      		ldd r25,Y+4
 526 02c2 22E1      		ldi r18,lo8(18)
 527 02c4 FC01      		movw r30,r24
 528 02c6 2083      		st Z,r18
 529 02c8 00C0      		rjmp .L10
 530               	.L9:
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		} else {
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_SECURITY
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (header->nwkFcf.security) {
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			frame->state = NWK_TX_STATE_ENCRYPT;
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		} else
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->state = NWK_TX_STATE_DELAY;
 531               		.loc 1 188 0
 532 02ca 8B81      		ldd r24,Y+3
 533 02cc 9C81      		ldd r25,Y+4
 534 02ce 22E1      		ldi r18,lo8(18)
 535 02d0 FC01      		movw r30,r24
 536 02d2 2083      		st Z,r18
 537               	.L10:
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.status = NWK_SUCCESS_STATUS;
 538               		.loc 1 191 0
 539 02d4 8B81      		ldd r24,Y+3
 540 02d6 9C81      		ldd r25,Y+4
 541 02d8 8D57      		subi r24,125
 542 02da 9F4F      		sbci r25,-1
 543 02dc FC01      		movw r30,r24
 544 02de 1082      		st Z,__zero_reg__
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID) {
 545               		.loc 1 193 0
 546 02e0 8B81      		ldd r24,Y+3
 547 02e2 9C81      		ldd r25,Y+4
 548 02e4 8A57      		subi r24,122
 549 02e6 9F4F      		sbci r25,-1
 550 02e8 FC01      		movw r30,r24
 551 02ea 8081      		ld r24,Z
 552 02ec 882F      		mov r24,r24
 553 02ee 90E0      		ldi r25,0
 554 02f0 8170      		andi r24,1
 555 02f2 9927      		clr r25
 556 02f4 892B      		or r24,r25
 557 02f6 01F0      		breq .L11
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		header->macDstPanId = NWK_BROADCAST_PANID;
 558               		.loc 1 194 0
 559 02f8 8981      		ldd r24,Y+1
 560 02fa 9A81      		ldd r25,Y+2
 561 02fc 2FEF      		ldi r18,lo8(-1)
 562 02fe 3FEF      		ldi r19,lo8(-1)
 563 0300 FC01      		movw r30,r24
 564 0302 3483      		std Z+4,r19
 565 0304 2383      		std Z+3,r18
 566 0306 00C0      		rjmp .L12
 567               	.L11:
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		} else {
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		header->macDstPanId = nwkIb.panId;
 568               		.loc 1 196 0
 569 0308 2091 0000 		lds r18,nwkIb+2
 570 030c 3091 0000 		lds r19,nwkIb+2+1
 571 0310 8981      		ldd r24,Y+1
 572 0312 9A81      		ldd r25,Y+2
 573 0314 FC01      		movw r30,r24
 574 0316 3483      		std Z+4,r19
 575 0318 2383      		std Z+3,r18
 576               	.L12:
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_ROUTING
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (0 == (frame->tx.control & NWK_TX_CONTROL_DIRECT_LINK) &&
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	0 ==
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	(frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID)) {
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		nwkRoutePrepareTx(frame);
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	} else
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	header->macDstAddr = header->nwkDstAddr;
 577               		.loc 1 207 0
 578 031a 8981      		ldd r24,Y+1
 579 031c 9A81      		ldd r25,Y+2
 580 031e FC01      		movw r30,r24
 581 0320 2585      		ldd r18,Z+13
 582 0322 3685      		ldd r19,Z+14
 583 0324 8981      		ldd r24,Y+1
 584 0326 9A81      		ldd r25,Y+2
 585 0328 FC01      		movw r30,r24
 586 032a 3683      		std Z+6,r19
 587 032c 2583      		std Z+5,r18
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	header->macSrcAddr = nwkIb.addr;
 588               		.loc 1 208 0
 589 032e 2091 0000 		lds r18,nwkIb
 590 0332 3091 0000 		lds r19,nwkIb+1
 591 0336 8981      		ldd r24,Y+1
 592 0338 9A81      		ldd r25,Y+2
 593 033a FC01      		movw r30,r24
 594 033c 3087      		std Z+8,r19
 595 033e 2783      		std Z+7,r18
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	header->macSeq = ++nwkIb.macSeqNum;
 596               		.loc 1 209 0
 597 0340 8091 0000 		lds r24,nwkIb+5
 598 0344 8F5F      		subi r24,lo8(-(1))
 599 0346 8093 0000 		sts nwkIb+5,r24
 600 034a 2091 0000 		lds r18,nwkIb+5
 601 034e 8981      		ldd r24,Y+1
 602 0350 9A81      		ldd r25,Y+2
 603 0352 FC01      		movw r30,r24
 604 0354 2283      		std Z+2,r18
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 605               		.loc 1 211 0
 606 0356 8981      		ldd r24,Y+1
 607 0358 9A81      		ldd r25,Y+2
 608 035a FC01      		movw r30,r24
 609 035c 8581      		ldd r24,Z+5
 610 035e 9681      		ldd r25,Z+6
 611 0360 0196      		adiw r24,1
 612 0362 01F4      		brne .L13
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		header->macFcf = 0x8841;
 613               		.loc 1 212 0
 614 0364 8981      		ldd r24,Y+1
 615 0366 9A81      		ldd r25,Y+2
 616 0368 21E4      		ldi r18,lo8(65)
 617 036a 38E8      		ldi r19,lo8(-120)
 618 036c FC01      		movw r30,r24
 619 036e 3183      		std Z+1,r19
 620 0370 2083      		st Z,r18
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->tx.timeout = (rand() & NWK_TX_DELAY_JITTER_MASK) + 1;
 621               		.loc 1 213 0
 622 0372 0E94 0000 		call rand
 623 0376 8770      		andi r24,7
 624 0378 9927      		clr r25
 625 037a 0196      		adiw r24,1
 626 037c 9C01      		movw r18,r24
 627 037e 8B81      		ldd r24,Y+3
 628 0380 9C81      		ldd r25,Y+4
 629 0382 8C57      		subi r24,124
 630 0384 9F4F      		sbci r25,-1
 631 0386 FC01      		movw r30,r24
 632 0388 3183      		std Z+1,r19
 633 038a 2083      		st Z,r18
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		} else {
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		header->macFcf = 0x8841;
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->tx.timeout = 0;
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 634               		.loc 1 218 0
 635 038c 00C0      		rjmp .L15
 636               	.L13:
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->tx.timeout = 0;
 637               		.loc 1 215 0
 638 038e 8981      		ldd r24,Y+1
 639 0390 9A81      		ldd r25,Y+2
 640 0392 21E4      		ldi r18,lo8(65)
 641 0394 38E8      		ldi r19,lo8(-120)
 642 0396 FC01      		movw r30,r24
 643 0398 3183      		std Z+1,r19
 644 039a 2083      		st Z,r18
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 645               		.loc 1 216 0
 646 039c 8B81      		ldd r24,Y+3
 647 039e 9C81      		ldd r25,Y+4
 648 03a0 8C57      		subi r24,124
 649 03a2 9F4F      		sbci r25,-1
 650 03a4 FC01      		movw r30,r24
 651 03a6 1182      		std Z+1,__zero_reg__
 652 03a8 1082      		st Z,__zero_reg__
 653               	.L15:
 654               		.loc 1 218 0
 655 03aa 0000      		nop
 656               	/* epilogue start */
 657 03ac 0F90      		pop __tmp_reg__
 658 03ae 0F90      		pop __tmp_reg__
 659 03b0 0F90      		pop __tmp_reg__
 660 03b2 0F90      		pop __tmp_reg__
 661 03b4 DF91      		pop r29
 662 03b6 CF91      		pop r28
 663 03b8 0895      		ret
 664               		.cfi_endproc
 665               	.LFE70:
 667               	.global	nwkTxBroadcastFrame
 669               	nwkTxBroadcastFrame:
 670               	.LFB71:
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxBroadcastFrame(NwkFrame_t *frame)
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 671               		.loc 1 223 0
 672               		.cfi_startproc
 673 03ba CF93      		push r28
 674               	.LCFI19:
 675               		.cfi_def_cfa_offset 3
 676               		.cfi_offset 28, -2
 677 03bc DF93      		push r29
 678               	.LCFI20:
 679               		.cfi_def_cfa_offset 4
 680               		.cfi_offset 29, -3
 681 03be 00D0      		rcall .
 682 03c0 00D0      		rcall .
 683               	.LCFI21:
 684               		.cfi_def_cfa_offset 8
 685 03c2 CDB7      		in r28,__SP_L__
 686 03c4 DEB7      		in r29,__SP_H__
 687               	.LCFI22:
 688               		.cfi_def_cfa_register 28
 689               	/* prologue: function */
 690               	/* frame size = 4 */
 691               	/* stack size = 6 */
 692               	.L__stack_usage = 6
 693 03c6 9C83      		std Y+4,r25
 694 03c8 8B83      		std Y+3,r24
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *newFrame;
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (NULL == (newFrame = nwkFrameAlloc())) {
 695               		.loc 1 226 0
 696 03ca 0E94 0000 		call nwkFrameAlloc
 697 03ce 9A83      		std Y+2,r25
 698 03d0 8983      		std Y+1,r24
 699 03d2 8981      		ldd r24,Y+1
 700 03d4 9A81      		ldd r25,Y+2
 701 03d6 892B      		or r24,r25
 702 03d8 01F4      		brne .+2
 703 03da 00C0      		rjmp .L19
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return;
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->payload += sizeof(NwkFrameHeader_t);
 704               		.loc 1 230 0
 705 03dc 8981      		ldd r24,Y+1
 706 03de 9A81      		ldd r25,Y+2
 707 03e0 8F57      		subi r24,127
 708 03e2 9F4F      		sbci r25,-1
 709 03e4 FC01      		movw r30,r24
 710 03e6 8081      		ld r24,Z
 711 03e8 9181      		ldd r25,Z+1
 712 03ea 9C01      		movw r18,r24
 713 03ec 205F      		subi r18,-16
 714 03ee 3F4F      		sbci r19,-1
 715 03f0 8981      		ldd r24,Y+1
 716 03f2 9A81      		ldd r25,Y+2
 717 03f4 8F57      		subi r24,127
 718 03f6 9F4F      		sbci r25,-1
 719 03f8 FC01      		movw r30,r24
 720 03fa 3183      		std Z+1,r19
 721 03fc 2083      		st Z,r18
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->state = NWK_TX_STATE_DELAY;
 722               		.loc 1 232 0
 723 03fe 8981      		ldd r24,Y+1
 724 0400 9A81      		ldd r25,Y+2
 725 0402 22E1      		ldi r18,lo8(18)
 726 0404 FC01      		movw r30,r24
 727 0406 2083      		st Z,r18
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->size = frame->size;
 728               		.loc 1 233 0
 729 0408 8B81      		ldd r24,Y+3
 730 040a 9C81      		ldd r25,Y+4
 731 040c FC01      		movw r30,r24
 732 040e 2181      		ldd r18,Z+1
 733 0410 8981      		ldd r24,Y+1
 734 0412 9A81      		ldd r25,Y+2
 735 0414 FC01      		movw r30,r24
 736 0416 2183      		std Z+1,r18
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->tx.status = NWK_SUCCESS_STATUS;
 737               		.loc 1 234 0
 738 0418 8981      		ldd r24,Y+1
 739 041a 9A81      		ldd r25,Y+2
 740 041c 8D57      		subi r24,125
 741 041e 9F4F      		sbci r25,-1
 742 0420 FC01      		movw r30,r24
 743 0422 1082      		st Z,__zero_reg__
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->tx.timeout = (rand() & NWK_TX_DELAY_JITTER_MASK) + 1;
 744               		.loc 1 235 0
 745 0424 0E94 0000 		call rand
 746 0428 8770      		andi r24,7
 747 042a 9927      		clr r25
 748 042c 0196      		adiw r24,1
 749 042e 9C01      		movw r18,r24
 750 0430 8981      		ldd r24,Y+1
 751 0432 9A81      		ldd r25,Y+2
 752 0434 8C57      		subi r24,124
 753 0436 9F4F      		sbci r25,-1
 754 0438 FC01      		movw r30,r24
 755 043a 3183      		std Z+1,r19
 756 043c 2083      		st Z,r18
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->tx.confirm = NULL;
 757               		.loc 1 236 0
 758 043e 8981      		ldd r24,Y+1
 759 0440 9A81      		ldd r25,Y+2
 760 0442 8957      		subi r24,121
 761 0444 9F4F      		sbci r25,-1
 762 0446 FC01      		movw r30,r24
 763 0448 1182      		std Z+1,__zero_reg__
 764 044a 1082      		st Z,__zero_reg__
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	memcpy(newFrame->data, frame->data, frame->size);
 765               		.loc 1 237 0
 766 044c 8B81      		ldd r24,Y+3
 767 044e 9C81      		ldd r25,Y+4
 768 0450 FC01      		movw r30,r24
 769 0452 8181      		ldd r24,Z+1
 770 0454 482F      		mov r20,r24
 771 0456 50E0      		ldi r21,0
 772 0458 8B81      		ldd r24,Y+3
 773 045a 9C81      		ldd r25,Y+4
 774 045c 9C01      		movw r18,r24
 775 045e 2E5F      		subi r18,-2
 776 0460 3F4F      		sbci r19,-1
 777 0462 8981      		ldd r24,Y+1
 778 0464 9A81      		ldd r25,Y+2
 779 0466 0296      		adiw r24,2
 780 0468 B901      		movw r22,r18
 781 046a 0E94 0000 		call memcpy
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macFcf = 0x8841;
 782               		.loc 1 239 0
 783 046e 8981      		ldd r24,Y+1
 784 0470 9A81      		ldd r25,Y+2
 785 0472 21E4      		ldi r18,lo8(65)
 786 0474 38E8      		ldi r19,lo8(-120)
 787 0476 FC01      		movw r30,r24
 788 0478 3383      		std Z+3,r19
 789 047a 2283      		std Z+2,r18
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macDstAddr = NWK_BROADCAST_ADDR;
 790               		.loc 1 240 0
 791 047c 8981      		ldd r24,Y+1
 792 047e 9A81      		ldd r25,Y+2
 793 0480 2FEF      		ldi r18,lo8(-1)
 794 0482 3FEF      		ldi r19,lo8(-1)
 795 0484 FC01      		movw r30,r24
 796 0486 3087      		std Z+8,r19
 797 0488 2783      		std Z+7,r18
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macDstPanId = frame->header.macDstPanId;
 798               		.loc 1 241 0
 799 048a 8B81      		ldd r24,Y+3
 800 048c 9C81      		ldd r25,Y+4
 801 048e FC01      		movw r30,r24
 802 0490 2581      		ldd r18,Z+5
 803 0492 3681      		ldd r19,Z+6
 804 0494 8981      		ldd r24,Y+1
 805 0496 9A81      		ldd r25,Y+2
 806 0498 FC01      		movw r30,r24
 807 049a 3683      		std Z+6,r19
 808 049c 2583      		std Z+5,r18
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macSrcAddr = nwkIb.addr;
 809               		.loc 1 242 0
 810 049e 2091 0000 		lds r18,nwkIb
 811 04a2 3091 0000 		lds r19,nwkIb+1
 812 04a6 8981      		ldd r24,Y+1
 813 04a8 9A81      		ldd r25,Y+2
 814 04aa FC01      		movw r30,r24
 815 04ac 3287      		std Z+10,r19
 816 04ae 2187      		std Z+9,r18
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macSeq = ++nwkIb.macSeqNum;
 817               		.loc 1 243 0
 818 04b0 8091 0000 		lds r24,nwkIb+5
 819 04b4 8F5F      		subi r24,lo8(-(1))
 820 04b6 8093 0000 		sts nwkIb+5,r24
 821 04ba 2091 0000 		lds r18,nwkIb+5
 822 04be 8981      		ldd r24,Y+1
 823 04c0 9A81      		ldd r25,Y+2
 824 04c2 FC01      		movw r30,r24
 825 04c4 2483      		std Z+4,r18
 826 04c6 00C0      		rjmp .L16
 827               	.L19:
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 828               		.loc 1 227 0
 829 04c8 0000      		nop
 830               	.L16:
 831               	/* epilogue start */
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 832               		.loc 1 244 0
 833 04ca 0F90      		pop __tmp_reg__
 834 04cc 0F90      		pop __tmp_reg__
 835 04ce 0F90      		pop __tmp_reg__
 836 04d0 0F90      		pop __tmp_reg__
 837 04d2 DF91      		pop r29
 838 04d4 CF91      		pop r28
 839 04d6 0895      		ret
 840               		.cfi_endproc
 841               	.LFE71:
 843               	.global	nwkTxAckReceived
 845               	nwkTxAckReceived:
 846               	.LFB72:
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** bool nwkTxAckReceived(NWK_DataInd_t *ind)
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 847               		.loc 1 249 0
 848               		.cfi_startproc
 849 04d8 CF93      		push r28
 850               	.LCFI23:
 851               		.cfi_def_cfa_offset 3
 852               		.cfi_offset 28, -2
 853 04da DF93      		push r29
 854               	.LCFI24:
 855               		.cfi_def_cfa_offset 4
 856               		.cfi_offset 29, -3
 857 04dc 00D0      		rcall .
 858 04de 00D0      		rcall .
 859 04e0 00D0      		rcall .
 860               	.LCFI25:
 861               		.cfi_def_cfa_offset 10
 862 04e2 CDB7      		in r28,__SP_L__
 863 04e4 DEB7      		in r29,__SP_H__
 864               	.LCFI26:
 865               		.cfi_def_cfa_register 28
 866               	/* prologue: function */
 867               	/* frame size = 6 */
 868               	/* stack size = 8 */
 869               	.L__stack_usage = 8
 870 04e6 9E83      		std Y+6,r25
 871 04e8 8D83      		std Y+5,r24
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkCommandAck_t *command = (NwkCommandAck_t *)ind->data;
 872               		.loc 1 250 0
 873 04ea 8D81      		ldd r24,Y+5
 874 04ec 9E81      		ldd r25,Y+6
 875 04ee FC01      		movw r30,r24
 876 04f0 8085      		ldd r24,Z+8
 877 04f2 9185      		ldd r25,Z+9
 878 04f4 9C83      		std Y+4,r25
 879 04f6 8B83      		std Y+3,r24
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *frame = NULL;
 880               		.loc 1 251 0
 881 04f8 1A82      		std Y+2,__zero_reg__
 882 04fa 1982      		std Y+1,__zero_reg__
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (sizeof(NwkCommandAck_t) != ind->size) {
 883               		.loc 1 253 0
 884 04fc 8D81      		ldd r24,Y+5
 885 04fe 9E81      		ldd r25,Y+6
 886 0500 FC01      		movw r30,r24
 887 0502 8285      		ldd r24,Z+10
 888 0504 8330      		cpi r24,lo8(3)
 889 0506 01F0      		breq .L23
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return false;
 890               		.loc 1 254 0
 891 0508 80E0      		ldi r24,0
 892 050a 00C0      		rjmp .L22
 893               	.L24:
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_ACK == frame->state &&
 894               		.loc 1 258 0
 895 050c 8981      		ldd r24,Y+1
 896 050e 9A81      		ldd r25,Y+2
 897 0510 FC01      		movw r30,r24
 898 0512 8081      		ld r24,Z
 899 0514 8631      		cpi r24,lo8(22)
 900 0516 01F4      		brne .L23
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->header.nwkSeq == command->seq) {
 901               		.loc 1 259 0 discriminator 1
 902 0518 8981      		ldd r24,Y+1
 903 051a 9A81      		ldd r25,Y+2
 904 051c FC01      		movw r30,r24
 905 051e 2485      		ldd r18,Z+12
 906 0520 8B81      		ldd r24,Y+3
 907 0522 9C81      		ldd r25,Y+4
 908 0524 FC01      		movw r30,r24
 909 0526 8181      		ldd r24,Z+1
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->header.nwkSeq == command->seq) {
 910               		.loc 1 258 0 discriminator 1
 911 0528 2817      		cp r18,r24
 912 052a 01F4      		brne .L23
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			frame->state = NWK_TX_STATE_CONFIRM;
 913               		.loc 1 260 0
 914 052c 8981      		ldd r24,Y+1
 915 052e 9A81      		ldd r25,Y+2
 916 0530 27E1      		ldi r18,lo8(23)
 917 0532 FC01      		movw r30,r24
 918 0534 2083      		st Z,r18
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			frame->tx.control = command->control;
 919               		.loc 1 261 0
 920 0536 8B81      		ldd r24,Y+3
 921 0538 9C81      		ldd r25,Y+4
 922 053a FC01      		movw r30,r24
 923 053c 2281      		ldd r18,Z+2
 924 053e 8981      		ldd r24,Y+1
 925 0540 9A81      		ldd r25,Y+2
 926 0542 8A57      		subi r24,122
 927 0544 9F4F      		sbci r25,-1
 928 0546 FC01      		movw r30,r24
 929 0548 2083      		st Z,r18
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			return true;
 930               		.loc 1 262 0
 931 054a 81E0      		ldi r24,lo8(1)
 932 054c 00C0      		rjmp .L22
 933               	.L23:
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_ACK == frame->state &&
 934               		.loc 1 257 0
 935 054e 8981      		ldd r24,Y+1
 936 0550 9A81      		ldd r25,Y+2
 937 0552 0E94 0000 		call nwkFrameNext
 938 0556 9A83      		std Y+2,r25
 939 0558 8983      		std Y+1,r24
 940 055a 8981      		ldd r24,Y+1
 941 055c 9A81      		ldd r25,Y+2
 942 055e 892B      		or r24,r25
 943 0560 01F4      		brne .L24
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	return false;
 944               		.loc 1 266 0
 945 0562 80E0      		ldi r24,0
 946               	.L22:
 947               	/* epilogue start */
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 948               		.loc 1 267 0
 949 0564 2696      		adiw r28,6
 950 0566 0FB6      		in __tmp_reg__,__SREG__
 951 0568 F894      		cli
 952 056a DEBF      		out __SP_H__,r29
 953 056c 0FBE      		out __SREG__,__tmp_reg__
 954 056e CDBF      		out __SP_L__,r28
 955 0570 DF91      		pop r29
 956 0572 CF91      		pop r28
 957 0574 0895      		ret
 958               		.cfi_endproc
 959               	.LFE72:
 962               	nwkTxAckWaitTimerHandler:
 963               	.LFB73:
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer)
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 964               		.loc 1 272 0
 965               		.cfi_startproc
 966 0576 CF93      		push r28
 967               	.LCFI27:
 968               		.cfi_def_cfa_offset 3
 969               		.cfi_offset 28, -2
 970 0578 DF93      		push r29
 971               	.LCFI28:
 972               		.cfi_def_cfa_offset 4
 973               		.cfi_offset 29, -3
 974 057a 00D0      		rcall .
 975 057c 00D0      		rcall .
 976 057e 1F92      		push __zero_reg__
 977               	.LCFI29:
 978               		.cfi_def_cfa_offset 9
 979 0580 CDB7      		in r28,__SP_L__
 980 0582 DEB7      		in r29,__SP_H__
 981               	.LCFI30:
 982               		.cfi_def_cfa_register 28
 983               	/* prologue: function */
 984               	/* frame size = 5 */
 985               	/* stack size = 7 */
 986               	.L__stack_usage = 7
 987 0584 9D83      		std Y+5,r25
 988 0586 8C83      		std Y+4,r24
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *frame = NULL;
 989               		.loc 1 273 0
 990 0588 1A82      		std Y+2,__zero_reg__
 991 058a 1982      		std Y+1,__zero_reg__
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	bool restart = false;
 992               		.loc 1 274 0
 993 058c 1B82      		std Y+3,__zero_reg__
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 994               		.loc 1 276 0
 995 058e 00C0      		rjmp .L26
 996               	.L27:
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_ACK == frame->state) {
 997               		.loc 1 277 0
 998 0590 8981      		ldd r24,Y+1
 999 0592 9A81      		ldd r25,Y+2
 1000 0594 FC01      		movw r30,r24
 1001 0596 8081      		ld r24,Z
 1002 0598 8631      		cpi r24,lo8(22)
 1003 059a 01F4      		brne .L26
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			restart = true;
 1004               		.loc 1 278 0
 1005 059c 81E0      		ldi r24,lo8(1)
 1006 059e 8B83      		std Y+3,r24
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (0 == --frame->tx.timeout) {
 1007               		.loc 1 280 0
 1008 05a0 8981      		ldd r24,Y+1
 1009 05a2 9A81      		ldd r25,Y+2
 1010 05a4 8C57      		subi r24,124
 1011 05a6 9F4F      		sbci r25,-1
 1012 05a8 FC01      		movw r30,r24
 1013 05aa 8081      		ld r24,Z
 1014 05ac 9181      		ldd r25,Z+1
 1015 05ae 9C01      		movw r18,r24
 1016 05b0 2150      		subi r18,1
 1017 05b2 3109      		sbc r19,__zero_reg__
 1018 05b4 8981      		ldd r24,Y+1
 1019 05b6 9A81      		ldd r25,Y+2
 1020 05b8 8C57      		subi r24,124
 1021 05ba 9F4F      		sbci r25,-1
 1022 05bc FC01      		movw r30,r24
 1023 05be 3183      		std Z+1,r19
 1024 05c0 2083      		st Z,r18
 1025 05c2 8981      		ldd r24,Y+1
 1026 05c4 9A81      		ldd r25,Y+2
 1027 05c6 8C57      		subi r24,124
 1028 05c8 9F4F      		sbci r25,-1
 1029 05ca FC01      		movw r30,r24
 1030 05cc 8081      		ld r24,Z
 1031 05ce 9181      		ldd r25,Z+1
 1032 05d0 892B      		or r24,r25
 1033 05d2 01F4      		brne .L26
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				nwkTxConfirm(frame, NWK_NO_ACK_STATUS);
 1034               		.loc 1 281 0
 1035 05d4 8981      		ldd r24,Y+1
 1036 05d6 9A81      		ldd r25,Y+2
 1037 05d8 60E1      		ldi r22,lo8(16)
 1038 05da 0E94 0000 		call nwkTxConfirm
 1039               	.L26:
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_ACK == frame->state) {
 1040               		.loc 1 276 0
 1041 05de 8981      		ldd r24,Y+1
 1042 05e0 9A81      		ldd r25,Y+2
 1043 05e2 0E94 0000 		call nwkFrameNext
 1044 05e6 9A83      		std Y+2,r25
 1045 05e8 8983      		std Y+1,r24
 1046 05ea 8981      		ldd r24,Y+1
 1047 05ec 9A81      		ldd r25,Y+2
 1048 05ee 892B      		or r24,r25
 1049 05f0 01F4      		brne .L27
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (restart) {
 1050               		.loc 1 286 0
 1051 05f2 8B81      		ldd r24,Y+3
 1052 05f4 8823      		tst r24
 1053 05f6 01F0      		breq .L29
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		SYS_TimerStart(timer);
 1054               		.loc 1 287 0
 1055 05f8 8C81      		ldd r24,Y+4
 1056 05fa 9D81      		ldd r25,Y+5
 1057 05fc 0E94 0000 		call SYS_TimerStart
 1058               	.L29:
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1059               		.loc 1 289 0
 1060 0600 0000      		nop
 1061               	/* epilogue start */
 1062 0602 0F90      		pop __tmp_reg__
 1063 0604 0F90      		pop __tmp_reg__
 1064 0606 0F90      		pop __tmp_reg__
 1065 0608 0F90      		pop __tmp_reg__
 1066 060a 0F90      		pop __tmp_reg__
 1067 060c DF91      		pop r29
 1068 060e CF91      		pop r28
 1069 0610 0895      		ret
 1070               		.cfi_endproc
 1071               	.LFE73:
 1073               	.global	nwkTxConfirm
 1075               	nwkTxConfirm:
 1076               	.LFB74:
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxConfirm(NwkFrame_t *frame, uint8_t status)
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 1077               		.loc 1 294 0
 1078               		.cfi_startproc
 1079 0612 CF93      		push r28
 1080               	.LCFI31:
 1081               		.cfi_def_cfa_offset 3
 1082               		.cfi_offset 28, -2
 1083 0614 DF93      		push r29
 1084               	.LCFI32:
 1085               		.cfi_def_cfa_offset 4
 1086               		.cfi_offset 29, -3
 1087 0616 00D0      		rcall .
 1088 0618 1F92      		push __zero_reg__
 1089               	.LCFI33:
 1090               		.cfi_def_cfa_offset 7
 1091 061a CDB7      		in r28,__SP_L__
 1092 061c DEB7      		in r29,__SP_H__
 1093               	.LCFI34:
 1094               		.cfi_def_cfa_register 28
 1095               	/* prologue: function */
 1096               	/* frame size = 3 */
 1097               	/* stack size = 5 */
 1098               	.L__stack_usage = 5
 1099 061e 9A83      		std Y+2,r25
 1100 0620 8983      		std Y+1,r24
 1101 0622 6B83      		std Y+3,r22
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->state = NWK_TX_STATE_CONFIRM;
 1102               		.loc 1 295 0
 1103 0624 8981      		ldd r24,Y+1
 1104 0626 9A81      		ldd r25,Y+2
 1105 0628 27E1      		ldi r18,lo8(23)
 1106 062a FC01      		movw r30,r24
 1107 062c 2083      		st Z,r18
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.status = status;
 1108               		.loc 1 296 0
 1109 062e 8981      		ldd r24,Y+1
 1110 0630 9A81      		ldd r25,Y+2
 1111 0632 8D57      		subi r24,125
 1112 0634 9F4F      		sbci r25,-1
 1113 0636 2B81      		ldd r18,Y+3
 1114 0638 FC01      		movw r30,r24
 1115 063a 2083      		st Z,r18
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1116               		.loc 1 297 0
 1117 063c 0000      		nop
 1118               	/* epilogue start */
 1119 063e 0F90      		pop __tmp_reg__
 1120 0640 0F90      		pop __tmp_reg__
 1121 0642 0F90      		pop __tmp_reg__
 1122 0644 DF91      		pop r29
 1123 0646 CF91      		pop r28
 1124 0648 0895      		ret
 1125               		.cfi_endproc
 1126               	.LFE74:
 1129               	nwkTxDelayTimerHandler:
 1130               	.LFB75:
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_SECURITY
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxEncryptConf(NwkFrame_t *frame)
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->state = NWK_TX_STATE_DELAY;
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static void nwkTxDelayTimerHandler(SYS_Timer_t *timer)
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 1131               		.loc 1 313 0
 1132               		.cfi_startproc
 1133 064a CF93      		push r28
 1134               	.LCFI35:
 1135               		.cfi_def_cfa_offset 3
 1136               		.cfi_offset 28, -2
 1137 064c DF93      		push r29
 1138               	.LCFI36:
 1139               		.cfi_def_cfa_offset 4
 1140               		.cfi_offset 29, -3
 1141 064e 00D0      		rcall .
 1142 0650 00D0      		rcall .
 1143 0652 1F92      		push __zero_reg__
 1144               	.LCFI37:
 1145               		.cfi_def_cfa_offset 9
 1146 0654 CDB7      		in r28,__SP_L__
 1147 0656 DEB7      		in r29,__SP_H__
 1148               	.LCFI38:
 1149               		.cfi_def_cfa_register 28
 1150               	/* prologue: function */
 1151               	/* frame size = 5 */
 1152               	/* stack size = 7 */
 1153               	.L__stack_usage = 7
 1154 0658 9D83      		std Y+5,r25
 1155 065a 8C83      		std Y+4,r24
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *frame = NULL;
 1156               		.loc 1 314 0
 1157 065c 1A82      		std Y+2,__zero_reg__
 1158 065e 1982      		std Y+1,__zero_reg__
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	bool restart = false;
 1159               		.loc 1 315 0
 1160 0660 1B82      		std Y+3,__zero_reg__
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 1161               		.loc 1 317 0
 1162 0662 00C0      		rjmp .L32
 1163               	.L33:
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_DELAY == frame->state) {
 1164               		.loc 1 318 0
 1165 0664 8981      		ldd r24,Y+1
 1166 0666 9A81      		ldd r25,Y+2
 1167 0668 FC01      		movw r30,r24
 1168 066a 8081      		ld r24,Z
 1169 066c 8131      		cpi r24,lo8(17)
 1170 066e 01F4      		brne .L32
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			restart = true;
 1171               		.loc 1 319 0
 1172 0670 81E0      		ldi r24,lo8(1)
 1173 0672 8B83      		std Y+3,r24
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (0 == --frame->tx.timeout) {
 1174               		.loc 1 321 0
 1175 0674 8981      		ldd r24,Y+1
 1176 0676 9A81      		ldd r25,Y+2
 1177 0678 8C57      		subi r24,124
 1178 067a 9F4F      		sbci r25,-1
 1179 067c FC01      		movw r30,r24
 1180 067e 8081      		ld r24,Z
 1181 0680 9181      		ldd r25,Z+1
 1182 0682 9C01      		movw r18,r24
 1183 0684 2150      		subi r18,1
 1184 0686 3109      		sbc r19,__zero_reg__
 1185 0688 8981      		ldd r24,Y+1
 1186 068a 9A81      		ldd r25,Y+2
 1187 068c 8C57      		subi r24,124
 1188 068e 9F4F      		sbci r25,-1
 1189 0690 FC01      		movw r30,r24
 1190 0692 3183      		std Z+1,r19
 1191 0694 2083      		st Z,r18
 1192 0696 8981      		ldd r24,Y+1
 1193 0698 9A81      		ldd r25,Y+2
 1194 069a 8C57      		subi r24,124
 1195 069c 9F4F      		sbci r25,-1
 1196 069e FC01      		movw r30,r24
 1197 06a0 8081      		ld r24,Z
 1198 06a2 9181      		ldd r25,Z+1
 1199 06a4 892B      		or r24,r25
 1200 06a6 01F4      		brne .L32
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_SEND;
 1201               		.loc 1 322 0
 1202 06a8 8981      		ldd r24,Y+1
 1203 06aa 9A81      		ldd r25,Y+2
 1204 06ac 23E1      		ldi r18,lo8(19)
 1205 06ae FC01      		movw r30,r24
 1206 06b0 2083      		st Z,r18
 1207               	.L32:
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_DELAY == frame->state) {
 1208               		.loc 1 317 0
 1209 06b2 8981      		ldd r24,Y+1
 1210 06b4 9A81      		ldd r25,Y+2
 1211 06b6 0E94 0000 		call nwkFrameNext
 1212 06ba 9A83      		std Y+2,r25
 1213 06bc 8983      		std Y+1,r24
 1214 06be 8981      		ldd r24,Y+1
 1215 06c0 9A81      		ldd r25,Y+2
 1216 06c2 892B      		or r24,r25
 1217 06c4 01F4      		brne .L33
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (restart) {
 1218               		.loc 1 327 0
 1219 06c6 8B81      		ldd r24,Y+3
 1220 06c8 8823      		tst r24
 1221 06ca 01F0      		breq .L35
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		SYS_TimerStart(timer);
 1222               		.loc 1 328 0
 1223 06cc 8C81      		ldd r24,Y+4
 1224 06ce 9D81      		ldd r25,Y+5
 1225 06d0 0E94 0000 		call SYS_TimerStart
 1226               	.L35:
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1227               		.loc 1 330 0
 1228 06d4 0000      		nop
 1229               	/* epilogue start */
 1230 06d6 0F90      		pop __tmp_reg__
 1231 06d8 0F90      		pop __tmp_reg__
 1232 06da 0F90      		pop __tmp_reg__
 1233 06dc 0F90      		pop __tmp_reg__
 1234 06de 0F90      		pop __tmp_reg__
 1235 06e0 DF91      		pop r29
 1236 06e2 CF91      		pop r28
 1237 06e4 0895      		ret
 1238               		.cfi_endproc
 1239               	.LFE75:
 1242               	nwkTxConvertPhyStatus:
 1243               	.LFB76:
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static uint8_t nwkTxConvertPhyStatus(uint8_t status)
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 1244               		.loc 1 335 0
 1245               		.cfi_startproc
 1246 06e6 CF93      		push r28
 1247               	.LCFI39:
 1248               		.cfi_def_cfa_offset 3
 1249               		.cfi_offset 28, -2
 1250 06e8 DF93      		push r29
 1251               	.LCFI40:
 1252               		.cfi_def_cfa_offset 4
 1253               		.cfi_offset 29, -3
 1254 06ea 1F92      		push __zero_reg__
 1255               	.LCFI41:
 1256               		.cfi_def_cfa_offset 5
 1257 06ec CDB7      		in r28,__SP_L__
 1258 06ee DEB7      		in r29,__SP_H__
 1259               	.LCFI42:
 1260               		.cfi_def_cfa_register 28
 1261               	/* prologue: function */
 1262               	/* frame size = 1 */
 1263               	/* stack size = 3 */
 1264               	.L__stack_usage = 3
 1265 06f0 8983      		std Y+1,r24
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	switch (status) {
 1266               		.loc 1 336 0
 1267 06f2 8981      		ldd r24,Y+1
 1268 06f4 882F      		mov r24,r24
 1269 06f6 90E0      		ldi r25,0
 1270 06f8 8130      		cpi r24,1
 1271 06fa 9105      		cpc r25,__zero_reg__
 1272 06fc 01F0      		breq .L38
 1273 06fe 8230      		cpi r24,2
 1274 0700 9105      		cpc r25,__zero_reg__
 1275 0702 01F0      		breq .L39
 1276 0704 892B      		or r24,r25
 1277 0706 01F4      		brne .L42
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	case PHY_STATUS_SUCCESS:
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return NWK_SUCCESS_STATUS;
 1278               		.loc 1 338 0
 1279 0708 80E0      		ldi r24,0
 1280 070a 00C0      		rjmp .L41
 1281               	.L38:
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	case PHY_STATUS_CHANNEL_ACCESS_FAILURE:
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return NWK_PHY_CHANNEL_ACCESS_FAILURE_STATUS;
 1282               		.loc 1 341 0
 1283 070c 80E2      		ldi r24,lo8(32)
 1284 070e 00C0      		rjmp .L41
 1285               	.L39:
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	case PHY_STATUS_NO_ACK:
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return NWK_PHY_NO_ACK_STATUS;
 1286               		.loc 1 344 0
 1287 0710 81E2      		ldi r24,lo8(33)
 1288 0712 00C0      		rjmp .L41
 1289               	.L42:
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	default:
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return NWK_ERROR_STATUS;
 1290               		.loc 1 347 0
 1291 0714 81E0      		ldi r24,lo8(1)
 1292               	.L41:
 1293               	/* epilogue start */
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1294               		.loc 1 349 0
 1295 0716 0F90      		pop __tmp_reg__
 1296 0718 DF91      		pop r29
 1297 071a CF91      		pop r28
 1298 071c 0895      		ret
 1299               		.cfi_endproc
 1300               	.LFE76:
 1302               	.global	PHY_DataConf
 1304               	PHY_DataConf:
 1305               	.LFB77:
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void PHY_DataConf(uint8_t status)
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 1306               		.loc 1 354 0
 1307               		.cfi_startproc
 1308 071e 0F93      		push r16
 1309               	.LCFI43:
 1310               		.cfi_def_cfa_offset 3
 1311               		.cfi_offset 16, -2
 1312 0720 1F93      		push r17
 1313               	.LCFI44:
 1314               		.cfi_def_cfa_offset 4
 1315               		.cfi_offset 17, -3
 1316 0722 CF93      		push r28
 1317               	.LCFI45:
 1318               		.cfi_def_cfa_offset 5
 1319               		.cfi_offset 28, -4
 1320 0724 DF93      		push r29
 1321               	.LCFI46:
 1322               		.cfi_def_cfa_offset 6
 1323               		.cfi_offset 29, -5
 1324 0726 1F92      		push __zero_reg__
 1325               	.LCFI47:
 1326               		.cfi_def_cfa_offset 7
 1327 0728 CDB7      		in r28,__SP_L__
 1328 072a DEB7      		in r29,__SP_H__
 1329               	.LCFI48:
 1330               		.cfi_def_cfa_register 28
 1331               	/* prologue: function */
 1332               	/* frame size = 1 */
 1333               	/* stack size = 5 */
 1334               	.L__stack_usage = 5
 1335 072c 8983      		std Y+1,r24
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxPhyActiveFrame->tx.status = nwkTxConvertPhyStatus(status);
 1336               		.loc 1 355 0
 1337 072e 0091 0000 		lds r16,nwkTxPhyActiveFrame
 1338 0732 1091 0000 		lds r17,nwkTxPhyActiveFrame+1
 1339 0736 8981      		ldd r24,Y+1
 1340 0738 0E94 0000 		call nwkTxConvertPhyStatus
 1341 073c 282F      		mov r18,r24
 1342 073e C801      		movw r24,r16
 1343 0740 8D57      		subi r24,125
 1344 0742 9F4F      		sbci r25,-1
 1345 0744 FC01      		movw r30,r24
 1346 0746 2083      		st Z,r18
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxPhyActiveFrame->state = NWK_TX_STATE_SENT;
 1347               		.loc 1 356 0
 1348 0748 8091 0000 		lds r24,nwkTxPhyActiveFrame
 1349 074c 9091 0000 		lds r25,nwkTxPhyActiveFrame+1
 1350 0750 25E1      		ldi r18,lo8(21)
 1351 0752 FC01      		movw r30,r24
 1352 0754 2083      		st Z,r18
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxPhyActiveFrame = NULL;
 1353               		.loc 1 357 0
 1354 0756 1092 0000 		sts nwkTxPhyActiveFrame+1,__zero_reg__
 1355 075a 1092 0000 		sts nwkTxPhyActiveFrame,__zero_reg__
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkIb.lock--;
 1356               		.loc 1 358 0
 1357 075e 8091 0000 		lds r24,nwkIb+38
 1358 0762 9091 0000 		lds r25,nwkIb+38+1
 1359 0766 0197      		sbiw r24,1
 1360 0768 9093 0000 		sts nwkIb+38+1,r25
 1361 076c 8093 0000 		sts nwkIb+38,r24
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1362               		.loc 1 359 0
 1363 0770 0000      		nop
 1364               	/* epilogue start */
 1365 0772 0F90      		pop __tmp_reg__
 1366 0774 DF91      		pop r29
 1367 0776 CF91      		pop r28
 1368 0778 1F91      		pop r17
 1369 077a 0F91      		pop r16
 1370 077c 0895      		ret
 1371               		.cfi_endproc
 1372               	.LFE77:
 1374               	.global	nwkTxTaskHandler
 1376               	nwkTxTaskHandler:
 1377               	.LFB78:
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *  @brief Tx Module task handler
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxTaskHandler(void)
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 1378               		.loc 1 365 0
 1379               		.cfi_startproc
 1380 077e CF93      		push r28
 1381               	.LCFI49:
 1382               		.cfi_def_cfa_offset 3
 1383               		.cfi_offset 28, -2
 1384 0780 DF93      		push r29
 1385               	.LCFI50:
 1386               		.cfi_def_cfa_offset 4
 1387               		.cfi_offset 29, -3
 1388 0782 00D0      		rcall .
 1389               	.LCFI51:
 1390               		.cfi_def_cfa_offset 6
 1391 0784 CDB7      		in r28,__SP_L__
 1392 0786 DEB7      		in r29,__SP_H__
 1393               	.LCFI52:
 1394               		.cfi_def_cfa_register 28
 1395               	/* prologue: function */
 1396               	/* frame size = 2 */
 1397               	/* stack size = 4 */
 1398               	.L__stack_usage = 4
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *frame = NULL;
 1399               		.loc 1 366 0
 1400 0788 1A82      		std Y+2,__zero_reg__
 1401 078a 1982      		std Y+1,__zero_reg__
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 1402               		.loc 1 368 0
 1403 078c 00C0      		rjmp .L45
 1404               	.L63:
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		switch (frame->state) {
 1405               		.loc 1 369 0
 1406 078e 8981      		ldd r24,Y+1
 1407 0790 9A81      		ldd r25,Y+2
 1408 0792 FC01      		movw r30,r24
 1409 0794 8081      		ld r24,Z
 1410 0796 882F      		mov r24,r24
 1411 0798 90E0      		ldi r25,0
 1412 079a 8431      		cpi r24,20
 1413 079c 9105      		cpc r25,__zero_reg__
 1414 079e 01F4      		brne .+2
 1415 07a0 00C0      		rjmp .L45
 1416 07a2 8531      		cpi r24,21
 1417 07a4 9105      		cpc r25,__zero_reg__
 1418 07a6 04F4      		brge .L48
 1419 07a8 8231      		cpi r24,18
 1420 07aa 9105      		cpc r25,__zero_reg__
 1421 07ac 01F0      		breq .L49
 1422 07ae 4397      		sbiw r24,19
 1423 07b0 01F0      		breq .L50
 1424 07b2 00C0      		rjmp .L46
 1425               	.L48:
 1426 07b4 8631      		cpi r24,22
 1427 07b6 9105      		cpc r25,__zero_reg__
 1428 07b8 01F4      		brne .+2
 1429 07ba 00C0      		rjmp .L45
 1430 07bc 8631      		cpi r24,22
 1431 07be 9105      		cpc r25,__zero_reg__
 1432 07c0 04F4      		brge .+2
 1433 07c2 00C0      		rjmp .L52
 1434 07c4 4797      		sbiw r24,23
 1435 07c6 01F4      		brne .+2
 1436 07c8 00C0      		rjmp .L53
 1437 07ca 00C0      		rjmp .L46
 1438               	.L49:
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_SECURITY
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_ENCRYPT:
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			nwkSecurityProcess(frame, true);
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_DELAY:
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (frame->tx.timeout > 0) {
 1439               		.loc 1 380 0
 1440 07cc 8981      		ldd r24,Y+1
 1441 07ce 9A81      		ldd r25,Y+2
 1442 07d0 8C57      		subi r24,124
 1443 07d2 9F4F      		sbci r25,-1
 1444 07d4 FC01      		movw r30,r24
 1445 07d6 8081      		ld r24,Z
 1446 07d8 9181      		ldd r25,Z+1
 1447 07da 892B      		or r24,r25
 1448 07dc 01F0      		breq .L54
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_WAIT_DELAY;
 1449               		.loc 1 381 0
 1450 07de 8981      		ldd r24,Y+1
 1451 07e0 9A81      		ldd r25,Y+2
 1452 07e2 21E1      		ldi r18,lo8(17)
 1453 07e4 FC01      		movw r30,r24
 1454 07e6 2083      		st Z,r18
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				SYS_TimerStart(&nwkTxDelayTimer);
 1455               		.loc 1 382 0
 1456 07e8 80E0      		ldi r24,lo8(nwkTxDelayTimer)
 1457 07ea 90E0      		ldi r25,hi8(nwkTxDelayTimer)
 1458 07ec 0E94 0000 		call SYS_TimerStart
 1459 07f0 00C0      		rjmp .L45
 1460               	.L54:
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			} else {
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_SEND;
 1461               		.loc 1 384 0
 1462 07f2 8981      		ldd r24,Y+1
 1463 07f4 9A81      		ldd r25,Y+2
 1464 07f6 23E1      		ldi r18,lo8(19)
 1465 07f8 FC01      		movw r30,r24
 1466 07fa 2083      		st Z,r18
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 1467               		.loc 1 387 0
 1468 07fc 00C0      		rjmp .L45
 1469               	.L50:
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_SEND:
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (NULL == nwkTxPhyActiveFrame) {
 1470               		.loc 1 391 0
 1471 07fe 8091 0000 		lds r24,nwkTxPhyActiveFrame
 1472 0802 9091 0000 		lds r25,nwkTxPhyActiveFrame+1
 1473 0806 892B      		or r24,r25
 1474 0808 01F0      		breq .+2
 1475 080a 00C0      		rjmp .L45
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				nwkTxPhyActiveFrame = frame;
 1476               		.loc 1 392 0
 1477 080c 8981      		ldd r24,Y+1
 1478 080e 9A81      		ldd r25,Y+2
 1479 0810 9093 0000 		sts nwkTxPhyActiveFrame+1,r25
 1480 0814 8093 0000 		sts nwkTxPhyActiveFrame,r24
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_WAIT_CONF;
 1481               		.loc 1 393 0
 1482 0818 8981      		ldd r24,Y+1
 1483 081a 9A81      		ldd r25,Y+2
 1484 081c 24E1      		ldi r18,lo8(20)
 1485 081e FC01      		movw r30,r24
 1486 0820 2083      		st Z,r18
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				PHY_DataReq(frame->data, frame->size);
 1487               		.loc 1 394 0
 1488 0822 8981      		ldd r24,Y+1
 1489 0824 9A81      		ldd r25,Y+2
 1490 0826 FC01      		movw r30,r24
 1491 0828 2181      		ldd r18,Z+1
 1492 082a 8981      		ldd r24,Y+1
 1493 082c 9A81      		ldd r25,Y+2
 1494 082e 0296      		adiw r24,2
 1495 0830 622F      		mov r22,r18
 1496 0832 0E94 0000 		call PHY_DataReq
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				nwkIb.lock++;
 1497               		.loc 1 395 0
 1498 0836 8091 0000 		lds r24,nwkIb+38
 1499 083a 9091 0000 		lds r25,nwkIb+38+1
 1500 083e 0196      		adiw r24,1
 1501 0840 9093 0000 		sts nwkIb+38+1,r25
 1502 0844 8093 0000 		sts nwkIb+38,r24
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 1503               		.loc 1 398 0
 1504 0848 00C0      		rjmp .L45
 1505               	.L52:
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_WAIT_CONF:
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			break;
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_SENT:
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (NWK_SUCCESS_STATUS == frame->tx.status) {
 1506               		.loc 1 405 0
 1507 084a 8981      		ldd r24,Y+1
 1508 084c 9A81      		ldd r25,Y+2
 1509 084e 8D57      		subi r24,125
 1510 0850 9F4F      		sbci r25,-1
 1511 0852 FC01      		movw r30,r24
 1512 0854 8081      		ld r24,Z
 1513 0856 8823      		tst r24
 1514 0858 01F4      		brne .L57
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				if (frame->header.nwkSrcAddr == nwkIb.addr &&
 1515               		.loc 1 406 0
 1516 085a 8981      		ldd r24,Y+1
 1517 085c 9A81      		ldd r25,Y+2
 1518 085e FC01      		movw r30,r24
 1519 0860 2585      		ldd r18,Z+13
 1520 0862 3685      		ldd r19,Z+14
 1521 0864 8091 0000 		lds r24,nwkIb
 1522 0868 9091 0000 		lds r25,nwkIb+1
 1523 086c 2817      		cp r18,r24
 1524 086e 3907      		cpc r19,r25
 1525 0870 01F4      		brne .L58
 1526               		.loc 1 406 0 is_stmt 0 discriminator 1
 1527 0872 8981      		ldd r24,Y+1
 1528 0874 9A81      		ldd r25,Y+2
 1529 0876 FC01      		movw r30,r24
 1530 0878 8385      		ldd r24,Z+11
 1531 087a 8170      		andi r24,lo8(1)
 1532 087c 8823      		tst r24
 1533 087e 01F0      		breq .L58
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 						frame->header.nwkFcf.
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 						ackRequest) {
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 					frame->state = NWK_TX_STATE_WAIT_ACK;
 1534               		.loc 1 409 0 is_stmt 1
 1535 0880 8981      		ldd r24,Y+1
 1536 0882 9A81      		ldd r25,Y+2
 1537 0884 26E1      		ldi r18,lo8(22)
 1538 0886 FC01      		movw r30,r24
 1539 0888 2083      		st Z,r18
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 					frame->tx.timeout = NWK_ACK_WAIT_TIME /
 1540               		.loc 1 410 0
 1541 088a 8981      		ldd r24,Y+1
 1542 088c 9A81      		ldd r25,Y+2
 1543 088e 8C57      		subi r24,124
 1544 0890 9F4F      		sbci r25,-1
 1545 0892 25E1      		ldi r18,lo8(21)
 1546 0894 30E0      		ldi r19,0
 1547 0896 FC01      		movw r30,r24
 1548 0898 3183      		std Z+1,r19
 1549 089a 2083      		st Z,r18
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 							NWK_TX_ACK_WAIT_TIMER_INTERVAL
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 							+ 1;
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 					SYS_TimerStart(&nwkTxAckWaitTimer);
 1550               		.loc 1 413 0
 1551 089c 80E0      		ldi r24,lo8(nwkTxAckWaitTimer)
 1552 089e 90E0      		ldi r25,hi8(nwkTxAckWaitTimer)
 1553 08a0 0E94 0000 		call SYS_TimerStart
 1554 08a4 00C0      		rjmp .L60
 1555               	.L58:
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				} else {
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 					frame->state = NWK_TX_STATE_CONFIRM;
 1556               		.loc 1 415 0
 1557 08a6 8981      		ldd r24,Y+1
 1558 08a8 9A81      		ldd r25,Y+2
 1559 08aa 27E1      		ldi r18,lo8(23)
 1560 08ac FC01      		movw r30,r24
 1561 08ae 2083      		st Z,r18
 1562 08b0 00C0      		rjmp .L45
 1563               	.L57:
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				}
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			} else {
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_CONFIRM;
 1564               		.loc 1 418 0
 1565 08b2 8981      		ldd r24,Y+1
 1566 08b4 9A81      		ldd r25,Y+2
 1567 08b6 27E1      		ldi r18,lo8(23)
 1568 08b8 FC01      		movw r30,r24
 1569 08ba 2083      		st Z,r18
 1570               	.L60:
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 1571               		.loc 1 421 0 discriminator 1
 1572 08bc 00C0      		rjmp .L45
 1573               	.L53:
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_WAIT_ACK:
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			break;
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_CONFIRM:
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_ROUTING
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			nwkRouteFrameSent(frame);
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (NULL == frame->tx.confirm) {
 1574               		.loc 1 431 0
 1575 08be 8981      		ldd r24,Y+1
 1576 08c0 9A81      		ldd r25,Y+2
 1577 08c2 8957      		subi r24,121
 1578 08c4 9F4F      		sbci r25,-1
 1579 08c6 FC01      		movw r30,r24
 1580 08c8 8081      		ld r24,Z
 1581 08ca 9181      		ldd r25,Z+1
 1582 08cc 892B      		or r24,r25
 1583 08ce 01F4      		brne .L61
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				nwkFrameFree(frame);
 1584               		.loc 1 432 0
 1585 08d0 8981      		ldd r24,Y+1
 1586 08d2 9A81      		ldd r25,Y+2
 1587 08d4 0E94 0000 		call nwkFrameFree
 1588 08d8 00C0      		rjmp .L45
 1589               	.L61:
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			} else {
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->tx.confirm(frame);
 1590               		.loc 1 434 0
 1591 08da 8981      		ldd r24,Y+1
 1592 08dc 9A81      		ldd r25,Y+2
 1593 08de 8957      		subi r24,121
 1594 08e0 9F4F      		sbci r25,-1
 1595 08e2 FC01      		movw r30,r24
 1596 08e4 2081      		ld r18,Z
 1597 08e6 3181      		ldd r19,Z+1
 1598 08e8 8981      		ldd r24,Y+1
 1599 08ea 9A81      		ldd r25,Y+2
 1600 08ec F901      		movw r30,r18
 1601 08ee 0995      		icall
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 1602               		.loc 1 437 0
 1603 08f0 00C0      		rjmp .L45
 1604               	.L46:
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		default:
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			break;
 1605               		.loc 1 440 0
 1606 08f2 0000      		nop
 1607               	.L45:
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		switch (frame->state) {
 1608               		.loc 1 368 0
 1609 08f4 8981      		ldd r24,Y+1
 1610 08f6 9A81      		ldd r25,Y+2
 1611 08f8 0E94 0000 		call nwkFrameNext
 1612 08fc 9A83      		std Y+2,r25
 1613 08fe 8983      		std Y+1,r24
 1614 0900 8981      		ldd r24,Y+1
 1615 0902 9A81      		ldd r25,Y+2
 1616 0904 892B      		or r24,r25
 1617 0906 01F0      		breq .+2
 1618 0908 00C0      		rjmp .L63
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1619               		.loc 1 443 0
 1620 090a 0000      		nop
 1621               	/* epilogue start */
 1622 090c 0F90      		pop __tmp_reg__
 1623 090e 0F90      		pop __tmp_reg__
 1624 0910 DF91      		pop r29
 1625 0912 CF91      		pop r28
 1626 0914 0895      		ret
 1627               		.cfi_endproc
 1628               	.LFE78:
 1630               	.Letext0:
 1631               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 1632               		.file 3 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 1633               		.file 4 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
 1634               		.file 5 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 1635               		.file 6 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 1636               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwkDataReq.h"
 1637               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 1638               		.file 9 "../../../stack/LwMesh/TDMA/nwk/inc/nwkTx.h"
 1639               		.file 10 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
 1640               		.file 11 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkTx.c
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:7      *ABS*:00000001 __zero_reg__
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:14     .bss.n:00000000 n
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:19     .bss.tTS:00000000 tTS
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:24     .bss.nwkTxPhyActiveFrame:00000000 nwkTxPhyActiveFrame
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:29     .bss.nwkTxAckWaitTimer:00000000 nwkTxAckWaitTimer
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:34     .bss.nwkTxDelayTimer:00000000 nwkTxDelayTimer
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:39     .text:00000000 nwkTxInit
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:962    .text:00000576 nwkTxAckWaitTimerHandler
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:1129   .text:0000064a nwkTxDelayTimerHandler
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:106    .text:00000068 nwkTxBeaconFrame
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:207    .text:000000fe nwkTxBeaconFrameLLDN
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:322    .text:000001a4 nwkTxMacCommandFrameLLDN
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:478    .text:0000028c nwkTxFrame
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:669    .text:000003ba nwkTxBroadcastFrame
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:845    .text:000004d8 nwkTxAckReceived
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:1075   .text:00000612 nwkTxConfirm
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:1242   .text:000006e6 nwkTxConvertPhyStatus
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:1304   .text:0000071e PHY_DataConf
C:\Users\guilh\AppData\Local\Temp\ccbpALlt.s:1376   .text:0000077e nwkTxTaskHandler

UNDEFINED SYMBOLS
nwkIb
rand
nwkFrameAlloc
memcpy
nwkFrameNext
SYS_TimerStart
PHY_DataReq
nwkFrameFree
__do_clear_bss
