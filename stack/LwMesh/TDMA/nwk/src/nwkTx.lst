   1               		.file	"nwkTx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.bss.nwkTxPhyActiveFrame,"aw",@nobits
  14               	nwkTxPhyActiveFrame:
  15 0000 0000      		.zero	2
  16               		.section	.bss.nwkTxAckWaitTimer,"aw",@nobits
  19               	nwkTxAckWaitTimer:
  20 0000 0000 0000 		.zero	13
  20      0000 0000 
  20      0000 0000 
  20      00
  21               		.section	.bss.nwkTxDelayTimer,"aw",@nobits
  24               	nwkTxDelayTimer:
  25 0000 0000 0000 		.zero	13
  25      0000 0000 
  25      0000 0000 
  25      00
  26               		.text
  27               	.global	nwkTxInit
  29               	nwkTxInit:
  30               	.LFB66:
  31               		.file 1 "../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * \file nwkTx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * \brief Transmit routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkRoute.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkCommand.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkSecurity.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Definitions ------------------------------------------------------------*/
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #define NWK_TX_ACK_WAIT_TIMER_INTERVAL    50 /* ms */
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #define NWK_TX_DELAY_TIMER_INTERVAL       10 /* ms */
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #define NWK_TX_DELAY_JITTER_MASK          0x07
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Types ------------------------------------------------------------------*/
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** enum {
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_ENCRYPT    = 0x10,
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_WAIT_DELAY = 0x11,
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_DELAY      = 0x12,
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_SEND       = 0x13,
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_WAIT_CONF  = 0x14,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_SENT       = 0x15,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_WAIT_ACK   = 0x16,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_CONFIRM    = 0x17,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** };
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Prototypes -------------------------------------------------------------*/
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer);
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static void nwkTxDelayTimerHandler(SYS_Timer_t *timer);
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Variables --------------------------------------------------------------*/
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static NwkFrame_t *nwkTxPhyActiveFrame;
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static SYS_Timer_t nwkTxAckWaitTimer;
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static SYS_Timer_t nwkTxDelayTimer;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Implementations --------------------------------------------------------*/
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *  @brief Initializes the Tx module
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxInit(void)
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
  32               		.loc 1 96 0
  33               		.cfi_startproc
  34 0000 CF93      		push r28
  35               	.LCFI0:
  36               		.cfi_def_cfa_offset 3
  37               		.cfi_offset 28, -2
  38 0002 DF93      		push r29
  39               	.LCFI1:
  40               		.cfi_def_cfa_offset 4
  41               		.cfi_offset 29, -3
  42 0004 CDB7      		in r28,__SP_L__
  43 0006 DEB7      		in r29,__SP_H__
  44               	.LCFI2:
  45               		.cfi_def_cfa_register 28
  46               	/* prologue: function */
  47               	/* frame size = 0 */
  48               	/* stack size = 2 */
  49               	.L__stack_usage = 2
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxPhyActiveFrame = NULL;
  50               		.loc 1 97 0
  51 0008 1092 0000 		sts nwkTxPhyActiveFrame+1,__zero_reg__
  52 000c 1092 0000 		sts nwkTxPhyActiveFrame,__zero_reg__
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxAckWaitTimer.interval = NWK_TX_ACK_WAIT_TIMER_INTERVAL;
  53               		.loc 1 99 0
  54 0010 82E3      		ldi r24,lo8(50)
  55 0012 90E0      		ldi r25,0
  56 0014 A0E0      		ldi r26,0
  57 0016 B0E0      		ldi r27,0
  58 0018 8093 0000 		sts nwkTxAckWaitTimer+6,r24
  59 001c 9093 0000 		sts nwkTxAckWaitTimer+6+1,r25
  60 0020 A093 0000 		sts nwkTxAckWaitTimer+6+2,r26
  61 0024 B093 0000 		sts nwkTxAckWaitTimer+6+3,r27
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxAckWaitTimer.mode = SYS_TIMER_INTERVAL_MODE;
  62               		.loc 1 100 0
  63 0028 1092 0000 		sts nwkTxAckWaitTimer+10,__zero_reg__
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxAckWaitTimer.handler = nwkTxAckWaitTimerHandler;
  64               		.loc 1 101 0
  65 002c 80E0      		ldi r24,lo8(gs(nwkTxAckWaitTimerHandler))
  66 002e 90E0      		ldi r25,hi8(gs(nwkTxAckWaitTimerHandler))
  67 0030 9093 0000 		sts nwkTxAckWaitTimer+11+1,r25
  68 0034 8093 0000 		sts nwkTxAckWaitTimer+11,r24
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxDelayTimer.interval = NWK_TX_DELAY_TIMER_INTERVAL;
  69               		.loc 1 103 0
  70 0038 8AE0      		ldi r24,lo8(10)
  71 003a 90E0      		ldi r25,0
  72 003c A0E0      		ldi r26,0
  73 003e B0E0      		ldi r27,0
  74 0040 8093 0000 		sts nwkTxDelayTimer+6,r24
  75 0044 9093 0000 		sts nwkTxDelayTimer+6+1,r25
  76 0048 A093 0000 		sts nwkTxDelayTimer+6+2,r26
  77 004c B093 0000 		sts nwkTxDelayTimer+6+3,r27
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxDelayTimer.mode = SYS_TIMER_INTERVAL_MODE;
  78               		.loc 1 104 0
  79 0050 1092 0000 		sts nwkTxDelayTimer+10,__zero_reg__
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxDelayTimer.handler = nwkTxDelayTimerHandler;
  80               		.loc 1 105 0
  81 0054 80E0      		ldi r24,lo8(gs(nwkTxDelayTimerHandler))
  82 0056 90E0      		ldi r25,hi8(gs(nwkTxDelayTimerHandler))
  83 0058 9093 0000 		sts nwkTxDelayTimer+11+1,r25
  84 005c 8093 0000 		sts nwkTxDelayTimer+11,r24
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
  85               		.loc 1 106 0
  86 0060 0000      		nop
  87               	/* epilogue start */
  88 0062 DF91      		pop r29
  89 0064 CF91      		pop r28
  90 0066 0895      		ret
  91               		.cfi_endproc
  92               	.LFE66:
  94               	.global	nwkTxBeaconFrame
  96               	nwkTxBeaconFrame:
  97               	.LFB67:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxBeaconFrame(NwkFrame_t *frame)
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
  98               		.loc 1 111 0
  99               		.cfi_startproc
 100 0068 CF93      		push r28
 101               	.LCFI3:
 102               		.cfi_def_cfa_offset 3
 103               		.cfi_offset 28, -2
 104 006a DF93      		push r29
 105               	.LCFI4:
 106               		.cfi_def_cfa_offset 4
 107               		.cfi_offset 29, -3
 108 006c 00D0      		rcall .
 109 006e 00D0      		rcall .
 110               	.LCFI5:
 111               		.cfi_def_cfa_offset 8
 112 0070 CDB7      		in r28,__SP_L__
 113 0072 DEB7      		in r29,__SP_H__
 114               	.LCFI6:
 115               		.cfi_def_cfa_register 28
 116               	/* prologue: function */
 117               	/* frame size = 4 */
 118               	/* stack size = 6 */
 119               	.L__stack_usage = 6
 120 0074 9C83      		std Y+4,r25
 121 0076 8B83      		std Y+3,r24
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrameBeaconHeader_t *beacon = &frame->beacon;
 122               		.loc 1 112 0
 123 0078 8B81      		ldd r24,Y+3
 124 007a 9C81      		ldd r25,Y+4
 125 007c 0296      		adiw r24,2
 126 007e 9A83      		std Y+2,r25
 127 0080 8983      		std Y+1,r24
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->state = NWK_TX_STATE_SEND;
 128               		.loc 1 114 0
 129 0082 8B81      		ldd r24,Y+3
 130 0084 9C81      		ldd r25,Y+4
 131 0086 23E1      		ldi r18,lo8(19)
 132 0088 FC01      		movw r30,r24
 133 008a 2083      		st Z,r18
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.status = NWK_SUCCESS_STATUS;
 134               		.loc 1 115 0
 135 008c 8B81      		ldd r24,Y+3
 136 008e 9C81      		ldd r25,Y+4
 137 0090 8D57      		subi r24,125
 138 0092 9F4F      		sbci r25,-1
 139 0094 FC01      		movw r30,r24
 140 0096 1082      		st Z,__zero_reg__
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.timeout = 0;
 141               		.loc 1 116 0
 142 0098 8B81      		ldd r24,Y+3
 143 009a 9C81      		ldd r25,Y+4
 144 009c 8C57      		subi r24,124
 145 009e 9F4F      		sbci r25,-1
 146 00a0 FC01      		movw r30,r24
 147 00a2 1182      		std Z+1,__zero_reg__
 148 00a4 1082      		st Z,__zero_reg__
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macFcf = 0x8000;
 149               		.loc 1 118 0
 150 00a6 8981      		ldd r24,Y+1
 151 00a8 9A81      		ldd r25,Y+2
 152 00aa 20E0      		ldi r18,0
 153 00ac 30E8      		ldi r19,lo8(-128)
 154 00ae FC01      		movw r30,r24
 155 00b0 3183      		std Z+1,r19
 156 00b2 2083      		st Z,r18
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSeq = ++nwkIb.macSeqNum;
 157               		.loc 1 119 0
 158 00b4 8091 0000 		lds r24,nwkIb+5
 159 00b8 8F5F      		subi r24,lo8(-(1))
 160 00ba 8093 0000 		sts nwkIb+5,r24
 161 00be 2091 0000 		lds r18,nwkIb+5
 162 00c2 8981      		ldd r24,Y+1
 163 00c4 9A81      		ldd r25,Y+2
 164 00c6 FC01      		movw r30,r24
 165 00c8 2283      		std Z+2,r18
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSrcPanId = nwkIb.panId;
 166               		.loc 1 120 0
 167 00ca 2091 0000 		lds r18,nwkIb+2
 168 00ce 3091 0000 		lds r19,nwkIb+2+1
 169 00d2 8981      		ldd r24,Y+1
 170 00d4 9A81      		ldd r25,Y+2
 171 00d6 FC01      		movw r30,r24
 172 00d8 3483      		std Z+4,r19
 173 00da 2383      		std Z+3,r18
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSrcAddr = nwkIb.addr;
 174               		.loc 1 121 0
 175 00dc 2091 0000 		lds r18,nwkIb
 176 00e0 3091 0000 		lds r19,nwkIb+1
 177 00e4 8981      		ldd r24,Y+1
 178 00e6 9A81      		ldd r25,Y+2
 179 00e8 FC01      		movw r30,r24
 180 00ea 3683      		std Z+6,r19
 181 00ec 2583      		std Z+5,r18
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 182               		.loc 1 122 0
 183 00ee 0000      		nop
 184               	/* epilogue start */
 185 00f0 0F90      		pop __tmp_reg__
 186 00f2 0F90      		pop __tmp_reg__
 187 00f4 0F90      		pop __tmp_reg__
 188 00f6 0F90      		pop __tmp_reg__
 189 00f8 DF91      		pop r29
 190 00fa CF91      		pop r28
 191 00fc 0895      		ret
 192               		.cfi_endproc
 193               	.LFE67:
 195               	.global	nwkTxFrame
 197               	nwkTxFrame:
 198               	.LFB68:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxFrame(NwkFrame_t *frame)
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 199               		.loc 1 124 0
 200               		.cfi_startproc
 201 00fe CF93      		push r28
 202               	.LCFI7:
 203               		.cfi_def_cfa_offset 3
 204               		.cfi_offset 28, -2
 205 0100 DF93      		push r29
 206               	.LCFI8:
 207               		.cfi_def_cfa_offset 4
 208               		.cfi_offset 29, -3
 209 0102 00D0      		rcall .
 210 0104 00D0      		rcall .
 211               	.LCFI9:
 212               		.cfi_def_cfa_offset 8
 213 0106 CDB7      		in r28,__SP_L__
 214 0108 DEB7      		in r29,__SP_H__
 215               	.LCFI10:
 216               		.cfi_def_cfa_register 28
 217               	/* prologue: function */
 218               	/* frame size = 4 */
 219               	/* stack size = 6 */
 220               	.L__stack_usage = 6
 221 010a 9C83      		std Y+4,r25
 222 010c 8B83      		std Y+3,r24
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrameHeader_t *header = &frame->header;
 223               		.loc 1 125 0
 224 010e 8B81      		ldd r24,Y+3
 225 0110 9C81      		ldd r25,Y+4
 226 0112 0296      		adiw r24,2
 227 0114 9A83      		std Y+2,r25
 228 0116 8983      		std Y+1,r24
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (frame->tx.control & NWK_TX_CONTROL_ROUTING) {
 229               		.loc 1 127 0
 230 0118 8B81      		ldd r24,Y+3
 231 011a 9C81      		ldd r25,Y+4
 232 011c 8A57      		subi r24,122
 233 011e 9F4F      		sbci r25,-1
 234 0120 FC01      		movw r30,r24
 235 0122 8081      		ld r24,Z
 236 0124 882F      		mov r24,r24
 237 0126 90E0      		ldi r25,0
 238 0128 8270      		andi r24,2
 239 012a 9927      		clr r25
 240 012c 892B      		or r24,r25
 241 012e 01F0      		breq .L4
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->state = NWK_TX_STATE_DELAY;
 242               		.loc 1 128 0
 243 0130 8B81      		ldd r24,Y+3
 244 0132 9C81      		ldd r25,Y+4
 245 0134 22E1      		ldi r18,lo8(18)
 246 0136 FC01      		movw r30,r24
 247 0138 2083      		st Z,r18
 248 013a 00C0      		rjmp .L5
 249               	.L4:
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		} else {
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_SECURITY
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (header->nwkFcf.security) {
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			frame->state = NWK_TX_STATE_ENCRYPT;
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		} else
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->state = NWK_TX_STATE_DELAY;
 250               		.loc 1 135 0
 251 013c 8B81      		ldd r24,Y+3
 252 013e 9C81      		ldd r25,Y+4
 253 0140 22E1      		ldi r18,lo8(18)
 254 0142 FC01      		movw r30,r24
 255 0144 2083      		st Z,r18
 256               	.L5:
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.status = NWK_SUCCESS_STATUS;
 257               		.loc 1 138 0
 258 0146 8B81      		ldd r24,Y+3
 259 0148 9C81      		ldd r25,Y+4
 260 014a 8D57      		subi r24,125
 261 014c 9F4F      		sbci r25,-1
 262 014e FC01      		movw r30,r24
 263 0150 1082      		st Z,__zero_reg__
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID) {
 264               		.loc 1 140 0
 265 0152 8B81      		ldd r24,Y+3
 266 0154 9C81      		ldd r25,Y+4
 267 0156 8A57      		subi r24,122
 268 0158 9F4F      		sbci r25,-1
 269 015a FC01      		movw r30,r24
 270 015c 8081      		ld r24,Z
 271 015e 882F      		mov r24,r24
 272 0160 90E0      		ldi r25,0
 273 0162 8170      		andi r24,1
 274 0164 9927      		clr r25
 275 0166 892B      		or r24,r25
 276 0168 01F0      		breq .L6
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		header->macDstPanId = NWK_BROADCAST_PANID;
 277               		.loc 1 141 0
 278 016a 8981      		ldd r24,Y+1
 279 016c 9A81      		ldd r25,Y+2
 280 016e 2FEF      		ldi r18,lo8(-1)
 281 0170 3FEF      		ldi r19,lo8(-1)
 282 0172 FC01      		movw r30,r24
 283 0174 3483      		std Z+4,r19
 284 0176 2383      		std Z+3,r18
 285 0178 00C0      		rjmp .L7
 286               	.L6:
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		} else {
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		header->macDstPanId = nwkIb.panId;
 287               		.loc 1 143 0
 288 017a 2091 0000 		lds r18,nwkIb+2
 289 017e 3091 0000 		lds r19,nwkIb+2+1
 290 0182 8981      		ldd r24,Y+1
 291 0184 9A81      		ldd r25,Y+2
 292 0186 FC01      		movw r30,r24
 293 0188 3483      		std Z+4,r19
 294 018a 2383      		std Z+3,r18
 295               	.L7:
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_ROUTING
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (0 == (frame->tx.control & NWK_TX_CONTROL_DIRECT_LINK) &&
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	0 ==
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	(frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID)) {
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		nwkRoutePrepareTx(frame);
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	} else
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	header->macDstAddr = header->nwkDstAddr;
 296               		.loc 1 154 0
 297 018c 8981      		ldd r24,Y+1
 298 018e 9A81      		ldd r25,Y+2
 299 0190 FC01      		movw r30,r24
 300 0192 2585      		ldd r18,Z+13
 301 0194 3685      		ldd r19,Z+14
 302 0196 8981      		ldd r24,Y+1
 303 0198 9A81      		ldd r25,Y+2
 304 019a FC01      		movw r30,r24
 305 019c 3683      		std Z+6,r19
 306 019e 2583      		std Z+5,r18
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	header->macSrcAddr = nwkIb.addr;
 307               		.loc 1 155 0
 308 01a0 2091 0000 		lds r18,nwkIb
 309 01a4 3091 0000 		lds r19,nwkIb+1
 310 01a8 8981      		ldd r24,Y+1
 311 01aa 9A81      		ldd r25,Y+2
 312 01ac FC01      		movw r30,r24
 313 01ae 3087      		std Z+8,r19
 314 01b0 2783      		std Z+7,r18
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	header->macSeq = ++nwkIb.macSeqNum;
 315               		.loc 1 156 0
 316 01b2 8091 0000 		lds r24,nwkIb+5
 317 01b6 8F5F      		subi r24,lo8(-(1))
 318 01b8 8093 0000 		sts nwkIb+5,r24
 319 01bc 2091 0000 		lds r18,nwkIb+5
 320 01c0 8981      		ldd r24,Y+1
 321 01c2 9A81      		ldd r25,Y+2
 322 01c4 FC01      		movw r30,r24
 323 01c6 2283      		std Z+2,r18
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 324               		.loc 1 158 0
 325 01c8 8981      		ldd r24,Y+1
 326 01ca 9A81      		ldd r25,Y+2
 327 01cc FC01      		movw r30,r24
 328 01ce 8581      		ldd r24,Z+5
 329 01d0 9681      		ldd r25,Z+6
 330 01d2 0196      		adiw r24,1
 331 01d4 01F4      		brne .L8
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		header->macFcf = 0x8841;
 332               		.loc 1 159 0
 333 01d6 8981      		ldd r24,Y+1
 334 01d8 9A81      		ldd r25,Y+2
 335 01da 21E4      		ldi r18,lo8(65)
 336 01dc 38E8      		ldi r19,lo8(-120)
 337 01de FC01      		movw r30,r24
 338 01e0 3183      		std Z+1,r19
 339 01e2 2083      		st Z,r18
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->tx.timeout = (rand() & NWK_TX_DELAY_JITTER_MASK) + 1;
 340               		.loc 1 160 0
 341 01e4 0E94 0000 		call rand
 342 01e8 8770      		andi r24,7
 343 01ea 9927      		clr r25
 344 01ec 0196      		adiw r24,1
 345 01ee 9C01      		movw r18,r24
 346 01f0 8B81      		ldd r24,Y+3
 347 01f2 9C81      		ldd r25,Y+4
 348 01f4 8C57      		subi r24,124
 349 01f6 9F4F      		sbci r25,-1
 350 01f8 FC01      		movw r30,r24
 351 01fa 3183      		std Z+1,r19
 352 01fc 2083      		st Z,r18
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		} else {
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		header->macFcf = 0x8841;
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->tx.timeout = 0;
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 353               		.loc 1 165 0
 354 01fe 00C0      		rjmp .L10
 355               	.L8:
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->tx.timeout = 0;
 356               		.loc 1 162 0
 357 0200 8981      		ldd r24,Y+1
 358 0202 9A81      		ldd r25,Y+2
 359 0204 21E4      		ldi r18,lo8(65)
 360 0206 38E8      		ldi r19,lo8(-120)
 361 0208 FC01      		movw r30,r24
 362 020a 3183      		std Z+1,r19
 363 020c 2083      		st Z,r18
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 364               		.loc 1 163 0
 365 020e 8B81      		ldd r24,Y+3
 366 0210 9C81      		ldd r25,Y+4
 367 0212 8C57      		subi r24,124
 368 0214 9F4F      		sbci r25,-1
 369 0216 FC01      		movw r30,r24
 370 0218 1182      		std Z+1,__zero_reg__
 371 021a 1082      		st Z,__zero_reg__
 372               	.L10:
 373               		.loc 1 165 0
 374 021c 0000      		nop
 375               	/* epilogue start */
 376 021e 0F90      		pop __tmp_reg__
 377 0220 0F90      		pop __tmp_reg__
 378 0222 0F90      		pop __tmp_reg__
 379 0224 0F90      		pop __tmp_reg__
 380 0226 DF91      		pop r29
 381 0228 CF91      		pop r28
 382 022a 0895      		ret
 383               		.cfi_endproc
 384               	.LFE68:
 386               	.global	nwkTxBroadcastFrame
 388               	nwkTxBroadcastFrame:
 389               	.LFB69:
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxBroadcastFrame(NwkFrame_t *frame)
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 390               		.loc 1 170 0
 391               		.cfi_startproc
 392 022c CF93      		push r28
 393               	.LCFI11:
 394               		.cfi_def_cfa_offset 3
 395               		.cfi_offset 28, -2
 396 022e DF93      		push r29
 397               	.LCFI12:
 398               		.cfi_def_cfa_offset 4
 399               		.cfi_offset 29, -3
 400 0230 00D0      		rcall .
 401 0232 00D0      		rcall .
 402               	.LCFI13:
 403               		.cfi_def_cfa_offset 8
 404 0234 CDB7      		in r28,__SP_L__
 405 0236 DEB7      		in r29,__SP_H__
 406               	.LCFI14:
 407               		.cfi_def_cfa_register 28
 408               	/* prologue: function */
 409               	/* frame size = 4 */
 410               	/* stack size = 6 */
 411               	.L__stack_usage = 6
 412 0238 9C83      		std Y+4,r25
 413 023a 8B83      		std Y+3,r24
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *newFrame;
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (NULL == (newFrame = nwkFrameAlloc())) {
 414               		.loc 1 173 0
 415 023c 0E94 0000 		call nwkFrameAlloc
 416 0240 9A83      		std Y+2,r25
 417 0242 8983      		std Y+1,r24
 418 0244 8981      		ldd r24,Y+1
 419 0246 9A81      		ldd r25,Y+2
 420 0248 892B      		or r24,r25
 421 024a 01F4      		brne .+2
 422 024c 00C0      		rjmp .L14
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return;
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->payload += sizeof(NwkFrameHeader_t);
 423               		.loc 1 177 0
 424 024e 8981      		ldd r24,Y+1
 425 0250 9A81      		ldd r25,Y+2
 426 0252 8F57      		subi r24,127
 427 0254 9F4F      		sbci r25,-1
 428 0256 FC01      		movw r30,r24
 429 0258 8081      		ld r24,Z
 430 025a 9181      		ldd r25,Z+1
 431 025c 9C01      		movw r18,r24
 432 025e 205F      		subi r18,-16
 433 0260 3F4F      		sbci r19,-1
 434 0262 8981      		ldd r24,Y+1
 435 0264 9A81      		ldd r25,Y+2
 436 0266 8F57      		subi r24,127
 437 0268 9F4F      		sbci r25,-1
 438 026a FC01      		movw r30,r24
 439 026c 3183      		std Z+1,r19
 440 026e 2083      		st Z,r18
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->state = NWK_TX_STATE_DELAY;
 441               		.loc 1 179 0
 442 0270 8981      		ldd r24,Y+1
 443 0272 9A81      		ldd r25,Y+2
 444 0274 22E1      		ldi r18,lo8(18)
 445 0276 FC01      		movw r30,r24
 446 0278 2083      		st Z,r18
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->size = frame->size;
 447               		.loc 1 180 0
 448 027a 8B81      		ldd r24,Y+3
 449 027c 9C81      		ldd r25,Y+4
 450 027e FC01      		movw r30,r24
 451 0280 2181      		ldd r18,Z+1
 452 0282 8981      		ldd r24,Y+1
 453 0284 9A81      		ldd r25,Y+2
 454 0286 FC01      		movw r30,r24
 455 0288 2183      		std Z+1,r18
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->tx.status = NWK_SUCCESS_STATUS;
 456               		.loc 1 181 0
 457 028a 8981      		ldd r24,Y+1
 458 028c 9A81      		ldd r25,Y+2
 459 028e 8D57      		subi r24,125
 460 0290 9F4F      		sbci r25,-1
 461 0292 FC01      		movw r30,r24
 462 0294 1082      		st Z,__zero_reg__
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->tx.timeout = (rand() & NWK_TX_DELAY_JITTER_MASK) + 1;
 463               		.loc 1 182 0
 464 0296 0E94 0000 		call rand
 465 029a 8770      		andi r24,7
 466 029c 9927      		clr r25
 467 029e 0196      		adiw r24,1
 468 02a0 9C01      		movw r18,r24
 469 02a2 8981      		ldd r24,Y+1
 470 02a4 9A81      		ldd r25,Y+2
 471 02a6 8C57      		subi r24,124
 472 02a8 9F4F      		sbci r25,-1
 473 02aa FC01      		movw r30,r24
 474 02ac 3183      		std Z+1,r19
 475 02ae 2083      		st Z,r18
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->tx.confirm = NULL;
 476               		.loc 1 183 0
 477 02b0 8981      		ldd r24,Y+1
 478 02b2 9A81      		ldd r25,Y+2
 479 02b4 8957      		subi r24,121
 480 02b6 9F4F      		sbci r25,-1
 481 02b8 FC01      		movw r30,r24
 482 02ba 1182      		std Z+1,__zero_reg__
 483 02bc 1082      		st Z,__zero_reg__
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	memcpy(newFrame->data, frame->data, frame->size);
 484               		.loc 1 184 0
 485 02be 8B81      		ldd r24,Y+3
 486 02c0 9C81      		ldd r25,Y+4
 487 02c2 FC01      		movw r30,r24
 488 02c4 8181      		ldd r24,Z+1
 489 02c6 482F      		mov r20,r24
 490 02c8 50E0      		ldi r21,0
 491 02ca 8B81      		ldd r24,Y+3
 492 02cc 9C81      		ldd r25,Y+4
 493 02ce 9C01      		movw r18,r24
 494 02d0 2E5F      		subi r18,-2
 495 02d2 3F4F      		sbci r19,-1
 496 02d4 8981      		ldd r24,Y+1
 497 02d6 9A81      		ldd r25,Y+2
 498 02d8 0296      		adiw r24,2
 499 02da B901      		movw r22,r18
 500 02dc 0E94 0000 		call memcpy
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macFcf = 0x8841;
 501               		.loc 1 186 0
 502 02e0 8981      		ldd r24,Y+1
 503 02e2 9A81      		ldd r25,Y+2
 504 02e4 21E4      		ldi r18,lo8(65)
 505 02e6 38E8      		ldi r19,lo8(-120)
 506 02e8 FC01      		movw r30,r24
 507 02ea 3383      		std Z+3,r19
 508 02ec 2283      		std Z+2,r18
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macDstAddr = NWK_BROADCAST_ADDR;
 509               		.loc 1 187 0
 510 02ee 8981      		ldd r24,Y+1
 511 02f0 9A81      		ldd r25,Y+2
 512 02f2 2FEF      		ldi r18,lo8(-1)
 513 02f4 3FEF      		ldi r19,lo8(-1)
 514 02f6 FC01      		movw r30,r24
 515 02f8 3087      		std Z+8,r19
 516 02fa 2783      		std Z+7,r18
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macDstPanId = frame->header.macDstPanId;
 517               		.loc 1 188 0
 518 02fc 8B81      		ldd r24,Y+3
 519 02fe 9C81      		ldd r25,Y+4
 520 0300 FC01      		movw r30,r24
 521 0302 2581      		ldd r18,Z+5
 522 0304 3681      		ldd r19,Z+6
 523 0306 8981      		ldd r24,Y+1
 524 0308 9A81      		ldd r25,Y+2
 525 030a FC01      		movw r30,r24
 526 030c 3683      		std Z+6,r19
 527 030e 2583      		std Z+5,r18
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macSrcAddr = nwkIb.addr;
 528               		.loc 1 189 0
 529 0310 2091 0000 		lds r18,nwkIb
 530 0314 3091 0000 		lds r19,nwkIb+1
 531 0318 8981      		ldd r24,Y+1
 532 031a 9A81      		ldd r25,Y+2
 533 031c FC01      		movw r30,r24
 534 031e 3287      		std Z+10,r19
 535 0320 2187      		std Z+9,r18
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macSeq = ++nwkIb.macSeqNum;
 536               		.loc 1 190 0
 537 0322 8091 0000 		lds r24,nwkIb+5
 538 0326 8F5F      		subi r24,lo8(-(1))
 539 0328 8093 0000 		sts nwkIb+5,r24
 540 032c 2091 0000 		lds r18,nwkIb+5
 541 0330 8981      		ldd r24,Y+1
 542 0332 9A81      		ldd r25,Y+2
 543 0334 FC01      		movw r30,r24
 544 0336 2483      		std Z+4,r18
 545 0338 00C0      		rjmp .L11
 546               	.L14:
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 547               		.loc 1 174 0
 548 033a 0000      		nop
 549               	.L11:
 550               	/* epilogue start */
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 551               		.loc 1 191 0
 552 033c 0F90      		pop __tmp_reg__
 553 033e 0F90      		pop __tmp_reg__
 554 0340 0F90      		pop __tmp_reg__
 555 0342 0F90      		pop __tmp_reg__
 556 0344 DF91      		pop r29
 557 0346 CF91      		pop r28
 558 0348 0895      		ret
 559               		.cfi_endproc
 560               	.LFE69:
 562               	.global	nwkTxAckReceived
 564               	nwkTxAckReceived:
 565               	.LFB70:
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** bool nwkTxAckReceived(NWK_DataInd_t *ind)
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 566               		.loc 1 196 0
 567               		.cfi_startproc
 568 034a CF93      		push r28
 569               	.LCFI15:
 570               		.cfi_def_cfa_offset 3
 571               		.cfi_offset 28, -2
 572 034c DF93      		push r29
 573               	.LCFI16:
 574               		.cfi_def_cfa_offset 4
 575               		.cfi_offset 29, -3
 576 034e 00D0      		rcall .
 577 0350 00D0      		rcall .
 578 0352 00D0      		rcall .
 579               	.LCFI17:
 580               		.cfi_def_cfa_offset 10
 581 0354 CDB7      		in r28,__SP_L__
 582 0356 DEB7      		in r29,__SP_H__
 583               	.LCFI18:
 584               		.cfi_def_cfa_register 28
 585               	/* prologue: function */
 586               	/* frame size = 6 */
 587               	/* stack size = 8 */
 588               	.L__stack_usage = 8
 589 0358 9E83      		std Y+6,r25
 590 035a 8D83      		std Y+5,r24
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkCommandAck_t *command = (NwkCommandAck_t *)ind->data;
 591               		.loc 1 197 0
 592 035c 8D81      		ldd r24,Y+5
 593 035e 9E81      		ldd r25,Y+6
 594 0360 FC01      		movw r30,r24
 595 0362 8781      		ldd r24,Z+7
 596 0364 9085      		ldd r25,Z+8
 597 0366 9C83      		std Y+4,r25
 598 0368 8B83      		std Y+3,r24
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *frame = NULL;
 599               		.loc 1 198 0
 600 036a 1A82      		std Y+2,__zero_reg__
 601 036c 1982      		std Y+1,__zero_reg__
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (sizeof(NwkCommandAck_t) != ind->size) {
 602               		.loc 1 200 0
 603 036e 8D81      		ldd r24,Y+5
 604 0370 9E81      		ldd r25,Y+6
 605 0372 FC01      		movw r30,r24
 606 0374 8185      		ldd r24,Z+9
 607 0376 8330      		cpi r24,lo8(3)
 608 0378 01F0      		breq .L18
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return false;
 609               		.loc 1 201 0
 610 037a 80E0      		ldi r24,0
 611 037c 00C0      		rjmp .L17
 612               	.L19:
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_ACK == frame->state &&
 613               		.loc 1 205 0
 614 037e 8981      		ldd r24,Y+1
 615 0380 9A81      		ldd r25,Y+2
 616 0382 FC01      		movw r30,r24
 617 0384 8081      		ld r24,Z
 618 0386 8631      		cpi r24,lo8(22)
 619 0388 01F4      		brne .L18
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->header.nwkSeq == command->seq) {
 620               		.loc 1 206 0 discriminator 1
 621 038a 8981      		ldd r24,Y+1
 622 038c 9A81      		ldd r25,Y+2
 623 038e FC01      		movw r30,r24
 624 0390 2485      		ldd r18,Z+12
 625 0392 8B81      		ldd r24,Y+3
 626 0394 9C81      		ldd r25,Y+4
 627 0396 FC01      		movw r30,r24
 628 0398 8181      		ldd r24,Z+1
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->header.nwkSeq == command->seq) {
 629               		.loc 1 205 0 discriminator 1
 630 039a 2817      		cp r18,r24
 631 039c 01F4      		brne .L18
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			frame->state = NWK_TX_STATE_CONFIRM;
 632               		.loc 1 207 0
 633 039e 8981      		ldd r24,Y+1
 634 03a0 9A81      		ldd r25,Y+2
 635 03a2 27E1      		ldi r18,lo8(23)
 636 03a4 FC01      		movw r30,r24
 637 03a6 2083      		st Z,r18
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			frame->tx.control = command->control;
 638               		.loc 1 208 0
 639 03a8 8B81      		ldd r24,Y+3
 640 03aa 9C81      		ldd r25,Y+4
 641 03ac FC01      		movw r30,r24
 642 03ae 2281      		ldd r18,Z+2
 643 03b0 8981      		ldd r24,Y+1
 644 03b2 9A81      		ldd r25,Y+2
 645 03b4 8A57      		subi r24,122
 646 03b6 9F4F      		sbci r25,-1
 647 03b8 FC01      		movw r30,r24
 648 03ba 2083      		st Z,r18
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			return true;
 649               		.loc 1 209 0
 650 03bc 81E0      		ldi r24,lo8(1)
 651 03be 00C0      		rjmp .L17
 652               	.L18:
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_ACK == frame->state &&
 653               		.loc 1 204 0
 654 03c0 8981      		ldd r24,Y+1
 655 03c2 9A81      		ldd r25,Y+2
 656 03c4 0E94 0000 		call nwkFrameNext
 657 03c8 9A83      		std Y+2,r25
 658 03ca 8983      		std Y+1,r24
 659 03cc 8981      		ldd r24,Y+1
 660 03ce 9A81      		ldd r25,Y+2
 661 03d0 892B      		or r24,r25
 662 03d2 01F4      		brne .L19
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	return false;
 663               		.loc 1 213 0
 664 03d4 80E0      		ldi r24,0
 665               	.L17:
 666               	/* epilogue start */
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 667               		.loc 1 214 0
 668 03d6 2696      		adiw r28,6
 669 03d8 0FB6      		in __tmp_reg__,__SREG__
 670 03da F894      		cli
 671 03dc DEBF      		out __SP_H__,r29
 672 03de 0FBE      		out __SREG__,__tmp_reg__
 673 03e0 CDBF      		out __SP_L__,r28
 674 03e2 DF91      		pop r29
 675 03e4 CF91      		pop r28
 676 03e6 0895      		ret
 677               		.cfi_endproc
 678               	.LFE70:
 681               	nwkTxAckWaitTimerHandler:
 682               	.LFB71:
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer)
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 683               		.loc 1 219 0
 684               		.cfi_startproc
 685 03e8 CF93      		push r28
 686               	.LCFI19:
 687               		.cfi_def_cfa_offset 3
 688               		.cfi_offset 28, -2
 689 03ea DF93      		push r29
 690               	.LCFI20:
 691               		.cfi_def_cfa_offset 4
 692               		.cfi_offset 29, -3
 693 03ec 00D0      		rcall .
 694 03ee 00D0      		rcall .
 695 03f0 1F92      		push __zero_reg__
 696               	.LCFI21:
 697               		.cfi_def_cfa_offset 9
 698 03f2 CDB7      		in r28,__SP_L__
 699 03f4 DEB7      		in r29,__SP_H__
 700               	.LCFI22:
 701               		.cfi_def_cfa_register 28
 702               	/* prologue: function */
 703               	/* frame size = 5 */
 704               	/* stack size = 7 */
 705               	.L__stack_usage = 7
 706 03f6 9D83      		std Y+5,r25
 707 03f8 8C83      		std Y+4,r24
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *frame = NULL;
 708               		.loc 1 220 0
 709 03fa 1A82      		std Y+2,__zero_reg__
 710 03fc 1982      		std Y+1,__zero_reg__
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	bool restart = false;
 711               		.loc 1 221 0
 712 03fe 1B82      		std Y+3,__zero_reg__
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 713               		.loc 1 223 0
 714 0400 00C0      		rjmp .L21
 715               	.L22:
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_ACK == frame->state) {
 716               		.loc 1 224 0
 717 0402 8981      		ldd r24,Y+1
 718 0404 9A81      		ldd r25,Y+2
 719 0406 FC01      		movw r30,r24
 720 0408 8081      		ld r24,Z
 721 040a 8631      		cpi r24,lo8(22)
 722 040c 01F4      		brne .L21
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			restart = true;
 723               		.loc 1 225 0
 724 040e 81E0      		ldi r24,lo8(1)
 725 0410 8B83      		std Y+3,r24
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (0 == --frame->tx.timeout) {
 726               		.loc 1 227 0
 727 0412 8981      		ldd r24,Y+1
 728 0414 9A81      		ldd r25,Y+2
 729 0416 8C57      		subi r24,124
 730 0418 9F4F      		sbci r25,-1
 731 041a FC01      		movw r30,r24
 732 041c 8081      		ld r24,Z
 733 041e 9181      		ldd r25,Z+1
 734 0420 9C01      		movw r18,r24
 735 0422 2150      		subi r18,1
 736 0424 3109      		sbc r19,__zero_reg__
 737 0426 8981      		ldd r24,Y+1
 738 0428 9A81      		ldd r25,Y+2
 739 042a 8C57      		subi r24,124
 740 042c 9F4F      		sbci r25,-1
 741 042e FC01      		movw r30,r24
 742 0430 3183      		std Z+1,r19
 743 0432 2083      		st Z,r18
 744 0434 8981      		ldd r24,Y+1
 745 0436 9A81      		ldd r25,Y+2
 746 0438 8C57      		subi r24,124
 747 043a 9F4F      		sbci r25,-1
 748 043c FC01      		movw r30,r24
 749 043e 8081      		ld r24,Z
 750 0440 9181      		ldd r25,Z+1
 751 0442 892B      		or r24,r25
 752 0444 01F4      		brne .L21
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				nwkTxConfirm(frame, NWK_NO_ACK_STATUS);
 753               		.loc 1 228 0
 754 0446 8981      		ldd r24,Y+1
 755 0448 9A81      		ldd r25,Y+2
 756 044a 60E1      		ldi r22,lo8(16)
 757 044c 0E94 0000 		call nwkTxConfirm
 758               	.L21:
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_ACK == frame->state) {
 759               		.loc 1 223 0
 760 0450 8981      		ldd r24,Y+1
 761 0452 9A81      		ldd r25,Y+2
 762 0454 0E94 0000 		call nwkFrameNext
 763 0458 9A83      		std Y+2,r25
 764 045a 8983      		std Y+1,r24
 765 045c 8981      		ldd r24,Y+1
 766 045e 9A81      		ldd r25,Y+2
 767 0460 892B      		or r24,r25
 768 0462 01F4      		brne .L22
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (restart) {
 769               		.loc 1 233 0
 770 0464 8B81      		ldd r24,Y+3
 771 0466 8823      		tst r24
 772 0468 01F0      		breq .L24
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		SYS_TimerStart(timer);
 773               		.loc 1 234 0
 774 046a 8C81      		ldd r24,Y+4
 775 046c 9D81      		ldd r25,Y+5
 776 046e 0E94 0000 		call SYS_TimerStart
 777               	.L24:
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 778               		.loc 1 236 0
 779 0472 0000      		nop
 780               	/* epilogue start */
 781 0474 0F90      		pop __tmp_reg__
 782 0476 0F90      		pop __tmp_reg__
 783 0478 0F90      		pop __tmp_reg__
 784 047a 0F90      		pop __tmp_reg__
 785 047c 0F90      		pop __tmp_reg__
 786 047e DF91      		pop r29
 787 0480 CF91      		pop r28
 788 0482 0895      		ret
 789               		.cfi_endproc
 790               	.LFE71:
 792               	.global	nwkTxConfirm
 794               	nwkTxConfirm:
 795               	.LFB72:
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxConfirm(NwkFrame_t *frame, uint8_t status)
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 796               		.loc 1 241 0
 797               		.cfi_startproc
 798 0484 CF93      		push r28
 799               	.LCFI23:
 800               		.cfi_def_cfa_offset 3
 801               		.cfi_offset 28, -2
 802 0486 DF93      		push r29
 803               	.LCFI24:
 804               		.cfi_def_cfa_offset 4
 805               		.cfi_offset 29, -3
 806 0488 00D0      		rcall .
 807 048a 1F92      		push __zero_reg__
 808               	.LCFI25:
 809               		.cfi_def_cfa_offset 7
 810 048c CDB7      		in r28,__SP_L__
 811 048e DEB7      		in r29,__SP_H__
 812               	.LCFI26:
 813               		.cfi_def_cfa_register 28
 814               	/* prologue: function */
 815               	/* frame size = 3 */
 816               	/* stack size = 5 */
 817               	.L__stack_usage = 5
 818 0490 9A83      		std Y+2,r25
 819 0492 8983      		std Y+1,r24
 820 0494 6B83      		std Y+3,r22
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->state = NWK_TX_STATE_CONFIRM;
 821               		.loc 1 242 0
 822 0496 8981      		ldd r24,Y+1
 823 0498 9A81      		ldd r25,Y+2
 824 049a 27E1      		ldi r18,lo8(23)
 825 049c FC01      		movw r30,r24
 826 049e 2083      		st Z,r18
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.status = status;
 827               		.loc 1 243 0
 828 04a0 8981      		ldd r24,Y+1
 829 04a2 9A81      		ldd r25,Y+2
 830 04a4 8D57      		subi r24,125
 831 04a6 9F4F      		sbci r25,-1
 832 04a8 2B81      		ldd r18,Y+3
 833 04aa FC01      		movw r30,r24
 834 04ac 2083      		st Z,r18
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 835               		.loc 1 244 0
 836 04ae 0000      		nop
 837               	/* epilogue start */
 838 04b0 0F90      		pop __tmp_reg__
 839 04b2 0F90      		pop __tmp_reg__
 840 04b4 0F90      		pop __tmp_reg__
 841 04b6 DF91      		pop r29
 842 04b8 CF91      		pop r28
 843 04ba 0895      		ret
 844               		.cfi_endproc
 845               	.LFE72:
 848               	nwkTxDelayTimerHandler:
 849               	.LFB73:
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_SECURITY
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxEncryptConf(NwkFrame_t *frame)
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->state = NWK_TX_STATE_DELAY;
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static void nwkTxDelayTimerHandler(SYS_Timer_t *timer)
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 850               		.loc 1 260 0
 851               		.cfi_startproc
 852 04bc CF93      		push r28
 853               	.LCFI27:
 854               		.cfi_def_cfa_offset 3
 855               		.cfi_offset 28, -2
 856 04be DF93      		push r29
 857               	.LCFI28:
 858               		.cfi_def_cfa_offset 4
 859               		.cfi_offset 29, -3
 860 04c0 00D0      		rcall .
 861 04c2 00D0      		rcall .
 862 04c4 1F92      		push __zero_reg__
 863               	.LCFI29:
 864               		.cfi_def_cfa_offset 9
 865 04c6 CDB7      		in r28,__SP_L__
 866 04c8 DEB7      		in r29,__SP_H__
 867               	.LCFI30:
 868               		.cfi_def_cfa_register 28
 869               	/* prologue: function */
 870               	/* frame size = 5 */
 871               	/* stack size = 7 */
 872               	.L__stack_usage = 7
 873 04ca 9D83      		std Y+5,r25
 874 04cc 8C83      		std Y+4,r24
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *frame = NULL;
 875               		.loc 1 261 0
 876 04ce 1A82      		std Y+2,__zero_reg__
 877 04d0 1982      		std Y+1,__zero_reg__
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	bool restart = false;
 878               		.loc 1 262 0
 879 04d2 1B82      		std Y+3,__zero_reg__
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 880               		.loc 1 264 0
 881 04d4 00C0      		rjmp .L27
 882               	.L28:
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_DELAY == frame->state) {
 883               		.loc 1 265 0
 884 04d6 8981      		ldd r24,Y+1
 885 04d8 9A81      		ldd r25,Y+2
 886 04da FC01      		movw r30,r24
 887 04dc 8081      		ld r24,Z
 888 04de 8131      		cpi r24,lo8(17)
 889 04e0 01F4      		brne .L27
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			restart = true;
 890               		.loc 1 266 0
 891 04e2 81E0      		ldi r24,lo8(1)
 892 04e4 8B83      		std Y+3,r24
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (0 == --frame->tx.timeout) {
 893               		.loc 1 268 0
 894 04e6 8981      		ldd r24,Y+1
 895 04e8 9A81      		ldd r25,Y+2
 896 04ea 8C57      		subi r24,124
 897 04ec 9F4F      		sbci r25,-1
 898 04ee FC01      		movw r30,r24
 899 04f0 8081      		ld r24,Z
 900 04f2 9181      		ldd r25,Z+1
 901 04f4 9C01      		movw r18,r24
 902 04f6 2150      		subi r18,1
 903 04f8 3109      		sbc r19,__zero_reg__
 904 04fa 8981      		ldd r24,Y+1
 905 04fc 9A81      		ldd r25,Y+2
 906 04fe 8C57      		subi r24,124
 907 0500 9F4F      		sbci r25,-1
 908 0502 FC01      		movw r30,r24
 909 0504 3183      		std Z+1,r19
 910 0506 2083      		st Z,r18
 911 0508 8981      		ldd r24,Y+1
 912 050a 9A81      		ldd r25,Y+2
 913 050c 8C57      		subi r24,124
 914 050e 9F4F      		sbci r25,-1
 915 0510 FC01      		movw r30,r24
 916 0512 8081      		ld r24,Z
 917 0514 9181      		ldd r25,Z+1
 918 0516 892B      		or r24,r25
 919 0518 01F4      		brne .L27
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_SEND;
 920               		.loc 1 269 0
 921 051a 8981      		ldd r24,Y+1
 922 051c 9A81      		ldd r25,Y+2
 923 051e 23E1      		ldi r18,lo8(19)
 924 0520 FC01      		movw r30,r24
 925 0522 2083      		st Z,r18
 926               	.L27:
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_DELAY == frame->state) {
 927               		.loc 1 264 0
 928 0524 8981      		ldd r24,Y+1
 929 0526 9A81      		ldd r25,Y+2
 930 0528 0E94 0000 		call nwkFrameNext
 931 052c 9A83      		std Y+2,r25
 932 052e 8983      		std Y+1,r24
 933 0530 8981      		ldd r24,Y+1
 934 0532 9A81      		ldd r25,Y+2
 935 0534 892B      		or r24,r25
 936 0536 01F4      		brne .L28
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (restart) {
 937               		.loc 1 274 0
 938 0538 8B81      		ldd r24,Y+3
 939 053a 8823      		tst r24
 940 053c 01F0      		breq .L30
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		SYS_TimerStart(timer);
 941               		.loc 1 275 0
 942 053e 8C81      		ldd r24,Y+4
 943 0540 9D81      		ldd r25,Y+5
 944 0542 0E94 0000 		call SYS_TimerStart
 945               	.L30:
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 946               		.loc 1 277 0
 947 0546 0000      		nop
 948               	/* epilogue start */
 949 0548 0F90      		pop __tmp_reg__
 950 054a 0F90      		pop __tmp_reg__
 951 054c 0F90      		pop __tmp_reg__
 952 054e 0F90      		pop __tmp_reg__
 953 0550 0F90      		pop __tmp_reg__
 954 0552 DF91      		pop r29
 955 0554 CF91      		pop r28
 956 0556 0895      		ret
 957               		.cfi_endproc
 958               	.LFE73:
 961               	nwkTxConvertPhyStatus:
 962               	.LFB74:
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static uint8_t nwkTxConvertPhyStatus(uint8_t status)
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 963               		.loc 1 282 0
 964               		.cfi_startproc
 965 0558 CF93      		push r28
 966               	.LCFI31:
 967               		.cfi_def_cfa_offset 3
 968               		.cfi_offset 28, -2
 969 055a DF93      		push r29
 970               	.LCFI32:
 971               		.cfi_def_cfa_offset 4
 972               		.cfi_offset 29, -3
 973 055c 1F92      		push __zero_reg__
 974               	.LCFI33:
 975               		.cfi_def_cfa_offset 5
 976 055e CDB7      		in r28,__SP_L__
 977 0560 DEB7      		in r29,__SP_H__
 978               	.LCFI34:
 979               		.cfi_def_cfa_register 28
 980               	/* prologue: function */
 981               	/* frame size = 1 */
 982               	/* stack size = 3 */
 983               	.L__stack_usage = 3
 984 0562 8983      		std Y+1,r24
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	switch (status) {
 985               		.loc 1 283 0
 986 0564 8981      		ldd r24,Y+1
 987 0566 882F      		mov r24,r24
 988 0568 90E0      		ldi r25,0
 989 056a 8130      		cpi r24,1
 990 056c 9105      		cpc r25,__zero_reg__
 991 056e 01F0      		breq .L33
 992 0570 8230      		cpi r24,2
 993 0572 9105      		cpc r25,__zero_reg__
 994 0574 01F0      		breq .L34
 995 0576 892B      		or r24,r25
 996 0578 01F4      		brne .L37
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	case PHY_STATUS_SUCCESS:
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return NWK_SUCCESS_STATUS;
 997               		.loc 1 285 0
 998 057a 80E0      		ldi r24,0
 999 057c 00C0      		rjmp .L36
 1000               	.L33:
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	case PHY_STATUS_CHANNEL_ACCESS_FAILURE:
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return NWK_PHY_CHANNEL_ACCESS_FAILURE_STATUS;
 1001               		.loc 1 288 0
 1002 057e 80E2      		ldi r24,lo8(32)
 1003 0580 00C0      		rjmp .L36
 1004               	.L34:
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	case PHY_STATUS_NO_ACK:
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return NWK_PHY_NO_ACK_STATUS;
 1005               		.loc 1 291 0
 1006 0582 81E2      		ldi r24,lo8(33)
 1007 0584 00C0      		rjmp .L36
 1008               	.L37:
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	default:
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return NWK_ERROR_STATUS;
 1009               		.loc 1 294 0
 1010 0586 81E0      		ldi r24,lo8(1)
 1011               	.L36:
 1012               	/* epilogue start */
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1013               		.loc 1 296 0
 1014 0588 0F90      		pop __tmp_reg__
 1015 058a DF91      		pop r29
 1016 058c CF91      		pop r28
 1017 058e 0895      		ret
 1018               		.cfi_endproc
 1019               	.LFE74:
 1021               	.global	PHY_DataConf
 1023               	PHY_DataConf:
 1024               	.LFB75:
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void PHY_DataConf(uint8_t status)
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 1025               		.loc 1 301 0
 1026               		.cfi_startproc
 1027 0590 0F93      		push r16
 1028               	.LCFI35:
 1029               		.cfi_def_cfa_offset 3
 1030               		.cfi_offset 16, -2
 1031 0592 1F93      		push r17
 1032               	.LCFI36:
 1033               		.cfi_def_cfa_offset 4
 1034               		.cfi_offset 17, -3
 1035 0594 CF93      		push r28
 1036               	.LCFI37:
 1037               		.cfi_def_cfa_offset 5
 1038               		.cfi_offset 28, -4
 1039 0596 DF93      		push r29
 1040               	.LCFI38:
 1041               		.cfi_def_cfa_offset 6
 1042               		.cfi_offset 29, -5
 1043 0598 1F92      		push __zero_reg__
 1044               	.LCFI39:
 1045               		.cfi_def_cfa_offset 7
 1046 059a CDB7      		in r28,__SP_L__
 1047 059c DEB7      		in r29,__SP_H__
 1048               	.LCFI40:
 1049               		.cfi_def_cfa_register 28
 1050               	/* prologue: function */
 1051               	/* frame size = 1 */
 1052               	/* stack size = 5 */
 1053               	.L__stack_usage = 5
 1054 059e 8983      		std Y+1,r24
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxPhyActiveFrame->tx.status = nwkTxConvertPhyStatus(status);
 1055               		.loc 1 302 0
 1056 05a0 0091 0000 		lds r16,nwkTxPhyActiveFrame
 1057 05a4 1091 0000 		lds r17,nwkTxPhyActiveFrame+1
 1058 05a8 8981      		ldd r24,Y+1
 1059 05aa 0E94 0000 		call nwkTxConvertPhyStatus
 1060 05ae 282F      		mov r18,r24
 1061 05b0 C801      		movw r24,r16
 1062 05b2 8D57      		subi r24,125
 1063 05b4 9F4F      		sbci r25,-1
 1064 05b6 FC01      		movw r30,r24
 1065 05b8 2083      		st Z,r18
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxPhyActiveFrame->state = NWK_TX_STATE_SENT;
 1066               		.loc 1 303 0
 1067 05ba 8091 0000 		lds r24,nwkTxPhyActiveFrame
 1068 05be 9091 0000 		lds r25,nwkTxPhyActiveFrame+1
 1069 05c2 25E1      		ldi r18,lo8(21)
 1070 05c4 FC01      		movw r30,r24
 1071 05c6 2083      		st Z,r18
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxPhyActiveFrame = NULL;
 1072               		.loc 1 304 0
 1073 05c8 1092 0000 		sts nwkTxPhyActiveFrame+1,__zero_reg__
 1074 05cc 1092 0000 		sts nwkTxPhyActiveFrame,__zero_reg__
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkIb.lock--;
 1075               		.loc 1 305 0
 1076 05d0 8091 0000 		lds r24,nwkIb+38
 1077 05d4 9091 0000 		lds r25,nwkIb+38+1
 1078 05d8 0197      		sbiw r24,1
 1079 05da 9093 0000 		sts nwkIb+38+1,r25
 1080 05de 8093 0000 		sts nwkIb+38,r24
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1081               		.loc 1 306 0
 1082 05e2 0000      		nop
 1083               	/* epilogue start */
 1084 05e4 0F90      		pop __tmp_reg__
 1085 05e6 DF91      		pop r29
 1086 05e8 CF91      		pop r28
 1087 05ea 1F91      		pop r17
 1088 05ec 0F91      		pop r16
 1089 05ee 0895      		ret
 1090               		.cfi_endproc
 1091               	.LFE75:
 1093               	.global	nwkTxTaskHandler
 1095               	nwkTxTaskHandler:
 1096               	.LFB76:
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *  @brief Tx Module task handler
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxTaskHandler(void)
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 1097               		.loc 1 312 0
 1098               		.cfi_startproc
 1099 05f0 CF93      		push r28
 1100               	.LCFI41:
 1101               		.cfi_def_cfa_offset 3
 1102               		.cfi_offset 28, -2
 1103 05f2 DF93      		push r29
 1104               	.LCFI42:
 1105               		.cfi_def_cfa_offset 4
 1106               		.cfi_offset 29, -3
 1107 05f4 00D0      		rcall .
 1108               	.LCFI43:
 1109               		.cfi_def_cfa_offset 6
 1110 05f6 CDB7      		in r28,__SP_L__
 1111 05f8 DEB7      		in r29,__SP_H__
 1112               	.LCFI44:
 1113               		.cfi_def_cfa_register 28
 1114               	/* prologue: function */
 1115               	/* frame size = 2 */
 1116               	/* stack size = 4 */
 1117               	.L__stack_usage = 4
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *frame = NULL;
 1118               		.loc 1 313 0
 1119 05fa 1A82      		std Y+2,__zero_reg__
 1120 05fc 1982      		std Y+1,__zero_reg__
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 1121               		.loc 1 315 0
 1122 05fe 00C0      		rjmp .L40
 1123               	.L58:
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		switch (frame->state) {
 1124               		.loc 1 316 0
 1125 0600 8981      		ldd r24,Y+1
 1126 0602 9A81      		ldd r25,Y+2
 1127 0604 FC01      		movw r30,r24
 1128 0606 8081      		ld r24,Z
 1129 0608 882F      		mov r24,r24
 1130 060a 90E0      		ldi r25,0
 1131 060c 8431      		cpi r24,20
 1132 060e 9105      		cpc r25,__zero_reg__
 1133 0610 01F4      		brne .+2
 1134 0612 00C0      		rjmp .L40
 1135 0614 8531      		cpi r24,21
 1136 0616 9105      		cpc r25,__zero_reg__
 1137 0618 04F4      		brge .L43
 1138 061a 8231      		cpi r24,18
 1139 061c 9105      		cpc r25,__zero_reg__
 1140 061e 01F0      		breq .L44
 1141 0620 4397      		sbiw r24,19
 1142 0622 01F0      		breq .L45
 1143 0624 00C0      		rjmp .L41
 1144               	.L43:
 1145 0626 8631      		cpi r24,22
 1146 0628 9105      		cpc r25,__zero_reg__
 1147 062a 01F4      		brne .+2
 1148 062c 00C0      		rjmp .L40
 1149 062e 8631      		cpi r24,22
 1150 0630 9105      		cpc r25,__zero_reg__
 1151 0632 04F4      		brge .+2
 1152 0634 00C0      		rjmp .L47
 1153 0636 4797      		sbiw r24,23
 1154 0638 01F4      		brne .+2
 1155 063a 00C0      		rjmp .L48
 1156 063c 00C0      		rjmp .L41
 1157               	.L44:
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_SECURITY
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_ENCRYPT:
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			nwkSecurityProcess(frame, true);
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_DELAY:
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (frame->tx.timeout > 0) {
 1158               		.loc 1 327 0
 1159 063e 8981      		ldd r24,Y+1
 1160 0640 9A81      		ldd r25,Y+2
 1161 0642 8C57      		subi r24,124
 1162 0644 9F4F      		sbci r25,-1
 1163 0646 FC01      		movw r30,r24
 1164 0648 8081      		ld r24,Z
 1165 064a 9181      		ldd r25,Z+1
 1166 064c 892B      		or r24,r25
 1167 064e 01F0      		breq .L49
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_WAIT_DELAY;
 1168               		.loc 1 328 0
 1169 0650 8981      		ldd r24,Y+1
 1170 0652 9A81      		ldd r25,Y+2
 1171 0654 21E1      		ldi r18,lo8(17)
 1172 0656 FC01      		movw r30,r24
 1173 0658 2083      		st Z,r18
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				SYS_TimerStart(&nwkTxDelayTimer);
 1174               		.loc 1 329 0
 1175 065a 80E0      		ldi r24,lo8(nwkTxDelayTimer)
 1176 065c 90E0      		ldi r25,hi8(nwkTxDelayTimer)
 1177 065e 0E94 0000 		call SYS_TimerStart
 1178 0662 00C0      		rjmp .L40
 1179               	.L49:
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			} else {
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_SEND;
 1180               		.loc 1 331 0
 1181 0664 8981      		ldd r24,Y+1
 1182 0666 9A81      		ldd r25,Y+2
 1183 0668 23E1      		ldi r18,lo8(19)
 1184 066a FC01      		movw r30,r24
 1185 066c 2083      		st Z,r18
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 1186               		.loc 1 334 0
 1187 066e 00C0      		rjmp .L40
 1188               	.L45:
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_SEND:
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (NULL == nwkTxPhyActiveFrame) {
 1189               		.loc 1 338 0
 1190 0670 8091 0000 		lds r24,nwkTxPhyActiveFrame
 1191 0674 9091 0000 		lds r25,nwkTxPhyActiveFrame+1
 1192 0678 892B      		or r24,r25
 1193 067a 01F0      		breq .+2
 1194 067c 00C0      		rjmp .L40
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				nwkTxPhyActiveFrame = frame;
 1195               		.loc 1 339 0
 1196 067e 8981      		ldd r24,Y+1
 1197 0680 9A81      		ldd r25,Y+2
 1198 0682 9093 0000 		sts nwkTxPhyActiveFrame+1,r25
 1199 0686 8093 0000 		sts nwkTxPhyActiveFrame,r24
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_WAIT_CONF;
 1200               		.loc 1 340 0
 1201 068a 8981      		ldd r24,Y+1
 1202 068c 9A81      		ldd r25,Y+2
 1203 068e 24E1      		ldi r18,lo8(20)
 1204 0690 FC01      		movw r30,r24
 1205 0692 2083      		st Z,r18
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				PHY_DataReq(&(frame->size));
 1206               		.loc 1 341 0
 1207 0694 8981      		ldd r24,Y+1
 1208 0696 9A81      		ldd r25,Y+2
 1209 0698 0196      		adiw r24,1
 1210 069a 0E94 0000 		call PHY_DataReq
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				nwkIb.lock++;
 1211               		.loc 1 342 0
 1212 069e 8091 0000 		lds r24,nwkIb+38
 1213 06a2 9091 0000 		lds r25,nwkIb+38+1
 1214 06a6 0196      		adiw r24,1
 1215 06a8 9093 0000 		sts nwkIb+38+1,r25
 1216 06ac 8093 0000 		sts nwkIb+38,r24
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 1217               		.loc 1 345 0
 1218 06b0 00C0      		rjmp .L40
 1219               	.L47:
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_WAIT_CONF:
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			break;
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_SENT:
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (NWK_SUCCESS_STATUS == frame->tx.status) {
 1220               		.loc 1 352 0
 1221 06b2 8981      		ldd r24,Y+1
 1222 06b4 9A81      		ldd r25,Y+2
 1223 06b6 8D57      		subi r24,125
 1224 06b8 9F4F      		sbci r25,-1
 1225 06ba FC01      		movw r30,r24
 1226 06bc 8081      		ld r24,Z
 1227 06be 8823      		tst r24
 1228 06c0 01F4      		brne .L52
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				if (frame->header.nwkSrcAddr == nwkIb.addr &&
 1229               		.loc 1 353 0
 1230 06c2 8981      		ldd r24,Y+1
 1231 06c4 9A81      		ldd r25,Y+2
 1232 06c6 FC01      		movw r30,r24
 1233 06c8 2585      		ldd r18,Z+13
 1234 06ca 3685      		ldd r19,Z+14
 1235 06cc 8091 0000 		lds r24,nwkIb
 1236 06d0 9091 0000 		lds r25,nwkIb+1
 1237 06d4 2817      		cp r18,r24
 1238 06d6 3907      		cpc r19,r25
 1239 06d8 01F4      		brne .L53
 1240               		.loc 1 353 0 is_stmt 0 discriminator 1
 1241 06da 8981      		ldd r24,Y+1
 1242 06dc 9A81      		ldd r25,Y+2
 1243 06de FC01      		movw r30,r24
 1244 06e0 8385      		ldd r24,Z+11
 1245 06e2 8170      		andi r24,lo8(1)
 1246 06e4 8823      		tst r24
 1247 06e6 01F0      		breq .L53
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 						frame->header.nwkFcf.
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 						ackRequest) {
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 					frame->state = NWK_TX_STATE_WAIT_ACK;
 1248               		.loc 1 356 0 is_stmt 1
 1249 06e8 8981      		ldd r24,Y+1
 1250 06ea 9A81      		ldd r25,Y+2
 1251 06ec 26E1      		ldi r18,lo8(22)
 1252 06ee FC01      		movw r30,r24
 1253 06f0 2083      		st Z,r18
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 					frame->tx.timeout = NWK_ACK_WAIT_TIME /
 1254               		.loc 1 357 0
 1255 06f2 8981      		ldd r24,Y+1
 1256 06f4 9A81      		ldd r25,Y+2
 1257 06f6 8C57      		subi r24,124
 1258 06f8 9F4F      		sbci r25,-1
 1259 06fa 25E1      		ldi r18,lo8(21)
 1260 06fc 30E0      		ldi r19,0
 1261 06fe FC01      		movw r30,r24
 1262 0700 3183      		std Z+1,r19
 1263 0702 2083      		st Z,r18
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 							NWK_TX_ACK_WAIT_TIMER_INTERVAL
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 							+ 1;
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 					SYS_TimerStart(&nwkTxAckWaitTimer);
 1264               		.loc 1 360 0
 1265 0704 80E0      		ldi r24,lo8(nwkTxAckWaitTimer)
 1266 0706 90E0      		ldi r25,hi8(nwkTxAckWaitTimer)
 1267 0708 0E94 0000 		call SYS_TimerStart
 1268 070c 00C0      		rjmp .L55
 1269               	.L53:
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				} else {
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 					frame->state = NWK_TX_STATE_CONFIRM;
 1270               		.loc 1 362 0
 1271 070e 8981      		ldd r24,Y+1
 1272 0710 9A81      		ldd r25,Y+2
 1273 0712 27E1      		ldi r18,lo8(23)
 1274 0714 FC01      		movw r30,r24
 1275 0716 2083      		st Z,r18
 1276 0718 00C0      		rjmp .L40
 1277               	.L52:
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				}
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			} else {
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_CONFIRM;
 1278               		.loc 1 365 0
 1279 071a 8981      		ldd r24,Y+1
 1280 071c 9A81      		ldd r25,Y+2
 1281 071e 27E1      		ldi r18,lo8(23)
 1282 0720 FC01      		movw r30,r24
 1283 0722 2083      		st Z,r18
 1284               	.L55:
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 1285               		.loc 1 368 0 discriminator 1
 1286 0724 00C0      		rjmp .L40
 1287               	.L48:
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_WAIT_ACK:
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			break;
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_CONFIRM:
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_ROUTING
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			nwkRouteFrameSent(frame);
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (NULL == frame->tx.confirm) {
 1288               		.loc 1 378 0
 1289 0726 8981      		ldd r24,Y+1
 1290 0728 9A81      		ldd r25,Y+2
 1291 072a 8957      		subi r24,121
 1292 072c 9F4F      		sbci r25,-1
 1293 072e FC01      		movw r30,r24
 1294 0730 8081      		ld r24,Z
 1295 0732 9181      		ldd r25,Z+1
 1296 0734 892B      		or r24,r25
 1297 0736 01F4      		brne .L56
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				nwkFrameFree(frame);
 1298               		.loc 1 379 0
 1299 0738 8981      		ldd r24,Y+1
 1300 073a 9A81      		ldd r25,Y+2
 1301 073c 0E94 0000 		call nwkFrameFree
 1302 0740 00C0      		rjmp .L40
 1303               	.L56:
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			} else {
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->tx.confirm(frame);
 1304               		.loc 1 381 0
 1305 0742 8981      		ldd r24,Y+1
 1306 0744 9A81      		ldd r25,Y+2
 1307 0746 8957      		subi r24,121
 1308 0748 9F4F      		sbci r25,-1
 1309 074a FC01      		movw r30,r24
 1310 074c 2081      		ld r18,Z
 1311 074e 3181      		ldd r19,Z+1
 1312 0750 8981      		ldd r24,Y+1
 1313 0752 9A81      		ldd r25,Y+2
 1314 0754 F901      		movw r30,r18
 1315 0756 0995      		icall
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 1316               		.loc 1 384 0
 1317 0758 00C0      		rjmp .L40
 1318               	.L41:
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		default:
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			break;
 1319               		.loc 1 387 0
 1320 075a 0000      		nop
 1321               	.L40:
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		switch (frame->state) {
 1322               		.loc 1 315 0
 1323 075c 8981      		ldd r24,Y+1
 1324 075e 9A81      		ldd r25,Y+2
 1325 0760 0E94 0000 		call nwkFrameNext
 1326 0764 9A83      		std Y+2,r25
 1327 0766 8983      		std Y+1,r24
 1328 0768 8981      		ldd r24,Y+1
 1329 076a 9A81      		ldd r25,Y+2
 1330 076c 892B      		or r24,r25
 1331 076e 01F0      		breq .+2
 1332 0770 00C0      		rjmp .L58
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1333               		.loc 1 390 0
 1334 0772 0000      		nop
 1335               	/* epilogue start */
 1336 0774 0F90      		pop __tmp_reg__
 1337 0776 0F90      		pop __tmp_reg__
 1338 0778 DF91      		pop r29
 1339 077a CF91      		pop r28
 1340 077c 0895      		ret
 1341               		.cfi_endproc
 1342               	.LFE76:
 1344               	.Letext0:
 1345               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 1346               		.file 3 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 1347               		.file 4 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
 1348               		.file 5 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 1349               		.file 6 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 1350               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 1351               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwkTx.h"
 1352               		.file 9 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkTx.c
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:7      *ABS*:00000001 __zero_reg__
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:14     .bss.nwkTxPhyActiveFrame:00000000 nwkTxPhyActiveFrame
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:19     .bss.nwkTxAckWaitTimer:00000000 nwkTxAckWaitTimer
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:24     .bss.nwkTxDelayTimer:00000000 nwkTxDelayTimer
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:29     .text:00000000 nwkTxInit
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:681    .text:000003e8 nwkTxAckWaitTimerHandler
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:848    .text:000004bc nwkTxDelayTimerHandler
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:96     .text:00000068 nwkTxBeaconFrame
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:197    .text:000000fe nwkTxFrame
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:388    .text:0000022c nwkTxBroadcastFrame
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:564    .text:0000034a nwkTxAckReceived
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:794    .text:00000484 nwkTxConfirm
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:961    .text:00000558 nwkTxConvertPhyStatus
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:1023   .text:00000590 PHY_DataConf
C:\Users\guilh\AppData\Local\Temp\cc1PjuDV.s:1095   .text:000005f0 nwkTxTaskHandler

UNDEFINED SYMBOLS
nwkIb
rand
nwkFrameAlloc
memcpy
nwkFrameNext
SYS_TimerStart
PHY_DataReq
nwkFrameFree
__do_clear_bss
