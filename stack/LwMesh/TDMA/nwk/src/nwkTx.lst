   1               		.file	"nwkTx.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.comm	n,1,1
  12               		.comm	tTS,4,1
  13               		.comm	macLLDNnumTimeSlots,2,1
  14               		.comm	macLLDNnumUplinkTS,2,1
  15               		.comm	macLLDNRetransmitTS,2,1
  16               		.section	.bss.nwkTxPhyActiveFrame,"aw",@nobits
  19               	nwkTxPhyActiveFrame:
  20 0000 0000      		.zero	2
  21               		.section	.bss.nwkTxAckWaitTimer,"aw",@nobits
  24               	nwkTxAckWaitTimer:
  25 0000 0000 0000 		.zero	13
  25      0000 0000 
  25      0000 0000 
  25      00
  26               		.section	.bss.nwkTxDelayTimer,"aw",@nobits
  29               	nwkTxDelayTimer:
  30 0000 0000 0000 		.zero	13
  30      0000 0000 
  30      0000 0000 
  30      00
  31               		.text
  32               	.global	nwkTxInit
  34               	nwkTxInit:
  35               	.LFB66:
  36               		.file 1 "../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c"
   1:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /**
   2:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * \file nwkTx.c
   3:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
   4:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * \brief Transmit routines implementation
   5:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
   6:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * Copyright (C) 2014 Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
   8:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  10:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  13:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  16:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  20:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  23:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  26:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  38:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  40:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  41:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  */
  42:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  43:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*
  44:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * Copyright (c) 2014, Atmel Corporation All rights reserved.
  45:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  *
  46:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  * Licensed under Atmel's Limited License Agreement --> EULA.txt
  47:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c ****  */
  48:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  49:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Includes ---------------------------------------------------------------*/
  50:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include <stdlib.h>
  51:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include <stdint.h>
  52:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include <stdbool.h>
  53:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include <string.h>
  54:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "phy.h"
  55:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "sysConfig.h"
  56:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "sysTimer.h"
  57:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwk.h"
  58:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkTx.h"
  59:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkFrame.h"
  60:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkRoute.h"
  61:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkCommand.h"
  62:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #include "nwkSecurity.h"
  63:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  64:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Definitions ------------------------------------------------------------*/
  65:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #define NWK_TX_ACK_WAIT_TIMER_INTERVAL    50 /* ms */
  66:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #define NWK_TX_DELAY_TIMER_INTERVAL       10 /* ms */
  67:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #define NWK_TX_DELAY_JITTER_MASK          0x07
  68:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  69:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Types ------------------------------------------------------------------*/
  70:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** enum {
  71:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_ENCRYPT    = 0x10,
  72:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_WAIT_DELAY = 0x11,
  73:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_DELAY      = 0x12,
  74:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_SEND       = 0x13,
  75:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_WAIT_CONF  = 0x14,
  76:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_SENT       = 0x15,
  77:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_WAIT_ACK   = 0x16,
  78:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NWK_TX_STATE_CONFIRM    = 0x17,
  79:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** };
  80:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  81:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Prototypes -------------------------------------------------------------*/
  82:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer);
  83:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static void nwkTxDelayTimerHandler(SYS_Timer_t *timer);
  84:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  85:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Variables --------------------------------------------------------------*/
  86:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static NwkFrame_t *nwkTxPhyActiveFrame;
  87:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static SYS_Timer_t nwkTxAckWaitTimer;
  88:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static SYS_Timer_t nwkTxDelayTimer;
  89:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  90:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*- Implementations --------------------------------------------------------*/
  91:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  92:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
  93:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *  @brief Initializes the Tx module
  94:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
  95:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxInit(void)
  96:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
  37               		.loc 1 96 0
  38               		.cfi_startproc
  39 0000 CF93      		push r28
  40               	.LCFI0:
  41               		.cfi_def_cfa_offset 3
  42               		.cfi_offset 28, -2
  43 0002 DF93      		push r29
  44               	.LCFI1:
  45               		.cfi_def_cfa_offset 4
  46               		.cfi_offset 29, -3
  47 0004 CDB7      		in r28,__SP_L__
  48 0006 DEB7      		in r29,__SP_H__
  49               	.LCFI2:
  50               		.cfi_def_cfa_register 28
  51               	/* prologue: function */
  52               	/* frame size = 0 */
  53               	/* stack size = 2 */
  54               	.L__stack_usage = 2
  97:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxPhyActiveFrame = NULL;
  55               		.loc 1 97 0
  56 0008 1092 0000 		sts nwkTxPhyActiveFrame+1,__zero_reg__
  57 000c 1092 0000 		sts nwkTxPhyActiveFrame,__zero_reg__
  98:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
  99:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxAckWaitTimer.interval = NWK_TX_ACK_WAIT_TIMER_INTERVAL;
  58               		.loc 1 99 0
  59 0010 82E3      		ldi r24,lo8(50)
  60 0012 90E0      		ldi r25,0
  61 0014 A0E0      		ldi r26,0
  62 0016 B0E0      		ldi r27,0
  63 0018 8093 0000 		sts nwkTxAckWaitTimer+6,r24
  64 001c 9093 0000 		sts nwkTxAckWaitTimer+6+1,r25
  65 0020 A093 0000 		sts nwkTxAckWaitTimer+6+2,r26
  66 0024 B093 0000 		sts nwkTxAckWaitTimer+6+3,r27
 100:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxAckWaitTimer.mode = SYS_TIMER_INTERVAL_MODE;
  67               		.loc 1 100 0
  68 0028 1092 0000 		sts nwkTxAckWaitTimer+10,__zero_reg__
 101:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxAckWaitTimer.handler = nwkTxAckWaitTimerHandler;
  69               		.loc 1 101 0
  70 002c 80E0      		ldi r24,lo8(gs(nwkTxAckWaitTimerHandler))
  71 002e 90E0      		ldi r25,hi8(gs(nwkTxAckWaitTimerHandler))
  72 0030 9093 0000 		sts nwkTxAckWaitTimer+11+1,r25
  73 0034 8093 0000 		sts nwkTxAckWaitTimer+11,r24
 102:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 103:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxDelayTimer.interval = NWK_TX_DELAY_TIMER_INTERVAL;
  74               		.loc 1 103 0
  75 0038 8AE0      		ldi r24,lo8(10)
  76 003a 90E0      		ldi r25,0
  77 003c A0E0      		ldi r26,0
  78 003e B0E0      		ldi r27,0
  79 0040 8093 0000 		sts nwkTxDelayTimer+6,r24
  80 0044 9093 0000 		sts nwkTxDelayTimer+6+1,r25
  81 0048 A093 0000 		sts nwkTxDelayTimer+6+2,r26
  82 004c B093 0000 		sts nwkTxDelayTimer+6+3,r27
 104:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxDelayTimer.mode = SYS_TIMER_INTERVAL_MODE;
  83               		.loc 1 104 0
  84 0050 1092 0000 		sts nwkTxDelayTimer+10,__zero_reg__
 105:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxDelayTimer.handler = nwkTxDelayTimerHandler;
  85               		.loc 1 105 0
  86 0054 80E0      		ldi r24,lo8(gs(nwkTxDelayTimerHandler))
  87 0056 90E0      		ldi r25,hi8(gs(nwkTxDelayTimerHandler))
  88 0058 9093 0000 		sts nwkTxDelayTimer+11+1,r25
  89 005c 8093 0000 		sts nwkTxDelayTimer+11,r24
 106:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
  90               		.loc 1 106 0
  91 0060 0000      		nop
  92               	/* epilogue start */
  93 0062 DF91      		pop r29
  94 0064 CF91      		pop r28
  95 0066 0895      		ret
  96               		.cfi_endproc
  97               	.LFE66:
  99               	.global	nwkTxBeaconFrame
 101               	nwkTxBeaconFrame:
 102               	.LFB67:
 107:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 108:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 109:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 110:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxBeaconFrame(NwkFrame_t *frame)
 111:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 103               		.loc 1 111 0
 104               		.cfi_startproc
 105 0068 CF93      		push r28
 106               	.LCFI3:
 107               		.cfi_def_cfa_offset 3
 108               		.cfi_offset 28, -2
 109 006a DF93      		push r29
 110               	.LCFI4:
 111               		.cfi_def_cfa_offset 4
 112               		.cfi_offset 29, -3
 113 006c 00D0      		rcall .
 114 006e 00D0      		rcall .
 115               	.LCFI5:
 116               		.cfi_def_cfa_offset 8
 117 0070 CDB7      		in r28,__SP_L__
 118 0072 DEB7      		in r29,__SP_H__
 119               	.LCFI6:
 120               		.cfi_def_cfa_register 28
 121               	/* prologue: function */
 122               	/* frame size = 4 */
 123               	/* stack size = 6 */
 124               	.L__stack_usage = 6
 125 0074 9C83      		std Y+4,r25
 126 0076 8B83      		std Y+3,r24
 112:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrameBeaconHeader_t *beacon = &frame->beacon;
 127               		.loc 1 112 0
 128 0078 8B81      		ldd r24,Y+3
 129 007a 9C81      		ldd r25,Y+4
 130 007c 0296      		adiw r24,2
 131 007e 9A83      		std Y+2,r25
 132 0080 8983      		std Y+1,r24
 113:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 114:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->state = NWK_TX_STATE_SEND;
 133               		.loc 1 114 0
 134 0082 8B81      		ldd r24,Y+3
 135 0084 9C81      		ldd r25,Y+4
 136 0086 23E1      		ldi r18,lo8(19)
 137 0088 FC01      		movw r30,r24
 138 008a 2083      		st Z,r18
 115:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.status = NWK_SUCCESS_STATUS;
 139               		.loc 1 115 0
 140 008c 8B81      		ldd r24,Y+3
 141 008e 9C81      		ldd r25,Y+4
 142 0090 8D57      		subi r24,125
 143 0092 9F4F      		sbci r25,-1
 144 0094 FC01      		movw r30,r24
 145 0096 1082      		st Z,__zero_reg__
 116:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.timeout = 0;
 146               		.loc 1 116 0
 147 0098 8B81      		ldd r24,Y+3
 148 009a 9C81      		ldd r25,Y+4
 149 009c 8C57      		subi r24,124
 150 009e 9F4F      		sbci r25,-1
 151 00a0 FC01      		movw r30,r24
 152 00a2 1182      		std Z+1,__zero_reg__
 153 00a4 1082      		st Z,__zero_reg__
 117:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 118:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macFcf = 0x8000;
 154               		.loc 1 118 0
 155 00a6 8981      		ldd r24,Y+1
 156 00a8 9A81      		ldd r25,Y+2
 157 00aa 20E0      		ldi r18,0
 158 00ac 30E8      		ldi r19,lo8(-128)
 159 00ae FC01      		movw r30,r24
 160 00b0 3183      		std Z+1,r19
 161 00b2 2083      		st Z,r18
 119:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSeq = ++nwkIb.macSeqNum;
 162               		.loc 1 119 0
 163 00b4 8091 0000 		lds r24,nwkIb+5
 164 00b8 8F5F      		subi r24,lo8(-(1))
 165 00ba 8093 0000 		sts nwkIb+5,r24
 166 00be 2091 0000 		lds r18,nwkIb+5
 167 00c2 8981      		ldd r24,Y+1
 168 00c4 9A81      		ldd r25,Y+2
 169 00c6 FC01      		movw r30,r24
 170 00c8 2283      		std Z+2,r18
 120:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSrcPanId = nwkIb.panId;
 171               		.loc 1 120 0
 172 00ca 2091 0000 		lds r18,nwkIb+2
 173 00ce 3091 0000 		lds r19,nwkIb+2+1
 174 00d2 8981      		ldd r24,Y+1
 175 00d4 9A81      		ldd r25,Y+2
 176 00d6 FC01      		movw r30,r24
 177 00d8 3483      		std Z+4,r19
 178 00da 2383      		std Z+3,r18
 121:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSrcAddr = nwkIb.addr;
 179               		.loc 1 121 0
 180 00dc 2091 0000 		lds r18,nwkIb
 181 00e0 3091 0000 		lds r19,nwkIb+1
 182 00e4 8981      		ldd r24,Y+1
 183 00e6 9A81      		ldd r25,Y+2
 184 00e8 FC01      		movw r30,r24
 185 00ea 3683      		std Z+6,r19
 186 00ec 2583      		std Z+5,r18
 122:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 187               		.loc 1 122 0
 188 00ee 0000      		nop
 189               	/* epilogue start */
 190 00f0 0F90      		pop __tmp_reg__
 191 00f2 0F90      		pop __tmp_reg__
 192 00f4 0F90      		pop __tmp_reg__
 193 00f6 0F90      		pop __tmp_reg__
 194 00f8 DF91      		pop r29
 195 00fa CF91      		pop r28
 196 00fc 0895      		ret
 197               		.cfi_endproc
 198               	.LFE67:
 200               	.global	nwkTxBeaconFrameLLDN
 202               	nwkTxBeaconFrameLLDN:
 203               	.LFB68:
 123:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 124:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 125:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 126:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 127:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxBeaconFrameLLDN(NwkFrame_t *frame)
 128:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 204               		.loc 1 128 0
 205               		.cfi_startproc
 206 00fe CF93      		push r28
 207               	.LCFI7:
 208               		.cfi_def_cfa_offset 3
 209               		.cfi_offset 28, -2
 210 0100 DF93      		push r29
 211               	.LCFI8:
 212               		.cfi_def_cfa_offset 4
 213               		.cfi_offset 29, -3
 214 0102 00D0      		rcall .
 215 0104 00D0      		rcall .
 216               	.LCFI9:
 217               		.cfi_def_cfa_offset 8
 218 0106 CDB7      		in r28,__SP_L__
 219 0108 DEB7      		in r29,__SP_H__
 220               	.LCFI10:
 221               		.cfi_def_cfa_register 28
 222               	/* prologue: function */
 223               	/* frame size = 4 */
 224               	/* stack size = 6 */
 225               	.L__stack_usage = 6
 226 010a 9C83      		std Y+4,r25
 227 010c 8B83      		std Y+3,r24
 129:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrameBeaconHeaderLLDN_t *beacon = &frame->LLbeacon;
 228               		.loc 1 129 0
 229 010e 8B81      		ldd r24,Y+3
 230 0110 9C81      		ldd r25,Y+4
 231 0112 0296      		adiw r24,2
 232 0114 9A83      		std Y+2,r25
 233 0116 8983      		std Y+1,r24
 130:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->state = NWK_TX_STATE_SEND;
 234               		.loc 1 130 0
 235 0118 8B81      		ldd r24,Y+3
 236 011a 9C81      		ldd r25,Y+4
 237 011c 23E1      		ldi r18,lo8(19)
 238 011e FC01      		movw r30,r24
 239 0120 2083      		st Z,r18
 131:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.status = NWK_SUCCESS_STATUS;
 240               		.loc 1 131 0
 241 0122 8B81      		ldd r24,Y+3
 242 0124 9C81      		ldd r25,Y+4
 243 0126 8D57      		subi r24,125
 244 0128 9F4F      		sbci r25,-1
 245 012a FC01      		movw r30,r24
 246 012c 1082      		st Z,__zero_reg__
 132:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.timeout = 0;
 247               		.loc 1 132 0
 248 012e 8B81      		ldd r24,Y+3
 249 0130 9C81      		ldd r25,Y+4
 250 0132 8C57      		subi r24,124
 251 0134 9F4F      		sbci r25,-1
 252 0136 FC01      		movw r30,r24
 253 0138 1182      		std Z+1,__zero_reg__
 254 013a 1082      		st Z,__zero_reg__
 133:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 134:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.FrameType				= 0b100; 	// LLDN type
 135:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.SecurityEnabled 	= 0b1;	// 1 to enable security header and sequence number
 136:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.FrameVersion			= 0b0;	// zero to indicate compatible with IEEE Std 802.15.4.
 137:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.ackRequest				= 0b0;	// zero to indicade no ACK
 138:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.SubFrameType			= 0b00; // Subtype = LL-Beacon
 139:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macFcf = 0x0c;
 255               		.loc 1 139 0
 256 013c 8981      		ldd r24,Y+1
 257 013e 9A81      		ldd r25,Y+2
 258 0140 2CE0      		ldi r18,lo8(12)
 259 0142 FC01      		movw r30,r24
 260 0144 2083      		st Z,r18
 140:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSeqNumber = ++nwkIb.macSeqNum;
 261               		.loc 1 140 0
 262 0146 8091 0000 		lds r24,nwkIb+5
 263 014a 8F5F      		subi r24,lo8(-(1))
 264 014c 8093 0000 		sts nwkIb+5,r24
 265 0150 2091 0000 		lds r18,nwkIb+5
 266 0154 8981      		ldd r24,Y+1
 267 0156 9A81      		ldd r25,Y+2
 268 0158 FC01      		movw r30,r24
 269 015a 2183      		std Z+1,r18
 141:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 142:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// Auxiliarty Security is not fully implemented, it is only enabled so Sequence Number is present 
 143:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSecHeader.secLevel	= 0b000;
 270               		.loc 1 143 0
 271 015c 8981      		ldd r24,Y+1
 272 015e 9A81      		ldd r25,Y+2
 273 0160 FC01      		movw r30,r24
 274 0162 2281      		ldd r18,Z+2
 275 0164 287F      		andi r18,lo8(-8)
 276 0166 FC01      		movw r30,r24
 277 0168 2283      		std Z+2,r18
 144:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSecHeader.KeyId		= 0b00;
 278               		.loc 1 144 0
 279 016a 8981      		ldd r24,Y+1
 280 016c 9A81      		ldd r25,Y+2
 281 016e FC01      		movw r30,r24
 282 0170 2281      		ldd r18,Z+2
 283 0172 277E      		andi r18,lo8(-25)
 284 0174 FC01      		movw r30,r24
 285 0176 2283      		std Z+2,r18
 145:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSecHeader.countSup	= 0b0;
 286               		.loc 1 145 0
 287 0178 8981      		ldd r24,Y+1
 288 017a 9A81      		ldd r25,Y+2
 289 017c FC01      		movw r30,r24
 290 017e 2281      		ldd r18,Z+2
 291 0180 2F7D      		andi r18,lo8(-33)
 292 0182 FC01      		movw r30,r24
 293 0184 2283      		std Z+2,r18
 146:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	beacon->macSecHeader.countSize= 0b0;
 294               		.loc 1 146 0
 295 0186 8981      		ldd r24,Y+1
 296 0188 9A81      		ldd r25,Y+2
 297 018a FC01      		movw r30,r24
 298 018c 2281      		ldd r18,Z+2
 299 018e 2F7B      		andi r18,lo8(-65)
 300 0190 FC01      		movw r30,r24
 301 0192 2283      		std Z+2,r18
 147:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 302               		.loc 1 147 0
 303 0194 0000      		nop
 304               	/* epilogue start */
 305 0196 0F90      		pop __tmp_reg__
 306 0198 0F90      		pop __tmp_reg__
 307 019a 0F90      		pop __tmp_reg__
 308 019c 0F90      		pop __tmp_reg__
 309 019e DF91      		pop r29
 310 01a0 CF91      		pop r28
 311 01a2 0895      		ret
 312               		.cfi_endproc
 313               	.LFE68:
 315               	.global	nwkTxMacCommandFrameLLDN
 317               	nwkTxMacCommandFrameLLDN:
 318               	.LFB69:
 148:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 149:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxMacCommandFrameLLDN(NwkFrame_t *frame, uint16_t subtype)
 150:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 319               		.loc 1 150 0
 320               		.cfi_startproc
 321 01a4 CF93      		push r28
 322               	.LCFI11:
 323               		.cfi_def_cfa_offset 3
 324               		.cfi_offset 28, -2
 325 01a6 DF93      		push r29
 326               	.LCFI12:
 327               		.cfi_def_cfa_offset 4
 328               		.cfi_offset 29, -3
 329 01a8 00D0      		rcall .
 330 01aa 00D0      		rcall .
 331 01ac 00D0      		rcall .
 332               	.LCFI13:
 333               		.cfi_def_cfa_offset 10
 334 01ae CDB7      		in r28,__SP_L__
 335 01b0 DEB7      		in r29,__SP_H__
 336               	.LCFI14:
 337               		.cfi_def_cfa_register 28
 338               	/* prologue: function */
 339               	/* frame size = 6 */
 340               	/* stack size = 8 */
 341               	.L__stack_usage = 8
 342 01b2 9C83      		std Y+4,r25
 343 01b4 8B83      		std Y+3,r24
 344 01b6 7E83      		std Y+6,r23
 345 01b8 6D83      		std Y+5,r22
 151:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrameGeneralHeaderLLDN_t *mac_command = &frame->LLgeneral;
 346               		.loc 1 151 0
 347 01ba 8B81      		ldd r24,Y+3
 348 01bc 9C81      		ldd r25,Y+4
 349 01be 0296      		adiw r24,2
 350 01c0 9A83      		std Y+2,r25
 351 01c2 8983      		std Y+1,r24
 152:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->state = NWK_TX_STATE_SEND;
 352               		.loc 1 152 0
 353 01c4 8B81      		ldd r24,Y+3
 354 01c6 9C81      		ldd r25,Y+4
 355 01c8 23E1      		ldi r18,lo8(19)
 356 01ca FC01      		movw r30,r24
 357 01cc 2083      		st Z,r18
 153:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.status = NWK_SUCCESS_STATUS;
 358               		.loc 1 153 0
 359 01ce 8B81      		ldd r24,Y+3
 360 01d0 9C81      		ldd r25,Y+4
 361 01d2 8D57      		subi r24,125
 362 01d4 9F4F      		sbci r25,-1
 363 01d6 FC01      		movw r30,r24
 364 01d8 1082      		st Z,__zero_reg__
 154:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.timeout = 0;
 365               		.loc 1 154 0
 366 01da 8B81      		ldd r24,Y+3
 367 01dc 9C81      		ldd r25,Y+4
 368 01de 8C57      		subi r24,124
 369 01e0 9F4F      		sbci r25,-1
 370 01e2 FC01      		movw r30,r24
 371 01e4 1182      		std Z+1,__zero_reg__
 372 01e6 1082      		st Z,__zero_reg__
 155:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 156:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.FrameType					= 0b100; // LLDN type
 157:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.SecurityEnabled 	= 0b1;	// 1 to enable security header and sequence number
 158:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.FrameVersion			= 0b0;	// zero to indicate compatible with IEEE Std 802.15.4.
 159:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.ackRequest				= 0b0;	// zero to indicade no ACK
 160:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// beacon->macFcf.SubFrameType			= 0b11; // Subtype = LL-MAC command
 161:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (subtype & NWK_OPT_MAC_COMMAND) 		mac_command->macFcf = 0xcc; //LL-MAC Command
 373               		.loc 1 161 0
 374 01e8 8D81      		ldd r24,Y+5
 375 01ea 9E81      		ldd r25,Y+6
 376 01ec 9923      		tst r25
 377 01ee 04F4      		brge .L5
 378               		.loc 1 161 0 is_stmt 0 discriminator 1
 379 01f0 8981      		ldd r24,Y+1
 380 01f2 9A81      		ldd r25,Y+2
 381 01f4 2CEC      		ldi r18,lo8(-52)
 382 01f6 FC01      		movw r30,r24
 383 01f8 2083      		st Z,r18
 384 01fa 00C0      		rjmp .L6
 385               	.L5:
 162:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	else if (subtype & NWK_OPT_LLDN_DATA)	mac_command->macFcf = 0x4c; //LL-Data
 386               		.loc 1 162 0 is_stmt 1
 387 01fc 8D81      		ldd r24,Y+5
 388 01fe 9E81      		ldd r25,Y+6
 389 0200 8827      		clr r24
 390 0202 9072      		andi r25,32
 391 0204 892B      		or r24,r25
 392 0206 01F0      		breq .L7
 393               		.loc 1 162 0 is_stmt 0 discriminator 1
 394 0208 8981      		ldd r24,Y+1
 395 020a 9A81      		ldd r25,Y+2
 396 020c 2CE4      		ldi r18,lo8(76)
 397 020e FC01      		movw r30,r24
 398 0210 2083      		st Z,r18
 399 0212 00C0      		rjmp .L6
 400               	.L7:
 163:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	else if (subtype & NWK_OPT_LLDN_ACK) 	mac_command->macFcf = 0x8c;	//LL-Acknowledgment
 401               		.loc 1 163 0 is_stmt 1
 402 0214 8D81      		ldd r24,Y+5
 403 0216 9E81      		ldd r25,Y+6
 404 0218 8827      		clr r24
 405 021a 9074      		andi r25,64
 406 021c 892B      		or r24,r25
 407 021e 01F0      		breq .L6
 408               		.loc 1 163 0 is_stmt 0 discriminator 1
 409 0220 8981      		ldd r24,Y+1
 410 0222 9A81      		ldd r25,Y+2
 411 0224 2CE8      		ldi r18,lo8(-116)
 412 0226 FC01      		movw r30,r24
 413 0228 2083      		st Z,r18
 414               	.L6:
 164:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	mac_command->macSeqNumber = ++nwkIb.macSeqNum;
 415               		.loc 1 164 0 is_stmt 1
 416 022a 8091 0000 		lds r24,nwkIb+5
 417 022e 8F5F      		subi r24,lo8(-(1))
 418 0230 8093 0000 		sts nwkIb+5,r24
 419 0234 2091 0000 		lds r18,nwkIb+5
 420 0238 8981      		ldd r24,Y+1
 421 023a 9A81      		ldd r25,Y+2
 422 023c FC01      		movw r30,r24
 423 023e 2183      		std Z+1,r18
 165:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 166:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	// Auxiliarty Security is not fully implemented, it is only enabled so Sequence Number is present 
 167:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	mac_command->macSecHeader.secLevel	= 0b000;
 424               		.loc 1 167 0
 425 0240 8981      		ldd r24,Y+1
 426 0242 9A81      		ldd r25,Y+2
 427 0244 FC01      		movw r30,r24
 428 0246 2281      		ldd r18,Z+2
 429 0248 287F      		andi r18,lo8(-8)
 430 024a FC01      		movw r30,r24
 431 024c 2283      		std Z+2,r18
 168:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	mac_command->macSecHeader.KeyId		= 0b00;
 432               		.loc 1 168 0
 433 024e 8981      		ldd r24,Y+1
 434 0250 9A81      		ldd r25,Y+2
 435 0252 FC01      		movw r30,r24
 436 0254 2281      		ldd r18,Z+2
 437 0256 277E      		andi r18,lo8(-25)
 438 0258 FC01      		movw r30,r24
 439 025a 2283      		std Z+2,r18
 169:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	mac_command->macSecHeader.countSup	= 0b0;
 440               		.loc 1 169 0
 441 025c 8981      		ldd r24,Y+1
 442 025e 9A81      		ldd r25,Y+2
 443 0260 FC01      		movw r30,r24
 444 0262 2281      		ldd r18,Z+2
 445 0264 2F7D      		andi r18,lo8(-33)
 446 0266 FC01      		movw r30,r24
 447 0268 2283      		std Z+2,r18
 170:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	mac_command->macSecHeader.countSize= 0b0;
 448               		.loc 1 170 0
 449 026a 8981      		ldd r24,Y+1
 450 026c 9A81      		ldd r25,Y+2
 451 026e FC01      		movw r30,r24
 452 0270 2281      		ldd r18,Z+2
 453 0272 2F7B      		andi r18,lo8(-65)
 454 0274 FC01      		movw r30,r24
 455 0276 2283      		std Z+2,r18
 171:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 456               		.loc 1 171 0
 457 0278 0000      		nop
 458               	/* epilogue start */
 459 027a 2696      		adiw r28,6
 460 027c 0FB6      		in __tmp_reg__,__SREG__
 461 027e F894      		cli
 462 0280 DEBF      		out __SP_H__,r29
 463 0282 0FBE      		out __SREG__,__tmp_reg__
 464 0284 CDBF      		out __SP_L__,r28
 465 0286 DF91      		pop r29
 466 0288 CF91      		pop r28
 467 028a 0895      		ret
 468               		.cfi_endproc
 469               	.LFE69:
 471               	.global	nwkTxFrame
 473               	nwkTxFrame:
 474               	.LFB70:
 172:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 173:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 174:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 175:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 176:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxFrame(NwkFrame_t *frame)
 177:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 475               		.loc 1 177 0
 476               		.cfi_startproc
 477 028c CF93      		push r28
 478               	.LCFI15:
 479               		.cfi_def_cfa_offset 3
 480               		.cfi_offset 28, -2
 481 028e DF93      		push r29
 482               	.LCFI16:
 483               		.cfi_def_cfa_offset 4
 484               		.cfi_offset 29, -3
 485 0290 00D0      		rcall .
 486 0292 00D0      		rcall .
 487               	.LCFI17:
 488               		.cfi_def_cfa_offset 8
 489 0294 CDB7      		in r28,__SP_L__
 490 0296 DEB7      		in r29,__SP_H__
 491               	.LCFI18:
 492               		.cfi_def_cfa_register 28
 493               	/* prologue: function */
 494               	/* frame size = 4 */
 495               	/* stack size = 6 */
 496               	.L__stack_usage = 6
 497 0298 9C83      		std Y+4,r25
 498 029a 8B83      		std Y+3,r24
 178:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrameHeader_t *header = &frame->header;
 499               		.loc 1 178 0
 500 029c 8B81      		ldd r24,Y+3
 501 029e 9C81      		ldd r25,Y+4
 502 02a0 0296      		adiw r24,2
 503 02a2 9A83      		std Y+2,r25
 504 02a4 8983      		std Y+1,r24
 179:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 180:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (frame->tx.control & NWK_TX_CONTROL_ROUTING) {
 505               		.loc 1 180 0
 506 02a6 8B81      		ldd r24,Y+3
 507 02a8 9C81      		ldd r25,Y+4
 508 02aa 8A57      		subi r24,122
 509 02ac 9F4F      		sbci r25,-1
 510 02ae FC01      		movw r30,r24
 511 02b0 8081      		ld r24,Z
 512 02b2 882F      		mov r24,r24
 513 02b4 90E0      		ldi r25,0
 514 02b6 8270      		andi r24,2
 515 02b8 9927      		clr r25
 516 02ba 892B      		or r24,r25
 517 02bc 01F0      		breq .L9
 181:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->state = NWK_TX_STATE_DELAY;
 518               		.loc 1 181 0
 519 02be 8B81      		ldd r24,Y+3
 520 02c0 9C81      		ldd r25,Y+4
 521 02c2 22E1      		ldi r18,lo8(18)
 522 02c4 FC01      		movw r30,r24
 523 02c6 2083      		st Z,r18
 524 02c8 00C0      		rjmp .L10
 525               	.L9:
 182:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		} else {
 183:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_SECURITY
 184:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (header->nwkFcf.security) {
 185:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			frame->state = NWK_TX_STATE_ENCRYPT;
 186:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		} else
 187:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 188:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->state = NWK_TX_STATE_DELAY;
 526               		.loc 1 188 0
 527 02ca 8B81      		ldd r24,Y+3
 528 02cc 9C81      		ldd r25,Y+4
 529 02ce 22E1      		ldi r18,lo8(18)
 530 02d0 FC01      		movw r30,r24
 531 02d2 2083      		st Z,r18
 532               	.L10:
 189:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 190:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 191:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.status = NWK_SUCCESS_STATUS;
 533               		.loc 1 191 0
 534 02d4 8B81      		ldd r24,Y+3
 535 02d6 9C81      		ldd r25,Y+4
 536 02d8 8D57      		subi r24,125
 537 02da 9F4F      		sbci r25,-1
 538 02dc FC01      		movw r30,r24
 539 02de 1082      		st Z,__zero_reg__
 192:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 193:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID) {
 540               		.loc 1 193 0
 541 02e0 8B81      		ldd r24,Y+3
 542 02e2 9C81      		ldd r25,Y+4
 543 02e4 8A57      		subi r24,122
 544 02e6 9F4F      		sbci r25,-1
 545 02e8 FC01      		movw r30,r24
 546 02ea 8081      		ld r24,Z
 547 02ec 882F      		mov r24,r24
 548 02ee 90E0      		ldi r25,0
 549 02f0 8170      		andi r24,1
 550 02f2 9927      		clr r25
 551 02f4 892B      		or r24,r25
 552 02f6 01F0      		breq .L11
 194:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		header->macDstPanId = NWK_BROADCAST_PANID;
 553               		.loc 1 194 0
 554 02f8 8981      		ldd r24,Y+1
 555 02fa 9A81      		ldd r25,Y+2
 556 02fc 2FEF      		ldi r18,lo8(-1)
 557 02fe 3FEF      		ldi r19,lo8(-1)
 558 0300 FC01      		movw r30,r24
 559 0302 3483      		std Z+4,r19
 560 0304 2383      		std Z+3,r18
 561 0306 00C0      		rjmp .L12
 562               	.L11:
 195:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		} else {
 196:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		header->macDstPanId = nwkIb.panId;
 563               		.loc 1 196 0
 564 0308 2091 0000 		lds r18,nwkIb+2
 565 030c 3091 0000 		lds r19,nwkIb+2+1
 566 0310 8981      		ldd r24,Y+1
 567 0312 9A81      		ldd r25,Y+2
 568 0314 FC01      		movw r30,r24
 569 0316 3483      		std Z+4,r19
 570 0318 2383      		std Z+3,r18
 571               	.L12:
 197:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 198:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 199:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_ROUTING
 200:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (0 == (frame->tx.control & NWK_TX_CONTROL_DIRECT_LINK) &&
 201:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	0 ==
 202:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	(frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID)) {
 203:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		nwkRoutePrepareTx(frame);
 204:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	} else
 205:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 206:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 207:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	header->macDstAddr = header->nwkDstAddr;
 572               		.loc 1 207 0
 573 031a 8981      		ldd r24,Y+1
 574 031c 9A81      		ldd r25,Y+2
 575 031e FC01      		movw r30,r24
 576 0320 2585      		ldd r18,Z+13
 577 0322 3685      		ldd r19,Z+14
 578 0324 8981      		ldd r24,Y+1
 579 0326 9A81      		ldd r25,Y+2
 580 0328 FC01      		movw r30,r24
 581 032a 3683      		std Z+6,r19
 582 032c 2583      		std Z+5,r18
 208:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	header->macSrcAddr = nwkIb.addr;
 583               		.loc 1 208 0
 584 032e 2091 0000 		lds r18,nwkIb
 585 0332 3091 0000 		lds r19,nwkIb+1
 586 0336 8981      		ldd r24,Y+1
 587 0338 9A81      		ldd r25,Y+2
 588 033a FC01      		movw r30,r24
 589 033c 3087      		std Z+8,r19
 590 033e 2783      		std Z+7,r18
 209:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	header->macSeq = ++nwkIb.macSeqNum;
 591               		.loc 1 209 0
 592 0340 8091 0000 		lds r24,nwkIb+5
 593 0344 8F5F      		subi r24,lo8(-(1))
 594 0346 8093 0000 		sts nwkIb+5,r24
 595 034a 2091 0000 		lds r18,nwkIb+5
 596 034e 8981      		ldd r24,Y+1
 597 0350 9A81      		ldd r25,Y+2
 598 0352 FC01      		movw r30,r24
 599 0354 2283      		std Z+2,r18
 210:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 211:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (NWK_BROADCAST_ADDR == header->macDstAddr) {
 600               		.loc 1 211 0
 601 0356 8981      		ldd r24,Y+1
 602 0358 9A81      		ldd r25,Y+2
 603 035a FC01      		movw r30,r24
 604 035c 8581      		ldd r24,Z+5
 605 035e 9681      		ldd r25,Z+6
 606 0360 0196      		adiw r24,1
 607 0362 01F4      		brne .L13
 212:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		header->macFcf = 0x8841;
 608               		.loc 1 212 0
 609 0364 8981      		ldd r24,Y+1
 610 0366 9A81      		ldd r25,Y+2
 611 0368 21E4      		ldi r18,lo8(65)
 612 036a 38E8      		ldi r19,lo8(-120)
 613 036c FC01      		movw r30,r24
 614 036e 3183      		std Z+1,r19
 615 0370 2083      		st Z,r18
 213:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->tx.timeout = (rand() & NWK_TX_DELAY_JITTER_MASK) + 1;
 616               		.loc 1 213 0
 617 0372 0E94 0000 		call rand
 618 0376 8770      		andi r24,7
 619 0378 9927      		clr r25
 620 037a 0196      		adiw r24,1
 621 037c 9C01      		movw r18,r24
 622 037e 8B81      		ldd r24,Y+3
 623 0380 9C81      		ldd r25,Y+4
 624 0382 8C57      		subi r24,124
 625 0384 9F4F      		sbci r25,-1
 626 0386 FC01      		movw r30,r24
 627 0388 3183      		std Z+1,r19
 628 038a 2083      		st Z,r18
 214:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		} else {
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		header->macFcf = 0x8841;
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->tx.timeout = 0;
 217:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 218:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 629               		.loc 1 218 0
 630 038c 00C0      		rjmp .L15
 631               	.L13:
 215:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		frame->tx.timeout = 0;
 632               		.loc 1 215 0
 633 038e 8981      		ldd r24,Y+1
 634 0390 9A81      		ldd r25,Y+2
 635 0392 21E4      		ldi r18,lo8(65)
 636 0394 38E8      		ldi r19,lo8(-120)
 637 0396 FC01      		movw r30,r24
 638 0398 3183      		std Z+1,r19
 639 039a 2083      		st Z,r18
 216:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 640               		.loc 1 216 0
 641 039c 8B81      		ldd r24,Y+3
 642 039e 9C81      		ldd r25,Y+4
 643 03a0 8C57      		subi r24,124
 644 03a2 9F4F      		sbci r25,-1
 645 03a4 FC01      		movw r30,r24
 646 03a6 1182      		std Z+1,__zero_reg__
 647 03a8 1082      		st Z,__zero_reg__
 648               	.L15:
 649               		.loc 1 218 0
 650 03aa 0000      		nop
 651               	/* epilogue start */
 652 03ac 0F90      		pop __tmp_reg__
 653 03ae 0F90      		pop __tmp_reg__
 654 03b0 0F90      		pop __tmp_reg__
 655 03b2 0F90      		pop __tmp_reg__
 656 03b4 DF91      		pop r29
 657 03b6 CF91      		pop r28
 658 03b8 0895      		ret
 659               		.cfi_endproc
 660               	.LFE70:
 662               	.global	nwkTxBroadcastFrame
 664               	nwkTxBroadcastFrame:
 665               	.LFB71:
 219:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 220:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 221:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 222:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxBroadcastFrame(NwkFrame_t *frame)
 223:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 666               		.loc 1 223 0
 667               		.cfi_startproc
 668 03ba CF93      		push r28
 669               	.LCFI19:
 670               		.cfi_def_cfa_offset 3
 671               		.cfi_offset 28, -2
 672 03bc DF93      		push r29
 673               	.LCFI20:
 674               		.cfi_def_cfa_offset 4
 675               		.cfi_offset 29, -3
 676 03be 00D0      		rcall .
 677 03c0 00D0      		rcall .
 678               	.LCFI21:
 679               		.cfi_def_cfa_offset 8
 680 03c2 CDB7      		in r28,__SP_L__
 681 03c4 DEB7      		in r29,__SP_H__
 682               	.LCFI22:
 683               		.cfi_def_cfa_register 28
 684               	/* prologue: function */
 685               	/* frame size = 4 */
 686               	/* stack size = 6 */
 687               	.L__stack_usage = 6
 688 03c6 9C83      		std Y+4,r25
 689 03c8 8B83      		std Y+3,r24
 224:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *newFrame;
 225:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 226:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (NULL == (newFrame = nwkFrameAlloc())) {
 690               		.loc 1 226 0
 691 03ca 0E94 0000 		call nwkFrameAlloc
 692 03ce 9A83      		std Y+2,r25
 693 03d0 8983      		std Y+1,r24
 694 03d2 8981      		ldd r24,Y+1
 695 03d4 9A81      		ldd r25,Y+2
 696 03d6 892B      		or r24,r25
 697 03d8 01F4      		brne .+2
 698 03da 00C0      		rjmp .L19
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return;
 228:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 229:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 230:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->payload += sizeof(NwkFrameHeader_t);
 699               		.loc 1 230 0
 700 03dc 8981      		ldd r24,Y+1
 701 03de 9A81      		ldd r25,Y+2
 702 03e0 8F57      		subi r24,127
 703 03e2 9F4F      		sbci r25,-1
 704 03e4 FC01      		movw r30,r24
 705 03e6 8081      		ld r24,Z
 706 03e8 9181      		ldd r25,Z+1
 707 03ea 9C01      		movw r18,r24
 708 03ec 205F      		subi r18,-16
 709 03ee 3F4F      		sbci r19,-1
 710 03f0 8981      		ldd r24,Y+1
 711 03f2 9A81      		ldd r25,Y+2
 712 03f4 8F57      		subi r24,127
 713 03f6 9F4F      		sbci r25,-1
 714 03f8 FC01      		movw r30,r24
 715 03fa 3183      		std Z+1,r19
 716 03fc 2083      		st Z,r18
 231:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 232:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->state = NWK_TX_STATE_DELAY;
 717               		.loc 1 232 0
 718 03fe 8981      		ldd r24,Y+1
 719 0400 9A81      		ldd r25,Y+2
 720 0402 22E1      		ldi r18,lo8(18)
 721 0404 FC01      		movw r30,r24
 722 0406 2083      		st Z,r18
 233:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->size = frame->size;
 723               		.loc 1 233 0
 724 0408 8B81      		ldd r24,Y+3
 725 040a 9C81      		ldd r25,Y+4
 726 040c FC01      		movw r30,r24
 727 040e 2181      		ldd r18,Z+1
 728 0410 8981      		ldd r24,Y+1
 729 0412 9A81      		ldd r25,Y+2
 730 0414 FC01      		movw r30,r24
 731 0416 2183      		std Z+1,r18
 234:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->tx.status = NWK_SUCCESS_STATUS;
 732               		.loc 1 234 0
 733 0418 8981      		ldd r24,Y+1
 734 041a 9A81      		ldd r25,Y+2
 735 041c 8D57      		subi r24,125
 736 041e 9F4F      		sbci r25,-1
 737 0420 FC01      		movw r30,r24
 738 0422 1082      		st Z,__zero_reg__
 235:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->tx.timeout = (rand() & NWK_TX_DELAY_JITTER_MASK) + 1;
 739               		.loc 1 235 0
 740 0424 0E94 0000 		call rand
 741 0428 8770      		andi r24,7
 742 042a 9927      		clr r25
 743 042c 0196      		adiw r24,1
 744 042e 9C01      		movw r18,r24
 745 0430 8981      		ldd r24,Y+1
 746 0432 9A81      		ldd r25,Y+2
 747 0434 8C57      		subi r24,124
 748 0436 9F4F      		sbci r25,-1
 749 0438 FC01      		movw r30,r24
 750 043a 3183      		std Z+1,r19
 751 043c 2083      		st Z,r18
 236:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->tx.confirm = NULL;
 752               		.loc 1 236 0
 753 043e 8981      		ldd r24,Y+1
 754 0440 9A81      		ldd r25,Y+2
 755 0442 8957      		subi r24,121
 756 0444 9F4F      		sbci r25,-1
 757 0446 FC01      		movw r30,r24
 758 0448 1182      		std Z+1,__zero_reg__
 759 044a 1082      		st Z,__zero_reg__
 237:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	memcpy(newFrame->data, frame->data, frame->size);
 760               		.loc 1 237 0
 761 044c 8B81      		ldd r24,Y+3
 762 044e 9C81      		ldd r25,Y+4
 763 0450 FC01      		movw r30,r24
 764 0452 8181      		ldd r24,Z+1
 765 0454 482F      		mov r20,r24
 766 0456 50E0      		ldi r21,0
 767 0458 8B81      		ldd r24,Y+3
 768 045a 9C81      		ldd r25,Y+4
 769 045c 9C01      		movw r18,r24
 770 045e 2E5F      		subi r18,-2
 771 0460 3F4F      		sbci r19,-1
 772 0462 8981      		ldd r24,Y+1
 773 0464 9A81      		ldd r25,Y+2
 774 0466 0296      		adiw r24,2
 775 0468 B901      		movw r22,r18
 776 046a 0E94 0000 		call memcpy
 238:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 239:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macFcf = 0x8841;
 777               		.loc 1 239 0
 778 046e 8981      		ldd r24,Y+1
 779 0470 9A81      		ldd r25,Y+2
 780 0472 21E4      		ldi r18,lo8(65)
 781 0474 38E8      		ldi r19,lo8(-120)
 782 0476 FC01      		movw r30,r24
 783 0478 3383      		std Z+3,r19
 784 047a 2283      		std Z+2,r18
 240:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macDstAddr = NWK_BROADCAST_ADDR;
 785               		.loc 1 240 0
 786 047c 8981      		ldd r24,Y+1
 787 047e 9A81      		ldd r25,Y+2
 788 0480 2FEF      		ldi r18,lo8(-1)
 789 0482 3FEF      		ldi r19,lo8(-1)
 790 0484 FC01      		movw r30,r24
 791 0486 3087      		std Z+8,r19
 792 0488 2783      		std Z+7,r18
 241:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macDstPanId = frame->header.macDstPanId;
 793               		.loc 1 241 0
 794 048a 8B81      		ldd r24,Y+3
 795 048c 9C81      		ldd r25,Y+4
 796 048e FC01      		movw r30,r24
 797 0490 2581      		ldd r18,Z+5
 798 0492 3681      		ldd r19,Z+6
 799 0494 8981      		ldd r24,Y+1
 800 0496 9A81      		ldd r25,Y+2
 801 0498 FC01      		movw r30,r24
 802 049a 3683      		std Z+6,r19
 803 049c 2583      		std Z+5,r18
 242:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macSrcAddr = nwkIb.addr;
 804               		.loc 1 242 0
 805 049e 2091 0000 		lds r18,nwkIb
 806 04a2 3091 0000 		lds r19,nwkIb+1
 807 04a6 8981      		ldd r24,Y+1
 808 04a8 9A81      		ldd r25,Y+2
 809 04aa FC01      		movw r30,r24
 810 04ac 3287      		std Z+10,r19
 811 04ae 2187      		std Z+9,r18
 243:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	newFrame->header.macSeq = ++nwkIb.macSeqNum;
 812               		.loc 1 243 0
 813 04b0 8091 0000 		lds r24,nwkIb+5
 814 04b4 8F5F      		subi r24,lo8(-(1))
 815 04b6 8093 0000 		sts nwkIb+5,r24
 816 04ba 2091 0000 		lds r18,nwkIb+5
 817 04be 8981      		ldd r24,Y+1
 818 04c0 9A81      		ldd r25,Y+2
 819 04c2 FC01      		movw r30,r24
 820 04c4 2483      		std Z+4,r18
 821 04c6 00C0      		rjmp .L16
 822               	.L19:
 227:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 823               		.loc 1 227 0
 824 04c8 0000      		nop
 825               	.L16:
 826               	/* epilogue start */
 244:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 827               		.loc 1 244 0
 828 04ca 0F90      		pop __tmp_reg__
 829 04cc 0F90      		pop __tmp_reg__
 830 04ce 0F90      		pop __tmp_reg__
 831 04d0 0F90      		pop __tmp_reg__
 832 04d2 DF91      		pop r29
 833 04d4 CF91      		pop r28
 834 04d6 0895      		ret
 835               		.cfi_endproc
 836               	.LFE71:
 838               	.global	nwkTxAckReceived
 840               	nwkTxAckReceived:
 841               	.LFB72:
 245:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 246:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 247:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 248:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** bool nwkTxAckReceived(NWK_DataInd_t *ind)
 249:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 842               		.loc 1 249 0
 843               		.cfi_startproc
 844 04d8 CF93      		push r28
 845               	.LCFI23:
 846               		.cfi_def_cfa_offset 3
 847               		.cfi_offset 28, -2
 848 04da DF93      		push r29
 849               	.LCFI24:
 850               		.cfi_def_cfa_offset 4
 851               		.cfi_offset 29, -3
 852 04dc 00D0      		rcall .
 853 04de 00D0      		rcall .
 854 04e0 00D0      		rcall .
 855               	.LCFI25:
 856               		.cfi_def_cfa_offset 10
 857 04e2 CDB7      		in r28,__SP_L__
 858 04e4 DEB7      		in r29,__SP_H__
 859               	.LCFI26:
 860               		.cfi_def_cfa_register 28
 861               	/* prologue: function */
 862               	/* frame size = 6 */
 863               	/* stack size = 8 */
 864               	.L__stack_usage = 8
 865 04e6 9E83      		std Y+6,r25
 866 04e8 8D83      		std Y+5,r24
 250:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkCommandAck_t *command = (NwkCommandAck_t *)ind->data;
 867               		.loc 1 250 0
 868 04ea 8D81      		ldd r24,Y+5
 869 04ec 9E81      		ldd r25,Y+6
 870 04ee FC01      		movw r30,r24
 871 04f0 8085      		ldd r24,Z+8
 872 04f2 9185      		ldd r25,Z+9
 873 04f4 9C83      		std Y+4,r25
 874 04f6 8B83      		std Y+3,r24
 251:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *frame = NULL;
 875               		.loc 1 251 0
 876 04f8 1A82      		std Y+2,__zero_reg__
 877 04fa 1982      		std Y+1,__zero_reg__
 252:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 253:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (sizeof(NwkCommandAck_t) != ind->size) {
 878               		.loc 1 253 0
 879 04fc 8D81      		ldd r24,Y+5
 880 04fe 9E81      		ldd r25,Y+6
 881 0500 FC01      		movw r30,r24
 882 0502 8285      		ldd r24,Z+10
 883 0504 8330      		cpi r24,lo8(3)
 884 0506 01F0      		breq .L23
 254:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return false;
 885               		.loc 1 254 0
 886 0508 80E0      		ldi r24,0
 887 050a 00C0      		rjmp .L22
 888               	.L24:
 255:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 256:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_ACK == frame->state &&
 889               		.loc 1 258 0
 890 050c 8981      		ldd r24,Y+1
 891 050e 9A81      		ldd r25,Y+2
 892 0510 FC01      		movw r30,r24
 893 0512 8081      		ld r24,Z
 894 0514 8631      		cpi r24,lo8(22)
 895 0516 01F4      		brne .L23
 259:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->header.nwkSeq == command->seq) {
 896               		.loc 1 259 0 discriminator 1
 897 0518 8981      		ldd r24,Y+1
 898 051a 9A81      		ldd r25,Y+2
 899 051c FC01      		movw r30,r24
 900 051e 2485      		ldd r18,Z+12
 901 0520 8B81      		ldd r24,Y+3
 902 0522 9C81      		ldd r25,Y+4
 903 0524 FC01      		movw r30,r24
 904 0526 8181      		ldd r24,Z+1
 258:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->header.nwkSeq == command->seq) {
 905               		.loc 1 258 0 discriminator 1
 906 0528 2817      		cp r18,r24
 907 052a 01F4      		brne .L23
 260:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			frame->state = NWK_TX_STATE_CONFIRM;
 908               		.loc 1 260 0
 909 052c 8981      		ldd r24,Y+1
 910 052e 9A81      		ldd r25,Y+2
 911 0530 27E1      		ldi r18,lo8(23)
 912 0532 FC01      		movw r30,r24
 913 0534 2083      		st Z,r18
 261:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			frame->tx.control = command->control;
 914               		.loc 1 261 0
 915 0536 8B81      		ldd r24,Y+3
 916 0538 9C81      		ldd r25,Y+4
 917 053a FC01      		movw r30,r24
 918 053c 2281      		ldd r18,Z+2
 919 053e 8981      		ldd r24,Y+1
 920 0540 9A81      		ldd r25,Y+2
 921 0542 8A57      		subi r24,122
 922 0544 9F4F      		sbci r25,-1
 923 0546 FC01      		movw r30,r24
 924 0548 2083      		st Z,r18
 262:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			return true;
 925               		.loc 1 262 0
 926 054a 81E0      		ldi r24,lo8(1)
 927 054c 00C0      		rjmp .L22
 928               	.L23:
 257:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_ACK == frame->state &&
 929               		.loc 1 257 0
 930 054e 8981      		ldd r24,Y+1
 931 0550 9A81      		ldd r25,Y+2
 932 0552 0E94 0000 		call nwkFrameNext
 933 0556 9A83      		std Y+2,r25
 934 0558 8983      		std Y+1,r24
 935 055a 8981      		ldd r24,Y+1
 936 055c 9A81      		ldd r25,Y+2
 937 055e 892B      		or r24,r25
 938 0560 01F4      		brne .L24
 263:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 264:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 265:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 266:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	return false;
 939               		.loc 1 266 0
 940 0562 80E0      		ldi r24,0
 941               	.L22:
 942               	/* epilogue start */
 267:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 943               		.loc 1 267 0
 944 0564 2696      		adiw r28,6
 945 0566 0FB6      		in __tmp_reg__,__SREG__
 946 0568 F894      		cli
 947 056a DEBF      		out __SP_H__,r29
 948 056c 0FBE      		out __SREG__,__tmp_reg__
 949 056e CDBF      		out __SP_L__,r28
 950 0570 DF91      		pop r29
 951 0572 CF91      		pop r28
 952 0574 0895      		ret
 953               		.cfi_endproc
 954               	.LFE72:
 957               	nwkTxAckWaitTimerHandler:
 958               	.LFB73:
 268:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 269:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 270:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 271:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer)
 272:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 959               		.loc 1 272 0
 960               		.cfi_startproc
 961 0576 CF93      		push r28
 962               	.LCFI27:
 963               		.cfi_def_cfa_offset 3
 964               		.cfi_offset 28, -2
 965 0578 DF93      		push r29
 966               	.LCFI28:
 967               		.cfi_def_cfa_offset 4
 968               		.cfi_offset 29, -3
 969 057a 00D0      		rcall .
 970 057c 00D0      		rcall .
 971 057e 1F92      		push __zero_reg__
 972               	.LCFI29:
 973               		.cfi_def_cfa_offset 9
 974 0580 CDB7      		in r28,__SP_L__
 975 0582 DEB7      		in r29,__SP_H__
 976               	.LCFI30:
 977               		.cfi_def_cfa_register 28
 978               	/* prologue: function */
 979               	/* frame size = 5 */
 980               	/* stack size = 7 */
 981               	.L__stack_usage = 7
 982 0584 9D83      		std Y+5,r25
 983 0586 8C83      		std Y+4,r24
 273:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *frame = NULL;
 984               		.loc 1 273 0
 985 0588 1A82      		std Y+2,__zero_reg__
 986 058a 1982      		std Y+1,__zero_reg__
 274:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	bool restart = false;
 987               		.loc 1 274 0
 988 058c 1B82      		std Y+3,__zero_reg__
 275:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 989               		.loc 1 276 0
 990 058e 00C0      		rjmp .L26
 991               	.L27:
 277:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_ACK == frame->state) {
 992               		.loc 1 277 0
 993 0590 8981      		ldd r24,Y+1
 994 0592 9A81      		ldd r25,Y+2
 995 0594 FC01      		movw r30,r24
 996 0596 8081      		ld r24,Z
 997 0598 8631      		cpi r24,lo8(22)
 998 059a 01F4      		brne .L26
 278:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			restart = true;
 999               		.loc 1 278 0
 1000 059c 81E0      		ldi r24,lo8(1)
 1001 059e 8B83      		std Y+3,r24
 279:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 280:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (0 == --frame->tx.timeout) {
 1002               		.loc 1 280 0
 1003 05a0 8981      		ldd r24,Y+1
 1004 05a2 9A81      		ldd r25,Y+2
 1005 05a4 8C57      		subi r24,124
 1006 05a6 9F4F      		sbci r25,-1
 1007 05a8 FC01      		movw r30,r24
 1008 05aa 8081      		ld r24,Z
 1009 05ac 9181      		ldd r25,Z+1
 1010 05ae 9C01      		movw r18,r24
 1011 05b0 2150      		subi r18,1
 1012 05b2 3109      		sbc r19,__zero_reg__
 1013 05b4 8981      		ldd r24,Y+1
 1014 05b6 9A81      		ldd r25,Y+2
 1015 05b8 8C57      		subi r24,124
 1016 05ba 9F4F      		sbci r25,-1
 1017 05bc FC01      		movw r30,r24
 1018 05be 3183      		std Z+1,r19
 1019 05c0 2083      		st Z,r18
 1020 05c2 8981      		ldd r24,Y+1
 1021 05c4 9A81      		ldd r25,Y+2
 1022 05c6 8C57      		subi r24,124
 1023 05c8 9F4F      		sbci r25,-1
 1024 05ca FC01      		movw r30,r24
 1025 05cc 8081      		ld r24,Z
 1026 05ce 9181      		ldd r25,Z+1
 1027 05d0 892B      		or r24,r25
 1028 05d2 01F4      		brne .L26
 281:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				nwkTxConfirm(frame, NWK_NO_ACK_STATUS);
 1029               		.loc 1 281 0
 1030 05d4 8981      		ldd r24,Y+1
 1031 05d6 9A81      		ldd r25,Y+2
 1032 05d8 60E1      		ldi r22,lo8(16)
 1033 05da 0E94 0000 		call nwkTxConfirm
 1034               	.L26:
 276:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_ACK == frame->state) {
 1035               		.loc 1 276 0
 1036 05de 8981      		ldd r24,Y+1
 1037 05e0 9A81      		ldd r25,Y+2
 1038 05e2 0E94 0000 		call nwkFrameNext
 1039 05e6 9A83      		std Y+2,r25
 1040 05e8 8983      		std Y+1,r24
 1041 05ea 8981      		ldd r24,Y+1
 1042 05ec 9A81      		ldd r25,Y+2
 1043 05ee 892B      		or r24,r25
 1044 05f0 01F4      		brne .L27
 282:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 283:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 284:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 285:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 286:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (restart) {
 1045               		.loc 1 286 0
 1046 05f2 8B81      		ldd r24,Y+3
 1047 05f4 8823      		tst r24
 1048 05f6 01F0      		breq .L29
 287:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		SYS_TimerStart(timer);
 1049               		.loc 1 287 0
 1050 05f8 8C81      		ldd r24,Y+4
 1051 05fa 9D81      		ldd r25,Y+5
 1052 05fc 0E94 0000 		call SYS_TimerStart
 1053               	.L29:
 288:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 289:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1054               		.loc 1 289 0
 1055 0600 0000      		nop
 1056               	/* epilogue start */
 1057 0602 0F90      		pop __tmp_reg__
 1058 0604 0F90      		pop __tmp_reg__
 1059 0606 0F90      		pop __tmp_reg__
 1060 0608 0F90      		pop __tmp_reg__
 1061 060a 0F90      		pop __tmp_reg__
 1062 060c DF91      		pop r29
 1063 060e CF91      		pop r28
 1064 0610 0895      		ret
 1065               		.cfi_endproc
 1066               	.LFE73:
 1068               	.global	nwkTxConfirm
 1070               	nwkTxConfirm:
 1071               	.LFB74:
 290:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 291:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 292:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 293:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxConfirm(NwkFrame_t *frame, uint8_t status)
 294:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 1072               		.loc 1 294 0
 1073               		.cfi_startproc
 1074 0612 CF93      		push r28
 1075               	.LCFI31:
 1076               		.cfi_def_cfa_offset 3
 1077               		.cfi_offset 28, -2
 1078 0614 DF93      		push r29
 1079               	.LCFI32:
 1080               		.cfi_def_cfa_offset 4
 1081               		.cfi_offset 29, -3
 1082 0616 00D0      		rcall .
 1083 0618 1F92      		push __zero_reg__
 1084               	.LCFI33:
 1085               		.cfi_def_cfa_offset 7
 1086 061a CDB7      		in r28,__SP_L__
 1087 061c DEB7      		in r29,__SP_H__
 1088               	.LCFI34:
 1089               		.cfi_def_cfa_register 28
 1090               	/* prologue: function */
 1091               	/* frame size = 3 */
 1092               	/* stack size = 5 */
 1093               	.L__stack_usage = 5
 1094 061e 9A83      		std Y+2,r25
 1095 0620 8983      		std Y+1,r24
 1096 0622 6B83      		std Y+3,r22
 295:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->state = NWK_TX_STATE_CONFIRM;
 1097               		.loc 1 295 0
 1098 0624 8981      		ldd r24,Y+1
 1099 0626 9A81      		ldd r25,Y+2
 1100 0628 27E1      		ldi r18,lo8(23)
 1101 062a FC01      		movw r30,r24
 1102 062c 2083      		st Z,r18
 296:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->tx.status = status;
 1103               		.loc 1 296 0
 1104 062e 8981      		ldd r24,Y+1
 1105 0630 9A81      		ldd r25,Y+2
 1106 0632 8D57      		subi r24,125
 1107 0634 9F4F      		sbci r25,-1
 1108 0636 2B81      		ldd r18,Y+3
 1109 0638 FC01      		movw r30,r24
 1110 063a 2083      		st Z,r18
 297:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1111               		.loc 1 297 0
 1112 063c 0000      		nop
 1113               	/* epilogue start */
 1114 063e 0F90      		pop __tmp_reg__
 1115 0640 0F90      		pop __tmp_reg__
 1116 0642 0F90      		pop __tmp_reg__
 1117 0644 DF91      		pop r29
 1118 0646 CF91      		pop r28
 1119 0648 0895      		ret
 1120               		.cfi_endproc
 1121               	.LFE74:
 1124               	nwkTxDelayTimerHandler:
 1125               	.LFB75:
 298:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 299:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_SECURITY
 300:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 301:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 302:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 303:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxEncryptConf(NwkFrame_t *frame)
 304:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 305:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	frame->state = NWK_TX_STATE_DELAY;
 306:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 307:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 308:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 309:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 310:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 311:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 312:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static void nwkTxDelayTimerHandler(SYS_Timer_t *timer)
 313:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 1126               		.loc 1 313 0
 1127               		.cfi_startproc
 1128 064a CF93      		push r28
 1129               	.LCFI35:
 1130               		.cfi_def_cfa_offset 3
 1131               		.cfi_offset 28, -2
 1132 064c DF93      		push r29
 1133               	.LCFI36:
 1134               		.cfi_def_cfa_offset 4
 1135               		.cfi_offset 29, -3
 1136 064e 00D0      		rcall .
 1137 0650 00D0      		rcall .
 1138 0652 1F92      		push __zero_reg__
 1139               	.LCFI37:
 1140               		.cfi_def_cfa_offset 9
 1141 0654 CDB7      		in r28,__SP_L__
 1142 0656 DEB7      		in r29,__SP_H__
 1143               	.LCFI38:
 1144               		.cfi_def_cfa_register 28
 1145               	/* prologue: function */
 1146               	/* frame size = 5 */
 1147               	/* stack size = 7 */
 1148               	.L__stack_usage = 7
 1149 0658 9D83      		std Y+5,r25
 1150 065a 8C83      		std Y+4,r24
 314:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *frame = NULL;
 1151               		.loc 1 314 0
 1152 065c 1A82      		std Y+2,__zero_reg__
 1153 065e 1982      		std Y+1,__zero_reg__
 315:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	bool restart = false;
 1154               		.loc 1 315 0
 1155 0660 1B82      		std Y+3,__zero_reg__
 316:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 1156               		.loc 1 317 0
 1157 0662 00C0      		rjmp .L32
 1158               	.L33:
 318:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_DELAY == frame->state) {
 1159               		.loc 1 318 0
 1160 0664 8981      		ldd r24,Y+1
 1161 0666 9A81      		ldd r25,Y+2
 1162 0668 FC01      		movw r30,r24
 1163 066a 8081      		ld r24,Z
 1164 066c 8131      		cpi r24,lo8(17)
 1165 066e 01F4      		brne .L32
 319:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			restart = true;
 1166               		.loc 1 319 0
 1167 0670 81E0      		ldi r24,lo8(1)
 1168 0672 8B83      		std Y+3,r24
 320:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 321:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (0 == --frame->tx.timeout) {
 1169               		.loc 1 321 0
 1170 0674 8981      		ldd r24,Y+1
 1171 0676 9A81      		ldd r25,Y+2
 1172 0678 8C57      		subi r24,124
 1173 067a 9F4F      		sbci r25,-1
 1174 067c FC01      		movw r30,r24
 1175 067e 8081      		ld r24,Z
 1176 0680 9181      		ldd r25,Z+1
 1177 0682 9C01      		movw r18,r24
 1178 0684 2150      		subi r18,1
 1179 0686 3109      		sbc r19,__zero_reg__
 1180 0688 8981      		ldd r24,Y+1
 1181 068a 9A81      		ldd r25,Y+2
 1182 068c 8C57      		subi r24,124
 1183 068e 9F4F      		sbci r25,-1
 1184 0690 FC01      		movw r30,r24
 1185 0692 3183      		std Z+1,r19
 1186 0694 2083      		st Z,r18
 1187 0696 8981      		ldd r24,Y+1
 1188 0698 9A81      		ldd r25,Y+2
 1189 069a 8C57      		subi r24,124
 1190 069c 9F4F      		sbci r25,-1
 1191 069e FC01      		movw r30,r24
 1192 06a0 8081      		ld r24,Z
 1193 06a2 9181      		ldd r25,Z+1
 1194 06a4 892B      		or r24,r25
 1195 06a6 01F4      		brne .L32
 322:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_SEND;
 1196               		.loc 1 322 0
 1197 06a8 8981      		ldd r24,Y+1
 1198 06aa 9A81      		ldd r25,Y+2
 1199 06ac 23E1      		ldi r18,lo8(19)
 1200 06ae FC01      		movw r30,r24
 1201 06b0 2083      		st Z,r18
 1202               	.L32:
 317:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		if (NWK_TX_STATE_WAIT_DELAY == frame->state) {
 1203               		.loc 1 317 0
 1204 06b2 8981      		ldd r24,Y+1
 1205 06b4 9A81      		ldd r25,Y+2
 1206 06b6 0E94 0000 		call nwkFrameNext
 1207 06ba 9A83      		std Y+2,r25
 1208 06bc 8983      		std Y+1,r24
 1209 06be 8981      		ldd r24,Y+1
 1210 06c0 9A81      		ldd r25,Y+2
 1211 06c2 892B      		or r24,r25
 1212 06c4 01F4      		brne .L33
 323:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 324:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 325:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 326:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 327:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	if (restart) {
 1213               		.loc 1 327 0
 1214 06c6 8B81      		ldd r24,Y+3
 1215 06c8 8823      		tst r24
 1216 06ca 01F0      		breq .L35
 328:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		SYS_TimerStart(timer);
 1217               		.loc 1 328 0
 1218 06cc 8C81      		ldd r24,Y+4
 1219 06ce 9D81      		ldd r25,Y+5
 1220 06d0 0E94 0000 		call SYS_TimerStart
 1221               	.L35:
 329:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 330:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1222               		.loc 1 330 0
 1223 06d4 0000      		nop
 1224               	/* epilogue start */
 1225 06d6 0F90      		pop __tmp_reg__
 1226 06d8 0F90      		pop __tmp_reg__
 1227 06da 0F90      		pop __tmp_reg__
 1228 06dc 0F90      		pop __tmp_reg__
 1229 06de 0F90      		pop __tmp_reg__
 1230 06e0 DF91      		pop r29
 1231 06e2 CF91      		pop r28
 1232 06e4 0895      		ret
 1233               		.cfi_endproc
 1234               	.LFE75:
 1237               	nwkTxConvertPhyStatus:
 1238               	.LFB76:
 331:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 332:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 333:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 334:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** static uint8_t nwkTxConvertPhyStatus(uint8_t status)
 335:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 1239               		.loc 1 335 0
 1240               		.cfi_startproc
 1241 06e6 CF93      		push r28
 1242               	.LCFI39:
 1243               		.cfi_def_cfa_offset 3
 1244               		.cfi_offset 28, -2
 1245 06e8 DF93      		push r29
 1246               	.LCFI40:
 1247               		.cfi_def_cfa_offset 4
 1248               		.cfi_offset 29, -3
 1249 06ea 1F92      		push __zero_reg__
 1250               	.LCFI41:
 1251               		.cfi_def_cfa_offset 5
 1252 06ec CDB7      		in r28,__SP_L__
 1253 06ee DEB7      		in r29,__SP_H__
 1254               	.LCFI42:
 1255               		.cfi_def_cfa_register 28
 1256               	/* prologue: function */
 1257               	/* frame size = 1 */
 1258               	/* stack size = 3 */
 1259               	.L__stack_usage = 3
 1260 06f0 8983      		std Y+1,r24
 336:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	switch (status) {
 1261               		.loc 1 336 0
 1262 06f2 8981      		ldd r24,Y+1
 1263 06f4 882F      		mov r24,r24
 1264 06f6 90E0      		ldi r25,0
 1265 06f8 8130      		cpi r24,1
 1266 06fa 9105      		cpc r25,__zero_reg__
 1267 06fc 01F0      		breq .L38
 1268 06fe 8230      		cpi r24,2
 1269 0700 9105      		cpc r25,__zero_reg__
 1270 0702 01F0      		breq .L39
 1271 0704 892B      		or r24,r25
 1272 0706 01F4      		brne .L42
 337:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	case PHY_STATUS_SUCCESS:
 338:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return NWK_SUCCESS_STATUS;
 1273               		.loc 1 338 0
 1274 0708 80E0      		ldi r24,0
 1275 070a 00C0      		rjmp .L41
 1276               	.L38:
 339:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 340:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	case PHY_STATUS_CHANNEL_ACCESS_FAILURE:
 341:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return NWK_PHY_CHANNEL_ACCESS_FAILURE_STATUS;
 1277               		.loc 1 341 0
 1278 070c 80E2      		ldi r24,lo8(32)
 1279 070e 00C0      		rjmp .L41
 1280               	.L39:
 342:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 343:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	case PHY_STATUS_NO_ACK:
 344:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return NWK_PHY_NO_ACK_STATUS;
 1281               		.loc 1 344 0
 1282 0710 81E2      		ldi r24,lo8(33)
 1283 0712 00C0      		rjmp .L41
 1284               	.L42:
 345:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 346:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	default:
 347:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		return NWK_ERROR_STATUS;
 1285               		.loc 1 347 0
 1286 0714 81E0      		ldi r24,lo8(1)
 1287               	.L41:
 1288               	/* epilogue start */
 348:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 349:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1289               		.loc 1 349 0
 1290 0716 0F90      		pop __tmp_reg__
 1291 0718 DF91      		pop r29
 1292 071a CF91      		pop r28
 1293 071c 0895      		ret
 1294               		.cfi_endproc
 1295               	.LFE76:
 1297               	.global	PHY_DataConf
 1299               	PHY_DataConf:
 1300               	.LFB77:
 350:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 351:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 352:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 353:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void PHY_DataConf(uint8_t status)
 354:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 1301               		.loc 1 354 0
 1302               		.cfi_startproc
 1303 071e 0F93      		push r16
 1304               	.LCFI43:
 1305               		.cfi_def_cfa_offset 3
 1306               		.cfi_offset 16, -2
 1307 0720 1F93      		push r17
 1308               	.LCFI44:
 1309               		.cfi_def_cfa_offset 4
 1310               		.cfi_offset 17, -3
 1311 0722 CF93      		push r28
 1312               	.LCFI45:
 1313               		.cfi_def_cfa_offset 5
 1314               		.cfi_offset 28, -4
 1315 0724 DF93      		push r29
 1316               	.LCFI46:
 1317               		.cfi_def_cfa_offset 6
 1318               		.cfi_offset 29, -5
 1319 0726 1F92      		push __zero_reg__
 1320               	.LCFI47:
 1321               		.cfi_def_cfa_offset 7
 1322 0728 CDB7      		in r28,__SP_L__
 1323 072a DEB7      		in r29,__SP_H__
 1324               	.LCFI48:
 1325               		.cfi_def_cfa_register 28
 1326               	/* prologue: function */
 1327               	/* frame size = 1 */
 1328               	/* stack size = 5 */
 1329               	.L__stack_usage = 5
 1330 072c 8983      		std Y+1,r24
 355:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxPhyActiveFrame->tx.status = nwkTxConvertPhyStatus(status);
 1331               		.loc 1 355 0
 1332 072e 0091 0000 		lds r16,nwkTxPhyActiveFrame
 1333 0732 1091 0000 		lds r17,nwkTxPhyActiveFrame+1
 1334 0736 8981      		ldd r24,Y+1
 1335 0738 0E94 0000 		call nwkTxConvertPhyStatus
 1336 073c 282F      		mov r18,r24
 1337 073e C801      		movw r24,r16
 1338 0740 8D57      		subi r24,125
 1339 0742 9F4F      		sbci r25,-1
 1340 0744 FC01      		movw r30,r24
 1341 0746 2083      		st Z,r18
 356:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxPhyActiveFrame->state = NWK_TX_STATE_SENT;
 1342               		.loc 1 356 0
 1343 0748 8091 0000 		lds r24,nwkTxPhyActiveFrame
 1344 074c 9091 0000 		lds r25,nwkTxPhyActiveFrame+1
 1345 0750 25E1      		ldi r18,lo8(21)
 1346 0752 FC01      		movw r30,r24
 1347 0754 2083      		st Z,r18
 357:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkTxPhyActiveFrame = NULL;
 1348               		.loc 1 357 0
 1349 0756 1092 0000 		sts nwkTxPhyActiveFrame+1,__zero_reg__
 1350 075a 1092 0000 		sts nwkTxPhyActiveFrame,__zero_reg__
 358:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	nwkIb.lock--;
 1351               		.loc 1 358 0
 1352 075e 8091 0000 		lds r24,nwkIb+38
 1353 0762 9091 0000 		lds r25,nwkIb+38+1
 1354 0766 0197      		sbiw r24,1
 1355 0768 9093 0000 		sts nwkIb+38+1,r25
 1356 076c 8093 0000 		sts nwkIb+38,r24
 359:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1357               		.loc 1 359 0
 1358 0770 0000      		nop
 1359               	/* epilogue start */
 1360 0772 0F90      		pop __tmp_reg__
 1361 0774 DF91      		pop r29
 1362 0776 CF91      		pop r28
 1363 0778 1F91      		pop r17
 1364 077a 0F91      		pop r16
 1365 077c 0895      		ret
 1366               		.cfi_endproc
 1367               	.LFE77:
 1369               	.global	nwkTxTaskHandler
 1371               	nwkTxTaskHandler:
 1372               	.LFB78:
 360:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 361:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** /*************************************************************************//**
 362:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *  @brief Tx Module task handler
 363:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** *****************************************************************************/
 364:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** void nwkTxTaskHandler(void)
 365:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** {
 1373               		.loc 1 365 0
 1374               		.cfi_startproc
 1375 077e CF93      		push r28
 1376               	.LCFI49:
 1377               		.cfi_def_cfa_offset 3
 1378               		.cfi_offset 28, -2
 1379 0780 DF93      		push r29
 1380               	.LCFI50:
 1381               		.cfi_def_cfa_offset 4
 1382               		.cfi_offset 29, -3
 1383 0782 00D0      		rcall .
 1384               	.LCFI51:
 1385               		.cfi_def_cfa_offset 6
 1386 0784 CDB7      		in r28,__SP_L__
 1387 0786 DEB7      		in r29,__SP_H__
 1388               	.LCFI52:
 1389               		.cfi_def_cfa_register 28
 1390               	/* prologue: function */
 1391               	/* frame size = 2 */
 1392               	/* stack size = 4 */
 1393               	.L__stack_usage = 4
 366:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	NwkFrame_t *frame = NULL;
 1394               		.loc 1 366 0
 1395 0788 1A82      		std Y+2,__zero_reg__
 1396 078a 1982      		std Y+1,__zero_reg__
 367:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	while (NULL != (frame = nwkFrameNext(frame))) {
 1397               		.loc 1 368 0
 1398 078c 00C0      		rjmp .L45
 1399               	.L63:
 369:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		switch (frame->state) {
 1400               		.loc 1 369 0
 1401 078e 8981      		ldd r24,Y+1
 1402 0790 9A81      		ldd r25,Y+2
 1403 0792 FC01      		movw r30,r24
 1404 0794 8081      		ld r24,Z
 1405 0796 882F      		mov r24,r24
 1406 0798 90E0      		ldi r25,0
 1407 079a 8431      		cpi r24,20
 1408 079c 9105      		cpc r25,__zero_reg__
 1409 079e 01F4      		brne .+2
 1410 07a0 00C0      		rjmp .L45
 1411 07a2 8531      		cpi r24,21
 1412 07a4 9105      		cpc r25,__zero_reg__
 1413 07a6 04F4      		brge .L48
 1414 07a8 8231      		cpi r24,18
 1415 07aa 9105      		cpc r25,__zero_reg__
 1416 07ac 01F0      		breq .L49
 1417 07ae 4397      		sbiw r24,19
 1418 07b0 01F0      		breq .L50
 1419 07b2 00C0      		rjmp .L46
 1420               	.L48:
 1421 07b4 8631      		cpi r24,22
 1422 07b6 9105      		cpc r25,__zero_reg__
 1423 07b8 01F4      		brne .+2
 1424 07ba 00C0      		rjmp .L45
 1425 07bc 8631      		cpi r24,22
 1426 07be 9105      		cpc r25,__zero_reg__
 1427 07c0 04F4      		brge .+2
 1428 07c2 00C0      		rjmp .L52
 1429 07c4 4797      		sbiw r24,23
 1430 07c6 01F4      		brne .+2
 1431 07c8 00C0      		rjmp .L53
 1432 07ca 00C0      		rjmp .L46
 1433               	.L49:
 370:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_SECURITY
 371:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_ENCRYPT:
 372:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 373:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			nwkSecurityProcess(frame, true);
 374:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 375:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 376:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 377:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 378:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_DELAY:
 379:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 380:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (frame->tx.timeout > 0) {
 1434               		.loc 1 380 0
 1435 07cc 8981      		ldd r24,Y+1
 1436 07ce 9A81      		ldd r25,Y+2
 1437 07d0 8C57      		subi r24,124
 1438 07d2 9F4F      		sbci r25,-1
 1439 07d4 FC01      		movw r30,r24
 1440 07d6 8081      		ld r24,Z
 1441 07d8 9181      		ldd r25,Z+1
 1442 07da 892B      		or r24,r25
 1443 07dc 01F0      		breq .L54
 381:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_WAIT_DELAY;
 1444               		.loc 1 381 0
 1445 07de 8981      		ldd r24,Y+1
 1446 07e0 9A81      		ldd r25,Y+2
 1447 07e2 21E1      		ldi r18,lo8(17)
 1448 07e4 FC01      		movw r30,r24
 1449 07e6 2083      		st Z,r18
 382:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				SYS_TimerStart(&nwkTxDelayTimer);
 1450               		.loc 1 382 0
 1451 07e8 80E0      		ldi r24,lo8(nwkTxDelayTimer)
 1452 07ea 90E0      		ldi r25,hi8(nwkTxDelayTimer)
 1453 07ec 0E94 0000 		call SYS_TimerStart
 1454 07f0 00C0      		rjmp .L45
 1455               	.L54:
 383:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			} else {
 384:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_SEND;
 1456               		.loc 1 384 0
 1457 07f2 8981      		ldd r24,Y+1
 1458 07f4 9A81      		ldd r25,Y+2
 1459 07f6 23E1      		ldi r18,lo8(19)
 1460 07f8 FC01      		movw r30,r24
 1461 07fa 2083      		st Z,r18
 385:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 386:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 387:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 1462               		.loc 1 387 0
 1463 07fc 00C0      		rjmp .L45
 1464               	.L50:
 388:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 389:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_SEND:
 390:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 391:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (NULL == nwkTxPhyActiveFrame) {
 1465               		.loc 1 391 0
 1466 07fe 8091 0000 		lds r24,nwkTxPhyActiveFrame
 1467 0802 9091 0000 		lds r25,nwkTxPhyActiveFrame+1
 1468 0806 892B      		or r24,r25
 1469 0808 01F0      		breq .+2
 1470 080a 00C0      		rjmp .L45
 392:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				nwkTxPhyActiveFrame = frame;
 1471               		.loc 1 392 0
 1472 080c 8981      		ldd r24,Y+1
 1473 080e 9A81      		ldd r25,Y+2
 1474 0810 9093 0000 		sts nwkTxPhyActiveFrame+1,r25
 1475 0814 8093 0000 		sts nwkTxPhyActiveFrame,r24
 393:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_WAIT_CONF;
 1476               		.loc 1 393 0
 1477 0818 8981      		ldd r24,Y+1
 1478 081a 9A81      		ldd r25,Y+2
 1479 081c 24E1      		ldi r18,lo8(20)
 1480 081e FC01      		movw r30,r24
 1481 0820 2083      		st Z,r18
 394:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				PHY_DataReq(frame->data, frame->size);
 1482               		.loc 1 394 0
 1483 0822 8981      		ldd r24,Y+1
 1484 0824 9A81      		ldd r25,Y+2
 1485 0826 FC01      		movw r30,r24
 1486 0828 2181      		ldd r18,Z+1
 1487 082a 8981      		ldd r24,Y+1
 1488 082c 9A81      		ldd r25,Y+2
 1489 082e 0296      		adiw r24,2
 1490 0830 622F      		mov r22,r18
 1491 0832 0E94 0000 		call PHY_DataReq
 395:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				nwkIb.lock++;
 1492               		.loc 1 395 0
 1493 0836 8091 0000 		lds r24,nwkIb+38
 1494 083a 9091 0000 		lds r25,nwkIb+38+1
 1495 083e 0196      		adiw r24,1
 1496 0840 9093 0000 		sts nwkIb+38+1,r25
 1497 0844 8093 0000 		sts nwkIb+38,r24
 396:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 397:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 398:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 1498               		.loc 1 398 0
 1499 0848 00C0      		rjmp .L45
 1500               	.L52:
 399:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 400:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_WAIT_CONF:
 401:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			break;
 402:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 403:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_SENT:
 404:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 405:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (NWK_SUCCESS_STATUS == frame->tx.status) {
 1501               		.loc 1 405 0
 1502 084a 8981      		ldd r24,Y+1
 1503 084c 9A81      		ldd r25,Y+2
 1504 084e 8D57      		subi r24,125
 1505 0850 9F4F      		sbci r25,-1
 1506 0852 FC01      		movw r30,r24
 1507 0854 8081      		ld r24,Z
 1508 0856 8823      		tst r24
 1509 0858 01F4      		brne .L57
 406:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				if (frame->header.nwkSrcAddr == nwkIb.addr &&
 1510               		.loc 1 406 0
 1511 085a 8981      		ldd r24,Y+1
 1512 085c 9A81      		ldd r25,Y+2
 1513 085e FC01      		movw r30,r24
 1514 0860 2585      		ldd r18,Z+13
 1515 0862 3685      		ldd r19,Z+14
 1516 0864 8091 0000 		lds r24,nwkIb
 1517 0868 9091 0000 		lds r25,nwkIb+1
 1518 086c 2817      		cp r18,r24
 1519 086e 3907      		cpc r19,r25
 1520 0870 01F4      		brne .L58
 1521               		.loc 1 406 0 is_stmt 0 discriminator 1
 1522 0872 8981      		ldd r24,Y+1
 1523 0874 9A81      		ldd r25,Y+2
 1524 0876 FC01      		movw r30,r24
 1525 0878 8385      		ldd r24,Z+11
 1526 087a 8170      		andi r24,lo8(1)
 1527 087c 8823      		tst r24
 1528 087e 01F0      		breq .L58
 407:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 						frame->header.nwkFcf.
 408:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 						ackRequest) {
 409:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 					frame->state = NWK_TX_STATE_WAIT_ACK;
 1529               		.loc 1 409 0 is_stmt 1
 1530 0880 8981      		ldd r24,Y+1
 1531 0882 9A81      		ldd r25,Y+2
 1532 0884 26E1      		ldi r18,lo8(22)
 1533 0886 FC01      		movw r30,r24
 1534 0888 2083      		st Z,r18
 410:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 					frame->tx.timeout = NWK_ACK_WAIT_TIME /
 1535               		.loc 1 410 0
 1536 088a 8981      		ldd r24,Y+1
 1537 088c 9A81      		ldd r25,Y+2
 1538 088e 8C57      		subi r24,124
 1539 0890 9F4F      		sbci r25,-1
 1540 0892 25E1      		ldi r18,lo8(21)
 1541 0894 30E0      		ldi r19,0
 1542 0896 FC01      		movw r30,r24
 1543 0898 3183      		std Z+1,r19
 1544 089a 2083      		st Z,r18
 411:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 							NWK_TX_ACK_WAIT_TIMER_INTERVAL
 412:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 							+ 1;
 413:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 					SYS_TimerStart(&nwkTxAckWaitTimer);
 1545               		.loc 1 413 0
 1546 089c 80E0      		ldi r24,lo8(nwkTxAckWaitTimer)
 1547 089e 90E0      		ldi r25,hi8(nwkTxAckWaitTimer)
 1548 08a0 0E94 0000 		call SYS_TimerStart
 1549 08a4 00C0      		rjmp .L60
 1550               	.L58:
 414:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				} else {
 415:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 					
 416:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 					frame->state = NWK_TX_STATE_CONFIRM;
 1551               		.loc 1 416 0
 1552 08a6 8981      		ldd r24,Y+1
 1553 08a8 9A81      		ldd r25,Y+2
 1554 08aa 27E1      		ldi r18,lo8(23)
 1555 08ac FC01      		movw r30,r24
 1556 08ae 2083      		st Z,r18
 1557 08b0 00C0      		rjmp .L45
 1558               	.L57:
 417:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				}
 418:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			} else {
 419:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->state = NWK_TX_STATE_CONFIRM;
 1559               		.loc 1 419 0
 1560 08b2 8981      		ldd r24,Y+1
 1561 08b4 9A81      		ldd r25,Y+2
 1562 08b6 27E1      		ldi r18,lo8(23)
 1563 08b8 FC01      		movw r30,r24
 1564 08ba 2083      		st Z,r18
 1565               	.L60:
 420:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 421:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 422:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 1566               		.loc 1 422 0 discriminator 1
 1567 08bc 00C0      		rjmp .L45
 1568               	.L53:
 423:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 424:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_WAIT_ACK:
 425:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			break;
 426:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 427:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		case NWK_TX_STATE_CONFIRM:
 428:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		{
 429:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #ifdef NWK_ENABLE_ROUTING
 430:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			nwkRouteFrameSent(frame);
 431:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** #endif
 432:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			if (NULL == frame->tx.confirm) {
 1569               		.loc 1 432 0
 1570 08be 8981      		ldd r24,Y+1
 1571 08c0 9A81      		ldd r25,Y+2
 1572 08c2 8957      		subi r24,121
 1573 08c4 9F4F      		sbci r25,-1
 1574 08c6 FC01      		movw r30,r24
 1575 08c8 8081      		ld r24,Z
 1576 08ca 9181      		ldd r25,Z+1
 1577 08cc 892B      		or r24,r25
 1578 08ce 01F4      		brne .L61
 433:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				nwkFrameFree(frame);
 1579               		.loc 1 433 0
 1580 08d0 8981      		ldd r24,Y+1
 1581 08d2 9A81      		ldd r25,Y+2
 1582 08d4 0E94 0000 		call nwkFrameFree
 1583 08d8 00C0      		rjmp .L45
 1584               	.L61:
 434:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			} else {
 435:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 				frame->tx.confirm(frame);
 1585               		.loc 1 435 0
 1586 08da 8981      		ldd r24,Y+1
 1587 08dc 9A81      		ldd r25,Y+2
 1588 08de 8957      		subi r24,121
 1589 08e0 9F4F      		sbci r25,-1
 1590 08e2 FC01      		movw r30,r24
 1591 08e4 2081      		ld r18,Z
 1592 08e6 3181      		ldd r19,Z+1
 1593 08e8 8981      		ldd r24,Y+1
 1594 08ea 9A81      		ldd r25,Y+2
 1595 08ec F901      		movw r30,r18
 1596 08ee 0995      		icall
 436:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			}
 437:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 438:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		break;
 1597               		.loc 1 438 0
 1598 08f0 00C0      		rjmp .L45
 1599               	.L46:
 439:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 
 440:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		default:
 441:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 			break;
 1600               		.loc 1 441 0
 1601 08f2 0000      		nop
 1602               	.L45:
 368:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		switch (frame->state) {
 1603               		.loc 1 368 0
 1604 08f4 8981      		ldd r24,Y+1
 1605 08f6 9A81      		ldd r25,Y+2
 1606 08f8 0E94 0000 		call nwkFrameNext
 1607 08fc 9A83      		std Y+2,r25
 1608 08fe 8983      		std Y+1,r24
 1609 0900 8981      		ldd r24,Y+1
 1610 0902 9A81      		ldd r25,Y+2
 1611 0904 892B      		or r24,r25
 1612 0906 01F0      		breq .+2
 1613 0908 00C0      		rjmp .L63
 442:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 		}
 443:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** 	}
 444:../../../stack/LwMesh/TDMA/nwk/src/nwkTx.c **** }
 1614               		.loc 1 444 0
 1615 090a 0000      		nop
 1616               	/* epilogue start */
 1617 090c 0F90      		pop __tmp_reg__
 1618 090e 0F90      		pop __tmp_reg__
 1619 0910 DF91      		pop r29
 1620 0912 CF91      		pop r28
 1621 0914 0895      		ret
 1622               		.cfi_endproc
 1623               	.LFE78:
 1625               	.Letext0:
 1626               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 1627               		.file 3 "../../../stack/LwMesh/TDMA/sys/inc/sysTimer.h"
 1628               		.file 4 "../../../stack/LwMesh/TDMA/nwk/inc/nwkFrame.h"
 1629               		.file 5 "../../../stack/LwMesh/TDMA/nwk/inc/nwkRx.h"
 1630               		.file 6 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 1631               		.file 7 "../../../stack/LwMesh/TDMA/nwk/inc/nwkDataReq.h"
 1632               		.file 8 "../../../stack/LwMesh/TDMA/nwk/inc/nwk.h"
 1633               		.file 9 "../../../stack/LwMesh/TDMA/nwk/inc/nwkTx.h"
 1634               		.file 10 "../../../stack/LwMesh/TDMA/nwk/inc/nwkCommand.h"
 1635               		.file 11 "config/config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nwkTx.c
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:7      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 n
                            *COM*:00000004 tTS
                            *COM*:00000002 macLLDNnumTimeSlots
                            *COM*:00000002 macLLDNnumUplinkTS
                            *COM*:00000002 macLLDNRetransmitTS
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:19     .bss.nwkTxPhyActiveFrame:00000000 nwkTxPhyActiveFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:24     .bss.nwkTxAckWaitTimer:00000000 nwkTxAckWaitTimer
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:29     .bss.nwkTxDelayTimer:00000000 nwkTxDelayTimer
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:34     .text:00000000 nwkTxInit
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:957    .text:00000576 nwkTxAckWaitTimerHandler
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:1124   .text:0000064a nwkTxDelayTimerHandler
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:101    .text:00000068 nwkTxBeaconFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:202    .text:000000fe nwkTxBeaconFrameLLDN
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:317    .text:000001a4 nwkTxMacCommandFrameLLDN
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:473    .text:0000028c nwkTxFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:664    .text:000003ba nwkTxBroadcastFrame
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:840    .text:000004d8 nwkTxAckReceived
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:1070   .text:00000612 nwkTxConfirm
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:1237   .text:000006e6 nwkTxConvertPhyStatus
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:1299   .text:0000071e PHY_DataConf
C:\Users\GUILHE~1\AppData\Local\Temp\cclobngN.s:1371   .text:0000077e nwkTxTaskHandler

UNDEFINED SYMBOLS
nwkIb
rand
nwkFrameAlloc
memcpy
nwkFrameNext
SYS_TimerStart
PHY_DataReq
nwkFrameFree
__do_clear_bss
