   1               		.file	"init.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               	.global	board_init
  13               	board_init:
  14               	.LFB65:
  15               		.file 1 "../../../board/KITRFA1/src/init.c"
   1:../../../board/KITRFA1/src/init.c **** /**
   2:../../../board/KITRFA1/src/init.c ****  * \file
   3:../../../board/KITRFA1/src/init.c ****  *
   4:../../../board/KITRFA1/src/init.c ****  * \brief ATMEGA256RFR2 Xplained Pro board init.
   5:../../../board/KITRFA1/src/init.c ****  *
   6:../../../board/KITRFA1/src/init.c ****  * To use this board, define BOARD=ATMEGA256RFR2_XPLAINED_PRO.
   7:../../../board/KITRFA1/src/init.c ****  *
   8:../../../board/KITRFA1/src/init.c ****  * Copyright (c) 2013 Atmel Corporation. All rights reserved.
   9:../../../board/KITRFA1/src/init.c ****  *
  10:../../../board/KITRFA1/src/init.c ****  * \asf_license_start
  11:../../../board/KITRFA1/src/init.c ****  *
  12:../../../board/KITRFA1/src/init.c ****  * \page License
  13:../../../board/KITRFA1/src/init.c ****  *
  14:../../../board/KITRFA1/src/init.c ****  * Redistribution and use in source and binary forms, with or without
  15:../../../board/KITRFA1/src/init.c ****  * modification, are permitted provided that the following conditions are met:
  16:../../../board/KITRFA1/src/init.c ****  *
  17:../../../board/KITRFA1/src/init.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  18:../../../board/KITRFA1/src/init.c ****  *    this list of conditions and the following disclaimer.
  19:../../../board/KITRFA1/src/init.c ****  *
  20:../../../board/KITRFA1/src/init.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:../../../board/KITRFA1/src/init.c ****  *    this list of conditions and the following disclaimer in the documentation
  22:../../../board/KITRFA1/src/init.c ****  *    and/or other materials provided with the distribution.
  23:../../../board/KITRFA1/src/init.c ****  *
  24:../../../board/KITRFA1/src/init.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  25:../../../board/KITRFA1/src/init.c ****  *    from this software without specific prior written permission.
  26:../../../board/KITRFA1/src/init.c ****  *
  27:../../../board/KITRFA1/src/init.c ****  * 4. This software may only be redistributed and used in connection with an
  28:../../../board/KITRFA1/src/init.c ****  *    Atmel microcontroller product.
  29:../../../board/KITRFA1/src/init.c ****  *
  30:../../../board/KITRFA1/src/init.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  31:../../../board/KITRFA1/src/init.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  32:../../../board/KITRFA1/src/init.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  33:../../../board/KITRFA1/src/init.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  34:../../../board/KITRFA1/src/init.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  35:../../../board/KITRFA1/src/init.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  36:../../../board/KITRFA1/src/init.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  37:../../../board/KITRFA1/src/init.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  38:../../../board/KITRFA1/src/init.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  39:../../../board/KITRFA1/src/init.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  40:../../../board/KITRFA1/src/init.c ****  * POSSIBILITY OF SUCH DAMAGE.
  41:../../../board/KITRFA1/src/init.c ****  *
  42:../../../board/KITRFA1/src/init.c ****  * \asf_license_stop
  43:../../../board/KITRFA1/src/init.c ****  *
  44:../../../board/KITRFA1/src/init.c ****  */
  45:../../../board/KITRFA1/src/init.c **** #include <conf_board.h>
  46:../../../board/KITRFA1/src/init.c **** #include <board.h>
  47:../../../board/KITRFA1/src/init.c **** #include <ioport.h>
  48:../../../board/KITRFA1/src/init.c **** 
  49:../../../board/KITRFA1/src/init.c **** void board_init(void)
  50:../../../board/KITRFA1/src/init.c **** {
  16               		.loc 1 50 0
  17               		.cfi_startproc
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22 0002 DF93      		push r29
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 29, -3
  26 0004 CDB7      		in r28,__SP_L__
  27 0006 DEB7      		in r29,__SP_H__
  28               	.LCFI2:
  29               		.cfi_def_cfa_register 28
  30 0008 AC97      		sbiw r28,44
  31               	.LCFI3:
  32               		.cfi_def_cfa_offset 48
  33 000a 0FB6      		in __tmp_reg__,__SREG__
  34 000c F894      		cli
  35 000e DEBF      		out __SP_H__,r29
  36 0010 0FBE      		out __SREG__,__tmp_reg__
  37 0012 CDBF      		out __SP_L__,r28
  38               	/* prologue: function */
  39               	/* frame size = 44 */
  40               	/* stack size = 46 */
  41               	.L__stack_usage = 46
  42 0014 80E3      		ldi r24,lo8(48)
  43 0016 8983      		std Y+1,r24
  44 0018 83E0      		ldi r24,lo8(3)
  45 001a 90E0      		ldi r25,0
  46 001c 9CA3      		std Y+36,r25
  47 001e 8BA3      		std Y+35,r24
  48 0020 8981      		ldd r24,Y+1
  49 0022 8DA3      		std Y+37,r24
  50               	.LBB52:
  51               	.LBB53:
  52               	.LBB54:
  53               	.LBB55:
  54               		.file 2 "../../../platform/common/services/ioport/mega_rf/ioport.h"
   1:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
   2:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \file
   3:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
   4:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief MEGA and MEGA_RF architecture specific IOPORT service implementation
   5:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * header file.
   6:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
   7:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * Copyright (c) 2012 - 2013 Atmel Corporation. All rights reserved.
   8:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
   9:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \asf_license_start
  10:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
  11:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \page License
  12:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
  13:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * Redistribution and use in source and binary forms, with or without
  14:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * modification, are permitted provided that the following conditions are met:
  15:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
  16:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  17:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *    this list of conditions and the following disclaimer.
  18:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
  19:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  20:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *    this list of conditions and the following disclaimer in the documentation
  21:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *    and/or other materials provided with the distribution.
  22:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
  23:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  24:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *    from this software without specific prior written permission.
  25:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
  26:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * 4. This software may only be redistributed and used in connection with an
  27:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *    Atmel microcontroller product.
  28:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
  29:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  30:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  31:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  32:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  33:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  35:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  36:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  37:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  38:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  39:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * POSSIBILITY OF SUCH DAMAGE.
  40:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
  41:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \asf_license_stop
  42:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
  43:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
  44:../../../platform/common/services/ioport/mega_rf/ioport.h **** #ifndef IOPORT_MEGA_RF_H
  45:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_MEGA_RF_H
  46:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
  47:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_CREATE_PIN(port, pin) ((IOPORT_ ## port) * 8 + (pin))
  48:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_BASE_ADDRESS 0x20
  49:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PORT_OFFSET  0x03
  50:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
  51:../../../platform/common/services/ioport/mega_rf/ioport.h **** /** \name IOPORT port numbers */
  52:../../../platform/common/services/ioport/mega_rf/ioport.h **** /** @{ */
  53:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
  54:../../../platform/common/services/ioport/mega_rf/ioport.h **** #if MEGA_XX0_1 || MEGA_RF || MEGA_UNSPECIFIED || MEGA_XX4 || MEGA_XX4_A
  55:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PORTA    0 /* not connected to pins for megaRF*/
  56:../../../platform/common/services/ioport/mega_rf/ioport.h **** #endif
  57:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
  58:../../../platform/common/services/ioport/mega_rf/ioport.h **** #if MEGA_XX0_1 || MEGA_RF || MEGA_UNSPECIFIED || MEGA_XX8 || MEGA_XX8_A || \
  59:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	MEGA_XX4 || MEGA_XX4_A
  60:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PORTB    1
  61:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PORTC    2 /* not connected to pins for megaRF*/
  62:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PORTD    3
  63:../../../platform/common/services/ioport/mega_rf/ioport.h **** #endif
  64:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
  65:../../../platform/common/services/ioport/mega_rf/ioport.h **** #if MEGA_XX0_1 || MEGA_RF
  66:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PORTE    4
  67:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PORTF    5
  68:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PORTG    6
  69:../../../platform/common/services/ioport/mega_rf/ioport.h **** #endif
  70:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
  71:../../../platform/common/services/ioport/mega_rf/ioport.h **** #if MEGA_XX0
  72:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PORTH    7
  73:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PORTI    8
  74:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PORTJ    9
  75:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PORTK    10
  76:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PORTL    11
  77:../../../platform/common/services/ioport/mega_rf/ioport.h **** #endif
  78:../../../platform/common/services/ioport/mega_rf/ioport.h **** /** @} */
  79:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
  80:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
  81:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \weakgroup ioport_service_group
  82:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \section ioport_modes IOPORT Modes
  83:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
  84:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * For details on these please see the megaRF Manual.
  85:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
  86:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * @{
  87:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
  88:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
  89:../../../platform/common/services/ioport/mega_rf/ioport.h **** /** \name IOPORT Mode bit definitions */
  90:../../../platform/common/services/ioport/mega_rf/ioport.h **** /** @{ */
  91:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_MODE_PULLDOWN        (0x01) /*!< Pull-down */
  92:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_MODE_PULLUP          (0x00) /*!< Pull-up */
  93:../../../platform/common/services/ioport/mega_rf/ioport.h **** /** @} */
  94:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
  95:../../../platform/common/services/ioport/mega_rf/ioport.h **** typedef uint8_t ioport_mode_t;
  96:../../../platform/common/services/ioport/mega_rf/ioport.h **** typedef uint8_t ioport_pin_t;
  97:../../../platform/common/services/ioport/mega_rf/ioport.h **** typedef uint8_t ioport_port_t;
  98:../../../platform/common/services/ioport/mega_rf/ioport.h **** typedef uint8_t ioport_port_mask_t;
  99:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 100:../../../platform/common/services/ioport/mega_rf/ioport.h **** /* I/O Ports */
 101:../../../platform/common/services/ioport/mega_rf/ioport.h **** typedef struct PORT_struct {
 102:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	volatile uint8_t PINCRL;         /* I/O Port PIN DATA READ ONLY */
 103:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	volatile uint8_t DIR;            /* I/O Port Data Direction Set */
 104:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	volatile uint8_t PORTDATA;       /* I/O Port DATA register */
 105:../../../platform/common/services/ioport/mega_rf/ioport.h **** } PORT_t;
 106:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 107:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 108:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief A pin mask
 109:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
 110:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * This type is used to describe the port pin mask on the part.
 111:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 112:../../../platform/common/services/ioport/mega_rf/ioport.h **** typedef uint8_t pin_mask_t;
 113:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 114:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 115:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief A PORT pin
 116:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
 117:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * This type is used to describe the PORT pins on the part.
 118:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 119:../../../platform/common/services/ioport/mega_rf/ioport.h **** typedef uint8_t port_pin_t;
 120:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 121:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 122:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief Pin configuration flags
 123:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
 124:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * This is a bitmask containing configuration flags for the pins that shall be
 125:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * configured.
 126:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 127:../../../platform/common/services/ioport/mega_rf/ioport.h **** typedef uint16_t port_pin_flags_t;
 128:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 129:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 130:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief A port id
 131:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
 132:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * This type is used to describe the port id on the part (0 is PORTA).
 133:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 134:../../../platform/common/services/ioport/mega_rf/ioport.h **** typedef uint8_t port_id_t;
 135:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 136:../../../platform/common/services/ioport/mega_rf/ioport.h **** /** \name Initial Output State Flags */
 137:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 138:../../../platform/common/services/ioport/mega_rf/ioport.h **** /*With Port as input port the initial status is either tri state
 139:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * or pulled high, based on PORTX value, and check the PUD value to make
 140:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * sure pull up resistance is not disabled*/
 141:../../../platform/common/services/ioport/mega_rf/ioport.h **** /** @{ */
 142:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_INIT_LOW           0 << 1  /*!< Initial Output State Low */
 143:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_INIT_HIGH          1 << 1 /*!< Initial Output State High */
 144:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 145:../../../platform/common/services/ioport/mega_rf/ioport.h **** /** @} */
 146:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 147:../../../platform/common/services/ioport/mega_rf/ioport.h **** /** \name Output and Pull Configuration Flags */
 148:../../../platform/common/services/ioport/mega_rf/ioport.h **** /** @{ */
 149:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PULL_DOWN          (0 << 2) /*!< Pull-Down (when input) */
 150:../../../platform/common/services/ioport/mega_rf/ioport.h **** #define IOPORT_PULL_UP            (1 << 2) /*!< Pull-Up (when input) */
 151:../../../platform/common/services/ioport/mega_rf/ioport.h **** /** @} */
 152:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 153:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 154:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief: To get the port number from pin nuber
 155:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: pin. the pin number defined by IOPORT_CREATE_PIN
 156:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 157:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static inline ioport_port_t arch_ioport_pin_to_port_id(
 158:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		uint8_t pin)
 159:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 160:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	return pin >> 3;
 161:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 162:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 163:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 164:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief: To get the base address of port number
 165:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: port number e.g. IOPORT_PORTB
 166:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 167:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static PORT_t *arch_ioport_port_to_base(uint8_t port)
 168:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 169:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	return (PORT_t *)((uintptr_t)(IOPORT_BASE_ADDRESS +
 170:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	       (port * IOPORT_PORT_OFFSET)));
 171:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 172:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 173:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 174:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief: To get the base address of port number from defined pin
 175:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: pin. the pin number defined by IOPORT_CREATE_PIN
 176:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 177:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static PORT_t *arch_ioport_pin_to_base(ioport_pin_t pin)
 178:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 179:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	return arch_ioport_port_to_base(pin >> 3);
 180:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 181:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 182:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 183:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief: To get the 8-bit pin mask for pin
 184:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: pin. the pin number defined by IOPORT_CREATE_PIN
 185:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 186:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static ioport_port_mask_t arch_ioport_pin_to_mask
 187:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	(ioport_pin_t pin)
 188:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 189:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	return 1U << (pin & 0x07);
  55               		.loc 2 189 0
  56 0024 8DA1      		ldd r24,Y+37
  57 0026 882F      		mov r24,r24
  58 0028 90E0      		ldi r25,0
  59 002a 9C01      		movw r18,r24
  60 002c 2770      		andi r18,7
  61 002e 3327      		clr r19
  62 0030 81E0      		ldi r24,lo8(1)
  63 0032 90E0      		ldi r25,0
  64 0034 00C0      		rjmp 2f
  65               		1:
  66 0036 880F      		lsl r24
  67 0038 991F      		rol r25
  68               		2:
  69 003a 2A95      		dec r18
  70 003c 02F4      		brpl 1b
  71 003e 482F      		mov r20,r24
  72 0040 8981      		ldd r24,Y+1
  73 0042 8EA3      		std Y+38,r24
  74               	.LBE55:
  75               	.LBE54:
  76               	.LBB56:
  77               	.LBB57:
 179:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
  78               		.loc 2 179 0
  79 0044 8EA1      		ldd r24,Y+38
  80 0046 8695      		lsr r24
  81 0048 8695      		lsr r24
  82 004a 8695      		lsr r24
  83 004c 8FA3      		std Y+39,r24
  84               	.LBB58:
  85               	.LBB59:
 170:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
  86               		.loc 2 170 0
  87 004e 8FA1      		ldd r24,Y+39
  88 0050 282F      		mov r18,r24
  89 0052 30E0      		ldi r19,0
  90 0054 C901      		movw r24,r18
  91 0056 880F      		lsl r24
  92 0058 991F      		rol r25
  93 005a 820F      		add r24,r18
  94 005c 931F      		adc r25,r19
 169:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	       (port * IOPORT_PORT_OFFSET)));
  95               		.loc 2 169 0
  96 005e 8096      		adiw r24,32
  97 0060 99A7      		std Y+41,r25
  98 0062 88A7      		std Y+40,r24
  99 0064 4AA7      		std Y+42,r20
 100 0066 8BA1      		ldd r24,Y+35
 101 0068 9CA1      		ldd r25,Y+36
 102 006a 9CA7      		std Y+44,r25
 103 006c 8BA7      		std Y+43,r24
 104               	.LBE59:
 105               	.LBE58:
 106               	.LBE57:
 107               	.LBE56:
 108               	.LBB60:
 109               	.LBB61:
 190:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 191:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 192:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 193:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief Set multiple pin modes in a single GPIO port, such as pull-up,
 194:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * pull-down, etc. configuration.
 195:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
 196:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param port GPIO port to configure  e.g. IOPORT_PORTB
 197:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param mask Pin mask of pins to configure
 198:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param mode Mode masks to configure for the specified pins (\ref
 199:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * ioport_modes)
 200:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 201:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_set_port_mode(ioport_port_t port,
 202:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		ioport_port_mask_t mask, ioport_mode_t mode)
 203:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 204:../../../platform/common/services/ioport/mega_rf/ioport.h **** #ifdef MEGA_RF
 205:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	PORT_t *base = arch_ioport_port_to_base(port);
 206:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	if (mode == IOPORT_MODE_PULLUP) {
 207:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		base->PORTDATA = mask;
 208:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	} else if (mode == IOPORT_MODE_PULLDOWN) {
 209:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		base->PORTDATA = ~mask;
 210:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	}
 211:../../../platform/common/services/ioport/mega_rf/ioport.h **** #endif
 212:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 213:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 214:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 215:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief Set multiple pin modes in a single GPIO port, such as pull-up,
 216:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * pull-down, etc. configuration.
 217:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
 218:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: pin. the pin number defined by IOPORT_CREATE_PIN
 219:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param mask Pin mask of pins to configure
 220:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param mode Mode masks to configure for the specified pins (\ref
 221:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * ioport_modes)
 222:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 223:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_set_pin_mode(ioport_pin_t pin,
 224:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		ioport_mode_t mode)
 225:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 226:../../../platform/common/services/ioport/mega_rf/ioport.h **** #ifdef MEGA_RF
 227:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	PORT_t *base = arch_ioport_pin_to_base(pin);
 228:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	ioport_pin_t mask_pin = arch_ioport_pin_to_mask(pin);
 229:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	if (mode == IOPORT_MODE_PULLUP) {
 230:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		base->PORTDATA |=  mask_pin;
 231:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	} else if (mode == IOPORT_MODE_PULLDOWN) {
 232:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		base->PORTDATA &= ~mask_pin;
 233:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	}
 234:../../../platform/common/services/ioport/mega_rf/ioport.h **** #endif
 235:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 236:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 237:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 238:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief : Set port direction as input or output.
 239:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param port GPIO port to configure  e.g. IOPORT_PORTB
 240:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param mask Pin mask of pins to configure
 241:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param mode dir, \refer ioport_direction
 242:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 243:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_set_port_dir(ioport_port_t port,
 244:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		ioport_port_mask_t mask, enum ioport_direction dir)
 245:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 246:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	PORT_t *base = arch_ioport_port_to_base(port);
 247:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 248:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	if (dir == IOPORT_DIR_OUTPUT) {
 249:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		base->DIR = mask;
 250:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	} else if (dir == IOPORT_DIR_INPUT) {
 251:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		base->DIR = ~mask;
 252:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	}
 253:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 254:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 255:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 256:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief : Set pin direction as input or output.
 257:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: pin. the pin number defined by IOPORT_CREATE_PIN
 258:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param mask Pin mask of pins to configure
 259:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param mode dir, \refer ioport_direction
 260:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 261:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_set_pin_dir(ioport_pin_t pin,
 262:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		enum ioport_direction dir)
 263:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 264:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	PORT_t *base = arch_ioport_pin_to_base(pin);
 265:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 266:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	if (dir == IOPORT_DIR_OUTPUT) {
 267:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		base->DIR |= arch_ioport_pin_to_mask(pin);
 268:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	} else if (dir == IOPORT_DIR_INPUT) {
 269:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		base->DIR &=  ~arch_ioport_pin_to_mask(pin);
 270:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	}
 271:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 272:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 273:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 274:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief : Set pin level to high or low.
 275:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: pin. the pin number defined by IOPORT_CREATE_PIN
 276:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: level high/low
 277:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 278:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
 279:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		bool level)
 280:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 281:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	PORT_t *base_add = arch_ioport_port_to_base(pin >> 3);
 282:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 283:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	if (level) {
 284:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		base_add->PORTDATA
 285:../../../platform/common/services/ioport/mega_rf/ioport.h **** 			= (base_add->PORTDATA  | arch_ioport_pin_to_mask
 286:../../../platform/common/services/ioport/mega_rf/ioport.h **** 					(pin));
 287:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	} else {
 288:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		base_add->PORTDATA
 289:../../../platform/common/services/ioport/mega_rf/ioport.h **** 			= (base_add->PORTDATA  & (~arch_ioport_pin_to_mask
 290:../../../platform/common/services/ioport/mega_rf/ioport.h **** 					(pin)));
 291:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	}
 292:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 293:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 294:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 295:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief : Set port multiple pins level to high or low.
 296:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param port GPIO port to configure  e.g. IOPORT_PORTB
 297:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: mask Pin mask of pins to configure.
 298:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: level high/low
 299:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 300:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_set_port_level(ioport_port_t port,
 301:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		ioport_port_mask_t mask, ioport_port_mask_t level)
 302:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 303:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	PORT_t *base = arch_ioport_port_to_base(port);
 304:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 305:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	if (level) {
 306:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		base->PORTDATA |= mask;
 307:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	} else {
 308:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		base->PORTDATA &= ~mask;
 309:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	}
 310:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 311:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 312:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 313:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief : Get pin level of pin.
 314:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: pin. the pin number defined by IOPORT_CREATE_PIN
 315:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \return: level high/low
 316:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 317:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
 318:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 319:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	PORT_t *base = arch_ioport_pin_to_base(pin);
 320:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	return base->PINCRL & arch_ioport_pin_to_mask(pin);
 321:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 322:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 323:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 324:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief : Get multiple pins level of single port.
 325:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param port GPIO port to configure  e.g. IOPORT_PORTB
 326:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param mask Pin mask of pins to read data.
 327:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \return: 8 bit value based on level voltage on pins.
 328:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 329:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static ioport_port_mask_t arch_ioport_get_port_level(
 330:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		ioport_port_t port, ioport_port_mask_t mask)
 331:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 332:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	PORT_t *base = arch_ioport_port_to_base(port);
 333:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 334:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	return (base->PINCRL & mask);
 335:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 336:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 337:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 338:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief : To toggle the pin
 339:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: pin. the pin number defined by IOPORT_CREATE_PIN
 340:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 341:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_toggle_pin_level(ioport_pin_t pin)
 342:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 343:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	PORT_t *base = arch_ioport_pin_to_base(pin);
 344:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 345:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	base->PINCRL = arch_ioport_pin_to_mask(pin);
 346:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 347:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 348:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 349:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief : To toggle the multiple pins on a single port.
 350:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param port GPIO port to toggle  e.g. IOPORT_PORTB
 351:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param mask Pin mask of pins to read data.
 352:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 353:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 354:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_toggle_port_level(ioport_port_t port,
 355:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		ioport_port_mask_t mask)
 356:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 357:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	PORT_t *base = arch_ioport_port_to_base(port);
 358:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 359:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	base->PINCRL = mask;
 360:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 361:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 362:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 363:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief : To configure a single GPIO pin for trigger modes:
 364:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *  sense the edge/level/both trigger.
 365:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: pin. the pin number defined by IOPORT_CREATE_PIN
 366:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param pin_sense, refer to \ioport_sense.
 367:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 368:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 369:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_set_pin_sense_mode(ioport_pin_t pin,
 370:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		enum ioport_sense pin_sense)
 371:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 372:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	uint8_t flags = cpu_irq_save();
 373:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	port_id_t port_id = arch_ioport_pin_to_port_id(pin);
 374:../../../platform/common/services/ioport/mega_rf/ioport.h **** #if  MEGA_XX0_1 || MEGA_RF
 375:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	if (port_id == IOPORT_PORTD && ((pin & 0x07) < 0x04)) {
 376:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRA &= ~((0x03) << ((pin & 0x03) * 2));
 377:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRA |= pin_sense << ((pin & 0x03) * 2);
 378:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	} else if (port_id == IOPORT_PORTE && ((pin & 0x07) > 0x03)) {
 379:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRB &= ~((0x03) << ((pin & 0x03) * 2));
 380:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRB |= pin_sense << ((pin & 0x03) * 2);
 381:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	}
 382:../../../platform/common/services/ioport/mega_rf/ioport.h **** #endif
 383:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 384:../../../platform/common/services/ioport/mega_rf/ioport.h **** #if  MEGA_XX8
 385:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	if (port_id == IOPORT_PORTD &&
 386:../../../platform/common/services/ioport/mega_rf/ioport.h **** 			((pin & 0x07) == 2 || (pin & 0x07) == 3)) {
 387:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRA &= ~((0x03) << (((pin & 0x03) - 2) * 2));
 388:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRA |= pin_sense << (((pin & 0x03) - 2) * 2);
 389:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	}
 390:../../../platform/common/services/ioport/mega_rf/ioport.h **** #endif
 391:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 392:../../../platform/common/services/ioport/mega_rf/ioport.h **** #if  MEGA_XX4
 393:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	if (port_id == IOPORT_PORTD &&
 394:../../../platform/common/services/ioport/mega_rf/ioport.h **** 			((pin & 0x07) == 2 || (pin & 0x07) == 3)) {
 395:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRA &= ~((0x03) << (((pin & 0x03) - 2) * 2));
 396:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRA |= pin_sense << (((pin & 0x03) - 2) * 2);
 397:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	}
 398:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 399:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	if (port_id == IOPORT_PORTB && ((pin & 0x07) == 2)) {
 400:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRA &= ~((0x03) << 4);
 401:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRA |= pin_sense << 4;
 402:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	}
 403:../../../platform/common/services/ioport/mega_rf/ioport.h **** #endif
 404:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	cpu_irq_restore(flags);
 405:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 406:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 407:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 408:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief : To configure a multiple pins for trigger modes: sense the edge/
 409:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *  level/both trigger.
 410:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: pin. the pin number defined by IOPORT_CREATE_PIN
 411:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param pin_sense, refer to \ioport_sense.
 412:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 413:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_set_port_sense_mode(ioport_port_t port,
 414:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		ioport_port_mask_t mask, enum ioport_sense pin_sense)
 415:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 416:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	uint8_t flags = cpu_irq_save();
 417:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 418:../../../platform/common/services/ioport/mega_rf/ioport.h **** #if  !MEGA_UNSPECIFIED
 419:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	if (port == IOPORT_PORTD) {
 420:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRA =  mask;
 421:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRA &= (pin_sense << 6) || (pin_sense << 4) ||
 422:../../../platform/common/services/ioport/mega_rf/ioport.h **** 				(pin_sense << 2) ||
 423:../../../platform/common/services/ioport/mega_rf/ioport.h **** 				(pin_sense);
 424:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	}
 425:../../../platform/common/services/ioport/mega_rf/ioport.h **** #endif
 426:../../../platform/common/services/ioport/mega_rf/ioport.h **** #if  MEGA_XX8
 427:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	if (port == IOPORT_PORTD) {
 428:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRA = mask;
 429:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRA &= (pin_sense << 2) || (pin_sense);
 430:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	}
 431:../../../platform/common/services/ioport/mega_rf/ioport.h **** #endif
 432:../../../platform/common/services/ioport/mega_rf/ioport.h **** #if  MEGA_XX0_1 || MEGA_RF
 433:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	else if (port == IOPORT_PORTE) {
 434:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRB = mask;
 435:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		EICRB &= (pin_sense << 6) || (pin_sense << 4) ||
 436:../../../platform/common/services/ioport/mega_rf/ioport.h **** 				(pin_sense << 2) ||
 437:../../../platform/common/services/ioport/mega_rf/ioport.h **** 				(pin_sense);
 438:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	}
 439:../../../platform/common/services/ioport/mega_rf/ioport.h **** #endif
 440:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 441:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	cpu_irq_restore(flags);
 442:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 443:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 444:../../../platform/common/services/ioport/mega_rf/ioport.h **** /****************************************************************************
 445:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
 446:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * Functional register are not available for this architecture through
 447:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * IOPORT register.
 448:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
 449:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *****************************************************************************/
 450:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_init(void)
 451:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 452:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 453:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 454:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_enable_pin(ioport_pin_t pin)
 455:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 456:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	(void) pin;
 457:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 458:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 459:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_enable_port(ioport_port_t port,
 460:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		ioport_port_mask_t mask)
 461:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 462:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	(void) port;
 463:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	(void) mask;
 464:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 465:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 466:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_disable_pin(ioport_pin_t pin)
 467:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 468:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	(void) pin;
 469:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 470:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 471:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static void arch_ioport_disable_port(ioport_port_t port,
 472:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		ioport_port_mask_t mask)
 473:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 474:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	(void) port;
 475:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	(void) mask;
 476:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 477:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 478:../../../platform/common/services/ioport/mega_rf/ioport.h **** /****************************************************************************/
 479:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 480:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 481:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief : To get the port address pointer from pin
 482:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param: pin. the pin number defined by IOPORT_CREATE_PIN
 483:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \return pointer to base address of ports(8 bit)
 484:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 485:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static inline PORT_t *ioport_pin_to_port(port_pin_t pin)
 486:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 487:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	return arch_ioport_pin_to_base(pin);
 488:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 489:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 490:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 491:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief : To get the port address pointer from port number
 492:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param port GPIO port to toggle  e.g. IOPORT_PORTB
 493:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \return pointer to base address of ports(8 bit)
 494:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 495:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 496:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static inline PORT_t *ioport_id_pin_to_port(port_id_t port)
 497:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 498:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	return arch_ioport_port_to_base(port);
 499:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 500:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 501:../../../platform/common/services/ioport/mega_rf/ioport.h **** /**
 502:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \brief Configure the IO PORT pin function for a set of pins on a port
 503:../../../platform/common/services/ioport/mega_rf/ioport.h ****  *
 504:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param port Pointer to the port
 505:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param pin_mask Mask containing the pins that should be configured
 506:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * \param flags Bitmask of flags specifying additional configuration
 507:../../../platform/common/services/ioport/mega_rf/ioport.h ****  * parameters.
 508:../../../platform/common/services/ioport/mega_rf/ioport.h ****  */
 509:../../../platform/common/services/ioport/mega_rf/ioport.h **** __always_inline static inline void ioport_configure_port_pin(void *port,
 510:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		pin_mask_t pin_mask,
 511:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		port_pin_flags_t flags)
 512:../../../platform/common/services/ioport/mega_rf/ioport.h **** {
 513:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	/* Select direction and initial pin state */
 514:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	if (flags & IOPORT_DIR_OUTPUT) {
 110               		.loc 2 514 0
 111 006e 8BA5      		ldd r24,Y+43
 112 0070 9CA5      		ldd r25,Y+44
 113 0072 8170      		andi r24,1
 114 0074 9927      		clr r25
 115 0076 892B      		or r24,r25
 116 0078 01F0      		breq .L5
 515:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		if (flags & IOPORT_INIT_HIGH) {
 117               		.loc 2 515 0
 118 007a 8BA5      		ldd r24,Y+43
 119 007c 9CA5      		ldd r25,Y+44
 120 007e 8270      		andi r24,2
 121 0080 9927      		clr r25
 122 0082 892B      		or r24,r25
 123 0084 01F0      		breq .L6
 516:../../../platform/common/services/ioport/mega_rf/ioport.h **** 			*((uint8_t *)port + 2) |= pin_mask;
 124               		.loc 2 516 0
 125 0086 88A5      		ldd r24,Y+40
 126 0088 99A5      		ldd r25,Y+41
 127 008a 0296      		adiw r24,2
 128 008c 28A5      		ldd r18,Y+40
 129 008e 39A5      		ldd r19,Y+41
 130 0090 2E5F      		subi r18,-2
 131 0092 3F4F      		sbci r19,-1
 132 0094 F901      		movw r30,r18
 133 0096 3081      		ld r19,Z
 134 0098 2AA5      		ldd r18,Y+42
 135 009a 232B      		or r18,r19
 136 009c FC01      		movw r30,r24
 137 009e 2083      		st Z,r18
 138 00a0 00C0      		rjmp .L7
 139               	.L6:
 517:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		} else {
 518:../../../platform/common/services/ioport/mega_rf/ioport.h **** 			*((uint8_t *)port + 2) &= ~pin_mask;
 140               		.loc 2 518 0
 141 00a2 88A5      		ldd r24,Y+40
 142 00a4 99A5      		ldd r25,Y+41
 143 00a6 0296      		adiw r24,2
 144 00a8 28A5      		ldd r18,Y+40
 145 00aa 39A5      		ldd r19,Y+41
 146 00ac 2E5F      		subi r18,-2
 147 00ae 3F4F      		sbci r19,-1
 148 00b0 F901      		movw r30,r18
 149 00b2 2081      		ld r18,Z
 150 00b4 322F      		mov r19,r18
 151 00b6 2AA5      		ldd r18,Y+42
 152 00b8 2095      		com r18
 153 00ba 2323      		and r18,r19
 154 00bc FC01      		movw r30,r24
 155 00be 2083      		st Z,r18
 156               	.L7:
 519:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		}
 520:../../../platform/common/services/ioport/mega_rf/ioport.h **** 
 521:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		*((uint8_t *)port + 1) |= pin_mask;
 157               		.loc 2 521 0
 158 00c0 88A5      		ldd r24,Y+40
 159 00c2 99A5      		ldd r25,Y+41
 160 00c4 0196      		adiw r24,1
 161 00c6 28A5      		ldd r18,Y+40
 162 00c8 39A5      		ldd r19,Y+41
 163 00ca 2F5F      		subi r18,-1
 164 00cc 3F4F      		sbci r19,-1
 165 00ce F901      		movw r30,r18
 166 00d0 3081      		ld r19,Z
 167 00d2 2AA5      		ldd r18,Y+42
 168 00d4 232B      		or r18,r19
 169 00d6 FC01      		movw r30,r24
 170 00d8 2083      		st Z,r18
 171 00da 00C0      		rjmp .L8
 172               	.L5:
 522:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	} else {
 523:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		*((uint8_t *)port + 1) &= ~pin_mask;
 173               		.loc 2 523 0
 174 00dc 88A5      		ldd r24,Y+40
 175 00de 99A5      		ldd r25,Y+41
 176 00e0 0196      		adiw r24,1
 177 00e2 28A5      		ldd r18,Y+40
 178 00e4 39A5      		ldd r19,Y+41
 179 00e6 2F5F      		subi r18,-1
 180 00e8 3F4F      		sbci r19,-1
 181 00ea F901      		movw r30,r18
 182 00ec 2081      		ld r18,Z
 183 00ee 322F      		mov r19,r18
 184 00f0 2AA5      		ldd r18,Y+42
 185 00f2 2095      		com r18
 186 00f4 2323      		and r18,r19
 187 00f6 FC01      		movw r30,r24
 188 00f8 2083      		st Z,r18
 524:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		if (flags & IOPORT_PULL_UP) {
 189               		.loc 2 524 0
 190 00fa 8BA5      		ldd r24,Y+43
 191 00fc 9CA5      		ldd r25,Y+44
 192 00fe 8470      		andi r24,4
 193 0100 9927      		clr r25
 194 0102 892B      		or r24,r25
 195 0104 01F0      		breq .L9
 525:../../../platform/common/services/ioport/mega_rf/ioport.h **** 			*((uint8_t *)port + 2) |= pin_mask;
 196               		.loc 2 525 0
 197 0106 88A5      		ldd r24,Y+40
 198 0108 99A5      		ldd r25,Y+41
 199 010a 0296      		adiw r24,2
 200 010c 28A5      		ldd r18,Y+40
 201 010e 39A5      		ldd r19,Y+41
 202 0110 2E5F      		subi r18,-2
 203 0112 3F4F      		sbci r19,-1
 204 0114 F901      		movw r30,r18
 205 0116 3081      		ld r19,Z
 206 0118 2AA5      		ldd r18,Y+42
 207 011a 232B      		or r18,r19
 208 011c FC01      		movw r30,r24
 209 011e 2083      		st Z,r18
 210 0120 00C0      		rjmp .L8
 211               	.L9:
 526:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		} else {
 527:../../../platform/common/services/ioport/mega_rf/ioport.h **** 			*((uint8_t *)port + 2) &= ~pin_mask;
 212               		.loc 2 527 0
 213 0122 88A5      		ldd r24,Y+40
 214 0124 99A5      		ldd r25,Y+41
 215 0126 0296      		adiw r24,2
 216 0128 28A5      		ldd r18,Y+40
 217 012a 39A5      		ldd r19,Y+41
 218 012c 2E5F      		subi r18,-2
 219 012e 3F4F      		sbci r19,-1
 220 0130 F901      		movw r30,r18
 221 0132 2081      		ld r18,Z
 222 0134 322F      		mov r19,r18
 223 0136 2AA5      		ldd r18,Y+42
 224 0138 2095      		com r18
 225 013a 2323      		and r18,r19
 226 013c FC01      		movw r30,r24
 227 013e 2083      		st Z,r18
 228               	.L8:
 229 0140 81E3      		ldi r24,lo8(49)
 230 0142 8A83      		std Y+2,r24
 231 0144 83E0      		ldi r24,lo8(3)
 232 0146 90E0      		ldi r25,0
 233 0148 9A8F      		std Y+26,r25
 234 014a 898F      		std Y+25,r24
 235 014c 8A81      		ldd r24,Y+2
 236 014e 8B8F      		std Y+27,r24
 237               	.LBE61:
 238               	.LBE60:
 239               	.LBE53:
 240               	.LBE52:
 241               	.LBB62:
 242               	.LBB63:
 243               	.LBB64:
 244               	.LBB65:
 189:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 245               		.loc 2 189 0
 246 0150 8B8D      		ldd r24,Y+27
 247 0152 882F      		mov r24,r24
 248 0154 90E0      		ldi r25,0
 249 0156 9C01      		movw r18,r24
 250 0158 2770      		andi r18,7
 251 015a 3327      		clr r19
 252 015c 81E0      		ldi r24,lo8(1)
 253 015e 90E0      		ldi r25,0
 254 0160 00C0      		rjmp 2f
 255               		1:
 256 0162 880F      		lsl r24
 257 0164 991F      		rol r25
 258               		2:
 259 0166 2A95      		dec r18
 260 0168 02F4      		brpl 1b
 261 016a 482F      		mov r20,r24
 262 016c 8A81      		ldd r24,Y+2
 263 016e 8C8F      		std Y+28,r24
 264               	.LBE65:
 265               	.LBE64:
 266               	.LBB66:
 267               	.LBB67:
 179:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 268               		.loc 2 179 0
 269 0170 8C8D      		ldd r24,Y+28
 270 0172 8695      		lsr r24
 271 0174 8695      		lsr r24
 272 0176 8695      		lsr r24
 273 0178 8D8F      		std Y+29,r24
 274               	.LBB68:
 275               	.LBB69:
 170:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 276               		.loc 2 170 0
 277 017a 8D8D      		ldd r24,Y+29
 278 017c 282F      		mov r18,r24
 279 017e 30E0      		ldi r19,0
 280 0180 C901      		movw r24,r18
 281 0182 880F      		lsl r24
 282 0184 991F      		rol r25
 283 0186 820F      		add r24,r18
 284 0188 931F      		adc r25,r19
 169:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	       (port * IOPORT_PORT_OFFSET)));
 285               		.loc 2 169 0
 286 018a 8096      		adiw r24,32
 287 018c 9F8F      		std Y+31,r25
 288 018e 8E8F      		std Y+30,r24
 289 0190 48A3      		std Y+32,r20
 290 0192 898D      		ldd r24,Y+25
 291 0194 9A8D      		ldd r25,Y+26
 292 0196 9AA3      		std Y+34,r25
 293 0198 89A3      		std Y+33,r24
 294               	.LBE69:
 295               	.LBE68:
 296               	.LBE67:
 297               	.LBE66:
 298               	.LBB70:
 299               	.LBB71:
 514:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		if (flags & IOPORT_INIT_HIGH) {
 300               		.loc 2 514 0
 301 019a 89A1      		ldd r24,Y+33
 302 019c 9AA1      		ldd r25,Y+34
 303 019e 8170      		andi r24,1
 304 01a0 9927      		clr r25
 305 01a2 892B      		or r24,r25
 306 01a4 01F0      		breq .L13
 515:../../../platform/common/services/ioport/mega_rf/ioport.h **** 			*((uint8_t *)port + 2) |= pin_mask;
 307               		.loc 2 515 0
 308 01a6 89A1      		ldd r24,Y+33
 309 01a8 9AA1      		ldd r25,Y+34
 310 01aa 8270      		andi r24,2
 311 01ac 9927      		clr r25
 312 01ae 892B      		or r24,r25
 313 01b0 01F0      		breq .L14
 516:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		} else {
 314               		.loc 2 516 0
 315 01b2 8E8D      		ldd r24,Y+30
 316 01b4 9F8D      		ldd r25,Y+31
 317 01b6 0296      		adiw r24,2
 318 01b8 2E8D      		ldd r18,Y+30
 319 01ba 3F8D      		ldd r19,Y+31
 320 01bc 2E5F      		subi r18,-2
 321 01be 3F4F      		sbci r19,-1
 322 01c0 F901      		movw r30,r18
 323 01c2 3081      		ld r19,Z
 324 01c4 28A1      		ldd r18,Y+32
 325 01c6 232B      		or r18,r19
 326 01c8 FC01      		movw r30,r24
 327 01ca 2083      		st Z,r18
 328 01cc 00C0      		rjmp .L15
 329               	.L14:
 518:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		}
 330               		.loc 2 518 0
 331 01ce 8E8D      		ldd r24,Y+30
 332 01d0 9F8D      		ldd r25,Y+31
 333 01d2 0296      		adiw r24,2
 334 01d4 2E8D      		ldd r18,Y+30
 335 01d6 3F8D      		ldd r19,Y+31
 336 01d8 2E5F      		subi r18,-2
 337 01da 3F4F      		sbci r19,-1
 338 01dc F901      		movw r30,r18
 339 01de 2081      		ld r18,Z
 340 01e0 322F      		mov r19,r18
 341 01e2 28A1      		ldd r18,Y+32
 342 01e4 2095      		com r18
 343 01e6 2323      		and r18,r19
 344 01e8 FC01      		movw r30,r24
 345 01ea 2083      		st Z,r18
 346               	.L15:
 521:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	} else {
 347               		.loc 2 521 0
 348 01ec 8E8D      		ldd r24,Y+30
 349 01ee 9F8D      		ldd r25,Y+31
 350 01f0 0196      		adiw r24,1
 351 01f2 2E8D      		ldd r18,Y+30
 352 01f4 3F8D      		ldd r19,Y+31
 353 01f6 2F5F      		subi r18,-1
 354 01f8 3F4F      		sbci r19,-1
 355 01fa F901      		movw r30,r18
 356 01fc 3081      		ld r19,Z
 357 01fe 28A1      		ldd r18,Y+32
 358 0200 232B      		or r18,r19
 359 0202 FC01      		movw r30,r24
 360 0204 2083      		st Z,r18
 361 0206 00C0      		rjmp .L16
 362               	.L13:
 523:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		if (flags & IOPORT_PULL_UP) {
 363               		.loc 2 523 0
 364 0208 8E8D      		ldd r24,Y+30
 365 020a 9F8D      		ldd r25,Y+31
 366 020c 0196      		adiw r24,1
 367 020e 2E8D      		ldd r18,Y+30
 368 0210 3F8D      		ldd r19,Y+31
 369 0212 2F5F      		subi r18,-1
 370 0214 3F4F      		sbci r19,-1
 371 0216 F901      		movw r30,r18
 372 0218 2081      		ld r18,Z
 373 021a 322F      		mov r19,r18
 374 021c 28A1      		ldd r18,Y+32
 375 021e 2095      		com r18
 376 0220 2323      		and r18,r19
 377 0222 FC01      		movw r30,r24
 378 0224 2083      		st Z,r18
 524:../../../platform/common/services/ioport/mega_rf/ioport.h **** 			*((uint8_t *)port + 2) |= pin_mask;
 379               		.loc 2 524 0
 380 0226 89A1      		ldd r24,Y+33
 381 0228 9AA1      		ldd r25,Y+34
 382 022a 8470      		andi r24,4
 383 022c 9927      		clr r25
 384 022e 892B      		or r24,r25
 385 0230 01F0      		breq .L17
 525:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		} else {
 386               		.loc 2 525 0
 387 0232 8E8D      		ldd r24,Y+30
 388 0234 9F8D      		ldd r25,Y+31
 389 0236 0296      		adiw r24,2
 390 0238 2E8D      		ldd r18,Y+30
 391 023a 3F8D      		ldd r19,Y+31
 392 023c 2E5F      		subi r18,-2
 393 023e 3F4F      		sbci r19,-1
 394 0240 F901      		movw r30,r18
 395 0242 3081      		ld r19,Z
 396 0244 28A1      		ldd r18,Y+32
 397 0246 232B      		or r18,r19
 398 0248 FC01      		movw r30,r24
 399 024a 2083      		st Z,r18
 400 024c 00C0      		rjmp .L16
 401               	.L17:
 402               		.loc 2 527 0
 403 024e 8E8D      		ldd r24,Y+30
 404 0250 9F8D      		ldd r25,Y+31
 405 0252 0296      		adiw r24,2
 406 0254 2E8D      		ldd r18,Y+30
 407 0256 3F8D      		ldd r19,Y+31
 408 0258 2E5F      		subi r18,-2
 409 025a 3F4F      		sbci r19,-1
 410 025c F901      		movw r30,r18
 411 025e 2081      		ld r18,Z
 412 0260 322F      		mov r19,r18
 413 0262 28A1      		ldd r18,Y+32
 414 0264 2095      		com r18
 415 0266 2323      		and r18,r19
 416 0268 FC01      		movw r30,r24
 417 026a 2083      		st Z,r18
 418               	.L16:
 419 026c 85E3      		ldi r24,lo8(53)
 420 026e 8B83      		std Y+3,r24
 421 0270 83E0      		ldi r24,lo8(3)
 422 0272 90E0      		ldi r25,0
 423 0274 988B      		std Y+16,r25
 424 0276 8F87      		std Y+15,r24
 425 0278 8B81      		ldd r24,Y+3
 426 027a 898B      		std Y+17,r24
 427               	.LBE71:
 428               	.LBE70:
 429               	.LBE63:
 430               	.LBE62:
 431               	.LBB72:
 432               	.LBB73:
 433               	.LBB74:
 434               	.LBB75:
 189:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 435               		.loc 2 189 0
 436 027c 8989      		ldd r24,Y+17
 437 027e 882F      		mov r24,r24
 438 0280 90E0      		ldi r25,0
 439 0282 9C01      		movw r18,r24
 440 0284 2770      		andi r18,7
 441 0286 3327      		clr r19
 442 0288 81E0      		ldi r24,lo8(1)
 443 028a 90E0      		ldi r25,0
 444 028c 00C0      		rjmp 2f
 445               		1:
 446 028e 880F      		lsl r24
 447 0290 991F      		rol r25
 448               		2:
 449 0292 2A95      		dec r18
 450 0294 02F4      		brpl 1b
 451 0296 482F      		mov r20,r24
 452 0298 8B81      		ldd r24,Y+3
 453 029a 8A8B      		std Y+18,r24
 454               	.LBE75:
 455               	.LBE74:
 456               	.LBB76:
 457               	.LBB77:
 179:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 458               		.loc 2 179 0
 459 029c 8A89      		ldd r24,Y+18
 460 029e 8695      		lsr r24
 461 02a0 8695      		lsr r24
 462 02a2 8695      		lsr r24
 463 02a4 8B8B      		std Y+19,r24
 464               	.LBB78:
 465               	.LBB79:
 170:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 466               		.loc 2 170 0
 467 02a6 8B89      		ldd r24,Y+19
 468 02a8 282F      		mov r18,r24
 469 02aa 30E0      		ldi r19,0
 470 02ac C901      		movw r24,r18
 471 02ae 880F      		lsl r24
 472 02b0 991F      		rol r25
 473 02b2 820F      		add r24,r18
 474 02b4 931F      		adc r25,r19
 169:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	       (port * IOPORT_PORT_OFFSET)));
 475               		.loc 2 169 0
 476 02b6 8096      		adiw r24,32
 477 02b8 9D8B      		std Y+21,r25
 478 02ba 8C8B      		std Y+20,r24
 479 02bc 4E8B      		std Y+22,r20
 480 02be 8F85      		ldd r24,Y+15
 481 02c0 9889      		ldd r25,Y+16
 482 02c2 988F      		std Y+24,r25
 483 02c4 8F8B      		std Y+23,r24
 484               	.LBE79:
 485               	.LBE78:
 486               	.LBE77:
 487               	.LBE76:
 488               	.LBB80:
 489               	.LBB81:
 514:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		if (flags & IOPORT_INIT_HIGH) {
 490               		.loc 2 514 0
 491 02c6 8F89      		ldd r24,Y+23
 492 02c8 988D      		ldd r25,Y+24
 493 02ca 8170      		andi r24,1
 494 02cc 9927      		clr r25
 495 02ce 892B      		or r24,r25
 496 02d0 01F0      		breq .L21
 515:../../../platform/common/services/ioport/mega_rf/ioport.h **** 			*((uint8_t *)port + 2) |= pin_mask;
 497               		.loc 2 515 0
 498 02d2 8F89      		ldd r24,Y+23
 499 02d4 988D      		ldd r25,Y+24
 500 02d6 8270      		andi r24,2
 501 02d8 9927      		clr r25
 502 02da 892B      		or r24,r25
 503 02dc 01F0      		breq .L22
 516:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		} else {
 504               		.loc 2 516 0
 505 02de 8C89      		ldd r24,Y+20
 506 02e0 9D89      		ldd r25,Y+21
 507 02e2 0296      		adiw r24,2
 508 02e4 2C89      		ldd r18,Y+20
 509 02e6 3D89      		ldd r19,Y+21
 510 02e8 2E5F      		subi r18,-2
 511 02ea 3F4F      		sbci r19,-1
 512 02ec F901      		movw r30,r18
 513 02ee 3081      		ld r19,Z
 514 02f0 2E89      		ldd r18,Y+22
 515 02f2 232B      		or r18,r19
 516 02f4 FC01      		movw r30,r24
 517 02f6 2083      		st Z,r18
 518 02f8 00C0      		rjmp .L23
 519               	.L22:
 518:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		}
 520               		.loc 2 518 0
 521 02fa 8C89      		ldd r24,Y+20
 522 02fc 9D89      		ldd r25,Y+21
 523 02fe 0296      		adiw r24,2
 524 0300 2C89      		ldd r18,Y+20
 525 0302 3D89      		ldd r19,Y+21
 526 0304 2E5F      		subi r18,-2
 527 0306 3F4F      		sbci r19,-1
 528 0308 F901      		movw r30,r18
 529 030a 2081      		ld r18,Z
 530 030c 322F      		mov r19,r18
 531 030e 2E89      		ldd r18,Y+22
 532 0310 2095      		com r18
 533 0312 2323      		and r18,r19
 534 0314 FC01      		movw r30,r24
 535 0316 2083      		st Z,r18
 536               	.L23:
 521:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	} else {
 537               		.loc 2 521 0
 538 0318 8C89      		ldd r24,Y+20
 539 031a 9D89      		ldd r25,Y+21
 540 031c 0196      		adiw r24,1
 541 031e 2C89      		ldd r18,Y+20
 542 0320 3D89      		ldd r19,Y+21
 543 0322 2F5F      		subi r18,-1
 544 0324 3F4F      		sbci r19,-1
 545 0326 F901      		movw r30,r18
 546 0328 3081      		ld r19,Z
 547 032a 2E89      		ldd r18,Y+22
 548 032c 232B      		or r18,r19
 549 032e FC01      		movw r30,r24
 550 0330 2083      		st Z,r18
 551 0332 00C0      		rjmp .L24
 552               	.L21:
 523:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		if (flags & IOPORT_PULL_UP) {
 553               		.loc 2 523 0
 554 0334 8C89      		ldd r24,Y+20
 555 0336 9D89      		ldd r25,Y+21
 556 0338 0196      		adiw r24,1
 557 033a 2C89      		ldd r18,Y+20
 558 033c 3D89      		ldd r19,Y+21
 559 033e 2F5F      		subi r18,-1
 560 0340 3F4F      		sbci r19,-1
 561 0342 F901      		movw r30,r18
 562 0344 2081      		ld r18,Z
 563 0346 322F      		mov r19,r18
 564 0348 2E89      		ldd r18,Y+22
 565 034a 2095      		com r18
 566 034c 2323      		and r18,r19
 567 034e FC01      		movw r30,r24
 568 0350 2083      		st Z,r18
 524:../../../platform/common/services/ioport/mega_rf/ioport.h **** 			*((uint8_t *)port + 2) |= pin_mask;
 569               		.loc 2 524 0
 570 0352 8F89      		ldd r24,Y+23
 571 0354 988D      		ldd r25,Y+24
 572 0356 8470      		andi r24,4
 573 0358 9927      		clr r25
 574 035a 892B      		or r24,r25
 575 035c 01F0      		breq .L25
 525:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		} else {
 576               		.loc 2 525 0
 577 035e 8C89      		ldd r24,Y+20
 578 0360 9D89      		ldd r25,Y+21
 579 0362 0296      		adiw r24,2
 580 0364 2C89      		ldd r18,Y+20
 581 0366 3D89      		ldd r19,Y+21
 582 0368 2E5F      		subi r18,-2
 583 036a 3F4F      		sbci r19,-1
 584 036c F901      		movw r30,r18
 585 036e 3081      		ld r19,Z
 586 0370 2E89      		ldd r18,Y+22
 587 0372 232B      		or r18,r19
 588 0374 FC01      		movw r30,r24
 589 0376 2083      		st Z,r18
 590 0378 00C0      		rjmp .L24
 591               	.L25:
 592               		.loc 2 527 0
 593 037a 8C89      		ldd r24,Y+20
 594 037c 9D89      		ldd r25,Y+21
 595 037e 0296      		adiw r24,2
 596 0380 2C89      		ldd r18,Y+20
 597 0382 3D89      		ldd r19,Y+21
 598 0384 2E5F      		subi r18,-2
 599 0386 3F4F      		sbci r19,-1
 600 0388 F901      		movw r30,r18
 601 038a 2081      		ld r18,Z
 602 038c 322F      		mov r19,r18
 603 038e 2E89      		ldd r18,Y+22
 604 0390 2095      		com r18
 605 0392 2323      		and r18,r19
 606 0394 FC01      		movw r30,r24
 607 0396 2083      		st Z,r18
 608               	.L24:
 609 0398 82E3      		ldi r24,lo8(50)
 610 039a 8C83      		std Y+4,r24
 611 039c 84E0      		ldi r24,lo8(4)
 612 039e 90E0      		ldi r25,0
 613 03a0 9E83      		std Y+6,r25
 614 03a2 8D83      		std Y+5,r24
 615 03a4 8C81      		ldd r24,Y+4
 616 03a6 8F83      		std Y+7,r24
 617               	.LBE81:
 618               	.LBE80:
 619               	.LBE73:
 620               	.LBE72:
 621               	.LBB82:
 622               	.LBB83:
 623               	.LBB84:
 624               	.LBB85:
 189:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 625               		.loc 2 189 0
 626 03a8 8F81      		ldd r24,Y+7
 627 03aa 882F      		mov r24,r24
 628 03ac 90E0      		ldi r25,0
 629 03ae 9C01      		movw r18,r24
 630 03b0 2770      		andi r18,7
 631 03b2 3327      		clr r19
 632 03b4 81E0      		ldi r24,lo8(1)
 633 03b6 90E0      		ldi r25,0
 634 03b8 00C0      		rjmp 2f
 635               		1:
 636 03ba 880F      		lsl r24
 637 03bc 991F      		rol r25
 638               		2:
 639 03be 2A95      		dec r18
 640 03c0 02F4      		brpl 1b
 641 03c2 482F      		mov r20,r24
 642 03c4 8C81      		ldd r24,Y+4
 643 03c6 8887      		std Y+8,r24
 644               	.LBE85:
 645               	.LBE84:
 646               	.LBB86:
 647               	.LBB87:
 179:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 648               		.loc 2 179 0
 649 03c8 8885      		ldd r24,Y+8
 650 03ca 8695      		lsr r24
 651 03cc 8695      		lsr r24
 652 03ce 8695      		lsr r24
 653 03d0 8987      		std Y+9,r24
 654               	.LBB88:
 655               	.LBB89:
 170:../../../platform/common/services/ioport/mega_rf/ioport.h **** }
 656               		.loc 2 170 0
 657 03d2 8985      		ldd r24,Y+9
 658 03d4 282F      		mov r18,r24
 659 03d6 30E0      		ldi r19,0
 660 03d8 C901      		movw r24,r18
 661 03da 880F      		lsl r24
 662 03dc 991F      		rol r25
 663 03de 820F      		add r24,r18
 664 03e0 931F      		adc r25,r19
 169:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	       (port * IOPORT_PORT_OFFSET)));
 665               		.loc 2 169 0
 666 03e2 8096      		adiw r24,32
 667 03e4 9B87      		std Y+11,r25
 668 03e6 8A87      		std Y+10,r24
 669 03e8 4C87      		std Y+12,r20
 670 03ea 8D81      		ldd r24,Y+5
 671 03ec 9E81      		ldd r25,Y+6
 672 03ee 9E87      		std Y+14,r25
 673 03f0 8D87      		std Y+13,r24
 674               	.LBE89:
 675               	.LBE88:
 676               	.LBE87:
 677               	.LBE86:
 678               	.LBB90:
 679               	.LBB91:
 514:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		if (flags & IOPORT_INIT_HIGH) {
 680               		.loc 2 514 0
 681 03f2 8D85      		ldd r24,Y+13
 682 03f4 9E85      		ldd r25,Y+14
 683 03f6 8170      		andi r24,1
 684 03f8 9927      		clr r25
 685 03fa 892B      		or r24,r25
 686 03fc 01F0      		breq .L29
 515:../../../platform/common/services/ioport/mega_rf/ioport.h **** 			*((uint8_t *)port + 2) |= pin_mask;
 687               		.loc 2 515 0
 688 03fe 8D85      		ldd r24,Y+13
 689 0400 9E85      		ldd r25,Y+14
 690 0402 8270      		andi r24,2
 691 0404 9927      		clr r25
 692 0406 892B      		or r24,r25
 693 0408 01F0      		breq .L30
 516:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		} else {
 694               		.loc 2 516 0
 695 040a 8A85      		ldd r24,Y+10
 696 040c 9B85      		ldd r25,Y+11
 697 040e 0296      		adiw r24,2
 698 0410 2A85      		ldd r18,Y+10
 699 0412 3B85      		ldd r19,Y+11
 700 0414 2E5F      		subi r18,-2
 701 0416 3F4F      		sbci r19,-1
 702 0418 F901      		movw r30,r18
 703 041a 3081      		ld r19,Z
 704 041c 2C85      		ldd r18,Y+12
 705 041e 232B      		or r18,r19
 706 0420 FC01      		movw r30,r24
 707 0422 2083      		st Z,r18
 708 0424 00C0      		rjmp .L31
 709               	.L30:
 518:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		}
 710               		.loc 2 518 0
 711 0426 8A85      		ldd r24,Y+10
 712 0428 9B85      		ldd r25,Y+11
 713 042a 0296      		adiw r24,2
 714 042c 2A85      		ldd r18,Y+10
 715 042e 3B85      		ldd r19,Y+11
 716 0430 2E5F      		subi r18,-2
 717 0432 3F4F      		sbci r19,-1
 718 0434 F901      		movw r30,r18
 719 0436 2081      		ld r18,Z
 720 0438 322F      		mov r19,r18
 721 043a 2C85      		ldd r18,Y+12
 722 043c 2095      		com r18
 723 043e 2323      		and r18,r19
 724 0440 FC01      		movw r30,r24
 725 0442 2083      		st Z,r18
 726               	.L31:
 521:../../../platform/common/services/ioport/mega_rf/ioport.h **** 	} else {
 727               		.loc 2 521 0
 728 0444 8A85      		ldd r24,Y+10
 729 0446 9B85      		ldd r25,Y+11
 730 0448 0196      		adiw r24,1
 731 044a 2A85      		ldd r18,Y+10
 732 044c 3B85      		ldd r19,Y+11
 733 044e 2F5F      		subi r18,-1
 734 0450 3F4F      		sbci r19,-1
 735 0452 F901      		movw r30,r18
 736 0454 3081      		ld r19,Z
 737 0456 2C85      		ldd r18,Y+12
 738 0458 232B      		or r18,r19
 739 045a FC01      		movw r30,r24
 740 045c 2083      		st Z,r18
 741               	.LBE91:
 742               	.LBE90:
 743               	.LBE83:
 744               	.LBE82:
  51:../../../board/KITRFA1/src/init.c **** 	/* On board LED initialization */
  52:../../../board/KITRFA1/src/init.c **** 	ioport_configure_pin(LED0_GPIO, IOPORT_DIR_OUTPUT | IOPORT_INIT_HIGH);
  53:../../../board/KITRFA1/src/init.c **** 	ioport_configure_pin(LED1_GPIO, IOPORT_DIR_OUTPUT | IOPORT_INIT_HIGH);
  54:../../../board/KITRFA1/src/init.c **** 	ioport_configure_pin(LED2_GPIO, IOPORT_DIR_OUTPUT | IOPORT_INIT_HIGH);
  55:../../../board/KITRFA1/src/init.c **** 
  56:../../../board/KITRFA1/src/init.c **** 	/* On board Switch initialization */
  57:../../../board/KITRFA1/src/init.c **** 	ioport_configure_pin(GPIO_PUSH_BUTTON_0,IOPORT_DIR_INPUT | IOPORT_PULL_UP);
  58:../../../board/KITRFA1/src/init.c **** 
  59:../../../board/KITRFA1/src/init.c **** #ifdef CONF_BOARD_ENABLE_USARTA0
  60:../../../board/KITRFA1/src/init.c **** 	ioport_configure_pin(USARTA0_TXD, IOPORT_DIR_OUTPUT | IOPORT_INIT_HIGH);
  61:../../../board/KITRFA1/src/init.c **** 	ioport_configure_pin(USARTA0_RXD, IOPORT_DIR_INPUT);
  62:../../../board/KITRFA1/src/init.c **** #endif
  63:../../../board/KITRFA1/src/init.c **** #ifdef CONF_BOARD_ENABLE_USARTA1
  64:../../../board/KITRFA1/src/init.c **** 	ioport_configure_pin(USARTA1_TXD, IOPORT_DIR_OUTPUT | IOPORT_INIT_HIGH);
  65:../../../board/KITRFA1/src/init.c **** 	ioport_configure_pin(USARTA1_RXD, IOPORT_DIR_INPUT);
  66:../../../board/KITRFA1/src/init.c **** #endif
  67:../../../board/KITRFA1/src/init.c **** }...
 745               		.loc 1 67 0
 746 045e 00C0      		rjmp .L34
 747               	.L29:
 748               	.LBB98:
 749               	.LBB96:
 750               	.LBB94:
 751               	.LBB92:
 523:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		if (flags & IOPORT_PULL_UP) {
 752               		.loc 2 523 0
 753 0460 8A85      		ldd r24,Y+10
 754 0462 9B85      		ldd r25,Y+11
 755 0464 0196      		adiw r24,1
 756 0466 2A85      		ldd r18,Y+10
 757 0468 3B85      		ldd r19,Y+11
 758 046a 2F5F      		subi r18,-1
 759 046c 3F4F      		sbci r19,-1
 760 046e F901      		movw r30,r18
 761 0470 2081      		ld r18,Z
 762 0472 322F      		mov r19,r18
 763 0474 2C85      		ldd r18,Y+12
 764 0476 2095      		com r18
 765 0478 2323      		and r18,r19
 766 047a FC01      		movw r30,r24
 767 047c 2083      		st Z,r18
 524:../../../platform/common/services/ioport/mega_rf/ioport.h **** 			*((uint8_t *)port + 2) |= pin_mask;
 768               		.loc 2 524 0
 769 047e 8D85      		ldd r24,Y+13
 770 0480 9E85      		ldd r25,Y+14
 771 0482 8470      		andi r24,4
 772 0484 9927      		clr r25
 773 0486 892B      		or r24,r25
 774 0488 01F0      		breq .L33
 525:../../../platform/common/services/ioport/mega_rf/ioport.h **** 		} else {
 775               		.loc 2 525 0
 776 048a 8A85      		ldd r24,Y+10
 777 048c 9B85      		ldd r25,Y+11
 778 048e 0296      		adiw r24,2
 779 0490 2A85      		ldd r18,Y+10
 780 0492 3B85      		ldd r19,Y+11
 781 0494 2E5F      		subi r18,-2
 782 0496 3F4F      		sbci r19,-1
 783 0498 F901      		movw r30,r18
 784 049a 3081      		ld r19,Z
 785 049c 2C85      		ldd r18,Y+12
 786 049e 232B      		or r18,r19
 787 04a0 FC01      		movw r30,r24
 788 04a2 2083      		st Z,r18
 789               	.LBE92:
 790               	.LBE94:
 791               	.LBE96:
 792               	.LBE98:
 793               		.loc 1 67 0
 794 04a4 00C0      		rjmp .L34
 795               	.L33:
 796               	.LBB99:
 797               	.LBB97:
 798               	.LBB95:
 799               	.LBB93:
 800               		.loc 2 527 0
 801 04a6 8A85      		ldd r24,Y+10
 802 04a8 9B85      		ldd r25,Y+11
 803 04aa 0296      		adiw r24,2
 804 04ac 2A85      		ldd r18,Y+10
 805 04ae 3B85      		ldd r19,Y+11
 806 04b0 2E5F      		subi r18,-2
 807 04b2 3F4F      		sbci r19,-1
 808 04b4 F901      		movw r30,r18
 809 04b6 2081      		ld r18,Z
 810 04b8 322F      		mov r19,r18
 811 04ba 2C85      		ldd r18,Y+12
 812 04bc 2095      		com r18
 813 04be 2323      		and r18,r19
 814 04c0 FC01      		movw r30,r24
 815 04c2 2083      		st Z,r18
 816               	.L34:
 817               	.LBE93:
 818               	.LBE95:
 819               	.LBE97:
 820               	.LBE99:
 821               		.loc 1 67 0
 822 04c4 0000      		nop
 823               	/* epilogue start */
 824 04c6 AC96      		adiw r28,44
 825 04c8 0FB6      		in __tmp_reg__,__SREG__
 826 04ca F894      		cli
 827 04cc DEBF      		out __SP_H__,r29
 828 04ce 0FBE      		out __SREG__,__tmp_reg__
 829 04d0 CDBF      		out __SP_L__,r28
 830 04d2 DF91      		pop r29
 831 04d4 CF91      		pop r28
 832 04d6 0895      		ret
 833               		.cfi_endproc
 834               	.LFE65:
 836               	.Letext0:
 837               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 838               		.file 4 "../../../platform/common/services/ioport/ioport.h"
DEFINED SYMBOLS
                            *ABS*:00000000 init.c
C:\Users\GUILHE~1\AppData\Local\Temp\ccv0Cb7q.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\ccv0Cb7q.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\ccv0Cb7q.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\ccv0Cb7q.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\ccv0Cb7q.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccv0Cb7q.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccv0Cb7q.s:13     .text:00000000 board_init

NO UNDEFINED SYMBOLS
